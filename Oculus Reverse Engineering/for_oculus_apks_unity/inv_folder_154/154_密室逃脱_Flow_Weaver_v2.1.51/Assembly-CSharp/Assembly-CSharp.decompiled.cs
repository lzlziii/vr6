using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;
using FMOD;
using FMOD.Studio;
using FMODUnity;
using FlowWeaver;
using Il2CppDummyDll;
using JetBrains.Annotations;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Sirenix.OdinInspector;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using uSignals;
using uSignals.Database;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class animationOverride : StateMachineBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int layer;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xA8FBC0", Offset = "0xA8FBC0", VA = "0xA8FBC0", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xA8FBEC", Offset = "0xA8FBEC", VA = "0xA8FBEC", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xA8FC18", Offset = "0xA8FC18", VA = "0xA8FC18")]
	public animationOverride()
	{
	}
}
[Token(Token = "0x2000003")]
public class FloatingEffect : MonoBehaviour
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float amplitude;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float frequency;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool isFloating;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool isRotating;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float damper;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xBE2A88", Offset = "0xBE2A88", VA = "0xBE2A88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xBE2CC4", Offset = "0xBE2CC4", VA = "0xBE2CC4")]
	public void SetFloating(bool _isFloating)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xBE2CD0", Offset = "0xBE2CD0", VA = "0xBE2CD0")]
	public FloatingEffect()
	{
	}
}
[Token(Token = "0x2000004")]
public class ParticleVaccumFixedPoint : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 targetPosition;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float particleSpeed;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float lifetimeTillDistance;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem particleSys;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xC2F464", Offset = "0xC2F464", VA = "0xC2F464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xC2F4BC", Offset = "0xC2F4BC", VA = "0xC2F4BC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xC2F758", Offset = "0xC2F758", VA = "0xC2F758")]
	public void StartParticles()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xC2F774", Offset = "0xC2F774", VA = "0xC2F774")]
	public void StopParticles()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xC2F790", Offset = "0xC2F790", VA = "0xC2F790")]
	public ParticleVaccumFixedPoint()
	{
	}
}
[Serializable]
[Token(Token = "0x2000005")]
public class AnimatedScaleValues
{
	[Token(Token = "0x20003FE")]
	public enum ScaleAxis
	{
		[Token(Token = "0x4001AFE")]
		all,
		[Token(Token = "0x4001AFF")]
		x,
		[Token(Token = "0x4001B00")]
		y,
		[Token(Token = "0x4001B01")]
		z
	}

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8E00B8", Offset = "0x8E00B8")]
	public float animationTime;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8E0108", Offset = "0x8E0108")]
	public float startOffset;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve scaleCurve;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScaleAxis scaleAxis;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xBDAE68", Offset = "0xBDAE68", VA = "0xBDAE68")]
	private bool IsValid(float value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xBDAE74", Offset = "0xBDAE74", VA = "0xBDAE74")]
	private bool IsValid2(float value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xBDAE80", Offset = "0xBDAE80", VA = "0xBDAE80")]
	public AnimatedScaleValues()
	{
	}
}
[Token(Token = "0x2000006")]
public class AnimatedScaleFunctions : MonoBehaviour
{
	[Token(Token = "0x20003FF")]
	private delegate Vector3 ScaleCalculation(Transform target, AnimationCurve curve, float lerp, Vector3 initialScale);

	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF6F0", Offset = "0x8DF6F0")]
	private sealed class <ScaleCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float offset;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimatedScaleFunctions <>4__this;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float animTime;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform target;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve curve;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 initialScale;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <startTime>5__2;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0xBDAD00", Offset = "0xBDAD00", VA = "0xBDAD00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0xBDAD6C", Offset = "0xBDAD6C", VA = "0xBDAD6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xBDA6C4", Offset = "0xBDA6C4", VA = "0xBDA6C4")]
		[DebuggerHidden]
		public <ScaleCoroutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xBDA6F8", Offset = "0xBDA6F8", VA = "0xBDA6F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xBDA6FC", Offset = "0xBDA6FC", VA = "0xBDA6FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xBDAD08", Offset = "0xBDAD08", VA = "0xBDAD08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScaleCalculation scaleCalculation;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lerp;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xBDA224", Offset = "0xBDA224", VA = "0xBDA224")]
	public void AnimatedScale(Transform target, Vector3 initialScale, float offset, float animTime, AnimationCurve curve, AnimatedScaleValues.ScaleAxis axis)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xBDA424", Offset = "0xBDA424", VA = "0xBDA424")]
	private Vector3 AllAxis(Transform target, AnimationCurve curve, float lerp, Vector3 initialScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xBDA4E0", Offset = "0xBDA4E0", VA = "0xBDA4E0")]
	private Vector3 XAxis(Transform target, AnimationCurve curve, float lerp, Vector3 initialScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xBDA578", Offset = "0xBDA578", VA = "0xBDA578")]
	private Vector3 YAxis(Transform target, AnimationCurve curve, float lerp, Vector3 initialScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xBDA61C", Offset = "0xBDA61C", VA = "0xBDA61C")]
	private Vector3 ZAxis(Transform target, AnimationCurve curve, float lerp, Vector3 initialScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xBDA360", Offset = "0xBDA360", VA = "0xBDA360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F3F54", Offset = "0x8F3F54")]
	private IEnumerator ScaleCoroutine(Transform target, Vector3 initialScale, float offset, float animTime, AnimationCurve curve, AnimatedScaleValues.ScaleAxis axis)
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xBDA6F0", Offset = "0xBDA6F0", VA = "0xBDA6F0")]
	public AnimatedScaleFunctions()
	{
	}
}
[Token(Token = "0x2000007")]
public class AnimatedScale : MonoBehaviour
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool playOnAwake;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool playOnEnable;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimatedScaleValues animatedScaleValues;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnimatedScaleFunctions animatedScaleFunctions;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 startScale;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xBD9DEC", Offset = "0xBD9DEC", VA = "0xBD9DEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xBD9EAC", Offset = "0xBD9EAC", VA = "0xBD9EAC")]
	public void SetupScale()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xBDA144", Offset = "0xBDA144", VA = "0xBDA144")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xBDA0EC", Offset = "0xBDA0EC", VA = "0xBDA0EC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F3FB8", Offset = "0x8F3FB8")]
	public void PlayScale()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xBDA348", Offset = "0xBDA348", VA = "0xBDA348")]
	public AnimatedScale()
	{
	}
}
[Token(Token = "0x2000008")]
public class FadeSphere : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer fadeRenderer;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float maxFade;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float goalFade;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rate;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<FadeToken> fadeTokens;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Transparency;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xBE2520", Offset = "0xBE2520", VA = "0xBE2520")]
	public FadeToken SignUpToFade(float time)
	{
		return null;
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xBE25E0", Offset = "0xBE25E0", VA = "0xBE25E0")]
	public void FadeInstantly(bool fadeIn)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xBE26F4", Offset = "0xBE26F4", VA = "0xBE26F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xBE29A4", Offset = "0xBE29A4", VA = "0xBE29A4")]
	public FadeSphere()
	{
	}
}
[Token(Token = "0x2000009")]
public class FadeToken
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeRate;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool showFade;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xBE25D0", Offset = "0xBE25D0", VA = "0xBE25D0")]
	public FadeToken()
	{
	}
}
[Token(Token = "0x200000A")]
public class cFixedRotateOnGrab : MonoBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E01B8", Offset = "0x8E01B8")]
	[SerializeField]
	private AstrolabeIsland island;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AstrolabeRing ring;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float rotationAnglePerGrab;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Astrolabe astrolabeScript;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[StateInfoIdReference]
	private int ringAngleStateId;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xACD068", Offset = "0xACD068", VA = "0xACD068")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xACD0F8", Offset = "0xACD0F8", VA = "0xACD0F8")]
	public void RotateIsland()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xACD170", Offset = "0xACD170", VA = "0xACD170")]
	private void UpdateRingState()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xACD20C", Offset = "0xACD20C", VA = "0xACD20C")]
	public cFixedRotateOnGrab()
	{
	}
}
[Token(Token = "0x200000B")]
public class uSignalTimelineAsset : PlayableAsset
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<uSignal> uSignal;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public uSignal uSignalTemp;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E027C", Offset = "0x8E027C")]
	[HideInInspector]
	public bool sendNoParamter;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool sendBool;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[HideInInspector]
	public bool boolParameter;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[HideInInspector]
	public bool sendString;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public string stringParameter;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool sendFloat;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float floatParameter;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool sendInt;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public int intParameter;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool sendVector2;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector2 vector2Parameter;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public bool sendVector3;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 vector3Parameter;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x15AF14C", Offset = "0x15AF14C", VA = "0x15AF14C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x15AF2C4", Offset = "0x15AF2C4", VA = "0x15AF2C4")]
	public uSignalTimelineAsset()
	{
	}
}
[Token(Token = "0x200000C")]
public class uSignalTimelineBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uSignal uSignal;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool sendNoParamter;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool sendBool;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool boolParameter;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool sendString;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string stringParameter;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool sendFloat;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float floatParameter;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool sendInt;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int intParameter;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool sendVector2;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 vector2Parameter;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool sendVector3;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 vector3Parameter;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool raised;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x15AF378", Offset = "0x15AF378", VA = "0x15AF378", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x15AF600", Offset = "0x15AF600", VA = "0x15AF600")]
	public uSignalTimelineBehaviour()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8DD038", Offset = "0x8DD038")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8DD038", Offset = "0x8DD038")]
public class uSignalTrack : TrackAsset
{
	[Token(Token = "0x6000029")]
	[Address(RVA = "0x15AF6B4", Offset = "0x15AF6B4", VA = "0x15AF6B4")]
	public uSignalTrack()
	{
	}
}
[Token(Token = "0x200000E")]
public class FlowPortal : MonoBehaviour
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject portal;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material portalMaterial;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dissolveAmount;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Cubemap[] flowCubemap;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xBE2D00", Offset = "0xBE2D00", VA = "0xBE2D00")]
	private void Start()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xBE2D6C", Offset = "0xBE2D6C", VA = "0xBE2D6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xBE2DE4", Offset = "0xBE2DE4", VA = "0xBE2DE4")]
	private void SwapCubeMap(int x)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xBE2E80", Offset = "0xBE2E80", VA = "0xBE2E80")]
	public FlowPortal()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD0C4", Offset = "0x8DD0C4")]
public class cGrabbableDriverBasket : MonoBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDriverGrabbed;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 grabbedPosition;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 startPosition;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Quaternion startRotation;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float offsetFromGrabPoint;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float minOffset;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float maxOffset;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private cGrabberRedux grabber;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animator chestAnimator;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float scrubSpeed;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float decaySpeed;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform lowestPointMarker;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform highestPointMarker;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float lowestY;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float highestY;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private bool caughtUpToHand;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	[SerializeField]
	private bool proppedOpen;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float progressWhenPropped;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float progressBeforeProp;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float animationProgress;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool firstTimeOpened;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float firstTimeOpenedAnimationProgress;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private UnityEvent firstTimeOpenedEvent;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject basketObject;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xAD5C10", Offset = "0xAD5C10", VA = "0xAD5C10")]
	private void Start()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xAD5CEC", Offset = "0xAD5CEC", VA = "0xAD5CEC")]
	public void SetBasketPropped(bool isOpen)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xAD5D94", Offset = "0xAD5D94", VA = "0xAD5D94")]
	public void Grabbed()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xAD5E98", Offset = "0xAD5E98", VA = "0xAD5E98")]
	public void Released()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xAD5EF8", Offset = "0xAD5EF8", VA = "0xAD5EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xAD6280", Offset = "0xAD6280", VA = "0xAD6280")]
	private void DriveAnimation(float handHeight, float offset)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xAD6410", Offset = "0xAD6410", VA = "0xAD6410")]
	private void AnimationDecay()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xAD6264", Offset = "0xAD6264", VA = "0xAD6264")]
	public static float Remap(float input, float fromBefore, float toBefore, float fromAfter, float toAfter)
	{
		return default(float);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xAD64D0", Offset = "0xAD64D0", VA = "0xAD64D0")]
	public cGrabbableDriverBasket()
	{
	}
}
[Token(Token = "0x2000010")]
public class cBindingCircleVisuals : MonoBehaviour
{
	[Token(Token = "0x6000037")]
	[Address(RVA = "0xA96300", Offset = "0xA96300", VA = "0xA96300")]
	private void Start()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xA9635C", Offset = "0xA9635C", VA = "0xA9635C")]
	public cBindingCircleVisuals()
	{
	}
}
[Token(Token = "0x2000011")]
public class cDisableAfterSeconds : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float disableAfterTime;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xAC6488", Offset = "0xAC6488", VA = "0xAC6488")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xAC6494", Offset = "0xAC6494", VA = "0xAC6494")]
	private void Update()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xAC6500", Offset = "0xAC6500", VA = "0xAC6500")]
	public cDisableAfterSeconds()
	{
	}
}
[Token(Token = "0x2000012")]
public class cSetCrackAlpha : MonoBehaviour
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color tint;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xB2FAB0", Offset = "0xB2FAB0", VA = "0xB2FAB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB2FB60", Offset = "0xB2FB60", VA = "0xB2FB60")]
	public void SetCrackAlphaLevel(int runestoneNum)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB2FC00", Offset = "0xB2FC00", VA = "0xB2FC00")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F3FC8", Offset = "0x8F3FC8")]
	public void IncrementCrackAlpha()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB2FC6C", Offset = "0xB2FC6C", VA = "0xB2FC6C")]
	public cSetCrackAlpha()
	{
	}
}
[Token(Token = "0x2000013")]
public class cAmulet : MonoBehaviour
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool ectoplasmSpawned;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xA91D8C", Offset = "0xA91D8C", VA = "0xA91D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xA91E5C", Offset = "0xA91E5C", VA = "0xA91E5C")]
	public cAmulet()
	{
	}
}
[Token(Token = "0x2000014")]
public class cArrivedInMatWorld : MonoBehaviour
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOSequence gameStartedVO;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOSequence meetingSkeletonSequence;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOSequence firstMeditationSequence;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent arrivedInMaterialWorldEvent;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate arrivedInMaterialWorldDelegate;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent unlockDreamThought2;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent unlockChestEvent;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cIdleInMaterialWorld idleVOMatWorld;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private sBool otherwhereUnlocked;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private cNecromancer necromancer;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xA924A8", Offset = "0xA924A8", VA = "0xA924A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xA92560", Offset = "0xA92560", VA = "0xA92560")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xA92584", Offset = "0xA92584", VA = "0xA92584")]
	private void ArrivedInMaterialWorld()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xA92640", Offset = "0xA92640", VA = "0xA92640")]
	public cArrivedInMatWorld()
	{
	}
}
[Token(Token = "0x2000015")]
public class cCellCandle : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject flame;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xA97AD8", Offset = "0xA97AD8", VA = "0xA97AD8")]
	public void CandleLit()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xA97AF8", Offset = "0xA97AF8", VA = "0xA97AF8")]
	public void CandleUnlit()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xA97B18", Offset = "0xA97B18", VA = "0xA97B18")]
	public cCellCandle()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD128", Offset = "0x8DD128")]
public class cChestSnapZone : MonoBehaviour
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SphereCollider snapZone;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hovering;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool femurSnapped;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cGrabbableRedux hoveringFemurGrabbable;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cShadowHandable hoveringFemurShadowhandable;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private cFemur prospect;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private cFemur hoveringFemur;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private cGrabbableRedux snappedGrabbable;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cShadowHandable snappedShadowhandable;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private cFemur snappedFemur;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOSnapID snapPointID;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cGrabbableDriverChest chestDriver;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool waitingToHover;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOGameEvent chestProppedOpenedEvent;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOGameEvent chestClosedEvent;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOGameEvent materialWorldReachedEvent;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SOGameEvent.GameEventDelegate materialWorldReachedDelegate;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject femurPrefab;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Vector3 femurStartPos;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private Quaternion femurStartRot;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private soVOEvent chestProppedVO;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private ParticleSystem hoverParticles;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private ParticleSystem snapSuccessParticles;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject quantumBurst;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xA98770", Offset = "0xA98770", VA = "0xA98770")]
	private void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xA9885C", Offset = "0xA9885C", VA = "0xA9885C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xA988E8", Offset = "0xA988E8", VA = "0xA988E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xA98B9C", Offset = "0xA98B9C", VA = "0xA98B9C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xA98C6C", Offset = "0xA98C6C", VA = "0xA98C6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xA98B3C", Offset = "0xA98B3C", VA = "0xA98B3C")]
	private void Hovering()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xA98E24", Offset = "0xA98E24", VA = "0xA98E24")]
	public void SnapItem()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xA99020", Offset = "0xA99020", VA = "0xA99020")]
	private void PlayChestProppedVO()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xA990C4", Offset = "0xA990C4", VA = "0xA990C4")]
	private void AutoPropChest()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xA98FB0", Offset = "0xA98FB0", VA = "0xA98FB0")]
	private void UnSnapItem()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xA993F4", Offset = "0xA993F4", VA = "0xA993F4")]
	public cChestSnapZone()
	{
	}
}
[Token(Token = "0x2000017")]
public class cCrow : MonoBehaviour
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator crowAnimController;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOEvent crowIdleVO;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float randomFloatValue;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E06B8", Offset = "0x8E06B8")]
	public float randomTimer;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float tempTimer;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private cSoundEffect cawSound;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private cSoundEffect shuffleSound;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xAC3384", Offset = "0xAC3384", VA = "0xAC3384")]
	private void Start()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xAC3390", Offset = "0xAC3390", VA = "0xAC3390")]
	public void CrowCommuned()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xAC33D8", Offset = "0xAC33D8", VA = "0xAC33D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xAC3478", Offset = "0xAC3478", VA = "0xAC3478")]
	public cCrow()
	{
	}
}
[Token(Token = "0x2000018")]
public class cFaerieFire : MonoBehaviour
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cSoundEffect faerieFireSound;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sBool faerieFireInLantern;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cOrphanItems orphanRef;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody rigidBody;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xACBE40", Offset = "0xACBE40", VA = "0xACBE40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xACBE5C", Offset = "0xACBE5C", VA = "0xACBE5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xACBF44", Offset = "0xACBF44", VA = "0xACBF44")]
	private void Update()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xACC080", Offset = "0xACC080", VA = "0xACC080")]
	public cFaerieFire()
	{
	}
}
[Token(Token = "0x2000019")]
public class cGlowInDarkWriting : MonoBehaviour
{
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cQuantumCandle cellCandle;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cWallLantern wallLantern;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sObjectTracker splinterTracker;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cDayNightSystem dayNightSystem;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private cSplinter splinterInScene;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Renderer transparentWallTextRend;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color hidden;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color visible;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOGameEvent materialWorldLightingChangedEvent;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate materialWorldLightingChangedDelegate;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOGameEvent materialWorldReachedEvent;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate materialWorldReachedDelegate;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private soVOEvent glowInDarkRecipeRevealed;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool matWorldReached;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject localizedGlowInDarkWritingOverlay;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro faerieBrewText;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro wineText;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro ectoplasmText;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshPro purpleFlowerText;

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xAD51CC", Offset = "0xAD51CC", VA = "0xAD51CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xAD5484", Offset = "0xAD5484", VA = "0xAD5484")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xAD54C8", Offset = "0xAD54C8", VA = "0xAD54C8")]
	private void ArrivedInMaterialWorld()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xAD5534", Offset = "0xAD5534", VA = "0xAD5534")]
	public void LightingChanged()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xAD52D8", Offset = "0xAD52D8", VA = "0xAD52D8")]
	private void DisplayText(bool isVisible)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xAD56C8", Offset = "0xAD56C8", VA = "0xAD56C8")]
	private void SetOverlayLanguage(sPlayerSettings.Language lang)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xAD5824", Offset = "0xAD5824", VA = "0xAD5824")]
	public cGlowInDarkWriting()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD18C", Offset = "0x8DD18C")]
public class cGrabbableDriverChest : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDriverGrabbed;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 grabbedPosition;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 startPosition;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float offsetFromGrabPoint;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float minOffset;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float maxOffset;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private cGrabberRedux grabber;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Animator chestAnimator;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float scrubSpeed;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float decaySpeed;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform startHeightMarker;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float lowestY;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool caughtUpToHand;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	[SerializeField]
	private bool proppedOpen;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float minProgressToProp;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float progressWhenPropped;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float animationProgress;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UnityEvent onOpen;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private UnityEvent onClosed;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private bool beenPropped;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private soVOSequence openingVoiceSequence;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private soVOEvent maybeCanPropOpen;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private soVOSequence openingShadowrealmDialogue;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private UnityEvent onChestPropped;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private UnityEvent onChestUnpropped;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 startPos;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Quaternion startRot;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private cSoundEffect chestOpenSound;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private cSoundEffect chestCloseSound;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private double cachedTime;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xAD650C", Offset = "0xAD650C", VA = "0xAD650C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xAD65E8", Offset = "0xAD65E8", VA = "0xAD65E8")]
	public void ResetGrabVolume()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xAD6640", Offset = "0xAD6640", VA = "0xAD6640")]
	public void SetChestPropped(bool isOpen)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xAD6704", Offset = "0xAD6704", VA = "0xAD6704")]
	public bool IsChestOpenEnoughForSnap()
	{
		return default(bool);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xAD6770", Offset = "0xAD6770", VA = "0xAD6770")]
	public void Grabbed()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xAD691C", Offset = "0xAD691C", VA = "0xAD691C")]
	public void Released()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xAD6928", Offset = "0xAD6928", VA = "0xAD6928")]
	private void Update()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xAD6A34", Offset = "0xAD6A34", VA = "0xAD6A34")]
	private void DriveAnimation(float offset)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xAD6BE8", Offset = "0xAD6BE8", VA = "0xAD6BE8")]
	private void AnimationDecay()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xAD6CCC", Offset = "0xAD6CCC", VA = "0xAD6CCC")]
	public static float Remap(float input, float fromBefore, float toBefore, float fromAfter, float toAfter)
	{
		return default(float);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xAD6CE8", Offset = "0xAD6CE8", VA = "0xAD6CE8")]
	public cGrabbableDriverChest()
	{
	}
}
[Token(Token = "0x200001B")]
public class cHangingHook : MonoBehaviour
{
	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject purpleBaublePrefab;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject lanternInstance;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sBool baubleSpawned;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform lanternSpawnPoint;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private cSnapPoint snapTransform;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xB67624", Offset = "0xB67624", VA = "0xB67624")]
	private void Start()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xB6767C", Offset = "0xB6767C", VA = "0xB6767C")]
	private void UpdateHookStatus()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xB6774C", Offset = "0xB6774C", VA = "0xB6774C")]
	private void SpawnAndSnapBauble()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xB678C4", Offset = "0xB678C4", VA = "0xB678C4")]
	private void SpawnBaubleAndDontSnap()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xB679FC", Offset = "0xB679FC", VA = "0xB679FC")]
	private void SnapLantern()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xB67B18", Offset = "0xB67B18", VA = "0xB67B18")]
	public cHangingHook()
	{
	}
}
[Token(Token = "0x200001C")]
public class cIdleInMaterialWorld : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float playFaerieBrewHintAfterSeconds;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOEvent faerieBrewHint;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOEvent glowInDarkWritingSeen;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private soVOSequence spiritFreedVO;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOSequence brewCompletedVO;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool timing;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xB6B14C", Offset = "0xB6B14C", VA = "0xB6B14C")]
	public void MaterialWorldReached()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xB6B210", Offset = "0xB6B210", VA = "0xB6B210")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xB6B218", Offset = "0xB6B218", VA = "0xB6B218")]
	private void Update()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xB6B1FC", Offset = "0xB6B1FC", VA = "0xB6B1FC")]
	private void StartTimer()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB6B29C", Offset = "0xB6B29C", VA = "0xB6B29C")]
	public cIdleInMaterialWorld()
	{
	}
}
[Token(Token = "0x200001D")]
public class cLantern : MonoBehaviour
{
	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF700", Offset = "0x8DF700")]
	private sealed class <SnapFaerieFire>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider faerieFire;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public cLantern <>4__this;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0xB6D954", Offset = "0xB6D954", VA = "0xB6D954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0xB6D9C0", Offset = "0xB6D9C0", VA = "0xB6D9C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xB6D708", Offset = "0xB6D708", VA = "0xB6D708")]
		[DebuggerHidden]
		public <SnapFaerieFire>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xB6D7DC", Offset = "0xB6D7DC", VA = "0xB6D7DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xB6D7E0", Offset = "0xB6D7E0", VA = "0xB6D7E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xB6D95C", Offset = "0xB6D95C", VA = "0xB6D95C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject faerieFireInLantern;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent fairyFireOnHook;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent lanternOnHook;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public sBool faerieFireInLanternBool;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOEvent emptyLanternGrabbedVO;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem snapSuccessParticles;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xB6D354", Offset = "0xB6D354", VA = "0xB6D354")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xB6D370", Offset = "0xB6D370", VA = "0xB6D370")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xB6D688", Offset = "0xB6D688", VA = "0xB6D688")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F3FD8", Offset = "0x8F3FD8")]
	private IEnumerator SnapFaerieFire(Collider faerieFire)
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB6D734", Offset = "0xB6D734", VA = "0xB6D734")]
	public void LanternGrabbed()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB6D794", Offset = "0xB6D794", VA = "0xB6D794")]
	public void FaerieFireCheck()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB6D7D4", Offset = "0xB6D7D4", VA = "0xB6D7D4")]
	public cLantern()
	{
	}
}
[Token(Token = "0x200001E")]
public class cNecromancer : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject necromancerVisual;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOSequence necromancerFirstMeeting;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOSequence necromancerFinaleMeeting;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent necromancerLeave;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate necromancerLeaveDelegate;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator necroAnimator;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Animator doorAnimator;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cSoundEffect doorPanelCloseSound;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private cSoundEffect doorPanelOpenSound;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private cSoundEffect necromancerLeaveSound;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cSoundEffect necromancerMusicCue1;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private cSoundEffect endgameMusicCue;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xB7503C", Offset = "0xB7503C", VA = "0xB7503C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xB750C0", Offset = "0xB750C0", VA = "0xB750C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xB750E4", Offset = "0xB750E4", VA = "0xB750E4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F403C", Offset = "0x8F403C")]
	public void ShowNecromancer()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB75290", Offset = "0xB75290", VA = "0xB75290")]
	public void NecromancerFirstMeetingDialogue()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB752CC", Offset = "0xB752CC", VA = "0xB752CC")]
	public void ShowNecromancerFinale()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB7538C", Offset = "0xB7538C", VA = "0xB7538C")]
	public void HideNecromancer()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB75418", Offset = "0xB75418", VA = "0xB75418")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F404C", Offset = "0x8F404C")]
	private void NecromancerLeave()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB754A8", Offset = "0xB754A8", VA = "0xB754A8")]
	public cNecromancer()
	{
	}
}
[Token(Token = "0x200001F")]
public class Cobweb : MonoBehaviour
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject rat;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xBDECA0", Offset = "0xBDECA0", VA = "0xBDECA0")]
	public void ShowRat()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xBDECC0", Offset = "0xBDECC0", VA = "0xBDECC0")]
	public Cobweb()
	{
	}
}
[Token(Token = "0x2000020")]
public class cQuantumChestSelector : MonoBehaviour
{
	[Token(Token = "0x2000402")]
	public enum Side
	{
		[Token(Token = "0x4001B10")]
		left,
		[Token(Token = "0x4001B11")]
		right
	}

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Side side;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xB01D84", Offset = "0xB01D84", VA = "0xB01D84")]
	public cQuantumChestSelector()
	{
	}
}
[Token(Token = "0x2000021")]
public class cRat : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator ratMovementAnimController;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator ratAnimController;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator wallSkeletonAnimController;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cSoundEffect ratIdleSFX;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private cSoundEffect ratMoveSFX;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private cSoundEffect ratScratchSFX;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOEvent removePlanksHintVO;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private soVOEvent removePlanksHint2VO;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private soVOEvent thankRatVO;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private sBool cobwebBurnt;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private sBool skeletonFell;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float randomFloatValue;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0C40", Offset = "0x8E0C40")]
	public float randomTimer;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float tempTimer;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOGameEvent skeletonHasFallen;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xB03BB4", Offset = "0xB03BB4", VA = "0xB03BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xB03BC0", Offset = "0xB03BC0", VA = "0xB03BC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xB03C44", Offset = "0xB03C44", VA = "0xB03C44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xB03CE4", Offset = "0xB03CE4", VA = "0xB03CE4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F405C", Offset = "0x8F405C")]
	public void RatScratch()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xB03D50", Offset = "0xB03D50", VA = "0xB03D50")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F406C", Offset = "0x8F406C")]
	public void RatMove()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xB03DB0", Offset = "0xB03DB0", VA = "0xB03DB0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F407C", Offset = "0x8F407C")]
	public void RatStop()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xB03E10", Offset = "0xB03E10", VA = "0xB03E10")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F408C", Offset = "0x8F408C")]
	public void RatWall()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xB03BE8", Offset = "0xB03BE8", VA = "0xB03BE8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F409C", Offset = "0x8F409C")]
	public void RatSpawn()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xB03F7C", Offset = "0xB03F7C", VA = "0xB03F7C")]
	public void TriggerSkeletonFalling()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xB03FD8", Offset = "0xB03FD8", VA = "0xB03FD8")]
	public cRat()
	{
	}
}
[Token(Token = "0x2000022")]
public class cSkeleton : MonoBehaviour
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOEvent spiritHasDisappearedVOEvent;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sBool hasCrumbled;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sBool readyToCrumble;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody skullRb;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent onSkeletonCrumble;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOEvent skullAttachedVOEvent;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject voTarget;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Animator skeletonAnim;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject skullAttachPoint;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private cSoundEffect skullTurnSound;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cSoundEffect skullRattleSound;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private cSoundEffect skeletonCrumbleSound;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private cShudder shudder;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject skeletonSitting;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject skeletonCrumbled;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject quantumBurst;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xB36FD4", Offset = "0xB36FD4", VA = "0xB36FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xB371F4", Offset = "0xB371F4", VA = "0xB371F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB37380", Offset = "0xB37380", VA = "0xB37380")]
	public void CrumbleWhenGazedUpon()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xB37168", Offset = "0xB37168", VA = "0xB37168")]
	private void Crumble()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB37384", Offset = "0xB37384", VA = "0xB37384")]
	public void CrumbleBones()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB373C8", Offset = "0xB373C8", VA = "0xB373C8")]
	public void SkullAttached()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB3743C", Offset = "0xB3743C", VA = "0xB3743C")]
	private void SkullTurnAndSpeak()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB374A4", Offset = "0xB374A4", VA = "0xB374A4")]
	public void SkullFinishedTurning()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xB37030", Offset = "0xB37030", VA = "0xB37030")]
	public void AutoAttachSkull()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xB374E0", Offset = "0xB374E0", VA = "0xB374E0")]
	public void PlaySkullRattleSound()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xB37518", Offset = "0xB37518", VA = "0xB37518")]
	public cSkeleton()
	{
	}
}
[Token(Token = "0x2000023")]
public class cWillDragonKillMe : MonoBehaviour
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOEvent cantFlowToShadowrealmVO;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOEvent cantFlowToShadowrealmMetDragon;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOEvent torchLitVO;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private soVOSequence dragonCommunedSequence;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private cGrabbableRedux shadowrealmSphereGrabbable;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB44F1C", Offset = "0xB44F1C", VA = "0xB44F1C")]
	public void CheckFlowConditions()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB44FEC", Offset = "0xB44FEC", VA = "0xB44FEC")]
	public cWillDragonKillMe()
	{
	}
}
[Token(Token = "0x2000024")]
public class cWoodPlanks : MonoBehaviour
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject tempBurningEffect;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject plankVisual;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject quantumParticles;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float burnTime;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool burning;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool burned;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent OnPlanksBurned;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOEvent[] onFlameTooSmall;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float cooldowntime;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB45934", Offset = "0xB45934", VA = "0xB45934")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xB459BC", Offset = "0xB459BC", VA = "0xB459BC")]
	public void TryBurnSmallFlame()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xB45A50", Offset = "0xB45A50", VA = "0xB45A50")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xB45A90", Offset = "0xB45A90", VA = "0xB45A90")]
	public void StartBurn()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xB45B24", Offset = "0xB45B24", VA = "0xB45B24")]
	public void EndBurn()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB45C34", Offset = "0xB45C34", VA = "0xB45C34")]
	private void DisableParticles()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB45C54", Offset = "0xB45C54", VA = "0xB45C54")]
	public cWoodPlanks()
	{
	}
}
[Token(Token = "0x2000025")]
public class cWoodPlanksSmallFlameDetector : MonoBehaviour
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent onTryBurn;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x15A8E00", Offset = "0x15A8E00", VA = "0x15A8E00")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x15A8ED8", Offset = "0x15A8ED8", VA = "0x15A8ED8")]
	public cWoodPlanksSmallFlameDetector()
	{
	}
}
[Token(Token = "0x2000026")]
public class cQuantumChest : MonoBehaviour
{
	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF710", Offset = "0x8DF710")]
	private sealed class <DisableUnlockableObjects>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cQuantumChest <>4__this;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0xB017C4", Offset = "0xB017C4", VA = "0xB017C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xB01830", Offset = "0xB01830", VA = "0xB01830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xB01164", Offset = "0xB01164", VA = "0xB01164")]
		[DebuggerHidden]
		public <DisableUnlockableObjects>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xB0160C", Offset = "0xB0160C", VA = "0xB0160C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xB01610", Offset = "0xB01610", VA = "0xB01610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xB017CC", Offset = "0xB017CC", VA = "0xB017CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF720", Offset = "0x8DF720")]
	private sealed class <SpawnObject>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cQuantumChest <>4__this;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public sQuantumChestObject objectToSpawn;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int index;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xB01D10", Offset = "0xB01D10", VA = "0xB01D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B64")]
			[Address(RVA = "0xB01D7C", Offset = "0xB01D7C", VA = "0xB01D7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xB0152C", Offset = "0xB0152C", VA = "0xB0152C")]
		[DebuggerHidden]
		public <SpawnObject>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xB01838", Offset = "0xB01838", VA = "0xB01838", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xB0183C", Offset = "0xB0183C", VA = "0xB0183C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xB01D18", Offset = "0xB01D18", VA = "0xB01D18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cQuantumNumber[] quantumNums;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sQuantumChestObject[] unlockableObjects;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] objects;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private sQuantumChestObject purpleBauble;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private sQuantumChestObject faerieFire;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private sBool purpleBaubleSpawned;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private sBool faerieFireInLantern;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool unlockOnce;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private FloatingEffect floatContainer;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator anim;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float spawnTime;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaitForSeconds spawnTimeWFS;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject spawnedObject;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody spawnedRb;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private cSoundEffect openSoundEffect;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private sBool unlockedDreamThought4;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOGameEvent unlockDreamThought4;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private soVOSequence firstFaerieVisitVO;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB00FE4", Offset = "0xB00FE4", VA = "0xB00FE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB010F0", Offset = "0xB010F0", VA = "0xB010F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F40AC", Offset = "0x8F40AC")]
	private IEnumerator DisableUnlockableObjects()
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB01190", Offset = "0xB01190", VA = "0xB01190")]
	public void CheckCombination()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB012C0", Offset = "0xB012C0", VA = "0xB012C0")]
	private int[] GetActiveCombination()
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB01404", Offset = "0xB01404", VA = "0xB01404")]
	private void OpenChest()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB014D0", Offset = "0xB014D0", VA = "0xB014D0")]
	private void CloseChest()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xB0137C", Offset = "0xB0137C", VA = "0xB0137C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4110", Offset = "0x8F4110")]
	private IEnumerator SpawnObject(sQuantumChestObject objectToSpawn, int index)
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB01558", Offset = "0xB01558", VA = "0xB01558")]
	private void SpawnedObjectGrabbed()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xB014B4", Offset = "0xB014B4", VA = "0xB014B4")]
	private void PlayOpenChestAudio()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xB015FC", Offset = "0xB015FC", VA = "0xB015FC")]
	public cQuantumChest()
	{
	}
}
[Token(Token = "0x2000027")]
public class cQuantumNumber : MonoBehaviour
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int currentNumber;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro currentNumberText;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color hoverColor;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color startColor;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool isHandHovering;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private cQuantumChestSelector hoveringHand;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer myRend;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SOInputHandler.Hand hoveringHandSide;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cQuantumChest quantumChest;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOInputEvent grabPressedEvent;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOInputEvent.InputEventDelegate grabPressedDelegate;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private cSoundEffect dialSoundEffect;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isNumLocked;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private soVOEvent firstTouchVO;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xB02264", Offset = "0xB02264", VA = "0xB02264")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xB02368", Offset = "0xB02368", VA = "0xB02368")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xB02500", Offset = "0xB02500", VA = "0xB02500")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xB02454", Offset = "0xB02454", VA = "0xB02454")]
	private void SetHandHovering(bool isHovering)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xB0262C", Offset = "0xB0262C", VA = "0xB0262C")]
	private void GrabPressed(SOInputHandler.Hand handSide)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xB02648", Offset = "0xB02648", VA = "0xB02648")]
	private void CycleNumber()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xB02704", Offset = "0xB02704", VA = "0xB02704")]
	public void Lock(bool isLocked)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB0271C", Offset = "0xB0271C", VA = "0xB0271C")]
	public int GetNumber()
	{
		return default(int);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB026E8", Offset = "0xB026E8", VA = "0xB026E8")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xB02724", Offset = "0xB02724", VA = "0xB02724")]
	public cQuantumNumber()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DD1F0", Offset = "0x8DD1F0")]
public class sQuantumChestObject : ScriptableObject
{
	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int[] combo;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isUnlocked;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject prefabToSpawn;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool unlockAllowed;

	[Token(Token = "0x17000001")]
	public bool IsUnlocked
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x15ACFF4", Offset = "0x15ACFF4", VA = "0x15ACFF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x15ACFFC", Offset = "0x15ACFFC", VA = "0x15ACFFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public GameObject PrefabToSpawn
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x15AD008", Offset = "0x15AD008", VA = "0x15AD008")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x15ACFE8", Offset = "0x15ACFE8", VA = "0x15ACFE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x15AD010", Offset = "0x15AD010", VA = "0x15AD010")]
	public bool CompareCombination(int[] sequence)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x15AD100", Offset = "0x15AD100", VA = "0x15AD100")]
	public int[] CheckCombo()
	{
		return null;
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x15AD108", Offset = "0x15AD108", VA = "0x15AD108")]
	public sQuantumChestObject()
	{
	}
}
[Token(Token = "0x2000029")]
public class cAcorn : MonoBehaviour
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool saplingGrown;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sBool acornPlantedSBool;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sBool acornGrown;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool acornPlanted;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOEvent deadAcorn;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOEvent deadAcorn2;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOEvent acornInFeylandsVO;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private soVOEvent acornPlantedVO;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent feylandsReachedEvent;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate feylandsReachedDelegate;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOGameEvent shadowrealmReachedEvent;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate shadowrealmReachedDelegate;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject driedAcornGameObject;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject freshAcornGameObject;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject sproutGameObject;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject saplingGameObject;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject feylandsRunestone;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private cGrabbableRedux acornGrabbable;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private cShadowHandable acornShadowHandable;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private cGazeTarget gazeScript;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SOGameEvent acornShadowHandableEvent;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate acornShadowHandableDelegate;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private cSoundEffect acornMagicSound;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private cSoundEffect acornPlantedDirtMoundSound;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private cSoundEffect sproutsAppearSound;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float animationTime;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform dirtTransform;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent reactToDirt;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public sObjectTracker acornTracker;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cAcorn instance;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xA90208", Offset = "0xA90208", VA = "0xA90208")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xA90388", Offset = "0xA90388", VA = "0xA90388")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xA90664", Offset = "0xA90664", VA = "0xA90664")]
	public void ReshowRune()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xA906C0", Offset = "0xA906C0", VA = "0xA906C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xA90718", Offset = "0xA90718", VA = "0xA90718")]
	public void AcornGrabbedVO()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xA90770", Offset = "0xA90770", VA = "0xA90770")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xA90988", Offset = "0xA90988", VA = "0xA90988")]
	private void ShadowrealmAcorn()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xA909EC", Offset = "0xA909EC", VA = "0xA909EC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4174", Offset = "0x8F4174")]
	private void FreshAcorn()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xA90BDC", Offset = "0xA90BDC", VA = "0xA90BDC")]
	public void PlantAcorn()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xA90864", Offset = "0xA90864", VA = "0xA90864")]
	private void VerifyAndPlantAcorn()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xA90D24", Offset = "0xA90D24", VA = "0xA90D24")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4184", Offset = "0x8F4184")]
	public void GrowAcorn()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xA90E58", Offset = "0xA90E58", VA = "0xA90E58")]
	public void GrowSapling()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xA90F60", Offset = "0xA90F60", VA = "0xA90F60")]
	public void ShowRunestone()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xA90F80", Offset = "0xA90F80", VA = "0xA90F80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xA9105C", Offset = "0xA9105C", VA = "0xA9105C")]
	private void EnableShadowHandable()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xA91148", Offset = "0xA91148", VA = "0xA91148")]
	public cAcorn()
	{
	}
}
[Token(Token = "0x200002A")]
public class cAcornTile : MonoBehaviour
{
	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _defaultPos;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float enableDistance;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent acornShadowHandable;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xA91158", Offset = "0xA91158", VA = "0xA91158")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xA91194", Offset = "0xA91194", VA = "0xA91194")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xA9129C", Offset = "0xA9129C", VA = "0xA9129C")]
	public cAcornTile()
	{
	}
}
[Token(Token = "0x200002B")]
public class cDragonLeft : MonoBehaviour
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cShadowDragon shadowDragonScript;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xAC6B80", Offset = "0xAC6B80", VA = "0xAC6B80")]
	public void DragonLeft()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xAC6B9C", Offset = "0xAC6B9C", VA = "0xAC6B9C")]
	public cDragonLeft()
	{
	}
}
[Token(Token = "0x200002C")]
public class cFemur : MonoBehaviour
{
	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOSnapID snapID;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public sObjectTracker femurTracker;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOEvent femurGrabbedVO;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xACC62C", Offset = "0xACC62C", VA = "0xACC62C")]
	public bool CompareSnapIDs(SOSnapID snapPointID)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xACC6A8", Offset = "0xACC6A8", VA = "0xACC6A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xACC7C4", Offset = "0xACC7C4", VA = "0xACC7C4")]
	public void GetReferences()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xACC834", Offset = "0xACC834", VA = "0xACC834")]
	public void Snap()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xACC8BC", Offset = "0xACC8BC", VA = "0xACC8BC")]
	public void UnSnap()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xACC948", Offset = "0xACC948", VA = "0xACC948")]
	public void HandleFemurGrabbedVO()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xACCA44", Offset = "0xACCA44", VA = "0xACCA44")]
	public cFemur()
	{
	}
}
[Token(Token = "0x200002D")]
public class cFemurVOCheck : MonoBehaviour
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOSequence arrivedInSRSequence;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xACCA4C", Offset = "0xACCA4C", VA = "0xACCA4C")]
	public void femurCheck()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xACCAC8", Offset = "0xACCAC8", VA = "0xACCAC8")]
	public cFemurVOCheck()
	{
	}
}
[Token(Token = "0x200002E")]
public class cGlowTarget : MonoBehaviour
{
	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int materialIndex;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform glowTarget;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinnedMeshRenderer sMeshRenderer;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string findOnEnable;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int GlowPosition;

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xAD582C", Offset = "0xAD582C", VA = "0xAD582C")]
	private void FindTransformToTrack()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xAD5918", Offset = "0xAD5918", VA = "0xAD5918")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xAD5A10", Offset = "0xAD5A10", VA = "0xAD5A10")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xAD5B9C", Offset = "0xAD5B9C", VA = "0xAD5B9C")]
	public cGlowTarget()
	{
	}
}
[Token(Token = "0x200002F")]
public class cQuantumCage : MonoBehaviour
{
	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool hasBeenOpened;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject openGameObject;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject closedGameObject;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent firstTimeOpened;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOGameEvent shadowrealmReachedEvent;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate shadowrealmReachedDelegate;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private cGazeTarget cageGazeTarget;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cShudder shudder;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Animator darknessAnim;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private cSoundEffect swirlingDarknessSound;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cSoundEffect swirlingDarknessFly;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private cSoundEffect chestOpenSound;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject smokeEffectClosed;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject smokeEffectOpen;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static cQuantumCage Instance;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB009E8", Offset = "0xB009E8", VA = "0xB009E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB00AB4", Offset = "0xB00AB4", VA = "0xB00AB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xB00B38", Offset = "0xB00B38", VA = "0xB00B38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xB00B5C", Offset = "0xB00B5C", VA = "0xB00B5C")]
	private void UpdateQuantumState()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB00CA0", Offset = "0xB00CA0", VA = "0xB00CA0")]
	private void ReadyToReleaseDarknessOnGaze()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xB00D30", Offset = "0xB00D30", VA = "0xB00D30")]
	public void FreeSwirlingDarkness()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xB00DF4", Offset = "0xB00DF4", VA = "0xB00DF4")]
	public cQuantumCage()
	{
	}
}
[Token(Token = "0x2000030")]
public class cShadowDragon : MonoBehaviour
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool isSkeletalTorchLit;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject farDragon;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject closeDragon;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject closeDragonHead;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject prism;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOSequence dragonCommunedDialogue;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOEvent prismRevealedVO;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public soVOEvent dragonLeftVO;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public soVOEvent prismGrabbedVO;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public soVOEvent flowWeaverScream;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cSoundEffect dragonMusicCue;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public soVOSequence torchLitVO;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float secondsBeforeFlowWeaverScreamVO;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private cSoundEffect dragonBreaksWallSoundEffect;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOGameEvent revealPrismEvent;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate revealPrismDelegate;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOGameEvent dragonLeaveEvent;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate dragonLeaveDelegate;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SOGameEvent torchLitVOFinished;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate torchLitVOFinishedDelegate;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private cShadowDragonAnimations shadowDragonAnimationScript;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private cSoundEffect dragonRoarBig;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private cSoundEffect dragonClimbDown;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float roarDuration;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Collider communeCollider;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xB2FD40", Offset = "0xB2FD40", VA = "0xB2FD40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xB2FE94", Offset = "0xB2FE94", VA = "0xB2FE94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xB2FED8", Offset = "0xB2FED8", VA = "0xB2FED8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4194", Offset = "0x8F4194")]
	public void DragonArrive()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xB30108", Offset = "0xB30108", VA = "0xB30108")]
	public void FloweWeaverScreamVO()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB30164", Offset = "0xB30164", VA = "0xB30164")]
	public void FlowWeaverScreamFinished()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB301CC", Offset = "0xB301CC", VA = "0xB301CC")]
	public void PlayTorchLitVO()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB30208", Offset = "0xB30208", VA = "0xB30208")]
	public void EnableCommune()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB30228", Offset = "0xB30228", VA = "0xB30228")]
	public void PlayDragonRoar()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB30240", Offset = "0xB30240", VA = "0xB30240")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F41A4", Offset = "0x8F41A4")]
	public void DragonArrivedSpawned()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB30388", Offset = "0xB30388", VA = "0xB30388")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F41B4", Offset = "0x8F41B4")]
	public void DragonCommuned()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB303E4", Offset = "0xB303E4", VA = "0xB303E4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F41C4", Offset = "0x8F41C4")]
	public void DragonLeaving()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB3051C", Offset = "0xB3051C", VA = "0xB3051C")]
	private void PlayDragonLeftVO()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB30558", Offset = "0xB30558", VA = "0xB30558")]
	public void HideDragons()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB3059C", Offset = "0xB3059C", VA = "0xB3059C")]
	public void RevealPrism()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB306E4", Offset = "0xB306E4", VA = "0xB306E4")]
	public cShadowDragon()
	{
	}
}
[Token(Token = "0x2000031")]
public class cShadowDragonAnimations : MonoBehaviour
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cShadowDragon shadowDragonScript;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator shadowDragonController;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator wallAnimationController;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent talkingAnimEvent;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate talkingAnimDelegate;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent shiftWeightAnimEvent;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate shiftWeightAnimDelegate;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOGameEvent idleAnimEvent;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate idleAnimDelegate;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOGameEvent line1AnimEvent;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate line1AnimDelegate;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent line2AnimEvent;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate line2AnimDelegate;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOGameEvent line3AnimEvent;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate line3AnimDelegate;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SOGameEvent line4AnimEvent;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate line4AnimDelegate;

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB306F8", Offset = "0xB306F8", VA = "0xB306F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xB308EC", Offset = "0xB308EC", VA = "0xB308EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xB30090", Offset = "0xB30090", VA = "0xB30090")]
	public void TriggerEntrance()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB30994", Offset = "0xB30994", VA = "0xB30994")]
	public void WallAlreadyBroken()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB309F4", Offset = "0xB309F4", VA = "0xB309F4")]
	public void TriggerLine1()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB30A54", Offset = "0xB30A54", VA = "0xB30A54")]
	public void TriggerLine2()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB30AD4", Offset = "0xB30AD4", VA = "0xB30AD4")]
	public void TriggerLine3()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xB30B34", Offset = "0xB30B34", VA = "0xB30B34")]
	public void TriggerLine4()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xB30B38", Offset = "0xB30B38", VA = "0xB30B38")]
	public void TriggerTalking()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB30308", Offset = "0xB30308", VA = "0xB30308")]
	public void TriggerIdle()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB302A4", Offset = "0xB302A4", VA = "0xB302A4")]
	public void TriggerSpawned()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xB30A58", Offset = "0xB30A58", VA = "0xB30A58")]
	public void TriggerShiftWeight()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xB30648", Offset = "0xB30648", VA = "0xB30648")]
	public void TriggerPlanarKey()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xB30480", Offset = "0xB30480", VA = "0xB30480")]
	public void TriggerLeaveTower()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB30B98", Offset = "0xB30B98", VA = "0xB30B98")]
	public cShadowDragonAnimations()
	{
	}
}
[Token(Token = "0x2000032")]
public class cShadowHandTutorial : MonoBehaviour
{
	[Token(Token = "0x2000405")]
	public enum Step
	{
		[Token(Token = "0x4001B1B")]
		start,
		[Token(Token = "0x4001B1C")]
		shadowHandPrimed,
		[Token(Token = "0x4001B1D")]
		shadowHandCast,
		[Token(Token = "0x4001B1E")]
		shadowHandMoved
	}

	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF730", Offset = "0x8DF730")]
	private sealed class <BackToMaterialRealmToEndTutorial>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cShadowHandTutorial <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B68")]
			[Address(RVA = "0xB33954", Offset = "0xB33954", VA = "0xB33954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xB339C0", Offset = "0xB339C0", VA = "0xB339C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xB337FC", Offset = "0xB337FC", VA = "0xB337FC")]
		[DebuggerHidden]
		public <BackToMaterialRealmToEndTutorial>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xB33874", Offset = "0xB33874", VA = "0xB33874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xB33878", Offset = "0xB33878", VA = "0xB33878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xB3395C", Offset = "0xB3395C", VA = "0xB3395C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sTutorial primeSpellStep;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sTutorial castSpellStep;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sTutorial moveObjectStep;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Step currentStep;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isStarted;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isGrabbing;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOGameEvent primed;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent cast;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent tutorialComplete;

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB33564", Offset = "0xB33564", VA = "0xB33564")]
	public void StartShadowHandTutorial()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB336F8", Offset = "0xB336F8", VA = "0xB336F8")]
	public void EndShadowHandTutorial()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB32694", Offset = "0xB32694", VA = "0xB32694")]
	public void ShadowHandPrimed()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB32768", Offset = "0xB32768", VA = "0xB32768")]
	public void ShadowHandUnprimed()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB32EF4", Offset = "0xB32EF4", VA = "0xB32EF4")]
	public void ThumbstickMoved()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB32A6C", Offset = "0xB32A6C", VA = "0xB32A6C")]
	public void ShadowHandGrabbed()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB32C48", Offset = "0xB32C48", VA = "0xB32C48")]
	public void ShadowHandReleased()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB33738", Offset = "0xB33738", VA = "0xB33738")]
	public Step GetStep()
	{
		return default(Step);
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB33580", Offset = "0xB33580", VA = "0xB33580")]
	private void ChangeStep(Step newStep)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB33788", Offset = "0xB33788", VA = "0xB33788")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F41D4", Offset = "0x8F41D4")]
	private IEnumerator BackToMaterialRealmToEndTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xB33740", Offset = "0xB33740", VA = "0xB33740")]
	public void ResetTutorial(sTutorial newTutorial)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB3386C", Offset = "0xB3386C", VA = "0xB3386C")]
	public cShadowHandTutorial()
	{
	}
}
[Token(Token = "0x2000033")]
public class cShadowNecromancer : MonoBehaviour
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator shadowNecroAnim;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOSceneManager skybridgeSO;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB34304", Offset = "0xB34304", VA = "0xB34304")]
	private void Start()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xB34354", Offset = "0xB34354", VA = "0xB34354")]
	public void WinePlaced()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xB34358", Offset = "0xB34358", VA = "0xB34358")]
	public void TriggerWineWalk()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB343B4", Offset = "0xB343B4", VA = "0xB343B4")]
	public void WalkBackCompleted()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB343DC", Offset = "0xB343DC", VA = "0xB343DC")]
	public cShadowNecromancer()
	{
	}
}
[Token(Token = "0x2000034")]
public class cShadowrealmIdleVO : MonoBehaviour
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float playChillLineAfterSeconds;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float playIdleLinesAfterSeconds;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float playFirstDragonRoarAfterSeconds;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float playSubsequentDragonRoarsAfterSeconds;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float chillLineTimer;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float idleLineTimer;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float dragonRoarTimer;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOEvent[] crateHints;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOEvent amuletHint;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOEvent chillLine;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private sBool hasQuantumCageBeenOpened;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private sBool ectoplasmSpawned;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOGameEvent flowReachedEvent;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SOGameEvent.GameEventDelegate flowReachedDelegate;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private soVOSequence arrivedInShadowrealm;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOGameEvent beginAttentionParticles;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float waitTimeBeforeStart;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject spirit;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject ectoplasm;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private sBool ectoplasmInDais;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private cSoundEffect dragonRoarDistant;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject closeDragon;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xB34478", Offset = "0xB34478", VA = "0xB34478")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xB34508", Offset = "0xB34508", VA = "0xB34508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xB3450C", Offset = "0xB3450C", VA = "0xB3450C")]
	private void InitializeShadowrealm()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xB34588", Offset = "0xB34588", VA = "0xB34588")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xB345AC", Offset = "0xB345AC", VA = "0xB345AC")]
	private void FlowReached()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB3464C", Offset = "0xB3464C", VA = "0xB3464C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB34678", Offset = "0xB34678", VA = "0xB34678")]
	private void IdleLineTimer()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB346C8", Offset = "0xB346C8", VA = "0xB346C8")]
	private void ChillLineTimer()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB34718", Offset = "0xB34718", VA = "0xB34718")]
	private void DragonRoarTimer()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xB34818", Offset = "0xB34818", VA = "0xB34818")]
	public void PlayRoarDistant()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xB34768", Offset = "0xB34768", VA = "0xB34768")]
	private void PlayIdleLine()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB347DC", Offset = "0xB347DC", VA = "0xB347DC")]
	private void PlayChillLine()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xB34860", Offset = "0xB34860", VA = "0xB34860")]
	private void PlayCrateLine()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xB34938", Offset = "0xB34938", VA = "0xB34938")]
	public cShadowrealmIdleVO()
	{
	}
}
[Token(Token = "0x2000035")]
public class cSkeletalTorch : MonoBehaviour
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOEvent torchCommunedVO;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent arrivedInShadowrealmEvent;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate arrivedInShadowrealmDelegate;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem torchBurningEffect;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject quantumParticles;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject protectiveLight;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private cShadowDragon shadowDragon;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cSoundEffect burningSoundEffect;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private sBool isSkeletalTorchLit;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xB36C38", Offset = "0xB36C38", VA = "0xB36C38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xB36CBC", Offset = "0xB36CBC", VA = "0xB36CBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xB36CE0", Offset = "0xB36CE0", VA = "0xB36CE0")]
	public void OnCommuned()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xB36D1C", Offset = "0xB36D1C", VA = "0xB36D1C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4238", Offset = "0x8F4238")]
	public void ArrivedInFlow()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xB36D98", Offset = "0xB36D98", VA = "0xB36D98")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4248", Offset = "0x8F4248")]
	private void FaerieFireOnHook()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xB36E54", Offset = "0xB36E54", VA = "0xB36E54")]
	private void FaerieFireOffHook()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xB36ED8", Offset = "0xB36ED8", VA = "0xB36ED8")]
	private void TurnOnTorch()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xB36F7C", Offset = "0xB36F7C", VA = "0xB36F7C")]
	private void TurnOffTorch()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xB36F2C", Offset = "0xB36F2C", VA = "0xB36F2C")]
	private void ActivateProtectiveLight(bool isOn)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xB36F4C", Offset = "0xB36F4C", VA = "0xB36F4C")]
	private void MoveDragonClose()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB36F64", Offset = "0xB36F64", VA = "0xB36F64")]
	private void MoveDragonCloseButSpawned()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xB36FCC", Offset = "0xB36FCC", VA = "0xB36FCC")]
	public cSkeletalTorch()
	{
	}
}
[Token(Token = "0x2000036")]
public class cSwirlingDarkness : MonoBehaviour
{
	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent freeSwirlingDarknessEvent;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xB418C0", Offset = "0xB418C0", VA = "0xB418C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xB41954", Offset = "0xB41954", VA = "0xB41954")]
	public void FreeSwirlingDarkness()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xB419E8", Offset = "0xB419E8", VA = "0xB419E8")]
	public cSwirlingDarkness()
	{
	}
}
[Token(Token = "0x2000037")]
public class cBowl : MonoBehaviour
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject ectoplasmGO;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 throwingDirection;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cEctoplasmTag ectoplasmTagScript;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private cPersistent parentPersistentScript;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private sObjectTracker BowlTracker;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E17D8", Offset = "0x8E17D8")]
	private bool <filled>k__BackingField;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private soVOEvent bowlStuckVO;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private sBool ectoplasmInDais;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private soVOEvent moleCommunedVO;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private sBool moleCommuned;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private sBool ectoplasmInBowlSBool;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private cShadowHandable sHandableScript;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private cOrphanItems orphanable;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool beenThrown;

	[Token(Token = "0x17000003")]
	public bool filled
	{
		[Token(Token = "0x600013B")]
		[Address(RVA = "0xA96A40", Offset = "0xA96A40", VA = "0xA96A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4258", Offset = "0x8F4258")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600013C")]
		[Address(RVA = "0xA96A48", Offset = "0xA96A48", VA = "0xA96A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4268", Offset = "0x8F4268")]
		private set
		{
		}
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xA96A54", Offset = "0xA96A54", VA = "0xA96A54")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xA96B78", Offset = "0xA96B78", VA = "0xA96B78")]
	private void Start()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xA96D8C", Offset = "0xA96D8C", VA = "0xA96D8C")]
	public void BowlStuck()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xA96C50", Offset = "0xA96C50", VA = "0xA96C50")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4278", Offset = "0x8F4278")]
	public void ThrowBowl()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xA96DEC", Offset = "0xA96DEC", VA = "0xA96DEC")]
	public void CheckBowlStatusAndSetMovable()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xA96EA4", Offset = "0xA96EA4", VA = "0xA96EA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xA97164", Offset = "0xA97164", VA = "0xA97164")]
	public cBowl()
	{
	}
}
[Token(Token = "0x2000038")]
public class cDais : MonoBehaviour
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool wasWineGivenToWF;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject wineVisual;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject ectoVisual;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject flowerVisual;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject particleContainer;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject goldenChalice;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent revealGoldenChaliceEvent;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate revealGoldenChaliceDelegate;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private sBool sBoolWineBottle;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private sBool sBoolEctoplasm;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private sBool sBoolPurpleFlower;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private sBool sBoolDaisFilled;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent WineBottleEvent;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent EctoplasmEvent;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent PurpleFlowerEvent;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent GoldenChaliceEvent;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent IncorrectItemEvent;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private cShadowHandNotSpell shadowHand;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Vector3 throwingDirection;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private cCheckpoint chaliceSpawnedCheckpoint;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xAC3BB0", Offset = "0xAC3BB0", VA = "0xAC3BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xAC3D28", Offset = "0xAC3D28", VA = "0xAC3D28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xAC3DAC", Offset = "0xAC3DAC", VA = "0xAC3DAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xAC3CE8", Offset = "0xAC3CE8", VA = "0xAC3CE8")]
	public void RevealGoldenChalice()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xAC3DD0", Offset = "0xAC3DD0", VA = "0xAC3DD0")]
	private void DaisCheck()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xAC3E3C", Offset = "0xAC3E3C", VA = "0xAC3E3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xAC4704", Offset = "0xAC4704", VA = "0xAC4704")]
	public cDais()
	{
	}
}
[Token(Token = "0x2000039")]
public class cDirt : MonoBehaviour
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool acornPlantedSBool;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject acornPrefab;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xAC6210", Offset = "0xAC6210", VA = "0xAC6210")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xAC628C", Offset = "0xAC628C", VA = "0xAC628C")]
	private void InstantiateAndPlantAcorn()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xAC6480", Offset = "0xAC6480", VA = "0xAC6480")]
	public cDirt()
	{
	}
}
[Token(Token = "0x200003A")]
public class cFaerie : MonoBehaviour
{
	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent arrivedInFeylandsEvent;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate arrivedInFeylandsDelegate;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent arrivedInFeylandsVOCompleteEvent;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate arrivedInFeylandsVOCompleteDelegate;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOGameEvent wineGivenToWF;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate wineGivenToWFDelegate;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOSequence firstFeylandsVisit;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private soVOEvent broughtWineForFaeries;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private soVOSequence wineReceivedByWF;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private sObjectTracker wineBottleTracker;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private sBool wasWineGivenToWF;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private cFaerieAnimations animationScript;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private cQuantumFireflies quantumFireflies;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform centerStageAudioPoint;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private cCheckpoint checkpointAfterStartingFaerieBrewQuest;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xACA7F4", Offset = "0xACA7F4", VA = "0xACA7F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xACA9A8", Offset = "0xACA9A8", VA = "0xACA9A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xACAA00", Offset = "0xACAA00", VA = "0xACAA00")]
	private void ArrivedInFeylands()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xACAD58", Offset = "0xACAD58", VA = "0xACAD58")]
	private void FirstVisitVOFinished()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xACABE4", Offset = "0xACABE4", VA = "0xACABE4")]
	private void CheckForWine()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xACAD5C", Offset = "0xACAD5C", VA = "0xACAD5C")]
	public void FaerieGotWineVOFinished()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xACAD98", Offset = "0xACAD98", VA = "0xACAD98")]
	private void WineFaerieGotWine()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xACAE08", Offset = "0xACAE08", VA = "0xACAE08")]
	public cFaerie()
	{
	}
}
[Token(Token = "0x200003B")]
public class cFaerieAnimations : MonoBehaviour
{
	[Token(Token = "0x2000407")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF740", Offset = "0x8DF740")]
	private sealed class <LerpOverTime>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cFaerieAnimations <>4__this;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject faerie;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 endPos;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float seconds;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timeToTurnPassed>5__2;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <playedVO>5__3;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <startingPos>5__4;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0xACBDCC", Offset = "0xACBDCC", VA = "0xACBDCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B70")]
			[Address(RVA = "0xACBE38", Offset = "0xACBE38", VA = "0xACBE38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xACB808", Offset = "0xACB808", VA = "0xACB808")]
		[DebuggerHidden]
		public <LerpOverTime>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xACB858", Offset = "0xACB858", VA = "0xACB858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xACB85C", Offset = "0xACB85C", VA = "0xACB85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xACBDD4", Offset = "0xACBDD4", VA = "0xACBDD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve speedCurve;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 endingPosition;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timePassed;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform[] faeriePositions;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform daisTransform;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1A48", Offset = "0x8E1A48")]
	private float timeBeforeMoving;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1A94", Offset = "0x8E1A94")]
	private float timeToFly;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1AE0", Offset = "0x8E1AE0")]
	private float timeToTurn;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1B2C", Offset = "0x8E1B2C")]
	private float rotationSpeed;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1B78", Offset = "0x8E1B78")]
	private float pos1Magnitude;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1BC4", Offset = "0x8E1BC4")]
	private float pos2Radius;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1C10", Offset = "0x8E1C10")]
	private float pos3Radius;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1C5C", Offset = "0x8E1C5C")]
	private float MoveToDaisTime;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1CA8", Offset = "0x8E1CA8")]
	private bool FaerieLooksAtPlayer;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Animator faerieAnimController;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private soVOEvent transform1VO;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private soVOEvent transform2VO;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private soVOEvent transform3VO;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[ReadOnly]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1D34", Offset = "0x8E1D34")]
	private bool randomMove;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool positionFixed;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float tempTime;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int index;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOGameEvent laughAnimEvent;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate laughAnimDelegate;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SOGameEvent crossArmsAnimEvent;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate crossArmsAnimDelegate;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SOGameEvent excitedAnimEvent;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate excitedAnimDelegate;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private SOGameEvent leanAnimEvent;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate leanAnimDelegate;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private SOGameEvent pointDownAnimEvent;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate pointDownAnimDelegate;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private SOGameEvent rejectItemAnimEvent;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate rejectItemAnimDelegate;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private SOGameEvent presentGoldenChaliceAnimEvent;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate presentGoldenChaliceAnimDelegate;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private SOGameEvent moveToDaisEvent;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate moveToDaisDelegate;

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xACAE10", Offset = "0xACAE10", VA = "0xACAE10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xACB040", Offset = "0xACB040", VA = "0xACB040")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xACB0FC", Offset = "0xACB0FC", VA = "0xACB0FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xACB158", Offset = "0xACB158", VA = "0xACB158")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xACB438", Offset = "0xACB438", VA = "0xACB438")]
	public void SetTalking(bool state)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xACB4A4", Offset = "0xACB4A4", VA = "0xACB4A4")]
	public void SetRandomMove(bool state)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xACAB88", Offset = "0xACAB88", VA = "0xACAB88")]
	public void TriggerExcited()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xACB4B0", Offset = "0xACB4B0", VA = "0xACB4B0")]
	public void TriggerLaugh()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xACB50C", Offset = "0xACB50C", VA = "0xACB50C")]
	public void TriggerCrossArms()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xACB568", Offset = "0xACB568", VA = "0xACB568")]
	public void TriggerLean()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xACB5C4", Offset = "0xACB5C4", VA = "0xACB5C4")]
	public void TriggerPointDown()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xACB620", Offset = "0xACB620", VA = "0xACB620")]
	public void TriggerRejectItem()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xACB67C", Offset = "0xACB67C", VA = "0xACB67C")]
	public void TriggerPresentGoblet()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xACB6D8", Offset = "0xACB6D8", VA = "0xACB6D8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4288", Offset = "0x8F4288")]
	public void MoveToDais()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xACB7A4", Offset = "0xACB7A4", VA = "0xACB7A4")]
	public void MovingToLocation(Vector3 position)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xACB390", Offset = "0xACB390", VA = "0xACB390")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4298", Offset = "0x8F4298")]
	public IEnumerator LerpOverTime(GameObject faerie, Vector3 endPos, float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xACB834", Offset = "0xACB834", VA = "0xACB834")]
	public cFaerieAnimations()
	{
	}
}
[Token(Token = "0x200003C")]
public class cFeylandsWeather : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float weatherDuration;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rainObject;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cSoundEffect faerieDanceEffect;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cSoundEffect rainSoundEffect;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xACCAD0", Offset = "0xACCAD0", VA = "0xACCAD0")]
	public void ControlWeatherCast()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xACCB60", Offset = "0xACCB60", VA = "0xACCB60")]
	public void DisableWeather()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xACCBB0", Offset = "0xACCBB0", VA = "0xACCBB0")]
	public cFeylandsWeather()
	{
	}
}
[Token(Token = "0x200003D")]
public class cMole : MonoBehaviour
{
	[Token(Token = "0x2000408")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF750", Offset = "0x8DF750")]
	private sealed class <LerpOverTime>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject mole;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 endPos;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float seconds;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public cMole <>4__this;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timePassed>5__2;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <startingPos>5__3;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B74")]
			[Address(RVA = "0xB748A8", Offset = "0xB748A8", VA = "0xB748A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xB74914", Offset = "0xB74914", VA = "0xB74914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xB74378", Offset = "0xB74378", VA = "0xB74378")]
		[DebuggerHidden]
		public <LerpOverTime>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xB74698", Offset = "0xB74698", VA = "0xB74698", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xB7469C", Offset = "0xB7469C", VA = "0xB7469C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xB748B0", Offset = "0xB748B0", VA = "0xB748B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF760", Offset = "0x8DF760")]
	private sealed class <LerpBackOverTime>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cMole <>4__this;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject mole;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 endPos;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float seconds;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timePassed>5__2;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <startingPos>5__3;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0xB74624", Offset = "0xB74624", VA = "0xB74624", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0xB74690", Offset = "0xB74690", VA = "0xB74690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xB743A4", Offset = "0xB743A4", VA = "0xB743A4")]
		[DebuggerHidden]
		public <LerpBackOverTime>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xB743E0", Offset = "0xB743E0", VA = "0xB743E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xB743E4", Offset = "0xB743E4", VA = "0xB743E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xB7462C", Offset = "0xB7462C", VA = "0xB7462C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator moleAnimController;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOEvent moleIdleVO;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOEvent moleMoveVO;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cBowl bowlScript;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float randomFloatValue;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1F10", Offset = "0x8E1F10")]
	public float randomTimer;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float tempTimer;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform bowlTransform;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float durationOfWalkAnimation;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float durationOfDigAnimation;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	public bool moveCompleted;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cSoundEffect moleDigSound;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private cSoundEffect moleSqueakSound;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private soVOEvent moleCommunedVoiceOver;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject moleVFX;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xB73F04", Offset = "0xB73F04", VA = "0xB73F04")]
	private void Start()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xB73F48", Offset = "0xB73F48", VA = "0xB73F48")]
	public void MoleCommuned()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xB73FF0", Offset = "0xB73FF0", VA = "0xB73FF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xB740EC", Offset = "0xB740EC", VA = "0xB740EC")]
	public void FinishedDigAnimation()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xB7415C", Offset = "0xB7415C", VA = "0xB7415C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F42FC", Offset = "0x8F42FC")]
	public void MoveToBowl()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xB740A4", Offset = "0xB740A4", VA = "0xB740A4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F430C", Offset = "0x8F430C")]
	public void MoveToOriginalPos()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xB74224", Offset = "0xB74224", VA = "0xB74224")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F431C", Offset = "0x8F431C")]
	public IEnumerator LerpOverTime(GameObject mole, Vector3 endPos, float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xB742D0", Offset = "0xB742D0", VA = "0xB742D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4380", Offset = "0x8F4380")]
	public IEnumerator LerpBackOverTime(GameObject mole, Vector3 endPos, float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xB743D0", Offset = "0xB743D0", VA = "0xB743D0")]
	public cMole()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD23C", Offset = "0x8DD23C")]
public class cMushroom : MonoBehaviour
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cPersistent persistent;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator mushroomAnimator;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent flowReachedEvent;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate flowReachedDelegate;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool fresh;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 originalPos;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Quaternion originalRot;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private cSoundEffect mushroomShrivelSound;

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xB749AC", Offset = "0xB749AC", VA = "0xB749AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xB74A70", Offset = "0xB74A70", VA = "0xB74A70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xB74A94", Offset = "0xB74A94", VA = "0xB74A94")]
	public void HandleNewFlow()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xB74C30", Offset = "0xB74C30", VA = "0xB74C30")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F43E4", Offset = "0x8F43E4")]
	private void DryMushroom()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xB74CEC", Offset = "0xB74CEC", VA = "0xB74CEC")]
	private void DryAnimation()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xB74C8C", Offset = "0xB74C8C", VA = "0xB74C8C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F43F4", Offset = "0x8F43F4")]
	private void UndryMushroom()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xB74D58", Offset = "0xB74D58", VA = "0xB74D58")]
	private void FreshAnimation()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xB74DB4", Offset = "0xB74DB4", VA = "0xB74DB4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4404", Offset = "0x8F4404")]
	private void ResetMushroom()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xB74EC8", Offset = "0xB74EC8", VA = "0xB74EC8")]
	public void Eaten()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xB74F64", Offset = "0xB74F64", VA = "0xB74F64")]
	public cMushroom()
	{
	}
}
[Token(Token = "0x200003F")]
public class cQuantumFireflies : MonoBehaviour
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator fireflyAnimator;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem fireflyParticles;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BoxCollider firefliesCollider;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent learnCommune;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOSequence firefliesGazedDialogue;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOSequence wineGivenToFaerie;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOSequence firefliesCommuned;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private soVOSequence firefliesCommunedAgain;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private cSoundEffect soundEffectOnCommuned;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOGameEvent feylandsReachedEvent;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate feylandsReachedDelegate;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private cGazeTarget firefliesGazeTarget;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool animPlaying;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xB01D8C", Offset = "0xB01D8C", VA = "0xB01D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xB01E38", Offset = "0xB01E38", VA = "0xB01E38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xB01E5C", Offset = "0xB01E5C", VA = "0xB01E5C")]
	public void FeylandsReached()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xB01F9C", Offset = "0xB01F9C", VA = "0xB01F9C")]
	public void EnableGaze()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xB01FDC", Offset = "0xB01FDC", VA = "0xB01FDC")]
	public void OnCommuned()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xB02084", Offset = "0xB02084", VA = "0xB02084")]
	public void PlayCommunedVO()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xB02134", Offset = "0xB02134", VA = "0xB02134")]
	public void OnGazeFocused()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xB02218", Offset = "0xB02218", VA = "0xB02218")]
	public cQuantumFireflies()
	{
	}
}
[Token(Token = "0x2000040")]
public class cCartPassedTrigger : MonoBehaviour
{
	[Token(Token = "0x6000185")]
	[Address(RVA = "0xA97AD0", Offset = "0xA97AD0", VA = "0xA97AD0")]
	public cCartPassedTrigger()
	{
	}
}
[Token(Token = "0x2000041")]
public class cChairSystem : MonoBehaviour
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cSoundEffect chairPoweredOnSFX;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cStampingTool stampingTool;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cPolishingTool polishingTool;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private sBool chairPowered;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOEvent toolNotPowered;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xA97B20", Offset = "0xA97B20", VA = "0xA97B20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xA97B88", Offset = "0xA97B88", VA = "0xA97B88")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4414", Offset = "0x8F4414")]
	public void ChairPoweredUp()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xA97BAC", Offset = "0xA97BAC", VA = "0xA97BAC")]
	private void PlayChairAudio()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xA97B48", Offset = "0xA97B48", VA = "0xA97B48")]
	private void ActivateTools()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xA97BC8", Offset = "0xA97BC8", VA = "0xA97BC8")]
	public void TryGrabStamperArm()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xA97C20", Offset = "0xA97C20", VA = "0xA97C20")]
	public cChairSystem()
	{
	}
}
[Token(Token = "0x2000042")]
public class cFarMetalGate : cHorizontalLockPoints
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float retractSpeed;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float timeBeforeRetract;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float retractTimer;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private bool isRetracting;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject[] lightPlanes;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private cSoundEffect gateClosing;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xACC088", Offset = "0xACC088", VA = "0xACC088", Slot = "5")]
	public override void LateUpdate()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xACC3D0", Offset = "0xACC3D0", VA = "0xACC3D0")]
	private void ShowLights(bool lightsOn)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xACC2C0", Offset = "0xACC2C0", VA = "0xACC2C0")]
	private void UpdateGateLights()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xACC454", Offset = "0xACC454", VA = "0xACC454", Slot = "6")]
	protected override void LockGrabbable(Transform lockTransform)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xACC558", Offset = "0xACC558", VA = "0xACC558")]
	private void ResetRetracting()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xACC590", Offset = "0xACC590", VA = "0xACC590")]
	private void StartRetractTimer()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xACC5CC", Offset = "0xACC5CC", VA = "0xACC5CC")]
	public void SetRetracting(bool _isRetracting)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xACC5D8", Offset = "0xACC5D8", VA = "0xACC5D8")]
	public void ContinueRetractingIfNotLocked()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xACC618", Offset = "0xACC618", VA = "0xACC618")]
	public cFarMetalGate()
	{
	}
}
[Token(Token = "0x2000043")]
public class cFlaskDisabler : MonoBehaviour
{
	[Token(Token = "0x6000195")]
	[Address(RVA = "0xACD22C", Offset = "0xACD22C", VA = "0xACD22C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xACD2F4", Offset = "0xACD2F4", VA = "0xACD2F4")]
	public cFlaskDisabler()
	{
	}
}
[Token(Token = "0x2000044")]
public class cGemCodeButton : MonoBehaviour
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cGemPipeAudio pipeAudio;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent onPressed;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	[SerializeField]
	private string buttonPressSoundEvent;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance buttonPressSoundInstance;

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xAD4900", Offset = "0xAD4900", VA = "0xAD4900")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xAD498C", Offset = "0xAD498C", VA = "0xAD498C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xAD4A48", Offset = "0xAD4A48", VA = "0xAD4A48")]
	private void PlayAudio()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xAD4B18", Offset = "0xAD4B18", VA = "0xAD4B18")]
	public cGemCodeButton()
	{
	}
}
[Token(Token = "0x2000045")]
public class cGemPipeAudio : MonoBehaviour
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	[SerializeField]
	private string gemOneSound;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	[SerializeField]
	private string gemTwoSound;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	[SerializeField]
	private string gemThreeSound;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	[SerializeField]
	private string gemFourSound;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject gem1;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject gem2;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject gem3;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject gem4;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EventInstance gemOneSoundInstance;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EventInstance gemTwoSoundInstance;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EventInstance gemThreeSoundInstance;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EventInstance gemFourSoundInstance;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool animationPlaying;

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xAD4B20", Offset = "0xAD4B20", VA = "0xAD4B20")]
	public void AnimationStart()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xAD4B98", Offset = "0xAD4B98", VA = "0xAD4B98")]
	public void AnimationEnd()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xAD4C0C", Offset = "0xAD4C0C", VA = "0xAD4C0C")]
	public void PlayGem1()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xAD4D14", Offset = "0xAD4D14", VA = "0xAD4D14")]
	public void PlayGem2()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xAD4E1C", Offset = "0xAD4E1C", VA = "0xAD4E1C")]
	public void PlayGem3()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xAD4F24", Offset = "0xAD4F24", VA = "0xAD4F24")]
	public void PlayGem4()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xAD4C44", Offset = "0xAD4C44", VA = "0xAD4C44")]
	private void PlayGemOne(Transform trans)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xAD4D4C", Offset = "0xAD4D4C", VA = "0xAD4D4C")]
	private void PlayGemTwo(Transform trans)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xAD4E54", Offset = "0xAD4E54", VA = "0xAD4E54")]
	private void PlayGemThree(Transform trans)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xAD4F5C", Offset = "0xAD4F5C", VA = "0xAD4F5C")]
	private void PlayGemFour(Transform trans)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xAD502C", Offset = "0xAD502C", VA = "0xAD502C")]
	public cGemPipeAudio()
	{
	}
}
[Token(Token = "0x2000046")]
public class cMoveToTransformAtStart : MonoBehaviour
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xB7491C", Offset = "0xB7491C", VA = "0xB7491C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xB749A4", Offset = "0xB749A4", VA = "0xB749A4")]
	public cMoveToTransformAtStart()
	{
	}
}
[Token(Token = "0x2000047")]
public class cOilFlask : MonoBehaviour
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cOilSpout oilSpout;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform oilSpawnTransform;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem[] oilExplodeEffects;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool readyToSpawn;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform startParentTransform;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform cartParent;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2360", Offset = "0x8E2360")]
	private bool <inCart>k__BackingField;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem disappearParticles;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[EventRef]
	[SerializeField]
	private string oilExplodeSoundEvent;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EventInstance oilExplodeSoundInstance;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private soVOEvent oilInCart;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private soVOEvent oilFlaskExplosion;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private soVOEvent oilFlaskFuel;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private sBool leverGreased;

	[Token(Token = "0x17000004")]
	public bool inCart
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xB757C4", Offset = "0xB757C4", VA = "0xB757C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4424", Offset = "0x8F4424")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xB757CC", Offset = "0xB757CC", VA = "0xB757CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4434", Offset = "0x8F4434")]
		private set
		{
		}
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xB757D8", Offset = "0xB757D8", VA = "0xB757D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xB758A4", Offset = "0xB758A4", VA = "0xB758A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xB75A2C", Offset = "0xB75A2C", VA = "0xB75A2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xB73DE0", Offset = "0xB73DE0", VA = "0xB73DE0")]
	public void SetInCart(bool isInCart)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xB75AD4", Offset = "0xB75AD4", VA = "0xB75AD4")]
	private bool CheckTilted()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xB75C60", Offset = "0xB75C60", VA = "0xB75C60")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4444", Offset = "0x8F4444")]
	public void FlaskExplodedVO()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xB75CB0", Offset = "0xB75CB0", VA = "0xB75CB0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4454", Offset = "0x8F4454")]
	public void FlaskFuelVO()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xB75D08", Offset = "0xB75D08", VA = "0xB75D08")]
	public void CheckExplosionOnGrabbed()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xB75DC8", Offset = "0xB75DC8", VA = "0xB75DC8")]
	private void ExplodeAndDisable()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xB75FF8", Offset = "0xB75FF8", VA = "0xB75FF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xB75EE4", Offset = "0xB75EE4", VA = "0xB75EE4")]
	private void PlayParticleEffects()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xB76214", Offset = "0xB76214", VA = "0xB76214")]
	private void StopParticleEffects()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xB75E14", Offset = "0xB75E14", VA = "0xB75E14")]
	private void PlayExplosionAudio()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xB760F4", Offset = "0xB760F4", VA = "0xB760F4")]
	private void ResetRigidbody()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xB76190", Offset = "0xB76190", VA = "0xB76190")]
	private void ResetTransform()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xB76288", Offset = "0xB76288", VA = "0xB76288")]
	public void SetKinematic(bool isKinematic)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xB75FBC", Offset = "0xB75FBC", VA = "0xB75FBC")]
	public void UnparentFlask()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xB758B8", Offset = "0xB758B8", VA = "0xB758B8")]
	public void ReparentFlask()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xB73CF4", Offset = "0xB73CF4", VA = "0xB73CF4")]
	public void SetGrabbable(bool isGrabbable)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xB762D4", Offset = "0xB762D4", VA = "0xB762D4")]
	public cOilFlask()
	{
	}
}
[Token(Token = "0x2000048")]
public class cOilShelf : MonoBehaviour
{
	[Token(Token = "0x200040A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF770", Offset = "0x8DF770")]
	private sealed class <WaitThenRemoveOil>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cOilShelf <>4__this;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <disappearParticles>5__2;

		[Token(Token = "0x170001F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0xB76AD0", Offset = "0xB76AD0", VA = "0xB76AD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0xB76B3C", Offset = "0xB76B3C", VA = "0xB76B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xB764B0", Offset = "0xB764B0", VA = "0xB764B0")]
		[DebuggerHidden]
		public <WaitThenRemoveOil>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xB76904", Offset = "0xB76904", VA = "0xB76904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xB76908", Offset = "0xB76908", VA = "0xB76908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xB76AD8", Offset = "0xB76AD8", VA = "0xB76AD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform startTransform;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform burnedTransform;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform partsToMove;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform conveyorTarget;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private cOilFlask flask;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float conveyorSpeed;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool waitingToRespawn;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float timeToRespawnOil;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float oilTimer;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Animator burnAnimator;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform flaskTransform;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool dropped;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private sBool leverGreased;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaitForSeconds waitForTwoSeconds;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds waitForFiveSeconds;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xB762DC", Offset = "0xB762DC", VA = "0xB762DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xB763A4", Offset = "0xB763A4", VA = "0xB763A4")]
	public void StartTimerToSpawnFlask()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xB763B4", Offset = "0xB763B4", VA = "0xB763B4")]
	private void SpawnFlask()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xB763F4", Offset = "0xB763F4", VA = "0xB763F4")]
	public void SetPuzzleSolved()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xB7643C", Offset = "0xB7643C", VA = "0xB7643C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4464", Offset = "0x8F4464")]
	private IEnumerator WaitThenRemoveOil()
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xB764DC", Offset = "0xB764DC", VA = "0xB764DC")]
	private void SendFlaskToGarbageScene()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xB76570", Offset = "0xB76570", VA = "0xB76570")]
	public void SetDroppedBool(bool state)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xB7657C", Offset = "0xB7657C", VA = "0xB7657C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xB76718", Offset = "0xB76718", VA = "0xB76718")]
	private void MoveFlaskTowardsTarget()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xB76818", Offset = "0xB76818", VA = "0xB76818")]
	public void RopeBurned()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xB768EC", Offset = "0xB768EC", VA = "0xB768EC")]
	public cOilShelf()
	{
	}
}
[Token(Token = "0x2000049")]
public class cOilSpout : MonoBehaviour
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem[] oilPourEffects;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cRustyLever leverInTrigger;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2498", Offset = "0x8E2498")]
	private bool <IsPouring>k__BackingField;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	[SerializeField]
	private string oilPourSoundEvent;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance oilPourSoundInstance;

	[Token(Token = "0x17000005")]
	public bool IsPouring
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xB76B44", Offset = "0xB76B44", VA = "0xB76B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F44C8", Offset = "0x8F44C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xB76B4C", Offset = "0xB76B4C", VA = "0xB76B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F44D8", Offset = "0x8F44D8")]
		private set
		{
		}
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xB75B9C", Offset = "0xB75B9C", VA = "0xB75B9C")]
	public void StartPouring()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB75AB0", Offset = "0xB75AB0", VA = "0xB75AB0")]
	public void StopPouring()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB76D10", Offset = "0xB76D10", VA = "0xB76D10")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB76DFC", Offset = "0xB76DFC", VA = "0xB76DFC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB76B58", Offset = "0xB76B58", VA = "0xB76B58")]
	private void PlayParticleEffects()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB76C9C", Offset = "0xB76C9C", VA = "0xB76C9C")]
	private void StopParticleEffects()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xB76BCC", Offset = "0xB76BCC", VA = "0xB76BCC")]
	private void PlayPouringAudio()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xB76EB8", Offset = "0xB76EB8", VA = "0xB76EB8")]
	public cOilSpout()
	{
	}
}
[Token(Token = "0x200004A")]
public class cQuantumBumper : MonoBehaviour
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool quantumBumberBeenOpened;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject chestOpenGameObject;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject chestClosedGameObject;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent firstTimeOpened;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem raisedParticlesToPlay;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent underworldReachedEvent;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate underworldReachedDelegate;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static cQuantumBumper Instance;

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xB00758", Offset = "0xB00758", VA = "0xB00758")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xB00824", Offset = "0xB00824", VA = "0xB00824")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xB008B8", Offset = "0xB008B8", VA = "0xB008B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xB008DC", Offset = "0xB008DC", VA = "0xB008DC")]
	private void UpdateQuantumState()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xB009E0", Offset = "0xB009E0", VA = "0xB009E0")]
	public cQuantumBumper()
	{
	}
}
[Token(Token = "0x200004B")]
public class cQuantumGear : MonoBehaviour
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent dreamthought5Event;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOSequence dreamThought0Sequence;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xB02220", Offset = "0xB02220", VA = "0xB02220")]
	public void Dreamthought5Check()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xB0225C", Offset = "0xB0225C", VA = "0xB0225C")]
	public cQuantumGear()
	{
	}
}
[Token(Token = "0x200004C")]
public class cRoughStone : MonoBehaviour
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mesh;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject runeStone;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool stampable;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject minecartParent;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 originalPos;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Quaternion originalRot;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private sBool roughStoneBroken;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private cOrphanItems orphanScript;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xB05378", Offset = "0xB05378", VA = "0xB05378")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xB05414", Offset = "0xB05414", VA = "0xB05414")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xB05564", Offset = "0xB05564", VA = "0xB05564")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xB055F4", Offset = "0xB055F4", VA = "0xB055F4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xB05680", Offset = "0xB05680", VA = "0xB05680")]
	public void UnparentStone()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xB056A8", Offset = "0xB056A8", VA = "0xB056A8")]
	public bool CheckStamp()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xB05724", Offset = "0xB05724", VA = "0xB05724")]
	public void Break()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xB057C4", Offset = "0xB057C4", VA = "0xB057C4")]
	public cRoughStone()
	{
	}
}
[Token(Token = "0x200004D")]
public class cRustyLever : MonoBehaviour
{
	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cGrabbableRedux leverGrabbable;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cShadowHandable leverShadowhandable;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform leverGrabbableTransform;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float returnRate;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform lockPointDown;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform lockPointUp;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform lockPointDefault;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cFireGem fireGem;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UnityEvent onLeverOiled;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private cPolishingTool polishingTool;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Animator jostleAnim;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool puzzleSolved;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private cOilShelf oilShelf;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private soVOEvent leverStuckVO;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private cSoundEffect rustedLeverSoundEvent;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private cSoundEffect leverPullSoundEvent;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private cSoundEffect leverOiledSoundEvent;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private cSoundEffect gemDoorOpenSoundEvent;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public sBool isLeverOiled;

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB075AC", Offset = "0xB075AC", VA = "0xB075AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xB07674", Offset = "0xB07674", VA = "0xB07674")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xB07880", Offset = "0xB07880", VA = "0xB07880")]
	public void ApplyOil()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xB07930", Offset = "0xB07930", VA = "0xB07930")]
	public void FireGemGrabbed()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xB078E0", Offset = "0xB078E0", VA = "0xB078E0")]
	private void PlayOiledAudio()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xB078FC", Offset = "0xB078FC", VA = "0xB078FC")]
	private void UnlockLever()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xB076E0", Offset = "0xB076E0", VA = "0xB076E0")]
	private void ReturnToDefaultPosition()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xB0793C", Offset = "0xB0793C", VA = "0xB0793C")]
	public void HandleGrabAudio()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xB079EC", Offset = "0xB079EC", VA = "0xB079EC")]
	public void LeverPulled(bool highRelease)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xB07BA8", Offset = "0xB07BA8", VA = "0xB07BA8")]
	public cRustyLever()
	{
	}
}
[Token(Token = "0x200004E")]
public class cRustyLeverReleasePoint : MonoBehaviour
{
	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isHigh;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xB07BB8", Offset = "0xB07BB8", VA = "0xB07BB8")]
	public cRustyLeverReleasePoint()
	{
	}
}
[Token(Token = "0x200004F")]
public class cRustyLeverRotationTrigger : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cRustyLever lever;

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xB07BC0", Offset = "0xB07BC0", VA = "0xB07BC0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xB07C90", Offset = "0xB07C90", VA = "0xB07C90")]
	public cRustyLeverRotationTrigger()
	{
	}
}
[Token(Token = "0x2000050")]
public class cScaryEyes : MonoBehaviour
{
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	[SerializeField]
	private string scaryEyesFMODEvent;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventInstance scaryEyesFMODInstance;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB0A49C", Offset = "0xB0A49C", VA = "0xB0A49C")]
	public void PlayScaryGrowlAudio()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB0A56C", Offset = "0xB0A56C", VA = "0xB0A56C")]
	public cScaryEyes()
	{
	}
}
[Token(Token = "0x2000051")]
public class cSilverLump : MonoBehaviour
{
	[Token(Token = "0x200040B")]
	public enum LumpState
	{
		[Token(Token = "0x4001B40")]
		lump,
		[Token(Token = "0x4001B41")]
		heatedLump,
		[Token(Token = "0x4001B42")]
		sheet
	}

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public cGrabbableRedux grabbable;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public cShadowHandable shadowhandable;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody lumpRb;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isSnapped;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private cStampingArm arm;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float minArmHeight;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject silverLump;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject heatedLump;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject silverSheet;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private soVOEvent sheetGrabbedVO;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private cOrphanItems orphanable;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LumpState lumpState;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB35DDC", Offset = "0xB35DDC", VA = "0xB35DDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xB35F18", Offset = "0xB35F18", VA = "0xB35F18")]
	public void SnapLump(Transform snapPoint)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xB360C0", Offset = "0xB360C0", VA = "0xB360C0")]
	public void StampLump()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB360F0", Offset = "0xB360F0", VA = "0xB360F0")]
	public void HeatLump()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB3608C", Offset = "0xB3608C", VA = "0xB3608C")]
	public void SetLumpGrabbable(bool isGrabbable)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB36104", Offset = "0xB36104", VA = "0xB36104")]
	public void OnGrabbed()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xB35E40", Offset = "0xB35E40", VA = "0xB35E40")]
	public void SetLumpState(LumpState state)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xB36194", Offset = "0xB36194", VA = "0xB36194")]
	public cSilverLump()
	{
	}
}
[Token(Token = "0x2000052")]
public class cSilverVein : MonoBehaviour
{
	[Token(Token = "0x200040C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF780", Offset = "0x8DF780")]
	private sealed class <EarthquakeCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cSilverVein <>4__this;

		[Token(Token = "0x170001FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xB36B7C", Offset = "0xB36B7C", VA = "0xB36B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B88")]
			[Address(RVA = "0xB36BE8", Offset = "0xB36BE8", VA = "0xB36BE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xB36820", Offset = "0xB36820", VA = "0xB36820")]
		[DebuggerHidden]
		public <EarthquakeCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xB36984", Offset = "0xB36984", VA = "0xB36984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xB36988", Offset = "0xB36988", VA = "0xB36988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xB36B84", Offset = "0xB36B84", VA = "0xB36B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cSilverLump silverLump;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 spawnPos;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion spawnRot;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent controlWeatherEvent;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SOGameEvent.GameEventDelegate controlWeatherDelegate;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject earthquakeVFX;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private cSoundEffect earthquakeSFX;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private soVOEvent underworldControlWeatherVO;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cHaptics haptics;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isEarthquaking;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float earthQuakeDuration;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private sBool isSheetSnapped;

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xB365C8", Offset = "0xB365C8", VA = "0xB365C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xB366B8", Offset = "0xB366B8", VA = "0xB366B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xB366DC", Offset = "0xB366DC", VA = "0xB366DC")]
	private void ControlWeatherCast()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xB367AC", Offset = "0xB367AC", VA = "0xB367AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F44E8", Offset = "0x8F44E8")]
	private IEnumerator EarthquakeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xB3684C", Offset = "0xB3684C", VA = "0xB3684C")]
	private void DropSilverLump()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xB36974", Offset = "0xB36974", VA = "0xB36974")]
	public cSilverVein()
	{
	}
}
[Token(Token = "0x2000053")]
public class cSmolderHand : MonoBehaviour
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem[] smolderHandEffects;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xB37D98", Offset = "0xB37D98", VA = "0xB37D98")]
	private void PlayParticleEffects()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xB37E0C", Offset = "0xB37E0C", VA = "0xB37E0C")]
	private void StopParticleEffects()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xB37E80", Offset = "0xB37E80", VA = "0xB37E80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xB37E84", Offset = "0xB37E84", VA = "0xB37E84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xB37E88", Offset = "0xB37E88", VA = "0xB37E88")]
	public cSmolderHand()
	{
	}
}
[Token(Token = "0x2000054")]
public class cStamperLockPoint : MonoBehaviour
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isBackTrigger;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xB3F4E0", Offset = "0xB3F4E0", VA = "0xB3F4E0")]
	public cStamperLockPoint()
	{
	}
}
[Token(Token = "0x2000055")]
public class cStampingTool : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject powerIndicator;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xB3FAA0", Offset = "0xB3FAA0", VA = "0xB3FAA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB3FAEC", Offset = "0xB3FAEC", VA = "0xB3FAEC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F454C", Offset = "0x8F454C")]
	public void PowerOn()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xB3FB28", Offset = "0xB3FB28", VA = "0xB3FB28")]
	private void SetPowerVisual(bool isOn)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xB3FB48", Offset = "0xB3FB48", VA = "0xB3FB48")]
	private void AllowInteraction()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xB3FB6C", Offset = "0xB3FB6C", VA = "0xB3FB6C")]
	public cStampingTool()
	{
	}
}
[Token(Token = "0x2000056")]
public class cTrackSwitcher : MonoBehaviour
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isGrabbed;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isShadowGrabbed;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform leftLockPoint;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform rightLockPoint;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float lockDistance;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float wrongDirectionTolerance;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private cShadowHandable shadowHandable;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool lockedLeft;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[SerializeField]
	private bool lockedRight;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent onLockedLeft;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEvent onLockedRight;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	[SerializeField]
	private string trackSwitchLockSoundEvent;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EventInstance trackSwitchLockSoundInstance;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOGameEvent underworldReachedEvent;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate underworldReachedDelegate;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private sBool trackSwitcherIsRight;

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xB423F0", Offset = "0xB423F0", VA = "0xB423F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xB4257C", Offset = "0xB4257C", VA = "0xB4257C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xB425A0", Offset = "0xB425A0", VA = "0xB425A0")]
	public void SetGrabbed(bool grabbed)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xB425AC", Offset = "0xB425AC", VA = "0xB425AC")]
	public void SetShadowGrabbed(bool shadowGrabbed)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xB424AC", Offset = "0xB424AC", VA = "0xB424AC")]
	private void UpdateTrackSwitcherPosition()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xB425B8", Offset = "0xB425B8", VA = "0xB425B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xB42610", Offset = "0xB42610", VA = "0xB42610")]
	private void CheckLockPoints()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xB427E4", Offset = "0xB427E4", VA = "0xB427E4")]
	private void LockRight()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xB428EC", Offset = "0xB428EC", VA = "0xB428EC")]
	private void LockLeft()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xB42818", Offset = "0xB42818", VA = "0xB42818")]
	private float CheckDistance(Vector3 pos1, Vector3 pos2)
	{
		return default(float);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xB42A50", Offset = "0xB42A50", VA = "0xB42A50")]
	private void HandleRelease()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xB42A9C", Offset = "0xB42A9C", VA = "0xB42A9C")]
	private void ShadowHandRelease()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xB42A6C", Offset = "0xB42A6C", VA = "0xB42A6C")]
	private void GrabRelease()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xB42784", Offset = "0xB42784", VA = "0xB42784")]
	private bool CheckTooFarRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xB429EC", Offset = "0xB429EC", VA = "0xB429EC")]
	private bool CheckTooFarLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xB4291C", Offset = "0xB4291C", VA = "0xB4291C")]
	private void PlayLockAudio()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xB42AC4", Offset = "0xB42AC4", VA = "0xB42AC4")]
	public cTrackSwitcher()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD2A0", Offset = "0x8DD2A0")]
public class cVerticalLockPoints : MonoBehaviour
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cShadowHandable shadowHandable;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isShadowHandable;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform lockPointTop;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Transform lockPointBottom;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float lockDistance;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float refreshDistance;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected bool lockedTop;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[SerializeField]
	protected bool lockedBottom;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected UnityEvent onLockedTop;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected UnityEvent onLockedBottom;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[EventRef]
	[SerializeField]
	private string lockSoundEvent;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EventInstance lockSoundFMODInstance;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xB43D78", Offset = "0xB43D78", VA = "0xB43D78")]
	private void Start()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xB43E40", Offset = "0xB43E40", VA = "0xB43E40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xB3F954", Offset = "0xB3F954", VA = "0xB3F954")]
	public float GetHeightProgress(float newMin, float newMax)
	{
		return default(float);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xB43EB8", Offset = "0xB43EB8", VA = "0xB43EB8")]
	public float Map(float x, float in_min, float in_max, float out_min, float out_max)
	{
		return default(float);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xB43ED4", Offset = "0xB43ED4", VA = "0xB43ED4")]
	public Transform GetLockPoint(bool isTop)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xB43EEC", Offset = "0xB43EEC", VA = "0xB43EEC", Slot = "4")]
	protected virtual void HandleLockingLogic(bool shadowHand)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xB44658", Offset = "0xB44658", VA = "0xB44658", Slot = "5")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xB4436C", Offset = "0xB4436C", VA = "0xB4436C")]
	protected void ResetPositionTop()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xB43FF4", Offset = "0xB43FF4", VA = "0xB43FF4")]
	protected void ResetPositionBottom()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xB44460", Offset = "0xB44460", VA = "0xB44460")]
	protected bool CheckLockPositionTop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xB445F0", Offset = "0xB445F0", VA = "0xB445F0")]
	protected bool CheckLockPositionBottom()
	{
		return default(bool);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xB440E8", Offset = "0xB440E8", VA = "0xB440E8")]
	protected void CheckRefreshPosition(Transform lockPoint)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xB444C8", Offset = "0xB444C8", VA = "0xB444C8")]
	private void ShadowHandRelease()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xB444F0", Offset = "0xB444F0", VA = "0xB444F0")]
	private void GrabRelease()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xB44674", Offset = "0xB44674", VA = "0xB44674", Slot = "6")]
	protected virtual void LockGrabbable(Transform lockTransform)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xB44520", Offset = "0xB44520", VA = "0xB44520")]
	protected void PlayLockAudio()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xB3F844", Offset = "0xB3F844", VA = "0xB3F844")]
	public void ForceUpdateLocking()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xB4474C", Offset = "0xB4474C", VA = "0xB4474C")]
	public void ForceResetPositionTop()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xB44814", Offset = "0xB44814", VA = "0xB44814")]
	public cVerticalLockPoints()
	{
	}
}
[Token(Token = "0x2000058")]
public class cDebris : MonoBehaviour
{
	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E29B8", Offset = "0x8E29B8")]
	[SerializeField]
	private cGearRotate gearThatIsBlocked;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2A04", Offset = "0x8E2A04")]
	[SerializeField]
	private sBool thisScriptableBool;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2A50", Offset = "0x8E2A50")]
	[SerializeField]
	private sBool gearWallCompleted;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent burntUnityEvent;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int index;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	[SerializeField]
	private string burnDebrisFMODEvent;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EventInstance burnDebrisFMODInstance;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xAC51BC", Offset = "0xAC51BC", VA = "0xAC51BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xAC51FC", Offset = "0xAC51FC", VA = "0xAC51FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xAC51DC", Offset = "0xAC51DC", VA = "0xAC51DC")]
	public void ResetSBool()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xAC5240", Offset = "0xAC5240", VA = "0xAC5240")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F455C", Offset = "0x8F455C")]
	public void DebrisRemoved()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xAC532C", Offset = "0xAC532C", VA = "0xAC532C")]
	private void PlayDebrisRemovalAudio()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xAC53FC", Offset = "0xAC53FC", VA = "0xAC53FC")]
	public cDebris()
	{
	}
}
[Token(Token = "0x2000059")]
public class cGearRotate : MonoBehaviour
{
	[Token(Token = "0x200040D")]
	private enum AxisToRotateAround
	{
		[Token(Token = "0x4001B47")]
		X,
		[Token(Token = "0x4001B48")]
		Y,
		[Token(Token = "0x4001B49")]
		Z
	}

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2AD4", Offset = "0x8E2AD4")]
	public float initialSpeed;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool isFirst;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2B1C", Offset = "0x8E2B1C")]
	[SerializeField]
	private bool sameRotation;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int teethOnMe;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int teethOnNext;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	[SerializeField]
	private bool rotating;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool thisGearCorrect;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2BC0", Offset = "0x8E2BC0")]
	public float rotationSpeed;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AxisToRotateAround axisToRotate;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xAD47A8", Offset = "0xAD47A8", VA = "0xAD47A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xAD47C4", Offset = "0xAD47C4", VA = "0xAD47C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xAD47C8", Offset = "0xAD47C8", VA = "0xAD47C8")]
	public void StartRotating()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xAD47D4", Offset = "0xAD47D4", VA = "0xAD47D4")]
	public void StopRotating()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xAD47DC", Offset = "0xAD47DC", VA = "0xAD47DC")]
	private float CalculateNextRotationSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xAD4808", Offset = "0xAD4808", VA = "0xAD4808")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xAD48F0", Offset = "0xAD48F0", VA = "0xAD48F0")]
	public cGearRotate()
	{
	}
}
[Token(Token = "0x200005A")]
public class GearWallManager : MonoBehaviour
{
	[Token(Token = "0x200040E")]
	public enum WhichGear
	{
		[Token(Token = "0x4001B4B")]
		First = 0,
		[Token(Token = "0x4001B4C")]
		Second = 1,
		[Token(Token = "0x4001B4D")]
		Third = 4,
		[Token(Token = "0x4001B4E")]
		Fourth = 9,
		[Token(Token = "0x4001B4F")]
		Fifth = 11
	}

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SOSnapID> snapIDArray;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<cSnapPointGearWall> snapPoints;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> debrisIdxs;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> rotatingParts;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public sBool quantumGear5SnappedBool;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<cGearRotate> completedGearsToSpin;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private sBool puzzleCompleted;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool gearsCorrect;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOGameEvent checkGearsEvent;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate checkGearsDelegate;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[ReadOnly]
	[SerializeField]
	private int gearsInCorrectSpots;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int rotatingGears;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2C70", Offset = "0x8E2C70")]
	public int numberOfGears;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private cSoundEffect gearWallCompleteSFX;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private soVOEvent gearsAreConnectedVO;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private soVOEvent debrisBlockingVO;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private soVOEvent missingGearHint;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent completedGearWallEvent;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject quantumGearPrefab;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<GameObject> gearsInUnderworld;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GearWallManager _instance;

	[Token(Token = "0x17000006")]
	public static GearWallManager Instance
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0xB5E534", Offset = "0xB5E534", VA = "0xB5E534")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xB5E59C", Offset = "0xB5E59C", VA = "0xB5E59C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xB5E69C", Offset = "0xB5E69C", VA = "0xB5E69C")]
	private void Start()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xB5E760", Offset = "0xB5E760", VA = "0xB5E760")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F456C", Offset = "0x8F456C")]
	private void ResetPuzzle()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xB5E780", Offset = "0xB5E780", VA = "0xB5E780")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xB5E79C", Offset = "0xB5E79C", VA = "0xB5E79C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xB5E7C0", Offset = "0xB5E7C0", VA = "0xB5E7C0")]
	private void CheckForSnappedGears()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xB5F084", Offset = "0xB5F084", VA = "0xB5F084")]
	public void SnapGear(cSnappableGears snapped, cSnapPointGearWall snapPoint)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xB5F11C", Offset = "0xB5F11C", VA = "0xB5F11C")]
	public void RemoveGear(cSnapPointGearWall snapPoint)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xB5F198", Offset = "0xB5F198", VA = "0xB5F198")]
	public void DebrisBurned(cDebris debris)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xB5F214", Offset = "0xB5F214", VA = "0xB5F214")]
	private bool ValidatePuzzle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xB5EC5C", Offset = "0xB5EC5C", VA = "0xB5EC5C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F457C", Offset = "0x8F457C")]
	private void CheckGears()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xB5F454", Offset = "0xB5F454", VA = "0xB5F454")]
	private void CompletePuzzle()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xB5F5D4", Offset = "0xB5F5D4", VA = "0xB5F5D4")]
	private void PlayGearWallCorrectAudio()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xB5F5F0", Offset = "0xB5F5F0", VA = "0xB5F5F0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F458C", Offset = "0x8F458C")]
	public void SetGears()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xB5FB10", Offset = "0xB5FB10", VA = "0xB5FB10")]
	public GearWallManager()
	{
	}
}
[Token(Token = "0x200005B")]
public class cBumperUp : MonoBehaviour
{
	[Token(Token = "0x600024C")]
	[Address(RVA = "0xA971C4", Offset = "0xA971C4", VA = "0xA971C4")]
	public cBumperUp()
	{
	}
}
[Token(Token = "0x200005C")]
public class cMineCart : MonoBehaviour
{
	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform oilTransform;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MinecartController mineCartController;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cOilShelf oilShelfScript;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cOilFlask oilFlaskScript;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private sBool burntRopeBool;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private cSoundEffect collisionSound;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private cSoundEffect movementSound;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hittingFarGate;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool hittingCloseGate;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private soVOEvent minecartPassedWithOil;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xB735F0", Offset = "0xB735F0", VA = "0xB735F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xB73818", Offset = "0xB73818", VA = "0xB73818")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xB73D18", Offset = "0xB73D18", VA = "0xB73D18")]
	private void ParentFlask()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xB73CD8", Offset = "0xB73CD8", VA = "0xB73CD8")]
	private void PlayCollisionSound()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xB73E3C", Offset = "0xB73E3C", VA = "0xB73E3C")]
	public void PlayMovementSound()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xB73E58", Offset = "0xB73E58", VA = "0xB73E58")]
	public void StopMovementSound()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xB73E74", Offset = "0xB73E74", VA = "0xB73E74")]
	public void ResetGateHitBools()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xB73E7C", Offset = "0xB73E7C", VA = "0xB73E7C")]
	public cMineCart()
	{
	}
}
[Token(Token = "0x200005D")]
public class cTurnstile : MonoBehaviour
{
	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF790", Offset = "0x8DF790")]
	private sealed class <Close>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cTurnstile <>4__this;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0xB42FEC", Offset = "0xB42FEC", VA = "0xB42FEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0xB43058", Offset = "0xB43058", VA = "0xB43058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xB42DD8", Offset = "0xB42DD8", VA = "0xB42DD8")]
		[DebuggerHidden]
		public <Close>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xB42E14", Offset = "0xB42E14", VA = "0xB42E14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xB42E18", Offset = "0xB42E18", VA = "0xB42E18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xB42FF4", Offset = "0xB42FF4", VA = "0xB42FF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator turnstileAnimator;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cSnappableGears gearToHide;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float timeToWait;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cShadowHandable gearSH;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody gearRB;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2D98", Offset = "0x8E2D98")]
	private bool <pickedUp>k__BackingField;

	[Token(Token = "0x17000007")]
	public bool pickedUp
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xB42C08", Offset = "0xB42C08", VA = "0xB42C08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F459C", Offset = "0x8F459C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000256")]
		[Address(RVA = "0xB42C10", Offset = "0xB42C10", VA = "0xB42C10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F45AC", Offset = "0x8F45AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xB42C1C", Offset = "0xB42C1C", VA = "0xB42C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xB42CBC", Offset = "0xB42CBC", VA = "0xB42CBC")]
	public void CollisionWithMinecart()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xB42D64", Offset = "0xB42D64", VA = "0xB42D64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F45BC", Offset = "0x8F45BC")]
	private IEnumerator Close()
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xB42E04", Offset = "0xB42E04", VA = "0xB42E04")]
	public cTurnstile()
	{
	}
}
[Token(Token = "0x200005E")]
public class MinecartController : MonoBehaviour
{
	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MinecartController _instance;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform roughStonePos;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator mineCartAnimator;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[StateInfoIdReference]
	private int trackStateId;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool wallBlock;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool stop;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool cartHasHitBlock;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E00", Offset = "0x8E2E00")]
	private bool <cartIsOut>k__BackingField;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MineCart minecartScript;

	[Token(Token = "0x17000008")]
	[ReadOnly]
	[ShowInInspector]
	public bool cartIsOut
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0xCCA5A8", Offset = "0xCCA5A8", VA = "0xCCA5A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4620", Offset = "0x8F4620")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xCCA5B0", Offset = "0xCCA5B0", VA = "0xCCA5B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4630", Offset = "0x8F4630")]
		private set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public static MinecartController Instance
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xCCA5BC", Offset = "0xCCA5BC", VA = "0xCCA5BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xCCA688", Offset = "0xCCA688", VA = "0xCCA688")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xCCA750", Offset = "0xCCA750", VA = "0xCCA750")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4640", Offset = "0x8F4640")]
	public void StartCart()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xCCA894", Offset = "0xCCA894", VA = "0xCCA894")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4650", Offset = "0x8F4650")]
	public void ResumeCart()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xCCA954", Offset = "0xCCA954", VA = "0xCCA954")]
	public void ResumeCartWhenGateClose()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xCCAA14", Offset = "0xCCAA14", VA = "0xCCAA14")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4660", Offset = "0x8F4660")]
	public void LeftTrackSwitch()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xCCAABC", Offset = "0xCCAABC", VA = "0xCCAABC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4670", Offset = "0x8F4670")]
	public void RightTrackSwitch()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xCCAB64", Offset = "0xCCAB64", VA = "0xCCAB64")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4680", Offset = "0x8F4680")]
	public void SwitchTracks()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xCCAC64", Offset = "0xCCAC64", VA = "0xCCAC64")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4690", Offset = "0x8F4690")]
	public void Impact()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xCCAD20", Offset = "0xCCAD20", VA = "0xCCAD20")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F46A0", Offset = "0x8F46A0")]
	public void WallBlock()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xCCAE00", Offset = "0xCCAE00", VA = "0xCCAE00")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F46B0", Offset = "0x8F46B0")]
	public void ChestBlock()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xCCAEDC", Offset = "0xCCAEDC", VA = "0xCCAEDC")]
	public void StopCart()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xCCAF6C", Offset = "0xCCAF6C", VA = "0xCCAF6C")]
	public void SetWallBlockBool(bool state)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xCCA748", Offset = "0xCCA748", VA = "0xCCA748")]
	public void ResetCartIsOutBool()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xCCAF78", Offset = "0xCCAF78", VA = "0xCCAF78")]
	public void AddRoughStone(RoughStone target)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xCCB034", Offset = "0xCCB034", VA = "0xCCB034")]
	public MinecartController()
	{
	}
}
[Token(Token = "0x200005F")]
public class cActivationButton : MonoBehaviour
{
	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animToPlay;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool playing;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent buttonPressed;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	[SerializeField]
	private string playButtonPressFMODEvent;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance playButtonPressFMODInstance;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xA912F8", Offset = "0xA912F8", VA = "0xA912F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xA914BC", Offset = "0xA914BC", VA = "0xA914BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xA913EC", Offset = "0xA913EC", VA = "0xA913EC")]
	private void playButtonPressAudio()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xA91564", Offset = "0xA91564", VA = "0xA91564")]
	public cActivationButton()
	{
	}
}
[Token(Token = "0x2000060")]
public class cFireGem : MonoBehaviour
{
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF7A0", Offset = "0x8DF7A0")]
	private sealed class <HideFireGemForever>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cFireGem <>4__this;

		[Token(Token = "0x170001FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xACCF74", Offset = "0xACCF74", VA = "0xACCF74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xACCFE0", Offset = "0xACCFE0", VA = "0xACCFE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xACCD58", Offset = "0xACCD58", VA = "0xACCD58")]
		[DebuggerHidden]
		public <HideFireGemForever>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xACCE5C", Offset = "0xACCE5C", VA = "0xACCE5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xACCE60", Offset = "0xACCE60", VA = "0xACCE60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xACCF7C", Offset = "0xACCF7C", VA = "0xACCF7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject unpolishedGem;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject polishedGem;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent rayOfFireEvent;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem gemSparkle;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject grabbedParticleEffects;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOEvent unpolishedGemGrabbed;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOEvent polishedGemGrabbed;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool polished;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool learnedRayOfFire;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xACCBC8", Offset = "0xACCBC8", VA = "0xACCBC8")]
	public void HideRoughGem()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xACCBE8", Offset = "0xACCBE8", VA = "0xACCBE8")]
	public void ShowPolishedGem()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xACCC30", Offset = "0xACCC30", VA = "0xACCC30")]
	public GameObject GetUnpolishedGO()
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xACCC38", Offset = "0xACCC38", VA = "0xACCC38")]
	public GameObject GetPolishedGO()
	{
		return null;
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xACCC40", Offset = "0xACCC40", VA = "0xACCC40")]
	public void SetPolishedBool(bool state)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xACCC4C", Offset = "0xACCC4C", VA = "0xACCC4C")]
	public void RayOfFireCheck()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xACCCE4", Offset = "0xACCCE4", VA = "0xACCCE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F46C0", Offset = "0x8F46C0")]
	public IEnumerator HideFireGemForever()
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xACCD84", Offset = "0xACCD84", VA = "0xACCD84")]
	private void SendToGarbageScene()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xACCE18", Offset = "0xACCE18", VA = "0xACCE18")]
	private void PlayGemGrabbedSound()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xACCE54", Offset = "0xACCE54", VA = "0xACCE54")]
	public cFireGem()
	{
	}
}
[Token(Token = "0x2000061")]
public class cPolishingTool : MonoBehaviour
{
	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF7B0", Offset = "0x8DF7B0")]
	private sealed class <DelayCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayTime;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public cPolishingTool <>4__this;

		[Token(Token = "0x17000200")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0xAFC840", Offset = "0xAFC840", VA = "0xAFC840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0xAFC8AC", Offset = "0xAFC8AC", VA = "0xAFC8AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xAFC608", Offset = "0xAFC608", VA = "0xAFC608")]
		[DebuggerHidden]
		public <DelayCoroutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xAFC6F0", Offset = "0xAFC6F0", VA = "0xAFC6F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xAFC6F4", Offset = "0xAFC6F4", VA = "0xAFC6F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xAFC848", Offset = "0xAFC848", VA = "0xAFC848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform outake;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float timeToDelay;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool delayed;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool buttonPressed;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2EF8", Offset = "0x8E2EF8")]
	private bool <gemInsertedBool>k__BackingField;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent gemInserted;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent polishStarted;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent gemPolished;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent poweredOn;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Animator polishAnim;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private cFireGem gemScript;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject gemGO;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private cShudder polisherShudderScript;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ParticleSystem steamEffectParticles;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool powered;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject activationLight;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private soVOEvent machineryNotPowered;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ParticleSystem snapSuccessParticles;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ParticleSystem hoverParticles;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private cSoundEffect snapEffect;

	[Token(Token = "0x1700000A")]
	public bool gemInsertedBool
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xAFC0C8", Offset = "0xAFC0C8", VA = "0xAFC0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4724", Offset = "0x8F4724")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xAFC0D0", Offset = "0xAFC0D0", VA = "0xAFC0D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4734", Offset = "0x8F4734")]
		private set
		{
		}
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xAFC0DC", Offset = "0xAFC0DC", VA = "0xAFC0DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xAFC140", Offset = "0xAFC140", VA = "0xAFC140")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xAFC178", Offset = "0xAFC178", VA = "0xAFC178")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xAFC240", Offset = "0xAFC240", VA = "0xAFC240")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xAFC25C", Offset = "0xAFC25C", VA = "0xAFC25C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xAFC43C", Offset = "0xAFC43C", VA = "0xAFC43C")]
	public void PolishGem()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xAFC584", Offset = "0xAFC584", VA = "0xAFC584")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4744", Offset = "0x8F4744")]
	private IEnumerator DelayCoroutine(float delayTime)
	{
		return null;
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xAFC634", Offset = "0xAFC634", VA = "0xAFC634")]
	public void PowerOn(bool state)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xAFC6E0", Offset = "0xAFC6E0", VA = "0xAFC6E0")]
	public cPolishingTool()
	{
	}
}
[Token(Token = "0x2000062")]
public class cSilverLumpSnapPoint : MonoBehaviour
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLumpSnapped;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F98", Offset = "0x8E2F98")]
	private cSilverLump <lump>k__BackingField;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem snapSuccessParticles;

	[Token(Token = "0x1700000B")]
	public cSilverLump lump
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xB361A8", Offset = "0xB361A8", VA = "0xB361A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F47A8", Offset = "0x8F47A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xB361B0", Offset = "0xB361B0", VA = "0xB361B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F47B8", Offset = "0x8F47B8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xB361B8", Offset = "0xB361B8", VA = "0xB361B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xB362B4", Offset = "0xB362B4", VA = "0xB362B4")]
	public cSilverLumpSnapPoint()
	{
	}
}
[Token(Token = "0x2000063")]
public class cStampingArm : MonoBehaviour
{
	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform raisedPosition;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform loweredPosition;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform minimumPositionForLump;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxHeight;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float minHeight;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private cVerticalLockPoints handleLockPoints;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private cGrabbableRedux handleGrabbable;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private cSilverLump lump;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cRoughStone roughStone;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float progress;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3028", Offset = "0x8E3028")]
	private bool <isLockedFront>k__BackingField;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float refreshSpeed;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private soVOEvent silverLumpTooSolid;

	[Token(Token = "0x1700000C")]
	public bool isLockedFront
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xB3F4E8", Offset = "0xB3F4E8", VA = "0xB3F4E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F47C8", Offset = "0x8F47C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xB3F4F0", Offset = "0xB3F4F0", VA = "0xB3F4F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F47D8", Offset = "0x8F47D8")]
		set
		{
		}
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xB3F4FC", Offset = "0xB3F4FC", VA = "0xB3F4FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xB3F5D4", Offset = "0xB3F5D4", VA = "0xB3F5D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xB3F8FC", Offset = "0xB3F8FC", VA = "0xB3F8FC")]
	private void UpdateProgress()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xB3F9E0", Offset = "0xB3F9E0", VA = "0xB3F9E0")]
	public void SnapToHeight(float height)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xB3F7EC", Offset = "0xB3F7EC", VA = "0xB3F7EC")]
	private void StampBlocked()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xB3FA90", Offset = "0xB3FA90", VA = "0xB3FA90")]
	public cStampingArm()
	{
	}
}
[Token(Token = "0x2000064")]
public class cCrankable : MonoBehaviour
{
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform crankPivot;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cGrabbableRedux crankGrabbable;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float minOffset;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float maxOffset;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastY;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float thisY;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastOffset;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool firstFrameGrabbed;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3098", Offset = "0x8E3098")]
	private bool <lockedFront>k__BackingField;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E30A8", Offset = "0x8E30A8")]
	private bool <lockedBack>k__BackingField;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float standardMoveAmount;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private cSoundEffect crankSound;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cSoundEffect lockSound;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool crankSoundPlaying;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent onLockedFront;

	[Token(Token = "0x1700000D")]
	public bool lockedFront
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xAC2CC0", Offset = "0xAC2CC0", VA = "0xAC2CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F47E8", Offset = "0x8F47E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xAC2CC8", Offset = "0xAC2CC8", VA = "0xAC2CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F47F8", Offset = "0x8F47F8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public bool lockedBack
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xAC2CD4", Offset = "0xAC2CD4", VA = "0xAC2CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4808", Offset = "0x8F4808")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xAC2CDC", Offset = "0xAC2CDC", VA = "0xAC2CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4818", Offset = "0x8F4818")]
		private set
		{
		}
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xAC2CE8", Offset = "0xAC2CE8", VA = "0xAC2CE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xAC2CF8", Offset = "0xAC2CF8", VA = "0xAC2CF8")]
	private void CheckGrabbed()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xAC2DB0", Offset = "0xAC2DB0", VA = "0xAC2DB0")]
	private void HandleCranking()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xAC307C", Offset = "0xAC307C", VA = "0xAC307C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xAC31D0", Offset = "0xAC31D0", VA = "0xAC31D0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xAC31A0", Offset = "0xAC31A0", VA = "0xAC31A0")]
	private void TryLockBack()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xAC31BC", Offset = "0xAC31BC", VA = "0xAC31BC")]
	private void TryLockFront()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xAC328C", Offset = "0xAC328C", VA = "0xAC328C")]
	private void LockBack()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xAC3298", Offset = "0xAC3298", VA = "0xAC3298")]
	private void LockFront()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xAC2EE8", Offset = "0xAC2EE8", VA = "0xAC2EE8")]
	private void Move(float moveAmount)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xAC3320", Offset = "0xAC3320", VA = "0xAC3320")]
	public void PlayCrankSound()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xAC32EC", Offset = "0xAC32EC", VA = "0xAC32EC")]
	public void StopSoundEffect()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xAC32D0", Offset = "0xAC32D0", VA = "0xAC32D0")]
	private void PlayLockSound()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xAC3360", Offset = "0xAC3360", VA = "0xAC3360")]
	public cCrankable()
	{
	}
}
[Token(Token = "0x2000065")]
[ExecuteInEditMode]
public class cIKSolver : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000412")]
	public class Bone
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float length;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 origPos;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Vector3 origScale;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public Quaternion origRot;

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xB6B144", Offset = "0xB6B144", VA = "0xB6B144")]
		public Bone()
		{
		}
	}

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E30F8", Offset = "0x8E30F8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E30F8", Offset = "0x8E30F8")]
	[SerializeField]
	public Bone[] bones;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3168", Offset = "0x8E3168")]
	public Transform endPointOfLastBone;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E31A0", Offset = "0x8E31A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E31A0", Offset = "0x8E31A0")]
	public Transform poleTarget;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3200", Offset = "0x8E3200")]
	public int iterations;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E3238", Offset = "0x8E3238")]
	public bool enable;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[HideInInspector]
	public bool needResetOption;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastTargetPosition;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool editorInitialized;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xB69B58", Offset = "0xB69B58", VA = "0xB69B58")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xB6A330", Offset = "0xB6A330", VA = "0xB6A330")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xB69BB8", Offset = "0xB69BB8", VA = "0xB69BB8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xB6A570", Offset = "0xB6A570", VA = "0xB6A570")]
	private void Solve()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xB6AE68", Offset = "0xB6AE68", VA = "0xB6AE68")]
	public void ResetHierarchy()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xB6B13C", Offset = "0xB6B13C", VA = "0xB6B13C")]
	public cIKSolver()
	{
	}
}
[Token(Token = "0x2000066")]
public class cLever : MonoBehaviour
{
	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xB6DD9C", Offset = "0xB6DD9C", VA = "0xB6DD9C")]
	public cLever()
	{
	}
}
[Token(Token = "0x2000067")]
public class cLeverTriggerPoint : MonoBehaviour
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inTrigger;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cLever leverInTrigger;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent triggerEnterEvent;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent triggerExitEvent;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xB6DDA4", Offset = "0xB6DDA4", VA = "0xB6DDA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xB6DEE0", Offset = "0xB6DEE0", VA = "0xB6DEE0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xB6E078", Offset = "0xB6E078", VA = "0xB6E078")]
	public cLeverTriggerPoint()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD314", Offset = "0x8DD314")]
public class cPulley : MonoBehaviour
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float startYPosition;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float yGrabPosition;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool gotFirstPos;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ConfigurableJoint jointToMove;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float returnSpeed;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float jointMaxHeight;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float jointMinHeight;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float maxYDisplacement;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool pulleyDown;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float tolerance;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEvent OnHornPulled;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Animator minecartController;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	[SerializeField]
	private string pulleyPullSoundEvent;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EventInstance pulleyPullSoundInstance;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	[SerializeField]
	private string pulleyBlockedSoundEvent;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EventInstance pulleyBlockedSoundInstance;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xAFFE78", Offset = "0xAFFE78", VA = "0xAFFE78")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xAFFF28", Offset = "0xAFFF28", VA = "0xAFFF28")]
	private void DisableAutoconfigAnchor()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xAFFF48", Offset = "0xAFFF48", VA = "0xAFFF48")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xB001A8", Offset = "0xB001A8", VA = "0xB001A8")]
	private void CheckLimits()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xB00334", Offset = "0xB00334", VA = "0xB00334")]
	private void PlayPulleyAudio()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xB00404", Offset = "0xB00404", VA = "0xB00404")]
	public cPulley()
	{
	}
}
[Token(Token = "0x2000069")]
public class cShadowHandRestriction : MonoBehaviour
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useXLimits;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool useYLimits;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useZLimits;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform xMin;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform xMax;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform yMin;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform yMax;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform zMin;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform zMax;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xB32F0C", Offset = "0xB32F0C", VA = "0xB32F0C")]
	public Vector3 GetRestrictedPosition(Vector3 newPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xB3355C", Offset = "0xB3355C", VA = "0xB3355C")]
	public cShadowHandRestriction()
	{
	}
}
[Token(Token = "0x200006A")]
public class cAstrolabe : MonoBehaviour
{
	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool consoleOn;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sBool astrolabPuzzleSolved;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sBool astrolabDeployed;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator magicCityAnim;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOEvent consoleOnVO;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOSequence cityRiseSequence;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOEvent citySeenVO;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cSoundEffect cityRiseSFX;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private cSoundEffect cityRiseMusicCue;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private cShadowHandable[] smallIslands;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float[] correctRotationValues;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform[] currentRotationValues;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject[] beamTargets;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject beamOriginPoint;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private cBeamOfLight lightScript;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Animator astrolabeAnimator;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int numberOfRings;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private ParticleSystem[] particleEffects;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject astrolabMesh;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private cLightningRod lightningRod;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private cCheckpoint astrolabOnCheckpoint12;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public cSoundEffect ringMoved;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public cSoundEffect islandsMove;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public cSoundEffect islandsStop;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool islandsMoveSFXPlaying;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool risen;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xA92788", Offset = "0xA92788", VA = "0xA92788")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xA9278C", Offset = "0xA9278C", VA = "0xA9278C")]
	public void ArrivedInSkybridge()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xA92850", Offset = "0xA92850", VA = "0xA92850")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4828", Offset = "0x8F4828")]
	public void PowerOn()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xA92F78", Offset = "0xA92F78", VA = "0xA92F78")]
	private void SetAstrolabeDeployed()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xA93070", Offset = "0xA93070", VA = "0xA93070")]
	public void PowerOff()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xA930C4", Offset = "0xA930C4", VA = "0xA930C4")]
	public void TogglePower()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xA92968", Offset = "0xA92968", VA = "0xA92968")]
	public void PowerOnPuzzleCompleted()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xA93160", Offset = "0xA93160", VA = "0xA93160")]
	public void IslandPuzzleSolved()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xA931F4", Offset = "0xA931F4", VA = "0xA931F4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4838", Offset = "0x8F4838")]
	public void ActivateMagicCity()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xA932E4", Offset = "0xA932E4", VA = "0xA932E4")]
	public void CityHasRisen()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xA930EC", Offset = "0xA930EC", VA = "0xA930EC")]
	public void PlayParticles()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xA932E8", Offset = "0xA932E8", VA = "0xA932E8")]
	public void ControlWeatherUnlocked()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xA92E34", Offset = "0xA92E34", VA = "0xA92E34")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4848", Offset = "0x8F4848")]
	private void CheckForPinkPower()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xA92DD0", Offset = "0xA92DD0", VA = "0xA92DD0")]
	private void SetSmallIslandsShadowhandable(bool isShadowhandable)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xA92A58", Offset = "0xA92A58", VA = "0xA92A58")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4858", Offset = "0x8F4858")]
	public void CheckAstrolabPuzzle()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xA93344", Offset = "0xA93344", VA = "0xA93344")]
	public void PlayIslandsMovingSFX(bool islandsMoving)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xA9336C", Offset = "0xA9336C", VA = "0xA9336C")]
	public void PlayIslandsStopSFX()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xA93388", Offset = "0xA93388", VA = "0xA93388")]
	public cAstrolabe()
	{
	}
}
[Token(Token = "0x200006B")]
public class cBeamLogic : MonoBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool generatorFixed;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float beamOvershot;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LineRenderer beam1;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LineRenderer beam2;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LineRenderer beam3;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LineRenderer beam4;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer beamFinal;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform startTransform;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform targetTransform1;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform targetTransform2;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform targetTransform3;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform targetTransform4;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform targetTransformFinal;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Vector3 beam1Direction;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private Vector3 beam2Direction;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Vector3 beam3Direction;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private Vector3 beam4Direction;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool firing;

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xA9551C", Offset = "0xA9551C", VA = "0xA9551C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4868", Offset = "0x8F4868")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xA95540", Offset = "0xA95540", VA = "0xA95540")]
	public void CheckBeams()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xA955E8", Offset = "0xA955E8", VA = "0xA955E8")]
	private void CalculateDirections()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA957E0", Offset = "0xA957E0", VA = "0xA957E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xA95814", Offset = "0xA95814", VA = "0xA95814")]
	private void CheckBeam1()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xA959D4", Offset = "0xA959D4", VA = "0xA959D4")]
	private void CheckBeam2()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xA95C78", Offset = "0xA95C78", VA = "0xA95C78")]
	private void CheckBeam3()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xA95F14", Offset = "0xA95F14", VA = "0xA95F14")]
	private void CheckBeam4()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xA96140", Offset = "0xA96140", VA = "0xA96140")]
	public cBeamLogic()
	{
	}
}
[Token(Token = "0x200006C")]
public class cBeamOfLight : MonoBehaviour
{
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer beamLineRenderer;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject BeamParticles;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xA96150", Offset = "0xA96150", VA = "0xA96150")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xA961E0", Offset = "0xA961E0", VA = "0xA961E0")]
	public void SetTwoLines(int firstIndex, int secondIndex, Vector3 origin, Vector3 destination)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xA9624C", Offset = "0xA9624C", VA = "0xA9624C")]
	public void SetLine(int index, Vector3 position)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xA96268", Offset = "0xA96268", VA = "0xA96268")]
	public void SetNumOfVertex(int numOfVertex)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xA96284", Offset = "0xA96284", VA = "0xA96284")]
	public void SetDirectionOfParticles()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xA962F8", Offset = "0xA962F8", VA = "0xA962F8")]
	public cBeamOfLight()
	{
	}
}
[Token(Token = "0x200006D")]
public class cConsolePiece : MonoBehaviour
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float timer;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool isVOAllowed;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float cooldownTime;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cConsolePuzzle consolePuzzle;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cConsolePiece cachedCollisionPiece;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int numCollisionsBeforeVO;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int numCollisionsWithSameObj;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xA9AAEC", Offset = "0xA9AAEC", VA = "0xA9AAEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xA9AB60", Offset = "0xA9AB60", VA = "0xA9AB60")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xA9AB64", Offset = "0xA9AB64", VA = "0xA9AB64")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xA9AC50", Offset = "0xA9AC50", VA = "0xA9AC50")]
	public cConsolePiece()
	{
	}
}
[Token(Token = "0x200006E")]
public class cConsolePuzzle : MonoBehaviour
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool generatorFixed;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sBool consolePowered;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sBool consoleTurnedOn;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private sBool consoleButtonPressed;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOEvent firstTimeArrived;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOEvent secondTimeArrived;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOSequence necromancerMeeting;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private soVOEvent generatorRepairedConsoleNotPowered;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private soVOEvent consolePoweredVO;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private soVOEvent generatorGazed;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public soVOEvent consolePiecesHint;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent arrivedInSkybridge;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SOGameEvent.GameEventDelegate arrivedInSkybridgeDelegate;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject multiverseHologram;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private cAstrolabe astrolabe;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject whiteBeam;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject purpleBeam;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject pinkBeam;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject consoleButton;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject[] generatorParts;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private ParticleSystem[] particleEffects;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject[] snapPoints;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private cSoundEffect consolePoweredOn;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject bird;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private SOGameEvent forceClosePlanarCompass;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityEvent generatorCompletedEvent;

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xAC1488", Offset = "0xAC1488", VA = "0xAC1488")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xAC150C", Offset = "0xAC150C", VA = "0xAC150C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xAC1530", Offset = "0xAC1530", VA = "0xAC1530")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xAC15A4", Offset = "0xAC15A4", VA = "0xAC15A4")]
	private void ArrivedInSkybridge()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xAC18E8", Offset = "0xAC18E8", VA = "0xAC18E8")]
	public void PowerOnAstrolab()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xAC1610", Offset = "0xAC1610", VA = "0xAC1610")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4878", Offset = "0x8F4878")]
	private void CheckGeneratorFixed()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xAC1A5C", Offset = "0xAC1A5C", VA = "0xAC1A5C")]
	public void GeneratorGazed()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xAC1874", Offset = "0xAC1874", VA = "0xAC1874")]
	private void PlayArrivedVO()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xAC1AAC", Offset = "0xAC1AAC", VA = "0xAC1AAC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4888", Offset = "0x8F4888")]
	public void FixGenerator()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xAC19AC", Offset = "0xAC19AC", VA = "0xAC19AC")]
	private void PowerConsole()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xAC1B4C", Offset = "0xAC1B4C", VA = "0xAC1B4C")]
	public void ShowMultiverseHologram(bool isVisible)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xAC1904", Offset = "0xAC1904", VA = "0xAC1904")]
	public bool IsBeamPurple()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xAC1D14", Offset = "0xAC1D14", VA = "0xAC1D14")]
	private void SetBeamPurple()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xAC1D34", Offset = "0xAC1D34", VA = "0xAC1D34")]
	private void SetBeamPink()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xAC1D54", Offset = "0xAC1D54", VA = "0xAC1D54")]
	public cConsolePuzzle()
	{
	}
}
[Token(Token = "0x200006F")]
public class cConsoleTriggerZone : MonoBehaviour
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent zoneEntered;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent zoneLeft;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool playing;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator animToPlay;

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xAC1D5C", Offset = "0xAC1D5C", VA = "0xAC1D5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xAC1E2C", Offset = "0xAC1E2C", VA = "0xAC1E2C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xAC1EF8", Offset = "0xAC1EF8", VA = "0xAC1EF8")]
	public cConsoleTriggerZone()
	{
	}
}
[Token(Token = "0x2000070")]
public class cLightningRod : MonoBehaviour
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent skybridgeReachedEvent;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SOGameEvent.GameEventDelegate skybridgeReachedDelegate;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sBool scaffoldingGone;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cSilverSheetSnapPoint sheetSnapPoint;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject placeholderBurningEffect;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject scaffolding;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float controlWeatherDuration;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject weatherEffect;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject lightningHitRodEffect;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private soVOEvent sheetEnergized;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private soVOEvent otherwhereMirrorComplete;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private soVOSequence lightningRodHints;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject gildedMirrorPortalKey;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private sBool otherwhereUnlocked;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private soVOSequence dreamThought08Seq;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private bool weatherHappening;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private cSoundEffect lightningStrikeSoundEffect;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private cSoundEffect mirrorPortalKeySpawnedSound;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private soVOSequence runestonesNotFoundSequence;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SOGameEvent forceClosePlanarCompass;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private soVOEvent rodGazedNoScaffolding;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private soVOSequence rodGazedWithScaffolding;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private soVOEvent generatorGazed;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private cGazeTarget rodGazeTarget;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private cGazeTarget generatorGazeTarget;

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xB6E080", Offset = "0xB6E080", VA = "0xB6E080")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xB6E13C", Offset = "0xB6E13C", VA = "0xB6E13C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xB6E160", Offset = "0xB6E160", VA = "0xB6E160")]
	private void ArrivedInSkybridge()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xB6E32C", Offset = "0xB6E32C", VA = "0xB6E32C")]
	public void LightningRodGazed()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xB6E274", Offset = "0xB6E274", VA = "0xB6E274")]
	public void DisplayMeditationHint(bool isVisible)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xB6E3B4", Offset = "0xB6E3B4", VA = "0xB6E3B4")]
	public void ControlWeatherCast()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xB6E408", Offset = "0xB6E408", VA = "0xB6E408")]
	public void BackgroundWeather()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xB6E480", Offset = "0xB6E480", VA = "0xB6E480")]
	private void LightningHitRod()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xB6E508", Offset = "0xB6E508", VA = "0xB6E508")]
	private void TryEnergizeSheet()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB6E5F8", Offset = "0xB6E5F8", VA = "0xB6E5F8")]
	private void TryImbueSheetWithPlanarEnergy()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB6E79C", Offset = "0xB6E79C", VA = "0xB6E79C")]
	private void DisableWeather()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB6E7D4", Offset = "0xB6E7D4", VA = "0xB6E7D4")]
	private void DisableLightningHitRod()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB6E7F4", Offset = "0xB6E7F4", VA = "0xB6E7F4")]
	public void Meditating()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB6E8AC", Offset = "0xB6E8AC", VA = "0xB6E8AC")]
	public cLightningRod()
	{
	}
}
[Token(Token = "0x2000071")]
public class cMagicCity : MonoBehaviour
{
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent cityHasRisen;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB7029C", Offset = "0xB7029C", VA = "0xB7029C")]
	public void CityRisen()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB702B0", Offset = "0xB702B0", VA = "0xB702B0")]
	public cMagicCity()
	{
	}
}
[Token(Token = "0x2000072")]
public class cMetalPole : MonoBehaviour
{
	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject whiteGem;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject purpleGem;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject pinkGem;

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xB734EC", Offset = "0xB734EC", VA = "0xB734EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xB735E8", Offset = "0xB735E8", VA = "0xB735E8")]
	public cMetalPole()
	{
	}
}
[Token(Token = "0x2000073")]
public class cSilverSheetSnapPoint : MonoBehaviour
{
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public sBool isSheetSnapped;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public sBool isSheetEnergized;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cSilverLump sheet;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject snappedSheetVisual;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject sheetEnergizedVisual;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xB362BC", Offset = "0xB362BC", VA = "0xB362BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xB3633C", Offset = "0xB3633C", VA = "0xB3633C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xB36524", Offset = "0xB36524", VA = "0xB36524")]
	public void DisplaySnappedSheet()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xB36544", Offset = "0xB36544", VA = "0xB36544")]
	public void EnergizeSheet()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xB3657C", Offset = "0xB3657C", VA = "0xB3657C")]
	public void HideEnergizedSheet()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xB365C0", Offset = "0xB365C0", VA = "0xB365C0")]
	public cSilverSheetSnapPoint()
	{
	}
}
[Token(Token = "0x2000074")]
public class cSkybridgeBird : MonoBehaviour
{
	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF7C0", Offset = "0x8DF7C0")]
	private sealed class <RetrieveItem>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cSkybridgeBird <>4__this;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 endPos;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startingPos>5__2;

		[Token(Token = "0x17000202")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xB37B5C", Offset = "0xB37B5C", VA = "0xB37B5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0xB37BC8", Offset = "0xB37BC8", VA = "0xB37BC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xB376F0", Offset = "0xB376F0", VA = "0xB376F0")]
		[DebuggerHidden]
		public <RetrieveItem>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xB37730", Offset = "0xB37730", VA = "0xB37730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xB37734", Offset = "0xB37734", VA = "0xB37734", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xB37B64", Offset = "0xB37B64", VA = "0xB37B64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Animator birdAnimator;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 originalPosition;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion originalRotation;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform targetTransform;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float timePassed;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float timePassedReturn;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float secondsToFlyToTarget;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private cSoundEffect idleSound;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private cSoundEffect pickupSound;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cSoundEffect takeoffSound;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject runeStone;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UnityEvent onStartFlying;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UnityEvent onEndFlying;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool itemGrabbed;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xB375B8", Offset = "0xB375B8", VA = "0xB375B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xB37614", Offset = "0xB37614", VA = "0xB37614")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4898", Offset = "0x8F4898")]
	public void RetrieveItemLoop()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xB37658", Offset = "0xB37658", VA = "0xB37658")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F48A8", Offset = "0x8F48A8")]
	public IEnumerator RetrieveItem(Vector3 endPos)
	{
		return null;
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xB3771C", Offset = "0xB3771C", VA = "0xB3771C")]
	public cSkybridgeBird()
	{
	}
}
[Token(Token = "0x2000075")]
public class cSkybridgeIdleVOs : MonoBehaviour
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float playScaffoldingLineAfterSeconds;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float scaffoldingLineTimer;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOEvent scaffoldingLine;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sBool controlWeatherLearned;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent flowReachedEvent;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SOGameEvent.GameEventDelegate flowReachedDelegate;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xB37BD0", Offset = "0xB37BD0", VA = "0xB37BD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xB37C60", Offset = "0xB37C60", VA = "0xB37C60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xB37C84", Offset = "0xB37C84", VA = "0xB37C84")]
	private void FlowReached()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB37C90", Offset = "0xB37C90", VA = "0xB37C90")]
	private void Update()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB37C94", Offset = "0xB37C94", VA = "0xB37C94")]
	private void ScaffoldingLineTimer()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xB37CE4", Offset = "0xB37CE4", VA = "0xB37CE4")]
	private void PlayScaffoldingLine()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xB37D88", Offset = "0xB37D88", VA = "0xB37D88")]
	public cSkybridgeIdleVOs()
	{
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DD378", Offset = "0x8DD378")]
public class SOAstrolabePuzzle : ScriptableObject
{
	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool savedRotations;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Vector3[] savedRingRotations;

	[Token(Token = "0x1700000F")]
	public bool SavedRotations
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0xC31D54", Offset = "0xC31D54", VA = "0xC31D54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000312")]
		[Address(RVA = "0xC31D5C", Offset = "0xC31D5C", VA = "0xC31D5C")]
		set
		{
		}
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC31D68", Offset = "0xC31D68", VA = "0xC31D68")]
	public SOAstrolabePuzzle()
	{
	}
}
[Token(Token = "0x2000077")]
public class cArrivedInOtherwhere : MonoBehaviour
{
	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent arrivedInOtherwhere;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate arrivedInOtherwhereDelegate;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOSequence firstOtherwhereVisitPart1;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cOtherwhereIdleLines idleLineManager;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private cWallPuzzle wallPuzzle;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private cKingMask kingMask;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private cDoubleLockedChest doubleLockedChest;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cMirrorDouble mirrorDouble;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xA92648", Offset = "0xA92648", VA = "0xA92648")]
	private void Start()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xA926CC", Offset = "0xA926CC", VA = "0xA926CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xA926F0", Offset = "0xA926F0", VA = "0xA926F0")]
	private void ArrivedInOtherwhere()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xA92780", Offset = "0xA92780", VA = "0xA92780")]
	public cArrivedInOtherwhere()
	{
	}
}
[Token(Token = "0x2000078")]
public class cCrowMirror : MonoBehaviour
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoxCollider colli;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anim;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOSequence kingExitSequence;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private soVOSequence crowIntroSequence;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOSequence crowPreviouslyCommunedInMatWorld;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOSequence crowMainDialogue;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOEvent notAllRunestonesFound;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private soVOSequence allRunestonesFound;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private soVOSequence necromancerDreamThought7;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private sBool matWorldCrowCommuned;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xAC3488", Offset = "0xAC3488", VA = "0xAC3488")]
	private void Start()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xAC3530", Offset = "0xAC3530", VA = "0xAC3530")]
	public void RevealCrowMirror()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xAC35A0", Offset = "0xAC35A0", VA = "0xAC35A0")]
	public void CrowMirrorCommuned()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xAC35DC", Offset = "0xAC35DC", VA = "0xAC35DC")]
	public void CrowIntroComplete()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xAC3604", Offset = "0xAC3604", VA = "0xAC3604")]
	public void CommunedWithMatworldCrow()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xAC3640", Offset = "0xAC3640", VA = "0xAC3640")]
	public void CrowMainDialogue()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xAC367C", Offset = "0xAC367C", VA = "0xAC367C")]
	public void CrowMainDialogueComplete()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xAC36F0", Offset = "0xAC36F0", VA = "0xAC36F0")]
	public cCrowMirror()
	{
	}
}
[Token(Token = "0x2000079")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD3C4", Offset = "0x8DD3C4")]
public class cCustomGravity : MonoBehaviour
{
	[Token(Token = "0x2000414")]
	public enum GravityDirection
	{
		[Token(Token = "0x4001B65")]
		down,
		[Token(Token = "0x4001B66")]
		up,
		[Token(Token = "0x4001B67")]
		left,
		[Token(Token = "0x4001B68")]
		right,
		[Token(Token = "0x4001B69")]
		forward,
		[Token(Token = "0x4001B6A")]
		back
	}

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GravityDirection sharedGravityDirection;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 alteredGravityForce;

	[Token(Token = "0x400043A")]
	private const float globalGravity = 9.81f;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gravityScale;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GravityDirection localGravityDir;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool shareWorldGravity;

	[Token(Token = "0x17000010")]
	public bool ShareWorldGravity
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0xAC3704", Offset = "0xAC3704", VA = "0xAC3704")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xAC36F8", Offset = "0xAC36F8", VA = "0xAC36F8")]
		set
		{
		}
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xAC370C", Offset = "0xAC370C", VA = "0xAC370C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xAC3814", Offset = "0xAC3814", VA = "0xAC3814")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xAC38D0", Offset = "0xAC38D0", VA = "0xAC38D0")]
	private Vector3 GetGravityDirectionVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xAC3AB0", Offset = "0xAC3AB0", VA = "0xAC3AB0")]
	public void SetGravityDirection(GravityDirection direction)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xAC3B1C", Offset = "0xAC3B1C", VA = "0xAC3B1C")]
	public GravityDirection GetGravityDirection()
	{
		return default(GravityDirection);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xAC3B84", Offset = "0xAC3B84", VA = "0xAC3B84")]
	public void SetLocalGravityDirection(GravityDirection direction)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xAC3B8C", Offset = "0xAC3B8C", VA = "0xAC3B8C")]
	public GravityDirection GetLocalGravityDirection()
	{
		return default(GravityDirection);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xAC3B94", Offset = "0xAC3B94", VA = "0xAC3B94")]
	public cCustomGravity()
	{
	}
}
[Token(Token = "0x200007A")]
public class cDollPainting : MonoBehaviour
{
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GreenDollPaintingSOBool dollPaintingSOBool;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject defaultPainting;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject burningPainting;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject burnedPainting;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject rainingPainting;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject emptyPainting;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject dollHead;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeToBurned;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xAC6514", Offset = "0xAC6514", VA = "0xAC6514")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xAC66D0", Offset = "0xAC66D0", VA = "0xAC66D0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F490C", Offset = "0x8F490C")]
	public void BurningPainting()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xAC6730", Offset = "0xAC6730", VA = "0xAC6730")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F491C", Offset = "0x8F491C")]
	public void RainingPainting()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xAC67EC", Offset = "0xAC67EC", VA = "0xAC67EC")]
	public void BurnedPainting()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xAC684C", Offset = "0xAC684C", VA = "0xAC684C")]
	public void EmptyPainting()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xAC68A4", Offset = "0xAC68A4", VA = "0xAC68A4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F492C", Offset = "0x8F492C")]
	public void DollHeadTaken()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xAC68D4", Offset = "0xAC68D4", VA = "0xAC68D4")]
	public cDollPainting()
	{
	}
}
[Token(Token = "0x200007B")]
public class cGravityZone : MonoBehaviour
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public cCustomGravity.GravityDirection gravDir;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xB67218", Offset = "0xB67218", VA = "0xB67218")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB673A8", Offset = "0xB673A8", VA = "0xB673A8")]
	public cGravityZone()
	{
	}
}
[Token(Token = "0x200007C")]
public class cGreenDoll : MonoBehaviour
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator dollAnimationController;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dollHead;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject runeStone;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GreenDollPaintingSOBool dollPaintingSOBool;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dollHeadAttached;

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xB673B0", Offset = "0xB673B0", VA = "0xB673B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB673DC", Offset = "0xB673DC", VA = "0xB673DC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F493C", Offset = "0x8F493C")]
	public void RuneStoneAnimation()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xB67438", Offset = "0xB67438", VA = "0xB67438")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F494C", Offset = "0x8F494C")]
	public void ShrugAnimation()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xB67494", Offset = "0xB67494", VA = "0xB67494")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xB67564", Offset = "0xB67564", VA = "0xB67564")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F495C", Offset = "0x8F495C")]
	public void CommunedWith()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xB6761C", Offset = "0xB6761C", VA = "0xB6761C")]
	public cGreenDoll()
	{
	}
}
[Token(Token = "0x200007D")]
public class cKingMask : MonoBehaviour
{
	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject kingMaskVisual;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOSequence introVoiceOver;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOSequence doubleLockedChestUnlocked;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xB6CEAC", Offset = "0xB6CEAC", VA = "0xB6CEAC")]
	public void ArrivedInOtherwhere()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xB6CF0C", Offset = "0xB6CF0C", VA = "0xB6CF0C")]
	public void PuzzleWallCompleted()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xB6CEEC", Offset = "0xB6CEEC", VA = "0xB6CEEC")]
	public void SpawnMask()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xB6CF54", Offset = "0xB6CF54", VA = "0xB6CF54")]
	public void DoubleLockedChestUnlocked()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xB6CF90", Offset = "0xB6CF90", VA = "0xB6CF90")]
	public void MaskLeave()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xB6CFB0", Offset = "0xB6CFB0", VA = "0xB6CFB0")]
	public cKingMask()
	{
	}
}
[Token(Token = "0x200007E")]
public class cLockInPlace : MonoBehaviour
{
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPos;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startRot;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xB701E0", Offset = "0xB701E0", VA = "0xB701E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xB7023C", Offset = "0xB7023C", VA = "0xB7023C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xB70294", Offset = "0xB70294", VA = "0xB70294")]
	public cLockInPlace()
	{
	}
}
[Token(Token = "0x200007F")]
public class cMirrorDouble : MonoBehaviour
{
	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOSequence firstOtherwhereVisitPart1;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOSequence firstOtherwhereVisitPart2;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xB73E84", Offset = "0xB73E84", VA = "0xB73E84")]
	public void PlayFirstVisitVOPart1()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xB73EC0", Offset = "0xB73EC0", VA = "0xB73EC0")]
	public void PlayFirstVisitVOPart2()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xB73EFC", Offset = "0xB73EFC", VA = "0xB73EFC")]
	public cMirrorDouble()
	{
	}
}
[Token(Token = "0x2000080")]
public class cMusicBoxAnimator : MonoBehaviour
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator musicBoxAnim;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xB74F74", Offset = "0xB74F74", VA = "0xB74F74")]
	public void CrankMusicBox()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xB74FD0", Offset = "0xB74FD0", VA = "0xB74FD0")]
	public cMusicBoxAnimator()
	{
	}
}
[Token(Token = "0x2000081")]
public class cMusicBoxPuzzlePiece : MonoBehaviour
{
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject musicBoxPuzzlePiece;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject drawerToOpen;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xB74FD8", Offset = "0xB74FD8", VA = "0xB74FD8")]
	public void SpawnPiece()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xB75034", Offset = "0xB75034", VA = "0xB75034")]
	public cMusicBoxPuzzlePiece()
	{
	}
}
[Token(Token = "0x2000082")]
public class cOtherwhereIdleLines : MonoBehaviour
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOEvent idleReflectionLine1;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private soVOEvent idleReflectionLine2;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOEvent idleReflectionLine3;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private soVOSequence mirrorDoubleIntroPart2;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float playLineEverySeconds;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timer;

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xB78894", Offset = "0xB78894", VA = "0xB78894")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xB788AC", Offset = "0xB788AC", VA = "0xB788AC")]
	public void ArrivedInOtherwhere()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xB788B8", Offset = "0xB788B8", VA = "0xB788B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xB788A0", Offset = "0xB788A0", VA = "0xB788A0")]
	private void ResetTimer()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xB78924", Offset = "0xB78924", VA = "0xB78924")]
	private void PlayIdleVO()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xB78A48", Offset = "0xB78A48", VA = "0xB78A48")]
	public cOtherwhereIdleLines()
	{
	}
}
[Token(Token = "0x2000083")]
public class cOtherwhereRotator : MonoBehaviour
{
	[Token(Token = "0x2000415")]
	public enum GravityMode
	{
		[Token(Token = "0x4001B6C")]
		changeWithPlayer,
		[Token(Token = "0x4001B6D")]
		stayConsistent,
		[Token(Token = "0x4001B6E")]
		hybrid
	}

	[Token(Token = "0x2000416")]
	public enum GravityDirection
	{
		[Token(Token = "0x4001B70")]
		down,
		[Token(Token = "0x4001B71")]
		right,
		[Token(Token = "0x4001B72")]
		back,
		[Token(Token = "0x4001B73")]
		up
	}

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GravityMode gravityMode;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GravityDirection currentRotation;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject roomPivot;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SOSceneManager otherwhere;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform south;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform back;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform east;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform north;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private cCustomGravity customGravity;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private cFadeInOut fader;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float fadeTime;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool thumbstickPressed;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro gravityDebugText;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xAF6380", Offset = "0xAF6380", VA = "0xAF6380")]
	private void Start()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xAF6418", Offset = "0xAF6418", VA = "0xAF6418")]
	private void Update()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xAF68CC", Offset = "0xAF68CC", VA = "0xAF68CC")]
	public void RotateToBackChair()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xAF6924", Offset = "0xAF6924", VA = "0xAF6924")]
	public void RotateToRightChair()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xAF697C", Offset = "0xAF697C", VA = "0xAF697C")]
	public void RotateToCeilingChair()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xAF6874", Offset = "0xAF6874", VA = "0xAF6874")]
	public void RotateToStartChair()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xAF69D4", Offset = "0xAF69D4", VA = "0xAF69D4")]
	private void RotateToBack()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xAF6D04", Offset = "0xAF6D04", VA = "0xAF6D04")]
	private void RotateToEast()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xAF6D58", Offset = "0xAF6D58", VA = "0xAF6D58")]
	private void RotateToNorth()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xAF6DAC", Offset = "0xAF6DAC", VA = "0xAF6DAC")]
	private void RotateToSouth()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xAF6D00", Offset = "0xAF6D00", VA = "0xAF6D00")]
	public void UpdateMarbleMaze()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xAF6A28", Offset = "0xAF6A28", VA = "0xAF6A28")]
	public void SetTransform(Transform toSet, Transform target)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xAF6CD4", Offset = "0xAF6CD4", VA = "0xAF6CD4")]
	public void SetGravity(cCustomGravity.GravityDirection gravityDir)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xAF6DFC", Offset = "0xAF6DFC", VA = "0xAF6DFC")]
	public void SetCustomGravityLocal(cCustomGravity gravityBox, cCustomGravity.GravityDirection gravityDir)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xAF6500", Offset = "0xAF6500", VA = "0xAF6500")]
	public void CycleGravityMode()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xAF6E18", Offset = "0xAF6E18", VA = "0xAF6E18")]
	public void ShowDebugText()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xAF6E48", Offset = "0xAF6E48", VA = "0xAF6E48")]
	public void HideDebugText()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xAF6E78", Offset = "0xAF6E78", VA = "0xAF6E78")]
	public cOtherwhereRotator()
	{
	}
}
[Token(Token = "0x2000084")]
public class cOtherwhereTestingSetup : MonoBehaviour
{
	[Token(Token = "0x6000362")]
	[Address(RVA = "0xAF6E88", Offset = "0xAF6E88", VA = "0xAF6E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xAF6EE0", Offset = "0xAF6EE0", VA = "0xAF6EE0")]
	public void UnlockEquipShadowhand()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xAF6F58", Offset = "0xAF6F58", VA = "0xAF6F58")]
	public cOtherwhereTestingSetup()
	{
	}
}
[Token(Token = "0x2000085")]
public class cPaintingOfPuzzlePiece : MonoBehaviour
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxRaycastDist;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private LayerMask mask;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool inPosition;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float timeToHoldBeforePieceAppears;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cOtherwhereRotator otherwhereRotation;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cOtherwhereRotator.GravityDirection chairPlayerMustBeIn;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private sBool paintingPuzzlePieceSpawned;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform raycastOrigin;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private cHaptics haptics;

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xAF706C", Offset = "0xAF706C", VA = "0xAF706C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xAF70DC", Offset = "0xAF70DC", VA = "0xAF70DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xAF7400", Offset = "0xAF7400", VA = "0xAF7400")]
	private void StartTimer()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xAF7448", Offset = "0xAF7448", VA = "0xAF7448")]
	private void ResetTimer()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xAF7458", Offset = "0xAF7458", VA = "0xAF7458")]
	public cPaintingOfPuzzlePiece()
	{
	}
}
[Token(Token = "0x2000086")]
public class cPaintingOfPuzzlePieceTriggerZone : MonoBehaviour
{
	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject puzzlePieceToReveal;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent onPaintingAligned;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sBool paintingPuzzlePieceSpawned;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xAF7470", Offset = "0xAF7470", VA = "0xAF7470")]
	private void Start()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xAF7414", Offset = "0xAF7414", VA = "0xAF7414")]
	public void PaintingOfPuzzlePieceAligned()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xAF7498", Offset = "0xAF7498", VA = "0xAF7498")]
	private void RevealPuzzlePiece()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xAF74E4", Offset = "0xAF74E4", VA = "0xAF74E4")]
	public cPaintingOfPuzzlePieceTriggerZone()
	{
	}
}
[Token(Token = "0x2000087")]
public class cChestKey : MonoBehaviour
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMarbleMazeKey;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cShadowHandable shadowHandable;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private sBool marbleMazeKeyUsed;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private sBool riddleKeyUsed;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xA98354", Offset = "0xA98354", VA = "0xA98354")]
	private void Start()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xA983C4", Offset = "0xA983C4", VA = "0xA983C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xA98418", Offset = "0xA98418", VA = "0xA98418")]
	public void Snap(cChestKeySnapZone snapZone)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xA984EC", Offset = "0xA984EC", VA = "0xA984EC")]
	public cChestKey()
	{
	}
}
[Token(Token = "0x2000088")]
public class cChestKeySnapZone : MonoBehaviour
{
	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool usedMarbleMazeKey;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sBool usedQuantumChestKey;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent onKeySnapped;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator chestAnimator;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private cChestKey chestKey;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xA98504", Offset = "0xA98504", VA = "0xA98504")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xA98654", Offset = "0xA98654", VA = "0xA98654")]
	private void OpenChest()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xA986C8", Offset = "0xA986C8", VA = "0xA986C8")]
	private void HideKey()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xA98768", Offset = "0xA98768", VA = "0xA98768")]
	public cChestKeySnapZone()
	{
	}
}
[Token(Token = "0x2000089")]
public class cDoubleLockedChest : MonoBehaviour
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject chestGameObjectFirstState;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject chestGameObjectSecondState;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOEvent lineThatSpawnsChest;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private sBool unlockedFirstDoubleLock;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private sBool unlockedBothDoubleLocks;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private sBool usedMarbleMazeKey;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private sBool usedQuantumChestKey;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEvent onSecondChestUnlocked;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent doubleLockedChestUnlocked;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xAC6A38", Offset = "0xAC6A38", VA = "0xAC6A38")]
	public void ArrivedInOtherwhere()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xAC6AF0", Offset = "0xAC6AF0", VA = "0xAC6AF0")]
	public void RevealChestFirstState()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xAC6A90", Offset = "0xAC6A90", VA = "0xAC6A90")]
	public void RevealChestSecondState()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xAC6B10", Offset = "0xAC6B10", VA = "0xAC6B10")]
	public void SecondChestUnlocked()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xAC6B78", Offset = "0xAC6B78", VA = "0xAC6B78")]
	public cDoubleLockedChest()
	{
	}
}
[Token(Token = "0x200008A")]
public class cChestKeyPainting : MonoBehaviour
{
	[Token(Token = "0x600037B")]
	[Address(RVA = "0xA984F4", Offset = "0xA984F4", VA = "0xA984F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xA984F8", Offset = "0xA984F8", VA = "0xA984F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xA984FC", Offset = "0xA984FC", VA = "0xA984FC")]
	public cChestKeyPainting()
	{
	}
}
[Token(Token = "0x200008B")]
public class cMarble : MonoBehaviour
{
	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB702B8", Offset = "0xB702B8", VA = "0xB702B8")]
	public cMarble()
	{
	}
}
[Token(Token = "0x200008C")]
public class cMarbleMaze : MonoBehaviour
{
	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cMazePainting startingPainting;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cMazePainting currentMarblePainting;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cOtherwhereRotator roomRotator;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cMarble marble;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float marbleForwardOffset;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private cChestKey chestKey;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject paintingChestKeyVisual;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private sBool marbleMazeSolved;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private sBool usedMarbleMazeKey;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cMarbleMaze Instance;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator animator;

	[Token(Token = "0x17000011")]
	public cOtherwhereRotator.GravityDirection currentRoomRotation
	{
		[Token(Token = "0x6000381")]
		[Address(RVA = "0xB704C0", Offset = "0xB704C0", VA = "0xB704C0")]
		get
		{
			return default(cOtherwhereRotator.GravityDirection);
		}
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xB702C0", Offset = "0xB702C0", VA = "0xB702C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xB7038C", Offset = "0xB7038C", VA = "0xB7038C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xB704E0", Offset = "0xB704E0", VA = "0xB704E0")]
	public void MoveMarbleToNextPainting()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xB705F4", Offset = "0xB705F4", VA = "0xB705F4")]
	public void MoveMarbleToFinalPaintingAndReleaseKey()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xB70630", Offset = "0xB70630", VA = "0xB70630")]
	public void HideMarble()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB7044C", Offset = "0xB7044C", VA = "0xB7044C")]
	public void SpawnKey()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xB70660", Offset = "0xB70660", VA = "0xB70660")]
	public void Frame2Unlocked()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xB706C0", Offset = "0xB706C0", VA = "0xB706C0")]
	public void Frame3Unlocked()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xB70720", Offset = "0xB70720", VA = "0xB70720")]
	public void Frame5Unlocked()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xB70780", Offset = "0xB70780", VA = "0xB70780")]
	public void Frame1Grabbed(cMazePainting frame1)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xB708A8", Offset = "0xB708A8", VA = "0xB708A8")]
	public cMarbleMaze()
	{
	}
}
[Token(Token = "0x200008D")]
public class cMazePainting : MonoBehaviour
{
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF7D0", Offset = "0x8DF7D0")]
	private sealed class <RotationCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cMazePainting <>4__this;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion <startRot>5__2;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion <endRot>5__3;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <t>5__4;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0xB70ED8", Offset = "0xB70ED8", VA = "0xB70ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xB70F44", Offset = "0xB70F44", VA = "0xB70F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xB70B04", Offset = "0xB70B04", VA = "0xB70B04")]
		[DebuggerHidden]
		public <RotationCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xB70C44", Offset = "0xB70C44", VA = "0xB70C44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xB70C48", Offset = "0xB70C48", VA = "0xB70C48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xB70EE0", Offset = "0xB70EE0", VA = "0xB70EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public cMazePainting nextPainting;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public cMazePainting previousPainting;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hasMarble;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool blockMarbleIn;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[SerializeField]
	private bool blockMarbleOut;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int frameNumber;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool onlyOneOpening;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private int rotationsToSolveIn;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int rotationsToSolveOut;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int numRotations;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onMarbleIn;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onUnlockIn;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onUnlockOut;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float rotationTime;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 ninetyDegrees;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool rotating;

	[Token(Token = "0x17000012")]
	public bool isBlockedIn
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0xB70A00", Offset = "0xB70A00", VA = "0xB70A00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000013")]
	public bool isBlockedOut
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0xB70A08", Offset = "0xB70A08", VA = "0xB70A08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000014")]
	public int getFrameNumber
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0xB70A10", Offset = "0xB70A10", VA = "0xB70A10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xB70A18", Offset = "0xB70A18", VA = "0xB70A18")]
	private void Start()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xB70A44", Offset = "0xB70A44", VA = "0xB70A44")]
	public void RotatePaintingClockwise()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xB70A90", Offset = "0xB70A90", VA = "0xB70A90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F496C", Offset = "0x8F496C")]
	private IEnumerator RotationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xB70B30", Offset = "0xB70B30", VA = "0xB70B30")]
	public void UnlockPaintingIn()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xB7085C", Offset = "0xB7085C", VA = "0xB7085C")]
	public void UnlockPaintingOut()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xB7053C", Offset = "0xB7053C", VA = "0xB7053C")]
	public void CheckMarbleOut()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xB70BD8", Offset = "0xB70BD8", VA = "0xB70BD8")]
	public cMazePainting()
	{
	}
}
[Token(Token = "0x200008E")]
public class cMazePaintingOld : MonoBehaviour
{
	[Token(Token = "0x2000418")]
	public enum Surface
	{
		[Token(Token = "0x4001B7B")]
		leftWall,
		[Token(Token = "0x4001B7C")]
		floor,
		[Token(Token = "0x4001B7D")]
		backWall
	}

	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF7E0", Offset = "0x8DF7E0")]
	private sealed class <RotationCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cMazePaintingOld <>4__this;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion <startRot>5__2;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion <endRot>5__3;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <t>5__4;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0xB716B4", Offset = "0xB716B4", VA = "0xB716B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0xB71720", Offset = "0xB71720", VA = "0xB71720", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xB7100C", Offset = "0xB7100C", VA = "0xB7100C")]
		[DebuggerHidden]
		public <RotationCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xB7142C", Offset = "0xB7142C", VA = "0xB7142C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xB71430", Offset = "0xB71430", VA = "0xB71430", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xB716BC", Offset = "0xB716BC", VA = "0xB716BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public cMazePaintingOld nextPainting;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool openUp;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool openRight;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool openDown;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool openLeft;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ignoreGravityOnWayOut;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool ignoreGravityOnWayIn;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float rotationTime;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 ninetyDegrees;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool rotating;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool blockMarbleIn;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Surface paintingWall;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hasMarble;

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xB70F4C", Offset = "0xB70F4C", VA = "0xB70F4C")]
	public void RotatePaintingClockwise()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xB70F98", Offset = "0xB70F98", VA = "0xB70F98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F49D0", Offset = "0x8F49D0")]
	private IEnumerator RotationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xB71038", Offset = "0xB71038", VA = "0xB71038")]
	public void CheckMarbleIn()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xB71230", Offset = "0xB71230", VA = "0xB71230")]
	public void CheckMarbleOut()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xB71264", Offset = "0xB71264", VA = "0xB71264")]
	private bool CalculateMarbleOut()
	{
		return default(bool);
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xB710B0", Offset = "0xB710B0", VA = "0xB710B0")]
	private bool CalculateMarbleIn()
	{
		return default(bool);
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xB713B4", Offset = "0xB713B4", VA = "0xB713B4")]
	public void SetBlockMarble(bool blockMarble)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xB713C0", Offset = "0xB713C0", VA = "0xB713C0")]
	public cMazePaintingOld()
	{
	}
}
[Token(Token = "0x200008F")]
public class cMazePaintingSnapPoint : MonoBehaviour
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cSnappablePainting snappedPainting;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider triggerZone;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cMazePainting paintingToSnap;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xB71728", Offset = "0xB71728", VA = "0xB71728")]
	private void Start()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xB71780", Offset = "0xB71780", VA = "0xB71780")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xB718A8", Offset = "0xB718A8", VA = "0xB718A8")]
	public cMazePaintingSnapPoint()
	{
	}
}
[Token(Token = "0x2000090")]
public class cPistonFrame : MonoBehaviour
{
	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cMazePainting paintingToPush;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xAF82B8", Offset = "0xAF82B8", VA = "0xAF82B8")]
	public void ActivatePiston()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xAF8314", Offset = "0xAF8314", VA = "0xAF8314")]
	public void PushMarbleToNextPainting()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xAF8394", Offset = "0xAF8394", VA = "0xAF8394")]
	public cPistonFrame()
	{
	}
}
[Token(Token = "0x2000091")]
public class cSnappablePainting : cMazePainting
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rb;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private cShadowHandable shadowHandable;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UnityEvent onSnappedToWall;

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xB3A2B4", Offset = "0xB3A2B4", VA = "0xB3A2B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xB3A324", Offset = "0xB3A324", VA = "0xB3A324")]
	public void SnapToWall(Transform targetTransform)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xB3A3EC", Offset = "0xB3A3EC", VA = "0xB3A3EC")]
	public cSnappablePainting()
	{
	}
}
[Token(Token = "0x2000092")]
public class cPuzzlePiece : MonoBehaviour
{
	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public sPuzzlePiece pieceData;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cShadowHandable shadowHandable;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xB00434", Offset = "0xB00434", VA = "0xB00434")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xB004A4", Offset = "0xB004A4", VA = "0xB004A4")]
	public void Snap(cPuzzleSnapPoint snapPoint)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xB005EC", Offset = "0xB005EC", VA = "0xB005EC")]
	public cPuzzlePiece()
	{
	}
}
[Token(Token = "0x2000093")]
public class cPuzzleSnapPoint : MonoBehaviour
{
	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int puzzleIndex;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool occupied;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cPuzzlePiece snappedPiece;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider triggerZone;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xB005F4", Offset = "0xB005F4", VA = "0xB005F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xB0064C", Offset = "0xB0064C", VA = "0xB0064C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xB00750", Offset = "0xB00750", VA = "0xB00750")]
	public cPuzzleSnapPoint()
	{
	}
}
[Token(Token = "0x2000094")]
public class cWallPuzzle : MonoBehaviour
{
	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cPuzzleSnapPoint[] puzzleSnapPoints;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sWallPuzzle wallPuzzleSO;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent onWallPuzzleCompleted;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int numPiecesSnappedCorrectly;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cWallPuzzle Instance;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xB44B9C", Offset = "0xB44B9C", VA = "0xB44B9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xB44C68", Offset = "0xB44C68", VA = "0xB44C68")]
	public void ArrivedInOtherwhere()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xB44C6C", Offset = "0xB44C6C", VA = "0xB44C6C")]
	public void ValidatePiecePositions()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xB44DC8", Offset = "0xB44DC8", VA = "0xB44DC8")]
	public void SolveWallPuzzle()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xB44EB4", Offset = "0xB44EB4", VA = "0xB44EB4")]
	private void SnapPiece(cPuzzlePiece piece)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xB44F14", Offset = "0xB44F14", VA = "0xB44F14")]
	public cWallPuzzle()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DD428", Offset = "0x8DD428")]
public class sPuzzlePiece : ScriptableObject
{
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int correctSnapPointIndex;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isSnappedCorrectly;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x15ACFCC", Offset = "0x15ACFCC", VA = "0x15ACFCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x15ACFD8", Offset = "0x15ACFD8", VA = "0x15ACFD8")]
	public void ResetPuzzlePiece()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x15ACFE0", Offset = "0x15ACFE0", VA = "0x15ACFE0")]
	public sPuzzlePiece()
	{
	}
}
[Token(Token = "0x2000096")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DD474", Offset = "0x8DD474")]
public class sWallPuzzle : ScriptableObject
{
	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public sPuzzlePiece[] puzzlePieces;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool resetOnAwake;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool puzzleSolved;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x15AE3D0", Offset = "0x15AE3D0", VA = "0x15AE3D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x15AE410", Offset = "0x15AE410", VA = "0x15AE410")]
	public void ResetWallPuzzle()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x15AE474", Offset = "0x15AE474", VA = "0x15AE474")]
	public sWallPuzzle()
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DD4C0", Offset = "0x8DD4C0")]
public class GreenDollPaintingSOBool : sBool
{
	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool burning;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool burned;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool rained;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool empty;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool dollHeadTaken;

	[Token(Token = "0x17000015")]
	public bool Burning
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xCC19D0", Offset = "0xCC19D0", VA = "0xCC19D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xCC19D8", Offset = "0xCC19D8", VA = "0xCC19D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool Burned
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xCC19E4", Offset = "0xCC19E4", VA = "0xCC19E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xCC19EC", Offset = "0xCC19EC", VA = "0xCC19EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool Rained
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xCC19F8", Offset = "0xCC19F8", VA = "0xCC19F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xCC1A00", Offset = "0xCC1A00", VA = "0xCC1A00")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public bool Empty
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xCC1A0C", Offset = "0xCC1A0C", VA = "0xCC1A0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xCC1A14", Offset = "0xCC1A14", VA = "0xCC1A14")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public bool DollHeadTaken
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xCC1A20", Offset = "0xCC1A20", VA = "0xCC1A20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xCC1A28", Offset = "0xCC1A28", VA = "0xCC1A28")]
		set
		{
		}
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xCC19C4", Offset = "0xCC19C4", VA = "0xCC19C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xCC1A34", Offset = "0xCC1A34", VA = "0xCC1A34")]
	public GreenDollPaintingSOBool()
	{
	}
}
[Token(Token = "0x2000098")]
public class cStarfellSystem : MonoBehaviour
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent starfellReachedEvent;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate starfellReachedDelegate;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOSequence starfellIntro;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private soVOSequence shadowHandGoneSequence;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject whispersPosition;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject runestoneStar;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOEvent starfellRuneGrabbed;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOGameEvent forceClosePlanarCompass;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOInputEvent spellPrimeReleased;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xB400EC", Offset = "0xB400EC", VA = "0xB400EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xB40170", Offset = "0xB40170", VA = "0xB40170")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xB40194", Offset = "0xB40194", VA = "0xB40194")]
	private void StarfellReached()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xB40278", Offset = "0xB40278", VA = "0xB40278")]
	public void ShadowhandTargetGrabbed()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xB403B4", Offset = "0xB403B4", VA = "0xB403B4")]
	public void SpawnFinalRunestone()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xB403D4", Offset = "0xB403D4", VA = "0xB403D4")]
	public void StarfellRuneGrabbed()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xB4045C", Offset = "0xB4045C", VA = "0xB4045C")]
	public cStarfellSystem()
	{
	}
}
[Token(Token = "0x2000099")]
public class cStarfellUnlocking : MonoBehaviour
{
	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent breakStarfellCageEvent;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate breakStarfellCageDelegate;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent unlockCagedStarfellEvent;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate unlockCagedStarfellDelegate;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject starfellCage;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOStarfell starfellScene;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public sBool starfellCageReadyToBreak;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cFlowGrabbable starfellGrabbable;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private cGazeTarget starfellGazeTarget;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private soVOEvent starfellCageBrokenVO;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cPlanarCompass planarCompass;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xB40464", Offset = "0xB40464", VA = "0xB40464")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xB4052C", Offset = "0xB4052C", VA = "0xB4052C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xB40570", Offset = "0xB40570", VA = "0xB40570")]
	private void UnlockCagedStarfell()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xB40590", Offset = "0xB40590", VA = "0xB40590")]
	private void SetStarfellCageReadyToBreak()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xB405F0", Offset = "0xB405F0", VA = "0xB405F0")]
	public void StarfellReadyToUnlockSequence()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xB40660", Offset = "0xB40660", VA = "0xB40660")]
	public void StarfellGazed()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xB40720", Offset = "0xB40720", VA = "0xB40720")]
	private void OpenCage()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xB40740", Offset = "0xB40740", VA = "0xB40740")]
	public cStarfellUnlocking()
	{
	}
}
[Token(Token = "0x200009A")]
public class cArrivedInEndgame : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent arrivedInEndgame;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SOGameEvent.GameEventDelegate arrivedInEndgameDelegate;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent beginCreditsEvent;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SOGameEvent.GameEventDelegate beginCreditsDelegate;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOSequence endgameVOSequence;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material skybox;

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xA92250", Offset = "0xA92250", VA = "0xA92250")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xA92328", Offset = "0xA92328", VA = "0xA92328")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xA9236C", Offset = "0xA9236C", VA = "0xA9236C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4A34", Offset = "0x8F4A34")]
	private void Arrived()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xA92444", Offset = "0xA92444", VA = "0xA92444")]
	private void BeginCredits()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xA924A0", Offset = "0xA924A0", VA = "0xA924A0")]
	public cArrivedInEndgame()
	{
	}
}
[Token(Token = "0x200009B")]
public class cDreamThought_OLD : MonoBehaviour
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int number;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro numberText;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPosition;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion startRotation;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody dreamThoughtRb;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject dreamThoughtVisual;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem glowVisual;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private sDreamThought_OLD dreamThoughtSO;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private sGameStep prerequisiteStep;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent dreamscapeReachedEvent;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate dreamscapeReachedDelegate;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool growingBack;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 startScale;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 currentScale;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float growBackTimer;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xAC7C94", Offset = "0xAC7C94", VA = "0xAC7C94")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xAC7DE8", Offset = "0xAC7DE8", VA = "0xAC7DE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xAC7E0C", Offset = "0xAC7E0C", VA = "0xAC7E0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xAC7E1C", Offset = "0xAC7E1C", VA = "0xAC7E1C")]
	public void GrowBack()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xAC7F20", Offset = "0xAC7F20", VA = "0xAC7F20")]
	private void OnArrivedInDreamscape()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xAC7FB8", Offset = "0xAC7FB8", VA = "0xAC7FB8")]
	private void UnlockDreamThought()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xAC8020", Offset = "0xAC8020", VA = "0xAC8020")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xAC7F94", Offset = "0xAC7F94", VA = "0xAC7F94")]
	public void SetGlowing(bool isGlowing)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xAC8108", Offset = "0xAC8108", VA = "0xAC8108")]
	public void OnEaten()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xAC81F8", Offset = "0xAC81F8", VA = "0xAC81F8")]
	public cDreamThought_OLD()
	{
	}
}
[Token(Token = "0x200009C")]
public class cLockDreamThoughts : MonoBehaviour
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sDreamThought_OLD[] dreamThoughts;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xB6FDE4", Offset = "0xB6FDE4", VA = "0xB6FDE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xB6FE70", Offset = "0xB6FE70", VA = "0xB6FE70")]
	private void SetAllDreamThoughtsEaten(bool _beenEaten)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xB6FE0C", Offset = "0xB6FE0C", VA = "0xB6FE0C")]
	private void LockAllDreamThoughts()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xB6FED4", Offset = "0xB6FED4", VA = "0xB6FED4")]
	private void UnlockAllDreamThoughts()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xB6FF34", Offset = "0xB6FF34", VA = "0xB6FF34")]
	private void LockSpecificDreamThought(int index)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xB70018", Offset = "0xB70018", VA = "0xB70018")]
	private void UnlockSpecificDreamThought(int index)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xB700F8", Offset = "0xB700F8", VA = "0xB700F8")]
	public cLockDreamThoughts()
	{
	}
}
[Token(Token = "0x200009D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DD50C", Offset = "0x8DD50C")]
public class sDreamThought_OLD : ScriptableObject
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool beenEaten;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isLocked;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x15AAE90", Offset = "0x15AAE90", VA = "0x15AAE90")]
	public sDreamThought_OLD()
	{
	}
}
[Token(Token = "0x200009E")]
public class cAudioSystem : MonoBehaviour
{
	[Token(Token = "0x200041A")]
	public enum Priority
	{
		[Token(Token = "0x4001B85")]
		VO,
		[Token(Token = "0x4001B86")]
		DIALOGUE
	}

	[Token(Token = "0x200041B")]
	public enum Bus
	{
		[Token(Token = "0x4001B88")]
		MASTER,
		[Token(Token = "0x4001B89")]
		MUSIC,
		[Token(Token = "0x4001B8A")]
		SFX,
		[Token(Token = "0x4001B8B")]
		VO,
		[Token(Token = "0x4001B8C")]
		UI,
		[Token(Token = "0x4001B8D")]
		AMBIENT
	}

	[Token(Token = "0x200041C")]
	private struct VOInstance
	{
		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EventInstance voInstance;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Priority priority;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SOGameEvent onFinishedEvent;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public soVOEvent soEvent;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isPlaying;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform voTransform;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PLAYBACK_STATE state;

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x998AE4", Offset = "0x998AE4", VA = "0x998AE4")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x998AF4", Offset = "0x998AF4", VA = "0x998AF4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x998B00", Offset = "0x998B00", VA = "0x998B00")]
		public bool Finished()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x998B38", Offset = "0x998B38", VA = "0x998B38")]
		public bool Paused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x998B68", Offset = "0x998B68", VA = "0x998B68")]
		public bool Playing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x998B70", Offset = "0x998B70", VA = "0x998B70")]
		public void RaiseFinishedEvent()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x998B78", Offset = "0x998B78", VA = "0x998B78")]
		public bool StateMatch(PLAYBACK_STATE st)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent arrivedInFlowEvent;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SOGameEvent.GameEventDelegate arrivedInFlowDelegate;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soSubtitleBindings subtitleBinding;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float minimumVOLength;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float voSkipCooldown;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float voTimer;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float voSkipCooldownTimer;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool sequencePlaying;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float audioFallback;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int VOLength;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool VOPaused;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool skipLine;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	[SerializeField]
	private string musicEvent;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EventInstance musicInstance;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[ShowInInspector]
	private VOInstance currentVOInstance;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string masterBusString;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string musicBusString;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string sfxBusString;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string voBusString2D;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string voBusString3D;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string uiBusString;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string ambientBusString;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private FMOD.Studio.Bus masterBus;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private FMOD.Studio.Bus musicBus;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private FMOD.Studio.Bus sfxBus;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private FMOD.Studio.Bus voBus2d;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private FMOD.Studio.Bus voBus3d;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private FMOD.Studio.Bus uiBus;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private FMOD.Studio.Bus ambienceBus;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4338", Offset = "0x8E4338")]
	private static cAudioSystem <Instance>k__BackingField;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[ShowInInspector]
	private Dictionary<EventInstance, EVENT_CALLBACK> sfxEventDict;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private EVENT_CALLBACK voCallback;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<soVOEvent>.Enumerator sequenceVOEventEnumerator;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool finishVO;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private soVOSequence currentVOSequence;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[ShowInInspector]
	private soVOEvent cachedVO;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[ShowInInspector]
	private Transform cachedVOTransform;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[ShowInInspector]
	private Transform cachedSequenceTransform;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[ShowInInspector]
	private soVOSequence cachedVOSequence;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private sPlayerSettings.Language language;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private soVOSequence necromancerSequence;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private soVOSequence[] dreamThoughts;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool paused;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float abandonVOTimer;

	[Token(Token = "0x4000528")]
	private const float ABANDON_LENGTH = 10f;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, float> materialMap;

	[Token(Token = "0x1700001A")]
	public static cAudioSystem Instance
	{
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xA93418", Offset = "0xA93418", VA = "0xA93418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4A44", Offset = "0x8F4A44")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xA93480", Offset = "0xA93480", VA = "0xA93480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4A54", Offset = "0x8F4A54")]
		private set
		{
		}
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xA93410", Offset = "0xA93410", VA = "0xA93410")]
	public bool IsSequencePlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xA934EC", Offset = "0xA934EC", VA = "0xA934EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xA93664", Offset = "0xA93664", VA = "0xA93664")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xA93AD0", Offset = "0xA93AD0", VA = "0xA93AD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xA93B10", Offset = "0xA93B10", VA = "0xA93B10")]
	public void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xA93C6C", Offset = "0xA93C6C", VA = "0xA93C6C")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xA93B18", Offset = "0xA93B18", VA = "0xA93B18")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xA93CD8", Offset = "0xA93CD8", VA = "0xA93CD8")]
	public void SetLanguage(sPlayerSettings.Language lang)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xA9409C", Offset = "0xA9409C", VA = "0xA9409C")]
	public soVOSequence IsDreamThoughtPlaying()
	{
		return null;
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xA941A0", Offset = "0xA941A0", VA = "0xA941A0")]
	public sPlayerSettings.Language GetLanguage()
	{
		return default(sPlayerSettings.Language);
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xA941A8", Offset = "0xA941A8", VA = "0xA941A8")]
	public void GetBusVolume(out float volume, Bus bus)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xA8F590", Offset = "0xA8F590", VA = "0xA8F590")]
	public void SetBusVolume(float volume, Bus bus)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xA94210", Offset = "0xA94210", VA = "0xA94210")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xA944DC", Offset = "0xA944DC", VA = "0xA944DC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4A64", Offset = "0x8F4A64")]
	public void SkipLine()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xA93C78", Offset = "0xA93C78", VA = "0xA93C78")]
	public void PauseVO(bool pause)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xA9463C", Offset = "0xA9463C", VA = "0xA9463C")]
	public void StopVO()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xA946EC", Offset = "0xA946EC", VA = "0xA946EC")]
	public void StopVOAndSkipSequence()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xA947B0", Offset = "0xA947B0", VA = "0xA947B0")]
	private void OnFlowLeft(SOSceneManager previousScene)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xA93810", Offset = "0xA93810", VA = "0xA93810")]
	private void OnFlowReached()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xA94984", Offset = "0xA94984", VA = "0xA94984")]
	public void FirstNecromancerConversationFinished()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xA948F0", Offset = "0xA948F0", VA = "0xA948F0")]
	public void SetFlowParameter(string parameterToSet, float paramValue)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xA949D0", Offset = "0xA949D0", VA = "0xA949D0")]
	public static float GetMaterialParam(string tag)
	{
		return default(float);
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xA94AA4", Offset = "0xA94AA4", VA = "0xA94AA4")]
	public EventInstance PlaySoundEffect(string soundEffectEvent, GameObject soundGameObject, Rigidbody rb)
	{
		return default(EventInstance);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xA93398", Offset = "0xA93398", VA = "0xA93398")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F4A74", Offset = "0x8F4A74")]
	private static RESULT SfxCallback(EVENT_CALLBACK_TYPE type, EventInstance instance, IntPtr parameterPtr)
	{
		return default(RESULT);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xA94CB4", Offset = "0xA94CB4", VA = "0xA94CB4")]
	public void StopSoundEffect(EventInstance soundEffectInstance, FMOD.Studio.STOP_MODE stopMode = FMOD.Studio.STOP_MODE.ALLOWFADEOUT)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xA942FC", Offset = "0xA942FC", VA = "0xA942FC")]
	public void FinishVO()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xA94520", Offset = "0xA94520", VA = "0xA94520")]
	public void VOTimeoutCheck()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xA94FB8", Offset = "0xA94FB8", VA = "0xA94FB8")]
	private void PlayNextSequenceVO()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xA95130", Offset = "0xA95130", VA = "0xA95130")]
	private void PlayCachedVO()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xA94E04", Offset = "0xA94E04", VA = "0xA94E04")]
	public void StartVOSequence(GameObject caller, soVOSequence sequence, Transform voTransform)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xA93E3C", Offset = "0xA93E3C", VA = "0xA93E3C")]
	public void StartVO(GameObject caller, soVOEvent soEvent, Transform voTransform)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xA933A0", Offset = "0xA933A0", VA = "0xA933A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F4AD8", Offset = "0x8F4AD8")]
	private static RESULT VoCallback(EVENT_CALLBACK_TYPE type, EventInstance instance, IntPtr parameterPtr)
	{
		return default(RESULT);
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xA95200", Offset = "0xA95200", VA = "0xA95200")]
	public cAudioSystem()
	{
	}
}
[Token(Token = "0x200009F")]
public class cCollisionAudio : MonoBehaviour
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	[SerializeField]
	private string collisionFMODEvent;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventInstance collisionFMODInstance;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private static float minimumCollisionVelocity;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool enableCollisionDebugLogs;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xA993FC", Offset = "0xA993FC", VA = "0xA993FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xA99454", Offset = "0xA99454", VA = "0xA99454")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xA99458", Offset = "0xA99458", VA = "0xA99458")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xA997A0", Offset = "0xA997A0", VA = "0xA997A0")]
	private void CreateOneShotInstance(float materialParam)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xA998A0", Offset = "0xA998A0", VA = "0xA998A0")]
	private void CreateOneShotInstance()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xA998A8", Offset = "0xA998A8", VA = "0xA998A8")]
	public cCollisionAudio()
	{
	}
}
[Token(Token = "0x20000A0")]
public class cEnableDisableAudio : MonoBehaviour
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	[SerializeField]
	private string enableSoundEvent;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventInstance enableSoundInstance;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	[SerializeField]
	private string disableSoundEvent;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventInstance disableSoundInstance;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xAC86E8", Offset = "0xAC86E8", VA = "0xAC86E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xAC87BC", Offset = "0xAC87BC", VA = "0xAC87BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xAC86EC", Offset = "0xAC86EC", VA = "0xAC86EC")]
	private void PlayEnableSound()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xAC87C0", Offset = "0xAC87C0", VA = "0xAC87C0")]
	private void PlayDisableSound()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xAC8890", Offset = "0xAC8890", VA = "0xAC8890")]
	public cEnableDisableAudio()
	{
	}
}
[Token(Token = "0x20000A1")]
public class cPlayDialogueSeqOnEvent : MonoBehaviour
{
	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOSequence voSeqToPlay;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform spatializedTransform;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent gameEventTriggerEvent;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate gameEventTriggerDelegate;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xAFBBD0", Offset = "0xAFBBD0", VA = "0xAFBBD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xAFBC54", Offset = "0xAFBC54", VA = "0xAFBC54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xAFBC78", Offset = "0xAFBC78", VA = "0xAFBC78")]
	private void PlayVoiceOver()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xAFBCD0", Offset = "0xAFBCD0", VA = "0xAFBCD0")]
	public cPlayDialogueSeqOnEvent()
	{
	}
}
[Token(Token = "0x20000A2")]
public class cPlayVOOnEvent : MonoBehaviour
{
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOEvent voToPlay;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent gameEventTriggerEvent;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate gameEventTriggerDelegate;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xAFBDC8", Offset = "0xAFBDC8", VA = "0xAFBDC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xAFBE4C", Offset = "0xAFBE4C", VA = "0xAFBE4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xAFBE70", Offset = "0xAFBE70", VA = "0xAFBE70")]
	private void PlayVoiceOver()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xAFBEE0", Offset = "0xAFBEE0", VA = "0xAFBEE0")]
	public cPlayVOOnEvent()
	{
	}
}
[Token(Token = "0x20000A3")]
public class cPlayVoOnInputEvent : MonoBehaviour
{
	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOEvent voToPlay;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOInputEvent gameEventTriggerEvent;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOInputEvent.InputEventDelegate gameEventTriggerDelegate;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xAFBEE8", Offset = "0xAFBEE8", VA = "0xAFBEE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xAFBFE8", Offset = "0xAFBFE8", VA = "0xAFBFE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xAFC034", Offset = "0xAFC034", VA = "0xAFC034")]
	private void PlayVoiceOver(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xAFC0C0", Offset = "0xAFC0C0", VA = "0xAFC0C0")]
	public cPlayVoOnInputEvent()
	{
	}
}
[Token(Token = "0x20000A4")]
public class cSetBusVolume : MonoBehaviour
{
	[Token(Token = "0x6000426")]
	[Address(RVA = "0xB2F9F0", Offset = "0xB2F9F0", VA = "0xB2F9F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xB2FAA8", Offset = "0xB2FAA8", VA = "0xB2FAA8")]
	public cSetBusVolume()
	{
	}
}
[Token(Token = "0x20000A5")]
public class cSoundEffect : MonoBehaviour
{
	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool playOnStart;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool playOnEnable;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody rb;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	[SerializeField]
	private string soundEffectEvent;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventInstance soundEffectInstance;

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xB3A3F4", Offset = "0xB3A3F4", VA = "0xB3A3F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xB3A404", Offset = "0xB3A404", VA = "0xB3A404")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xB3A414", Offset = "0xB3A414", VA = "0xB3A414")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xB32C68", Offset = "0xB32C68", VA = "0xB32C68")]
	public void StopSoundEffect()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xB3A418", Offset = "0xB3A418", VA = "0xB3A418")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4B3C", Offset = "0x8F4B3C")]
	public void StopSoundEffect(FMOD.Studio.STOP_MODE stopMode = FMOD.Studio.STOP_MODE.ALLOWFADEOUT)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xB2FFA0", Offset = "0xB2FFA0", VA = "0xB2FFA0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4B4C", Offset = "0x8F4B4C")]
	public void PlaySoundEffect()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xB3A500", Offset = "0xB3A500", VA = "0xB3A500")]
	public cSoundEffect()
	{
	}
}
[Token(Token = "0x20000A6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DD560", Offset = "0x8DD560")]
public class soVOEvent : ScriptableObject
{
	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	[SerializeField]
	public string fmodEvent;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public cAudioSystem.Priority priority;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public bool playOnce;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	public bool played;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[SerializeField]
	public bool forceIdle;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	[SerializeField]
	public bool spatialized;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public SOGameEvent onVOFinishedEvent;

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x15AE848", Offset = "0x15AE848", VA = "0x15AE848")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x15AE854", Offset = "0x15AE854", VA = "0x15AE854")]
	public void Raise(GameObject caller)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x15AE924", Offset = "0x15AE924", VA = "0x15AE924")]
	public void Raise(GameObject caller, Transform transform)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x15AEA20", Offset = "0x15AEA20", VA = "0x15AEA20")]
	public soVOEvent()
	{
	}
}
[Token(Token = "0x20000A7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DD5B4", Offset = "0x8DD5B4")]
public class soVOSequence : ScriptableObject
{
	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<soVOEvent> voEvents;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public float sequenceDelay;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public bool playOnce;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	public bool played;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[SerializeField]
	public bool forceIdle;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public SOGameEvent onSequenceFinishedEvent;

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x15AEA28", Offset = "0x15AEA28", VA = "0x15AEA28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x15AAE28", Offset = "0x15AAE28", VA = "0x15AAE28")]
	public void Raise(GameObject caller)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x15AEA34", Offset = "0x15AEA34", VA = "0x15AEA34")]
	public void Raise(GameObject caller, Transform transform)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x15AEB30", Offset = "0x15AEB30", VA = "0x15AEB30")]
	public soVOSequence()
	{
	}
}
[Token(Token = "0x20000A8")]
public class cSubtitleController : MonoBehaviour
{
	[Token(Token = "0x200041D")]
	public enum Setting
	{
		[Token(Token = "0x4001B96")]
		DEPTH,
		[Token(Token = "0x4001B97")]
		HEIGHT,
		[Token(Token = "0x4001B98")]
		SIZE
	}

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4680", Offset = "0x8E4680")]
	private static cSubtitleController <Instance>k__BackingField;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI textMeshPro;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Canvas canvas;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform subtitleRectTransform;

	[Token(Token = "0x1700001B")]
	public static cSubtitleController Instance
	{
		[Token(Token = "0x6000437")]
		[Address(RVA = "0xB40CB8", Offset = "0xB40CB8", VA = "0xB40CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4B5C", Offset = "0x8F4B5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000438")]
		[Address(RVA = "0xB40D08", Offset = "0xB40D08", VA = "0xB40D08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4B6C", Offset = "0x8F4B6C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xB40D5C", Offset = "0xB40D5C", VA = "0xB40D5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xB40E70", Offset = "0xB40E70", VA = "0xB40E70")]
	private void Start()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xB40F1C", Offset = "0xB40F1C", VA = "0xB40F1C")]
	public void SetSubtitleDistance(float distance)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xB40F38", Offset = "0xB40F38", VA = "0xB40F38")]
	public void SetSubtitleHeight(float value)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xB40FC8", Offset = "0xB40FC8", VA = "0xB40FC8")]
	public void SetSubtitleSize(float value)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xB40FE4", Offset = "0xB40FE4", VA = "0xB40FE4")]
	public void Clear()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xB41040", Offset = "0xB41040", VA = "0xB41040")]
	public void SetSubtitle(string subtitle)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xB4105C", Offset = "0xB4105C", VA = "0xB4105C")]
	public string GetSubtitleText()
	{
		return null;
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xB4107C", Offset = "0xB4107C", VA = "0xB4107C")]
	public bool SubtitlesEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xB41098", Offset = "0xB41098", VA = "0xB41098")]
	public void SetSubtitlesEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xB410B8", Offset = "0xB410B8", VA = "0xB410B8")]
	public void EnableSubtitles()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xB40EFC", Offset = "0xB40EFC", VA = "0xB40EFC")]
	public void DisableSubtitles()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xB410D8", Offset = "0xB410D8", VA = "0xB410D8")]
	public cSubtitleController()
	{
	}
}
[Token(Token = "0x20000A9")]
public class cSubtitleTester : MonoBehaviour
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public soVOEvent VO_ch02_05_fw;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public soVOEvent VO_ch02_09_fw;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public soVOEvent VO_ch03_01_fw;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public soVOSequence sequence;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xB41518", Offset = "0xB41518", VA = "0xB41518")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4B7C", Offset = "0x8F4B7C")]
	public void PlaySequence()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xB41574", Offset = "0xB41574", VA = "0xB41574")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4B8C", Offset = "0x8F4B8C")]
	public void PlayVO_ch02_05_fw()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xB415B0", Offset = "0xB415B0", VA = "0xB415B0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4B9C", Offset = "0x8F4B9C")]
	public void PlayVO_ch02_09_fw()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xB415EC", Offset = "0xB415EC", VA = "0xB415EC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4BAC", Offset = "0x8F4BAC")]
	public void PlayVO_ch03_01_fw()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xB41628", Offset = "0xB41628", VA = "0xB41628")]
	public cSubtitleTester()
	{
	}
}
[Token(Token = "0x20000AA")]
public class eventCatcher : MonoBehaviour
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent evnt;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SOGameEvent.GameEventDelegate dlgt;

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x15A91CC", Offset = "0x15A91CC", VA = "0x15A91CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x15A9250", Offset = "0x15A9250", VA = "0x15A9250")]
	private void Stuff()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x15A92BC", Offset = "0x15A92BC", VA = "0x15A92BC")]
	public eventCatcher()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AB")]
internal struct Subtitles
{
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public VoiceLine[] voice_lines;
}
[Serializable]
[Token(Token = "0x20000AC")]
internal struct VoiceLine
{
	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string english;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string french;
}
[Token(Token = "0x20000AD")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DD608", Offset = "0x8DD608")]
public class soSubtitleBindings : ScriptableObject
{
	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextAsset subJson;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Subtitles subtitles;

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x15AE47C", Offset = "0x15AE47C", VA = "0x15AE47C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x15AE488", Offset = "0x15AE488", VA = "0x15AE488")]
	public string GetVoiceLineFromFMODEvent(string fmodEvent)
	{
		return null;
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x15AE7D8", Offset = "0x15AE7D8", VA = "0x15AE7D8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4BBC", Offset = "0x8F4BBC")]
	public void LoadSubtitlesFromJSON()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x15AE840", Offset = "0x15AE840", VA = "0x15AE840")]
	public soSubtitleBindings()
	{
	}
}
[Token(Token = "0x20000AE")]
public class cRaiseSequence : MonoBehaviour
{
	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public soVOSequence voSequence;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xB038C4", Offset = "0xB038C4", VA = "0xB038C4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4BCC", Offset = "0x8F4BCC")]
	public void PlayVO()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xB039B4", Offset = "0xB039B4", VA = "0xB039B4")]
	public cRaiseSequence()
	{
	}
}
[Token(Token = "0x20000AF")]
public class cRaiseVO : MonoBehaviour
{
	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool playOnStart;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventInstance voInstance;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public soVOEvent voEvent;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xB039BC", Offset = "0xB039BC", VA = "0xB039BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xB03ABC", Offset = "0xB03ABC", VA = "0xB03ABC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xB03AC4", Offset = "0xB03AC4", VA = "0xB03AC4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4BDC", Offset = "0x8F4BDC")]
	public void StopVO(FMOD.Studio.STOP_MODE stopMode = FMOD.Studio.STOP_MODE.ALLOWFADEOUT)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xB039CC", Offset = "0xB039CC", VA = "0xB039CC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4BEC", Offset = "0x8F4BEC")]
	public void PlayVO()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xB03BAC", Offset = "0xB03BAC", VA = "0xB03BAC")]
	public cRaiseVO()
	{
	}
}
[Token(Token = "0x20000B0")]
public class cControllerButton : MonoBehaviour
{
	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject glow;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xAC2060", Offset = "0xAC2060", VA = "0xAC2060")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xAC2084", Offset = "0xAC2084", VA = "0xAC2084")]
	public void Highlight()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xAC2064", Offset = "0xAC2064", VA = "0xAC2064")]
	public void UnHighlight()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xAC20A4", Offset = "0xAC20A4", VA = "0xAC20A4")]
	public cControllerButton()
	{
	}
}
[Token(Token = "0x20000B1")]
public class cControllerDisplay : MonoBehaviour
{
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject triggerGlow;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gripGlow;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject primaryButtonGlow;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject secondaryButtonGlow;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject thumbstickGlow;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject menuButtonGlow;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xAC20AC", Offset = "0xAC20AC", VA = "0xAC20AC")]
	public void HideAll()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xAC2140", Offset = "0xAC2140", VA = "0xAC2140")]
	public void HighlightButton(cControllerDisplaySystem.DisplayButton button)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xAC21FC", Offset = "0xAC21FC", VA = "0xAC21FC")]
	public cControllerDisplay()
	{
	}
}
[Token(Token = "0x20000B2")]
public class cControllerDisplay_OLD : MonoBehaviour
{
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cControllerButton primaryTrigger;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent primaryTriggerHighlightEvent;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate primaryTriggerHighlightDelegate;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cControllerButton secondaryTrigger;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOGameEvent secondaryTriggerHighlightEvent;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate secondaryTriggerHighlightDelegate;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private cControllerButton primaryButton;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOGameEvent primaryButtonHighlightEvent;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate primaryButtonHighlightDelegate;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private cControllerButton secondaryButton;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOGameEvent secondaryButtonHighlightEvent;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate secondaryButtonHighlightDelegate;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private cControllerButton menuButton;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOGameEvent menuButtonyHighlightEvent;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate menuButtonHighlightDelegate;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private cControllerButton thumbstick;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOGameEvent thumbstickHighlightEvent;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate thumbstickHighlightDelegate;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SOGameEvent unHighlightAllButtonsEvent;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate unHighlightAllButtonsDelegate;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xAC2774", Offset = "0xAC2774", VA = "0xAC2774")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xAC2988", Offset = "0xAC2988", VA = "0xAC2988")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xAC298C", Offset = "0xAC298C", VA = "0xAC298C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xAC28E0", Offset = "0xAC28E0", VA = "0xAC28E0")]
	private void RegisterDelegates()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xAC29F4", Offset = "0xAC29F4", VA = "0xAC29F4")]
	private void UnregisterDelegates()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xAC2990", Offset = "0xAC2990", VA = "0xAC2990")]
	private void UnHighlightAll()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xAC2A9C", Offset = "0xAC2A9C", VA = "0xAC2A9C")]
	private void HighlightPrimaryTrigger()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xAC2AB4", Offset = "0xAC2AB4", VA = "0xAC2AB4")]
	private void HighlightSecondaryTrigger()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xAC2ACC", Offset = "0xAC2ACC", VA = "0xAC2ACC")]
	private void HighlightPrimaryButton()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xAC2AE4", Offset = "0xAC2AE4", VA = "0xAC2AE4")]
	private void HighlightSecondaryButton()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xAC2AFC", Offset = "0xAC2AFC", VA = "0xAC2AFC")]
	private void HighlightMenuButton()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xAC2B14", Offset = "0xAC2B14", VA = "0xAC2B14")]
	private void HighlightThumbstick()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xAC2B2C", Offset = "0xAC2B2C", VA = "0xAC2B2C")]
	public cControllerDisplay_OLD()
	{
	}
}
[Token(Token = "0x20000B3")]
public class cControllerDisplaySystem : MonoBehaviour
{
	[Token(Token = "0x200041E")]
	public enum DisplayButton
	{
		[Token(Token = "0x4001B9A")]
		TRIGGER,
		[Token(Token = "0x4001B9B")]
		GRIP,
		[Token(Token = "0x4001B9C")]
		A_X,
		[Token(Token = "0x4001B9D")]
		B_Y,
		[Token(Token = "0x4001B9E")]
		THUMBSTICK,
		[Token(Token = "0x4001B9F")]
		MENU,
		[Token(Token = "0x4001BA0")]
		TRIGGER_GRIP_THUMBSTICK
	}

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent DisplayControllersEvent;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SOGameEvent.GameEventDelegate DisplayControllersDelegate;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent DisplayHandsEvent;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SOGameEvent.GameEventDelegate DisplayHandsDelegate;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private sTextEvent controllerTextEvent;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private sTextEvent.TextEventDelegate controllerTextDelegate;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject leftHandVisual;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject rightHandVisual;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject leftControllerVisual;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject rightControllerVisual;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private cControllerDisplay leftControllerScript;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private cControllerDisplay rightControllerScript;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro rightControllerText;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static cControllerDisplaySystem _instance;

	[Token(Token = "0x1700001C")]
	public static cControllerDisplaySystem Instance
	{
		[Token(Token = "0x600046D")]
		[Address(RVA = "0xAC2204", Offset = "0xAC2204", VA = "0xAC2204")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xAC22D0", Offset = "0xAC22D0", VA = "0xAC22D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xAC23E4", Offset = "0xAC23E4", VA = "0xAC23E4")]
	public static void DestroySelf()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xAC245C", Offset = "0xAC245C", VA = "0xAC245C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xAC2618", Offset = "0xAC2618", VA = "0xAC2618")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xAC2670", Offset = "0xAC2670", VA = "0xAC2670")]
	private void DisplayControllerText(string message)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xAC268C", Offset = "0xAC268C", VA = "0xAC268C")]
	public void HighlightButton(DisplayButton button)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xAC26CC", Offset = "0xAC26CC", VA = "0xAC26CC")]
	public void HideButtonHighlights()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xAC2700", Offset = "0xAC2700", VA = "0xAC2700")]
	private void DisplayControllers()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xAC25AC", Offset = "0xAC25AC", VA = "0xAC25AC")]
	private void DisplayHands()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xAC276C", Offset = "0xAC276C", VA = "0xAC276C")]
	public cControllerDisplaySystem()
	{
	}
}
[Token(Token = "0x20000B4")]
public class cDayNightSystem : MonoBehaviour
{
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cPersistent wineBottleInstance;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sObjectTracker wineBottleFlowTracker;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material daySkybox;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material nightSkybox;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject dayRays;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private cBurnable wallTorch;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent arrivedInMatWorldEvent;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate arrivedInMatWorldDelegate;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private cNecromancer necromancer;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private soVOEvent firstTimeNightVO;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private soVOEvent firstTimeDayVO;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SOSceneManager prevScene;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 wineSpawnLocation;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion wineSpawnRotation;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Rigidbody wineRb;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private sBool wineInDais;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isDay;

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xAC4764", Offset = "0xAC4764", VA = "0xAC4764")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xAC48AC", Offset = "0xAC48AC", VA = "0xAC48AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xAC48D0", Offset = "0xAC48D0", VA = "0xAC48D0")]
	private void SceneChanged(SOSceneManager previousScene)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xAC4A5C", Offset = "0xAC4A5C", VA = "0xAC4A5C")]
	private void SetTime()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xAC4DAC", Offset = "0xAC4DAC", VA = "0xAC4DAC")]
	private void SetNight()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xAC4CF0", Offset = "0xAC4CF0", VA = "0xAC4CF0")]
	private void SetDay()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xAC5158", Offset = "0xAC5158", VA = "0xAC5158")]
	private void SetDayFirstTime()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xAC4E8C", Offset = "0xAC4E8C", VA = "0xAC4E8C")]
	private void ResetWine()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xAC512C", Offset = "0xAC512C", VA = "0xAC512C")]
	private void SetTorchLit(bool isLit)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xAC51AC", Offset = "0xAC51AC", VA = "0xAC51AC")]
	public bool GetDay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xAC5088", Offset = "0xAC5088", VA = "0xAC5088")]
	private void SetDayNightPrefabs(bool isDay)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xAC51B4", Offset = "0xAC51B4", VA = "0xAC51B4")]
	public cDayNightSystem()
	{
	}
}
[Token(Token = "0x20000B5")]
public class cComboRetrieval : MonoBehaviour
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public sQuantumChestObject[] unlockableItems;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int[] display;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text textField;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xA999E8", Offset = "0xA999E8", VA = "0xA999E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xA99D98", Offset = "0xA99D98", VA = "0xA99D98")]
	public cComboRetrieval()
	{
	}
}
[Token(Token = "0x20000B6")]
public class cConsoleOutput : MonoBehaviour
{
	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro textMesh;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int lineMax;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lines;

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xA9A91C", Offset = "0xA9A91C", VA = "0xA9A91C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xA9A990", Offset = "0xA9A990", VA = "0xA9A990")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xA9AA04", Offset = "0xA9AA04", VA = "0xA9AA04")]
	public void LogMessage(string message, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xA9AADC", Offset = "0xA9AADC", VA = "0xA9AADC")]
	public cConsoleOutput()
	{
	}
}
[Token(Token = "0x20000B7")]
public class cDebugConsoleOutput : MonoBehaviour
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro textMesh;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int lineMax;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lines;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xAC5404", Offset = "0xAC5404", VA = "0xAC5404")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xAC54A0", Offset = "0xAC54A0", VA = "0xAC54A0")]
	public void LogMessage(string message, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xAC5698", Offset = "0xAC5698", VA = "0xAC5698")]
	public cDebugConsoleOutput()
	{
	}
}
[Token(Token = "0x20000B8")]
public class cDebugLog : MonoBehaviour
{
	[Token(Token = "0x600048D")]
	[Address(RVA = "0xAC56A0", Offset = "0xAC56A0", VA = "0xAC56A0")]
	public void DebugLogMessage(string message)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xAC5708", Offset = "0xAC5708", VA = "0xAC5708")]
	public cDebugLog()
	{
	}
}
[Token(Token = "0x20000B9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD65C", Offset = "0x8DD65C")]
public class cDebugText : MonoBehaviour
{
	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro debugText;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cDebugText Instance;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Queue debugTextQueue;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float defultDisplayTextTime;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool textVisible;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int maxQueueSize;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private sTextEvent AddDebugTextEvent;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private sTextEvent.TextEventDelegate AddDebugTextEventDelegate;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private sTextEvent AddEternalDebugTextEvent;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private sTextEvent.TextEventDelegate AddEternalDebugTextEventDelegate;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent ClearAllDebugTextEvent;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate ClearAllDebugTextEventDelegate;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xAC5710", Offset = "0xAC5710", VA = "0xAC5710")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xAC57DC", Offset = "0xAC57DC", VA = "0xAC57DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xAC5920", Offset = "0xAC5920", VA = "0xAC5920")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xAC5978", Offset = "0xAC5978", VA = "0xAC5978")]
	public void ShowDebugTextForSeconds(string textContent, float duration)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xAC5AD0", Offset = "0xAC5AD0", VA = "0xAC5AD0")]
	public void ShowDebugTextForever(string textContent)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xAC5BA4", Offset = "0xAC5BA4", VA = "0xAC5BA4")]
	public void ShowDebugTextForSeconds(string textContent)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xAC5A78", Offset = "0xAC5A78", VA = "0xAC5A78")]
	private void ShowDebugText(string textContent)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xAC5C94", Offset = "0xAC5C94", VA = "0xAC5C94")]
	private void HideDebugText()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xAC5DDC", Offset = "0xAC5DDC", VA = "0xAC5DDC")]
	private void HideAllDebugText()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xAC5E34", Offset = "0xAC5E34", VA = "0xAC5E34")]
	public cDebugText()
	{
	}
}
[Token(Token = "0x20000BA")]
public class cEndgameTestingSetup : MonoBehaviour
{
	[Token(Token = "0x6000499")]
	[Address(RVA = "0xAC8898", Offset = "0xAC8898", VA = "0xAC8898")]
	private void Start()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xAC88F0", Offset = "0xAC88F0", VA = "0xAC88F0")]
	public void UnlockEquipShadowhand()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xAC8994", Offset = "0xAC8994", VA = "0xAC8994")]
	private void SetupForEndgame()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xAC8998", Offset = "0xAC8998", VA = "0xAC8998")]
	public cEndgameTestingSetup()
	{
	}
}
[Token(Token = "0x20000BB")]
public class cFingertip : MonoBehaviour
{
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cGrabberRedux grabber;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xACCBC0", Offset = "0xACCBC0", VA = "0xACCBC0")]
	public cFingertip()
	{
	}
}
[Token(Token = "0x20000BC")]
public class cMatchDevicePosition : MonoBehaviour
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SOInputHandler.Hand hand;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xB708BC", Offset = "0xB708BC", VA = "0xB708BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xB7091C", Offset = "0xB7091C", VA = "0xB7091C")]
	public cMatchDevicePosition()
	{
	}
}
[Token(Token = "0x20000BD")]
public class cQuickGameEventTester : MonoBehaviour
{
	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool raiseEventsOnStart;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SOGameEvent[] eventsToTest;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xB02E98", Offset = "0xB02E98", VA = "0xB02E98")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xB02F30", Offset = "0xB02F30", VA = "0xB02F30")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xB03158", Offset = "0xB03158", VA = "0xB03158")]
	public cQuickGameEventTester()
	{
	}
}
[Token(Token = "0x20000BE")]
public class cQuickInputEventTester : MonoBehaviour
{
	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SOInputEvent[] eventsToTest;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SOInputHandler.Hand hand;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xB03160", Offset = "0xB03160", VA = "0xB03160")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xB0338C", Offset = "0xB0338C", VA = "0xB0338C")]
	public cQuickInputEventTester()
	{
	}
}
[Token(Token = "0x20000BF")]
public class cQuickTextEventTester : MonoBehaviour
{
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sTextEvent[] eventsToTest;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string message;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xB03394", Offset = "0xB03394", VA = "0xB03394")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xB035C0", Offset = "0xB035C0", VA = "0xB035C0")]
	public cQuickTextEventTester()
	{
	}
}
[Token(Token = "0x20000C0")]
public class cQuickTimedEventTester : MonoBehaviour
{
	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sTimedEvent[] eventsToTest;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xB035C8", Offset = "0xB035C8", VA = "0xB035C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xB037F4", Offset = "0xB037F4", VA = "0xB037F4")]
	public cQuickTimedEventTester()
	{
	}
}
[Token(Token = "0x20000C1")]
public class cRaiseEventOnInput : MonoBehaviour
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOInputEvent inputEvent;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOInputEvent.InputEventDelegate inputEventDelegate;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent gameEventToRaise;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOInputHandler.Hand inputHand;

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xB037FC", Offset = "0xB037FC", VA = "0xB037FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xB03884", Offset = "0xB03884", VA = "0xB03884")]
	private void InputReceived(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xB038A0", Offset = "0xB038A0", VA = "0xB038A0")]
	public cRaiseEventOnInput()
	{
	}
}
[Token(Token = "0x20000C2")]
public class cRaiseEventOnStart : MonoBehaviour
{
	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent eventToRaise;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xB038A8", Offset = "0xB038A8", VA = "0xB038A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xB038BC", Offset = "0xB038BC", VA = "0xB038BC")]
	public cRaiseEventOnStart()
	{
	}
}
[Token(Token = "0x20000C3")]
public class cSequenceStepDebugText : MonoBehaviour
{
	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro debugTextField;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cGameProgressionSystem GPS;

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xB2F87C", Offset = "0xB2F87C", VA = "0xB2F87C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xB2F8D4", Offset = "0xB2F8D4", VA = "0xB2F8D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xB2F9E8", Offset = "0xB2F9E8", VA = "0xB2F9E8")]
	public cSequenceStepDebugText()
	{
	}
}
[Token(Token = "0x20000C4")]
public class cSkipVoiceLineOnInput : MonoBehaviour
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent eventToRaise;

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xB37520", Offset = "0xB37520", VA = "0xB37520")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xB375B0", Offset = "0xB375B0", VA = "0xB375B0")]
	public cSkipVoiceLineOnInput()
	{
	}
}
[Token(Token = "0x20000C5")]
public class cSpawnPrefabOnButtonPress : MonoBehaviour
{
	[Token(Token = "0x200041F")]
	public enum SpawnOptions
	{
		[Token(Token = "0x4001BA2")]
		defaultDebugCube,
		[Token(Token = "0x4001BA3")]
		customGravityCube
	}

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpawnOptions spawnedObjectType;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public cSceneLoader sceneLoader;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject grabbableCube;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject customGravityCube;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject objectToSpawn;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject holder;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float offsetFromFace;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool buttonPressed;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int count;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color[] colours;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool persistent;

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xB3A508", Offset = "0xB3A508", VA = "0xB3A508")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xB3A5D4", Offset = "0xB3A5D4", VA = "0xB3A5D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xB3A620", Offset = "0xB3A620", VA = "0xB3A620")]
	private void SpawnPrefab()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xB3A8E0", Offset = "0xB3A8E0", VA = "0xB3A8E0")]
	private void SetMaterial(GameObject obj, int color)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xB3AA70", Offset = "0xB3AA70", VA = "0xB3AA70")]
	private void AddObjectToSceneList(GameObject objectToAdd, SOSceneManager scene)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xB3AB20", Offset = "0xB3AB20", VA = "0xB3AB20")]
	public cSpawnPrefabOnButtonPress()
	{
	}
}
[Token(Token = "0x20000C6")]
public class cSpawnPrefabOnEvent : MonoBehaviour
{
	[Token(Token = "0x2000420")]
	public enum SpawnOptions
	{
		[Token(Token = "0x4001BA5")]
		defaultDebugCube,
		[Token(Token = "0x4001BA6")]
		customGravityCube
	}

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpawnOptions spawnedObjectType;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public cSceneLoader sceneLoader;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject grabbableCube;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject customGravityCube;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject objectToSpawn;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float offsetFromFace;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool buttonPressed;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int count;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color[] colours;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool persistent;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOInputEvent inputEventCubeSpawn;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOInputEvent.InputEventDelegate inputEventCubeSpawnDelegate;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Vector3 scale;

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xB3AB34", Offset = "0xB3AB34", VA = "0xB3AB34")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xB3AC44", Offset = "0xB3AC44", VA = "0xB3AC44")]
	private void SpawnPrefab(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xB3AF90", Offset = "0xB3AF90", VA = "0xB3AF90")]
	private void SetMaterial(GameObject obj, int color)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xB3AEE0", Offset = "0xB3AEE0", VA = "0xB3AEE0")]
	private void AddObjectToSceneList(GameObject objectToAdd, SOSceneManager scene)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xB3B120", Offset = "0xB3B120", VA = "0xB3B120")]
	public cSpawnPrefabOnEvent()
	{
	}
}
[Token(Token = "0x20000C7")]
public class cUnlockAndEquipShadowhand : MonoBehaviour
{
	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xB43BC4", Offset = "0xB43BC4", VA = "0xB43BC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xB43C1C", Offset = "0xB43C1C", VA = "0xB43C1C")]
	public void UnlockEquipShadowhand()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xB43CA4", Offset = "0xB43CA4", VA = "0xB43CA4")]
	public cUnlockAndEquipShadowhand()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ActiveSequencesDebugManager : MonoBehaviour
{
	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF7F0", Offset = "0x8DF7F0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public sGameSequence sequence;

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xBD2E04", Offset = "0xBD2E04", VA = "0xBD2E04")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xBD318C", Offset = "0xBD318C", VA = "0xBD318C")]
		internal void <PopulateUI>b__0()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xBD31A8", Offset = "0xBD31A8", VA = "0xBD31A8")]
		internal void <PopulateUI>b__1()
		{
		}
	}

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject sequenceItem;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject stepItem;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cGameProgressionSystem GPS;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityAction<sGameSequence> sequenceFinishedAction;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool PopulateCalled;

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xBD28AC", Offset = "0xBD28AC", VA = "0xBD28AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xBD2924", Offset = "0xBD2924", VA = "0xBD2924")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xBD2928", Offset = "0xBD2928", VA = "0xBD2928")]
	private void PopulateUI()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xBD2E0C", Offset = "0xBD2E0C", VA = "0xBD2E0C")]
	private void UpdateUI(sGameSequence sequence)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xBD2EB8", Offset = "0xBD2EB8", VA = "0xBD2EB8")]
	private void ClearUI()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xBD3180", Offset = "0xBD3180", VA = "0xBD3180")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xBD3184", Offset = "0xBD3184", VA = "0xBD3184")]
	public ActiveSequencesDebugManager()
	{
	}
}
[Token(Token = "0x20000C9")]
public class DebugUIEnabler : MonoBehaviour
{
	[Token(Token = "0x2000422")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF800", Offset = "0x8DF800")]
	private sealed class <HoldTimerCheck>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timer;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DebugUIEnabler <>4__this;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xBE16F0", Offset = "0xBE16F0", VA = "0xBE16F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0xBE175C", Offset = "0xBE175C", VA = "0xBE175C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xBE155C", Offset = "0xBE155C", VA = "0xBE155C")]
		[DebuggerHidden]
		public <HoldTimerCheck>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xBE1598", Offset = "0xBE1598", VA = "0xBE1598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xBE159C", Offset = "0xBE159C", VA = "0xBE159C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xBE16F8", Offset = "0xBE16F8", VA = "0xBE16F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] debugUIElements;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isOpen;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float timeToHold;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xBE13A8", Offset = "0xBE13A8", VA = "0xBE13A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xBE14D8", Offset = "0xBE14D8", VA = "0xBE14D8")]
	public void SetActiveMultiple(bool setActive)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xBE1454", Offset = "0xBE1454", VA = "0xBE1454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4BFC", Offset = "0x8F4BFC")]
	private IEnumerator HoldTimerCheck(float timer)
	{
		return null;
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xBE1588", Offset = "0xBE1588", VA = "0xBE1588")]
	public DebugUIEnabler()
	{
	}
}
[Token(Token = "0x20000CA")]
public class ForceIdleToggleUI : MonoBehaviour
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle toggle;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xB5D6DC", Offset = "0xB5D6DC", VA = "0xB5D6DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xB5D74C", Offset = "0xB5D74C", VA = "0xB5D74C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xB5D7E0", Offset = "0xB5D7E0", VA = "0xB5D7E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xB5D8B4", Offset = "0xB5D8B4", VA = "0xB5D8B4")]
	public ForceIdleToggleUI()
	{
	}
}
[Token(Token = "0x20000CB")]
public class GameStartedToggleUI : MonoBehaviour
{
	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle toggle;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xB5D8BC", Offset = "0xB5D8BC", VA = "0xB5D8BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xB5D92C", Offset = "0xB5D92C", VA = "0xB5D92C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xB5D9BC", Offset = "0xB5D9BC", VA = "0xB5D9BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xB5DA80", Offset = "0xB5DA80", VA = "0xB5DA80")]
	public GameStartedToggleUI()
	{
	}
}
[Token(Token = "0x20000CC")]
public class HapticSliderUI : MonoBehaviour
{
	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cGameControlManager gameControlManagerInstance;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Slider slider;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialDeviceVelocity;

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xCC45AC", Offset = "0xCC45AC", VA = "0xCC45AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xCC46C0", Offset = "0xCC46C0", VA = "0xCC46C0")]
	public void SetHapticIntensity(float value)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xCC46E0", Offset = "0xCC46E0", VA = "0xCC46E0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xCC4808", Offset = "0xCC4808", VA = "0xCC4808")]
	public HapticSliderUI()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ParticleUIButton : MonoBehaviour
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject particlePrefab;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool keepSpawning;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform particleSpawnPoint;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem[] particles;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Button btn;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xC2EF74", Offset = "0xC2EF74", VA = "0xC2EF74")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xC2F08C", Offset = "0xC2F08C", VA = "0xC2F08C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xC2F120", Offset = "0xC2F120", VA = "0xC2F120")]
	private void ButtonClicked()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xC2F138", Offset = "0xC2F138", VA = "0xC2F138")]
	private void SpawnParticle()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xC2F368", Offset = "0xC2F368", VA = "0xC2F368")]
	private void PlayParticle(ParticleSystem[] particlesArray)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xC2F29C", Offset = "0xC2F29C", VA = "0xC2F29C")]
	private void ToggleParticlePlay()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xC2F45C", Offset = "0xC2F45C", VA = "0xC2F45C")]
	public ParticleUIButton()
	{
	}
}
[Token(Token = "0x20000CE")]
public class PuzzleUIToggle : MonoBehaviour
{
	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle toggle;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sBool puzzleToComplete;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cQuantumObjectHandler quantumObjectHandlerScript;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool quantumChestLid;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool puzzleBool;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool candleBool;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[SerializeField]
	private bool baubleOnHook;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool fairyFireBool;

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xC2FD38", Offset = "0xC2FD38", VA = "0xC2FD38")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xC2FD90", Offset = "0xC2FD90", VA = "0xC2FD90")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xC2FFAC", Offset = "0xC2FFAC", VA = "0xC2FFAC")]
	public PuzzleUIToggle()
	{
	}
}
[Token(Token = "0x20000CF")]
public class ScriptableBoolResetter : MonoBehaviour
{
	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool[] listOfSBoolsToReset;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xA84108", Offset = "0xA84108", VA = "0xA84108")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4C60", Offset = "0x8F4C60")]
	[ExecuteInEditMode]
	public void ResetSBools()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xA84168", Offset = "0xA84168", VA = "0xA84168")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xA8416C", Offset = "0xA8416C", VA = "0xA8416C")]
	public ScriptableBoolResetter()
	{
	}
}
[Token(Token = "0x20000D0")]
public class ScrollBehavior : MonoBehaviour
{
	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform scroll;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button btn;

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xA84174", Offset = "0xA84174", VA = "0xA84174")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xA841CC", Offset = "0xA841CC", VA = "0xA841CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xA84270", Offset = "0xA84270", VA = "0xA84270")]
	public void Up()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xA842E4", Offset = "0xA842E4", VA = "0xA842E4")]
	public void Down()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xA84358", Offset = "0xA84358", VA = "0xA84358")]
	public ScrollBehavior()
	{
	}
}
[Token(Token = "0x20000D1")]
public class SequenceDebugUI : MonoBehaviour
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text seqName;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button on;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button off;

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xA84360", Offset = "0xA84360", VA = "0xA84360")]
	public SequenceDebugUI()
	{
	}
}
[Token(Token = "0x20000D2")]
public class SliderUI : MonoBehaviour
{
	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xA84D8C", Offset = "0xA84D8C", VA = "0xA84D8C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xA84DF8", Offset = "0xA84DF8", VA = "0xA84DF8")]
	public SliderUI()
	{
	}
}
[Token(Token = "0x20000D3")]
public class StepDebugUI : MonoBehaviour
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text stepName;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle stepToggle;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public sGameStep stepSO;

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xA88BAC", Offset = "0xA88BAC", VA = "0xA88BAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xA88C64", Offset = "0xA88C64", VA = "0xA88C64")]
	public StepDebugUI()
	{
	}
}
[Token(Token = "0x20000D4")]
public class SubtitleDepthSliderUI : MonoBehaviour
{
	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cSubtitleController subtitleControllerInstance;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Slider slider;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialDeviceVelocity;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xA88C6C", Offset = "0xA88C6C", VA = "0xA88C6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xA88DA4", Offset = "0xA88DA4", VA = "0xA88DA4")]
	public void SetSubtitleDepth(float value)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xA88DC0", Offset = "0xA88DC0", VA = "0xA88DC0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xA88EF8", Offset = "0xA88EF8", VA = "0xA88EF8")]
	public SubtitleDepthSliderUI()
	{
	}
}
[Token(Token = "0x20000D5")]
public class SubtitleHeightSliderUI : MonoBehaviour
{
	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cSubtitleController subtitleControllerInstance;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Slider slider;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialDeviceVelocity;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xA88F00", Offset = "0xA88F00", VA = "0xA88F00")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xA89038", Offset = "0xA89038", VA = "0xA89038")]
	public void SetSubtitleHeight(float value)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xA89054", Offset = "0xA89054", VA = "0xA89054")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xA89094", Offset = "0xA89094", VA = "0xA89094")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xA891B4", Offset = "0xA891B4", VA = "0xA891B4")]
	public SubtitleHeightSliderUI()
	{
	}
}
[Token(Token = "0x20000D6")]
public class SubtitleToggleUI : MonoBehaviour
{
	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle toggle;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public cSubtitleController subtitleControllerScript;

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xA891BC", Offset = "0xA891BC", VA = "0xA891BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xA89320", Offset = "0xA89320", VA = "0xA89320")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xA89400", Offset = "0xA89400", VA = "0xA89400")]
	private void SubtitleToggleValueChanged(Toggle toggle)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xA89440", Offset = "0xA89440", VA = "0xA89440")]
	public SubtitleToggleUI()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xA89448", Offset = "0xA89448", VA = "0xA89448")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4C98", Offset = "0x8F4C98")]
	private void <Start>b__2_0(bool <p0>)
	{
	}
}
[Token(Token = "0x20000D7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD6C0", Offset = "0x8DD6C0")]
public class TabButton : MonoBehaviour
{
	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TabGroup tabGroup;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image background;

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xA89450", Offset = "0xA89450", VA = "0xA89450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xA8955C", Offset = "0xA8955C", VA = "0xA8955C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xA89560", Offset = "0xA89560", VA = "0xA89560")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xA896FC", Offset = "0xA896FC", VA = "0xA896FC")]
	public TabButton()
	{
	}
}
[Token(Token = "0x20000D8")]
public class TabGroup : MonoBehaviour
{
	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TabButton> tabButtons;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TabButton selectedTab;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> pages;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color tabIdle;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color tabSelected;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xA894C0", Offset = "0xA894C0", VA = "0xA894C0")]
	public void Subscribe(TabButton button)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xA895FC", Offset = "0xA895FC", VA = "0xA895FC")]
	public void OnTabSelected(TabButton button)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xA89704", Offset = "0xA89704", VA = "0xA89704")]
	public void ResetTabs()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xA8985C", Offset = "0xA8985C", VA = "0xA8985C")]
	public TabGroup()
	{
	}
}
[Token(Token = "0x20000D9")]
public class UIButton : MonoBehaviour
{
	[Token(Token = "0x6000507")]
	[Address(RVA = "0xA8E1C0", Offset = "0xA8E1C0", VA = "0xA8E1C0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xA8E274", Offset = "0xA8E274", VA = "0xA8E274")]
	public UIButton()
	{
	}
}
[Token(Token = "0x20000DA")]
public class UIToggle : MonoBehaviour
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle toggle;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cSpell spell;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOSceneManager scene;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isSpellToggle;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool isFlowToggle;

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xA8E27C", Offset = "0xA8E27C", VA = "0xA8E27C")]
	private void Start()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xA8E328", Offset = "0xA8E328", VA = "0xA8E328")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xA8E42C", Offset = "0xA8E42C", VA = "0xA8E42C")]
	public UIToggle()
	{
	}
}
[Token(Token = "0x20000DB")]
public class VolumeSliderUI : MonoBehaviour
{
	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cAudioSystem audioSystemInstance;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Slider slider;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialDeviceVelocity;

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xA8F40C", Offset = "0xA8F40C", VA = "0xA8F40C")]
	private void Start()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xA8F574", Offset = "0xA8F574", VA = "0xA8F574")]
	public void SetVolumeLevel(float value)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xA8F6E8", Offset = "0xA8F6E8", VA = "0xA8F6E8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xA8F810", Offset = "0xA8F810", VA = "0xA8F810")]
	public VolumeSliderUI()
	{
	}
}
[Token(Token = "0x20000DC")]
public class cDreamThought : MonoBehaviour
{
	[Token(Token = "0x2000423")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF810", Offset = "0x8DF810")]
	private sealed class <DreamThoughtLerp>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cDreamThought <>4__this;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0xAC798C", Offset = "0xAC798C", VA = "0xAC798C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0xAC79F8", Offset = "0xAC79F8", VA = "0xAC79F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xAC74B4", Offset = "0xAC74B4", VA = "0xAC74B4")]
		[DebuggerHidden]
		public <DreamThoughtLerp>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xAC7738", Offset = "0xAC7738", VA = "0xAC7738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xAC773C", Offset = "0xAC773C", VA = "0xAC773C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xAC7994", Offset = "0xAC7994", VA = "0xAC7994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8E4D10", Offset = "0x8E4D10")]
	public string desc;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool finalDreamThought;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private soVOSequence dreamThoughtVOSeq;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent activationEvent;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float distanceToPlay;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent onDreamThoughtEaten;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _active;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private cDreamThoughtGrabbable grabbableScript;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SOGameEvent.GameEventDelegate activationDelegate;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 startPos;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject visual;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool grabbed;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HighlightController highlightController;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private cSoundEffect lookOverHereSound;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private cSoundEffect onEatenSound;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float endLookSoundAfterSeconds;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool lookSoundPlaying;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timer;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private sBool hasDreamThoughtBeenUnlocked;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool forceIdleDuringSpawn;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float startTime;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 lerpStartPos;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float journeyLength;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float distCovered;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float fractionOfJourney;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float dreamThoughtLerpSpeed;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private cDreamThought lerpingDreamThought;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 dreamThoughtDestination;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform dreamscapeTransform;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AnimationCurve effectCurve;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject dreamAppearEffect;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private UnityEvent onDreamThoughtUnlocked;

	[Token(Token = "0x1700001D")]
	public bool active
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0xAC6BA4", Offset = "0xAC6BA4", VA = "0xAC6BA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000511")]
		[Address(RVA = "0xAC6BAC", Offset = "0xAC6BAC", VA = "0xAC6BAC")]
		set
		{
		}
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xAC6C50", Offset = "0xAC6C50", VA = "0xAC6C50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xAC6D44", Offset = "0xAC6D44", VA = "0xAC6D44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xAC6D60", Offset = "0xAC6D60", VA = "0xAC6D60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xAC6D84", Offset = "0xAC6D84", VA = "0xAC6D84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xAC6DC0", Offset = "0xAC6DC0", VA = "0xAC6DC0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xAC6E40", Offset = "0xAC6E40", VA = "0xAC6E40")]
	private void UpdateGrabbed()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xAC6BB8", Offset = "0xAC6BB8", VA = "0xAC6BB8")]
	public void Validate()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xAC7204", Offset = "0xAC7204", VA = "0xAC7204")]
	private void DreamThoughtAppearFromDreamscape()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xAC7288", Offset = "0xAC7288", VA = "0xAC7288")]
	public void SpawnDreamThought(cDreamThought dreamThought)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xAC73F4", Offset = "0xAC73F4", VA = "0xAC73F4")]
	public void LerpFinished()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xAC7380", Offset = "0xAC7380", VA = "0xAC7380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4CA8", Offset = "0x8F4CA8")]
	private IEnumerator DreamThoughtLerp()
	{
		return null;
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xAC74E0", Offset = "0xAC74E0", VA = "0xAC74E0")]
	private void Activate()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xAC6F64", Offset = "0xAC6F64", VA = "0xAC6F64")]
	private void Play()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xAC75D0", Offset = "0xAC75D0", VA = "0xAC75D0")]
	private void PlayDreamThought()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xAC7620", Offset = "0xAC7620", VA = "0xAC7620")]
	public void GrabStart()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xAC7664", Offset = "0xAC7664", VA = "0xAC7664")]
	public void GrabReleased()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xAC76A0", Offset = "0xAC76A0", VA = "0xAC76A0")]
	public void DreamThought8Selected()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xAC7718", Offset = "0xAC7718", VA = "0xAC7718")]
	public cDreamThought()
	{
	}
}
[Token(Token = "0x20000DD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD724", Offset = "0x8DD724")]
public class cDreamThoughtGrabbable : cGrabbableRedux
{
	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private cDreamThought dreamThoughtScript;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xAC7A00", Offset = "0xAC7A00", VA = "0xAC7A00", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xAC7AF4", Offset = "0xAC7AF4", VA = "0xAC7AF4", Slot = "6")]
	public override void Grabbed(cGrabberRedux grabber)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xAC7B8C", Offset = "0xAC7B8C", VA = "0xAC7B8C", Slot = "7")]
	public override void Released(cGrabberRedux grabber)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xAC7BC8", Offset = "0xAC7BC8", VA = "0xAC7BC8")]
	public cDreamThoughtGrabbable()
	{
	}
}
[Token(Token = "0x20000DE")]
public class cDreamThoughtSystem : MonoBehaviour
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform dreamscapeTransform;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve effectCurve;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject dreamAppearEffect;

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xAC7C8C", Offset = "0xAC7C8C", VA = "0xAC7C8C")]
	public cDreamThoughtSystem()
	{
	}
}
[Token(Token = "0x20000DF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DD788", Offset = "0x8DD788")]
public class sDreamThought : ScriptableObject
{
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOSequence voSequence;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool active;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x15AAE10", Offset = "0x15AAE10", VA = "0x15AAE10")]
	public void Play(GameObject caller)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x15AAE6C", Offset = "0x15AAE6C", VA = "0x15AAE6C")]
	public void Activate()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x15AAE78", Offset = "0x15AAE78", VA = "0x15AAE78")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x15AAE80", Offset = "0x15AAE80", VA = "0x15AAE80")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x15AAE88", Offset = "0x15AAE88", VA = "0x15AAE88")]
	public sDreamThought()
	{
	}
}
[Token(Token = "0x20000E0")]
public class cEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool exitAppOnFailure;

	[Token(Token = "0x14000001")]
	public static event Action UserFailedEntitlementCheck
	{
		[Token(Token = "0x600052E")]
		[Address(RVA = "0xAC89A0", Offset = "0xAC89A0", VA = "0xAC89A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4D0C", Offset = "0x8F4D0C")]
		add
		{
		}
		[Token(Token = "0x600052F")]
		[Address(RVA = "0xAC8A54", Offset = "0xAC8A54", VA = "0xAC8A54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4D1C", Offset = "0x8F4D1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action UserPassedEntitlementCheck
	{
		[Token(Token = "0x6000530")]
		[Address(RVA = "0xAC8B08", Offset = "0xAC8B08", VA = "0xAC8B08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4D2C", Offset = "0x8F4D2C")]
		add
		{
		}
		[Token(Token = "0x6000531")]
		[Address(RVA = "0xAC8BC0", Offset = "0xAC8BC0", VA = "0xAC8BC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4D3C", Offset = "0x8F4D3C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xAC8C78", Offset = "0xAC8C78", VA = "0xAC8C78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xAC90AC", Offset = "0xAC90AC", VA = "0xAC90AC")]
	private void EntitlementCheckCallback(Message msg)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xAC8E30", Offset = "0xAC8E30", VA = "0xAC8E30")]
	private void HandleEntitlementCheckResult(bool result)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xAC90EC", Offset = "0xAC90EC", VA = "0xAC90EC")]
	public cEntitlementCheck()
	{
	}
}
[Token(Token = "0x20000E1")]
public class cFlowChartingMachine : MonoBehaviour
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject visual;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool wasShadowHanded;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool wasCommuned;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool wasRayOfFired;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool wasControlWeathered;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent fcmCompleted;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject shadowHandCastVisual;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject communeCastVisual;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject rayOfFireCastVisual;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject controlWeatherCastVisual;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private soVOEvent firstSpellCast;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private soVOEvent secondSpellCast;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private soVOEvent thirdSpellCast;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private soVOSequence fourthSpellCast;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> stageVisuals;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private soVOEvent flowChartingMachineComplete;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool chartingMachineEnabled;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool chartingMachineComplete;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int spellsCast;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent activated;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UnityEvent onAllSpellsCast;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xACE58C", Offset = "0xACE58C", VA = "0xACE58C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F4D4C", Offset = "0x8F4D4C")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xACE634", Offset = "0xACE634", VA = "0xACE634")]
	public void AllSpellsCast()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xACE6E0", Offset = "0xACE6E0", VA = "0xACE6E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xACE730", Offset = "0xACE730", VA = "0xACE730")]
	public void CheckSpellsCast()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xACE7D4", Offset = "0xACE7D4", VA = "0xACE7D4")]
	private void EnableVisual(int index)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xACE894", Offset = "0xACE894", VA = "0xACE894")]
	public void ShadowHanded()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xACE8F4", Offset = "0xACE8F4", VA = "0xACE8F4")]
	public void Communed()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xACE954", Offset = "0xACE954", VA = "0xACE954")]
	public void RayOfFired()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xACE9B4", Offset = "0xACE9B4", VA = "0xACE9B4")]
	public void ControlWeathered()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xACEA14", Offset = "0xACEA14", VA = "0xACEA14")]
	public cFlowChartingMachine()
	{
	}
}
[Token(Token = "0x20000E2")]
public class cFlowChartingTarget : MonoBehaviour
{
	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent shadowhandDragged;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent rayOfFireDragged;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent communeDragged;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent controlWeatherDragged;

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xACEA1C", Offset = "0xACEA1C", VA = "0xACEA1C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xACECB4", Offset = "0xACECB4", VA = "0xACECB4")]
	public cFlowChartingTarget()
	{
	}
}
[Token(Token = "0x20000E3")]
public class cFlowGrabbable : cGrabbableRedux
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private cPortal portalScript;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xACECBC", Offset = "0xACECBC", VA = "0xACECBC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xACED1C", Offset = "0xACED1C", VA = "0xACED1C", Slot = "8")]
	public override bool grabbableStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xACED98", Offset = "0xACED98", VA = "0xACED98", Slot = "6")]
	public override void Grabbed(cGrabberRedux grabber)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xACEEAC", Offset = "0xACEEAC", VA = "0xACEEAC", Slot = "7")]
	public override void Released(cGrabberRedux grabber)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xACEF70", Offset = "0xACEF70", VA = "0xACEF70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xACEF74", Offset = "0xACEF74", VA = "0xACEF74")]
	private void ReleaseFlow()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xACEF78", Offset = "0xACEF78", VA = "0xACEF78")]
	public cFlowGrabbable()
	{
	}
}
[Token(Token = "0x20000E4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD7DC", Offset = "0x8DD7DC")]
public class cFlowParticles : MonoBehaviour
{
	[Token(Token = "0x2000424")]
	private enum FlowPerc
	{
		[Token(Token = "0x4001BB0")]
		Zero,
		[Token(Token = "0x4001BB1")]
		Twenty,
		[Token(Token = "0x4001BB2")]
		Fourty,
		[Token(Token = "0x4001BB3")]
		Sixty,
		[Token(Token = "0x4001BB4")]
		Eighty,
		[Token(Token = "0x4001BB5")]
		OneHundred
	}

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cPlanarCompass planarCompassScript;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem particleSys;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem.MainModule particleSysMain;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FlowPerc startPercentage;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SOGameEvent startPercEvent;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SOGameEvent previousPercEvent;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SOGameEvent.GameEventDelegate startPercDelegate;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SOGameEvent.GameEventDelegate prevPercDelegate;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SOGameEvent.GameEventDelegate cancelledDelegate;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SOGameEvent.GameEventDelegate completedDelegate;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xACEF84", Offset = "0xACEF84", VA = "0xACEF84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xACF354", Offset = "0xACF354", VA = "0xACF354")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xACF440", Offset = "0xACF440", VA = "0xACF440")]
	public void SetParticleColor(ParticleSystem.MinMaxGradient baseColor, Color primary, Color secondary, Color tertiary, float gradientVariation)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xACF6B8", Offset = "0xACF6B8", VA = "0xACF6B8")]
	public void StopParticles()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xACF7A8", Offset = "0xACF7A8", VA = "0xACF7A8")]
	public void StartEventRaised()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xACF7C4", Offset = "0xACF7C4", VA = "0xACF7C4")]
	public void PrevEventRaised()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xACF7C8", Offset = "0xACF7C8", VA = "0xACF7C8")]
	public void CancelEventRaised()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xACF7CC", Offset = "0xACF7CC", VA = "0xACF7CC")]
	public void CompleteEventRaised()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xACF7D0", Offset = "0xACF7D0", VA = "0xACF7D0")]
	public cFlowParticles()
	{
	}
}
[Token(Token = "0x20000E5")]
public class cIntroPlanarCompass : cPlanarCompass
{
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF820", Offset = "0x8DF820")]
	private sealed class <RunestonesAppearCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cIntroPlanarCompass <>4__this;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0xB6CBFC", Offset = "0xB6CBFC", VA = "0xB6CBFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0xB6CC68", Offset = "0xB6CC68", VA = "0xB6CC68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xB6C330", Offset = "0xB6C330", VA = "0xB6C330")]
		[DebuggerHidden]
		public <RunestonesAppearCoroutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xB6CA38", Offset = "0xB6CA38", VA = "0xB6CA38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xB6CA3C", Offset = "0xB6CA3C", VA = "0xB6CA3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xB6CC04", Offset = "0xB6CC04", VA = "0xB6CC04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF830", Offset = "0x8DF830")]
	private sealed class <FadeIntroPortal>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cIntroPlanarCompass <>4__this;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <portalFillAmount>5__2;

		[Token(Token = "0x1700020E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0xB6C9C4", Offset = "0xB6C9C4", VA = "0xB6C9C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0xB6CA30", Offset = "0xB6CA30", VA = "0xB6CA30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xB6C560", Offset = "0xB6C560", VA = "0xB6C560")]
		[DebuggerHidden]
		public <FadeIntroPortal>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xB6C59C", Offset = "0xB6C59C", VA = "0xB6C59C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xB6C5A0", Offset = "0xB6C5A0", VA = "0xB6C5A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xB6C9CC", Offset = "0xB6C9CC", VA = "0xB6C9CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private UnityEvent onFlowStarted;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private GameObject introContainer;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private soVOSequence introSequence;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private GameObject light;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	protected new SOGameEvent.GameEventDelegate flowReachedDelegate;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private SOGameEvent.GameEventDelegate gameStartedDelegate;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private cIntroRunestones introRunestones;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	private soVOEvent tutorialTransitionVO;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private Cubemap necromancerCubemap;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	private cSoundEffect necromancerTrapSoundEffect;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	private cSoundEffect runeDisappearSoundEffect;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	private cFlowGrabbable flowGrabbable;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Cubemap originalCubemap;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xB6BFFC", Offset = "0xB6BFFC", VA = "0xB6BFFC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xB6C094", Offset = "0xB6C094", VA = "0xB6C094")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xB6C0B8", Offset = "0xB6C0B8", VA = "0xB6C0B8", Slot = "9")]
	protected override void FlowButtonReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xB6C120", Offset = "0xB6C120", VA = "0xB6C120", Slot = "5")]
	public override bool CanGrabFlows()
	{
		return default(bool);
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xB6C128", Offset = "0xB6C128", VA = "0xB6C128", Slot = "8")]
	public override void FlowReached()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xB6C278", Offset = "0xB6C278", VA = "0xB6C278", Slot = "7")]
	public override void FlowingComplete()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xB6C2BC", Offset = "0xB6C2BC", VA = "0xB6C2BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4D5C", Offset = "0x8F4D5C")]
	private IEnumerator RunestonesAppearCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xB6C35C", Offset = "0xB6C35C", VA = "0xB6C35C", Slot = "6")]
	public override void FlowingStart(GameObject thread)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xB6C408", Offset = "0xB6C408", VA = "0xB6C408", Slot = "10")]
	public override void OpenCompass()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xB6C4C0", Offset = "0xB6C4C0", VA = "0xB6C4C0")]
	public void PlayIntroVO()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xB6C4FC", Offset = "0xB6C4FC", VA = "0xB6C4FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xB6C500", Offset = "0xB6C500", VA = "0xB6C500")]
	private void UnregisterDelegates()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xB6C204", Offset = "0xB6C204", VA = "0xB6C204")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4DC0", Offset = "0x8F4DC0")]
	private IEnumerator FadeIntroPortal()
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xB6C58C", Offset = "0xB6C58C", VA = "0xB6C58C")]
	public cIntroPlanarCompass()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xB6C594", Offset = "0xB6C594", VA = "0xB6C594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4E24", Offset = "0x8F4E24")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x20000E6")]
public class cPlanarCompass : MonoBehaviour
{
	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF840", Offset = "0x8DF840")]
	private sealed class <OpenPortalAnim>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cPlanarCompass <>4__this;

		[Token(Token = "0x17000210")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0xAFA9B4", Offset = "0xAFA9B4", VA = "0xAFA9B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0xAFAA20", Offset = "0xAFAA20", VA = "0xAFAA20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xAF9F8C", Offset = "0xAF9F8C", VA = "0xAF9F8C")]
		[DebuggerHidden]
		public <OpenPortalAnim>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xAFA850", Offset = "0xAFA850", VA = "0xAFA850", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xAFA854", Offset = "0xAFA854", VA = "0xAFA854", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xAFA9BC", Offset = "0xAFA9BC", VA = "0xAFA9BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000428")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF850", Offset = "0x8DF850")]
	private sealed class <ClosePortalAnim>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cPlanarCompass <>4__this;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <portalFillAmount>5__2;

		[Token(Token = "0x17000212")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xAFA44C", Offset = "0xAFA44C", VA = "0xAFA44C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xAFA4B8", Offset = "0xAFA4B8", VA = "0xAFA4B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xAFA02C", Offset = "0xAFA02C", VA = "0xAFA02C")]
		[DebuggerHidden]
		public <ClosePortalAnim>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xAFA2E4", Offset = "0xAFA2E4", VA = "0xAFA2E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xAFA2E8", Offset = "0xAFA2E8", VA = "0xAFA2E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xAFA454", Offset = "0xAFA454", VA = "0xAFA454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000429")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF860", Offset = "0x8DF860")]
	private sealed class <FadePortal>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cPlanarCompass <>4__this;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <portalFillAmount>5__2;

		[Token(Token = "0x17000214")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xAFA7DC", Offset = "0xAFA7DC", VA = "0xAFA7DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0xAFA848", Offset = "0xAFA848", VA = "0xAFA848", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xAFA0CC", Offset = "0xAFA0CC", VA = "0xAFA0CC")]
		[DebuggerHidden]
		public <FadePortal>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xAFA4C0", Offset = "0xAFA4C0", VA = "0xAFA4C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xAFA4C4", Offset = "0xAFA4C4", VA = "0xAFA4C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xAFA7E4", Offset = "0xAFA7E4", VA = "0xAFA7E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected SOInputEvent flowReleasedEvent;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected SOInputEvent.InputEventDelegate flowReleasedDelegate;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected SOGameEvent flowReachedEvent;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected SOGameEvent.GameEventDelegate flowReachedDelegate;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected SOGameEvent compassOpenedEvent;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected SOGameEvent compassClosedEvent;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject portalFill;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject screenFadeSphere;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject container;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected GameObject particleContainer;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float particleGradiantVariation;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ParticleSystem.MinMaxGradient baseParticleColor;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected List<cFlowParticles> flowParticles;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private cTearParticles tearParticleScript;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected GameObject activeThread;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected cPortal activeThreadScript;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected float portalFillTime;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5080", Offset = "0x8E5080")]
	private float portalFillCreepAmount;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E50C4", Offset = "0x8E50C4")]
	private float portalCancelCloseSpeed;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5108", Offset = "0x8E5108")]
	private float portalTearSpeed;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float portalStartBuffer;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	protected float portalWashPerFrame;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected float portalFillTimer;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	protected float portalFadeTime;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected float screenFadeTime;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	private float maxFadeOpacity;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool flowReached;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected float portalFadeTimer;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float screenFadeTimer;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected Renderer portalFillRend;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected FadeSphere screenFadeRend;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected FadeToken fadeToken;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Animator animator;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private WaitForSeconds animTimer;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 orbStartPos;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public FlowState flowState;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cPlanarCompass instance;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	public List<GameObject> spellOrbs;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	protected cPortal[] flowPortals;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private soVOSequence firstTimeOpenedSeq;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private SOGameEvent forcedIdleOnEvent;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private sBool planarCompassOpenedSinceLearningShadowhand;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	protected cSoundEffect openCloseSound;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	protected cSoundEffect portalCancel;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	protected cSoundEffect portalEnd;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	protected cSoundEffect portalMid;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	protected cSoundEffect portalStart;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	public SOGameEvent flowCanceledEvent;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	public SOGameEvent flowCompleteEvent;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	public SOGameEvent flowOpening0Event;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	public SOGameEvent flowOpening20Event;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	public SOGameEvent flowOpening40Event;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	public SOGameEvent flowOpening60Event;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	public SOGameEvent flowOpening80Event;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	public SOGameEvent flowOpening100Event;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float lastFlowPercentage;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private double timeCompassOpened;

	[Token(Token = "0x14000003")]
	public event Action closeCompassEvent
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0xAF839C", Offset = "0xAF839C", VA = "0xAF839C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4E5C", Offset = "0x8F4E5C")]
		add
		{
		}
		[Token(Token = "0x6000562")]
		[Address(RVA = "0xAF8444", Offset = "0xAF8444", VA = "0xAF8444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4E6C", Offset = "0x8F4E6C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xAF84EC", Offset = "0xAF84EC", VA = "0xAF84EC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xAF868C", Offset = "0xAF868C", VA = "0xAF868C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xAF86EC", Offset = "0xAF86EC", VA = "0xAF86EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xAF874C", Offset = "0xAF874C", VA = "0xAF874C", Slot = "5")]
	public virtual bool CanGrabFlows()
	{
		return default(bool);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xAF878C", Offset = "0xAF878C", VA = "0xAF878C")]
	public void ValidateAllFlows()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xAF8800", Offset = "0xAF8800", VA = "0xAF8800")]
	public void CheckUnlockedFlows()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xAF8978", Offset = "0xAF8978", VA = "0xAF8978")]
	public void UpdateThreadDistance(float dist)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xAF8AC0", Offset = "0xAF8AC0", VA = "0xAF8AC0")]
	public void RaisePortalOpeningEvents(float dist)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xAF8BD4", Offset = "0xAF8BD4", VA = "0xAF8BD4", Slot = "6")]
	public virtual void FlowingStart(GameObject thread)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xAF9150", Offset = "0xAF9150", VA = "0xAF9150", Slot = "7")]
	public virtual void FlowingComplete()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xAF948C", Offset = "0xAF948C", VA = "0xAF948C")]
	public void FlowingCanceled()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xAF954C", Offset = "0xAF954C", VA = "0xAF954C", Slot = "8")]
	public virtual void FlowReached()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xAF938C", Offset = "0xAF938C", VA = "0xAF938C")]
	private void SetFlowState(FlowState fs)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xAF9698", Offset = "0xAF9698", VA = "0xAF9698")]
	private void Update()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xAF969C", Offset = "0xAF969C", VA = "0xAF969C")]
	private void UpdateFlowState()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xAF9AE4", Offset = "0xAF9AE4", VA = "0xAF9AE4")]
	public void ForceCloseCompass()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xAF9334", Offset = "0xAF9334", VA = "0xAF9334")]
	private void CompassClosed()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xAF9B50", Offset = "0xAF9B50", VA = "0xAF9B50", Slot = "9")]
	protected virtual void FlowButtonReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xAF9CBC", Offset = "0xAF9CBC", VA = "0xAF9CBC", Slot = "10")]
	public virtual void OpenCompass()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xAF9DD0", Offset = "0xAF9DD0", VA = "0xAF9DD0")]
	public void PlayTutorialPortalKeysVO()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xAF9E74", Offset = "0xAF9E74", VA = "0xAF9E74")]
	public void ProgressTutorialIfShadowhandUnlocked()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xAF9F18", Offset = "0xAF9F18", VA = "0xAF9F18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4E7C", Offset = "0x8F4E7C")]
	private IEnumerator OpenPortalAnim()
	{
		return null;
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xAF9FB8", Offset = "0xAF9FB8", VA = "0xAF9FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4EE0", Offset = "0x8F4EE0")]
	private IEnumerator ClosePortalAnim()
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xAFA058", Offset = "0xAFA058", VA = "0xAFA058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4F44", Offset = "0x8F4F44")]
	private IEnumerator FadePortal()
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xAFA0F8", Offset = "0xAFA0F8", VA = "0xAFA0F8")]
	public void NecromancerEndgameVOFinished()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xAFA2AC", Offset = "0xAFA2AC", VA = "0xAFA2AC")]
	public cPlanarCompass()
	{
	}
}
[Token(Token = "0x20000E7")]
public enum FlowState
{
	[Token(Token = "0x40006AC")]
	None,
	[Token(Token = "0x40006AD")]
	Opening,
	[Token(Token = "0x40006AE")]
	Cancelling,
	[Token(Token = "0x40006AF")]
	Closing
}
[Token(Token = "0x20000E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD840", Offset = "0x8DD840")]
public class cPortal : MonoBehaviour
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SOSceneManager _scene;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distanceToFlow;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 startPos;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 grabStartPos;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 prevPos;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private cFlowGrabbable grabbableScript;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool flowing;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool flowingComplete;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MeshRenderer rndr;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private cGrabberRedux currentGrabber;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private cPlanarCompass compass;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject effects;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject spellOrb;

	[Token(Token = "0x1700001E")]
	public SOSceneManager scene
	{
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xAFC8B4", Offset = "0xAFC8B4", VA = "0xAFC8B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public float maxDistance
	{
		[Token(Token = "0x600057E")]
		[Address(RVA = "0xAFC8BC", Offset = "0xAFC8BC", VA = "0xAFC8BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xAFC8C4", Offset = "0xAFC8C4", VA = "0xAFC8C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xAFC9EC", Offset = "0xAFC9EC", VA = "0xAFC9EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xAFCAF8", Offset = "0xAFCAF8", VA = "0xAFCAF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xAFCA14", Offset = "0xAFCA14", VA = "0xAFCA14")]
	private void ToggleEffects(bool setActive)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xAFCB00", Offset = "0xAFCB00", VA = "0xAFCB00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xAFCC18", Offset = "0xAFCC18", VA = "0xAFCC18")]
	public cGrabberRedux CurrentGrabber()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xAF88A4", Offset = "0xAF88A4", VA = "0xAF88A4")]
	public void CheckPortalGrabbable()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xAFA288", Offset = "0xAFA288", VA = "0xAFA288")]
	public void SetPortalGrabbable(bool isGrabbable)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xAFCB10", Offset = "0xAFCB10", VA = "0xAFCB10")]
	private void FlowUpdateDistance()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xAFCDDC", Offset = "0xAFCDDC", VA = "0xAFCDDC")]
	public void FlowingStart(cGrabberRedux grabber)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xAFCE94", Offset = "0xAFCE94", VA = "0xAFCE94")]
	public void FlowingReleased()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xAFCD8C", Offset = "0xAFCD8C", VA = "0xAFCD8C")]
	public void FlowingComplete()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xAFCEC8", Offset = "0xAFCEC8", VA = "0xAFCEC8")]
	public void FlowingCanceled()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xAFCEE0", Offset = "0xAFCEE0", VA = "0xAFCEE0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xAFCC20", Offset = "0xAFCC20", VA = "0xAFCC20")]
	private bool ValidateThread()
	{
		return default(bool);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xAF8958", Offset = "0xAF8958", VA = "0xAF8958")]
	public bool IsFlowUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xAFCF2C", Offset = "0xAFCF2C", VA = "0xAFCF2C")]
	public cPortal()
	{
	}
}
[Token(Token = "0x20000E9")]
public class cPortalFill : MonoBehaviour
{
	[Token(Token = "0x6000590")]
	[Address(RVA = "0xAFCF3C", Offset = "0xAFCF3C", VA = "0xAFCF3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xAFCF40", Offset = "0xAFCF40", VA = "0xAFCF40")]
	public cPortalFill()
	{
	}
}
[Token(Token = "0x20000EA")]
public class cPortalKeyParticles : MonoBehaviour
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject particleContainer;

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xAFCF48", Offset = "0xAFCF48", VA = "0xAFCF48")]
	public void EnableParticles()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xAFCF68", Offset = "0xAFCF68", VA = "0xAFCF68")]
	public void DisableParticles()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xAFCF88", Offset = "0xAFCF88", VA = "0xAFCF88")]
	public cPortalKeyParticles()
	{
	}
}
[Token(Token = "0x20000EB")]
[ExecuteInEditMode]
public class cPortalQuad : MonoBehaviour
{
	[Token(Token = "0x6000595")]
	[Address(RVA = "0xAFCF90", Offset = "0xAFCF90", VA = "0xAFCF90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xAFD040", Offset = "0xAFD040", VA = "0xAFD040")]
	public cPortalQuad()
	{
	}
}
[Token(Token = "0x20000EC")]
public class cTearParticles : MonoBehaviour
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float particleSpeed;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float lifetimeTillDistance;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float growSpeedMultiplier;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float gradientVariation;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cGrabberRedux grabber;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem particleSys;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule particleSysMain;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.ShapeModule particleSysShape;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.TrailModule particleSysTrail;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xB419F0", Offset = "0xB419F0", VA = "0xB419F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xB41A94", Offset = "0xB41A94", VA = "0xB41A94")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xB41D68", Offset = "0xB41D68", VA = "0xB41D68")]
	public void UpdateEmitterSize(float pullDist)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xB41D7C", Offset = "0xB41D7C", VA = "0xB41D7C")]
	public void UpdateParticleColor(Color col)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xB42064", Offset = "0xB42064", VA = "0xB42064")]
	public void StartParticles(cGrabberRedux grabber, Vector3 startPosition)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xB42110", Offset = "0xB42110", VA = "0xB42110")]
	public void StopParticles()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xB42134", Offset = "0xB42134", VA = "0xB42134")]
	public cTearParticles()
	{
	}
}
[Token(Token = "0x20000ED")]
public class cTryFlowOutsideMatWorld : MonoBehaviour
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cFlowGrabbable flowGrabbable;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cPortal flowPortal;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xB42AE0", Offset = "0xB42AE0", VA = "0xB42AE0")]
	public void TryFlowOutsideMatWorld()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xB42C00", Offset = "0xB42C00", VA = "0xB42C00")]
	public cTryFlowOutsideMatWorld()
	{
	}
}
[Token(Token = "0x20000EE")]
public class nullClass
{
	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x15A92C4", Offset = "0x15A92C4", VA = "0x15A92C4")]
	public void PrintStuff(string stuff)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x15A932C", Offset = "0x15A932C", VA = "0x15A932C")]
	public nullClass()
	{
	}
}
[Token(Token = "0x20000EF")]
public class TestingLoadScene : MonoBehaviour
{
	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SOSceneManager> scenesToLoad;

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xA8E10C", Offset = "0xA8E10C", VA = "0xA8E10C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xA8E1B8", Offset = "0xA8E1B8", VA = "0xA8E1B8")]
	public TestingLoadScene()
	{
	}
}
[Token(Token = "0x20000F0")]
public class cGameControlManager : MonoBehaviour
{
	[Token(Token = "0x200042A")]
	private enum Cardinal
	{
		[Token(Token = "0x4001BC9")]
		North,
		[Token(Token = "0x4001BCA")]
		South,
		[Token(Token = "0x4001BCB")]
		East,
		[Token(Token = "0x4001BCC")]
		West
	}

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cSceneLoader sceneLoader;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cInputManager inputManager;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SOInputHandler.Hand rightHand;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private SOInputHandler.Hand leftHand;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SOInputHandler.Hand currentHand;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool gameInputEnabled;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float thumbstickThreshold;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool spellCastingUIVisible;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOInputEvent acceptPressedEvent;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOInputEvent acceptReleasedEvent;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOInputEvent cancelPressedEvent;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOInputEvent cancelReleasedEvent;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOInputEvent optionsPressedEvent;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOInputEvent optionsReleasedEvent;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOInputEvent grabPressedEvent;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SOInputEvent grabReleasedEvent;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SOInputEvent grabReleaseStartEvent;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOInputEvent compassPressedEvent;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SOInputEvent compassReleasedEvent;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOInputEvent flowPressedEvent;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SOInputEvent flowReleasedEvent;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SOInputEvent flowHeldEvent;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SOInputEvent meditatePressedEvent;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SOInputEvent meditateReleasedEvent;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private SOInputEvent spellMenuPressedEvent;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private SOInputEvent spellMenuReleasedEvent;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private SOInputEvent spellPrimePressedEvent;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private SOInputEvent spellPrimeReleasedEvent;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private SOInputEvent spellCastPressedEvent;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private SOInputEvent spellCastReleasedEvent;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private bool isRightHandGrabbing;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	[SerializeField]
	private bool isLeftHandGrabbing;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	[SerializeField]
	private bool leftHandSpellPrimed;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	[SerializeField]
	private bool rightHandSpellPrimed;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private bool leftHandSpellIsCasting;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	[SerializeField]
	private bool rightHandSpellIsCasting;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	[SerializeField]
	private bool leftHandSpellWasCast;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
	[SerializeField]
	private bool rightHandSpellWasCast;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool menuOpen;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	[SerializeField]
	private bool compassOpenLeft;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	[SerializeField]
	private bool compassOpenRight;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
	[SerializeField]
	private bool spellUIOpenLeft;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private bool spellUIOpenRight;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool[] leftJoystickCardinal;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool[] rightJoystickCardinal;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private cGrabberRedux leftGrabber;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private cGrabberRedux rightGrabber;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	public bool isForcedIdleOn;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private Color forcedIdleHandColour;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private SOGameEvent forcedIdleOnEvent;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private SOGameEvent forcedIdleOffEvent;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private SOGameEvent.GameEventDelegate forcedIdleOnDelegate;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private SOGameEvent.GameEventDelegate forcedIdleOffDelegate;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private SOGameEvent lockSpellMenuEvent;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private SOGameEvent unlockSpellMenuEvent;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private SOGameEvent.GameEventDelegate lockSpellMenuDelegate;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private SOGameEvent.GameEventDelegate unlockSpellMenuDelegate;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private SOGameEvent lockPlanarCompassEvent;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private SOGameEvent unlockPlanarCompassEvent;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private SOGameEvent.GameEventDelegate lockPlanarCompassDelegate;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private SOGameEvent.GameEventDelegate unlockPlanarCompassDelegate;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool planarCompassLocked;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool spellMenuLocked;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5648", Offset = "0x8E5648")]
	private float _hapticIntensity;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject leftCanvas;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject rightCanvas;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private float throwReleaseValue;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	[SerializeField]
	private int inputBufferFrameCount;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private int bufferFrame;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private List<(SOInputEvent, SOInputHandler.Hand)> bufferedInputs;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cGameControlManager Instance;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool isPaused;

	[Token(Token = "0x17000020")]
	public float HapticIntensity
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xAD1488", Offset = "0xAD1488", VA = "0xAD1488")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xAD1490", Offset = "0xAD1490", VA = "0xAD1490")]
		set
		{
		}
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xAD1498", Offset = "0xAD1498", VA = "0xAD1498")]
	public bool IsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xAD14A0", Offset = "0xAD14A0", VA = "0xAD14A0")]
	public static void DestroySelf()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xAD1518", Offset = "0xAD1518", VA = "0xAD1518")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xAD15E4", Offset = "0xAD15E4", VA = "0xAD15E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xAD18F0", Offset = "0xAD18F0", VA = "0xAD18F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xAD1DE8", Offset = "0xAD1DE8", VA = "0xAD1DE8")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xAD1E7C", Offset = "0xAD1E7C", VA = "0xAD1E7C")]
	public void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xAD1E84", Offset = "0xAD1E84", VA = "0xAD1E84")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xAD1E90", Offset = "0xAD1E90", VA = "0xAD1E90")]
	public void UnprimeSpells()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xAD1654", Offset = "0xAD1654", VA = "0xAD1654")]
	private void SetUpDelegates()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xAD1E98", Offset = "0xAD1E98", VA = "0xAD1E98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xAD180C", Offset = "0xAD180C", VA = "0xAD180C")]
	private void FindGrabbers()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xAD19A4", Offset = "0xAD19A4", VA = "0xAD19A4")]
	public void HandleInput(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xAD25C4", Offset = "0xAD25C4", VA = "0xAD25C4")]
	private void StopHaptics()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xAD1CF0", Offset = "0xAD1CF0", VA = "0xAD1CF0")]
	private void FlushInputBuffer()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xAD2604", Offset = "0xAD2604", VA = "0xAD2604")]
	private void BufferedRaise(SOInputEvent inputEvent, SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xAD1FA8", Offset = "0xAD1FA8", VA = "0xAD1FA8")]
	private void Accept(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xAD202C", Offset = "0xAD202C", VA = "0xAD202C")]
	private void Cancel(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xAD2548", Offset = "0xAD2548", VA = "0xAD2548")]
	private void PlanarCompass(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xAD20B0", Offset = "0xAD20B0", VA = "0xAD20B0")]
	private void Grab(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xAD21B0", Offset = "0xAD21B0", VA = "0xAD21B0")]
	private void Meditate(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xAD1F2C", Offset = "0xAD1F2C", VA = "0xAD1F2C")]
	private void Options(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xAD26E8", Offset = "0xAD26E8", VA = "0xAD26E8")]
	public cGrabberRedux GetGrabberBySide(SOInputHandler.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xAD22C8", Offset = "0xAD22C8", VA = "0xAD22C8")]
	private void SpellCast(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xAD23EC", Offset = "0xAD23EC", VA = "0xAD23EC")]
	private void SpellPrimed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xAD2800", Offset = "0xAD2800", VA = "0xAD2800")]
	private void SetHandSpellPrimed(SOInputHandler.Hand hand, bool isPrimed)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xAD27B8", Offset = "0xAD27B8", VA = "0xAD27B8")]
	private bool IsHandSpellPrimed(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xAD27E8", Offset = "0xAD27E8", VA = "0xAD27E8")]
	private void SetHandWasSpellCast(SOInputHandler.Hand hand, bool wasCast)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xAD27D0", Offset = "0xAD27D0", VA = "0xAD27D0")]
	private bool WasSpellCastHand(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xAD2818", Offset = "0xAD2818", VA = "0xAD2818")]
	private void SetHandThumbstickTilted(SOInputHandler.Hand hand, Cardinal direction, bool isTilted)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xAD286C", Offset = "0xAD286C", VA = "0xAD286C")]
	private bool IsHandThumbstickTilted(SOInputHandler.Hand hand, Cardinal direction)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xAD28BC", Offset = "0xAD28BC", VA = "0xAD28BC")]
	private void SetCompassOpen(SOInputHandler.Hand hand, bool isOpen)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xAD28D8", Offset = "0xAD28D8", VA = "0xAD28D8")]
	private bool IsCompassOpenOnOtherHand(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xAD28F0", Offset = "0xAD28F0", VA = "0xAD28F0")]
	private void SetSpellUIOpen(SOInputHandler.Hand hand, bool isOpen)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xAD290C", Offset = "0xAD290C", VA = "0xAD290C")]
	private bool IsSpellUIOpen(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xAD2924", Offset = "0xAD2924", VA = "0xAD2924")]
	private bool IsSpellUIOpenOnOtherHand(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xAD293C", Offset = "0xAD293C", VA = "0xAD293C")]
	private void ClosePlanarCompass(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xAD2990", Offset = "0xAD2990", VA = "0xAD2990")]
	public void EnableInput()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xAD299C", Offset = "0xAD299C", VA = "0xAD299C")]
	public void DisableInput()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xAD29A4", Offset = "0xAD29A4", VA = "0xAD29A4")]
	public void SetForcedIdle(bool _isForcedIdleOn)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xAD2AAC", Offset = "0xAD2AAC", VA = "0xAD2AAC")]
	private bool IsAnythingGrabbing()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xAD2AFC", Offset = "0xAD2AFC", VA = "0xAD2AFC")]
	private void SetGrabbing(SOInputHandler.Hand hand, bool isGrabbing)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xAC1C1C", Offset = "0xAC1C1C", VA = "0xAC1C1C")]
	public void ForcedIdleOn()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xAC1C98", Offset = "0xAC1C98", VA = "0xAC1C98")]
	public void ForcedIdleOff()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xAD2A68", Offset = "0xAD2A68", VA = "0xAD2A68")]
	public void CloseAllUI()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xAD2B18", Offset = "0xAD2B18", VA = "0xAD2B18")]
	private void LockSpellMenu()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xAD2B24", Offset = "0xAD2B24", VA = "0xAD2B24")]
	private void UnlockSpellMenu()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xAD2B2C", Offset = "0xAD2B2C", VA = "0xAD2B2C")]
	private void LockPlanarCompass()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xAD2B38", Offset = "0xAD2B38", VA = "0xAD2B38")]
	private void UnlockPlanarCompass()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xAD2B40", Offset = "0xAD2B40", VA = "0xAD2B40")]
	public cGameControlManager()
	{
	}
}
[Token(Token = "0x20000F1")]
public class cEventDebugger : MonoBehaviour
{
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOInputEvent acceptPressedEvent;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOInputEvent acceptReleasedEvent;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOInputEvent cancelPressedEvent;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOInputEvent cancelReleasedEvent;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOInputEvent compassPressedEvent;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOInputEvent compassReleasedEvent;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOInputEvent flowPressedEvent;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOInputEvent flowReleasedEvent;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOInputEvent grabPressedEvent;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOInputEvent grabReleasedEvent;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOInputEvent meditatePressedEvent;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOInputEvent meditateReleasedEvent;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOInputEvent optionsPressedEvent;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOInputEvent optionsReleasedEvent;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOInputEvent spellCastPressedEvent;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SOInputEvent spellCastReleasedEvent;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOInputEvent spellMenuPressedEvent;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SOInputEvent spellMenuReleasedEvent;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SOInputEvent spellPrimePressedEvent;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SOInputEvent spellPrimeReleasedEvent;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SOInputHandler.Hand hand;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private SOInputEvent.InputEventDelegate acceptPressedDelegate;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SOInputEvent.InputEventDelegate acceptReleasedDelegate;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private SOInputEvent.InputEventDelegate cancelPressedDelegate;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SOInputEvent.InputEventDelegate cancelReleasedDelegate;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SOInputEvent.InputEventDelegate compassPressedDelegate;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SOInputEvent.InputEventDelegate compassReleasedDelegate;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SOInputEvent.InputEventDelegate flowPressedDelegate;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private SOInputEvent.InputEventDelegate flowReleasedDelegate;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SOInputEvent.InputEventDelegate grabPressedDelegate;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private SOInputEvent.InputEventDelegate grabReleasedDelegate;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private SOInputEvent.InputEventDelegate meditatePressedDelegate;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private SOInputEvent.InputEventDelegate meditateReleasedDelegate;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private SOInputEvent.InputEventDelegate optionsPressedDelegate;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private SOInputEvent.InputEventDelegate optionsReleasedDelegate;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private SOInputEvent.InputEventDelegate spellCastPressedDelegate;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private SOInputEvent.InputEventDelegate spellCastReleasedDelegate;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private SOInputEvent.InputEventDelegate spellMenuPressedDelegate;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private SOInputEvent.InputEventDelegate spellMenuReleasedDelegate;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private SOInputEvent.InputEventDelegate spellPrimePressedDelegate;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private SOInputEvent.InputEventDelegate spellPrimeReleasedDelegate;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xAC90FC", Offset = "0xAC90FC", VA = "0xAC90FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xAC964C", Offset = "0xAC964C", VA = "0xAC964C")]
	private void AcceptPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xAC96E0", Offset = "0xAC96E0", VA = "0xAC96E0")]
	private void AcceptReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xAC9774", Offset = "0xAC9774", VA = "0xAC9774")]
	private void CancelPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xAC9808", Offset = "0xAC9808", VA = "0xAC9808")]
	private void CancelReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xAC989C", Offset = "0xAC989C", VA = "0xAC989C")]
	private void CompassPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xAC9930", Offset = "0xAC9930", VA = "0xAC9930")]
	private void CompassReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xAC99C4", Offset = "0xAC99C4", VA = "0xAC99C4")]
	private void FlowPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xAC9A58", Offset = "0xAC9A58", VA = "0xAC9A58")]
	private void FlowReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xAC9AEC", Offset = "0xAC9AEC", VA = "0xAC9AEC")]
	private void GrabPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xAC9B80", Offset = "0xAC9B80", VA = "0xAC9B80")]
	private void GrabReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xAC9C14", Offset = "0xAC9C14", VA = "0xAC9C14")]
	private void MeditatePressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xAC9CA8", Offset = "0xAC9CA8", VA = "0xAC9CA8")]
	private void MeditateReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xAC9D3C", Offset = "0xAC9D3C", VA = "0xAC9D3C")]
	private void OptionsPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xAC9DD0", Offset = "0xAC9DD0", VA = "0xAC9DD0")]
	private void OptionsReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xAC9E64", Offset = "0xAC9E64", VA = "0xAC9E64")]
	private void SpellCastPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xAC9EF8", Offset = "0xAC9EF8", VA = "0xAC9EF8")]
	private void SpellCastReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xAC9F8C", Offset = "0xAC9F8C", VA = "0xAC9F8C")]
	private void SpellMenuPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xACA020", Offset = "0xACA020", VA = "0xACA020")]
	private void SpellMenuReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xACA0B4", Offset = "0xACA0B4", VA = "0xACA0B4")]
	private void SpellPrimePressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xACA148", Offset = "0xACA148", VA = "0xACA148")]
	private void SpellPrimeReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xACA1DC", Offset = "0xACA1DC", VA = "0xACA1DC")]
	public cEventDebugger()
	{
	}
}
[Token(Token = "0x20000F2")]
public class cFMODEventListener : MonoBehaviour
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5818", Offset = "0x8E5818")]
	[SerializeField]
	private sGameSequence requiredGameSequence;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5864", Offset = "0x8E5864")]
	[SerializeField]
	private sGameSequence invalidAfterGameSequence;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E58B0", Offset = "0x8E58B0")]
	[SerializeField]
	private sFMODEvent fmodEvent;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E58FC", Offset = "0x8E58FC")]
	[SerializeField]
	private bool singleShot;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool fired;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public UnityEvent response;

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xACA1E4", Offset = "0xACA1E4", VA = "0xACA1E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xACA208", Offset = "0xACA208", VA = "0xACA208")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xACA22C", Offset = "0xACA22C", VA = "0xACA22C")]
	public void OnEventRaised(string fmodEvent)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xACA378", Offset = "0xACA378", VA = "0xACA378")]
	public cFMODEventListener()
	{
	}
}
[Token(Token = "0x20000F3")]
public class cGameEventListener : MonoBehaviour
{
	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5958", Offset = "0x8E5958")]
	[SerializeField]
	private sGameSequence requiredGameSequence;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E59A4", Offset = "0x8E59A4")]
	[SerializeField]
	private sGameSequence invalidAfterGameSequence;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E59F0", Offset = "0x8E59F0")]
	[SerializeField]
	private SOGameEvent gameEvent;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5A3C", Offset = "0x8E5A3C")]
	[SerializeField]
	private bool singleShot;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool fired;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public UnityEvent response;

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xAD2C0C", Offset = "0xAD2C0C", VA = "0xAD2C0C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xAD2C30", Offset = "0xAD2C30", VA = "0xAD2C30", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xAD2C54", Offset = "0xAD2C54", VA = "0xAD2C54", Slot = "6")]
	public virtual void OnEventRaised()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xAD2D54", Offset = "0xAD2D54", VA = "0xAD2D54")]
	public cGameEventListener()
	{
	}
}
[Token(Token = "0x20000F4")]
public class cInputEventListener : MonoBehaviour
{
	[Token(Token = "0x200042B")]
	private enum Hand
	{
		[Token(Token = "0x4001BCE")]
		Left,
		[Token(Token = "0x4001BCF")]
		Right,
		[Token(Token = "0x4001BD0")]
		Either
	}

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5A98", Offset = "0x8E5A98")]
	[SerializeField]
	private sGameSequence requiredGameSequence;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5AE4", Offset = "0x8E5AE4")]
	[SerializeField]
	private sGameSequence invalidAfterGameSequence;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5B30", Offset = "0x8E5B30")]
	[SerializeField]
	private SOInputEvent inputEvent;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5B7C", Offset = "0x8E5B7C")]
	[SerializeField]
	private bool singleShot;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool fired;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Hand hand;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public UnityEvent response;

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xB6B8E0", Offset = "0xB6B8E0", VA = "0xB6B8E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xB6B964", Offset = "0xB6B964", VA = "0xB6B964")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xB6B9E8", Offset = "0xB6B9E8", VA = "0xB6B9E8")]
	public void OnEventRaised(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xB6BB1C", Offset = "0xB6BB1C", VA = "0xB6BB1C")]
	public cInputEventListener()
	{
	}
}
[Token(Token = "0x20000F5")]
public class cTextEventListener : MonoBehaviour
{
	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5BE8", Offset = "0x8E5BE8")]
	[SerializeField]
	private sGameSequence requiredGameSequence;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5C34", Offset = "0x8E5C34")]
	[SerializeField]
	private sGameSequence invalidAfterGameSequence;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5C80", Offset = "0x8E5C80")]
	[SerializeField]
	private sTextEvent textEvent;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5CCC", Offset = "0x8E5CCC")]
	[SerializeField]
	private bool singleShot;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool fired;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string message;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public UnityEvent response;

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xB42148", Offset = "0xB42148", VA = "0xB42148")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xB4216C", Offset = "0xB4216C", VA = "0xB4216C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xB42190", Offset = "0xB42190", VA = "0xB42190")]
	public void OnEventRaised(string message)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xB42294", Offset = "0xB42294", VA = "0xB42294")]
	public cTextEventListener()
	{
	}
}
[Token(Token = "0x20000F6")]
public class cTimedEventListener : MonoBehaviour
{
	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5D38", Offset = "0x8E5D38")]
	[SerializeField]
	private sGameSequence requiredGameSequence;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5D84", Offset = "0x8E5D84")]
	[SerializeField]
	private sGameSequence invalidAfterGameSequence;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5DD0", Offset = "0x8E5DD0")]
	[SerializeField]
	private sTimedEvent timedEvent;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5E1C", Offset = "0x8E5E1C")]
	[SerializeField]
	private bool singleShot;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool fired;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public UnityEvent response;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xB4229C", Offset = "0xB4229C", VA = "0xB4229C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xB422C0", Offset = "0xB422C0", VA = "0xB422C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xB422E4", Offset = "0xB422E4", VA = "0xB422E4")]
	public void OnEventRaised()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xB423E8", Offset = "0xB423E8", VA = "0xB423E8")]
	public cTimedEventListener()
	{
	}
}
[Token(Token = "0x20000F7")]
public class cVOEventListener : MonoBehaviour
{
	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOEvent voEventTriggerEvent;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent triggersOnVOEvent;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xB43CAC", Offset = "0xB43CAC", VA = "0xB43CAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xB43CE8", Offset = "0xB43CE8", VA = "0xB43CE8")]
	public cVOEventListener()
	{
	}
}
[Token(Token = "0x20000F8")]
public class ChangeMaterial : MonoBehaviour
{
	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int index;

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xBDD094", Offset = "0xBDD094", VA = "0xBDD094")]
	private void Start()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xBDD0F0", Offset = "0xBDD0F0", VA = "0xBDD0F0")]
	public void NextMaterial()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xBDD210", Offset = "0xBDD210", VA = "0xBDD210")]
	public void PreviousMaterial()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xBDD128", Offset = "0xBDD128", VA = "0xBDD128")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xBDD24C", Offset = "0xBDD24C", VA = "0xBDD24C")]
	public ChangeMaterial()
	{
	}
}
[Token(Token = "0x20000F9")]
public class ExampleInputHandler : MonoBehaviour
{
	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent nextMaterial;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent previousMaterial;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xBE24B0", Offset = "0xBE24B0", VA = "0xBE24B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xBE2518", Offset = "0xBE2518", VA = "0xBE2518")]
	public ExampleInputHandler()
	{
	}
}
[Token(Token = "0x20000FA")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xC31B7C", Offset = "0xC31B7C", VA = "0xC31B7C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xC31C54", Offset = "0xC31C54", VA = "0xC31C54")]
	public Rotate()
	{
	}
}
[Token(Token = "0x20000FB")]
public class RotateCounterClockwise : MonoBehaviour
{
	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xC31C64", Offset = "0xC31C64", VA = "0xC31C64")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xC31D44", Offset = "0xC31D44", VA = "0xC31D44")]
	public RotateCounterClockwise()
	{
	}
}
[Token(Token = "0x20000FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD8B4", Offset = "0x8DD8B4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD8B4", Offset = "0x8DD8B4")]
public class cBurnable : MonoBehaviour
{
	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF870", Offset = "0x8DF870")]
	private sealed class <BurningAway>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cBurnable <>4__this;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeToBurn;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xA97A5C", Offset = "0xA97A5C", VA = "0xA97A5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0xA97AC8", Offset = "0xA97AC8", VA = "0xA97AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xA97938", Offset = "0xA97938", VA = "0xA97938")]
		[DebuggerHidden]
		public <BurningAway>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xA979A0", Offset = "0xA979A0", VA = "0xA979A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xA979A4", Offset = "0xA979A4", VA = "0xA979A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xA97A64", Offset = "0xA97A64", VA = "0xA97A64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject burningEffect;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystemRenderer rend;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light light;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool burningOnStart;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isBurning;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool useFlameColor;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Color flameColor;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent flowReachedEvent;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate flowReachedDelegate;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UnityEvent OnStartBurn;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent OnEndBurn;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEvent OnBurntAway;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private sBool burntAway;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool burnsAway;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[SerializeField]
	private bool burnsAwayEventOnAwake;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float burnAwayTime;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timeSpentBurning;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private cSoundEffect igniteSFX;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private cSoundEffect extingSFX;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private cSoundEffect burningSFX;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody rb;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private cShadowHandable shadowHandable;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xA971CC", Offset = "0xA971CC", VA = "0xA971CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xA9746C", Offset = "0xA9746C", VA = "0xA9746C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xA97490", Offset = "0xA97490", VA = "0xA97490")]
	public bool GetBurning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xA97498", Offset = "0xA97498", VA = "0xA97498")]
	public void StartBurnOnStart()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xA974FC", Offset = "0xA974FC", VA = "0xA974FC", Slot = "4")]
	public virtual void StartBurn()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xA97618", Offset = "0xA97618", VA = "0xA97618", Slot = "5")]
	public virtual void EndBurnAway()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xA97688", Offset = "0xA97688", VA = "0xA97688", Slot = "6")]
	public virtual void EndBurn()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xA97360", Offset = "0xA97360", VA = "0xA97360")]
	public void SetFlameColor(Color _flameColor)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xA97700", Offset = "0xA97700", VA = "0xA97700")]
	public Color GetFlameColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xA9770C", Offset = "0xA9770C", VA = "0xA9770C", Slot = "7")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xA97800", Offset = "0xA97800", VA = "0xA97800", Slot = "8")]
	protected virtual void NewFlowReached()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xA97840", Offset = "0xA97840", VA = "0xA97840")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xA97594", Offset = "0xA97594", VA = "0xA97594")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4FA8", Offset = "0x8F4FA8")]
	private IEnumerator BurningAway(float timeToBurn)
	{
		return null;
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xA97964", Offset = "0xA97964", VA = "0xA97964")]
	public cBurnable()
	{
	}
}
[Token(Token = "0x20000FD")]
public class cFlame : MonoBehaviour
{
	[Token(Token = "0x600061D")]
	[Address(RVA = "0xACD21C", Offset = "0xACD21C", VA = "0xACD21C")]
	private void Start()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xACD220", Offset = "0xACD220", VA = "0xACD220")]
	private void Update()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xACD224", Offset = "0xACD224", VA = "0xACD224")]
	public cFlame()
	{
	}
}
[Token(Token = "0x20000FE")]
public class cQuantumCandle : cBurnable
{
	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SOGameEvent materialWorldLightingChangedEvent;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private soVOEvent shadowhandedCandleWhenNotLit;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject quantumParticleBurst;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private SOGameEvent quantumCandleNotLitEvent;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private cGlowInDarkWriting writing;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool quantumCandleBurning;

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xB00DFC", Offset = "0xB00DFC", VA = "0xB00DFC", Slot = "4")]
	public override void StartBurn()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xB00E58", Offset = "0xB00E58", VA = "0xB00E58", Slot = "6")]
	public override void EndBurn()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xB00EA0", Offset = "0xB00EA0", VA = "0xB00EA0")]
	public void Shadowhanded()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xB00F5C", Offset = "0xB00F5C", VA = "0xB00F5C", Slot = "8")]
	protected override void NewFlowReached()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xB00FDC", Offset = "0xB00FDC", VA = "0xB00FDC")]
	public cQuantumCandle()
	{
	}
}
[Token(Token = "0x20000FF")]
public class cSimpleBurnable : MonoBehaviour
{
	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent onBurnedEvent;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool burned;

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xB36BF0", Offset = "0xB36BF0", VA = "0xB36BF0")]
	public void OnBurned()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xB36C30", Offset = "0xB36C30", VA = "0xB36C30")]
	public cSimpleBurnable()
	{
	}
}
[Token(Token = "0x2000100")]
public class cSplinter : cBurnable
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SOGameEvent materialWorldLightingChangedEvent;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private sObjectTracker splinterTracker;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private SOGameEvent flowReachedCheckEvent;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate flowReachedCheckDelegate;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Animator splinterAnimator;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private cSoundEffect splinterFresh;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private cSoundEffect splinterDry;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Dried;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int Fresh;

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xB3F148", Offset = "0xB3F148", VA = "0xB3F148")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xB3F1CC", Offset = "0xB3F1CC", VA = "0xB3F1CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xB3F1F0", Offset = "0xB3F1F0", VA = "0xB3F1F0")]
	private void CheckingFlow()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xB3F314", Offset = "0xB3F314", VA = "0xB3F314")]
	private void DryBranch()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xB3F3AC", Offset = "0xB3F3AC", VA = "0xB3F3AC")]
	private void FreshBranch()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xB3F444", Offset = "0xB3F444", VA = "0xB3F444", Slot = "4")]
	public override void StartBurn()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xB3F44C", Offset = "0xB3F44C", VA = "0xB3F44C", Slot = "6")]
	public override void EndBurn()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xB3F454", Offset = "0xB3F454", VA = "0xB3F454")]
	public cSplinter()
	{
	}
}
[Token(Token = "0x2000101")]
public class cWallLantern : cBurnable
{
	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool shadowHandInProximity;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private cShadowHandable nearbyShadowHand;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private cShadowHandable thisShadowHandable;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private SOGameEvent materialWorldLightingChangedEvent;

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xB44AC4", Offset = "0xB44AC4", VA = "0xB44AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xB44B1C", Offset = "0xB44B1C", VA = "0xB44B1C")]
	public bool GetShadowHandNearby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xB44B24", Offset = "0xB44B24", VA = "0xB44B24", Slot = "4")]
	public override void StartBurn()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xB44B58", Offset = "0xB44B58", VA = "0xB44B58", Slot = "6")]
	public override void EndBurn()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xB44B8C", Offset = "0xB44B8C", VA = "0xB44B8C", Slot = "7")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xB44B94", Offset = "0xB44B94", VA = "0xB44B94")]
	public cWallLantern()
	{
	}
}
[Token(Token = "0x2000102")]
public class cAlwaysLookAtTransform : MonoBehaviour
{
	[Token(Token = "0x200042D")]
	public enum RelativeUpDirection
	{
		[Token(Token = "0x4001BD6")]
		Up,
		[Token(Token = "0x4001BD7")]
		Down,
		[Token(Token = "0x4001BD8")]
		Left,
		[Token(Token = "0x4001BD9")]
		Right,
		[Token(Token = "0x4001BDA")]
		Forward,
		[Token(Token = "0x4001BDB")]
		Back
	}

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform transformToLookAt;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 upDirection;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private RelativeUpDirection LocalUpDirection;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool useCustomUp;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform customUpTransform;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isRotationLocking;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xA9156C", Offset = "0xA9156C", VA = "0xA9156C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xA916D8", Offset = "0xA916D8", VA = "0xA916D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xA916E0", Offset = "0xA916E0", VA = "0xA916E0")]
	public void SetRotation(Transform transformToLookAt)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xA91884", Offset = "0xA91884", VA = "0xA91884")]
	public void SetRotationForwardOnly(Transform transformToLookAt)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xA91A04", Offset = "0xA91A04", VA = "0xA91A04")]
	public void SetRotationBackwardOnly(Transform transformToLookAt)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xA91C1C", Offset = "0xA91C1C", VA = "0xA91C1C")]
	public cAlwaysLookAtTransform()
	{
	}
}
[Token(Token = "0x2000103")]
public class cAlwaysLookUp : MonoBehaviour
{
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform transformToLookAt;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xA91C24", Offset = "0xA91C24", VA = "0xA91C24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xA91D84", Offset = "0xA91D84", VA = "0xA91D84")]
	public cAlwaysLookUp()
	{
	}
}
[Token(Token = "0x2000104")]
public class CameraScript : MonoBehaviour
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _mouseAbsolute;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 _smoothMouse;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 clampInDegrees;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool lockCursor;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 sensitivity;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 smoothing;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 targetDirection;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2 targetCharacterDirection;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float movementSpeed;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject characterBody;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xBDC738", Offset = "0xBDC738", VA = "0xBDC738")]
	private void Start()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xBDC8B0", Offset = "0xBDC8B0", VA = "0xBDC8B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xBDCFF4", Offset = "0xBDCFF4", VA = "0xBDCFF4")]
	public CameraScript()
	{
	}
}
[Token(Token = "0x2000105")]
public class cCommunable : MonoBehaviour
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool communeOnce;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sBool communed;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent OnCommuned;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xA99DA0", Offset = "0xA99DA0", VA = "0xA99DA0")]
	public void Commune()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xA99E60", Offset = "0xA99E60", VA = "0xA99E60")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F500C", Offset = "0x8F500C")]
	public void ResetSBool()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xA99E80", Offset = "0xA99E80", VA = "0xA99E80")]
	public cCommunable()
	{
	}
}
[Token(Token = "0x2000106")]
public class cDetectable : MonoBehaviour
{
	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOInputEvent onMeditateEvent;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SOInputEvent.InputEventDelegate onMeditateDelegate;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOInputEvent offMeditateEvent;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SOInputEvent.InputEventDelegate offMeditateDelegate;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isDetected;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onDetected;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent unDetected;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xAC609C", Offset = "0xAC609C", VA = "0xAC609C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xAC619C", Offset = "0xAC619C", VA = "0xAC619C")]
	public void beginDetect(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xAC61D4", Offset = "0xAC61D4", VA = "0xAC61D4")]
	public void stopDetect(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xAC6208", Offset = "0xAC6208", VA = "0xAC6208")]
	public cDetectable()
	{
	}
}
[Token(Token = "0x2000107")]
public class cEdible : MonoBehaviour
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool doNotDisableOnEat;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter currentMesh;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6128", Offset = "0x8E6128")]
	public MeshFilter eatenMesh;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animation[] animationsToPlay;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem[] particlesToPlay;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int bites;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int numberOfBites;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onBite;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onConsumed;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xAC835C", Offset = "0xAC835C", VA = "0xAC835C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xAC8400", Offset = "0xAC8400", VA = "0xAC8400")]
	private void Start()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xAC84CC", Offset = "0xAC84CC", VA = "0xAC84CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xAC86D8", Offset = "0xAC86D8", VA = "0xAC86D8")]
	public cEdible()
	{
	}
}
[Token(Token = "0x2000108")]
public class cFixedGrabbable : MonoBehaviour
{
	[Token(Token = "0x600064C")]
	[Address(RVA = "0xACD054", Offset = "0xACD054", VA = "0xACD054")]
	private void Start()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xACD058", Offset = "0xACD058", VA = "0xACD058")]
	private void Update()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xACD05C", Offset = "0xACD05C", VA = "0xACD05C")]
	public cFixedGrabbable()
	{
	}
}
[Token(Token = "0x2000109")]
public class cFixedGrabbableRedux : cGrabbableRedux
{
	[Token(Token = "0x600064F")]
	[Address(RVA = "0xACD064", Offset = "0xACD064", VA = "0xACD064")]
	public cFixedGrabbableRedux()
	{
	}
}
[Token(Token = "0x200010A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD940", Offset = "0x8DD940")]
public class cFloatable : cSnappable
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool animationPlaying;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	public bool particlePlaying;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8E6160", Offset = "0x8E6160")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6160", Offset = "0x8E6160")]
	public float rotX;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8E61C4", Offset = "0x8E61C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E61C4", Offset = "0x8E61C4")]
	public float rotY;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8E6228", Offset = "0x8E6228")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6228", Offset = "0x8E6228")]
	public float rotZ;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool freezePositionAxis;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool originalKinematic;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool originalGravity;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Collider collider;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Rigidbody rigidbody;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool rotating;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool floatsTo;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	private bool floatsToAndStick;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float floatSpeed;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float snapDistance;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool floatToOriginCheck;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	private bool moveComplete;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xACD2FC", Offset = "0xACD2FC", VA = "0xACD2FC", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xACD3E8", Offset = "0xACD3E8", VA = "0xACD3E8", Slot = "7")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xACD710", Offset = "0xACD710", VA = "0xACD710", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xACE028", Offset = "0xACE028", VA = "0xACE028")]
	public void floatToOriginOn()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xACE034", Offset = "0xACE034", VA = "0xACE034")]
	public void floatToOriginOff()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xACE03C", Offset = "0xACE03C", VA = "0xACE03C")]
	public void gravityOffCheck()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xACE0AC", Offset = "0xACE0AC", VA = "0xACE0AC")]
	public void gravityOnCheck()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xACE100", Offset = "0xACE100", VA = "0xACE100")]
	public void kinematicOnCheck()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xACE120", Offset = "0xACE120", VA = "0xACE120")]
	public void kinematicOffCheck()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xACE140", Offset = "0xACE140", VA = "0xACE140")]
	public void setContraints()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xACE094", Offset = "0xACE094", VA = "0xACE094")]
	public void rotateStart()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xACE018", Offset = "0xACE018", VA = "0xACE018")]
	public void rotateEnd()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xACE16C", Offset = "0xACE16C", VA = "0xACE16C")]
	public void floatObjectToPosition()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xACE360", Offset = "0xACE360", VA = "0xACE360")]
	public void floatObjectToPositionAndStick()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xACE554", Offset = "0xACE554", VA = "0xACE554")]
	public void floatOff()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xACE578", Offset = "0xACE578", VA = "0xACE578")]
	public cFloatable()
	{
	}
}
[Token(Token = "0x200010B")]
public class cFlyTo : MonoBehaviour
{
	[Token(Token = "0x200042E")]
	private enum FlyEffect
	{
		[Token(Token = "0x4001BDD")]
		None,
		[Token(Token = "0x4001BDE")]
		Sin,
		[Token(Token = "0x4001BDF")]
		Curve
	}

	[Token(Token = "0x200042F")]
	private delegate Vector3 EffectDelegate(Vector3 initialPosition);

	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF880", Offset = "0x8DF880")]
	private sealed class <Fly>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cFlyTo <>4__this;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x17000218")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0xAD03DC", Offset = "0xAD03DC", VA = "0xAD03DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xAD0448", Offset = "0xAD0448", VA = "0xAD0448", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xACFE14", Offset = "0xACFE14", VA = "0xACFE14")]
		[DebuggerHidden]
		public <Fly>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xACFEB4", Offset = "0xACFEB4", VA = "0xACFEB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xACFEB8", Offset = "0xACFEB8", VA = "0xACFEB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xAD03E4", Offset = "0xAD03E4", VA = "0xAD03E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EffectDelegate Effect;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8E629C", Offset = "0x8E629C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E629C", Offset = "0x8E629C")]
	private float flightTime;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve speedCurve;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E633C", Offset = "0x8E633C")]
	private FlyEffect flyEffect;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E6388", Offset = "0x8E6388")]
	[SerializeField]
	private float sinAmplitude;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E6430", Offset = "0x8E6430")]
	[SerializeField]
	private float sinSpeed;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E64D8", Offset = "0x8E64D8")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent flightCompleted;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lerpPosition;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 lerpDirection;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 startPosition;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float lerp;

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xACFA08", Offset = "0xACFA08", VA = "0xACFA08")]
	private bool IsValid(float value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xACFA14", Offset = "0xACFA14", VA = "0xACFA14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xACFC18", Offset = "0xACFC18", VA = "0xACFC18")]
	public void FlyTo()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xACFCB8", Offset = "0xACFCB8", VA = "0xACFCB8")]
	private Vector3 NoEffect(Vector3 initialPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xACFCBC", Offset = "0xACFCBC", VA = "0xACFCBC")]
	private Vector3 SinEffect(Vector3 initialPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xACFD9C", Offset = "0xACFD9C", VA = "0xACFD9C")]
	private Vector3 CurveEffect(Vector3 initialPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xACFC44", Offset = "0xACFC44", VA = "0xACFC44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F501C", Offset = "0x8F501C")]
	private IEnumerator Fly()
	{
		return null;
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xACFE40", Offset = "0xACFE40", VA = "0xACFE40")]
	public cFlyTo()
	{
	}
}
[Token(Token = "0x200010C")]
public class cFlyToSnapID : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000431")]
	public enum TypeOfFloat
	{
		[Token(Token = "0x4001BE5")]
		OriginalGravity,
		[Token(Token = "0x4001BE6")]
		OriginalKinematic,
		[Token(Token = "0x4001BE7")]
		Both,
		[Token(Token = "0x4001BE8")]
		StickInPlace
	}

	[Token(Token = "0x2000432")]
	private enum FlyEffect
	{
		[Token(Token = "0x4001BEA")]
		None,
		[Token(Token = "0x4001BEB")]
		Sin,
		[Token(Token = "0x4001BEC")]
		Curve
	}

	[Token(Token = "0x2000433")]
	private delegate Vector3 EffectDelegateFunction(Vector3 initialPosition);

	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF890", Offset = "0x8DF890")]
	private sealed class <FloatToSnap>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cFlyToSnapID <>4__this;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x1700021A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0xAD1354", Offset = "0xAD1354", VA = "0xAD1354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xAD13C0", Offset = "0xAD13C0", VA = "0xAD13C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xAD0C94", Offset = "0xAD0C94", VA = "0xAD0C94")]
		[DebuggerHidden]
		public <FloatToSnap>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xAD0D34", Offset = "0xAD0D34", VA = "0xAD0D34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xAD0D38", Offset = "0xAD0D38", VA = "0xAD0D38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xAD135C", Offset = "0xAD135C", VA = "0xAD135C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6580", Offset = "0x8E6580")]
	public SOSnapID SnapID;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cSceneLoader cSceneLoader;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E65B8", Offset = "0x8E65B8")]
	public SOSceneManager targetScene;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ReadOnly]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform tempTarget;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8E6628", Offset = "0x8E6628")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6628", Offset = "0x8E6628")]
	private float flightTime;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public TypeOfFloat typeOfFloat;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve speedCurve;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E66C8", Offset = "0x8E66C8")]
	private FlyEffect flyEffect;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E6714", Offset = "0x8E6714")]
	[SerializeField]
	private float sinAmplitude;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E67BC", Offset = "0x8E67BC")]
	[SerializeField]
	private float sinSpeed;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E6864", Offset = "0x8E6864")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent floatCompleted;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent onFloatStarted;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 lerpPosition;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 lerpDirection;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 startPosition;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EffectDelegateFunction Effect;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 originalPosition;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Quaternion originalRotation;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool originalKinematic;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	private bool originalGravity;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
	private bool moving;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Collider coll;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Collider matchingSnap;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Rigidbody rb;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private cGrabbableRedux thisGrabbable;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float lerpFloat;

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xAD0510", Offset = "0xAD0510", VA = "0xAD0510")]
	private bool IsValid(float value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xAD051C", Offset = "0xAD051C", VA = "0xAD051C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xAD0680", Offset = "0xAD0680", VA = "0xAD0680")]
	private Vector3 NoEffect(Vector3 initialPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xAD0684", Offset = "0xAD0684", VA = "0xAD0684")]
	private Vector3 SinEffect(Vector3 initialPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xAD0764", Offset = "0xAD0764", VA = "0xAD0764")]
	private Vector3 CurveEffect(Vector3 initialPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xAD07DC", Offset = "0xAD07DC", VA = "0xAD07DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xAD0A24", Offset = "0xAD0A24", VA = "0xAD0A24")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xAD0AB8", Offset = "0xAD0AB8", VA = "0xAD0AB8")]
	public void FloatToBegin()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xAD0C20", Offset = "0xAD0C20", VA = "0xAD0C20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5080", Offset = "0x8F5080")]
	private IEnumerator FloatToSnap()
	{
		return null;
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xAD0CC0", Offset = "0xAD0CC0", VA = "0xAD0CC0")]
	public cFlyToSnapID()
	{
	}
}
[Token(Token = "0x200010D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DD9A4", Offset = "0x8DD9A4")]
public class cGazeTarget : MonoBehaviour
{
	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Collider coll;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E690C", Offset = "0x8E690C")]
	public float maxGazeDuration;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool onlyFireOnce;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool fired;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool untargetedBool;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float gazeDuration;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool onlyDetectOnMeditate;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer meshRendererForParticles;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6974", Offset = "0x8E6974")]
	public UnityEvent gazeDetected;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E69AC", Offset = "0x8E69AC")]
	public UnityEvent gazeUndetected;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E69E4", Offset = "0x8E69E4")]
	public UnityEvent gazeFocused;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6A1C", Offset = "0x8E6A1C")]
	public UnityEvent attentionParticlesStarted;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem attentionParticles;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool PlayAttentionParticlesOnEnable;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	private bool gazeStarted;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool isGazeable;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private cPlanarCompass compass;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xAD420C", Offset = "0xAD420C", VA = "0xAD420C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xAD4280", Offset = "0xAD4280", VA = "0xAD4280")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xAD44B8", Offset = "0xAD44B8", VA = "0xAD44B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xAD45C0", Offset = "0xAD45C0", VA = "0xAD45C0")]
	public bool CheckForPlanarCompassOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xAD46C0", Offset = "0xAD46C0", VA = "0xAD46C0")]
	public void Targeted()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xAD4718", Offset = "0xAD4718", VA = "0xAD4718")]
	public void Untargeted()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xAD4378", Offset = "0xAD4378", VA = "0xAD4378")]
	public void StartAttentionParticles()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xAD4424", Offset = "0xAD4424", VA = "0xAD4424")]
	public void StopAttentionParticles()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xAD4798", Offset = "0xAD4798", VA = "0xAD4798")]
	public cGazeTarget()
	{
	}
}
[Token(Token = "0x200010E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDA08", Offset = "0x8DDA08")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDA08", Offset = "0x8DDA08")]
public class cGrabbableRedux : MonoBehaviour
{
	[Token(Token = "0x2000435")]
	public enum Axis
	{
		[Token(Token = "0x4001BF2")]
		x,
		[Token(Token = "0x4001BF3")]
		y,
		[Token(Token = "0x4001BF4")]
		z,
		[Token(Token = "0x4001BF5")]
		xy,
		[Token(Token = "0x4001BF6")]
		yz,
		[Token(Token = "0x4001BF7")]
		xz,
		[Token(Token = "0x4001BF8")]
		all
	}

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isGrabbable;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool kinematicOnGrab;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool doNotRotate;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool applyVelocityOnRelease;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool applyAngularVelocityOnRelease;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool ogKinematicState;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool ogGravityState;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> recordedVelocities;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> recordedAngularVelocities;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int framesBeforeThrow;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private int framesAfterThrow;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float velocityMultiplier;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float angularVelocityMultiplier;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6B24", Offset = "0x8E6B24")]
	private bool <blockRelease>k__BackingField;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected cGrabberRedux grabber;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent onGrabbed;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent onReleased;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent onGrabAttemptBlocked;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool lockedOnAxes;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float tetherDistance;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Axis lockedAxis;

	[Token(Token = "0x17000021")]
	public bool blockRelease
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0xAD6D2C", Offset = "0xAD6D2C", VA = "0xAD6D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F50E4", Offset = "0x8F50E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600067C")]
		[Address(RVA = "0xAD6D34", Offset = "0xAD6D34", VA = "0xAD6D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F50F4", Offset = "0x8F50F4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public bool isGrabbed
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0xAC2D40", Offset = "0xAC2D40", VA = "0xAC2D40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000023")]
	public cGrabberRedux GetGrabber
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0xAD6DF4", Offset = "0xAD6DF4", VA = "0xAD6DF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xAD6D40", Offset = "0xAD6D40", VA = "0xAD6D40")]
	public void SetLockedOnAxes(bool isLocked)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xAD6D4C", Offset = "0xAD6D4C", VA = "0xAD6D4C")]
	public void SetBlockRelease(bool isReleaseBlocked)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xAD6DEC", Offset = "0xAD6DEC", VA = "0xAD6DEC")]
	public bool GetDoNotRotate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xAC7A60", Offset = "0xAC7A60", VA = "0xAC7A60", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xAD6DFC", Offset = "0xAD6DFC", VA = "0xAD6DFC", Slot = "5")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xAC7B2C", Offset = "0xAC7B2C", VA = "0xAC7B2C", Slot = "6")]
	public virtual void Grabbed(cGrabberRedux grabber)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xAD6E3C", Offset = "0xAD6E3C", VA = "0xAD6E3C", Slot = "7")]
	public virtual void Released(cGrabberRedux grabber)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xAD6E00", Offset = "0xAD6E00", VA = "0xAD6E00")]
	public void UpdateGrabbed()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xAD73E8", Offset = "0xAD73E8", VA = "0xAD73E8")]
	private void RecordControllerVelocity()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xAD74A4", Offset = "0xAD74A4", VA = "0xAD74A4")]
	private void RecordControllerAngularVelocity()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xAD6F30", Offset = "0xAD6F30", VA = "0xAD6F30")]
	private Vector3 GetAverageVelocities()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xAD7288", Offset = "0xAD7288", VA = "0xAD7288")]
	private Vector3 GetAverageVelocitiesByAxis(Axis axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xAD70E8", Offset = "0xAD70E8", VA = "0xAD70E8")]
	private Vector3 GetAverageAngularVelocities()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xAD7338", Offset = "0xAD7338", VA = "0xAD7338")]
	private Vector3 GetAverageAngularVelocitiesByAxis(Axis axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xAD7560", Offset = "0xAD7560", VA = "0xAD7560")]
	public void setGrabbable(bool state)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xAD756C", Offset = "0xAD756C", VA = "0xAD756C", Slot = "8")]
	public virtual bool grabbableStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xAC751C", Offset = "0xAC751C", VA = "0xAC751C")]
	public void ReleaseMe()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xAD7574", Offset = "0xAD7574", VA = "0xAD7574")]
	public void SetKinematic(bool _isKinematic)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xAD7594", Offset = "0xAD7594", VA = "0xAD7594")]
	public void SetOGGravity(bool useGravity)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xAD75A0", Offset = "0xAD75A0", VA = "0xAD75A0")]
	public void SetOGKinematic(bool isKinematic)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xAC7BCC", Offset = "0xAC7BCC", VA = "0xAC7BCC")]
	public cGrabbableRedux()
	{
	}
}
[Token(Token = "0x200010F")]
public class cGrabbableRW : MonoBehaviour
{
	[Token(Token = "0x6000694")]
	[Address(RVA = "0xAD6D14", Offset = "0xAD6D14", VA = "0xAD6D14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xAD6D18", Offset = "0xAD6D18", VA = "0xAD6D18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xAD6D1C", Offset = "0xAD6D1C", VA = "0xAD6D1C")]
	public void OnGrabbed()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xAD6D20", Offset = "0xAD6D20", VA = "0xAD6D20")]
	public void OnReleased()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xAD6D24", Offset = "0xAD6D24", VA = "0xAD6D24")]
	public cGrabbableRW()
	{
	}
}
[Token(Token = "0x2000110")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDA94", Offset = "0x8DDA94")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDA94", Offset = "0x8DDA94")]
public class cGrabberRedux : MonoBehaviour
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOInputEvent grabPressedEvent;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SOInputEvent.InputEventDelegate grabPressedDelegate;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOInputEvent grabStartReleaseEvent;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SOInputEvent.InputEventDelegate grabStartReleaseDelegate;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOInputEvent onGrabbedEvent;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOInputEvent onReleasedEvent;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onGrabbed;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onReleased;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private cGrabberRedux otherHand;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public SOInputHandler.Hand side;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject leftHandVisual;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject rightHandVisual;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool disappearOnGrab;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody rb;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform gripTransform;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform handLocation;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[ReadOnly]
	public cGrabbableRedux grabbedObject;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private cGrabbableRedux prospect;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private cGrabbableRedux failedProspect;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private cFixedGrabbableRedux fixedGrabbedObject;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody grabbedRigidbody;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool grabbedOriginalKinematicState;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float previousDistance;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float distance;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private List<cGrabbableRedux> potentialGrabbables;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool doNotRotate;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool lockedOnOneAxis;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float tetherDistance;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[EventRef]
	[SerializeField]
	private string grabSoundEvent;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private EventInstance grabSoundInstance;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private LayerMask cachedLayer;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private LayerMask handsLayer;

	[Token(Token = "0x17000024")]
	public bool isLeft
	{
		[Token(Token = "0x6000699")]
		[Address(RVA = "0xB65C74", Offset = "0xB65C74", VA = "0xB65C74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000025")]
	public bool isRight
	{
		[Token(Token = "0x600069A")]
		[Address(RVA = "0xB65C84", Offset = "0xB65C84", VA = "0xB65C84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000026")]
	public bool isGrabbing
	{
		[Token(Token = "0x600069B")]
		[Address(RVA = "0xB65C94", Offset = "0xB65C94", VA = "0xB65C94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000027")]
	public cGrabbableRedux itemGrabbed
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0xB65D04", Offset = "0xB65D04", VA = "0xB65D04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xB65D0C", Offset = "0xB65D0C", VA = "0xB65D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xB65E70", Offset = "0xB65E70", VA = "0xB65E70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xB65EBC", Offset = "0xB65EBC", VA = "0xB65EBC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xB660A0", Offset = "0xB660A0", VA = "0xB660A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xB661E8", Offset = "0xB661E8", VA = "0xB661E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xB66334", Offset = "0xB66334", VA = "0xB66334")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xB66424", Offset = "0xB66424", VA = "0xB66424")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xB66514", Offset = "0xB66514", VA = "0xB66514")]
	private void Grab(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xB66B48", Offset = "0xB66B48", VA = "0xB66B48")]
	public void Release(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xB65EC0", Offset = "0xB65EC0", VA = "0xB65EC0")]
	private void UpdateGrabbed()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xB66F90", Offset = "0xB66F90", VA = "0xB66F90")]
	private Vector3 UpdateGrabbedBasedOnLockedAxis()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xB66D60", Offset = "0xB66D60", VA = "0xB66D60")]
	private Vector3 UpdateVelocityBasedOnLockedAxis()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xB669D4", Offset = "0xB669D4", VA = "0xB669D4")]
	private void ShowHand(SOInputHandler.Hand hand, bool isVisible)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xB66A08", Offset = "0xB66A08", VA = "0xB66A08")]
	private void PlayGrabSound()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xB67198", Offset = "0xB67198", VA = "0xB67198")]
	public cGrabberRedux()
	{
	}
}
[Token(Token = "0x2000111")]
public class cGrabberRW : MonoBehaviour
{
	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<cGrabbableRW> grabTargets;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOInputHandler.Hand hand;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xB65BE4", Offset = "0xB65BE4", VA = "0xB65BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xB65BE8", Offset = "0xB65BE8", VA = "0xB65BE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xB65BEC", Offset = "0xB65BEC", VA = "0xB65BEC")]
	public void Grab()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xB65BF0", Offset = "0xB65BF0", VA = "0xB65BF0")]
	public void Release()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xB65BF4", Offset = "0xB65BF4", VA = "0xB65BF4")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xB65BF8", Offset = "0xB65BF8", VA = "0xB65BF8")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xB65BFC", Offset = "0xB65BFC", VA = "0xB65BFC")]
	public void PlayHaptics()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xB65C00", Offset = "0xB65C00", VA = "0xB65C00")]
	public void EndHaptics()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xB65C04", Offset = "0xB65C04", VA = "0xB65C04")]
	public cGrabberRW()
	{
	}
}
[Token(Token = "0x2000112")]
public class cHaptics : MonoBehaviour
{
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF8A0", Offset = "0x8DF8A0")]
	private sealed class <Vibrate>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cHaptics <>4__this;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frequency;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float amplitude;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SOInputHandler.Hand hand;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float duration;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__2;

		[Token(Token = "0x1700021C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xB68B78", Offset = "0xB68B78", VA = "0xB68B78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0xB68BE4", Offset = "0xB68BE4", VA = "0xB68BE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xB689CC", Offset = "0xB689CC", VA = "0xB689CC")]
		[DebuggerHidden]
		public <Vibrate>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xB68A34", Offset = "0xB68A34", VA = "0xB68A34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xB68A38", Offset = "0xB68A38", VA = "0xB68A38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xB68B80", Offset = "0xB68B80", VA = "0xB68B80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000437")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF8B0", Offset = "0x8DF8B0")]
	private sealed class <Vibrate>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cHaptics <>4__this;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frequency;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float amplitude;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x1700021E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0xB68DB0", Offset = "0xB68DB0", VA = "0xB68DB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0xB68E1C", Offset = "0xB68E1C", VA = "0xB68E1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xB689F8", Offset = "0xB689F8", VA = "0xB689F8")]
		[DebuggerHidden]
		public <Vibrate>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xB68BEC", Offset = "0xB68BEC", VA = "0xB68BEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xB68BF0", Offset = "0xB68BF0", VA = "0xB68BF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xB68DB8", Offset = "0xB68DB8", VA = "0xB68DB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6C2C", Offset = "0x8E6C2C")]
	public float durationOfHaptics;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool customHaptics;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6C64", Offset = "0x8E6C64")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E6C64", Offset = "0x8E6C64")]
	public float customFrequency;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6CC8", Offset = "0x8E6CC8")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E6CC8", Offset = "0x8E6CC8")]
	public float customAmplitude;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cInputManager inputManager;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cGameControlManager gameControlManager;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SOInputHandler.Hand handReference;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private cGrabbableRedux grabbableScript;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private cShadowHandable shadowHandableScript;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6D2C", Offset = "0x8E6D2C")]
	[SerializeField]
	private bool noHandScripts;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float hapticIntensity;

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xB68028", Offset = "0xB68028", VA = "0xB68028")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xB681CC", Offset = "0xB681CC", VA = "0xB681CC")]
	private SOInputHandler.Hand GetHand()
	{
		return default(SOInputHandler.Hand);
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xB6833C", Offset = "0xB6833C", VA = "0xB6833C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5104", Offset = "0x8F5104")]
	public void TestVibrate()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xB6854C", Offset = "0xB6854C", VA = "0xB6854C")]
	public void StrongPulse()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xB6868C", Offset = "0xB6868C", VA = "0xB6868C")]
	public void Pulse()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xB6871C", Offset = "0xB6871C", VA = "0xB6871C")]
	public void Buzz()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xB687AC", Offset = "0xB687AC", VA = "0xB687AC")]
	public void SlightBuzz()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xB6883C", Offset = "0xB6883C", VA = "0xB6883C")]
	public void QuickBuzz()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xB688CC", Offset = "0xB688CC", VA = "0xB688CC")]
	public void MaxBuzz()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xB68390", Offset = "0xB68390", VA = "0xB68390")]
	public void CustomHaptics()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xB6895C", Offset = "0xB6895C", VA = "0xB6895C")]
	public void StopHaptics()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xB685E4", Offset = "0xB685E4", VA = "0xB685E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5114", Offset = "0x8F5114")]
	private IEnumerator Vibrate(float frequency, float amplitude, float duration, SOInputHandler.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xB684B4", Offset = "0xB684B4", VA = "0xB684B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5178", Offset = "0x8F5178")]
	private IEnumerator Vibrate(float frequency, float amplitude, float duration)
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xB68A24", Offset = "0xB68A24", VA = "0xB68A24")]
	public cHaptics()
	{
	}
}
[Token(Token = "0x2000113")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDB20", Offset = "0x8DDB20")]
public class cHorizontalLockPoints : MonoBehaviour
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cShadowHandable shadowHandable;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isShadowHandable;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform lockPointFront;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Transform lockPointBack;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float lockDistance;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float refreshDistance;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected bool lockedBack;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[SerializeField]
	protected bool lockedFront;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected UnityEvent onLockedBack;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected UnityEvent onLockedFront;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[EventRef]
	[SerializeField]
	private string polisherLockSound;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EventInstance polisherLockFMODInstance;

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xB69194", Offset = "0xB69194", VA = "0xB69194")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xB6925C", Offset = "0xB6925C", VA = "0xB6925C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xB692D8", Offset = "0xB692D8", VA = "0xB692D8", Slot = "4")]
	protected virtual void HandleLockingLogic(bool shadowHand)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xB69A48", Offset = "0xB69A48", VA = "0xB69A48", Slot = "5")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xB69758", Offset = "0xB69758", VA = "0xB69758")]
	protected void ResetPositionFront()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xB693E0", Offset = "0xB693E0", VA = "0xB693E0")]
	protected void ResetPositionBack()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xB6984C", Offset = "0xB6984C", VA = "0xB6984C")]
	protected bool CheckLockPositionFront()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xB699E0", Offset = "0xB699E0", VA = "0xB699E0")]
	protected bool CheckLockPositionBack()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xB694D4", Offset = "0xB694D4", VA = "0xB694D4")]
	protected void CheckRefreshPosition(Transform lockPoint)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xB698B4", Offset = "0xB698B4", VA = "0xB698B4")]
	private void ShadowHandRelease()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xB698E4", Offset = "0xB698E4", VA = "0xB698E4")]
	private void GrabRelease()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xB69A64", Offset = "0xB69A64", VA = "0xB69A64", Slot = "6")]
	protected virtual void LockGrabbable(Transform lockTransform)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xB69910", Offset = "0xB69910", VA = "0xB69910")]
	protected void PlayLockAudio()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xB69B3C", Offset = "0xB69B3C", VA = "0xB69B3C")]
	public cHorizontalLockPoints()
	{
	}
}
[Token(Token = "0x2000114")]
public class cInputManager : MonoBehaviour
{
	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public SOInputHandler inputHandler;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static cInputManager _instance;

	[Token(Token = "0x17000028")]
	public static cInputManager Instance
	{
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xB63190", Offset = "0xB63190", VA = "0xB63190")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xB6BB24", Offset = "0xB6BB24", VA = "0xB6BB24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xB6BC38", Offset = "0xB6BC38", VA = "0xB6BC38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xB63A68", Offset = "0xB63A68", VA = "0xB63A68")]
	public Vector3 GetDevicePosition(SOInputHandler.Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xB63A88", Offset = "0xB63A88", VA = "0xB63A88")]
	public Quaternion GetDeviceRotation(SOInputHandler.Hand hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xB67178", Offset = "0xB67178", VA = "0xB67178")]
	public Vector3 GetDeviceVelocity(SOInputHandler.Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xB6BC88", Offset = "0xB6BC88", VA = "0xB6BC88")]
	public Vector3 GetDeviceAngularVelocity(SOInputHandler.Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xB6BCA8", Offset = "0xB6BCA8", VA = "0xB6BCA8")]
	public bool GetAnyButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xB6BCC8", Offset = "0xB6BCC8", VA = "0xB6BCC8")]
	public bool GetAnyButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xB63B9C", Offset = "0xB63B9C", VA = "0xB63B9C")]
	public bool GetPrimaryTrigger(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xB6BCE8", Offset = "0xB6BCE8", VA = "0xB6BCE8")]
	public bool GetPrimaryTriggerDown(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xB6BD08", Offset = "0xB6BD08", VA = "0xB6BD08")]
	public bool GetPrimaryTriggerUp(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xB63ACC", Offset = "0xB63ACC", VA = "0xB63ACC")]
	public float GetPrimaryTriggerValue(SOInputHandler.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xB6BD28", Offset = "0xB6BD28", VA = "0xB6BD28")]
	public bool GetPrimaryTriggerTouch(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xB63B78", Offset = "0xB63B78", VA = "0xB63B78")]
	public bool GetSecondaryTrigger(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xB6BD4C", Offset = "0xB6BD4C", VA = "0xB6BD4C")]
	public bool GetSecondaryTriggerDown(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xB6BD70", Offset = "0xB6BD70", VA = "0xB6BD70")]
	public bool GetSecondaryTriggerUp(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xB63AA8", Offset = "0xB63AA8", VA = "0xB63AA8")]
	public float GetSecondaryTriggerFloat(SOInputHandler.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xB6BD94", Offset = "0xB6BD94", VA = "0xB6BD94")]
	public bool GetSecondaryTriggerTouch(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xB6BDB8", Offset = "0xB6BDB8", VA = "0xB6BDB8")]
	public bool GetPrimaryButton(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xB6BDDC", Offset = "0xB6BDDC", VA = "0xB6BDDC")]
	public bool GetPrimaryButtonDown(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xB6BE00", Offset = "0xB6BE00", VA = "0xB6BE00")]
	public bool GetPrimaryButtonUp(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xB6BE24", Offset = "0xB6BE24", VA = "0xB6BE24")]
	public bool GetPrimaryButtonTouch(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xB6BE48", Offset = "0xB6BE48", VA = "0xB6BE48")]
	public bool GetSecondaryButton(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xB6BE6C", Offset = "0xB6BE6C", VA = "0xB6BE6C")]
	public bool GetSecondaryButtonDown(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xB6BE90", Offset = "0xB6BE90", VA = "0xB6BE90")]
	public bool GetSecondaryButtonUp(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xB6BEB4", Offset = "0xB6BEB4", VA = "0xB6BEB4")]
	public bool GetSecondaryButtonTouch(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xB6BED8", Offset = "0xB6BED8", VA = "0xB6BED8")]
	public float GetThumbstickXAxis(SOInputHandler.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xB6BEFC", Offset = "0xB6BEFC", VA = "0xB6BEFC")]
	public float GetThumbstickYAxis(SOInputHandler.Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xB650D0", Offset = "0xB650D0", VA = "0xB650D0")]
	public Vector2 GetThumbstickAxis(SOInputHandler.Hand hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xB64A58", Offset = "0xB64A58", VA = "0xB64A58")]
	public bool GetThumbstickButton(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xB6BF20", Offset = "0xB6BF20", VA = "0xB6BF20")]
	public bool GetThumbstickButtonDown(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xB6BF44", Offset = "0xB6BF44", VA = "0xB6BF44")]
	public bool GetThumbstickButtonUp(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xB6BF68", Offset = "0xB6BF68", VA = "0xB6BF68")]
	public bool GetThumbstickTouch(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xB6BF8C", Offset = "0xB6BF8C", VA = "0xB6BF8C")]
	public bool GetMenuButton(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xB6BFB0", Offset = "0xB6BFB0", VA = "0xB6BFB0")]
	public bool GetMenuButtonDown(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xB6B40C", Offset = "0xB6B40C", VA = "0xB6B40C")]
	public bool GetMenuButtonUp(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xB65438", Offset = "0xB65438", VA = "0xB65438")]
	public bool BeginHaptics(float freq, float amp, SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xB6549C", Offset = "0xB6549C", VA = "0xB6549C")]
	public bool EndHaptics(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xB6BFD4", Offset = "0xB6BFD4", VA = "0xB6BFD4")]
	public cInputManager()
	{
	}
}
[Token(Token = "0x2000115")]
public class cInteractable : MonoBehaviour
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8E6E40", Offset = "0x8E6E40")]
	[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x8E6E40", Offset = "0x8E6E40")]
	public bool commune;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool burn;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool illusory;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool edible;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SOSceneManager originScene;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xB6BFDC", Offset = "0xB6BFDC", VA = "0xB6BFDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xB6BFE0", Offset = "0xB6BFE0", VA = "0xB6BFE0")]
	public void Commune()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xB6BFE4", Offset = "0xB6BFE4", VA = "0xB6BFE4")]
	public void Burn()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xB6BFE8", Offset = "0xB6BFE8", VA = "0xB6BFE8")]
	public void Illusory()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xB6BFEC", Offset = "0xB6BFEC", VA = "0xB6BFEC")]
	public void Edible()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xB6BFF0", Offset = "0xB6BFF0", VA = "0xB6BFF0")]
	public void Transformable()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xB6BFF4", Offset = "0xB6BFF4", VA = "0xB6BFF4")]
	public cInteractable()
	{
	}
}
[Token(Token = "0x2000116")]
public class cOrphanItems : MonoBehaviour
{
	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF8C0", Offset = "0x8DF8C0")]
	private sealed class <movingOrphan>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cOrphanItems <>4__this;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 posToMove;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <step>5__2;

		[Token(Token = "0x17000220")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0xB78820", Offset = "0xB78820", VA = "0xB78820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0xB7888C", Offset = "0xB7888C", VA = "0xB7888C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xB783E4", Offset = "0xB783E4", VA = "0xB783E4")]
		[DebuggerHidden]
		public <movingOrphan>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xB78604", Offset = "0xB78604", VA = "0xB78604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xB78608", Offset = "0xB78608", VA = "0xB78608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xB78828", Offset = "0xB78828", VA = "0xB78828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	[SerializeField]
	private GameObject volumeLocation;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider coll;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 randomOffset;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private cPersistent persistentScript;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool orphanedBefore;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 originalPosition;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion originalRotation;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6EE8", Offset = "0x8E6EE8")]
	public bool staysInFlow;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6F20", Offset = "0x8E6F20")]
	private bool SpawnAtCollider;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6F6C", Offset = "0x8E6F6C")]
	private bool KinematicOnRespawn;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6FB8", Offset = "0x8E6FB8")]
	public bool orphanable;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6FF0", Offset = "0x8E6FF0")]
	public float floatSpeed;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E7028", Offset = "0x8E7028")]
	public ParticleSystem poofParticle;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E7060", Offset = "0x8E7060")]
	public MeshRenderer meshToDisappear;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E7098", Offset = "0x8E7098")]
	public SOSceneManager originalFlow;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E70D0", Offset = "0x8E70D0")]
	[SerializeField]
	private SOGameEvent recallOrphanEvent;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SOGameEvent.GameEventDelegate recallOrphanDelegate;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float delayUntilRespawn;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float timer;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float frameTimerDelay;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float frameTimer;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool frameTimeReset;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool blocked;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 underworldPlatform;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private UnityEvent onItemResetInHomeFlow;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private UnityEvent onItemResetInForeignFlow;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float MAX_DISTANCE;

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xB76EC0", Offset = "0xB76EC0", VA = "0xB76EC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xB77010", Offset = "0xB77010", VA = "0xB77010")]
	private void Start()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xB77180", Offset = "0xB77180", VA = "0xB77180")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xB77244", Offset = "0xB77244", VA = "0xB77244")]
	public void SetPersistentScript(cPersistent persistent)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xB7724C", Offset = "0xB7724C", VA = "0xB7724C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xB77DE8", Offset = "0xB77DE8", VA = "0xB77DE8")]
	private void SceneChangeCheck(SOSceneManager previousScene)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xB775F4", Offset = "0xB775F4", VA = "0xB775F4")]
	public void MoveOrphan()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xB783D8", Offset = "0xB783D8", VA = "0xB783D8")]
	public void setOrphanStatus(bool orphanableStatus)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xB77F90", Offset = "0xB77F90", VA = "0xB77F90")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F51DC", Offset = "0x8F51DC")]
	private void TeleportOrphan(Vector3 offset)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xB78340", Offset = "0xB78340", VA = "0xB78340")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F51EC", Offset = "0x8F51EC")]
	private IEnumerator movingOrphan(Vector3 posToMove)
	{
		return null;
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xB78410", Offset = "0xB78410", VA = "0xB78410")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5250", Offset = "0x8F5250")]
	public void RayCastCheck()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xB78564", Offset = "0xB78564", VA = "0xB78564")]
	public cOrphanItems()
	{
	}
}
[Token(Token = "0x2000117")]
public class cResetPosition : MonoBehaviour
{
	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPos;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startRot;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform transformToResetTo;

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xB04E40", Offset = "0xB04E40", VA = "0xB04E40")]
	private void Start()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xB04E9C", Offset = "0xB04E9C", VA = "0xB04E9C")]
	public void ResetToStartPosition()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xB04EF4", Offset = "0xB04EF4", VA = "0xB04EF4")]
	public void ResetToTransform()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xB04F64", Offset = "0xB04F64", VA = "0xB04F64")]
	public void ResetToTransformWithRotation()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xB04FE8", Offset = "0xB04FE8", VA = "0xB04FE8")]
	public void ResetToTransformWithNoRotation()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xB05038", Offset = "0xB05038", VA = "0xB05038")]
	public cResetPosition()
	{
	}
}
[Token(Token = "0x2000118")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDB84", Offset = "0x8DDB84")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDB84", Offset = "0x8DDB84")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDB84", Offset = "0x8DDB84")]
public class cSnappable : MonoBehaviour
{
	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8E715C", Offset = "0x8E715C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E715C", Offset = "0x8E715C")]
	public SOSnapID SnapID;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E71BC", Offset = "0x8E71BC")]
	public cSnapPoint snapPoint;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cGrabbableRedux grabbableScript;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cShadowHandable shadowHandableScript;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Collider otherObject;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator[] animationsToPlay;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem[] particlesToPlay;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent withinRadius;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent itemSnapped;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent itemUnsnapped;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool snapToOrigin;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E7228", Offset = "0x8E7228")]
	public float snapTether;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool isHaptic;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E7260", Offset = "0x8E7260")]
	[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x8E7260", Offset = "0x8E7260")]
	[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8E7260", Offset = "0x8E7260")]
	public float snapRadius;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector3 originalPosition;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected Quaternion originalRotation;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Transform currentTransform;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool alternateTransformSnap;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform alternateTransformToSnap;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[ReadOnly]
	[ShowInInspector]
	public Transform nearestTransform;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Transform tempTransform;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Rigidbody rb;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool _isSnappable;

	[Token(Token = "0x17000029")]
	public bool isSnappable
	{
		[Token(Token = "0x600071A")]
		[Address(RVA = "0xB38A9C", Offset = "0xB38A9C", VA = "0xB38A9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600071B")]
		[Address(RVA = "0xB38AA4", Offset = "0xB38AA4", VA = "0xB38AA4")]
		set
		{
		}
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xB38188", Offset = "0xB38188", VA = "0xB38188", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xB38260", Offset = "0xB38260", VA = "0xB38260", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xB382F0", Offset = "0xB382F0", VA = "0xB382F0")]
	private Color GetButtonColorID()
	{
		return default(Color);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xB38378", Offset = "0xB38378", VA = "0xB38378", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xB3857C", Offset = "0xB3857C", VA = "0xB3857C")]
	public bool isGrabbedCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xB38598", Offset = "0xB38598", VA = "0xB38598", Slot = "7")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xB38944", Offset = "0xB38944", VA = "0xB38944", Slot = "8")]
	protected virtual void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xB38A98", Offset = "0xB38A98", VA = "0xB38A98")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xB38AB0", Offset = "0xB38AB0", VA = "0xB38AB0")]
	public void snapObjectToPosition()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xB38E90", Offset = "0xB38E90", VA = "0xB38E90")]
	public void velocityOff()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xB38F28", Offset = "0xB38F28", VA = "0xB38F28")]
	public void fixObjectInPlace()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xB38F48", Offset = "0xB38F48", VA = "0xB38F48")]
	public void unfixObjectInPlace()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xB38F6C", Offset = "0xB38F6C", VA = "0xB38F6C")]
	public cSnappable()
	{
	}
}
[Token(Token = "0x2000119")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDC38", Offset = "0x8DDC38")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDC38", Offset = "0x8DDC38")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDC38", Offset = "0x8DDC38")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDC38", Offset = "0x8DDC38")]
public class cSnappableGears : MonoBehaviour
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8E732C", Offset = "0x8E732C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E732C", Offset = "0x8E732C")]
	public SOSnapID snapID;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SOSnapID otherSnapID;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public sBool gearSnappedBool;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cGearRotate rotateScript;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ReadOnly]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E739C", Offset = "0x8E739C")]
	public cSnapPointGearWall snapPoint;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private cGrabbableRedux grabbableScript;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public cShadowHandable shadowHandableScript;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Collider otherObject;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent withinRadius;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent itemSnapped;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent itemUnsnapped;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent correctGearPlacement;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E7408", Offset = "0x8E7408")]
	public float snapTether;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E7440", Offset = "0x8E7440")]
	[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x8E7440", Offset = "0x8E7440")]
	[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8E7440", Offset = "0x8E7440")]
	public float snapRadius;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E74D4", Offset = "0x8E74D4")]
	public bool alternateTransformSnap;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform alternateTransformToSnap;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ReadOnly]
	[ShowInInspector]
	protected Transform nearestTransform;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Transform tempTransform;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Rigidbody rb;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[ReadOnly]
	[SerializeField]
	public bool rightSpot;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SOGameEvent checkGearsEvent;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[EventRef]
	[SerializeField]
	private string playGearSnapFMODEvent;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EventInstance playGearSnapFMODInstance;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	public GearWallManager.WhichGear thisGear;

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xB39028", Offset = "0xB39028", VA = "0xB39028")]
	private void Start()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xB390D8", Offset = "0xB390D8", VA = "0xB390D8")]
	private Color GetButtonColorID()
	{
		return default(Color);
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xB39160", Offset = "0xB39160", VA = "0xB39160")]
	private void Update()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xB3940C", Offset = "0xB3940C", VA = "0xB3940C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xB39840", Offset = "0xB39840", VA = "0xB39840")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xB39ADC", Offset = "0xB39ADC", VA = "0xB39ADC")]
	public void SnapObjectToPosition()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xB3A0F8", Offset = "0xB3A0F8", VA = "0xB3A0F8")]
	public void VelocityOff()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xB3A190", Offset = "0xB3A190", VA = "0xB3A190")]
	public void FixObjectInPlace()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xB3A1C0", Offset = "0xB3A1C0", VA = "0xB3A1C0")]
	public void UnfixObjectInPlace()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xB3A028", Offset = "0xB3A028", VA = "0xB3A028")]
	private void PlayGearSnapAudio()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xB3A1F4", Offset = "0xB3A1F4", VA = "0xB3A1F4")]
	public cSnappableGears()
	{
	}
}
[Token(Token = "0x200011A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDD14", Offset = "0x8DDD14")]
public class cSnapPoint : MonoBehaviour
{
	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8E75D4", Offset = "0x8E75D4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E75D4", Offset = "0x8E75D4")]
	public SOSnapID SnapID;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SphereCollider sCollider;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem hoverParticle;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem snapSuccessParticle;

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xB37E90", Offset = "0xB37E90", VA = "0xB37E90")]
	private Color GetButtonColorID()
	{
		return default(Color);
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xB37F18", Offset = "0xB37F18", VA = "0xB37F18")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xB38000", Offset = "0xB38000", VA = "0xB38000")]
	public cSnapPoint()
	{
	}
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDD78", Offset = "0x8DDD78")]
public class cSnapPointGearWall : MonoBehaviour
{
	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GearWallManager GearManager;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E7634", Offset = "0x8E7634")]
	public List<SOSnapID> snapIDArray;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E766C", Offset = "0x8E766C")]
	public SOSnapID thisSnapID;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public GearWallManager.WhichGear snapIndex;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem particleToPlay;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SphereCollider sCollider;

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xB38008", Offset = "0xB38008", VA = "0xB38008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xB38180", Offset = "0xB38180", VA = "0xB38180")]
	public cSnapPointGearWall()
	{
	}
}
[Token(Token = "0x200011C")]
public class GazeSystem : MonoBehaviour
{
	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cameraRig;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rayCastDistance;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private RaycastHit target;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RaycastHit targetCopy;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private cGazeTarget gazeTarget;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private LayerMask mask;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xB5DA88", Offset = "0xB5DA88", VA = "0xB5DA88")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xB5DA8C", Offset = "0xB5DA8C", VA = "0xB5DA8C")]
	public void RaycastCheck()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xB5DE18", Offset = "0xB5DE18", VA = "0xB5DE18")]
	public GazeSystem()
	{
	}
}
[Token(Token = "0x200011D")]
public class HandEmulator : MonoBehaviour
{
	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool cameraOrMouseRayCast;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RaycastHit hit;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera cam;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rb;

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xCC3960", Offset = "0xCC3960", VA = "0xCC3960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xCC39B8", Offset = "0xCC39B8", VA = "0xCC39B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xCC39C8", Offset = "0xCC39C8", VA = "0xCC39C8")]
	public void RaycastFromCamera()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xCC3C54", Offset = "0xCC3C54", VA = "0xCC3C54")]
	public void RaycastFromMouse()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xCC3F30", Offset = "0xCC3F30", VA = "0xCC3F30")]
	public HandEmulator()
	{
	}
}
[Token(Token = "0x200011E")]
public class SnapIDClear : MonoBehaviour
{
	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SOSnapID> ListOfSnapPoints;

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xA84E00", Offset = "0xA84E00", VA = "0xA84E00")]
	private void Start()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xA84E04", Offset = "0xA84E04", VA = "0xA84E04")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xA84F38", Offset = "0xA84F38", VA = "0xA84F38")]
	private void Update()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xA84F3C", Offset = "0xA84F3C", VA = "0xA84F3C")]
	public SnapIDClear()
	{
	}
}
[Token(Token = "0x200011F")]
public class cReloadLightProbes : MonoBehaviour
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOSceneManager probeScene;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent triggerEvent;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SOGameEvent.GameEventDelegate triggerDelegate;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xB04B9C", Offset = "0xB04B9C", VA = "0xB04B9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xB04C20", Offset = "0xB04C20", VA = "0xB04C20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xB04C44", Offset = "0xB04C44", VA = "0xB04C44")]
	private void ReloadLightProbes()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xB04E38", Offset = "0xB04E38", VA = "0xB04E38")]
	public cReloadLightProbes()
	{
	}
}
[Token(Token = "0x2000120")]
public class cLocalizationSystem : MonoBehaviour
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cLocalizationSystem instance;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset voTsv;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset menuTsv;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextAsset tutorialTsv;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextAsset checkpointTsv;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextAsset creditsTsv;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ShowInInspector]
	private List<Dictionary<string, string>> voRows;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[ShowInInspector]
	private List<Dictionary<string, string>> menuRows;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[ShowInInspector]
	private List<Dictionary<string, string>> tutorialRows;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[ShowInInspector]
	private List<Dictionary<string, string>> checkpointRows;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[ShowInInspector]
	private List<Dictionary<string, string>> creditsRows;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string tagString;

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xB6EDD4", Offset = "0xB6EDD4", VA = "0xB6EDD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xB6EEA0", Offset = "0xB6EEA0", VA = "0xB6EEA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xB6EEE0", Offset = "0xB6EEE0", VA = "0xB6EEE0")]
	public string GetVOText(string tag, sPlayerSettings.Language lang)
	{
		return null;
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xB6D1E0", Offset = "0xB6D1E0", VA = "0xB6D1E0")]
	public string GetMenuText(string tag, sPlayerSettings.Language lang)
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xB6F0FC", Offset = "0xB6F0FC", VA = "0xB6F0FC")]
	public string GetTutorialText(string tag, sPlayerSettings.Language lang)
	{
		return null;
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xB6F268", Offset = "0xB6F268", VA = "0xB6F268")]
	public string GetCheckpointText(string tag, sPlayerSettings.Language lang)
	{
		return null;
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xB6F3D4", Offset = "0xB6F3D4", VA = "0xB6F3D4")]
	public string GetCreditsText(string tag, sPlayerSettings.Language lang)
	{
		return null;
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xB6EEA4", Offset = "0xB6EEA4", VA = "0xB6EEA4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5260", Offset = "0x8F5260")]
	private void BuildDicts()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xB6F540", Offset = "0xB6F540", VA = "0xB6F540")]
	private void BuildVODict()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xB6F604", Offset = "0xB6F604", VA = "0xB6F604")]
	private void BuildMenuDict()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xB6F6C8", Offset = "0xB6F6C8", VA = "0xB6F6C8")]
	private void BuildTutorialDict()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xB6F78C", Offset = "0xB6F78C", VA = "0xB6F78C")]
	private void BuildCheckpointDict()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xB6F850", Offset = "0xB6F850", VA = "0xB6F850")]
	private void BuildCreditsDict()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xB6F914", Offset = "0xB6F914", VA = "0xB6F914")]
	private List<Dictionary<string, string>> BuildRowList(string[] lines)
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xB6FCF8", Offset = "0xB6FCF8", VA = "0xB6FCF8")]
	public cLocalizationSystem()
	{
	}
}
[Token(Token = "0x2000121")]
public class cLocalizedTranslation : MonoBehaviour
{
	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro textMesh;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private new string tag;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xB6FD50", Offset = "0xB6FD50", VA = "0xB6FD50")]
	public void UpdateLocalizationText(sPlayerSettings.Language lang)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xB6FDDC", Offset = "0xB6FDDC", VA = "0xB6FDDC")]
	public cLocalizedTranslation()
	{
	}
}
[Token(Token = "0x2000122")]
public class cPlanarCompassTranslations : MonoBehaviour
{
	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cLocalizedTranslation[] planarCompassText;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private sPlayerSettings.Language lang;

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xAFAB60", Offset = "0xAFAB60", VA = "0xAFAB60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xAFAB64", Offset = "0xAFAB64", VA = "0xAFAB64")]
	public void CheckLanguage()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xAFAC44", Offset = "0xAFAC44", VA = "0xAFAC44")]
	private void UpdateTranslationText(bool isEnabled)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xAFAD0C", Offset = "0xAFAD0C", VA = "0xAFAD0C")]
	public cPlanarCompassTranslations()
	{
	}
}
[Token(Token = "0x2000123")]
public class cMeditation : MonoBehaviour
{
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF8D0", Offset = "0x8DF8D0")]
	private sealed class <BeginFade>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000222")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xB725D8", Offset = "0xB725D8", VA = "0xB725D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xB72644", Offset = "0xB72644", VA = "0xB72644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xB723E0", Offset = "0xB723E0", VA = "0xB723E0")]
		[DebuggerHidden]
		public <BeginFade>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xB72598", Offset = "0xB72598", VA = "0xB72598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xB7259C", Offset = "0xB7259C", VA = "0xB7259C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xB725E0", Offset = "0xB725E0", VA = "0xB725E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF8E0", Offset = "0x8DF8E0")]
	private sealed class <EndFade>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000224")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xB7268C", Offset = "0xB7268C", VA = "0xB7268C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C19")]
			[Address(RVA = "0xB726F8", Offset = "0xB726F8", VA = "0xB726F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xB7246C", Offset = "0xB7246C", VA = "0xB7246C")]
		[DebuggerHidden]
		public <EndFade>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xB7264C", Offset = "0xB7264C", VA = "0xB7264C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xB72650", Offset = "0xB72650", VA = "0xB72650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xB72694", Offset = "0xB72694", VA = "0xB72694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOInputEvent meditatePressedEvent;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOInputEvent meditateReleasedEvent;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOInputEvent.InputEventDelegate meditatePressedDelegate;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOInputEvent.InputEventDelegate meditateReleasedDelegate;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOInputEvent flowPressedEvent;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOInputEvent flowReleasedEvent;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOInputEvent.InputEventDelegate flowPressedDelegate;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOInputEvent.InputEventDelegate flowReleasedDelegate;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isMeditating;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent onStartMeditating;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent onStopMeditating;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent meditationStarted;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject fadeSphere;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private FadeSphere fadeRend;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private FadeToken fadeToken;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float fadeTime;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float meditationTime;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E7814", Offset = "0x8E7814")]
	private float maxFadeOpacity;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float maxCancelTime;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float cancelTime;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Material detectionMaterial;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private sBool skeletonReadyToCrumble;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float meditationHapticsAmpMultiplier;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float meditationPulseFreqMultiplier;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float meditationTotalPulseTime;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float meditationSecondPulseTime;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float meditationRestartTime;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float meditationProgress;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float meditationHapticTimer;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private soVOSequence meditationTutorialVO;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private soVOSequence firstDreamThoughtVO;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool inMeditationTutorial;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject planarCompassContainerGO;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private EventInstance detectMagicTransitionInstance;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[EventRef]
	[SerializeField]
	private string detectMagicTransitionEvent;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private soVOEvent voThatUnlocksMeditation;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cMeditation Instance;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int Transparency;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xB718B0", Offset = "0xB718B0", VA = "0xB718B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xB719B0", Offset = "0xB719B0", VA = "0xB719B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xB71BF4", Offset = "0xB71BF4", VA = "0xB71BF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xB71CD0", Offset = "0xB71CD0", VA = "0xB71CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xB720DC", Offset = "0xB720DC", VA = "0xB720DC")]
	private void SetMeditationAudioVisuals()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xB721DC", Offset = "0xB721DC", VA = "0xB721DC")]
	public bool IsMeditationLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xB72204", Offset = "0xB72204", VA = "0xB72204")]
	private void MeditateButtonPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xB72288", Offset = "0xB72288", VA = "0xB72288")]
	public void MeditateButtonReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xB72330", Offset = "0xB72330", VA = "0xB72330")]
	private void FlowButtonPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xB72334", Offset = "0xB72334", VA = "0xB72334")]
	private void FlowButtonReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xB72264", Offset = "0xB72264", VA = "0xB72264")]
	private void StartMeditating()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xB72314", Offset = "0xB72314", VA = "0xB72314")]
	public void StopMeditating()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xB72380", Offset = "0xB72380", VA = "0xB72380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5270", Offset = "0x8F5270")]
	private IEnumerator BeginFade()
	{
		return null;
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xB7240C", Offset = "0xB7240C", VA = "0xB7240C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F52D4", Offset = "0x8F52D4")]
	private IEnumerator EndFade()
	{
		return null;
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xB72338", Offset = "0xB72338", VA = "0xB72338")]
	public void CheckTutorialVO()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xB72498", Offset = "0xB72498", VA = "0xB72498")]
	public void StartMeditationTutorial()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xB7218C", Offset = "0xB7218C", VA = "0xB7218C")]
	public void PlayTutorialMeditationVO()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xB72518", Offset = "0xB72518", VA = "0xB72518")]
	public cMeditation()
	{
	}
}
[Token(Token = "0x2000124")]
public class cMeditationChest : MonoBehaviour
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject lidOpen;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject lidClosed;

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xB72700", Offset = "0xB72700", VA = "0xB72700")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xB727BC", Offset = "0xB727BC", VA = "0xB727BC")]
	public cMeditationChest()
	{
	}
}
[Token(Token = "0x2000125")]
public class cActivateFadeSphereOnMenu : MonoBehaviour
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject fadeSphere;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material fadeSphereMat;

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xA912AC", Offset = "0xA912AC", VA = "0xA912AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xA912B0", Offset = "0xA912B0", VA = "0xA912B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xA912D0", Offset = "0xA912D0", VA = "0xA912D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xA912F0", Offset = "0xA912F0", VA = "0xA912F0")]
	public cActivateFadeSphereOnMenu()
	{
	}
}
[Token(Token = "0x2000126")]
public class cCheckpointLanguagePopulation : cLanguagePopulation
{
	[Token(Token = "0x600076F")]
	[Address(RVA = "0xA97FF0", Offset = "0xA97FF0", VA = "0xA97FF0", Slot = "4")]
	public override void PopulateText()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xA98278", Offset = "0xA98278", VA = "0xA98278")]
	public cCheckpointLanguagePopulation()
	{
	}
}
[Token(Token = "0x2000127")]
public class cControllerImages : MonoBehaviour
{
	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controlsEng;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controlsFr;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controlsSp;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject controlsDe;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject controlsKo;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject controlsJp;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject controlsZh;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xAC2B34", Offset = "0xAC2B34", VA = "0xAC2B34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xAC2BF0", Offset = "0xAC2BF0", VA = "0xAC2BF0")]
	private void EnableImage(GameObject imageGO)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xAC2CB8", Offset = "0xAC2CB8", VA = "0xAC2CB8")]
	public cControllerImages()
	{
	}
}
[Token(Token = "0x2000128")]
public class cHapticProperty : MonoBehaviour
{
	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float buttonIncrement;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Slider slider;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cPropertySettings propertiesScript;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xB67B20", Offset = "0xB67B20", VA = "0xB67B20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xB67C98", Offset = "0xB67C98", VA = "0xB67C98")]
	public void UpdateSetting()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xB67CE8", Offset = "0xB67CE8", VA = "0xB67CE8")]
	public void IncreaseValue()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xB67D40", Offset = "0xB67D40", VA = "0xB67D40")]
	public void DecreaseValue()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xB67D98", Offset = "0xB67D98", VA = "0xB67D98")]
	public cHapticProperty()
	{
	}
}
[Token(Token = "0x2000129")]
public class cHapticSlider : MonoBehaviour
{
	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Slider slider;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool firstTimeChanged;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xB67DAC", Offset = "0xB67DAC", VA = "0xB67DAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xB67F3C", Offset = "0xB67F3C", VA = "0xB67F3C")]
	private void UpdateHaptics(float value)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xB68018", Offset = "0xB68018", VA = "0xB68018")]
	public cHapticSlider()
	{
	}
}
[Token(Token = "0x200012A")]
public class cLanguagePopulation : MonoBehaviour
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI tmp;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected cPropertySettings propertySettings;

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xB6CFB8", Offset = "0xB6CFB8", VA = "0xB6CFB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xB6D11C", Offset = "0xB6D11C", VA = "0xB6D11C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xB6D128", Offset = "0xB6D128", VA = "0xB6D128", Slot = "4")]
	public virtual void PopulateText()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xB6D34C", Offset = "0xB6D34C", VA = "0xB6D34C")]
	public cLanguagePopulation()
	{
	}
}
[Token(Token = "0x200012B")]
public class cMenuSystem : MonoBehaviour
{
	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inGameMenu;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject optionsMenu;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject audioMenu;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controlsMenu;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<GameObject> disabledInGame;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<GameObject> enabledInGame;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOInputEvent optionsReleasedEvent;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SOInputEvent.InputEventDelegate optionsReleasedDelegate;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent enableLaserEvent;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOGameEvent disableLaserEvent;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool menuOpen;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool newGamePressed;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool continueGamePressed;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject continueButton;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject nonFadeSphere;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private cPropertySettings propertySettings;

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xB72C5C", Offset = "0xB72C5C", VA = "0xB72C5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xB72E2C", Offset = "0xB72E2C", VA = "0xB72E2C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xB72E64", Offset = "0xB72E64", VA = "0xB72E64")]
	private void OptionsButtonReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xB731E0", Offset = "0xB731E0", VA = "0xB731E0")]
	private void OpenMenu()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xB73124", Offset = "0xB73124", VA = "0xB73124")]
	private void CloseMenu()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xB7327C", Offset = "0xB7327C", VA = "0xB7327C")]
	public void NewGame()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xB73308", Offset = "0xB73308", VA = "0xB73308")]
	public void NewGameSkipTutorial()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xB73378", Offset = "0xB73378", VA = "0xB73378")]
	public void ContinueGame()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xB73404", Offset = "0xB73404", VA = "0xB73404")]
	public void ExitToMainMenu()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xB73464", Offset = "0xB73464", VA = "0xB73464")]
	public void Credits()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xB734E0", Offset = "0xB734E0", VA = "0xB734E0")]
	public void ExitGame()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xB734E4", Offset = "0xB734E4", VA = "0xB734E4")]
	public cMenuSystem()
	{
	}
}
[Token(Token = "0x200012C")]
public class cPropertySettings : MonoBehaviour
{
	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public sPlayerSettings settings;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent languageChanged;

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xAFFA68", Offset = "0xAFFA68", VA = "0xAFFA68")]
	private void Start()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xAFFA84", Offset = "0xAFFA84", VA = "0xAFFA84")]
	public void LanguageChanged()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xAFFAA0", Offset = "0xAFFAA0", VA = "0xAFFAA0")]
	public void SetLanguageEnglish()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xAFFAD8", Offset = "0xAFFAD8", VA = "0xAFFAD8")]
	public void SetLanguageFronch()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xAFFB10", Offset = "0xAFFB10", VA = "0xAFFB10")]
	public void SetLanguageSpanish()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xAFFB48", Offset = "0xAFFB48", VA = "0xAFFB48")]
	public void SetLanguageGerman()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xAFFB80", Offset = "0xAFFB80", VA = "0xAFFB80")]
	public void SetLanguageKorean()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xAFFBB8", Offset = "0xAFFBB8", VA = "0xAFFBB8")]
	public void SetLanguageJapanese()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xAFFBF0", Offset = "0xAFFBF0", VA = "0xAFFBF0")]
	public float GetHapticIntensity()
	{
		return default(float);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xAFFC10", Offset = "0xAFFC10", VA = "0xAFFC10")]
	public void UpdateHapticIntensity(float value)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xAFFC2C", Offset = "0xAFFC2C", VA = "0xAFFC2C")]
	public float GetSubtitleSetting(cSubtitleController.Setting setting)
	{
		return default(float);
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xAFFC8C", Offset = "0xAFFC8C", VA = "0xAFFC8C")]
	public void UpdateSubtitleSetting(float value, cSubtitleController.Setting setting)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xAFFCF0", Offset = "0xAFFCF0", VA = "0xAFFCF0")]
	public float GetVolume(cAudioSystem.Bus bus)
	{
		return default(float);
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xAFFD78", Offset = "0xAFFD78", VA = "0xAFFD78")]
	public void UpdateVolume(float volume, cAudioSystem.Bus bus)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xAFFE10", Offset = "0xAFFE10", VA = "0xAFFE10")]
	public cPropertySettings()
	{
	}
}
[Token(Token = "0x200012D")]
public class cSubtitleProperty : MonoBehaviour
{
	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public cSubtitleController.Setting subtitleSetting;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float buttonIncrement;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Slider slider;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cPropertySettings propertiesScript;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xB410E0", Offset = "0xB410E0", VA = "0xB410E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xB4125C", Offset = "0xB4125C", VA = "0xB4125C")]
	public void UpdateSetting()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xB412B0", Offset = "0xB412B0", VA = "0xB412B0")]
	public void IncreaseValue()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xB41308", Offset = "0xB41308", VA = "0xB41308")]
	public void DecreaseValue()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xB41360", Offset = "0xB41360", VA = "0xB41360")]
	public cSubtitleProperty()
	{
	}
}
[Token(Token = "0x200012E")]
public class cSubtitlePropertyWindow : MonoBehaviour
{
	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8E79CC", Offset = "0x8E79CC")]
	public string subtitleEditText;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string cachedSubtitles;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool cachedSubtitlesEnabled;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xB41374", Offset = "0xB41374", VA = "0xB41374")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xB4143C", Offset = "0xB4143C", VA = "0xB4143C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xB41510", Offset = "0xB41510", VA = "0xB41510")]
	public cSubtitlePropertyWindow()
	{
	}
}
[Token(Token = "0x200012F")]
public class cSubtitleToggle : MonoBehaviour
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI tmp;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cPropertySettings propertySettings;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool subtitles;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xB41630", Offset = "0xB41630", VA = "0xB41630")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xB41778", Offset = "0xB41778", VA = "0xB41778")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xB41868", Offset = "0xB41868", VA = "0xB41868")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xB4186C", Offset = "0xB4186C", VA = "0xB4186C")]
	public void ToggleSubtitles()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xB417B8", Offset = "0xB417B8", VA = "0xB417B8")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xB418B8", Offset = "0xB418B8", VA = "0xB418B8")]
	public cSubtitleToggle()
	{
	}
}
[Token(Token = "0x2000130")]
public class cVolumeProperty : MonoBehaviour
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public cAudioSystem.Bus bus;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float buttonIncrement;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Slider slider;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cPropertySettings propertiesScript;

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xB44830", Offset = "0xB44830", VA = "0xB44830")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xB449AC", Offset = "0xB449AC", VA = "0xB449AC")]
	public void UpdateSetting()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xB44A00", Offset = "0xB44A00", VA = "0xB44A00")]
	public void IncreaseValue()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xB44A58", Offset = "0xB44A58", VA = "0xB44A58")]
	public void DecreaseValue()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xB44AB0", Offset = "0xB44AB0", VA = "0xB44AB0")]
	public cVolumeProperty()
	{
	}
}
[Token(Token = "0x2000131")]
public class cMaterialWorldPortalGrabbed : MonoBehaviour
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOEvent portalKeyNotYetFed;

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xB70924", Offset = "0xB70924", VA = "0xB70924")]
	public void MaterialWorldGrabBlocked()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xB709F8", Offset = "0xB709F8", VA = "0xB709F8")]
	public cMaterialWorldPortalGrabbed()
	{
	}
}
[Token(Token = "0x2000132")]
public class cGameProgressionSystem : MonoBehaviour
{
	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<sGameSequence> activeSequences;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public List<sGameSequence> gameSequences;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityAction<sGameSequence> sequenceFinishedAction;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityAction<sGameSequence> sequenceInvalidatedAction;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static cGameProgressionSystem _instance;

	[Token(Token = "0x1700002A")]
	public static cGameProgressionSystem Instance
	{
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xAD37DC", Offset = "0xAD37DC", VA = "0xAD37DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xAD382C", Offset = "0xAD382C", VA = "0xAD382C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5338", Offset = "0x8F5338")]
	private void OpenVisualizer()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xAD3830", Offset = "0xAD3830", VA = "0xAD3830")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xAD38FC", Offset = "0xAD38FC", VA = "0xAD38FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xAD3B4C", Offset = "0xAD3B4C", VA = "0xAD3B4C")]
	private void NewGame()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xAD3C04", Offset = "0xAD3C04", VA = "0xAD3C04")]
	private void BeginSequence(sGameSequence sequence)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xAD3D0C", Offset = "0xAD3D0C", VA = "0xAD3D0C")]
	private void SequenceFinished(sGameSequence sequence)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xAD3EE8", Offset = "0xAD3EE8", VA = "0xAD3EE8")]
	private void SequenceInvalidated(sGameSequence sequence)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xAD39B0", Offset = "0xAD39B0", VA = "0xAD39B0")]
	private void TrueUpSequenceDependencies()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xAD3FE4", Offset = "0xAD3FE4", VA = "0xAD3FE4")]
	public string getSequence()
	{
		return null;
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xAD40B0", Offset = "0xAD40B0", VA = "0xAD40B0")]
	public string getStep()
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xAD417C", Offset = "0xAD417C", VA = "0xAD417C")]
	public cGameProgressionSystem()
	{
	}
}
[Token(Token = "0x2000133")]
public class cStepTimer : MonoBehaviour
{
	[Token(Token = "0x200043B")]
	private class Timer : UnityEngine.Object
	{
		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float currentTime;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float maxTime;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public sGameStep gameStep;

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xB40AB4", Offset = "0xB40AB4", VA = "0xB40AB4")]
		public Timer(sGameStep gameStep, float maxTime)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xB40940", Offset = "0xB40940", VA = "0xB40940")]
		public bool AddTime(float timeToAdd)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Timer> timers;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static cStepTimer _instance;

	[Token(Token = "0x1700002B")]
	public static cStepTimer Instance
	{
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xB40748", Offset = "0xB40748", VA = "0xB40748")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xB40798", Offset = "0xB40798", VA = "0xB40798")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xB40864", Offset = "0xB40864", VA = "0xB40864")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xB40A20", Offset = "0xB40A20", VA = "0xB40A20")]
	public void AddTimer(sGameStep gameStep, float maxTime)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xB40B44", Offset = "0xB40B44", VA = "0xB40B44")]
	public void RemoveTimer(sGameStep gameStep)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xB40C48", Offset = "0xB40C48", VA = "0xB40C48")]
	public cStepTimer()
	{
	}
}
[Token(Token = "0x2000134")]
public class QuantumState
{
	[Token(Token = "0x200043C")]
	public enum CellChestState
	{
		[Token(Token = "0x4001C15")]
		CLOSED,
		[Token(Token = "0x4001C16")]
		OPEN
	}

	[Token(Token = "0x200043D")]
	public enum HookState
	{
		[Token(Token = "0x4001C18")]
		EMPTY,
		[Token(Token = "0x4001C19")]
		BAUBLE,
		[Token(Token = "0x4001C1A")]
		FIRE,
		[Token(Token = "0x4001C1B")]
		LANTERN
	}

	[Token(Token = "0x200043E")]
	public enum CandleState
	{
		[Token(Token = "0x4001C1D")]
		UNLIT,
		[Token(Token = "0x4001C1E")]
		LIT
	}

	[Token(Token = "0x200043F")]
	public enum WebState
	{
		[Token(Token = "0x4001C20")]
		UNBURNED,
		[Token(Token = "0x4001C21")]
		BURNED
	}

	[Token(Token = "0x2000440")]
	public enum PlanksState
	{
		[Token(Token = "0x4001C23")]
		UNBURNED,
		[Token(Token = "0x4001C24")]
		BURNED
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xC2FFB4", Offset = "0xC2FFB4", VA = "0xC2FFB4")]
	public QuantumState()
	{
	}
}
[Token(Token = "0x2000135")]
public class cQuantumObjectHandler : MonoBehaviour
{
	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private QuantumState.CellChestState _cellChestState;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private QuantumState.HookState _hookState;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private QuantumState.CandleState _candleState;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private QuantumState.WebState _webState;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private QuantumState.PlanksState _planksState;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent chestOpenEvent;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate chestOpenDelegate;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent chestClosedEvent;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate chestClosedDelegate;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOGameEvent candleLitEvent;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate candleLitDelegate;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOGameEvent candleUnlitEvent;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate candleUnlitDelegate;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent baubleOnHookEvent;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate baubleOnHookDelegate;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOGameEvent fairyFireOnHookEvent;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate fairyFireOnHookDelegate;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SOGameEvent lanternOnHookEvent;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate lanternOnHookDelegate;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SOGameEvent nothingOnHookEvent;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate nothingOnHookDelegate;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject hookQuantumBurst;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static cQuantumObjectHandler _instance;

	[Token(Token = "0x1700002C")]
	public QuantumState.CellChestState cellChestState
	{
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xB02D24", Offset = "0xB02D24", VA = "0xB02D24")]
		get
		{
			return default(QuantumState.CellChestState);
		}
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xB02D2C", Offset = "0xB02D2C", VA = "0xB02D2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public QuantumState.HookState hookState
	{
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xB02D34", Offset = "0xB02D34", VA = "0xB02D34")]
		get
		{
			return default(QuantumState.HookState);
		}
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xB02D3C", Offset = "0xB02D3C", VA = "0xB02D3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public QuantumState.CandleState candleState
	{
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xB02D44", Offset = "0xB02D44", VA = "0xB02D44")]
		get
		{
			return default(QuantumState.CandleState);
		}
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xB02D4C", Offset = "0xB02D4C", VA = "0xB02D4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public QuantumState.WebState webState
	{
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xB02D54", Offset = "0xB02D54", VA = "0xB02D54")]
		get
		{
			return default(QuantumState.WebState);
		}
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xB02D5C", Offset = "0xB02D5C", VA = "0xB02D5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public QuantumState.PlanksState planksState
	{
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xB02D64", Offset = "0xB02D64", VA = "0xB02D64")]
		get
		{
			return default(QuantumState.PlanksState);
		}
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xB02D6C", Offset = "0xB02D6C", VA = "0xB02D6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public static cQuantumObjectHandler Instance
	{
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xB02D74", Offset = "0xB02D74", VA = "0xB02D74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xB0272C", Offset = "0xB0272C", VA = "0xB0272C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xB02730", Offset = "0xB02730", VA = "0xB02730")]
	private void RegisterListeners()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xB02960", Offset = "0xB02960", VA = "0xB02960")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xB02A1C", Offset = "0xB02A1C", VA = "0xB02A1C")]
	public Dictionary<string, int> GetQuantumStates()
	{
		return null;
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xB02B2C", Offset = "0xB02B2C", VA = "0xB02B2C")]
	public void SetQuantumStatesToDefaults()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xB02BB0", Offset = "0xB02BB0", VA = "0xB02BB0")]
	public void SetQuantumStates(Dictionary<string, int> quantumStatesToSet)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xB02C9C", Offset = "0xB02C9C", VA = "0xB02C9C")]
	public void OpenCellChest()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xB02B58", Offset = "0xB02B58", VA = "0xB02B58")]
	public void CloseCellChest()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xB02CA8", Offset = "0xB02CA8", VA = "0xB02CA8")]
	public void LightCandle()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xB02BA8", Offset = "0xB02BA8", VA = "0xB02BA8")]
	public void UnlightCandle()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xB02CB4", Offset = "0xB02CB4", VA = "0xB02CB4")]
	public void BurnPlanks()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xB02CC0", Offset = "0xB02CC0", VA = "0xB02CC0")]
	public void BaubleOnHook()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xB02CEC", Offset = "0xB02CEC", VA = "0xB02CEC")]
	public void FairyFireOnHook()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xB02D18", Offset = "0xB02D18", VA = "0xB02D18")]
	public void LanternOnHook()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xB02B60", Offset = "0xB02B60", VA = "0xB02B60")]
	public void NothingOnHook()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xB02DC4", Offset = "0xB02DC4", VA = "0xB02DC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xB02E90", Offset = "0xB02E90", VA = "0xB02E90")]
	public cQuantumObjectHandler()
	{
	}
}
[Token(Token = "0x2000136")]
public class cRunestone : MonoBehaviour
{
	[Token(Token = "0x2000441")]
	public enum RuneLocation
	{
		[Token(Token = "0x4001C26")]
		MaterialWorld,
		[Token(Token = "0x4001C27")]
		ShadowRealm,
		[Token(Token = "0x4001C28")]
		Feylands,
		[Token(Token = "0x4001C29")]
		Skybridge,
		[Token(Token = "0x4001C2A")]
		Underworld,
		[Token(Token = "0x4001C2B")]
		None
	}

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RuneLocation thisRune;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject materialWorldEffects;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool inSlot;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private cShadowHandable shadowHandable;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent materialWorldReachedEvent;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SOGameEvent.GameEventDelegate materialWorldReachedDelegate;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent necromancerDreamThoughtFinishedEvent;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SOGameEvent.GameEventDelegate necromancerDreamThoughtFinishedDelegate;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool released;

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xB057CC", Offset = "0xB057CC", VA = "0xB057CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xB05908", Offset = "0xB05908", VA = "0xB05908")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xB0592C", Offset = "0xB0592C", VA = "0xB0592C")]
	private void OnMaterialWorldReached()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xB05A04", Offset = "0xB05A04", VA = "0xB05A04")]
	public void OnRunestoneReleased()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xB05B28", Offset = "0xB05B28", VA = "0xB05B28")]
	public void OnRunestoneGrabbed()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xB05C2C", Offset = "0xB05C2C", VA = "0xB05C2C")]
	private void BlockRelease()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xB05D80", Offset = "0xB05D80", VA = "0xB05D80")]
	private void UnlockRelease()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xB05DC4", Offset = "0xB05DC4", VA = "0xB05DC4")]
	public void SetKinematic(bool isKinematic)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xB05DE4", Offset = "0xB05DE4", VA = "0xB05DE4")]
	public void SetShadowhandable(bool _isShadowhandable)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xB05E08", Offset = "0xB05E08", VA = "0xB05E08")]
	public void SetGrabbable(bool _isGrabbable)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xB05E2C", Offset = "0xB05E2C", VA = "0xB05E2C")]
	public cRunestone()
	{
	}
}
[Token(Token = "0x2000137")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDDDC", Offset = "0x8DDDDC")]
public class cRunestoneSlot : MonoBehaviour
{
	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int runestoneSlotNumber;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hasRunestone;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public cRunestone.RuneLocation slottedRune;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool visualUnlocked;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject visual;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isPlayingDreamthought;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public cShadowHandable shadowHandable;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent onFlowReachedEvent;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SOGameEvent.GameEventDelegate onFlowReachedDelegate;

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xB05E34", Offset = "0xB05E34", VA = "0xB05E34")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xB05ED0", Offset = "0xB05ED0", VA = "0xB05ED0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xB05EF4", Offset = "0xB05EF4", VA = "0xB05EF4")]
	public void UnlockSlot(cRunestone.RuneLocation runeLocation)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xB05F5C", Offset = "0xB05F5C", VA = "0xB05F5C")]
	private void DisplayRunestoneVisual()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xB06068", Offset = "0xB06068", VA = "0xB06068")]
	public void RunestoneSlotShadowhanded()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xB06218", Offset = "0xB06218", VA = "0xB06218")]
	public cRunestoneSlot()
	{
	}
}
[Token(Token = "0x2000138")]
public class cRunestoneSystem : MonoBehaviour
{
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF8F0", Offset = "0x8DF8F0")]
	private sealed class <RunestoneReleased>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cRunestoneSystem <>4__this;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public cRunestone runestone;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <hoverTransform>5__2;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <throughTransform>5__3;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <d>5__4;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <sealSmashed>5__5;

		[Token(Token = "0x17000226")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xB07538", Offset = "0xB07538", VA = "0xB07538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0xB075A4", Offset = "0xB075A4", VA = "0xB075A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xB066DC", Offset = "0xB066DC", VA = "0xB066DC")]
		[DebuggerHidden]
		public <RunestoneReleased>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xB06D3C", Offset = "0xB06D3C", VA = "0xB06D3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xB06D40", Offset = "0xB06D40", VA = "0xB06D40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xB07540", Offset = "0xB07540", VA = "0xB07540", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numRunestonesInCircle;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cRunestoneSlot[] runestoneSlots;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform[] runestoneHoverPoints;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform[] runestoneTargetPoints;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform dreamThoughtTarget;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject shadowNecromancer;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject dreamThought;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float runeStoneSpeedToHoverPoint;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float runeStoneHoverTime;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float runeStoneSpeedToSlot;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float dreamThoughtSpeedToTarget;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float waitBeforeCrackCircleTime;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private soVOEvent firstRunestoneGrabbedVO;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private soVOEvent[] runestoneGrabbedVOLines;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private soVOSequence[] necromancerDreamThoughts;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private soVOSequence[] necromancerDreamThoughtRepetitions;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private soVOSequence currentPlayingSequence;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool replayingDreamThought;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private soVOEvent flowChartingMachineFinished;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float startTime;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 lerpStartPos;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float journeyLength;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float distCovered;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float fractionOfJourney;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private SOGameEvent unlockDreamThought03A;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private SOGameEvent unlockDreamThought08;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private SOGameEvent[] runestoneEffectEvents;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private SOGameEvent crackAlphaEvent;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private cSoundEffect runestoneSlotSound;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private cSoundEffect circleWeakenSound;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private SOGameEvent newFlowReachedEvent;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate newFlowReachedDelegate;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SOGameEvent forceClosePlanarCompass;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7D6C", Offset = "0x8E7D6C")]
	private bool <runestoneReleaseInProgress>k__BackingField;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cRunestoneSystem Instance;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private sBool dreamThought8Unlocked;

	[Token(Token = "0x17000032")]
	public bool runestoneReleaseInProgress
	{
		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xB06228", Offset = "0xB06228", VA = "0xB06228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5350", Offset = "0x8F5350")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xB06230", Offset = "0xB06230", VA = "0xB06230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5360", Offset = "0x8F5360")]
		private set
		{
		}
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xB0623C", Offset = "0xB0623C", VA = "0xB0623C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xB06308", Offset = "0xB06308", VA = "0xB06308")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xB0638C", Offset = "0xB0638C", VA = "0xB0638C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xB063B0", Offset = "0xB063B0", VA = "0xB063B0")]
	private void NewFlowReached()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xB06468", Offset = "0xB06468", VA = "0xB06468")]
	public void SetUnlockedSlotsShadowhandable(bool isShadowhandable)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xB054E4", Offset = "0xB054E4", VA = "0xB054E4")]
	public bool IsRuneSlotted(cRunestone.RuneLocation runeLocation)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xB064E8", Offset = "0xB064E8", VA = "0xB064E8")]
	public void ValidateRunestoneSlots()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xB065A4", Offset = "0xB065A4", VA = "0xB065A4")]
	public int GetNumRunestonesSlotted()
	{
		return default(int);
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xB065AC", Offset = "0xB065AC", VA = "0xB065AC")]
	public void NewRunestoneSlotted()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xB065BC", Offset = "0xB065BC", VA = "0xB065BC")]
	public cRunestoneSlot[] GetRunestoneSlots()
	{
		return null;
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xB065C4", Offset = "0xB065C4", VA = "0xB065C4")]
	public void SetRunestoneSlots(cRunestoneSlot[] _runestoneSlots)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xB05CE4", Offset = "0xB05CE4", VA = "0xB05CE4")]
	public void RunestoneGrabbed()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xB065CC", Offset = "0xB065CC", VA = "0xB065CC")]
	public void FirstRunestoneGrabbed()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xB0661C", Offset = "0xB0661C", VA = "0xB0661C")]
	public void ShowShadowNecromancer()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xB0663C", Offset = "0xB0663C", VA = "0xB0663C")]
	public void HideShadowNecromancer()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xB05AE4", Offset = "0xB05AE4", VA = "0xB05AE4")]
	public void NewRunestoneReleasedInMaterialWorld(cRunestone newRunestone)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xB060C8", Offset = "0xB060C8", VA = "0xB060C8")]
	public void ReplayNecromancerDreamThought(int thoughtIndex)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xB0665C", Offset = "0xB0665C", VA = "0xB0665C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5370", Offset = "0x8F5370")]
	private IEnumerator RunestoneReleased(cRunestone runestone)
	{
		return null;
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xB06708", Offset = "0xB06708", VA = "0xB06708")]
	public void NecromancerDreamThoughtFinished()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xB06A98", Offset = "0xB06A98", VA = "0xB06A98")]
	private void PlayNecromancerDreamThought()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xB06AF0", Offset = "0xB06AF0", VA = "0xB06AF0")]
	private void LerpSetup(Transform objectToLerp, Transform lerpTarget, float speed)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xB06C1C", Offset = "0xB06C1C", VA = "0xB06C1C")]
	private void Lerp(Transform objectToLerp, Transform lerpTarget, float speed)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xB06D34", Offset = "0xB06D34", VA = "0xB06D34")]
	public cRunestoneSystem()
	{
	}
}
[Token(Token = "0x2000139")]
public class cShadowRealmRunestone : MonoBehaviour
{
	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private soVOEvent broughtAmuletVO;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cShadowHandable sHable;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xB343E4", Offset = "0xB343E4", VA = "0xB343E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xB34470", Offset = "0xB34470", VA = "0xB34470")]
	public cShadowRealmRunestone()
	{
	}
}
[Token(Token = "0x200013A")]
public class cCheckpoint : MonoBehaviour
{
	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sCheckpoint checkpointSO;

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xA93010", Offset = "0xA93010", VA = "0xA93010")]
	public void CheckpointReached()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xA97ED8", Offset = "0xA97ED8", VA = "0xA97ED8")]
	public void CheckpointCompleted()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xA97FE8", Offset = "0xA97FE8", VA = "0xA97FE8")]
	public cCheckpoint()
	{
	}
}
[Serializable]
[Token(Token = "0x200013B")]
public class CheckpointData
{
	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool questActive;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool completed;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xBDEC98", Offset = "0xBDEC98", VA = "0xBDEC98")]
	public CheckpointData()
	{
	}
}
[Token(Token = "0x200013C")]
public class cCheckpointSystem : MonoBehaviour
{
	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cCheckpointSystem Instance;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public sCheckpoint[] checkpoints;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public sCheckpoint latestCheckpoint;

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xA98280", Offset = "0xA98280", VA = "0xA98280")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xA97DA0", Offset = "0xA97DA0", VA = "0xA97DA0")]
	public void NewCheckpointReached(sCheckpoint newCheckpoint)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xA97F38", Offset = "0xA97F38", VA = "0xA97F38")]
	public void CheckpointCompleted(sCheckpoint completedCheckpoint)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xA98164", Offset = "0xA98164", VA = "0xA98164")]
	public sCheckpoint GetLatestCheckpoint()
	{
		return null;
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xA9834C", Offset = "0xA9834C", VA = "0xA9834C")]
	public cCheckpointSystem()
	{
	}
}
[Token(Token = "0x200013D")]
public class cGameInitialization : MonoBehaviour
{
	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF900", Offset = "0x8DF900")]
	private sealed class <UnloadScenes>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Scene> scenes;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <unloadingResources>5__2;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <loadingScene>5__3;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <idx>5__4;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AsyncOperation <unloadingScene>5__5;

		[Token(Token = "0x17000228")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0xAD3768", Offset = "0xAD3768", VA = "0xAD3768", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C27")]
			[Address(RVA = "0xAD37D4", Offset = "0xAD37D4", VA = "0xAD37D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xAD3538", Offset = "0xAD3538", VA = "0xAD3538")]
		[DebuggerHidden]
		public <UnloadScenes>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xAD356C", Offset = "0xAD356C", VA = "0xAD356C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xAD3570", Offset = "0xAD3570", VA = "0xAD3570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xAD3770", Offset = "0xAD3770", VA = "0xAD3770", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cGameInitialization instance;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool gameStarted;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LaserPointer laserPointer;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ShaderVariantCollection shaderVariants;

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xAD2D5C", Offset = "0xAD2D5C", VA = "0xAD2D5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xAD2E28", Offset = "0xAD2E28", VA = "0xAD2E28")]
	public bool HasGameStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xAD2E30", Offset = "0xAD2E30", VA = "0xAD2E30")]
	public void SetGameStarted(bool b)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xAD2E3C", Offset = "0xAD2E3C", VA = "0xAD2E3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xAD2E40", Offset = "0xAD2E40", VA = "0xAD2E40")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xAD2FE4", Offset = "0xAD2FE4", VA = "0xAD2FE4")]
	public void WarmupShaders()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xAD2FE8", Offset = "0xAD2FE8", VA = "0xAD2FE8")]
	public void NewGame()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xAD30D0", Offset = "0xAD30D0", VA = "0xAD30D0")]
	public void NewGameSkipTutorial()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xAD31D0", Offset = "0xAD31D0", VA = "0xAD31D0")]
	public void LoadGameData()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xAD3264", Offset = "0xAD3264", VA = "0xAD3264")]
	public void LoadGame()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xAD333C", Offset = "0xAD333C", VA = "0xAD333C")]
	public void ExitToMainMenu(bool showLogos)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xAD34C4", Offset = "0xAD34C4", VA = "0xAD34C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F53D4", Offset = "0x8F53D4")]
	private IEnumerator UnloadScenes(List<Scene> scenes)
	{
		return null;
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xAD3564", Offset = "0xAD3564", VA = "0xAD3564")]
	public cGameInitialization()
	{
	}
}
[Token(Token = "0x200013E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DDE40", Offset = "0x8DDE40")]
public class sCheckpoint : ScriptableObject
{
	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int checkpointNumber;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CheckpointData checkpointData;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string localizationTag;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string checkpointDescription;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x15AADD8", Offset = "0x15AADD8", VA = "0x15AADD8")]
	public void ResetCheckpoint()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x15AAE08", Offset = "0x15AAE08", VA = "0x15AAE08")]
	public sCheckpoint()
	{
	}
}
[Token(Token = "0x200013F")]
public class cInitialLoad : MonoBehaviour
{
	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF910", Offset = "0x8DF910")]
	private sealed class <Init>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cInitialLoad <>4__this;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <unloadingResources>5__2;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <asyncLoad>5__3;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0xB6B86C", Offset = "0xB6B86C", VA = "0xB6B86C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0xB6B8D8", Offset = "0xB6B8D8", VA = "0xB6B8D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xB6B5A8", Offset = "0xB6B5A8", VA = "0xB6B5A8")]
		[DebuggerHidden]
		public <Init>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xB6B5E4", Offset = "0xB6B5E4", VA = "0xB6B5E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xB6B5E8", Offset = "0xB6B5E8", VA = "0xB6B5E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xB6B874", Offset = "0xB6B874", VA = "0xB6B874", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float logoDuration;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject Logo1;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject Logo2;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject Logo3;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ShaderVariantCollection shaderVariants;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timer;

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xB6B504", Offset = "0xB6B504", VA = "0xB6B504")]
	private void Start()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xB6B534", Offset = "0xB6B534", VA = "0xB6B534")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5438", Offset = "0x8F5438")]
	private IEnumerator Init()
	{
		return null;
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xB6B5D4", Offset = "0xB6B5D4", VA = "0xB6B5D4")]
	public cInitialLoad()
	{
	}
}
[Token(Token = "0x2000140")]
public class cPlanarCompassEnabler : MonoBehaviour
{
	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject planarCompass;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject planarCompassContainer;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cPlanarCompassEnabler instance;

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xAFAA28", Offset = "0xAFAA28", VA = "0xAFAA28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xAFAAF4", Offset = "0xAFAAF4", VA = "0xAFAAF4")]
	public void EnablePlanarCompass()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xAFAB14", Offset = "0xAFAB14", VA = "0xAFAB14")]
	public void DisablePlanarCompass()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xAFAB58", Offset = "0xAFAB58", VA = "0xAFAB58")]
	public cPlanarCompassEnabler()
	{
	}
}
[Serializable]
[Token(Token = "0x2000141")]
public class SaveData
{
	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[ShowInInspector]
	private int sceneID;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ShowInInspector]
	private Dictionary<string, bool> voEventDict;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ShowInInspector]
	private Dictionary<string, bool> voSequencesDict;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ShowInInspector]
	private Dictionary<string, bool> sBoolDict;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ShowInInspector]
	private Dictionary<string, int> objTrackerDict;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ShowInInspector]
	private Dictionary<string, bool> sceneDict;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ShowInInspector]
	private Dictionary<string, bool> spellDict;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[ShowInInspector]
	private Dictionary<int, int> runestoneDict;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[ShowInInspector]
	private Dictionary<string, int> quantumObjectDict;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[ShowInInspector]
	private Dictionary<int, CheckpointData> checkpointDict;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xC36164", Offset = "0xC36164", VA = "0xC36164")]
	public void UpdateData(SaveData saveData)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xC361E8", Offset = "0xC361E8", VA = "0xC361E8")]
	public void SetSceneID(int id)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xC361F0", Offset = "0xC361F0", VA = "0xC361F0")]
	public int GetSceneID()
	{
		return default(int);
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xC361F8", Offset = "0xC361F8", VA = "0xC361F8")]
	public bool LoadVOEvent(string voEventName)
	{
		return default(bool);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xC36294", Offset = "0xC36294", VA = "0xC36294")]
	public bool LoadVOSequence(string voSequenceName)
	{
		return default(bool);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC36330", Offset = "0xC36330", VA = "0xC36330")]
	public bool LoadSBool(string sBoolName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC363CC", Offset = "0xC363CC", VA = "0xC363CC")]
	public int LoadObjectTracker(string objectTrackerName)
	{
		return default(int);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC36468", Offset = "0xC36468", VA = "0xC36468")]
	public bool LoadSceneData(string sceneName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC36504", Offset = "0xC36504", VA = "0xC36504")]
	public bool LoadSpellData(string spellName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC365A0", Offset = "0xC365A0", VA = "0xC365A0")]
	public int LoadRunestoneData(int slotIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC3663C", Offset = "0xC3663C", VA = "0xC3663C")]
	public Dictionary<string, int> LoadQuantumObjectData()
	{
		return null;
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xC36644", Offset = "0xC36644", VA = "0xC36644")]
	public CheckpointData LoadCheckpointData(int checkpointNum)
	{
		return null;
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xC366AC", Offset = "0xC366AC", VA = "0xC366AC")]
	public void PopulateVOEvents(List<soVOEvent> voEvents)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xC36838", Offset = "0xC36838", VA = "0xC36838")]
	public void PopulateVOSequences(List<soVOSequence> voSequences)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xC369C4", Offset = "0xC369C4", VA = "0xC369C4")]
	public void PopulateSBools(List<sBool> sBools)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xC36B50", Offset = "0xC36B50", VA = "0xC36B50")]
	public void PopulateObjectTrackers(List<sObjectTracker> objectTrackers)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xC36CD4", Offset = "0xC36CD4", VA = "0xC36CD4")]
	public void PopulateSceneData(List<SOSceneManager> scenes)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xC36E60", Offset = "0xC36E60", VA = "0xC36E60")]
	public void PopulateSpellData(List<cSpell> spells)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xC36FEC", Offset = "0xC36FEC", VA = "0xC36FEC")]
	public void PopulateRunestoneData(List<cRunestoneSlot> runestoneSlots)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xC37154", Offset = "0xC37154", VA = "0xC37154")]
	public void PopulateQuantumObjectData(Dictionary<string, int> quantumObjData)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xC3715C", Offset = "0xC3715C", VA = "0xC3715C")]
	public void PopulateCheckpointData(List<sCheckpoint> checkpoints)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xC372C4", Offset = "0xC372C4", VA = "0xC372C4")]
	public SaveData()
	{
	}
}
[Token(Token = "0x2000142")]
public class cSaveLoadSystem : MonoBehaviour
{
	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string saveFileName;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string saveFileXMLName;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string saveDirectoryPath;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string saveFilePath;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ShowInInspector]
	public SaveData saveData;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool loading;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject saveIcon;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cSoundEffect saveSuccessSound;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float saveIconDisplayTime;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject planarCompass;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DictionaryOfStringAndSceneData objectsInSceneData;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<Guid, GameObject> sharedTemporaryObjectsGuidToGameObject;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<GameObject, Guid> sharedTemporaryObjectsGameObjectToGuid;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static cSaveLoadSystem Instance;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xB080C4", Offset = "0xB080C4", VA = "0xB080C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xB081C4", Offset = "0xB081C4", VA = "0xB081C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xB082EC", Offset = "0xB082EC", VA = "0xB082EC")]
	public bool DoesSaveDataExist()
	{
		return default(bool);
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xB085BC", Offset = "0xB085BC", VA = "0xB085BC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F549C", Offset = "0x8F549C")]
	public void LoadGameData()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xB067DC", Offset = "0xB067DC", VA = "0xB067DC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F54AC", Offset = "0x8F54AC")]
	public void SaveGameData()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xAF7C90", Offset = "0xAF7C90", VA = "0xAF7C90")]
	public void SaveObjectsSceneData(string sceneName)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xB086C8", Offset = "0xB086C8", VA = "0xB086C8")]
	public void HideSavingIcon()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xB086E8", Offset = "0xB086E8", VA = "0xB086E8")]
	public int GetSceneID()
	{
		return default(int);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xB08664", Offset = "0xB08664", VA = "0xB08664")]
	private void SaveSubsystems()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xB08708", Offset = "0xB08708", VA = "0xB08708")]
	private void SaveVOEvents()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xB08778", Offset = "0xB08778", VA = "0xB08778")]
	private void SaveVOSequences()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xB087E8", Offset = "0xB087E8", VA = "0xB087E8")]
	private void SaveSBools()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xB08858", Offset = "0xB08858", VA = "0xB08858")]
	private void SaveObjectTrackers()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xB088C8", Offset = "0xB088C8", VA = "0xB088C8")]
	private void SaveSceneID()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xB08944", Offset = "0xB08944", VA = "0xB08944")]
	private void SaveSceneData()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xB089E8", Offset = "0xB089E8", VA = "0xB089E8")]
	private void SaveSpellData()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xB08A8C", Offset = "0xB08A8C", VA = "0xB08A8C")]
	private void SaveRunestoneData()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xB08B30", Offset = "0xB08B30", VA = "0xB08B30")]
	private void SaveQuantumObjectData()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xB08BA4", Offset = "0xB08BA4", VA = "0xB08BA4")]
	private void SaveCheckpointData()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xB08358", Offset = "0xB08358", VA = "0xB08358")]
	public bool LoadSaveFileData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xB08EAC", Offset = "0xB08EAC", VA = "0xB08EAC")]
	public void LoadObjectsSceneData(string sceneName)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xB09080", Offset = "0xB09080", VA = "0xB09080")]
	public bool ObjectAlreadyExistInAnotherScene(SOSceneManager scene, GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xB09500", Offset = "0xB09500", VA = "0xB09500")]
	public bool GuidAlreadyExistInAnotherScene(SOSceneManager scene, Guid guid)
	{
		return default(bool);
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xB09164", Offset = "0xB09164", VA = "0xB09164")]
	public bool ObjectExistsInScene(SOSceneManager scene, Guid objectID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xB09380", Offset = "0xB09380", VA = "0xB09380")]
	public bool ObjectExistsInData(Guid objectID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xB08608", Offset = "0xB08608", VA = "0xB08608")]
	private void InitSubsystemsFromData()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xB09554", Offset = "0xB09554", VA = "0xB09554")]
	private void LoadVOEvents()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xB09660", Offset = "0xB09660", VA = "0xB09660")]
	private void LoadVOSequences()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xB0976C", Offset = "0xB0976C", VA = "0xB0976C")]
	private void LoadSBools()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xB09878", Offset = "0xB09878", VA = "0xB09878")]
	private void LoadObjectTrackers()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xB099A4", Offset = "0xB099A4", VA = "0xB099A4")]
	private void LoadSceneData()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xB09AD8", Offset = "0xB09AD8", VA = "0xB09AD8")]
	private void LoadSpellData()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xB09C0C", Offset = "0xB09C0C", VA = "0xB09C0C")]
	private void LoadRunestoneData()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xB09F5C", Offset = "0xB09F5C", VA = "0xB09F5C")]
	public void LoadOnlyCheckpointData()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xB09DC0", Offset = "0xB09DC0", VA = "0xB09DC0")]
	public void LoadCheckpointData()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xB09D54", Offset = "0xB09D54", VA = "0xB09D54")]
	private void LoadQuantumData()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xAF80EC", Offset = "0xAF80EC", VA = "0xAF80EC")]
	public bool IsHavingTemporaryCopy(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xB09F60", Offset = "0xB09F60", VA = "0xB09F60")]
	public bool IsHavingTemporaryCopy(Guid guid)
	{
		return default(bool);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xB09FD0", Offset = "0xB09FD0", VA = "0xB09FD0")]
	public Guid GetGuidByTemporaryObject(GameObject obj)
	{
		return default(Guid);
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xB0A038", Offset = "0xB0A038", VA = "0xB0A038")]
	public GameObject GetTemporaryObjectByGuid(Guid guid)
	{
		return null;
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xB0A0A8", Offset = "0xB0A0A8", VA = "0xB0A0A8")]
	public void AddTemporaryObject(Guid guid, GameObject gameObject)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xB0A1A4", Offset = "0xB0A1A4", VA = "0xB0A1A4")]
	public void RemoveTemporaryObjectsByGuid(Guid guid)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xAF8154", Offset = "0xAF8154", VA = "0xAF8154")]
	public void RemoveTemporaryObjectsByGameObject(GameObject obj)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xB0A2E8", Offset = "0xB0A2E8", VA = "0xB0A2E8")]
	public void DeleteSaveFile()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xB0A368", Offset = "0xB0A368", VA = "0xB0A368")]
	public cSaveLoadSystem()
	{
	}
}
[Token(Token = "0x2000143")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DDE94", Offset = "0x8DDE94")]
public class sPlayerSettings : ScriptableObject
{
	[Token(Token = "0x2000445")]
	public enum Language
	{
		[Token(Token = "0x4001C41")]
		ENG = 1,
		[Token(Token = "0x4001C42")]
		FR,
		[Token(Token = "0x4001C43")]
		SP,
		[Token(Token = "0x4001C44")]
		DE,
		[Token(Token = "0x4001C45")]
		KO,
		[Token(Token = "0x4001C46")]
		JP
	}

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string propLanguage;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string propVolumeMaster;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string propVolumeDialogue;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string propVolumeSfx;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string propVolumeMusic;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string propVolumeAmbient;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string propSubtitlesEnabled;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string propSubtitlesDepth;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string propSubtitlesHeight;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string propSubtitlesSize;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string propSubtitlesColor;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string propHapticIntensity;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float _volumeMaster;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float _volumeDialogue;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float _volumeSfx;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float _volumeMusic;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float _volumeAmbient;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private bool _subtitlesEnabled;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float _subtitlesDepth;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float _subtitlesHeight;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float _subtitlesSize;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float _subtitlesColor;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float _hapticIntensity;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private Language _language;

	[Token(Token = "0x17000033")]
	public float volumeMaster
	{
		[Token(Token = "0x600086E")]
		[Address(RVA = "0x15AC524", Offset = "0x15AC524", VA = "0x15AC524")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600086F")]
		[Address(RVA = "0x15AC52C", Offset = "0x15AC52C", VA = "0x15AC52C")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public float volumeDialogue
	{
		[Token(Token = "0x6000870")]
		[Address(RVA = "0x15AC610", Offset = "0x15AC610", VA = "0x15AC610")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000871")]
		[Address(RVA = "0x15AC618", Offset = "0x15AC618", VA = "0x15AC618")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public float volumeSfx
	{
		[Token(Token = "0x6000872")]
		[Address(RVA = "0x15AC6FC", Offset = "0x15AC6FC", VA = "0x15AC6FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000873")]
		[Address(RVA = "0x15AC704", Offset = "0x15AC704", VA = "0x15AC704")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public float volumeMusic
	{
		[Token(Token = "0x6000874")]
		[Address(RVA = "0x15AC7E8", Offset = "0x15AC7E8", VA = "0x15AC7E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000875")]
		[Address(RVA = "0x15AC7F0", Offset = "0x15AC7F0", VA = "0x15AC7F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public float volumeAmbient
	{
		[Token(Token = "0x6000876")]
		[Address(RVA = "0x15AC8D4", Offset = "0x15AC8D4", VA = "0x15AC8D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000877")]
		[Address(RVA = "0x15AC8DC", Offset = "0x15AC8DC", VA = "0x15AC8DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public bool subtitlesEnabled
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x15AC9C0", Offset = "0x15AC9C0", VA = "0x15AC9C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x15AC9C8", Offset = "0x15AC9C8", VA = "0x15AC9C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public float subtitlesDepth
	{
		[Token(Token = "0x600087A")]
		[Address(RVA = "0x15ACA5C", Offset = "0x15ACA5C", VA = "0x15ACA5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x15ACA64", Offset = "0x15ACA64", VA = "0x15ACA64")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public float subtitlesHeight
	{
		[Token(Token = "0x600087C")]
		[Address(RVA = "0x15ACADC", Offset = "0x15ACADC", VA = "0x15ACADC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x15ACAE4", Offset = "0x15ACAE4", VA = "0x15ACAE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float subtitlesSize
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x15ACB5C", Offset = "0x15ACB5C", VA = "0x15ACB5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x15ACB64", Offset = "0x15ACB64", VA = "0x15ACB64")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float subtitlesColor
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0x15ACBDC", Offset = "0x15ACBDC", VA = "0x15ACBDC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x15ACBE4", Offset = "0x15ACBE4", VA = "0x15ACBE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float hapticIntensity
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x15ACBF8", Offset = "0x15ACBF8", VA = "0x15ACBF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000883")]
		[Address(RVA = "0x15ACC00", Offset = "0x15ACC00", VA = "0x15ACC00")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public Language language
	{
		[Token(Token = "0x6000884")]
		[Address(RVA = "0x15ACC80", Offset = "0x15ACC80", VA = "0x15ACC80")]
		get
		{
			return default(Language);
		}
		[Token(Token = "0x6000885")]
		[Address(RVA = "0x15ACC88", Offset = "0x15ACC88", VA = "0x15ACC88")]
		set
		{
		}
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x15ACD60", Offset = "0x15ACD60", VA = "0x15ACD60")]
	public void SavePrefs()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x15ACD68", Offset = "0x15ACD68", VA = "0x15ACD68")]
	public void LoadPrefs()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x15ACEC4", Offset = "0x15ACEC4", VA = "0x15ACEC4")]
	public sPlayerSettings()
	{
	}
}
[Token(Token = "0x2000144")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class GuidComponent : MonoBehaviour, ISerializationCallbackReceiver
{
	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Guid guid;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private byte[] serializedGuid;

	[Token(Token = "0x1700003F")]
	public bool IsGuidGenerated
	{
		[Token(Token = "0x6000889")]
		[Address(RVA = "0xCC218C", Offset = "0xCC218C", VA = "0xCC218C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000040")]
	public Guid Guid
	{
		[Token(Token = "0x600088A")]
		[Address(RVA = "0xCC2210", Offset = "0xCC2210", VA = "0xCC2210")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xCC22D8", Offset = "0xCC22D8", VA = "0xCC22D8")]
	private void CreateGuid()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xCC2518", Offset = "0xCC2518", VA = "0xCC2518", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xCC25C4", Offset = "0xCC25C4", VA = "0xCC25C4", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xCC2614", Offset = "0xCC2614", VA = "0xCC2614")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xCC2618", Offset = "0xCC2618", VA = "0xCC2618")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xCC261C", Offset = "0xCC261C", VA = "0xCC261C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xCC26C4", Offset = "0xCC26C4", VA = "0xCC26C4")]
	public GuidComponent()
	{
	}
}
[Token(Token = "0x2000145")]
public class GuidManager
{
	[Token(Token = "0x2000446")]
	private struct GuidInfo
	{
		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject go;

		[Token(Token = "0x1400001A")]
		public event Action<GameObject> OnAdd
		{
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x99A9F4", Offset = "0x99A9F4", VA = "0x99A9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8DAC", Offset = "0x8F8DAC")]
			add
			{
			}
			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0x99A9FC", Offset = "0x99A9FC", VA = "0x99A9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8DBC", Offset = "0x8F8DBC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action OnRemove
		{
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x99AA04", Offset = "0x99AA04", VA = "0x99AA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8DCC", Offset = "0x8F8DCC")]
			add
			{
			}
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x99AA0C", Offset = "0x99AA0C", VA = "0x99AA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8DDC", Offset = "0x8F8DDC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x99AA14", Offset = "0x99AA14", VA = "0x99AA14")]
		public GuidInfo(GuidComponent comp)
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x99AA1C", Offset = "0x99AA1C", VA = "0x99AA1C")]
		public void HandleAddCallback()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x99AA24", Offset = "0x99AA24", VA = "0x99AA24")]
		public void HandleRemoveCallback()
		{
		}
	}

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GuidManager Instance;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Guid, GuidInfo> guidToObjectMap;

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xCC2484", Offset = "0xCC2484", VA = "0xCC2484")]
	public static bool Add(GuidComponent guidComponent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xCC2628", Offset = "0xCC2628", VA = "0xCC2628")]
	public static void Remove(Guid guid)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xCC2A84", Offset = "0xCC2A84", VA = "0xCC2A84")]
	public static GameObject ResolveGuid(Guid guid, Action<GameObject> onAddCallback, Action onRemoveCallback)
	{
		return null;
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xCC2CA8", Offset = "0xCC2CA8", VA = "0xCC2CA8")]
	public static GameObject ResolveGuid(Guid guid, Action onDestroyCallback)
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xCC2D58", Offset = "0xCC2D58", VA = "0xCC2D58")]
	public static GameObject ResolveGuid(Guid guid)
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xCC273C", Offset = "0xCC273C", VA = "0xCC273C")]
	private GuidManager()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xCC27B0", Offset = "0xCC27B0", VA = "0xCC27B0")]
	private bool InternalAdd(GuidComponent guidComponent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xCC29C8", Offset = "0xCC29C8", VA = "0xCC29C8")]
	private void InternalRemove(Guid guid)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xCC2B38", Offset = "0xCC2B38", VA = "0xCC2B38")]
	private GameObject ResolveGuidInternal(Guid guid, Action<GameObject> onAddCallback, Action onRemoveCallback)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000146")]
public class GuidReference : ISerializationCallbackReceiver
{
	[Serializable]
	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF920", Offset = "0x8DF920")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GameObject> <>9__17_0;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__17_1;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<GameObject> <>9__18_0;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__18_1;

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xCC3948", Offset = "0xCC3948", VA = "0xCC3948")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xCC3950", Offset = "0xCC3950", VA = "0xCC3950")]
		internal void <.ctor>b__17_0(GameObject go)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xCC3954", Offset = "0xCC3954", VA = "0xCC3954")]
		internal void <.ctor>b__17_1()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xCC3958", Offset = "0xCC3958", VA = "0xCC3958")]
		internal void <.ctor>b__18_0(GameObject go)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xCC395C", Offset = "0xCC395C", VA = "0xCC395C")]
		internal void <.ctor>b__18_1()
		{
		}
	}

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject cachedReference;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isCacheSet;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private byte[] serializedGuid;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Guid guid;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action<GameObject> addDelegate;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action removeDelegate;

	[Token(Token = "0x17000041")]
	public Guid Guid
	{
		[Token(Token = "0x600089F")]
		[Address(RVA = "0xCC33D0", Offset = "0xCC33D0", VA = "0xCC33D0")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x17000042")]
	public GameObject gameObject
	{
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xCC33DC", Offset = "0xCC33DC", VA = "0xCC33DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xCC3420", Offset = "0xCC3420", VA = "0xCC3420")]
		private set
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<GameObject> OnGuidAdded
	{
		[Token(Token = "0x600089B")]
		[Address(RVA = "0xCC3140", Offset = "0xCC3140", VA = "0xCC3140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F54BC", Offset = "0x8F54BC")]
		add
		{
		}
		[Token(Token = "0x600089C")]
		[Address(RVA = "0xCC31E4", Offset = "0xCC31E4", VA = "0xCC31E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F54CC", Offset = "0x8F54CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action OnGuidRemoved
	{
		[Token(Token = "0x600089D")]
		[Address(RVA = "0xCC3288", Offset = "0xCC3288", VA = "0xCC3288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F54DC", Offset = "0x8F54DC")]
		add
		{
		}
		[Token(Token = "0x600089E")]
		[Address(RVA = "0xCC332C", Offset = "0xCC332C", VA = "0xCC332C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F54EC", Offset = "0x8F54EC")]
		remove
		{
		}
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xCC3424", Offset = "0xCC3424", VA = "0xCC3424")]
	public GuidReference()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xCC3594", Offset = "0xCC3594", VA = "0xCC3594")]
	public GuidReference(GuidComponent target)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xCC3724", Offset = "0xCC3724", VA = "0xCC3724")]
	private void GuidAdded(GameObject go)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xCC3790", Offset = "0xCC3790", VA = "0xCC3790")]
	private void GuidRemoved()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xCC37B8", Offset = "0xCC37B8", VA = "0xCC37B8", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xCC37E4", Offset = "0xCC37E4", VA = "0xCC37E4", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}
}
[Token(Token = "0x2000147")]
public abstract class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, IXmlSerializable
{
	[Token(Token = "0x17000043")]
	protected abstract string itemName
	{
		[Token(Token = "0x60008A8")]
		get;
	}

	[Token(Token = "0x17000044")]
	protected abstract string keyName
	{
		[Token(Token = "0x60008A9")]
		get;
	}

	[Token(Token = "0x17000045")]
	protected abstract string valueName
	{
		[Token(Token = "0x60008AA")]
		get;
	}

	[Token(Token = "0x60008AB")]
	public XmlSchema GetSchema()
	{
		return null;
	}

	[Token(Token = "0x60008AC")]
	public void ReadXml(XmlReader reader)
	{
	}

	[Token(Token = "0x60008AD")]
	public void WriteXml(XmlWriter writer)
	{
	}

	[Token(Token = "0x60008AE")]
	protected SerializableDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000148")]
public class DictionaryOfGuidAndObjectData : SerializableDictionary<Guid, ObjectData>
{
	[Token(Token = "0x17000046")]
	protected override string itemName
	{
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xBE21CC", Offset = "0xBE21CC", VA = "0xBE21CC", Slot = "43")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000047")]
	protected override string keyName
	{
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xBE2214", Offset = "0xBE2214", VA = "0xBE2214", Slot = "44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	protected override string valueName
	{
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xBE225C", Offset = "0xBE225C", VA = "0xBE225C", Slot = "45")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xBE22A4", Offset = "0xBE22A4", VA = "0xBE22A4")]
	public DictionaryOfGuidAndObjectData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000149")]
public class DictionaryOfStringAndSceneData : SerializableDictionary<string, SceneData>
{
	[Token(Token = "0x17000049")]
	protected override string itemName
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xBE22F4", Offset = "0xBE22F4", VA = "0xBE22F4", Slot = "43")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004A")]
	protected override string keyName
	{
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xBE233C", Offset = "0xBE233C", VA = "0xBE233C", Slot = "44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004B")]
	protected override string valueName
	{
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xBE2384", Offset = "0xBE2384", VA = "0xBE2384", Slot = "45")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xBE23CC", Offset = "0xBE23CC", VA = "0xBE23CC")]
	public DictionaryOfStringAndSceneData()
	{
	}
}
[Token(Token = "0x200014A")]
public class SaveAndLoadXML
{
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string saveDirectoryPath;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string saveFileName;

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xC35A18", Offset = "0xC35A18", VA = "0xC35A18")]
	public static void SaveToXML(DictionaryOfStringAndSceneData comingData)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xC35CF0", Offset = "0xC35CF0", VA = "0xC35CF0")]
	public static void LoadFromXML(out DictionaryOfStringAndSceneData data)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xC35E6C", Offset = "0xC35E6C", VA = "0xC35E6C")]
	public static bool HasSaveFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xC35F20", Offset = "0xC35F20", VA = "0xC35F20")]
	public static void EmptySaveFile()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xC360A4", Offset = "0xC360A4", VA = "0xC360A4")]
	public SaveAndLoadXML()
	{
	}
}
[Token(Token = "0x200014B")]
public class cFlowManager : MonoBehaviour
{
	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xACEF7C", Offset = "0xACEF7C", VA = "0xACEF7C")]
	public cFlowManager()
	{
	}
}
[Token(Token = "0x200014C")]
public class cLevelOption : MonoBehaviour
{
	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SOSceneManager targetScene;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject selectedIndicator;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cLevelOption previouslySelected;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool selected;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	[SerializeField]
	private string selectedSound;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance selectedSoundInstance;

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xB6D9C8", Offset = "0xB6D9C8", VA = "0xB6D9C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xB6DB40", Offset = "0xB6DB40", VA = "0xB6DB40")]
	public void Select()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xB6DCE0", Offset = "0xB6DCE0", VA = "0xB6DCE0")]
	public void Unselect()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xB6DC10", Offset = "0xB6DC10", VA = "0xB6DC10")]
	private void PlaySelectedSound()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xB6DD94", Offset = "0xB6DD94", VA = "0xB6DD94")]
	public cLevelOption()
	{
	}
}
[Token(Token = "0x200014D")]
public class cPlanarKey : MonoBehaviour
{
	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent flowToUnlock;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject keyEffect;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sBool beenEaten;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private soVOEvent portalKeyGrabbed;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOEvent portalKeyNotYetFed;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool blockFlowingUntilFed;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool playKeyGrabbedVO;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float timeUntilReminderVO;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool timing;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEvent onNewFlowUnlocked;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool returnIfOrphaned;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool grabbedOnce;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float returnTimer;

	[Token(Token = "0x40009EC")]
	private const float RETURN_DIST = 0.65f;

	[Token(Token = "0x40009ED")]
	private const float RETURN_SPEED = 13.33f;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject volumeLocation;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool grabbed;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 returnPos;

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xAFAD14", Offset = "0xAFAD14", VA = "0xAFAD14")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xAFAD34", Offset = "0xAFAD34", VA = "0xAFAD34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xAFAD88", Offset = "0xAFAD88", VA = "0xAFAD88")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xAFB078", Offset = "0xAFB078", VA = "0xAFB078")]
	private void StartTimer()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xAFB08C", Offset = "0xAFB08C", VA = "0xAFB08C")]
	public void PortalKeyGrabbed()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xAFB134", Offset = "0xAFB134", VA = "0xAFB134")]
	public void PortalKeyReleased()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xAFB03C", Offset = "0xAFB03C", VA = "0xAFB03C")]
	private void PlayReminderVO()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xAFB22C", Offset = "0xAFB22C", VA = "0xAFB22C")]
	public void ActivateEffect(bool turnOn)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xAFB2D0", Offset = "0xAFB2D0", VA = "0xAFB2D0")]
	public void OnAbsorbed()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xAFB380", Offset = "0xAFB380", VA = "0xAFB380")]
	public void UnparentPlanarKey()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xAFB3A8", Offset = "0xAFB3A8", VA = "0xAFB3A8")]
	public cPlanarKey()
	{
	}
}
[Token(Token = "0x200014E")]
public class cPlanarKeyReceiver : MonoBehaviour
{
	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject glowObject;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool hovering;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cPlanarCompass compass;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cPlanarKey keyInReceiver;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private cGrabbableRedux grabbableInReceiver;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private cSoundEffect keyEatenSoundEvent;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xAFB430", Offset = "0xAFB430", VA = "0xAFB430")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xAFB654", Offset = "0xAFB654", VA = "0xAFB654")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xAFB5EC", Offset = "0xAFB5EC", VA = "0xAFB5EC")]
	private void AbsorbPlanarKey(cPlanarKey keyToAbsorb)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xAFB7D4", Offset = "0xAFB7D4", VA = "0xAFB7D4")]
	private void PlayKeyEatenAudio()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xAFB7F0", Offset = "0xAFB7F0", VA = "0xAFB7F0")]
	public cPlanarKeyReceiver()
	{
	}
}
[Token(Token = "0x200014F")]
public class CSceneDebug : MonoBehaviour
{
	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject debugMessageHolder;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro debugMessage;

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xBDC668", Offset = "0xBDC668", VA = "0xBDC668")]
	public void SetDebugMessage(string message)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xBDC684", Offset = "0xBDC684", VA = "0xBDC684")]
	private void DisplayDebugMessages()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xBDC6A4", Offset = "0xBDC6A4", VA = "0xBDC6A4")]
	private void HideDebugMessages()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xBDC6C4", Offset = "0xBDC6C4", VA = "0xBDC6C4")]
	public void ShowDebugMessageForSeconds(float seconds)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xBDC730", Offset = "0xBDC730", VA = "0xBDC730")]
	public CSceneDebug()
	{
	}
}
[Token(Token = "0x2000150")]
public class cSceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000448")]
	public delegate void OnSceneChanged(SOSceneManager previousScene);

	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF930", Offset = "0x8DF930")]
	private sealed class <LoadMainMenuScene>d__95 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cSceneLoader <>4__this;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <loadingScene>5__2;

		[Token(Token = "0x1700022C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xB0C1D0", Offset = "0xB0C1D0", VA = "0xB0C1D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0xB0C23C", Offset = "0xB0C23C", VA = "0xB0C23C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xB0B7A4", Offset = "0xB0B7A4", VA = "0xB0B7A4")]
		[DebuggerHidden]
		public <LoadMainMenuScene>d__95(int <>1__state)
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xB0C088", Offset = "0xB0C088", VA = "0xB0C088", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xB0C08C", Offset = "0xB0C08C", VA = "0xB0C08C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xB0C1D8", Offset = "0xB0C1D8", VA = "0xB0C1D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF940", Offset = "0x8DF940")]
	private sealed class <LoadCreditsScene>d__96 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cSceneLoader <>4__this;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer <fadeRend>5__2;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <loadingScene>5__3;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currentShaderVal>5__4;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xB0C014", Offset = "0xB0C014", VA = "0xB0C014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xB0C080", Offset = "0xB0C080", VA = "0xB0C080", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xB0B7D0", Offset = "0xB0B7D0", VA = "0xB0B7D0")]
		[DebuggerHidden]
		public <LoadCreditsScene>d__96(int <>1__state)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xB0BD6C", Offset = "0xB0BD6C", VA = "0xB0BD6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xB0BD70", Offset = "0xB0BD70", VA = "0xB0BD70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xB0C01C", Offset = "0xB0C01C", VA = "0xB0C01C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF950", Offset = "0x8DF950")]
	private sealed class <NewGameInitialization>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cSceneLoader <>4__this;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <loadingScene>5__2;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <counter>5__3;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <unloadingMainMenu>5__4;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xB0C800", Offset = "0xB0C800", VA = "0xB0C800", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0xB0C86C", Offset = "0xB0C86C", VA = "0xB0C86C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xB0B7FC", Offset = "0xB0B7FC", VA = "0xB0B7FC")]
		[DebuggerHidden]
		public <NewGameInitialization>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xB0C61C", Offset = "0xB0C61C", VA = "0xB0C61C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xB0C620", Offset = "0xB0C620", VA = "0xB0C620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xB0C808", Offset = "0xB0C808", VA = "0xB0C808", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF960", Offset = "0x8DF960")]
	private sealed class <UnloadTargetSceneAndLoadNewOne>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cSceneLoader <>4__this;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SOSceneManager sceneToLoad;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <unloadingResources>5__2;

		[Token(Token = "0x17000232")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0xB2EB90", Offset = "0xB2EB90", VA = "0xB2EB90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C56")]
			[Address(RVA = "0xB2EBFC", Offset = "0xB2EBFC", VA = "0xB2EBFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xB2E9A8", Offset = "0xB2E9A8", VA = "0xB2E9A8")]
		[DebuggerHidden]
		public <UnloadTargetSceneAndLoadNewOne>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xB2E9D4", Offset = "0xB2E9D4", VA = "0xB2E9D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xB2E9D8", Offset = "0xB2E9D8", VA = "0xB2E9D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xB2EB98", Offset = "0xB2EB98", VA = "0xB2EB98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF970", Offset = "0x8DF970")]
	private sealed class <UnloadScene>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SOSceneManager sceneToUnload;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public cSceneLoader <>4__this;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <unloadingScene>5__2;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <unloadingResources>5__3;

		[Token(Token = "0x17000234")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xB2E934", Offset = "0xB2E934", VA = "0xB2E934", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xB2E9A0", Offset = "0xB2E9A0", VA = "0xB2E9A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xB2E68C", Offset = "0xB2E68C", VA = "0xB2E68C")]
		[DebuggerHidden]
		public <UnloadScene>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xB2E6B8", Offset = "0xB2E6B8", VA = "0xB2E6B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xB2E6BC", Offset = "0xB2E6BC", VA = "0xB2E6BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xB2E93C", Offset = "0xB2E93C", VA = "0xB2E93C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF980", Offset = "0x8DF980")]
	private sealed class <LoadSceneInBackground>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cSceneLoader <>4__this;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <loadingScene>5__2;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <counter>5__3;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0xB0C5A8", Offset = "0xB0C5A8", VA = "0xB0C5A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0xB0C614", Offset = "0xB0C614", VA = "0xB0C614", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xB0B8A8", Offset = "0xB0B8A8", VA = "0xB0B8A8")]
		[DebuggerHidden]
		public <LoadSceneInBackground>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xB0C244", Offset = "0xB0C244", VA = "0xB0C244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xB0C248", Offset = "0xB0C248", VA = "0xB0C248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xB0C5B0", Offset = "0xB0C5B0", VA = "0xB0C5B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF990", Offset = "0x8DF990")]
	private sealed class <RefreshLightProbesCoroutine>d__113 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cSceneLoader <>4__this;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SOSceneManager probeScene;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <loadingProbes>5__2;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <unloadingProbes>5__3;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0xB0CA20", Offset = "0xB0CA20", VA = "0xB0CA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0xB0CA8C", Offset = "0xB0CA8C", VA = "0xB0CA8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xB0BC98", Offset = "0xB0BC98", VA = "0xB0BC98")]
		[DebuggerHidden]
		public <RefreshLightProbesCoroutine>d__113(int <>1__state)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xB0C874", Offset = "0xB0C874", VA = "0xB0C874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xB0C878", Offset = "0xB0C878", VA = "0xB0C878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xB0CA28", Offset = "0xB0CA28", VA = "0xB0CA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool autoFlowToStartScene;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cTutorialSystem tutorialSystem;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool debugMode;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOSceneManager startScene;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool tutorialSceneFinished;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SOSceneManager materialWorld;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SOSceneManager shadowrealm;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SOSceneManager feylands;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SOSceneManager skybridge;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SOSceneManager underworld;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SOSceneManager tutorial;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SOSceneManager endgame;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SOSceneManager credits;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SOPlayerScene playableBase;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SOSceneManager mainMenu;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SOSceneManager garbageScene;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SOSceneManager[] allFlows;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SOSceneManager matWorldDayProbes;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SOSceneManager matWorldNightProbes;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool refreshingProbes;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SOSceneManager currentActiveScene;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private SOSceneManager targetScene;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject localPersistentObjectPrefab;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool isTargetSceneLoaded;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool isTargetSceneUnloaded;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cSceneLoader instance;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject flowActiveThings;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 startPos;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float currentDistanceFromStartPos;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private float moveToFlowThreshold;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private float vibrationStrength;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool flowButtonPressedLeft;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool flowButtonPressedRight;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	private bool flowOnCooldown;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private SOSceneManager previousScene;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private SOSceneManager latestNonMatWorldScene;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private SOGameEvent flowSelectedEvent;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private SOGameEvent flowLoadedEvent;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private SOGameEvent flowReachedEvent;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private SOGameEvent firstVisit;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private SOGameEvent unlockMaterialWorldEvent;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate unlockMaterialWorldDelegate;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private SOGameEvent unlockShadowrealmEvent;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate unlockShadowrealmDelegate;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private SOGameEvent unlockFeylandsEvent;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate unlockFeylandsDelegate;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private SOGameEvent unlockSkybridgeEvent;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate unlockSkybridgeDelegate;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private SOGameEvent unlockUnderworldEvent;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate unlockUnderworldDelegate;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private SOGameEvent unlockEndgameEvent;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate unlockEndgameDelegate;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private SOGameEvent lockAllFlowsEvent;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate lockAllFlowsDelegate;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private SOGameEvent unlockAllFlowsEvent;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate unlockAllFlowsDelegate;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private cSoundEffect firstVisitSound;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private cSoundEffect itemRespawnSound;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private soVOEvent firstTimeTryFlowOutsideMatWorld;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private soVOEvent tryFlowOutsideMatWorld;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool portalKeyNotInCompass;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E83B4", Offset = "0x8E83B4")]
	private bool <allFlowsBlocked>k__BackingField;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private GameObject fadeSphere;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public CSceneDebug sceneDebug;

	[Token(Token = "0x1700004C")]
	public bool allFlowsBlocked
	{
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xB0A62C", Offset = "0xB0A62C", VA = "0xB0A62C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F551C", Offset = "0x8F551C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xB0A634", Offset = "0xB0A634", VA = "0xB0A634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F552C", Offset = "0x8F552C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public bool isBusyLoading
	{
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xB0A70C", Offset = "0xB0A70C", VA = "0xB0A70C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004E")]
	public bool inMaterialWorld
	{
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xB05FF4", Offset = "0xB05FF4", VA = "0xB05FF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000006")]
	public static event OnSceneChanged onSceneChanged
	{
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xAF79B8", Offset = "0xAF79B8", VA = "0xAF79B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F54FC", Offset = "0x8F54FC")]
		add
		{
		}
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xB0A574", Offset = "0xB0A574", VA = "0xB0A574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F550C", Offset = "0x8F550C")]
		remove
		{
		}
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xB0A640", Offset = "0xB0A640", VA = "0xB0A640")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xB0A72C", Offset = "0xB0A72C", VA = "0xB0A72C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xB0AC0C", Offset = "0xB0AC0C", VA = "0xB0AC0C")]
	public void NewGame()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xB0AC18", Offset = "0xB0AC18", VA = "0xB0AC18")]
	public void NewGame(bool skipTutorial)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xB0AD38", Offset = "0xB0AD38", VA = "0xB0AD38")]
	public void LoadFromGameData()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xB0AD40", Offset = "0xB0AD40", VA = "0xB0AD40")]
	public void LoadCredits()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xB0A968", Offset = "0xB0A968", VA = "0xB0A968")]
	private void SetUpGameEventDelegates()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xB0ADE0", Offset = "0xB0ADE0", VA = "0xB0ADE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xB09EBC", Offset = "0xB09EBC", VA = "0xB09EBC")]
	public SOSceneManager GetSceneByID(int id)
	{
		return null;
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xB08C48", Offset = "0xB08C48", VA = "0xB08C48")]
	public SOSceneManager GetCurrentActiveSceneSOFromSceneManager()
	{
		return null;
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xB0AE9C", Offset = "0xB0AE9C", VA = "0xB0AE9C")]
	public SOSceneManager GetCurrentActiveScene()
	{
		return null;
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xB0AEA4", Offset = "0xB0AEA4", VA = "0xB0AEA4")]
	public SOSceneManager GetTargetScene()
	{
		return null;
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xAF95BC", Offset = "0xAF95BC", VA = "0xAF95BC")]
	public void SetAndLoadTargetScene(SOSceneManager scene)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xB0AF20", Offset = "0xB0AF20", VA = "0xB0AF20")]
	public void FlowToTargetScene()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xB0B600", Offset = "0xB0B600", VA = "0xB0B600")]
	public void ClearPersistentObjectsFromAllFlows()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xB0B67C", Offset = "0xB0B67C", VA = "0xB0B67C")]
	public void MarkAllFlowsVisited(bool beenVisited)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xB0B6E0", Offset = "0xB0B6E0", VA = "0xB0B6E0")]
	public void MarkAllFlowsUnloaded()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xB0B740", Offset = "0xB0B740", VA = "0xB0B740")]
	public void LockFlows()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xB0B498", Offset = "0xB0B498", VA = "0xB0B498")]
	public void DoFirstVisitThings()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xB0B5E0", Offset = "0xB0B5E0", VA = "0xB0B5E0")]
	public void RaiseFlowReachedGameEvent(SOSceneManager sceneReached)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xB0AB98", Offset = "0xB0AB98", VA = "0xB0AB98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F553C", Offset = "0x8F553C")]
	private IEnumerator LoadMainMenuScene()
	{
		return null;
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xB0AD6C", Offset = "0xB0AD6C", VA = "0xB0AD6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F55A0", Offset = "0x8F55A0")]
	private IEnumerator LoadCreditsScene()
	{
		return null;
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xB0ACC4", Offset = "0xB0ACC4", VA = "0xB0ACC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5604", Offset = "0x8F5604")]
	private IEnumerator NewGameInitialization()
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xB0B828", Offset = "0xB0B828", VA = "0xB0B828")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5668", Offset = "0x8F5668")]
	private IEnumerator UnloadTargetSceneAndLoadNewOne(SOSceneManager sceneToLoad)
	{
		return null;
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xB0B418", Offset = "0xB0B418", VA = "0xB0B418")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F56CC", Offset = "0x8F56CC")]
	private IEnumerator UnloadScene(SOSceneManager sceneToUnload)
	{
		return null;
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xB0AEAC", Offset = "0xB0AEAC", VA = "0xB0AEAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5730", Offset = "0x8F5730")]
	private IEnumerator LoadSceneInBackground()
	{
		return null;
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xB0B8D4", Offset = "0xB0B8D4", VA = "0xB0B8D4")]
	private void LockAllFlows()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xB0B9C0", Offset = "0xB0B9C0", VA = "0xB0B9C0")]
	private void UnlockAllFlows()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xB0B9A4", Offset = "0xB0B9A4", VA = "0xB0B9A4")]
	private void UnlockMaterialWorld()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xB0BA34", Offset = "0xB0BA34", VA = "0xB0BA34")]
	private void UnlockShadowrealm()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xB0BA50", Offset = "0xB0BA50", VA = "0xB0BA50")]
	private void UnlockFeylands()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xB0BA6C", Offset = "0xB0BA6C", VA = "0xB0BA6C")]
	private void UnlockSkybridge()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xB0BA88", Offset = "0xB0BA88", VA = "0xB0BA88")]
	private void UnlockUnderworld()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xB0BAA4", Offset = "0xB0BAA4", VA = "0xB0BAA4")]
	private void UnlockEndgame()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xB0BAC0", Offset = "0xB0BAC0", VA = "0xB0BAC0")]
	public void MoveObjectBetweenScenes(GameObject objectToMove, SOSceneManager originScene, SOSceneManager endScene)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xB074D8", Offset = "0xB074D8", VA = "0xB074D8")]
	public void MoveObjectToGarbageScene(GameObject objectToMove, SOSceneManager originScene)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xB04D04", Offset = "0xB04D04", VA = "0xB04D04")]
	public void RefreshLightProbes(SOSceneManager scene)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xB0BB8C", Offset = "0xB0BB8C", VA = "0xB0BB8C")]
	public void RefreshMaterialWorldLightProbes(SOSceneManager scene, bool isDay)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xB0BB0C", Offset = "0xB0BB0C", VA = "0xB0BB0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5794", Offset = "0x8F5794")]
	private IEnumerator RefreshLightProbesCoroutine(SOSceneManager probeScene)
	{
		return null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xB0BCC4", Offset = "0xB0BCC4", VA = "0xB0BCC4")]
	public void TryFlowOutsideMaterialWorldVO()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xB0BD30", Offset = "0xB0BD30", VA = "0xB0BD30")]
	public void PlayItemRespawnSound()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xB0BD4C", Offset = "0xB0BD4C", VA = "0xB0BD4C")]
	public cSceneLoader()
	{
	}
}
[Token(Token = "0x2000151")]
public class cSelector : MonoBehaviour
{
	[Token(Token = "0x2000450")]
	public enum Side
	{
		[Token(Token = "0x4001C76")]
		left,
		[Token(Token = "0x4001C77")]
		right
	}

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Side side;

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xB2F874", Offset = "0xB2F874", VA = "0xB2F874")]
	public cSelector()
	{
	}
}
[Token(Token = "0x2000152")]
public class cLocalPersistentObjects : MonoBehaviour
{
	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cPersistent[] localPersistentObjects;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> localGameObjects;

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xB6E8BC", Offset = "0xB6E8BC", VA = "0xB6E8BC")]
	public void TurnOffMissingObjects()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xB6EA18", Offset = "0xB6EA18", VA = "0xB6EA18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F57F8", Offset = "0x8F57F8")]
	public void GenerateListOfLocalPersistentObjects(SOSceneManager sceneManager)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xB6EBE0", Offset = "0xB6EBE0", VA = "0xB6EBE0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5848", Offset = "0x8F5848")]
	public void ClearListsOfLocalPersistentObjects()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xB6EC58", Offset = "0xB6EC58", VA = "0xB6EC58")]
	public GameObject[] GetLocalObjectArray()
	{
		return null;
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xB6ECB0", Offset = "0xB6ECB0", VA = "0xB6ECB0")]
	public cLocalPersistentObjects()
	{
	}
}
[Token(Token = "0x2000153")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DDF20", Offset = "0x8DDF20")]
public class cPermanentDeactivator : MonoBehaviour
{
	[Token(Token = "0x600090E")]
	[Address(RVA = "0xAF789C", Offset = "0xAF789C", VA = "0xAF789C")]
	private void Start()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xAF78A0", Offset = "0xAF78A0", VA = "0xAF78A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xAF78A4", Offset = "0xAF78A4", VA = "0xAF78A4")]
	public cPermanentDeactivator()
	{
	}
}
[Token(Token = "0x2000154")]
public class cPersistent : MonoBehaviour
{
	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SOSceneManager newScene;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SOSceneManager garbageScene;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isGrabbable;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool alwaysTrackFlow;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public sObjectTracker objectTracker;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent sceneChangedEvent;

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xAF78AC", Offset = "0xAF78AC", VA = "0xAF78AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xAF78B0", Offset = "0xAF78B0", VA = "0xAF78B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xAF7A70", Offset = "0xAF7A70", VA = "0xAF7A70")]
	private void OnSceneChanged(SOSceneManager previousScene)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xAF7ED8", Offset = "0xAF7ED8", VA = "0xAF7ED8")]
	public void DisappearForever()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xAF82B0", Offset = "0xAF82B0", VA = "0xAF82B0")]
	public cPersistent()
	{
	}
}
[Serializable]
[Token(Token = "0x2000155")]
public class SceneLevel : ISerializationCallbackReceiver
{
	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string scenePath;

	[Token(Token = "0x1700004F")]
	public string ScenePath
	{
		[Token(Token = "0x6000916")]
		[Address(RVA = "0xA84078", Offset = "0xA84078", VA = "0xA84078")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000917")]
		[Address(RVA = "0xA84080", Offset = "0xA84080", VA = "0xA84080")]
		set
		{
		}
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xA84088", Offset = "0xA84088", VA = "0xA84088")]
	public static implicit operator string(SceneLevel sceneLevel)
	{
		return null;
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xA840A0", Offset = "0xA840A0", VA = "0xA840A0", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xA840A4", Offset = "0xA840A4", VA = "0xA840A4", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xA840A8", Offset = "0xA840A8", VA = "0xA840A8")]
	public SceneLevel()
	{
	}
}
[Token(Token = "0x2000156")]
public class cSOContainer : MonoBehaviour
{
	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cSOContainer instance;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<soVOEvent> voEvents;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<soVOSequence> voSequences;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<sBool> sBools;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<sObjectTracker> objectTrackers;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<sCheckpoint> checkpoints;

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xB07C98", Offset = "0xB07C98", VA = "0xB07C98")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xB07D64", Offset = "0xB07D64", VA = "0xB07D64")]
	public List<soVOEvent> VoEvents()
	{
		return null;
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xB07D6C", Offset = "0xB07D6C", VA = "0xB07D6C")]
	public List<soVOSequence> VoSequences()
	{
		return null;
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xB07D74", Offset = "0xB07D74", VA = "0xB07D74")]
	public List<sBool> SBools()
	{
		return null;
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xB07D7C", Offset = "0xB07D7C", VA = "0xB07D7C")]
	public List<sObjectTracker> ObjectTrackers()
	{
		return null;
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xB07D84", Offset = "0xB07D84", VA = "0xB07D84")]
	public List<sCheckpoint> Checkpoints()
	{
		return null;
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xB07D8C", Offset = "0xB07D8C", VA = "0xB07D8C")]
	public void ResetAllSOs()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xB07F14", Offset = "0xB07F14", VA = "0xB07F14")]
	public void ResetObjectTrackers()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xB07FB4", Offset = "0xB07FB4", VA = "0xB07FB4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5898", Offset = "0x8F5898")]
	private void ClearAllLists()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xB080BC", Offset = "0xB080BC", VA = "0xB080BC")]
	public cSOContainer()
	{
	}
}
[Token(Token = "0x2000157")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DDF84", Offset = "0x8DDF84")]
public class sFMODEvent : ScriptableObject
{
	[Token(Token = "0x2000451")]
	public delegate void FMODEventDelegate(string fmodEventString);

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	[SerializeField]
	private string fmodEventString;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<cFMODEventListener> listeners;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<FMODEventDelegate> listenerDelegates;

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x15AAE98", Offset = "0x15AAE98", VA = "0x15AAE98")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F58A8", Offset = "0x8F58A8")]
	public void Raise()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x15AB44C", Offset = "0x15AB44C", VA = "0x15AB44C")]
	public void Raise(string fmodEventString)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x15AB5E4", Offset = "0x15AB5E4", VA = "0x15AB5E4")]
	public void RegisterListener(cFMODEventListener listener)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x15AB688", Offset = "0x15AB688", VA = "0x15AB688")]
	public void RegisterDelegate(FMODEventDelegate fmodEventDelegate)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x15AB72C", Offset = "0x15AB72C", VA = "0x15AB72C")]
	public void UnregisterListener(cFMODEventListener listener)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x15AB794", Offset = "0x15AB794", VA = "0x15AB794")]
	public void UnregisterDelegate(FMODEventDelegate fmodEventDelegate)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x15AB7FC", Offset = "0x15AB7FC", VA = "0x15AB7FC")]
	public sFMODEvent()
	{
	}
}
[Token(Token = "0x2000158")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DDFD8", Offset = "0x8DDFD8")]
public class SOGameEvent : ScriptableObject
{
	[Token(Token = "0x2000452")]
	public delegate void GameEventDelegate();

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<cGameEventListener> listeners;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameEventDelegate> listenerDelegates;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xC31DEC", Offset = "0xC31DEC", VA = "0xC31DEC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F58BC", Offset = "0x8F58BC")]
	public void Raise()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xC3233C", Offset = "0xC3233C", VA = "0xC3233C")]
	public void RegisterListener(cGameEventListener listener)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xC323E0", Offset = "0xC323E0", VA = "0xC323E0")]
	public void RegisterDelegate(GameEventDelegate gameEventDelegate)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xC32484", Offset = "0xC32484", VA = "0xC32484")]
	public void UnregisterListener(cGameEventListener listener)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xC324EC", Offset = "0xC324EC", VA = "0xC324EC")]
	public void UnregisterDelegate(GameEventDelegate gameEventDelegate)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xC32554", Offset = "0xC32554", VA = "0xC32554")]
	public SOGameEvent()
	{
	}
}
[Token(Token = "0x2000159")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE02C", Offset = "0x8DE02C")]
public class SOInputEvent : ScriptableObject
{
	[Token(Token = "0x2000453")]
	public delegate void InputEventDelegate(SOInputHandler.Hand hand);

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<(cInputEventListener, SOInputHandler.Hand)> listeners;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<(InputEventDelegate, SOInputHandler.Hand)> listenerDelegates;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xC32640", Offset = "0xC32640", VA = "0xC32640")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F58D0", Offset = "0x8F58D0")]
	public void Raise()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xC32648", Offset = "0xC32648", VA = "0xC32648")]
	public void Raise(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xC32CA0", Offset = "0xC32CA0", VA = "0xC32CA0")]
	public void RegisterListener(cInputEventListener listener, SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xC32DBC", Offset = "0xC32DBC", VA = "0xC32DBC")]
	public void RegisterDelegate(InputEventDelegate inputEventDelegate, SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xC32ED8", Offset = "0xC32ED8", VA = "0xC32ED8")]
	public void UnregisterListener(cInputEventListener listener, SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xC32F78", Offset = "0xC32F78", VA = "0xC32F78")]
	public void UnregisterDelegate(InputEventDelegate inputEventDelegate, SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xC33018", Offset = "0xC33018", VA = "0xC33018")]
	public SOInputEvent()
	{
	}
}
[Token(Token = "0x200015A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE080", Offset = "0x8DE080")]
public class sTextEvent : ScriptableObject
{
	[Token(Token = "0x2000454")]
	public delegate void TextEventDelegate(string message);

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<cTextEventListener> listeners;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<TextEventDelegate> listenerDelegates;

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x15AD178", Offset = "0x15AD178", VA = "0x15AD178")]
	public void Raise(string message)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x15AD720", Offset = "0x15AD720", VA = "0x15AD720")]
	public void RegisterListener(cTextEventListener listener)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x15AD7C4", Offset = "0x15AD7C4", VA = "0x15AD7C4")]
	public void RegisterDelegate(TextEventDelegate textEventDelegate)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x15AD868", Offset = "0x15AD868", VA = "0x15AD868")]
	public void UnregisterListener(cTextEventListener listener)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x15AD8D0", Offset = "0x15AD8D0", VA = "0x15AD8D0")]
	public void UnregisterDelegate(TextEventDelegate textEventDelegate)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x15AD938", Offset = "0x15AD938", VA = "0x15AD938")]
	public sTextEvent()
	{
	}
}
[Token(Token = "0x200015B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE0D4", Offset = "0x8DE0D4")]
public class sTimedEvent : ScriptableObject
{
	[Token(Token = "0x2000455")]
	public delegate void TimeEventDelegate();

	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF9A0", Offset = "0x8DF9A0")]
	private sealed class <StartTimer>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public sTimedEvent <>4__this;

		[Token(Token = "0x1700023A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x15AE2AC", Offset = "0x15AE2AC", VA = "0x15AE2AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x15AE318", Offset = "0x15AE318", VA = "0x15AE318", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x15ADB18", Offset = "0x15ADB18", VA = "0x15ADB18")]
		[DebuggerHidden]
		public <StartTimer>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x15AE1F8", Offset = "0x15AE1F8", VA = "0x15AE1F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x15AE1FC", Offset = "0x15AE1FC", VA = "0x15AE1FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x15AE2B4", Offset = "0x15AE2B4", VA = "0x15AE2B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<cTimedEventListener> listeners;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<TimeEventDelegate> listenerDelegates;

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x15ADA10", Offset = "0x15ADA10", VA = "0x15ADA10")]
	public void Raise(float time)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x15ADA94", Offset = "0x15ADA94", VA = "0x15ADA94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F58E4", Offset = "0x8F58E4")]
	private IEnumerator StartTimer(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x15ADB44", Offset = "0x15ADB44", VA = "0x15ADB44")]
	private void ActuallyRaise()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x15ADF48", Offset = "0x15ADF48", VA = "0x15ADF48")]
	public void RegisterListener(cTimedEventListener listener)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x15ADFEC", Offset = "0x15ADFEC", VA = "0x15ADFEC")]
	public void RegisterDelegate(TimeEventDelegate timedEventDelegate)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x15AE090", Offset = "0x15AE090", VA = "0x15AE090")]
	public void UnregisterListener(cTimedEventListener listener)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x15AE0F8", Offset = "0x15AE0F8", VA = "0x15AE0F8")]
	public void UnregisterDelegate(TimeEventDelegate timedEventDelegate)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x15AE160", Offset = "0x15AE160", VA = "0x15AE160")]
	public sTimedEvent()
	{
	}
}
[Token(Token = "0x200015C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE128", Offset = "0x8DE128")]
public class sGameSequence : ScriptableObject
{
	[Token(Token = "0x2000457")]
	public class GameSequenceEvent : UnityEvent<sGameSequence>
	{
		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x15AC288", Offset = "0x15AC288", VA = "0x15AC288")]
		public GameSequenceEvent()
		{
		}
	}

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<sGameStep> steps;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<sGameSequence> _prerequisites;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<sGameSequence> _dependents;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<sGameSequence> _invalidates;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameSequenceEvent sequenceFinishedEvent;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameSequenceEvent sequenceInvalidatedEvent;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E858C", Offset = "0x8E858C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E858C", Offset = "0x8E858C")]
	[SerializeField]
	private SOGameEvent sequenceStarted;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEvent sequenceStartedUE;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent sequenceFinished;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent sequenceFinishedUE;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E861C", Offset = "0x8E861C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E861C", Offset = "0x8E861C")]
	[SerializeField]
	private bool complete;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	private bool invalid;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private sGameStep activeStep;

	[Token(Token = "0x17000050")]
	public bool isComplete
	{
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x15AB8D4", Offset = "0x15AB8D4", VA = "0x15AB8D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000051")]
	public List<sGameSequence> prerequisites
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0x15AB8DC", Offset = "0x15AB8DC", VA = "0x15AB8DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public List<sGameSequence> dependents
	{
		[Token(Token = "0x600094A")]
		[Address(RVA = "0x15AB8E4", Offset = "0x15AB8E4", VA = "0x15AB8E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public List<sGameSequence> invalidates
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0x15AB8EC", Offset = "0x15AB8EC", VA = "0x15AB8EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x15AB8F4", Offset = "0x15AB8F4", VA = "0x15AB8F4")]
	public void Init()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x15AB998", Offset = "0x15AB998", VA = "0x15AB998")]
	public void BeginSequence()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x15ABC6C", Offset = "0x15ABC6C", VA = "0x15ABC6C")]
	public void EndSequence()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x15ABCE0", Offset = "0x15ABCE0", VA = "0x15ABCE0")]
	public void InvalidateSequence()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x15ABE58", Offset = "0x15ABE58", VA = "0x15ABE58")]
	public void NextStep()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x15ABFD0", Offset = "0x15ABFD0", VA = "0x15ABFD0")]
	public bool CanBegin()
	{
		return default(bool);
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x15ABEFC", Offset = "0x15ABEFC", VA = "0x15ABEFC")]
	private sGameStep GetNextActiveStep()
	{
		return null;
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x15AC0B0", Offset = "0x15AC0B0", VA = "0x15AC0B0")]
	public string getActiveStep()
	{
		return null;
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x15AC188", Offset = "0x15AC188", VA = "0x15AC188")]
	public sGameSequence()
	{
	}
}
[Token(Token = "0x200015D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE16C", Offset = "0x8DE16C")]
public class sGameStep : ScriptableObject
{
	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public SOGameEvent triggerEvent;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public SOInputEvent triggerInputEvent;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool timedStep;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float timerValue;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SOInputEvent.InputEventDelegate triggerInputDelegate;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SOGameEvent.GameEventDelegate triggerDelegate;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent stepTriggeredUE;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E86EC", Offset = "0x8E86EC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E86EC", Offset = "0x8E86EC")]
	[SerializeField]
	private SOGameEvent stepStarted;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEvent stepStartedUE;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent stepFinished;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent stepFinishedUE;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E877C", Offset = "0x8E877C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E877C", Offset = "0x8E877C")]
	[SerializeField]
	private bool complete;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	private bool invalid;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private sGameSequence parentSequence;

	[Token(Token = "0x17000054")]
	public bool isComplete
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0x15AC2D8", Offset = "0x15AC2D8", VA = "0x15AC2D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x15AB990", Offset = "0x15AB990", VA = "0x15AB990")]
	public void Init()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x15ABAA8", Offset = "0x15ABAA8", VA = "0x15ABAA8")]
	public void BeginStep(sGameSequence parentSequence)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x15AC2E0", Offset = "0x15AC2E0", VA = "0x15AC2E0")]
	public void EndStep()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x15ABD9C", Offset = "0x15ABD9C", VA = "0x15ABD9C")]
	public void InvalidateStep()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x15AC3D0", Offset = "0x15AC3D0", VA = "0x15AC3D0")]
	public void StepTriggered(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x15AC3D4", Offset = "0x15AC3D4", VA = "0x15AC3D4")]
	public void StepTriggered()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x15AC408", Offset = "0x15AC408", VA = "0x15AC408")]
	public void PlayAudioClip(AudioClip clip)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x15AC45C", Offset = "0x15AC45C", VA = "0x15AC45C")]
	public sGameStep()
	{
	}
}
[Token(Token = "0x200015E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE1B0", Offset = "0x8DE1B0")]
public class sBool : ScriptableObject
{
	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isTrue;

	[Token(Token = "0x17000055")]
	public bool IsTrue
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0x15AADBC", Offset = "0x15AADBC", VA = "0x15AADBC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000960")]
		[Address(RVA = "0x15AADC4", Offset = "0x15AADC4", VA = "0x15AADC4")]
		set
		{
		}
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x15AADB0", Offset = "0x15AADB0", VA = "0x15AADB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x15AADD0", Offset = "0x15AADD0", VA = "0x15AADD0")]
	public sBool()
	{
	}
}
[Token(Token = "0x200015F")]
public abstract class SOInputHandler : ScriptableObject
{
	[Token(Token = "0x2000458")]
	public enum Hand
	{
		[Token(Token = "0x4001C7D")]
		Left,
		[Token(Token = "0x4001C7E")]
		Right
	}

	[Token(Token = "0x6000962")]
	public abstract Vector3 GetDevicePosition(Hand hand);

	[Token(Token = "0x6000963")]
	public abstract Quaternion GetDeviceRotation(Hand hand);

	[Token(Token = "0x6000964")]
	public abstract Vector3 GetDeviceVelocity(Hand hand);

	[Token(Token = "0x6000965")]
	public abstract Vector3 GetDeviceAngularVelocity(Hand hand);

	[Token(Token = "0x6000966")]
	public abstract bool GetAnyButtonDown();

	[Token(Token = "0x6000967")]
	public abstract bool GetAnyButton();

	[Token(Token = "0x6000968")]
	public abstract bool GetTrigger(Hand hand);

	[Token(Token = "0x6000969")]
	public abstract bool GetTriggerDown(Hand hand);

	[Token(Token = "0x600096A")]
	public abstract bool GetTriggerUp(Hand hand);

	[Token(Token = "0x600096B")]
	public abstract float GetTriggerValue(Hand hand);

	[Token(Token = "0x600096C")]
	public abstract bool GetTriggerTouch(Hand hand);

	[Token(Token = "0x600096D")]
	public abstract bool GetGrabButton(Hand hand);

	[Token(Token = "0x600096E")]
	public abstract bool GetGrabButtonDown(Hand hand);

	[Token(Token = "0x600096F")]
	public abstract bool GetGrabButtonUp(Hand hand);

	[Token(Token = "0x6000970")]
	public abstract float GetGrabButtonFloat(Hand hand);

	[Token(Token = "0x6000971")]
	public abstract bool GetGrabButtonTouch(Hand hand);

	[Token(Token = "0x6000972")]
	public abstract bool GetFaceButton1(Hand hand);

	[Token(Token = "0x6000973")]
	public abstract bool GetFaceButton1Down(Hand hand);

	[Token(Token = "0x6000974")]
	public abstract bool GetFaceButton1Up(Hand hand);

	[Token(Token = "0x6000975")]
	public abstract bool GetFaceButton1Touch(Hand hand);

	[Token(Token = "0x6000976")]
	public abstract bool GetFaceButton2(Hand hand);

	[Token(Token = "0x6000977")]
	public abstract bool GetFaceButton2Down(Hand hand);

	[Token(Token = "0x6000978")]
	public abstract bool GetFaceButton2Up(Hand hand);

	[Token(Token = "0x6000979")]
	public abstract bool GetFaceButton2Touch(Hand hand);

	[Token(Token = "0x600097A")]
	public abstract float GetThumbstickXAxis(Hand hand);

	[Token(Token = "0x600097B")]
	public abstract float GetThumbstickYAxis(Hand hand);

	[Token(Token = "0x600097C")]
	public abstract Vector2 GetThumbstickAxis(Hand hand);

	[Token(Token = "0x600097D")]
	public abstract bool GetThumbstick(Hand hand);

	[Token(Token = "0x600097E")]
	public abstract bool GetThumbstickDown(Hand hand);

	[Token(Token = "0x600097F")]
	public abstract bool GetThumbstickUp(Hand hand);

	[Token(Token = "0x6000980")]
	public abstract bool GetThumbstickTouch(Hand hand);

	[Token(Token = "0x6000981")]
	public abstract bool GetMenuButton(Hand hand);

	[Token(Token = "0x6000982")]
	public abstract bool GetMenuButtonDown(Hand hand);

	[Token(Token = "0x6000983")]
	public abstract bool GetMenuButtonUp(Hand hand);

	[Token(Token = "0x6000984")]
	public abstract bool BeginHaptics(float freq, float amp, Hand hand);

	[Token(Token = "0x6000985")]
	public abstract bool EndHaptics(Hand hand);

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xC33158", Offset = "0xC33158", VA = "0xC33158")]
	protected SOInputHandler()
	{
	}
}
[Token(Token = "0x2000160")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE1FC", Offset = "0x8DE1FC")]
public class sBasicScene : ScriptableObject
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SceneLevel sceneLevel;

	[Token(Token = "0x17000056")]
	public SceneLevel scene
	{
		[Token(Token = "0x6000987")]
		[Address(RVA = "0x15AADA0", Offset = "0x15AADA0", VA = "0x15AADA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x15AADA8", Offset = "0x15AADA8", VA = "0x15AADA8")]
	public sBasicScene()
	{
	}
}
[Token(Token = "0x2000161")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE250", Offset = "0x8DE250")]
public class SOFeylands : SOSceneManager
{
	[Token(Token = "0x6000989")]
	[Address(RVA = "0xC31D70", Offset = "0xC31D70", VA = "0xC31D70")]
	public SOFeylands()
	{
	}
}
[Token(Token = "0x2000162")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE2A4", Offset = "0x8DE2A4")]
public class SOGarbageScene : SOSceneManager
{
	[Token(Token = "0x600098A")]
	[Address(RVA = "0xC3263C", Offset = "0xC3263C", VA = "0xC3263C")]
	public SOGarbageScene()
	{
	}
}
[Token(Token = "0x2000163")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE2F8", Offset = "0x8DE2F8")]
public class SOMainMenu : SOSceneManager
{
	[Token(Token = "0x600098B")]
	[Address(RVA = "0xC33160", Offset = "0xC33160", VA = "0xC33160")]
	public SOMainMenu()
	{
	}
}
[Token(Token = "0x2000164")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE34C", Offset = "0x8DE34C")]
public class SOMaterialWorld : SOSceneManager
{
	[Token(Token = "0x600098C")]
	[Address(RVA = "0xC33164", Offset = "0xC33164", VA = "0xC33164")]
	public SOMaterialWorld()
	{
	}
}
[Token(Token = "0x2000165")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE3A0", Offset = "0x8DE3A0")]
public class SONecromancerDreamscape : SOSceneManager
{
	[Token(Token = "0x600098D")]
	[Address(RVA = "0xC33168", Offset = "0xC33168", VA = "0xC33168")]
	public SONecromancerDreamscape()
	{
	}
}
[Token(Token = "0x2000166")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE3F4", Offset = "0x8DE3F4")]
public class SOOtherwhere : SOSceneManager
{
	[Token(Token = "0x600098E")]
	[Address(RVA = "0xC3316C", Offset = "0xC3316C", VA = "0xC3316C")]
	public SOOtherwhere()
	{
	}
}
[Token(Token = "0x2000167")]
public class SOPersonalDreamscape : SOSceneManager
{
	[Token(Token = "0x600098F")]
	[Address(RVA = "0xC33170", Offset = "0xC33170", VA = "0xC33170")]
	public SOPersonalDreamscape()
	{
	}
}
[Token(Token = "0x2000168")]
public class SOPlayerScene : ScriptableObject
{
	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SceneLevel sceneLevel;

	[Token(Token = "0x17000057")]
	public SceneLevel scene
	{
		[Token(Token = "0x6000990")]
		[Address(RVA = "0xC33174", Offset = "0xC33174", VA = "0xC33174")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xC3317C", Offset = "0xC3317C", VA = "0xC3317C")]
	public SOPlayerScene()
	{
	}
}
[Serializable]
[Token(Token = "0x2000169")]
public class ObjectData
{
	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 latestPosition;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion latestRotation;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<bool> activeChildren;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int isKinematic;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int orphanStatus;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int doNotMoveOnHandShadow;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int isShadowHandable;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xEA4284", Offset = "0xEA4284", VA = "0xEA4284")]
	public ObjectData()
	{
	}
}
[Serializable]
[Token(Token = "0x200016A")]
public class SceneData
{
	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[ReadOnly]
	public DictionaryOfGuidAndObjectData internalObjectsData;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public DictionaryOfGuidAndObjectData sharedObjectsData;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public DictionaryOfGuidAndObjectData toBeTrackedSharedObjectData;

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xA834C0", Offset = "0xA834C0", VA = "0xA834C0")]
	public void IterateThroughSharedObjectsData(Action<Guid, ObjectData> action)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xA835E4", Offset = "0xA835E4", VA = "0xA835E4")]
	public bool TryGetInternalObjectData(Guid guid, out ObjectData objectData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xA83664", Offset = "0xA83664", VA = "0xA83664")]
	public bool TryGetSharedObjectData(Guid guid, out ObjectData objectData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xA836E4", Offset = "0xA836E4", VA = "0xA836E4")]
	public void AddInternalObjectData(Guid guid, ObjectData data)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xA837C4", Offset = "0xA837C4", VA = "0xA837C4")]
	public void AddSharedObjectData(Guid guid, ObjectData data)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xA838A4", Offset = "0xA838A4", VA = "0xA838A4")]
	public void AddToBeTrackedObjectData(Guid guid, ObjectData data)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xA83984", Offset = "0xA83984", VA = "0xA83984")]
	public bool ToBeTrackedObjectsContains(Guid guid)
	{
		return default(bool);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xA839F4", Offset = "0xA839F4", VA = "0xA839F4")]
	public bool ContainsSharedObject(Guid guid)
	{
		return default(bool);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xA83A64", Offset = "0xA83A64", VA = "0xA83A64")]
	public bool ContainsInternalObject(Guid guid)
	{
		return default(bool);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xA83AD4", Offset = "0xA83AD4", VA = "0xA83AD4")]
	public void UpdateSharedObject(Guid guid, ObjectData data)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xA83B54", Offset = "0xA83B54", VA = "0xA83B54")]
	public void UpdateInternalObject(Guid guid, ObjectData data)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xA83BD4", Offset = "0xA83BD4", VA = "0xA83BD4")]
	public void RemoveSharedObjectData(Guid guid)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xA83C8C", Offset = "0xA83C8C", VA = "0xA83C8C")]
	public void RemoveToBeTrackedObjectData(Guid guid)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xA83D44", Offset = "0xA83D44", VA = "0xA83D44")]
	public void CopyToBeTrackedDataToSharedData()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xA83E40", Offset = "0xA83E40", VA = "0xA83E40")]
	public void ClearToBeTrackedObjectsData()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xA83E98", Offset = "0xA83E98", VA = "0xA83E98")]
	public void CopyData(SceneData data)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xA83EC0", Offset = "0xA83EC0", VA = "0xA83EC0")]
	public void ClearData()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xA83F38", Offset = "0xA83F38", VA = "0xA83F38")]
	public bool ExistInScene(Guid guid)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xA83FD8", Offset = "0xA83FD8", VA = "0xA83FD8")]
	public SceneData()
	{
	}
}
[Token(Token = "0x200016B")]
public abstract class SOSceneManager : ScriptableObject
{
	[Token(Token = "0x2000459")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF9B0", Offset = "0x8DF9B0")]
	private sealed class <>c__DisplayClass54_0
	{
		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Guid> persistentObjectsGuids;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> toBeAdded;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SOSceneManager <>4__this;

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xC34B20", Offset = "0xC34B20", VA = "0xC34B20")]
		public <>c__DisplayClass54_0()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xC35480", Offset = "0xC35480", VA = "0xC35480")]
		internal void <LoadSceneData>b__0(Guid key, ObjectData data)
		{
		}
	}

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SceneLevel sceneLevel;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Cubemap sceneCubeMap;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Texture2D sceneTex2D;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color primaryColor;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color secondaryColor;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Color tertiaryColor;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> persistentObjects;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected bool isLoaded;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	protected bool beenVisited;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent flowReachedEvent;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float fmodAudioParameter;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private int sceneID;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SceneData sceneData;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isUnlocked;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SOSceneManager lightProbeScene;

	[Token(Token = "0x17000058")]
	public SceneData SceneData
	{
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xC33184", Offset = "0xC33184", VA = "0xC33184")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public float FmodAudioParameter
	{
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xC331A8", Offset = "0xC331A8", VA = "0xC331A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005A")]
	public int SceneID
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xC331B0", Offset = "0xC331B0", VA = "0xC331B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005B")]
	public SceneLevel scene
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xC331B8", Offset = "0xC331B8", VA = "0xC331B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public bool IsLoaded
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xC331C0", Offset = "0xC331C0", VA = "0xC331C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xC331C8", Offset = "0xC331C8", VA = "0xC331C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public bool IsUnlocked
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xC331D4", Offset = "0xC331D4", VA = "0xC331D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	public bool BeenVisited
	{
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xC331DC", Offset = "0xC331DC", VA = "0xC331DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xC331E4", Offset = "0xC331E4", VA = "0xC331E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public Color PrimaryColor
	{
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xC333C8", Offset = "0xC333C8", VA = "0xC333C8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000060")]
	public Color SecondaryColor
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xC333D4", Offset = "0xC333D4", VA = "0xC333D4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000061")]
	public Color TertiaryColor
	{
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xC333E0", Offset = "0xC333E0", VA = "0xC333E0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xC3318C", Offset = "0xC3318C", VA = "0xC3318C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5948", Offset = "0x8F5948")]
	public void ClearSceneData()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xC331F0", Offset = "0xC331F0", VA = "0xC331F0")]
	public Cubemap GetCubemap()
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xC332DC", Offset = "0xC332DC", VA = "0xC332DC")]
	public Texture2D GetTex2D()
	{
		return null;
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xC333EC", Offset = "0xC333EC", VA = "0xC333EC")]
	public void AddObjectToScene(GameObject objectToAdd)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xC335FC", Offset = "0xC335FC", VA = "0xC335FC")]
	public void AddObjectsToScene(GameObject[] objectsToAdd)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xC336F0", Offset = "0xC336F0", VA = "0xC336F0")]
	public void ClearSceneObjects()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xC33748", Offset = "0xC33748", VA = "0xC33748")]
	public void DeletePersistentObjects()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xC33810", Offset = "0xC33810", VA = "0xC33810")]
	public void RemoveObjectFromScene(GameObject objectToRemove)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xC33AA8", Offset = "0xC33AA8", VA = "0xC33AA8")]
	public int GetNumberOfPersistentObjects()
	{
		return default(int);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xC33AFC", Offset = "0xC33AFC", VA = "0xC33AFC")]
	public List<GameObject> GetPersistentObjects()
	{
		return null;
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xC33594", Offset = "0xC33594", VA = "0xC33594")]
	public bool IsPersistentObjectInScene(GameObject objectToCheckFor)
	{
		return default(bool);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xC33B04", Offset = "0xC33B04", VA = "0xC33B04")]
	public void Unlock()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xC33B10", Offset = "0xC33B10", VA = "0xC33B10")]
	public void Lock()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xC33B18", Offset = "0xC33B18", VA = "0xC33B18")]
	private void SaveObjectData(GameObject gameObject, bool isInternalObject)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xC33F7C", Offset = "0xC33F7C", VA = "0xC33F7C")]
	public void SaveSceneData()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xC33FA0", Offset = "0xC33FA0", VA = "0xC33FA0")]
	private void SaveInternalObjects()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xC34180", Offset = "0xC34180", VA = "0xC34180")]
	private void SaveSharedObjects()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xC3434C", Offset = "0xC3434C", VA = "0xC3434C")]
	public void LoadSceneData(SceneData newSceneData)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xC34B28", Offset = "0xC34B28", VA = "0xC34B28")]
	private void UpdateObjectWithData(GameObject toBeUpdated, ObjectData newData)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xC34D88", Offset = "0xC34D88", VA = "0xC34D88")]
	public void AddToBeTrackedObjectData(GameObject toBeAddedObject)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xC35020", Offset = "0xC35020", VA = "0xC35020")]
	public void TurnOffRootGameObjectsInScene()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xC3521C", Offset = "0xC3521C", VA = "0xC3521C")]
	public void TurnOnRootGameObjectsInScene()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xC351E0", Offset = "0xC351E0", VA = "0xC351E0")]
	private GameObject[] GetRootGameObjects()
	{
		return null;
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xC35428", Offset = "0xC35428", VA = "0xC35428")]
	public void MoveObjectBetweenScenes(GameObject objectToMove, SOSceneManager sceneToEndUpIn)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xC35470", Offset = "0xC35470", VA = "0xC35470")]
	public void RaiseFlowReachedEvent()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xC31D74", Offset = "0xC31D74", VA = "0xC31D74")]
	protected SOSceneManager()
	{
	}
}
[Token(Token = "0x200016C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE448", Offset = "0x8DE448")]
public class SOShadowrealm : SOSceneManager
{
	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xC359CC", Offset = "0xC359CC", VA = "0xC359CC")]
	public SOShadowrealm()
	{
	}
}
[Token(Token = "0x200016D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE49C", Offset = "0x8DE49C")]
public class SOSkybridge : SOSceneManager
{
	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xC359D0", Offset = "0xC359D0", VA = "0xC359D0")]
	public SOSkybridge()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE4F0", Offset = "0x8DE4F0")]
public class SOStarfell : SOSceneManager
{
	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E891C", Offset = "0x8E891C")]
	private bool <starfellCageBroken>k__BackingField;

	[Token(Token = "0x17000062")]
	public bool starfellCageBroken
	{
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xC359F4", Offset = "0xC359F4", VA = "0xC359F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5958", Offset = "0x8F5958")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xC359FC", Offset = "0xC359FC", VA = "0xC359FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5968", Offset = "0x8F5968")]
		set
		{
		}
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xC35A08", Offset = "0xC35A08", VA = "0xC35A08")]
	public SOStarfell()
	{
	}
}
[Token(Token = "0x200016F")]
public class SOTutorialDreamscape : SOSceneManager
{
	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xC35A0C", Offset = "0xC35A0C", VA = "0xC35A0C")]
	public SOTutorialDreamscape()
	{
	}
}
[Token(Token = "0x2000170")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE544", Offset = "0x8DE544")]
public class SOTutorialIntro : SOSceneManager
{
	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xC35A10", Offset = "0xC35A10", VA = "0xC35A10")]
	public SOTutorialIntro()
	{
	}
}
[Token(Token = "0x2000171")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE598", Offset = "0x8DE598")]
public class SOUnderworld : SOSceneManager
{
	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xC35A14", Offset = "0xC35A14", VA = "0xC35A14")]
	public SOUnderworld()
	{
	}
}
[Token(Token = "0x2000172")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE5EC", Offset = "0x8DE5EC")]
public class SOSnapID : ScriptableObject
{
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string itemOnThis;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject itemOnThisGO;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool occupied;

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xC359D4", Offset = "0xC359D4", VA = "0xC359D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xC359E0", Offset = "0xC359E0", VA = "0xC359E0")]
	public void clearSnapID()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xC359EC", Offset = "0xC359EC", VA = "0xC359EC")]
	public SOSnapID()
	{
	}
}
[Token(Token = "0x2000173")]
public class cChangeWeather : cSpell
{
	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private soVOEvent firstCastVO;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool onCooldown;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOGameEvent controlWeatherCastEvent;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float cooldownTime;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private cSoundEffect controlWeatherCastSound;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private cSoundEffect controlWeatherUnderworld;

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xA97C28", Offset = "0xA97C28", VA = "0xA97C28", Slot = "8")]
	public override void SelectSpell()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xA97C30", Offset = "0xA97C30", VA = "0xA97C30", Slot = "12")]
	public override void CastSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xA97D80", Offset = "0xA97D80", VA = "0xA97D80", Slot = "13")]
	public override void CancelSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xA97D88", Offset = "0xA97D88", VA = "0xA97D88")]
	public void ResetCooldown()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xA97D90", Offset = "0xA97D90", VA = "0xA97D90")]
	public cChangeWeather()
	{
	}
}
[Token(Token = "0x2000174")]
public class cCommune : cSpell
{
	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private cCommunable potentialCommunable;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private cCommunable communed;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform rightHand;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform leftHand;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float hitDistance;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 hitPoint;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float shGrabbedDistance;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private float targetRadius;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isPrimed;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private SOInputHandler.Hand side;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject communeIndicator;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private LineRenderer communeLine;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isLineVisible;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float maxCommuneDistance;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float minDistanceToSnapToCommune;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool alreadyCast;

	[Token(Token = "0x17000063")]
	public SOInputHandler.Hand GetSide
	{
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xA9A0A8", Offset = "0xA9A0A8", VA = "0xA9A0A8")]
		get
		{
			return default(SOInputHandler.Hand);
		}
	}

	[Token(Token = "0x17000064")]
	private bool isCommuned
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xA99F74", Offset = "0xA99F74", VA = "0xA99F74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xA99E88", Offset = "0xA99E88", VA = "0xA99E88", Slot = "8")]
	public override void SelectSpell()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xA99E90", Offset = "0xA99E90", VA = "0xA99E90", Slot = "12")]
	public override void CastSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xA99F48", Offset = "0xA99F48", VA = "0xA99F48", Slot = "13")]
	public override void CancelSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xA99FE4", Offset = "0xA99FE4", VA = "0xA99FE4", Slot = "10")]
	public override void PrimeSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xA9A004", Offset = "0xA9A004", VA = "0xA9A004", Slot = "11")]
	public override void UnprimeSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xA9A0B0", Offset = "0xA9A0B0", VA = "0xA9A0B0")]
	public cCommunable GetPotentialCommunable()
	{
		return null;
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xA9A0B8", Offset = "0xA9A0B8", VA = "0xA9A0B8")]
	private new void Start()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xA9A0FC", Offset = "0xA9A0FC", VA = "0xA9A0FC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xA9A39C", Offset = "0xA9A39C", VA = "0xA9A39C")]
	private void UpdateSelectedIndicator()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xA9A138", Offset = "0xA9A138", VA = "0xA9A138")]
	private void CastForTargets()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xA9A460", Offset = "0xA9A460", VA = "0xA9A460")]
	private void DisplaySelected(Vector3 position)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xA9A4D4", Offset = "0xA9A4D4", VA = "0xA9A4D4")]
	private void DisplayLineBetweenPoints(Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xA9A58C", Offset = "0xA9A58C", VA = "0xA9A58C")]
	private void DisplayMaxDistanceLine()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xA9A0DC", Offset = "0xA9A0DC", VA = "0xA9A0DC")]
	private void HideSelected()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xA9A044", Offset = "0xA9A044", VA = "0xA9A044")]
	private void HideLine()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xA9A6F8", Offset = "0xA9A6F8", VA = "0xA9A6F8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xA9A8F8", Offset = "0xA9A8F8", VA = "0xA9A8F8")]
	public cCommune()
	{
	}
}
[Token(Token = "0x2000175")]
public class cControlWeatherable : MonoBehaviour
{
	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent onControlWeatherCast;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent controlWeatherEvent;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SOGameEvent.GameEventDelegate controlWeatherDelegate;

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xAC1F94", Offset = "0xAC1F94", VA = "0xAC1F94")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xAC2018", Offset = "0xAC2018", VA = "0xAC2018")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xAC203C", Offset = "0xAC203C", VA = "0xAC203C")]
	public void ControlWeatherCast()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xAC2058", Offset = "0xAC2058", VA = "0xAC2058")]
	public cControlWeatherable()
	{
	}
}
[Token(Token = "0x2000176")]
public class cNoSpell : cSpell
{
	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xB754B0", Offset = "0xB754B0", VA = "0xB754B0")]
	public cNoSpell()
	{
	}
}
[Token(Token = "0x2000177")]
public class cShadowHand : cSpell
{
	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOInputEvent shadowHandGrabEvent;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOInputEvent shadowHandReleaseEvent;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOInputEvent shadowHandPrimedEvent;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SOInputEvent shadowHandPrimeReleasedEvent;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOGameEvent forceClosePlanarCompassEvent;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private bool rightHandShadowGrabbing;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[SerializeField]
	private bool leftHandShadowGrabbing;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SOGameEvent shadowHandUnlocked;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SOGameEvent shadowHandSelected;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private bool firstTimeSelected;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private cSoundEffect shadowCast;

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xB30BA0", Offset = "0xB30BA0", VA = "0xB30BA0", Slot = "12")]
	public override void CastSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xB30E74", Offset = "0xB30E74", VA = "0xB30E74", Slot = "15")]
	public override void UnlockSpell()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xB30E84", Offset = "0xB30E84", VA = "0xB30E84", Slot = "8")]
	public override void SelectSpell()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xB30F00", Offset = "0xB30F00", VA = "0xB30F00")]
	public void StartShadowHandTutorial()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xB31070", Offset = "0xB31070", VA = "0xB31070", Slot = "13")]
	public override void CancelSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xB3109C", Offset = "0xB3109C", VA = "0xB3109C", Slot = "10")]
	public override void PrimeSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xB310F8", Offset = "0xB310F8", VA = "0xB310F8", Slot = "11")]
	public override void UnprimeSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xB30C38", Offset = "0xB30C38", VA = "0xB30C38")]
	public void SetHandGrabbing(SOInputHandler.Hand hand, bool isGrabbing)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xB30C1C", Offset = "0xB30C1C", VA = "0xB30C1C")]
	public bool GetHandReady(SOInputHandler.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xB31154", Offset = "0xB31154", VA = "0xB31154")]
	public cShadowHand()
	{
	}
}
[Token(Token = "0x2000178")]
public class cSpell : MonoBehaviour
{
	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject spellSelectedEffect;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject spellPrimedEffectR;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject spellPrimedEffectL;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject spellCastEffect;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private sSpellSequence spellSequence;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private cSpellOption spellSphere;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent spellUnlockedEvent;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SkinnedMeshRenderer leftHandSkinnedMesh;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SkinnedMeshRenderer rightHandSkinnedMesh;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isLocked;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color spellColour;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cSpell currentlySelected;

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xB3B190", Offset = "0xB3B190", VA = "0xB3B190")]
	public void Start()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xB3B2B8", Offset = "0xB3B2B8", VA = "0xB3B2B8", Slot = "4")]
	public virtual void SetPrimedEffect(SOInputHandler.Hand hand, bool isOn)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xB3B3B0", Offset = "0xB3B3B0", VA = "0xB3B3B0", Slot = "5")]
	public virtual void SetCastEffect(bool isOn)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xB3B458", Offset = "0xB3B458", VA = "0xB3B458", Slot = "6")]
	public virtual void SetSelectedEffect(bool isOn)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xB3B500", Offset = "0xB3B500", VA = "0xB3B500", Slot = "7")]
	public virtual cSpellOption GetSpellSphere()
	{
		return null;
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xB30EF0", Offset = "0xB30EF0", VA = "0xB30EF0", Slot = "8")]
	public virtual void SelectSpell()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xB3B508", Offset = "0xB3B508", VA = "0xB3B508", Slot = "9")]
	public virtual void UnselectSpell()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xB310E8", Offset = "0xB310E8", VA = "0xB310E8", Slot = "10")]
	public virtual void PrimeSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xB31144", Offset = "0xB31144", VA = "0xB31144", Slot = "11")]
	public virtual void UnprimeSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xB30C50", Offset = "0xB30C50", VA = "0xB30C50", Slot = "12")]
	public virtual void CastSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xB3B518", Offset = "0xB3B518", VA = "0xB3B518", Slot = "13")]
	public virtual void CancelSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xB3B528", Offset = "0xB3B528", VA = "0xB3B528", Slot = "14")]
	public virtual void DisableAll()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xB30E7C", Offset = "0xB30E7C", VA = "0xB30E7C", Slot = "15")]
	public virtual void UnlockSpell()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xB3B594", Offset = "0xB3B594", VA = "0xB3B594", Slot = "16")]
	public virtual void LockSpell()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xB3115C", Offset = "0xB3115C", VA = "0xB3115C")]
	public cSpell()
	{
	}
}
[Token(Token = "0x2000179")]
public class cSpellGems : MonoBehaviour
{
	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color[] spellColours;

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xB3B5A0", Offset = "0xB3B5A0", VA = "0xB3B5A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xB3B5F8", Offset = "0xB3B5F8", VA = "0xB3B5F8")]
	private void ChangeGemColour(Color spellColour)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xB3B6B4", Offset = "0xB3B6B4", VA = "0xB3B6B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xB3B7BC", Offset = "0xB3B7BC", VA = "0xB3B7BC")]
	public cSpellGems()
	{
	}
}
[Token(Token = "0x200017A")]
public class cSpellManager : MonoBehaviour
{
	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool lockAllSpellsAtStart;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public cRayOfFire rayOfFire;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public cCommune commune;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public cShadowHand shadowHand;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public cChangeWeather changeWeather;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public cNoSpell noSpell;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public cSpell[] spells;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private cSpell selectedSpell;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOInputEvent spellPrimePressedEvent;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOInputEvent spellPrimeReleasedEvent;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SOInputEvent.InputEventDelegate spellPrimePressedDelegate;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SOInputEvent.InputEventDelegate spellPrimeReleasedDelegate;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOInputEvent spellCastPressedEvent;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOInputEvent spellCastReleasedEvent;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SOInputEvent.InputEventDelegate spellCastPressedDelegate;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SOInputEvent.InputEventDelegate spellCastReleasedDelegate;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOGameEvent LockAllSpellsEvent;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate LockAllSpellsDelegate;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SOGameEvent UnlockAllSpellsEvent;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate UnlockAllSpellsDelegate;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cSpellManager Instance;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private cPlanarCompass compass;

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xB3B928", Offset = "0xB3B928", VA = "0xB3B928")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xB3B9F4", Offset = "0xB3B9F4", VA = "0xB3B9F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xB3BD14", Offset = "0xB3BD14", VA = "0xB3BD14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xB3BE18", Offset = "0xB3BE18", VA = "0xB3BE18")]
	public void EquipShadowHandIfUnlocked()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xB3BE54", Offset = "0xB3BE54", VA = "0xB3BE54")]
	public void EquipShadowHand()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xB3C010", Offset = "0xB3C010", VA = "0xB3C010")]
	private void SpellPrimePressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xB3C124", Offset = "0xB3C124", VA = "0xB3C124")]
	private void SpellPrimeReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xB3C144", Offset = "0xB3C144", VA = "0xB3C144")]
	private void SpellCastPressed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xB3C270", Offset = "0xB3C270", VA = "0xB3C270")]
	private void SpellCastReleased(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xB3C294", Offset = "0xB3C294", VA = "0xB3C294")]
	public void SelectSpell(cSpell spellToSelect)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xB3C2C0", Offset = "0xB3C2C0", VA = "0xB3C2C0")]
	public void ClearSelectedSpell()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xB3C250", Offset = "0xB3C250", VA = "0xB3C250")]
	public void CastSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xB3C2C8", Offset = "0xB3C2C8", VA = "0xB3C2C8")]
	public void LockAllSpells()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xB3C340", Offset = "0xB3C340", VA = "0xB3C340")]
	public void UnlockAllSpells()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xB3C3A0", Offset = "0xB3C3A0", VA = "0xB3C3A0")]
	public void CheckForLockedSpells()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xB3C014", Offset = "0xB3C014", VA = "0xB3C014")]
	private void PrimeSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xB3C460", Offset = "0xB3C460", VA = "0xB3C460")]
	public void UpdateLockedSpells()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xB3C510", Offset = "0xB3C510", VA = "0xB3C510")]
	public cSpell GetSelectedSpell()
	{
		return null;
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xB3C518", Offset = "0xB3C518", VA = "0xB3C518")]
	public cSpell GetSpellFromSequence(sSpellSequence sequence)
	{
		return null;
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xB3C5EC", Offset = "0xB3C5EC", VA = "0xB3C5EC", Slot = "4")]
	public virtual void SpellUnlocked(cSpell unlockedSpell)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xB3C618", Offset = "0xB3C618", VA = "0xB3C618")]
	public void UnlockSpell(cSpell spellToUnlock)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xB3C644", Offset = "0xB3C644", VA = "0xB3C644")]
	public cSpellManager()
	{
	}
}
[Token(Token = "0x200017B")]
public class cSpellOption : MonoBehaviour
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject selectedIndicator;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer selectedIndicatorRenderer;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private cSpellManager spellManager;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private cSpell spellChoice;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static cSpellOption previouslySelected;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool selected;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	[SerializeField]
	private string selectedSound;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EventInstance selectedSoundInstance;

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xB3C64C", Offset = "0xB3C64C", VA = "0xB3C64C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xB3C700", Offset = "0xB3C700", VA = "0xB3C700")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xB3C7E0", Offset = "0xB3C7E0", VA = "0xB3C7E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xB3C6B0", Offset = "0xB3C6B0", VA = "0xB3C6B0")]
	private void UpdateSpellSphereColour()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xB3C8B0", Offset = "0xB3C8B0", VA = "0xB3C8B0")]
	public void Select()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xB3CA78", Offset = "0xB3CA78", VA = "0xB3CA78")]
	public void Unselect()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xB3CB2C", Offset = "0xB3CB2C", VA = "0xB3CB2C")]
	public cSpell GetSpellChoice()
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xB3C9A8", Offset = "0xB3C9A8", VA = "0xB3C9A8")]
	private void PlaySelectedSound()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xB3CB34", Offset = "0xB3CB34", VA = "0xB3CB34")]
	public cSpellOption()
	{
	}
}
[Token(Token = "0x200017C")]
public class cSpellOrb : MonoBehaviour
{
	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public UnityEvent spellLearnedEvent;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public cSpell typeOfThisSpell;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public sBool spellLearned;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool planarCompassSpellOrb;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector3 initialPosition;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion initialRotation;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool hasBeenReleased;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float floatSpeed;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float thresholdForFloat;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool blockEquip;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ParticleSystem pullOrbParticles;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ParticleSystem equippedParticles;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private cSoundEffect grabbedSoundEvent;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private cSoundEffect equippedSoundEvent;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xB3CB3C", Offset = "0xB3CB3C", VA = "0xB3CB3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xB3CBD8", Offset = "0xB3CBD8", VA = "0xB3CBD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xB3CC38", Offset = "0xB3CC38", VA = "0xB3CC38")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xB3CE78", Offset = "0xB3CE78", VA = "0xB3CE78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xB3D15C", Offset = "0xB3D15C", VA = "0xB3D15C")]
	public void BlockEquip()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xB3D168", Offset = "0xB3D168", VA = "0xB3D168")]
	public void EnableEquip()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xB3D170", Offset = "0xB3D170", VA = "0xB3D170")]
	public void OrbReleased()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xB3D198", Offset = "0xB3D198", VA = "0xB3D198")]
	public void PlayOrbPullEffects()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xB3D1B4", Offset = "0xB3D1B4", VA = "0xB3D1B4")]
	public cSpellOrb()
	{
	}
}
[Token(Token = "0x200017D")]
public class cSpellOrbChecker : MonoBehaviour
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cSpell typeOfThisSpell;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public GameObject spellOrbReference;

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xB3D1CC", Offset = "0xB3D1CC", VA = "0xB3D1CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xB3D228", Offset = "0xB3D228", VA = "0xB3D228")]
	public cSpellOrbChecker()
	{
	}
}
[Token(Token = "0x200017E")]
public class cSpellOrbCollider : MonoBehaviour
{
	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xB3D230", Offset = "0xB3D230", VA = "0xB3D230")]
	public cSpellOrbCollider()
	{
	}
}
[Token(Token = "0x200017F")]
public class cObjectPool : MonoBehaviour
{
	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Queue<GameObject> objectPool;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject prefabToPool;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int poolSize;

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xB754B8", Offset = "0xB754B8", VA = "0xB754B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xB755E0", Offset = "0xB755E0", VA = "0xB755E0")]
	public GameObject SpawnFromPool(Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xB756FC", Offset = "0xB756FC", VA = "0xB756FC")]
	public void DeactivateAllScorchMarks()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xB757BC", Offset = "0xB757BC", VA = "0xB757BC")]
	public cObjectPool()
	{
	}
}
[Token(Token = "0x2000180")]
public class cRayOfFire : cSpell
{
	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private cRayOfFireBeam rightHandRay;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private cRayOfFireBeam leftHandRay;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float maxRayOfFireDistance;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private soVOEvent firstTimeVO;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private soVOEvent coolVO;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private cSoundEffect rayCastSound;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool wasCasting;

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xB03FE8", Offset = "0xB03FE8", VA = "0xB03FE8", Slot = "8")]
	public override void SelectSpell()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xB03FF0", Offset = "0xB03FF0", VA = "0xB03FF0", Slot = "10")]
	public override void PrimeSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xB03FF8", Offset = "0xB03FF8", VA = "0xB03FF8", Slot = "11")]
	public override void UnprimeSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xB040B8", Offset = "0xB040B8", VA = "0xB040B8", Slot = "12")]
	public override void CastSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xB0420C", Offset = "0xB0420C", VA = "0xB0420C", Slot = "13")]
	public override void CancelSpell(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xB04030", Offset = "0xB04030", VA = "0xB04030")]
	private void PlayAudio()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xB042F8", Offset = "0xB042F8", VA = "0xB042F8")]
	public cRayOfFire()
	{
	}
}
[Token(Token = "0x2000181")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DE63C", Offset = "0x8DE63C")]
public class cRayOfFireBeam : MonoBehaviour
{
	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform rayOrigin;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float maxRayDistance;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float rayForce;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float upwardsDamping;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem emberParticles;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem smokeParticles;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject effectObject;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject effectHitObject;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRend;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8E84", Offset = "0x8E8E84")]
	private bool <IsFiring>k__BackingField;

	[Token(Token = "0x17000065")]
	public bool IsFiring
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xB04308", Offset = "0xB04308", VA = "0xB04308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5978", Offset = "0x8F5978")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xB04310", Offset = "0xB04310", VA = "0xB04310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5988", Offset = "0x8F5988")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xB0431C", Offset = "0xB0431C", VA = "0xB0431C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xB04120", Offset = "0xB04120", VA = "0xB04120")]
	public void ShootRayOfFire()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xB04268", Offset = "0xB04268", VA = "0xB04268")]
	public void StopRayOfFire()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xB043AC", Offset = "0xB043AC", VA = "0xB043AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xB043BC", Offset = "0xB043BC", VA = "0xB043BC")]
	private void CastRay()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xB047B0", Offset = "0xB047B0", VA = "0xB047B0")]
	private void StopRay()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xB04824", Offset = "0xB04824", VA = "0xB04824")]
	private void HandleHit(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xB04B7C", Offset = "0xB04B7C", VA = "0xB04B7C")]
	public cRayOfFireBeam()
	{
	}
}
[Token(Token = "0x2000182")]
public class cRestartParticlesOnReenable : MonoBehaviour
{
	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particles;

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xB05288", Offset = "0xB05288", VA = "0xB05288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xB052E0", Offset = "0xB052E0", VA = "0xB052E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xB05370", Offset = "0xB05370", VA = "0xB05370")]
	public cRestartParticlesOnReenable()
	{
	}
}
[Token(Token = "0x2000183")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DE6A0", Offset = "0x8DE6A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DE6A0", Offset = "0x8DE6A0")]
public class cShadowHandable : MonoBehaviour
{
	[Token(Token = "0x200045A")]
	public enum Axis
	{
		[Token(Token = "0x4001C83")]
		x,
		[Token(Token = "0x4001C84")]
		y,
		[Token(Token = "0x4001C85")]
		z,
		[Token(Token = "0x4001C86")]
		xy,
		[Token(Token = "0x4001C87")]
		yz,
		[Token(Token = "0x4001C88")]
		xz,
		[Token(Token = "0x4001C89")]
		all
	}

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool kinematicOnGrab;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool doNotMoveOnShadowHand;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool doNotAllowThumbstickControl;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool doNotRotate;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool _isShadowHandable;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool applyVelocityOnRelease;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[SerializeField]
	private bool applyAngularVelocityOnRelease;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[SerializeField]
	private bool restrictMovement;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cShadowHandRestriction restrictions;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool ogKinematicState;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool ogGravityState;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigidboddeh;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private cShadowHandNotSpell grabber;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent ShadowHandGrabbedEvent;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UnityEvent ShadowHandReleasedEvent;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Vector3> recordedVelocities;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> recordedAngularVelocities;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int framesBeforeThrow;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private int framesAfterThrow;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float velocityMultiplier;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float angularVelocityMultiplier;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool lockedOnAxes;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Axis lockedAxis;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private cGrabbableRedux grabbableComponent;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> prevPositions;

	[Token(Token = "0x17000066")]
	public bool isShadowhandable
	{
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xB339C8", Offset = "0xB339C8", VA = "0xB339C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xB339D0", Offset = "0xB339D0", VA = "0xB339D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public bool isShadowHandGrabbed
	{
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xB32814", Offset = "0xB32814", VA = "0xB32814")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000068")]
	public bool isRestricted
	{
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xB33A00", Offset = "0xB33A00", VA = "0xB33A00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xB339DC", Offset = "0xB339DC", VA = "0xB339DC")]
	public bool GetDoNotRotate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xB339E4", Offset = "0xB339E4", VA = "0xB339E4")]
	public bool GetDoNotMoveOnShadowHand()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xB339EC", Offset = "0xB339EC", VA = "0xB339EC")]
	public void SetDoNotMoveOnShadowHand(bool state)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xB339F8", Offset = "0xB339F8", VA = "0xB339F8")]
	public bool GetDoNotAllowThumbstickControl()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xB32790", Offset = "0xB32790", VA = "0xB32790")]
	public cShadowHandNotSpell GetGrabbingShadowhand()
	{
		return null;
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xB33A08", Offset = "0xB33A08", VA = "0xB33A08")]
	public cGrabbableRedux GetGrabbableComponent()
	{
		return null;
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xB33A10", Offset = "0xB33A10", VA = "0xB33A10")]
	public cShadowHandRestriction GetRestrictions()
	{
		return null;
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xB33A18", Offset = "0xB33A18", VA = "0xB33A18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xB33A9C", Offset = "0xB33A9C", VA = "0xB33A9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xB33B48", Offset = "0xB33B48", VA = "0xB33B48")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xB329F8", Offset = "0xB329F8", VA = "0xB329F8")]
	public void Grabbed(cShadowHandNotSpell grabber)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xB32B2C", Offset = "0xB32B2C", VA = "0xB32B2C")]
	public void Released(cShadowHandNotSpell grabber)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xB32E98", Offset = "0xB32E98", VA = "0xB32E98")]
	public void ReleaseToGrab(cShadowHandNotSpell grabber)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xB33B4C", Offset = "0xB33B4C", VA = "0xB33B4C")]
	private void UpdateGrabbed()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xB34020", Offset = "0xB34020", VA = "0xB34020")]
	private void RecordControllerVelocity()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xB340DC", Offset = "0xB340DC", VA = "0xB340DC")]
	private void RecordControllerAngularVelocity()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xB33B88", Offset = "0xB33B88", VA = "0xB33B88")]
	private Vector3 GetAverageVelocities()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xB33EC0", Offset = "0xB33EC0", VA = "0xB33EC0")]
	private Vector3 GetAverageVelocitiesByAxis(Axis axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xB33F70", Offset = "0xB33F70", VA = "0xB33F70")]
	private Vector3 GetAverageAngularVelocitiesByAxis(Axis axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xB33D24", Offset = "0xB33D24", VA = "0xB33D24")]
	private Vector3 GetAverageAngularVelocities()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xB34198", Offset = "0xB34198", VA = "0xB34198")]
	public void SetShadowHandable(bool state)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xB341A4", Offset = "0xB341A4", VA = "0xB341A4")]
	public void ReleaseMe()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xB34238", Offset = "0xB34238", VA = "0xB34238")]
	public cShadowHandable()
	{
	}
}
[Token(Token = "0x2000184")]
public class cShadowHandNotSpell : MonoBehaviour
{
	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF9C0", Offset = "0x8DF9C0")]
	private sealed class <ShadowHandTravel>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cShadowHandNotSpell <>4__this;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <targetPosition>5__2;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <tValue>5__3;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <travelTimer>5__4;

		[Token(Token = "0x1700023C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0xB334E8", Offset = "0xB334E8", VA = "0xB334E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0xB33554", Offset = "0xB33554", VA = "0xB33554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xB32B00", Offset = "0xB32B00", VA = "0xB32B00")]
		[DebuggerHidden]
		public <ShadowHandTravel>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xB330E0", Offset = "0xB330E0", VA = "0xB330E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xB330E4", Offset = "0xB330E4", VA = "0xB330E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xB334F0", Offset = "0xB334F0", VA = "0xB334F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOInputEvent shadowHandGrabEvent;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SOInputEvent.InputEventDelegate shadowHandGrabDelegate;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOInputEvent shadowHandReleasedEvent;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SOInputEvent.InputEventDelegate shadowHandReleasedDelegate;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOInputEvent shadowHandPrimedEvent;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SOInputEvent.InputEventDelegate shadowHandPrimedDelegate;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOInputEvent shadowHandPrimedReleasedEvent;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SOInputEvent.InputEventDelegate shadowHandPrimedReleasedDelegate;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform gripTransform;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private cShadowHandable potentialShadowHandable;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private cShadowHandable shGrabbed;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody shGrabbedRigidbody;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 shGrabbedPosition;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private cShadowHandRestriction shRestrictions;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isMovementRestricted;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool lockedOnAxes;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float hitDistance;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 hitPoint;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float shGrabbedDistance;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float targetRadius;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private float trackSpeedMultiplier;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float pushPullSpeed;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool isPrimed;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool isPulling;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	private bool isPushing;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SOInputHandler.Hand side;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Transform shadowHandAnchor;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private LineRenderer shadowHandLine;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isLineVisible;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float maxGrabDistance;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float switchToGrabDistance;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private SOInputEvent grabEvent;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private SOInputEvent grabReleaseEvent;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject shadowHandVisual;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject shadowHandDefault;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject shadowHandFeylands;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject shadowHandUnderworld;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private float minDistanceToSnapToGrab;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private cGrabberRedux grabber;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private float shadowHandFromGrabDistance;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private soVOEvent firstTimeShadowHandCast;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private cShadowHandTutorial shadowHandTutorial;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private cSoundEffect shadowHandCastDefaultSound;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private Animator handAnimator;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private cHaptics hapticFeedback;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool activateBuzz;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject shadowHandTravel;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private GameObject shBurstEffect;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private GameObject shBurstEffectObject;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private MeshRenderer shTravelMesh;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 shOriginalPosition;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float maxTravelTime;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float shadowHandTravelLimit;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private bool isHandTravelling;

	[Token(Token = "0x17000069")]
	public SOInputHandler.Hand GetSide
	{
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xB31164", Offset = "0xB31164", VA = "0xB31164")]
		get
		{
			return default(SOInputHandler.Hand);
		}
	}

	[Token(Token = "0x1700006A")]
	private bool isShadowHandGrabbing
	{
		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xB3116C", Offset = "0xB3116C", VA = "0xB3116C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006B")]
	private bool isGrabbing
	{
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xB311DC", Offset = "0xB311DC", VA = "0xB311DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xB31274", Offset = "0xB31274", VA = "0xB31274")]
	public cShadowHandable GetPotentialShadowHandable()
	{
		return null;
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xB3127C", Offset = "0xB3127C", VA = "0xB3127C")]
	public cGrabberRedux GetGrabber()
	{
		return null;
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xB31284", Offset = "0xB31284", VA = "0xB31284")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xB314DC", Offset = "0xB314DC", VA = "0xB314DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xB31558", Offset = "0xB31558", VA = "0xB31558")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xB31594", Offset = "0xB31594", VA = "0xB31594")]
	private void CastForTargets()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xB32038", Offset = "0xB32038", VA = "0xB32038")]
	private void ShowShadowHand()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xB31454", Offset = "0xB31454", VA = "0xB31454")]
	private void HideAllShadowHands()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xB31E2C", Offset = "0xB31E2C", VA = "0xB31E2C")]
	private void DisplayLineBetweenPoints(Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xB31EE4", Offset = "0xB31EE4", VA = "0xB31EE4")]
	private void DisplayMaxDistanceLine()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xB31498", Offset = "0xB31498", VA = "0xB31498")]
	private void HideLine()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xB320FC", Offset = "0xB320FC", VA = "0xB320FC")]
	private void Primed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xB326A8", Offset = "0xB326A8", VA = "0xB326A8")]
	public void UnPrimed(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xB32350", Offset = "0xB32350", VA = "0xB32350")]
	private void ShadowHandGrab(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xB32A8C", Offset = "0xB32A8C", VA = "0xB32A8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5998", Offset = "0x8F5998")]
	private IEnumerator ShadowHandTravel()
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xB32884", Offset = "0xB32884", VA = "0xB32884")]
	public void ShadowHandRelease(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xB32D4C", Offset = "0xB32D4C", VA = "0xB32D4C")]
	private void ShadowHandReleaseToGrab(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xB3188C", Offset = "0xB3188C", VA = "0xB3188C")]
	private void UpdateShadowHandGrabbed()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xB33080", Offset = "0xB33080", VA = "0xB33080")]
	public cShadowHandNotSpell()
	{
	}
}
[Token(Token = "0x2000185")]
public class cGlow : MonoBehaviour
{
	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer glowRenderer;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color newColour;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float alpha;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool brightening;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float maxAlpha;

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xAD5034", Offset = "0xAD5034", VA = "0xAD5034")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xAD508C", Offset = "0xAD508C", VA = "0xAD508C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xAD51B8", Offset = "0xAD51B8", VA = "0xAD51B8")]
	public cGlow()
	{
	}
}
[Token(Token = "0x2000186")]
public class cSpellOrbManager : MonoBehaviour
{
	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject shadowHandOrb;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject communeOrb;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayOfFireOrb;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controlWeatherOrb;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject particleEffect;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent learnShadowHandEvent;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate learnShadowHandDelegate;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOGameEvent learnRayOfFireEvent;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate learnRayOfFireDelegate;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOGameEvent learnCommuneEvent;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate learnCommuneDelegate;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent learnControlWeatherEvent;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate learnControlWeatherDelegate;

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xB3D238", Offset = "0xB3D238", VA = "0xB3D238")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xB3D3EC", Offset = "0xB3D3EC", VA = "0xB3D3EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xB3D458", Offset = "0xB3D458", VA = "0xB3D458")]
	private void LearnShadowhand()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xB3D478", Offset = "0xB3D478", VA = "0xB3D478")]
	private void LearnRayOfFire()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xB3D498", Offset = "0xB3D498", VA = "0xB3D498")]
	private void LearnCommune()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xB3D4B8", Offset = "0xB3D4B8", VA = "0xB3D4B8")]
	private void LearnControlWeather()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xB3D380", Offset = "0xB3D380", VA = "0xB3D380")]
	private void HideSpellOrbs()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xB3D4D8", Offset = "0xB3D4D8", VA = "0xB3D4D8")]
	public cSpellOrbManager()
	{
	}
}
[Token(Token = "0x2000187")]
public class cSpellTracing : MonoBehaviour
{
	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private cSpellTracingNode[] tracingNodes;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sSpellSequence spellSequence;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int sequenceIndex;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentSequenceNumber;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool freeMode;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool drawingLine;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool sequenceCompleted;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private cSpellTracingNode startNode;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject linePrefab;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer line;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject firstLineObject;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOInputHandler.Hand tracingHand;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool lineReady;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<LineRenderer> tempLines;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOInputEvent grabButtonDownEvent;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOInputEvent grabButtonUpEvent;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SOInputEvent.InputEventDelegate grabButtonDownDelegate;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SOInputEvent.InputEventDelegate grabButtonUpDelegate;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOGameEvent newSpellLearnedEvent;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator spellTraceAnim;

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xB3D4E0", Offset = "0xB3D4E0", VA = "0xB3D4E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xB3D6E4", Offset = "0xB3D6E4", VA = "0xB3D6E4")]
	private void RegisterDelegates()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xB3D8D8", Offset = "0xB3D8D8", VA = "0xB3D8D8")]
	private void UnregisterDelegates()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xB3D954", Offset = "0xB3D954", VA = "0xB3D954")]
	private void GrabDown(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xB3DB60", Offset = "0xB3DB60", VA = "0xB3DB60")]
	private void GrabUp(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xB3D630", Offset = "0xB3D630", VA = "0xB3D630")]
	private void SetupLine()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xB3DD3C", Offset = "0xB3DD3C", VA = "0xB3DD3C")]
	private void DrawLine(Vector3 startPos, Vector3 endPos)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xB3DDA8", Offset = "0xB3DDA8", VA = "0xB3DDA8")]
	public void SphereSelected(cSpellTracingNode sphere, SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xB3E068", Offset = "0xB3E068", VA = "0xB3E068")]
	public void SphereUnselected(cSpellTracingNode sphere, SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xB3DF30", Offset = "0xB3DF30", VA = "0xB3DF30")]
	private void FinishLine(Vector3 startPos, Vector3 endPos)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xB3DBDC", Offset = "0xB3DBDC", VA = "0xB3DBDC")]
	private void ClearLines()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xB3E080", Offset = "0xB3E080", VA = "0xB3E080")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xB3D760", Offset = "0xB3D760", VA = "0xB3D760")]
	private void SetupSequence()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xB3DA6C", Offset = "0xB3DA6C", VA = "0xB3DA6C")]
	private void NextInSequence()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xB3E1F4", Offset = "0xB3E1F4", VA = "0xB3E1F4")]
	private void SequenceComplete(sSpellSequence completedSequence)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xB3E2F4", Offset = "0xB3E2F4", VA = "0xB3E2F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xB3E320", Offset = "0xB3E320", VA = "0xB3E320")]
	private void AnimateIn()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xB3E37C", Offset = "0xB3E37C", VA = "0xB3E37C")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xB3E454", Offset = "0xB3E454", VA = "0xB3E454")]
	private void AnimateOut()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xB3E4B0", Offset = "0xB3E4B0", VA = "0xB3E4B0")]
	public void SetNewSpellSequence(sSpellSequence newSpellSequence)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xB3E4B8", Offset = "0xB3E4B8", VA = "0xB3E4B8")]
	public cSpellTracing()
	{
	}
}
[Token(Token = "0x2000188")]
public class cSpellTracingManager : MonoBehaviour
{
	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject spellTracingUI;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private cSpellTracing spellTracing;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sSpellSequence learnFarHand;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private sSpellSequence learnShadowhand;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private sSpellSequence learnCommune;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private sSpellSequence learnRayOfFire;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private sSpellSequence learnControlWeather;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SOGameEvent learnShadowHandEvent;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate learnShadowHandDelegate;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOGameEvent learnRayOfFireEvent;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate learnRayOfFireDelegate;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SOGameEvent learnCommuneEvent;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate learnCommuneDelegate;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOGameEvent learnControlWeatherEvent;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate learnControlWeatherDelegate;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SOGameEvent spellTraceHideEvent;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate spellTraceHideDelegate;

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xB3E528", Offset = "0xB3E528", VA = "0xB3E528")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xB3E6A4", Offset = "0xB3E6A4", VA = "0xB3E6A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xB3E710", Offset = "0xB3E710", VA = "0xB3E710")]
	private void LearnShadowhand()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xB3E748", Offset = "0xB3E748", VA = "0xB3E748")]
	private void LearnRayOfFire()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xB3E780", Offset = "0xB3E780", VA = "0xB3E780")]
	private void LearnCommune()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xB3E7B8", Offset = "0xB3E7B8", VA = "0xB3E7B8")]
	private void LearnControlWeather()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xB3E7F0", Offset = "0xB3E7F0", VA = "0xB3E7F0")]
	private void LearnFarHand()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xB3E828", Offset = "0xB3E828", VA = "0xB3E828")]
	private void HideSpellTraceUI()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xB3E840", Offset = "0xB3E840", VA = "0xB3E840")]
	public cSpellTracingManager()
	{
	}
}
[Token(Token = "0x2000189")]
public class cSpellTracingNode : MonoBehaviour
{
	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool targetSphere;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject glowAsset;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isGlowing;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cSpellTracing spellTracing;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int index;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool isLocked;

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xB3E848", Offset = "0xB3E848", VA = "0xB3E848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xB3E1E0", Offset = "0xB3E1E0", VA = "0xB3E1E0")]
	public void SetLocked(bool locked)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xB3E8A0", Offset = "0xB3E8A0", VA = "0xB3E8A0")]
	public void SetGlowing(bool isOn)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xB3E8F4", Offset = "0xB3E8F4", VA = "0xB3E8F4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xB3EA00", Offset = "0xB3EA00", VA = "0xB3EA00")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xB3E9D8", Offset = "0xB3E9D8", VA = "0xB3E9D8")]
	private void Selected(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xB3EACC", Offset = "0xB3EACC", VA = "0xB3EACC")]
	private void Unselected(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xB3EAFC", Offset = "0xB3EAFC", VA = "0xB3EAFC")]
	public cSpellTracingNode()
	{
	}
}
[Token(Token = "0x200018A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE72C", Offset = "0x8DE72C")]
public class sSpellSequence : ScriptableObject
{
	[Token(Token = "0x200045C")]
	public enum Spell
	{
		[Token(Token = "0x4001C91")]
		noSpell,
		[Token(Token = "0x4001C92")]
		shadowHand,
		[Token(Token = "0x4001C93")]
		commune,
		[Token(Token = "0x4001C94")]
		rayOfFire,
		[Token(Token = "0x4001C95")]
		controlWeather
	}

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] sequence;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Spell sequenceSpell;

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x15AD170", Offset = "0x15AD170", VA = "0x15AD170")]
	public sSpellSequence()
	{
	}
}
[Token(Token = "0x200018B")]
public class cStandingGhostSystem : MonoBehaviour
{
	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform minX;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform maxX;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform minZ;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform maxZ;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool standingGhostOn;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshPro standingGhostText;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Renderer fadeSphereRend;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isFading;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float fadeSpeed;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public cAudioSystem.Bus masterBus;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float startVolume;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float volumeReduction;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private sPlayerSettings playerSettings;

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xB3FB74", Offset = "0xB3FB74", VA = "0xB3FB74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xB3FBA4", Offset = "0xB3FBA4", VA = "0xB3FBA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xB3FC10", Offset = "0xB3FC10", VA = "0xB3FC10")]
	private void HandleFade()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xB3FDE4", Offset = "0xB3FDE4", VA = "0xB3FDE4")]
	private void TurnOnStandingGhost()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xB3FFC0", Offset = "0xB3FFC0", VA = "0xB3FFC0")]
	private void TurnOffStandingGhost()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xB3FD2C", Offset = "0xB3FD2C", VA = "0xB3FD2C")]
	private bool IsPlayerOutOfBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xB400D0", Offset = "0xB400D0", VA = "0xB400D0")]
	public cStandingGhostSystem()
	{
	}
}
[Token(Token = "0x200018C")]
public class cTutorialSystem : MonoBehaviour
{
	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sTutorial initialTutorial;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent displayControllersEvent;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SOGameEvent displayHandsEvent;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private sTextEvent controllerTextEvent;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOGameEvent nextTutorialEvent;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SOGameEvent.GameEventDelegate tutorialGameEventDelegate;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SOInputEvent.InputEventDelegate tutorialInputEventDelegate;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SOGameEvent.GameEventDelegate nextTutorialDelegate;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool tutorialActive;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private sTutorial activeTutorial;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private sTutorial nextTutorial;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private sTutorial tutorial7;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SOGameEvent portalKeysErasedVOFinished;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate portalKeysErasedVOFinishedDelegate;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SOGameEvent unlockDreamThought0;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SOGameEvent unlockDreamThought1;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private soVOSequence dreamThought0;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private soVOSequence dreamThought1;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SOGameEvent meditationTutorialFinished;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate meditationTutorialFinishedDelegate;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private SOGameEvent shadowHandLearned;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate shadowHandLearnedDelegate;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject normalPlanarCompass;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private soVOEvent[] voEventsToSkip;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private soVOSequence[] voSequencesToSkip;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool tutorialFinished;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static cTutorialSystem _instance;

	[Token(Token = "0x1700006C")]
	public static cTutorialSystem Instance
	{
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xB30F1C", Offset = "0xB30F1C", VA = "0xB30F1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xB43060", Offset = "0xB43060", VA = "0xB43060")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xB43174", Offset = "0xB43174", VA = "0xB43174")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xB43348", Offset = "0xB43348", VA = "0xB43348")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xB3BE60", Offset = "0xB3BE60", VA = "0xB3BE60")]
	public void SkipTutorial()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xB433B4", Offset = "0xB433B4", VA = "0xB433B4")]
	public void StartTutorial()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xB433BC", Offset = "0xB433BC", VA = "0xB433BC")]
	public void InitTutorial(sTutorial tutorial)
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xB4380C", Offset = "0xB4380C", VA = "0xB4380C")]
	public void ReinitializeTutorial()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xB30FE8", Offset = "0xB30FE8", VA = "0xB30FE8")]
	public void NextTutorial()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xB43994", Offset = "0xB43994", VA = "0xB43994")]
	public void MeditationTutorialFinished()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xB43A74", Offset = "0xB43A74", VA = "0xB43A74")]
	public void EndTutorial(SOInputHandler.Hand hand)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xB43830", Offset = "0xB43830", VA = "0xB43830")]
	public void EndTutorial()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xB33828", Offset = "0xB33828", VA = "0xB33828")]
	public void ResetTutorial(sTutorial newNextTutorial)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xB436CC", Offset = "0xB436CC", VA = "0xB436CC")]
	private void HighlightButton(cControllerDisplaySystem.DisplayButton button)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xB43A78", Offset = "0xB43A78", VA = "0xB43A78")]
	public void ClearTutorialText()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xB43700", Offset = "0xB43700", VA = "0xB43700")]
	public void DisplayTutorialText(string tag)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xB3376C", Offset = "0xB3376C", VA = "0xB3376C")]
	public void DisplayTutorialNonLocalization(string text)
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xB43808", Offset = "0xB43808", VA = "0xB43808")]
	private void HighlightObjectOfInterest(string s)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xB43AD4", Offset = "0xB43AD4", VA = "0xB43AD4")]
	public void ShowHands()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xB436B0", Offset = "0xB436B0", VA = "0xB436B0")]
	public void ShowControllers()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xB43AF0", Offset = "0xB43AF0", VA = "0xB43AF0")]
	public void FirstTimeVOFinished()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xB43B34", Offset = "0xB43B34", VA = "0xB43B34")]
	public void ShowPullSpellOrbTutorial()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xB43B40", Offset = "0xB43B40", VA = "0xB43B40")]
	public void ShadowHandLearned()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xB43BBC", Offset = "0xB43BBC", VA = "0xB43BBC")]
	public cTutorialSystem()
	{
	}
}
[Token(Token = "0x200018D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE780", Offset = "0x8DE780")]
public class sTutorial : ScriptableObject
{
	[Token(Token = "0x200045D")]
	public enum TriggerEventType
	{
		[Token(Token = "0x4001C97")]
		INPUT,
		[Token(Token = "0x4001C98")]
		GAME
	}

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string button;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public cControllerDisplaySystem.DisplayButton buttonEnum;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string objectOfInterest;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public sTutorial nextTutorial;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TriggerEventType triggerEventType;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SOGameEvent gameEventTrigger;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SOInputEvent inputEventTrigger;

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x15AE370", Offset = "0x15AE370", VA = "0x15AE370")]
	public void Init()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x15AE3A4", Offset = "0x15AE3A4", VA = "0x15AE3A4")]
	public void End()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x15AE3C8", Offset = "0x15AE3C8", VA = "0x15AE3C8")]
	public sTutorial()
	{
	}
}
[Token(Token = "0x200018E")]
public class cInGameMenuManager : cMenuManager
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private cInputManager inputManager;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public SOSceneManager materialWorld;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject canvas;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject laserPointer;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool opened;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool tapped;

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xB6B2AC", Offset = "0xB6B2AC", VA = "0xB6B2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xB6B2D0", Offset = "0xB6B2D0", VA = "0xB6B2D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xB6B430", Offset = "0xB6B430", VA = "0xB6B430")]
	private void CheckMenu()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xB6B48C", Offset = "0xB6B48C", VA = "0xB6B48C")]
	public void CloseMenu()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xB6B494", Offset = "0xB6B494", VA = "0xB6B494")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F59FC", Offset = "0x8F59FC")]
	public void ExitToMainMenu()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xB6B4F4", Offset = "0xB6B4F4", VA = "0xB6B4F4")]
	public cInGameMenuManager()
	{
	}
}
[Token(Token = "0x200018F")]
public class cMenuGrabbable : cGrabbableRedux
{
	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 startPos;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion startRot;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float menuGrabDistance;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityEvent menuGrabbed;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xB727C4", Offset = "0xB727C4", VA = "0xB727C4", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xB72828", Offset = "0xB72828", VA = "0xB72828", Slot = "5")]
	public override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xB7292C", Offset = "0xB7292C", VA = "0xB7292C", Slot = "6")]
	public override void Grabbed(cGrabberRedux grabber)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xB72934", Offset = "0xB72934", VA = "0xB72934", Slot = "7")]
	public override void Released(cGrabberRedux grabber)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xB729A0", Offset = "0xB729A0", VA = "0xB729A0")]
	public cMenuGrabbable()
	{
	}
}
[Token(Token = "0x2000190")]
public class cMenuManager : MonoBehaviour
{
	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mainMenu;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject optionsMenu;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controlsUI;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SOGameEvent gameStarted;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject loadingIndicator;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject pointer;

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xB729B4", Offset = "0xB729B4", VA = "0xB729B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xB6B448", Offset = "0xB6B448", VA = "0xB6B448")]
	public void GoToMainMenu()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xB72A1C", Offset = "0xB72A1C", VA = "0xB72A1C")]
	public void GoToOptionsMenu()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xB72A74", Offset = "0xB72A74", VA = "0xB72A74")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5A0C", Offset = "0x8F5A0C")]
	public void NewGame()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xB72B48", Offset = "0xB72B48", VA = "0xB72B48")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5A1C", Offset = "0x8F5A1C")]
	public void NewGameSkipTutorial()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xB72BB0", Offset = "0xB72BB0", VA = "0xB72BB0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5A2C", Offset = "0x8F5A2C")]
	public void ContinueGame()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xB72ADC", Offset = "0xB72ADC", VA = "0xB72ADC")]
	private void DisableMenuUI()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xB72C18", Offset = "0xB72C18", VA = "0xB72C18")]
	public void GoToControlsUI()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xB6B4FC", Offset = "0xB6B4FC", VA = "0xB6B4FC")]
	public cMenuManager()
	{
	}
}
[Token(Token = "0x2000191")]
public class cIntroRunestones : MonoBehaviour
{
	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator runestoneAnim;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isAnimating;

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xB6CC70", Offset = "0xB6CC70", VA = "0xB6CC70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xB6CB98", Offset = "0xB6CB98", VA = "0xB6CB98")]
	public void RunestonesAnimateIn()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xB6CCC8", Offset = "0xB6CCC8", VA = "0xB6CCC8")]
	public void RunestoneAnimationDone()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xB6CCD0", Offset = "0xB6CCD0", VA = "0xB6CCD0")]
	public bool RunestonesAnimating()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xB6CCD8", Offset = "0xB6CCD8", VA = "0xB6CCD8")]
	public cIntroRunestones()
	{
	}
}
[Serializable]
[Token(Token = "0x2000192")]
public class AnimatedLerpValues
{
	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8E9634", Offset = "0x8E9634")]
	public float animationTime;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8E9684", Offset = "0x8E9684")]
	public float startOffset;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve speedCurve;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool customStartPosition;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E96D4", Offset = "0x8E96D4")]
	public Transform startPosition;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform endPosition;

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xBD9DCC", Offset = "0xBD9DCC", VA = "0xBD9DCC")]
	private bool IsValid(float value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xBD9DD8", Offset = "0xBD9DD8", VA = "0xBD9DD8")]
	private bool IsValid2(float value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xBD9DE4", Offset = "0xBD9DE4", VA = "0xBD9DE4")]
	public AnimatedLerpValues()
	{
	}
}
[Token(Token = "0x2000193")]
public class AnimatedLerpFunctions : MonoBehaviour
{
	[Token(Token = "0x200045E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF9D0", Offset = "0x8DF9D0")]
	private sealed class <LerpCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float offset;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimatedLerpFunctions <>4__this;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float animTime;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 start;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform end;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve curve;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform target;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <startTime>5__2;

		[Token(Token = "0x1700023E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xBD9D58", Offset = "0xBD9D58", VA = "0xBD9D58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xBD9DC4", Offset = "0xBD9DC4", VA = "0xBD9DC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xBD9B28", Offset = "0xBD9B28", VA = "0xBD9B28")]
		[DebuggerHidden]
		public <LerpCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xBD9B5C", Offset = "0xBD9B5C", VA = "0xBD9B5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xBD9B60", Offset = "0xBD9B60", VA = "0xBD9B60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xBD9D60", Offset = "0xBD9D60", VA = "0xBD9D60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 lerpPosition;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerp;

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xBD9A2C", Offset = "0xBD9A2C", VA = "0xBD9A2C")]
	public void AnimateLerp(Transform animationTarget, Vector3 startPos, Transform endPos, float startOffset, float animationTime, AnimationCurve speedCurve)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xBD9A58", Offset = "0xBD9A58", VA = "0xBD9A58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5A3C", Offset = "0x8F5A3C")]
	private IEnumerator LerpCoroutine(Transform target, Vector3 start, Transform end, float offset, float animTime, AnimationCurve curve)
	{
		return null;
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xBD9B54", Offset = "0xBD9B54", VA = "0xBD9B54")]
	public AnimatedLerpFunctions()
	{
	}
}
[Token(Token = "0x2000194")]
public class cAnimatedLerp : AnimatedLerpFunctions
{
	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool playOnAwake;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool playOnEnable;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public AnimatedLerpValues animatedLerpValues;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AnimatedLerpFunctions animatedLerpFunctions;

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xA91E64", Offset = "0xA91E64", VA = "0xA91E64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xA91FBC", Offset = "0xA91FBC", VA = "0xA91FBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xA92074", Offset = "0xA92074", VA = "0xA92074")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5AA0", Offset = "0x8F5AA0")]
	public void PlayLerp()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xA91F1C", Offset = "0xA91F1C", VA = "0xA91F1C")]
	private void CheckStartPositionAndPlay()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xA92078", Offset = "0xA92078", VA = "0xA92078")]
	public cAnimatedLerp()
	{
	}
}
[Serializable]
[Token(Token = "0x2000195")]
public class AnimatedSpinValues
{
	[Token(Token = "0x200045F")]
	public enum RotationAxis
	{
		[Token(Token = "0x4001CA4")]
		x,
		[Token(Token = "0x4001CA5")]
		y,
		[Token(Token = "0x4001CA6")]
		z
	}

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8E9740", Offset = "0x8E9740")]
	public float animationTime;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8E9790", Offset = "0x8E9790")]
	public float startOffset;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve speedCurve;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RotationAxis rotationAxis;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotationSpeed;

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xBDB6A8", Offset = "0xBDB6A8", VA = "0xBDB6A8")]
	private bool IsValid(float value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xBDB6B4", Offset = "0xBDB6B4", VA = "0xBDB6B4")]
	private bool IsValid2(float value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xBDB6C0", Offset = "0xBDB6C0", VA = "0xBDB6C0")]
	public AnimatedSpinValues()
	{
	}
}
[Token(Token = "0x2000196")]
public class AnimatedSpinFunctions : MonoBehaviour
{
	[Token(Token = "0x2000460")]
	private delegate Vector3 RotationFunction(float speed);

	[Token(Token = "0x2000461")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF9E0", Offset = "0x8DF9E0")]
	private sealed class <SpinCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float offset;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimatedSpinFunctions <>4__this;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationSpeed;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float animTime;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform target;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve curve;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <startTime>5__2;

		[Token(Token = "0x17000240")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xBDB578", Offset = "0xBDB578", VA = "0xBDB578", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0xBDB5E4", Offset = "0xBDB5E4", VA = "0xBDB5E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xBDB0F8", Offset = "0xBDB0F8", VA = "0xBDB0F8")]
		[DebuggerHidden]
		public <SpinCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xBDB12C", Offset = "0xBDB12C", VA = "0xBDB12C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xBDB130", Offset = "0xBDB130", VA = "0xBDB130", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xBDB580", Offset = "0xBDB580", VA = "0xBDB580", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RotationFunction rotationFunction;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lerp;

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xBDAE88", Offset = "0xBDAE88", VA = "0xBDAE88")]
	public void AnimatedSpin(Transform target, float speedRotation, float offset, float animTime, AnimationCurve curve, AnimatedSpinValues.RotationAxis rotationAxis)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xBDB03C", Offset = "0xBDB03C", VA = "0xBDB03C")]
	private Vector3 RotateX(float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xBDB078", Offset = "0xBDB078", VA = "0xBDB078")]
	private Vector3 RotateY(float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xBDB0B8", Offset = "0xBDB0B8", VA = "0xBDB0B8")]
	private Vector3 RotateZ(float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xBDAF90", Offset = "0xBDAF90", VA = "0xBDAF90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5AB0", Offset = "0x8F5AB0")]
	private IEnumerator SpinCoroutine(Transform target, float rotationSpeed, float offset, float animTime, AnimationCurve curve)
	{
		return null;
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xBDB124", Offset = "0xBDB124", VA = "0xBDB124")]
	public AnimatedSpinFunctions()
	{
	}
}
[Token(Token = "0x2000197")]
public class cAnimatedSpin : MonoBehaviour
{
	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool playOnAwake;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool playOnEnable;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimatedSpinValues animatedSpinValues;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnimatedSpinFunctions animatedSpinFunctions;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xA92080", Offset = "0xA92080", VA = "0xA92080")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xA92190", Offset = "0xA92190", VA = "0xA92190")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xA92138", Offset = "0xA92138", VA = "0xA92138")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5B14", Offset = "0x8F5B14")]
	public void AnimateSpin()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xA92248", Offset = "0xA92248", VA = "0xA92248")]
	public cAnimatedSpin()
	{
	}
}
[Token(Token = "0x2000198")]
public class cProceduralAnimation : MonoBehaviour
{
	[Token(Token = "0x2000462")]
	private enum StartUpAnimationPosition
	{
		[Token(Token = "0x4001CB1")]
		none,
		[Token(Token = "0x4001CB2")]
		animatedLerp
	}

	[Token(Token = "0x2000463")]
	private enum StartUpAnimationRotation
	{
		[Token(Token = "0x4001CB4")]
		none,
		[Token(Token = "0x4001CB5")]
		spin
	}

	[Token(Token = "0x2000464")]
	private enum StartUpAnimationScale
	{
		[Token(Token = "0x4001CB7")]
		none,
		[Token(Token = "0x4001CB8")]
		grow
	}

	[Token(Token = "0x2000465")]
	private enum StartUpAnimationFade
	{
		[Token(Token = "0x4001CBA")]
		none,
		[Token(Token = "0x4001CBB")]
		fadeIn
	}

	[Token(Token = "0x2000466")]
	private enum ActiveAnimationPosition
	{
		[Token(Token = "0x4001CBD")]
		none,
		[Token(Token = "0x4001CBE")]
		bob,
		[Token(Token = "0x4001CBF")]
		shudder
	}

	[Token(Token = "0x2000467")]
	private enum ActiveAnimationsRotation
	{
		[Token(Token = "0x4001CC1")]
		none,
		[Token(Token = "0x4001CC2")]
		spin,
		[Token(Token = "0x4001CC3")]
		wobble,
		[Token(Token = "0x4001CC4")]
		twitch
	}

	[Token(Token = "0x2000468")]
	private enum ActiveAnimationsScale
	{
		[Token(Token = "0x4001CC6")]
		none,
		[Token(Token = "0x4001CC7")]
		pulse,
		[Token(Token = "0x4001CC8")]
		shudder
	}

	[Token(Token = "0x2000469")]
	private enum InactiveAnimationPosition
	{
		[Token(Token = "0x4001CCA")]
		none,
		[Token(Token = "0x4001CCB")]
		bob,
		[Token(Token = "0x4001CCC")]
		shudder
	}

	[Token(Token = "0x200046A")]
	private enum InactiveAnimationRotation
	{
		[Token(Token = "0x4001CCE")]
		none,
		[Token(Token = "0x4001CCF")]
		spin,
		[Token(Token = "0x4001CD0")]
		wobble,
		[Token(Token = "0x4001CD1")]
		twitch
	}

	[Token(Token = "0x200046B")]
	private enum InactiveAnimationScale
	{
		[Token(Token = "0x4001CD3")]
		none,
		[Token(Token = "0x4001CD4")]
		pulse,
		[Token(Token = "0x4001CD5")]
		shudder
	}

	[Token(Token = "0x200046C")]
	private enum ShutDownAnimationPosition
	{
		[Token(Token = "0x4001CD7")]
		none,
		[Token(Token = "0x4001CD8")]
		animatedLerp
	}

	[Token(Token = "0x200046D")]
	private enum ShutDownAnimationRotation
	{
		[Token(Token = "0x4001CDA")]
		none,
		[Token(Token = "0x4001CDB")]
		spin
	}

	[Token(Token = "0x200046E")]
	private enum ShutDownAnimationScale
	{
		[Token(Token = "0x4001CDD")]
		none,
		[Token(Token = "0x4001CDE")]
		shrink
	}

	[Token(Token = "0x200046F")]
	private enum ShutDownAnimationFade
	{
		[Token(Token = "0x4001CE0")]
		none,
		[Token(Token = "0x4001CE1")]
		fadeOut
	}

	[Token(Token = "0x2000470")]
	public enum AnimationState
	{
		[Token(Token = "0x4001CE3")]
		disabled,
		[Token(Token = "0x4001CE4")]
		startUp,
		[Token(Token = "0x4001CE5")]
		active,
		[Token(Token = "0x4001CE6")]
		inactive,
		[Token(Token = "0x4001CE7")]
		shutDown
	}

	[Token(Token = "0x2000471")]
	private delegate void startPositionCalc();

	[Token(Token = "0x2000472")]
	private delegate void startRotationCalc();

	[Token(Token = "0x2000473")]
	private delegate void startScaleCalc();

	[Token(Token = "0x2000474")]
	private delegate void startFadeCalc();

	[Token(Token = "0x2000475")]
	private delegate void activePositionCalc();

	[Token(Token = "0x2000476")]
	private delegate void activeRotationCalc();

	[Token(Token = "0x2000477")]
	private delegate void activeScaleCalc();

	[Token(Token = "0x2000478")]
	private delegate void inactivePositionCalc();

	[Token(Token = "0x2000479")]
	private delegate void inactiveRotationCalc();

	[Token(Token = "0x200047A")]
	private delegate void inactiveScaleCalc();

	[Token(Token = "0x200047B")]
	private delegate void shutDownPositionCalc();

	[Token(Token = "0x200047C")]
	private delegate void shutDownRotationCalc();

	[Token(Token = "0x200047D")]
	private delegate void shutDownScaleCalc();

	[Token(Token = "0x200047E")]
	private delegate void shutDownFadeCalc();

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E9810", Offset = "0x8E9810")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E985C", Offset = "0x8E985C")]
	[SerializeField]
	private StartUpAnimationPosition startUpPosition;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E98A8", Offset = "0x8E98A8")]
	[SerializeField]
	private AnimatedLerpValues animatedLerpValues;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AnimatedLerpFunctions animatedLerpFunctions;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private StartUpAnimationRotation startUpRotation;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E9960", Offset = "0x8E9960")]
	[SerializeField]
	private AnimatedSpinValues animatedSpinValues;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimatedSpinFunctions animatedSpinFunctions;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private StartUpAnimationScale startUpScale;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E9A18", Offset = "0x8E9A18")]
	[SerializeField]
	private AnimatedScaleValues animatedScaleValues;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimatedScaleFunctions animatedScaleFunctions;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private StartUpAnimationFade startUpFade;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E9AD0", Offset = "0x8E9AD0")]
	[SerializeField]
	private ActiveAnimationPosition activePosition;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ActiveAnimationsRotation activeRotation;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private ActiveAnimationsScale activeScale;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E9B3C", Offset = "0x8E9B3C")]
	[SerializeField]
	private InactiveAnimationPosition inactivePosition;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private InactiveAnimationRotation inactiveRotation;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private InactiveAnimationScale inactiveScale;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E9BA8", Offset = "0x8E9BA8")]
	[SerializeField]
	private ShutDownAnimationPosition shutDownPosition;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ShutDownAnimationRotation shutDownRotation;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private ShutDownAnimationScale shutDownScale;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ShutDownAnimationFade shutDownFade;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public AnimationState animationState;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private startPositionCalc startPositionCalculation;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private startRotationCalc startRotationCalculation;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private startScaleCalc startScaleCalculation;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private startFadeCalc startFadeCalculation;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private activePositionCalc activePositionCalculation;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private activeRotationCalc activeRotationCalculation;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private activeScaleCalc activeScaleCalculation;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private inactivePositionCalc inactivePositionCalculation;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private inactiveRotationCalc inactiveRotationCalculation;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private inactiveScaleCalc inactiveScaleCalculation;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private shutDownPositionCalc shutDownPositionCalculation;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private shutDownRotationCalc shutDownRotationCalculation;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private shutDownScaleCalc shutDownScaleCalculation;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private shutDownFadeCalc shutDownFadeCalculation;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float startAnimationTime;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float endAnimationTime;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float currentStateStartTime;

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xAFD048", Offset = "0xAFD048", VA = "0xAFD048")]
	private void SetAnimationFunctions()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xAFD558", Offset = "0xAFD558", VA = "0xAFD558")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5B24", Offset = "0x8F5B24")]
	public void StartUp()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xAFDC04", Offset = "0xAFDC04", VA = "0xAFDC04")]
	public void Active()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xAFDC34", Offset = "0xAFDC34", VA = "0xAFDC34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xAFDDE0", Offset = "0xAFDDE0", VA = "0xAFDDE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xAFDC60", Offset = "0xAFDC60", VA = "0xAFDC60")]
	private float StartUpTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xAFDE78", Offset = "0xAFDE78", VA = "0xAFDE78")]
	private void DoNothing()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xAFDE7C", Offset = "0xAFDE7C", VA = "0xAFDE7C")]
	private void AnimatedLerp()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xAFDF00", Offset = "0xAFDF00", VA = "0xAFDF00")]
	private void AnimatedSpin()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xAFDF44", Offset = "0xAFDF44", VA = "0xAFDF44")]
	private void AnimatedScale()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xAFDFAC", Offset = "0xAFDFAC", VA = "0xAFDFAC")]
	public cProceduralAnimation()
	{
	}
}
[Serializable]
[Token(Token = "0x2000199")]
public class ConstantSpinValues
{
	[Token(Token = "0x200047F")]
	public enum RotationAxis
	{
		[Token(Token = "0x4001CE9")]
		x,
		[Token(Token = "0x4001CEA")]
		y,
		[Token(Token = "0x4001CEB")]
		z
	}

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RotationAxis spinAxis;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float spinSpeed;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xBDECC8", Offset = "0xBDECC8", VA = "0xBDECC8")]
	public ConstantSpinValues()
	{
	}
}
[Token(Token = "0x200019A")]
public class cSpinConstantly : MonoBehaviour
{
	[Token(Token = "0x2000480")]
	private delegate Vector3 RotationFunction(float speed);

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool playOnAwake;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool playOnEnable;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ConstantSpinValues spinValues;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform target;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSpinning;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RotationFunction rotationFunction;

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xB3EB04", Offset = "0xB3EB04", VA = "0xB3EB04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xB3EC44", Offset = "0xB3EC44", VA = "0xB3EC44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xB3EB70", Offset = "0xB3EB70", VA = "0xB3EB70")]
	public void SpinConstant(Transform newTarget, float speed, ConstantSpinValues.RotationAxis rotationAxis)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xB3ECC0", Offset = "0xB3ECC0", VA = "0xB3ECC0")]
	public void StopSpin()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xB3ECC8", Offset = "0xB3ECC8", VA = "0xB3ECC8")]
	private Vector3 RotateX(float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xB3ED1C", Offset = "0xB3ED1C", VA = "0xB3ED1C")]
	private Vector3 RotateY(float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xB3ED70", Offset = "0xB3ED70", VA = "0xB3ED70")]
	private Vector3 RotateZ(float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xB3EDC4", Offset = "0xB3EDC4", VA = "0xB3EDC4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xB3F084", Offset = "0xB3F084", VA = "0xB3F084")]
	public cSpinConstantly()
	{
	}
}
[Token(Token = "0x200019B")]
public class cDemonDoorAudio : MonoBehaviour
{
	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float demonLineEverySeconds;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool timing;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private sBool gearWallComplete;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private soVOEvent demonOverseerGearMissing1;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOEvent demonOverseerGearMissing2;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOEvent demonOverseerGearMissing3;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private soVOEvent demonOverseerGearMissing4;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private soVOEvent demonOverseerWallSolved1;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private soVOEvent demonOverseerWallSolved2;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private soVOEvent demonOverseerWallSolved3;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SOGameEvent underworldReached;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SOGameEvent.GameEventDelegate underworldReachedDelegate;

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xAC5E4C", Offset = "0xAC5E4C", VA = "0xAC5E4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xAC5ED0", Offset = "0xAC5ED0", VA = "0xAC5ED0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xAC5EF4", Offset = "0xAC5EF4", VA = "0xAC5EF4")]
	private void UnderWorldReached()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xAC5F30", Offset = "0xAC5F30", VA = "0xAC5F30")]
	private void StartTimer()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xAC5F44", Offset = "0xAC5F44", VA = "0xAC5F44")]
	private void StartOverseerAudio()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xAC602C", Offset = "0xAC602C", VA = "0xAC602C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xAC608C", Offset = "0xAC608C", VA = "0xAC608C")]
	public cDemonDoorAudio()
	{
	}
}
[Token(Token = "0x200019C")]
public class bobSpeedMultiplier : StateMachineBehaviour
{
	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float multiplier;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] oldSpeed;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cBob[] bobScripts;

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xA90014", Offset = "0xA90014", VA = "0xA90014", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xA90164", Offset = "0xA90164", VA = "0xA90164", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xA901F8", Offset = "0xA901F8", VA = "0xA901F8")]
	public bobSpeedMultiplier()
	{
	}
}
[Token(Token = "0x200019D")]
public class cBob : MonoBehaviour
{
	[Token(Token = "0x2000481")]
	private enum BobAxis
	{
		[Token(Token = "0x4001CED")]
		X,
		[Token(Token = "0x4001CEE")]
		Y,
		[Token(Token = "0x4001CEF")]
		Z
	}

	[Token(Token = "0x2000482")]
	private delegate void CalculateBob();

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bob;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private BobAxis bobAxis;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float amplitude;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float offset;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CalculateBob calculateBob;

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xA96364", Offset = "0xA96364", VA = "0xA96364")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xA96434", Offset = "0xA96434", VA = "0xA96434")]
	private void BobX()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xA96554", Offset = "0xA96554", VA = "0xA96554")]
	private void BobY()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xA96674", Offset = "0xA96674", VA = "0xA96674")]
	private void BobZ()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xA967A0", Offset = "0xA967A0", VA = "0xA967A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xA969E0", Offset = "0xA969E0", VA = "0xA969E0")]
	public void SetNewSpeed(float newSpeed)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xA969E8", Offset = "0xA969E8", VA = "0xA969E8")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xA969F0", Offset = "0xA969F0", VA = "0xA969F0")]
	public cBob()
	{
	}
}
[Token(Token = "0x200019E")]
public class cCollisionDebug : MonoBehaviour
{
	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xA99908", Offset = "0xA99908", VA = "0xA99908")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xA999E0", Offset = "0xA999E0", VA = "0xA999E0")]
	public cCollisionDebug()
	{
	}
}
[Token(Token = "0x200019F")]
public class cControlSchemeUI : MonoBehaviour
{
	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject controlUI;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool tapped;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cInputManager inputManager;

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xAC1F00", Offset = "0xAC1F00", VA = "0xAC1F00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xAC1F28", Offset = "0xAC1F28", VA = "0xAC1F28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xAC1F8C", Offset = "0xAC1F8C", VA = "0xAC1F8C")]
	public cControlSchemeUI()
	{
	}
}
[Token(Token = "0x20001A0")]
public class cDontDestroyOnLoadList : MonoBehaviour
{
	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xAC68E4", Offset = "0xAC68E4", VA = "0xAC68E4")]
	public void DontDestroyGameObjectOnLoad()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xAC698C", Offset = "0xAC698C", VA = "0xAC698C")]
	public void DestroyGameObjectOnLoad()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xAC6A30", Offset = "0xAC6A30", VA = "0xAC6A30")]
	public cDontDestroyOnLoadList()
	{
	}
}
[Token(Token = "0x20001A1")]
public class cDynamicFFR : MonoBehaviour
{
	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRManager.FixedFoveatedRenderingLevel FFROnEnable;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private OVRManager.FixedFoveatedRenderingLevel FFROnDisable;

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xAC8200", Offset = "0xAC8200", VA = "0xAC8200")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xAC826C", Offset = "0xAC826C", VA = "0xAC826C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xAC82D8", Offset = "0xAC82D8", VA = "0xAC82D8")]
	public cDynamicFFR()
	{
	}
}
[Token(Token = "0x20001A2")]
public class cFadeInOut : MonoBehaviour
{
	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF9F0", Offset = "0x8DF9F0")]
	private sealed class <FadeInThenOutCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cFadeInOut <>4__this;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float darkTime;

		[Token(Token = "0x17000242")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xACA780", Offset = "0xACA780", VA = "0xACA780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0xACA7EC", Offset = "0xACA7EC", VA = "0xACA7EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xACA5C8", Offset = "0xACA5C8", VA = "0xACA5C8")]
		[DebuggerHidden]
		public <FadeInThenOutCoroutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xACA604", Offset = "0xACA604", VA = "0xACA604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xACA608", Offset = "0xACA608", VA = "0xACA608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xACA788", Offset = "0xACA788", VA = "0xACA788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool fadeIn;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool fadeOut;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float alpha;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float fadeSpeed;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color objectColor;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool fadingInOut;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xACA380", Offset = "0xACA380", VA = "0xACA380")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xACA410", Offset = "0xACA410", VA = "0xACA410")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xACA4FC", Offset = "0xACA4FC", VA = "0xACA4FC")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xACA508", Offset = "0xACA508", VA = "0xACA508")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xACA514", Offset = "0xACA514", VA = "0xACA514")]
	public void FadeInThenOut()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xACA544", Offset = "0xACA544", VA = "0xACA544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5B34", Offset = "0x8F5B34")]
	public IEnumerator FadeInThenOutCoroutine(float darkTime)
	{
		return null;
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xACA5F4", Offset = "0xACA5F4", VA = "0xACA5F4")]
	public cFadeInOut()
	{
	}
}
[Token(Token = "0x20001A3")]
public class cFixedFoveatedRendering : MonoBehaviour
{
	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xACCFE8", Offset = "0xACCFE8", VA = "0xACCFE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xACD04C", Offset = "0xACD04C", VA = "0xACD04C")]
	public cFixedFoveatedRendering()
	{
	}
}
[Token(Token = "0x20001A4")]
public class CheckPersistentObjectLocation : MonoBehaviour
{
	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SOSceneManager sceneToCheck;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToCheck;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent eventToFireWhenObjectIsFound;

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xBDEB2C", Offset = "0xBDEB2C", VA = "0xBDEB2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xBDEBC0", Offset = "0xBDEBC0", VA = "0xBDEBC0")]
	public void CheckObject()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xBDEC90", Offset = "0xBDEC90", VA = "0xBDEC90")]
	public CheckPersistentObjectLocation()
	{
	}
}
[Token(Token = "0x20001A5")]
public class cHighlightOnHover : MonoBehaviour
{
	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color hoverColor;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color startColor;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool isHandHovering;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private cSelector hoveringHand;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SOInputHandler.Hand hoveringHandSide;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SOInputEvent grabPressedEvent;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SOInputEvent.InputEventDelegate grabPressedDelegate;

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xB68E24", Offset = "0xB68E24", VA = "0xB68E24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xB68EAC", Offset = "0xB68EAC", VA = "0xB68EAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xB6903C", Offset = "0xB6903C", VA = "0xB6903C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xB68F90", Offset = "0xB68F90", VA = "0xB68F90")]
	private void SetHandHovering(bool isHovering)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xB6915C", Offset = "0xB6915C", VA = "0xB6915C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xB69160", Offset = "0xB69160", VA = "0xB69160")]
	public cHighlightOnHover()
	{
	}
}
[Token(Token = "0x20001A6")]
public class cInvisibleObjects : MonoBehaviour
{
	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] invisibleObjects;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool meditationFlag;

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xB6CCE0", Offset = "0xB6CCE0", VA = "0xB6CCE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xB6CD58", Offset = "0xB6CD58", VA = "0xB6CD58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xB6CEA4", Offset = "0xB6CEA4", VA = "0xB6CEA4")]
	public cInvisibleObjects()
	{
	}
}
[Token(Token = "0x20001A7")]
public class cLocalTimer : MonoBehaviour
{
	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float timerDuration;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float timeRemaining;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent onTimeUp;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool restartTimerOnReturnToFlow;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool restartTimerOnEventInvoked;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool eventFired;

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xB6ED20", Offset = "0xB6ED20", VA = "0xB6ED20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xB6ED38", Offset = "0xB6ED38", VA = "0xB6ED38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xB6EDB8", Offset = "0xB6EDB8", VA = "0xB6EDB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xB6ED2C", Offset = "0xB6ED2C", VA = "0xB6ED2C")]
	private void ResetTimer()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xB6EDCC", Offset = "0xB6EDCC", VA = "0xB6EDCC")]
	public cLocalTimer()
	{
	}
}
[Token(Token = "0x20001A8")]
public class cLockFlows : MonoBehaviour
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SOSceneManager[] flows;

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xB70100", Offset = "0xB70100", VA = "0xB70100")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xB701D8", Offset = "0xB701D8", VA = "0xB701D8")]
	public cLockFlows()
	{
	}
}
[Token(Token = "0x20001A9")]
public class cOverrideRotation : MonoBehaviour
{
	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E9E54", Offset = "0x8E9E54")]
	private float spinSpeed;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float y;

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xAF6F60", Offset = "0xAF6F60", VA = "0xAF6F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xAF7064", Offset = "0xAF7064", VA = "0xAF7064")]
	public cOverrideRotation()
	{
	}
}
[Token(Token = "0x20001AA")]
public class cParticleVaccum : MonoBehaviour
{
	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float particleSpeed;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float lifetimeTillDistance;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem particleSys;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.MainModule particleSysMain;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.ShapeModule particleSysShape;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.TrailModule particleSysTrail;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xAF74EC", Offset = "0xAF74EC", VA = "0xAF74EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xAF7590", Offset = "0xAF7590", VA = "0xAF7590")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xAF784C", Offset = "0xAF784C", VA = "0xAF784C")]
	public void StartParticles()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xAF7868", Offset = "0xAF7868", VA = "0xAF7868")]
	public void StopParticles()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xAF7884", Offset = "0xAF7884", VA = "0xAF7884")]
	public cParticleVaccum()
	{
	}
}
[Token(Token = "0x20001AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DE7D4", Offset = "0x8DE7D4")]
public class cPlayAudioClip : MonoBehaviour
{
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFA00", Offset = "0x8DFA00")]
	private sealed class <PlayClipCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cPlayAudioClip <>4__this;

		[Token(Token = "0x17000244")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xAFBB5C", Offset = "0xAFBB5C", VA = "0xAFBB5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xAFBBC8", Offset = "0xAFBBC8", VA = "0xAFBBC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xAFB940", Offset = "0xAFB940", VA = "0xAFB940")]
		[DebuggerHidden]
		public <PlayClipCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xAFBA84", Offset = "0xAFBA84", VA = "0xAFBA84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xAFBA88", Offset = "0xAFBA88", VA = "0xAFBA88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xAFBB64", Offset = "0xAFBB64", VA = "0xAFBB64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool playOnce;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool played;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent onClipStarted;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent onClipEnded;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource sourceToPlay;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SOGameEvent SkipCurrentAudioLineEvent;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate SkipCurrentAudioLineEventDelegate;

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xAFB7F8", Offset = "0xAFB7F8", VA = "0xAFB7F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xAFB880", Offset = "0xAFB880", VA = "0xAFB880")]
	public void PlayClipAndRaiseEvents()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xAFB8CC", Offset = "0xAFB8CC", VA = "0xAFB8CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5B98", Offset = "0x8F5B98")]
	private IEnumerator PlayClipCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xAFB96C", Offset = "0xAFB96C", VA = "0xAFB96C")]
	public void SkipClip()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xAFBA20", Offset = "0xAFBA20", VA = "0xAFBA20")]
	public void PauseClip()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xAFBA3C", Offset = "0xAFBA3C", VA = "0xAFBA3C")]
	public void PlayClip()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xAFBA58", Offset = "0xAFBA58", VA = "0xAFBA58")]
	public void StopClip()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xAFBA74", Offset = "0xAFBA74", VA = "0xAFBA74")]
	public cPlayAudioClip()
	{
	}
}
[Token(Token = "0x20001AC")]
public class cPlayParticlesOnEnable : MonoBehaviour
{
	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem[] particles;

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xAFBCD8", Offset = "0xAFBCD8", VA = "0xAFBCD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xAFBD4C", Offset = "0xAFBD4C", VA = "0xAFBD4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xAFBDC0", Offset = "0xAFBDC0", VA = "0xAFBDC0")]
	public cPlayParticlesOnEnable()
	{
	}
}
[Token(Token = "0x20001AD")]
public class cResetTransformOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion originalRotation;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody objectRigidbody;

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xB05040", Offset = "0xB05040", VA = "0xB05040")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xB050DC", Offset = "0xB050DC", VA = "0xB050DC")]
	public void ResetTransform()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xB051BC", Offset = "0xB051BC", VA = "0xB051BC")]
	public cResetTransformOnTrigger()
	{
	}
}
[Token(Token = "0x20001AE")]
public class cResetTransformTrigger : MonoBehaviour
{
	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xB051C4", Offset = "0xB051C4", VA = "0xB051C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xB05280", Offset = "0xB05280", VA = "0xB05280")]
	public cResetTransformTrigger()
	{
	}
}
[Token(Token = "0x20001AF")]
public class cScrollCredits : MonoBehaviour
{
	[Token(Token = "0x2000485")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFA10", Offset = "0x8DFA10")]
	private sealed class <ScrollCredits>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cScrollCredits <>4__this;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pos>5__2;

		[Token(Token = "0x17000246")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0xB2F800", Offset = "0xB2F800", VA = "0xB2F800", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0xB2F86C", Offset = "0xB2F86C", VA = "0xB2F86C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xB2F35C", Offset = "0xB2F35C", VA = "0xB2F35C")]
		[DebuggerHidden]
		public <ScrollCredits>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xB2F6A0", Offset = "0xB2F6A0", VA = "0xB2F6A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xB2F6A4", Offset = "0xB2F6A4", VA = "0xB2F6A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xB2F808", Offset = "0xB2F808", VA = "0xB2F808", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFA20", Offset = "0x8DFA20")]
	private sealed class <Finish>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cScrollCredits <>4__this;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <alpha>5__2;

		[Token(Token = "0x17000248")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xB2F62C", Offset = "0xB2F62C", VA = "0xB2F62C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0xB2F698", Offset = "0xB2F698", VA = "0xB2F698", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xB2F3FC", Offset = "0xB2F3FC", VA = "0xB2F3FC")]
		[DebuggerHidden]
		public <Finish>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xB2F438", Offset = "0xB2F438", VA = "0xB2F438", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xB2F43C", Offset = "0xB2F43C", VA = "0xB2F43C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xB2F634", Offset = "0xB2F634", VA = "0xB2F634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextAsset creditsTxt;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sPlayerSettings settings;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scrollSpeed;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float startYPos;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float stopYPos;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float creditFadeSpeed;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float creditEndTimer;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI tmp;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool skip;

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xB2EFF8", Offset = "0xB2EFF8", VA = "0xB2EFF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xB2F2A4", Offset = "0xB2F2A4", VA = "0xB2F2A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xB2F098", Offset = "0xB2F098", VA = "0xB2F098")]
	private void PopulateCredits()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xB2F274", Offset = "0xB2F274", VA = "0xB2F274")]
	public void StartScroll()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xB2F2E8", Offset = "0xB2F2E8", VA = "0xB2F2E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5BFC", Offset = "0x8F5BFC")]
	private IEnumerator ScrollCredits()
	{
		return null;
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xB2F388", Offset = "0xB2F388", VA = "0xB2F388")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5C60", Offset = "0x8F5C60")]
	private IEnumerator Finish()
	{
		return null;
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xB2F428", Offset = "0xB2F428", VA = "0xB2F428")]
	public cScrollCredits()
	{
	}
}
[Token(Token = "0x20001B0")]
public class cSetStackTraceOutput : MonoBehaviour
{
	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xB2FC74", Offset = "0xB2FC74", VA = "0xB2FC74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xB2FD38", Offset = "0xB2FD38", VA = "0xB2FD38")]
	public cSetStackTraceOutput()
	{
	}
}
[Token(Token = "0x20001B1")]
public class cShudder : MonoBehaviour
{
	[Token(Token = "0x2000487")]
	private delegate void RotationCalculation();

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "InfoBoxAttribute", RVA = "0x8E9F70", Offset = "0x8E9F70")]
	[SerializeField]
	private bool shudder;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TitleAttribute", RVA = "0x8E9FC4", Offset = "0x8E9FC4")]
	[SerializeField]
	private bool xPosition;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float seedXT;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA020", Offset = "0x8EA020")]
	[SerializeField]
	private float noiseAmplitudeXT;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA070", Offset = "0x8EA070")]
	[SerializeField]
	private float noiseSpeedXT;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool yPosition;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float seedYT;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA0D0", Offset = "0x8EA0D0")]
	[SerializeField]
	private float noiseAmplitudeYT;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA120", Offset = "0x8EA120")]
	[SerializeField]
	private float noiseSpeedYT;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool zPosition;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float seedZT;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA180", Offset = "0x8EA180")]
	[SerializeField]
	private float noiseAmplitudeZT;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA1D0", Offset = "0x8EA1D0")]
	[SerializeField]
	private float noiseSpeedZT;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TitleAttribute", RVA = "0x8EA220", Offset = "0x8EA220")]
	[SerializeField]
	private bool xRotation;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float seedXR;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA27C", Offset = "0x8EA27C")]
	[SerializeField]
	private float noiseAmplitudeXR;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA2CC", Offset = "0x8EA2CC")]
	[SerializeField]
	private float noiseSpeedXR;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool yRotation;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float seedYR;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA32C", Offset = "0x8EA32C")]
	[SerializeField]
	private float noiseAmplitudeYR;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA37C", Offset = "0x8EA37C")]
	[SerializeField]
	private float noiseSpeedYR;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool zRotation;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float seedZR;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA3DC", Offset = "0x8EA3DC")]
	[SerializeField]
	private float noiseAmplitudeZR;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EA42C", Offset = "0x8EA42C")]
	[SerializeField]
	private float noiseSpeedZR;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool rotation;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion originalRotation;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RotationCalculation rotationCalculation;

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xB34954", Offset = "0xB34954", VA = "0xB34954")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xB34BA4", Offset = "0xB34BA4", VA = "0xB34BA4")]
	private void RotateXYZ()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xB34D74", Offset = "0xB34D74", VA = "0xB34D74")]
	private void RotateXY()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xB34F4C", Offset = "0xB34F4C", VA = "0xB34F4C")]
	private void RotateXZ()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xB35124", Offset = "0xB35124", VA = "0xB35124")]
	private void RotateYZ()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xB352F4", Offset = "0xB352F4", VA = "0xB352F4")]
	private void RotateX()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xB35490", Offset = "0xB35490", VA = "0xB35490")]
	private void RotateY()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xB3562C", Offset = "0xB3562C", VA = "0xB3562C")]
	private void RotateZ()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xB357C8", Offset = "0xB357C8", VA = "0xB357C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xB35D64", Offset = "0xB35D64", VA = "0xB35D64")]
	public void Shudder()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xB35D70", Offset = "0xB35D70", VA = "0xB35D70")]
	public void StopShudder()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xB35D78", Offset = "0xB35D78", VA = "0xB35D78")]
	public cShudder()
	{
	}
}
[Token(Token = "0x20001B2")]
public class cVersionNumber : MonoBehaviour
{
	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro textField;

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xB43CF0", Offset = "0xB43CF0", VA = "0xB43CF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xB43D70", Offset = "0xB43D70", VA = "0xB43D70")]
	public cVersionNumber()
	{
	}
}
[Token(Token = "0x20001B3")]
public class cWobble : MonoBehaviour
{
	[Token(Token = "0x2000488")]
	private enum RotationAxis
	{
		[Token(Token = "0x4001D00")]
		ZX,
		[Token(Token = "0x4001D01")]
		XY,
		[Token(Token = "0x4001D02")]
		ZY
	}

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RotationAxis rotationAxis;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public float firstAxisSpeed;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public float firstAxisAmplitude;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public float secondAxisSpeed;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public float secondAxisAmplitude;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float axisOffset;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool spin;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float spinSpeed;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 rotationVector;

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xB4538C", Offset = "0xB4538C", VA = "0xB4538C")]
	private void DetermineRotationVector()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xB453B4", Offset = "0xB453B4", VA = "0xB453B4")]
	private void CalculateRotationZX()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xB45478", Offset = "0xB45478", VA = "0xB45478")]
	private void CalculateRotationXY()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xB4553C", Offset = "0xB4553C", VA = "0xB4553C")]
	private void CalculateRotationZY()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xB45600", Offset = "0xB45600", VA = "0xB45600")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xB456C8", Offset = "0xB456C8", VA = "0xB456C8")]
	public cWobble()
	{
	}
}
[Token(Token = "0x20001B4")]
public class cWobblePhysicsAdjust : MonoBehaviour
{
	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EA50C", Offset = "0x8EA50C")]
	private float maxVelocity;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tempPrimarySpeed;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float tempPrimaryAmp;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float tempSecondarySpeed;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float tempSecondaryAmp;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigidbodyComponent;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private cWobble wobble;

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xB456D0", Offset = "0xB456D0", VA = "0xB456D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xB45814", Offset = "0xB45814", VA = "0xB45814")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xB45818", Offset = "0xB45818", VA = "0xB45818")]
	private void SetNewWobbleValues()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xB45924", Offset = "0xB45924", VA = "0xB45924")]
	public cWobblePhysicsAdjust()
	{
	}
}
[Token(Token = "0x20001B5")]
public class EnableFFR : MonoBehaviour
{
	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRManager.FixedFoveatedRenderingLevel ffrLevel;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EA558", Offset = "0x8EA558")]
	public float eyeResScale;

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xBE241C", Offset = "0xBE241C", VA = "0xBE241C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xBE2494", Offset = "0xBE2494", VA = "0xBE2494")]
	public EnableFFR()
	{
	}
}
[Token(Token = "0x20001B6")]
[ExecuteInEditMode]
public class MatchDirectionalLight : MonoBehaviour
{
	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject directionalLight;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem fauxSunShafts;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion directionalLightRotation;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool adoptLightColour;

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xCC8E40", Offset = "0xCC8E40", VA = "0xCC8E40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xCC8F54", Offset = "0xCC8F54", VA = "0xCC8F54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xCC8F58", Offset = "0xCC8F58", VA = "0xCC8F58")]
	public MatchDirectionalLight()
	{
	}
}
[Token(Token = "0x20001B7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DE848", Offset = "0x8DE848")]
public class sObjectTracker : ScriptableObject
{
	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOSceneManager sceneObjectIsIn;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOSceneManager homeFlow;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GuidReference guidReference;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x15AC464", Offset = "0x15AC464", VA = "0x15AC464")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x15AC470", Offset = "0x15AC470", VA = "0x15AC470")]
	public void SetFlow(SOSceneManager flow)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x15AC478", Offset = "0x15AC478", VA = "0x15AC478")]
	public void ClearFlow()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x15AC480", Offset = "0x15AC480", VA = "0x15AC480")]
	public void ResetCurrentFlow()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x15AC48C", Offset = "0x15AC48C", VA = "0x15AC48C")]
	public SOSceneManager GetFlow()
	{
		return null;
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x15AC494", Offset = "0x15AC494", VA = "0x15AC494")]
	public SOSceneManager GetHomeFlow()
	{
		return null;
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x15AC49C", Offset = "0x15AC49C", VA = "0x15AC49C")]
	public bool CheckHomeFlow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x15AC510", Offset = "0x15AC510", VA = "0x15AC510")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F5CC4", Offset = "0x8F5CC4")]
	private void ResetFlow()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x15AC51C", Offset = "0x15AC51C", VA = "0x15AC51C")]
	public sObjectTracker()
	{
	}
}
[Token(Token = "0x20001B8")]
public class cEctoplasmTag : MonoBehaviour
{
	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sBool ectoplasmInBowlSBool;

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xAC82EC", Offset = "0xAC82EC", VA = "0xAC82EC")]
	public void SetSBool(bool state)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xAC8310", Offset = "0xAC8310", VA = "0xAC8310")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xAC8354", Offset = "0xAC8354", VA = "0xAC8354")]
	public cEctoplasmTag()
	{
	}
}
[Token(Token = "0x20001B9")]
public class cFlower : MonoBehaviour
{
	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SOGameEvent feylandsReachedEvent;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SOGameEvent.GameEventDelegate feylandsReachedDelegate;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject purpleFlower;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject yellowFlower;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject purpleFlowerLeaves;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject yellowFlowerLeaves;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private sBool purpleFlowerInDaisBool;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private soVOEvent flowerGrabbedVO;

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xACF7D8", Offset = "0xACF7D8", VA = "0xACF7D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xACF85C", Offset = "0xACF85C", VA = "0xACF85C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xACF880", Offset = "0xACF880", VA = "0xACF880")]
	private void FeylandsReached()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xACF9C4", Offset = "0xACF9C4", VA = "0xACF9C4")]
	public void PlayFlowerGrabbedVO()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xACFA00", Offset = "0xACFA00", VA = "0xACFA00")]
	public cFlower()
	{
	}
}
[Token(Token = "0x20001BA")]
public class cPurpleFlowerTag : MonoBehaviour
{
	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xB0042C", Offset = "0xB0042C", VA = "0xB0042C")]
	public cPurpleFlowerTag()
	{
	}
}
[Token(Token = "0x20001BB")]
public class cWineBottle : MonoBehaviour
{
	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cFlyToSnapID flyToFae;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private sBool wasWineGivenToWF;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cGrabbableRedux grabbable;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private soVOEvent firstTimeWineGrabbedVO;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private soVOEvent drinkingWineLine1;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private soVOEvent drinkingWineLine2;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private cShadowHandable shadowhandable;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA670", Offset = "0x8EA670")]
	private cOrphanItems <orphanItem>k__BackingField;

	[Token(Token = "0x1700006D")]
	public cOrphanItems orphanItem
	{
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xB44FF4", Offset = "0xB44FF4", VA = "0xB44FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5CD4", Offset = "0x8F5CD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xB44FFC", Offset = "0xB44FFC", VA = "0xB44FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5CE4", Offset = "0x8F5CE4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xB45004", Offset = "0xB45004", VA = "0xB45004")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xB450A4", Offset = "0xB450A4", VA = "0xB450A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xB4520C", Offset = "0xB4520C", VA = "0xB4520C")]
	public void TryFlyToFae()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xB452DC", Offset = "0xB452DC", VA = "0xB452DC")]
	public void SetBlockGrabbable(bool blockGrabbable)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xB45330", Offset = "0xB45330", VA = "0xB45330")]
	public void WineGrabbed()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xB45380", Offset = "0xB45380", VA = "0xB45380")]
	public void WineReleased()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xB45384", Offset = "0xB45384", VA = "0xB45384")]
	public cWineBottle()
	{
	}
}
[Token(Token = "0x20001BC")]
public class SplashScript : MonoBehaviour
{
	[Token(Token = "0x2000489")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFA30", Offset = "0x8DFA30")]
	private sealed class <FadeBackground>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplashScript <>4__this;

		[Token(Token = "0x1700024A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xA88880", Offset = "0xA88880", VA = "0xA88880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xA888EC", Offset = "0xA888EC", VA = "0xA888EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xA88684", Offset = "0xA88684", VA = "0xA88684")]
		[DebuggerHidden]
		public <FadeBackground>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xA886C0", Offset = "0xA886C0", VA = "0xA886C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xA886C4", Offset = "0xA886C4", VA = "0xA886C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xA88888", Offset = "0xA88888", VA = "0xA88888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private sTutorial initialTutorial;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject darknessCube;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer darknessCubeRend;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject logo;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer logoRend;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float fadeTime;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fadeTimer;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool beenPressed;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	[SerializeField]
	private string confirmSound;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EventInstance confirmSoundInstance;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro versionNumber;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject fundersLogos;

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xA883E8", Offset = "0xA883E8", VA = "0xA883E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xA88468", Offset = "0xA88468", VA = "0xA88468")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xA8846C", Offset = "0xA8846C", VA = "0xA8846C")]
	public void StartTutorial()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xA884D8", Offset = "0xA884D8", VA = "0xA884D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xA884AC", Offset = "0xA884AC", VA = "0xA884AC")]
	public void FadeSplashScreen()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xA88550", Offset = "0xA88550", VA = "0xA88550")]
	public void DisappearLogos()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xA885B4", Offset = "0xA885B4", VA = "0xA885B4")]
	private void PlayConfirmSound()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xA884DC", Offset = "0xA884DC", VA = "0xA884DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5CF4", Offset = "0x8F5CF4")]
	private IEnumerator FadeBackground()
	{
		return null;
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xA886B0", Offset = "0xA886B0", VA = "0xA886B0")]
	public SplashScript()
	{
	}
}
[Token(Token = "0x20001BD")]
public class turnOffBobWhileInState : StateMachineBehaviour
{
	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cBob[] bobScripts;

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x15AEE94", Offset = "0x15AEE94", VA = "0x15AEE94", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x15AEF60", Offset = "0x15AEF60", VA = "0x15AEF60", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x15AEFD8", Offset = "0x15AEFD8", VA = "0x15AEFD8")]
	public turnOffBobWhileInState()
	{
	}
}
[Token(Token = "0x20001BE")]
public class turnOnShudderWhileInState : StateMachineBehaviour
{
	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cShudder shudderScript;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x15AEFE0", Offset = "0x15AEFE0", VA = "0x15AEFE0", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x15AF0B0", Offset = "0x15AF0B0", VA = "0x15AF0B0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x15AF144", Offset = "0x15AF144", VA = "0x15AF144")]
	public turnOnShudderWhileInState()
	{
	}
}
[Token(Token = "0x20001BF")]
public class Wobble : MonoBehaviour
{
	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPos;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastRot;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 angularVelocity;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MaxWobble;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float WobbleSpeed;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float Recovery;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float wobbleAmountX;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float wobbleAmountZ;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float wobbleAmountToAddX;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float wobbleAmountToAddZ;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float pulse;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xA8F818", Offset = "0xA8F818", VA = "0xA8F818")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xA8F870", Offset = "0xA8F870", VA = "0xA8F870")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xA8FB98", Offset = "0xA8FB98", VA = "0xA8FB98")]
	public Wobble()
	{
	}
}
[Token(Token = "0x20001C0")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8DE894", Offset = "0x8DE894")]
public class FastList<T>
{
	[Token(Token = "0x200048A")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFA40", Offset = "0x8DFA40")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700024C")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001D05")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700024D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D07")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D02")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001D03")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D04")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D06")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x1700006E")]
	public int Count
	{
		[Token(Token = "0x6000BC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BC5")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public T Item
	{
		[Token(Token = "0x6000BC6")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000BC7")]
		set
		{
		}
	}

	[Token(Token = "0x6000BC2")]
	public FastList()
	{
	}

	[Token(Token = "0x6000BC3")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000BC8")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000BC9")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000BCA")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000BCB")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000BCC")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCD")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000BCE")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCF")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000BD0")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD1")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD2")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000BD3")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000BD4")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000BD5")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000BD6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5D58", Offset = "0x8F5D58")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000BD7")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000BD8")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000BD9")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000BDA")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000BDB")]
	public void Release()
	{
	}
}
[Token(Token = "0x20001C1")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xCC483C", Offset = "0xCC483C", VA = "0xCC483C")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x20001C2")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xCC4810", Offset = "0xCC4810", VA = "0xCC4810")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x20001C3")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xC2C88C", Offset = "0xC2C88C", VA = "0xC2C88C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xC2C9F8", Offset = "0xC2C9F8", VA = "0xC2C9F8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xC2CD9C", Offset = "0xC2CD9C", VA = "0xC2CD9C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xC2CF5C", Offset = "0xC2CF5C", VA = "0xC2CF5C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xC2CF88", Offset = "0xC2CF88", VA = "0xC2CF88")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x20001C4")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xC2FB30", Offset = "0xC2FB30", VA = "0xC2FB30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xC2FBBC", Offset = "0xC2FBBC", VA = "0xC2FBBC")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xC2FD30", Offset = "0xC2FD30", VA = "0xC2FD30")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x20001C5")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000070")]
	public bool IsVisible
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xB5E1B4", Offset = "0xB5E1B4", VA = "0xB5E1B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xB5E1BC", Offset = "0xB5E1BC", VA = "0xB5E1BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xB5E2F0", Offset = "0xB5E2F0", VA = "0xB5E2F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xB5E518", Offset = "0xB5E518", VA = "0xB5E518")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xB5E520", Offset = "0xB5E520", VA = "0xB5E520")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x20001C6")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200048C")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xC30994", Offset = "0xC30994", VA = "0xC30994")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200048D")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F3DA4", Offset = "0x8F3DA4")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F3DBC", Offset = "0x8F3DBC")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F3DD4", Offset = "0x8F3DD4")]
		public float LatencyWeight;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F3DEC", Offset = "0x8F3DEC")]
		public int MaxSamples;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xC3099C", Offset = "0xC3099C", VA = "0xC3099C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xC30B38", Offset = "0xC30B38", VA = "0xC30B38")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xC2FFBC", Offset = "0xC2FFBC", VA = "0xC2FFBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xC300EC", Offset = "0xC300EC", VA = "0xC300EC")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xC30488", Offset = "0xC30488", VA = "0xC30488")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xC303E8", Offset = "0xC303E8", VA = "0xC303E8")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xC306FC", Offset = "0xC306FC", VA = "0xC306FC")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xC30AAC", Offset = "0xC30AAC", VA = "0xC30AAC")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x20001C7")]
public class P2PManager
{
	[Token(Token = "0x200048E")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001D14")]
		Update = 1
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xC2DF24", Offset = "0xC2DF24", VA = "0xC2DF24")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xC2DFE4", Offset = "0xC2DFE4", VA = "0xC2DFE4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xC2E0C8", Offset = "0xC2E0C8", VA = "0xC2E0C8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xC2E14C", Offset = "0xC2E14C", VA = "0xC2E14C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xC2E2AC", Offset = "0xC2E2AC", VA = "0xC2E2AC")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xC2E564", Offset = "0xC2E564", VA = "0xC2E564")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xC2E964", Offset = "0xC2E964", VA = "0xC2E964")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xC2EC18", Offset = "0xC2EC18", VA = "0xC2EC18")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xC2E72C", Offset = "0xC2E72C", VA = "0xC2E72C")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xC2EB40", Offset = "0xC2EB40", VA = "0xC2EB40")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xC2E81C", Offset = "0xC2E81C", VA = "0xC2E81C")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xC2EE48", Offset = "0xC2EE48", VA = "0xC2EE48")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xC2E77C", Offset = "0xC2E77C", VA = "0xC2E77C")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xC2EB8C", Offset = "0xC2EB8C", VA = "0xC2EB8C")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xC2E8C4", Offset = "0xC2E8C4", VA = "0xC2E8C4")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xC2EED4", Offset = "0xC2EED4", VA = "0xC2EED4")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x20001C8")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xC2F7A8", Offset = "0xC2F7A8", VA = "0xC2F7A8", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xC2F7E4", Offset = "0xC2F7E4", VA = "0xC2F7E4", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xC2F81C", Offset = "0xC2F81C", VA = "0xC2F81C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xC2F844", Offset = "0xC2F844", VA = "0xC2F844")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xC2F9E8", Offset = "0xC2F9E8", VA = "0xC2F9E8")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xC2FA6C", Offset = "0xC2FA6C", VA = "0xC2FA6C")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xC2FAC0", Offset = "0xC2FAC0", VA = "0xC2FAC0")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x20001C9")]
public class RemotePlayer
{
	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xC30BC0", Offset = "0xC30BC0", VA = "0xC30BC0")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x20001CA")]
public class RoomManager
{
	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xC30BC8", Offset = "0xC30BC8", VA = "0xC30BC8")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xC30C94", Offset = "0xC30C94", VA = "0xC30C94")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xC30DFC", Offset = "0xC30DFC", VA = "0xC30DFC")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xC30F10", Offset = "0xC30F10", VA = "0xC30F10")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xC30FC8", Offset = "0xC30FC8", VA = "0xC30FC8")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xC310F4", Offset = "0xC310F4", VA = "0xC310F4")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xC30E2C", Offset = "0xC30E2C", VA = "0xC30E2C")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xC31184", Offset = "0xC31184", VA = "0xC31184")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xC3182C", Offset = "0xC3182C", VA = "0xC3182C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xC31B00", Offset = "0xC31B00", VA = "0xC31B00")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xC31428", Offset = "0xC31428", VA = "0xC31428")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x20001CB")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200048F")]
	public enum State
	{
		[Token(Token = "0x4001D16")]
		INITIALIZING,
		[Token(Token = "0x4001D17")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4001D18")]
		CREATING_A_ROOM,
		[Token(Token = "0x4001D19")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4001D1A")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001D1B")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001D1C")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001D1D")]
		SHUTDOWN
	}

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000071")]
	public static State CurrentState
	{
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xA86F90", Offset = "0xA86F90", VA = "0xA86F90")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000072")]
	public static ulong MyID
	{
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xA87008", Offset = "0xA87008", VA = "0xA87008")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000073")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xA870E4", Offset = "0xA870E4", VA = "0xA870E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xA85034", Offset = "0xA85034", VA = "0xA85034", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xA853D4", Offset = "0xA853D4", VA = "0xA853D4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xA85B70", Offset = "0xA85B70", VA = "0xA85B70")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xA85E44", Offset = "0xA85E44", VA = "0xA85E44", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xA85E48", Offset = "0xA85E48", VA = "0xA85E48")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xA85F40", Offset = "0xA85F40", VA = "0xA85F40")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xA86654", Offset = "0xA86654", VA = "0xA86654")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xA86B6C", Offset = "0xA86B6C", VA = "0xA86B6C")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xA86D48", Offset = "0xA86D48", VA = "0xA86D48")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xA86F20", Offset = "0xA86F20", VA = "0xA86F20")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xA856D8", Offset = "0xA856D8", VA = "0xA856D8")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xA85CD0", Offset = "0xA85CD0", VA = "0xA85CD0")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xA8578C", Offset = "0xA8578C", VA = "0xA8578C")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xA871FC", Offset = "0xA871FC", VA = "0xA871FC")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xA87380", Offset = "0xA87380", VA = "0xA87380")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xA8746C", Offset = "0xA8746C", VA = "0xA8746C")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xA875A0", Offset = "0xA875A0", VA = "0xA875A0")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xA87674", Offset = "0xA87674", VA = "0xA87674")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xA85D84", Offset = "0xA85D84", VA = "0xA85D84")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xA87ABC", Offset = "0xA87ABC", VA = "0xA87ABC")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xA87B4C", Offset = "0xA87B4C", VA = "0xA87B4C")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xA878DC", Offset = "0xA878DC", VA = "0xA878DC")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xA87DFC", Offset = "0xA87DFC", VA = "0xA87DFC")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xA84FAC", Offset = "0xA84FAC", VA = "0xA84FAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F5DBC", Offset = "0x8F5DBC")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xA87F44", Offset = "0xA87F44", VA = "0xA87F44")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xA88010", Offset = "0xA88010", VA = "0xA88010")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x20001CC")]
public class VoipManager
{
	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xA85AB0", Offset = "0xA85AB0", VA = "0xA85AB0")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xA87D20", Offset = "0xA87D20", VA = "0xA87D20")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xA86EA0", Offset = "0xA86EA0", VA = "0xA86EA0")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xA8F010", Offset = "0xA8F010", VA = "0xA8F010")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xA8F164", Offset = "0xA8F164", VA = "0xA8F164")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x20001CD")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xB5DE28", Offset = "0xB5DE28", VA = "0xB5DE28")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xB5DE98", Offset = "0xB5DE98", VA = "0xB5DE98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xB5E020", Offset = "0xB5E020", VA = "0xB5E020")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xB5E084", Offset = "0xB5E084", VA = "0xB5E084")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xB5DED4", Offset = "0xB5DED4", VA = "0xB5DED4")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xB5E14C", Offset = "0xB5E14C", VA = "0xB5E14C")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xB5E1AC", Offset = "0xB5E1AC", VA = "0xB5E1AC")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CE")]
public class AvatarLayer
{
	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xBDB6C8", Offset = "0xBDB6C8", VA = "0xBDB6C8")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CF")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xC2EF60", Offset = "0xC2EF60", VA = "0xC2EF60")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x20001D0")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000490")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xC1FEBC", Offset = "0xC1FEBC", VA = "0xC1FEBC")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000491")]
	public enum HandType
	{
		[Token(Token = "0x4001D20")]
		Right,
		[Token(Token = "0x4001D21")]
		Left,
		[Token(Token = "0x4001D22")]
		Max
	}

	[Token(Token = "0x2000492")]
	public enum HandJoint
	{
		[Token(Token = "0x4001D24")]
		HandBase,
		[Token(Token = "0x4001D25")]
		IndexBase,
		[Token(Token = "0x4001D26")]
		IndexTip,
		[Token(Token = "0x4001D27")]
		ThumbBase,
		[Token(Token = "0x4001D28")]
		ThumbTip,
		[Token(Token = "0x4001D29")]
		Max
	}

	[Token(Token = "0x2000493")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFA50", Offset = "0x8DFA50")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0xC1FE48", Offset = "0xC1FE48", VA = "0xC1FE48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0xC1FEB4", Offset = "0xC1FEB4", VA = "0xC1FEB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xC1FC84", Offset = "0xC1FC84", VA = "0xC1FC84")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xC1FCB0", Offset = "0xC1FCB0", VA = "0xC1FCB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xC1FCB4", Offset = "0xC1FCB4", VA = "0xC1FCB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xC1FE50", Offset = "0xC1FE50", VA = "0xC1FE50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EA728", Offset = "0x8EA728")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EA760", Offset = "0x8EA760")]
	public bool EnableBody;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EA798", Offset = "0x8EA798")]
	public bool RecordPackets;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EA7D0", Offset = "0x8EA7D0")]
	public bool StartWithControllers;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EA808", Offset = "0x8EA808")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EA808", Offset = "0x8EA808")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EA878", Offset = "0x8EA878")]
	private bool CombineMeshes;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EA8B0", Offset = "0x8EA8B0")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EA8E8", Offset = "0x8EA8E8")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EA920", Offset = "0x8EA920")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EA958", Offset = "0x8EA958")]
	public bool EnableLaughter;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000D63")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000D65")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000D66")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000D67")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000D68")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000D69")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xB900FC", Offset = "0xB900FC", VA = "0xB900FC")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xB90468", Offset = "0xB90468", VA = "0xB90468")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xB904F4", Offset = "0xB904F4", VA = "0xB904F4")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xB90564", Offset = "0xB90564", VA = "0xB90564")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xB9068C", Offset = "0xB9068C", VA = "0xB9068C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xB90774", Offset = "0xB90774", VA = "0xB90774")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xB90858", Offset = "0xB90858", VA = "0xB90858")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xB90A44", Offset = "0xB90A44", VA = "0xB90A44")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xB90B0C", Offset = "0xB90B0C", VA = "0xB90B0C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xB90B90", Offset = "0xB90B90", VA = "0xB90B90")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xB90C7C", Offset = "0xB90C7C", VA = "0xB90C7C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xB90D0C", Offset = "0xB90D0C", VA = "0xB90D0C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xB90E38", Offset = "0xB90E38", VA = "0xB90E38")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xB90E98", Offset = "0xB90E98", VA = "0xB90E98")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000C4E")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xB91320", Offset = "0xB91320", VA = "0xB91320")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xB91684", Offset = "0xB91684", VA = "0xB91684")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xB917EC", Offset = "0xB917EC", VA = "0xB917EC")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xB91ABC", Offset = "0xB91ABC", VA = "0xB91ABC")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xB91BAC", Offset = "0xB91BAC", VA = "0xB91BAC")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xB91F68", Offset = "0xB91F68", VA = "0xB91F68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xB9227C", Offset = "0xB9227C", VA = "0xB9227C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xB92CB4", Offset = "0xB92CB4", VA = "0xB92CB4")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xB92CFC", Offset = "0xB92CFC", VA = "0xB92CFC")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xB91E30", Offset = "0xB91E30", VA = "0xB91E30")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xB91ECC", Offset = "0xB91ECC", VA = "0xB91ECC")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xB92D2C", Offset = "0xB92D2C", VA = "0xB92D2C")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xB92604", Offset = "0xB92604", VA = "0xB92604")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xB92F7C", Offset = "0xB92F7C", VA = "0xB92F7C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xB92D94", Offset = "0xB92D94", VA = "0xB92D94")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xB9321C", Offset = "0xB9321C", VA = "0xB9321C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xB93658", Offset = "0xB93658", VA = "0xB93658")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xB938A8", Offset = "0xB938A8", VA = "0xB938A8")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xB939EC", Offset = "0xB939EC", VA = "0xB939EC")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xB93BAC", Offset = "0xB93BAC", VA = "0xB93BAC")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xB927A8", Offset = "0xB927A8", VA = "0xB927A8")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xB93C88", Offset = "0xB93C88", VA = "0xB93C88")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xB92614", Offset = "0xB92614", VA = "0xB92614")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xB93D7C", Offset = "0xB93D7C", VA = "0xB93D7C")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xB94330", Offset = "0xB94330", VA = "0xB94330")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xB94808", Offset = "0xB94808", VA = "0xB94808")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xB94888", Offset = "0xB94888", VA = "0xB94888")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xB9490C", Offset = "0xB9490C", VA = "0xB9490C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xB92B48", Offset = "0xB92B48", VA = "0xB92B48")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xB93E38", Offset = "0xB93E38", VA = "0xB93E38")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xB94DB8", Offset = "0xB94DB8", VA = "0xB94DB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5E20", Offset = "0x8F5E20")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xB94E2C", Offset = "0xB94E2C", VA = "0xB94E2C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xB94C58", Offset = "0xB94C58", VA = "0xB94C58")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xB94EF4", Offset = "0xB94EF4", VA = "0xB94EF4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xB94FE0", Offset = "0xB94FE0", VA = "0xB94FE0")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xB949E4", Offset = "0xB949E4", VA = "0xB949E4")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xB950CC", Offset = "0xB950CC", VA = "0xB950CC")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x20001D1")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xC1FF38", Offset = "0xC1FF38", VA = "0xC1FF38")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x20001D2")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xC1FFE8", Offset = "0xC1FFE8", VA = "0xC1FFE8")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xC212F0", Offset = "0xC212F0", VA = "0xC212F0")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xC20E88", Offset = "0xC20E88", VA = "0xC20E88")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xC20C24", Offset = "0xC20C24", VA = "0xC20C24")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xC20CFC", Offset = "0xC20CFC", VA = "0xC20CFC")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xC21568", Offset = "0xC21568", VA = "0xC21568")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x20001D3")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000D86")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xC21AE8", Offset = "0xC21AE8", VA = "0xC21AE8")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x20001D4")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xC21D5C", Offset = "0xC21D5C", VA = "0xC21D5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xC221CC", Offset = "0xC221CC", VA = "0xC221CC")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x20001D5")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xC222C8", Offset = "0xC222C8", VA = "0xC222C8")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xC22438", Offset = "0xC22438", VA = "0xC22438")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xC22558", Offset = "0xC22558", VA = "0xC22558")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20001D6")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xC225BC", Offset = "0xC225BC", VA = "0xC225BC")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xC21E7C", Offset = "0xC21E7C", VA = "0xC21E7C")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xC22BC4", Offset = "0xC22BC4", VA = "0xC22BC4")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xC22C28", Offset = "0xC22C28", VA = "0xC22C28")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xC23414", Offset = "0xC23414", VA = "0xC23414")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xC22230", Offset = "0xC22230", VA = "0xC22230")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20001D7")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000494")]
	public enum PacketMode
	{
		[Token(Token = "0x4001D2E")]
		SDK,
		[Token(Token = "0x4001D2F")]
		Unity
	}

	[Token(Token = "0x2000495")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xC24A30", Offset = "0xC24A30", VA = "0xC24A30")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000496")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xC24B88", Offset = "0xC24B88", VA = "0xC24B88")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xC246FC", Offset = "0xC246FC", VA = "0xC246FC")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000C89")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xC2470C", Offset = "0xC2470C", VA = "0xC2470C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xC247A0", Offset = "0xC247A0", VA = "0xC247A0")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xC24A18", Offset = "0xC24A18", VA = "0xC24A18")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xC24A20", Offset = "0xC24A20", VA = "0xC24A20")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20001D8")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xC24F4C", Offset = "0xC24F4C", VA = "0xC24F4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xC250AC", Offset = "0xC250AC", VA = "0xC250AC")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20001D9")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xC25118", Offset = "0xC25118", VA = "0xC25118")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xC25284", Offset = "0xC25284", VA = "0xC25284")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xC25628", Offset = "0xC25628", VA = "0xC25628")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xC2585C", Offset = "0xC2585C", VA = "0xC2585C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xC25888", Offset = "0xC25888", VA = "0xC25888")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20001DA")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000497")]
	public enum TextureType
	{
		[Token(Token = "0x4001D40")]
		DiffuseTextures,
		[Token(Token = "0x4001D41")]
		NormalMaps,
		[Token(Token = "0x4001D42")]
		RoughnessMaps,
		[Token(Token = "0x4001D43")]
		Count
	}

	[Token(Token = "0x2000498")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000499")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200049A")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200049B")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xC27A10", Offset = "0xC27A10", VA = "0xC27A10")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200049C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFA60", Offset = "0x8DFA60")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000250")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xC2832C", Offset = "0xC2832C", VA = "0xC2832C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0xC28398", Offset = "0xC28398", VA = "0xC28398", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xC27878", Offset = "0xC27878", VA = "0xC27878")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xC27CAC", Offset = "0xC27CAC", VA = "0xC27CAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xC27CB0", Offset = "0xC27CB0", VA = "0xC27CB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xC28334", Offset = "0xC28334", VA = "0xC28334", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000DBA")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000DBB")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000DBC")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000DBD")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xC25938", Offset = "0xC25938", VA = "0xC25938")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xC25AA0", Offset = "0xC25AA0", VA = "0xC25AA0")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xC25ACC", Offset = "0xC25ACC", VA = "0xC25ACC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xC261F8", Offset = "0xC261F8", VA = "0xC261F8")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xC26488", Offset = "0xC26488", VA = "0xC26488")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xC25B60", Offset = "0xC25B60", VA = "0xC25B60")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xC26580", Offset = "0xC26580", VA = "0xC26580")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xC25F6C", Offset = "0xC25F6C", VA = "0xC25F6C")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xC267F4", Offset = "0xC267F4", VA = "0xC267F4")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xC26A70", Offset = "0xC26A70", VA = "0xC26A70")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xC26B70", Offset = "0xC26B70", VA = "0xC26B70")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xC26BA8", Offset = "0xC26BA8", VA = "0xC26BA8")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xC26178", Offset = "0xC26178", VA = "0xC26178")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5E84", Offset = "0x8F5E84")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xC278A4", Offset = "0xC278A4", VA = "0xC278A4")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20001DB")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000074")]
	public float Duration
	{
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xC283A0", Offset = "0xC283A0", VA = "0xC283A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000075")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xC28410", Offset = "0xC28410", VA = "0xC28410")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xC28498", Offset = "0xC28498", VA = "0xC28498")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xC2855C", Offset = "0xC2855C", VA = "0xC2855C")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xC286A4", Offset = "0xC286A4", VA = "0xC286A4")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xC28780", Offset = "0xC28780", VA = "0xC28780")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xC28854", Offset = "0xC28854", VA = "0xC28854")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xC28A64", Offset = "0xC28A64", VA = "0xC28A64")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xC28CC0", Offset = "0xC28CC0", VA = "0xC28CC0")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20001DC")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xBDBAE8", Offset = "0xBDBAE8", VA = "0xBDBAE8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xBDBC00", Offset = "0xBDBC00", VA = "0xBDBC00")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xBDBDB8", Offset = "0xBDBDB8", VA = "0xBDBDB8")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xBDBC74", Offset = "0xBDBC74", VA = "0xBDBC74")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xBDBD0C", Offset = "0xBDBD0C", VA = "0xBDBD0C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20001DD")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xBDB6D0", Offset = "0xBDB6D0", VA = "0xBDB6D0")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xBDBA88", Offset = "0xBDBA88", VA = "0xBDBA88")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xBDB878", Offset = "0xBDB878", VA = "0xBDB878")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xBDB8F4", Offset = "0xBDB8F4", VA = "0xBDB8F4")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xBDB994", Offset = "0xBDB994", VA = "0xBDB994")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20001DE")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000DC5")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000DC6")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xC28EB8", Offset = "0xC28EB8", VA = "0xC28EB8")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xC28F44", Offset = "0xC28F44", VA = "0xC28F44", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xC28F60", Offset = "0xC28F60", VA = "0xC28F60")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xC29114", Offset = "0xC29114", VA = "0xC29114")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xC292C4", Offset = "0xC292C4", VA = "0xC292C4")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20001DF")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xC29344", Offset = "0xC29344", VA = "0xC29344")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xC29430", Offset = "0xC29430", VA = "0xC29430")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xC2962C", Offset = "0xC2962C", VA = "0xC2962C")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xC299D4", Offset = "0xC299D4", VA = "0xC299D4")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xC29AD4", Offset = "0xC29AD4", VA = "0xC29AD4")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20001E0")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000DCF")]
	Body = 1,
	[Token(Token = "0x4000DD0")]
	Hands = 2,
	[Token(Token = "0x4000DD1")]
	Base = 4,
	[Token(Token = "0x4000DD2")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000DD3")]
	Expressive = 0x20,
	[Token(Token = "0x4000DD4")]
	All = -1
}
[Token(Token = "0x20001E1")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000DD6")]
	AvatarSpecification,
	[Token(Token = "0x4000DD7")]
	AssetLoaded,
	[Token(Token = "0x4000DD8")]
	Count
}
[Token(Token = "0x20001E2")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20001E3")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20001E4")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000DDE")]
	Mesh,
	[Token(Token = "0x4000DDF")]
	Texture,
	[Token(Token = "0x4000DE0")]
	Pose,
	[Token(Token = "0x4000DE1")]
	Material,
	[Token(Token = "0x4000DE2")]
	CombinedMesh,
	[Token(Token = "0x4000DE3")]
	PBSMaterial,
	[Token(Token = "0x4000DE4")]
	FailedLoad,
	[Token(Token = "0x4000DE5")]
	Count
}
[Token(Token = "0x20001E5")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20001E6")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20001E7")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20001E8")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20001E9")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20001EA")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000E1A")]
	RGB24,
	[Token(Token = "0x4000E1B")]
	DXT1,
	[Token(Token = "0x4000E1C")]
	DXT5,
	[Token(Token = "0x4000E1D")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000E1E")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000E1F")]
	Count
}
[Token(Token = "0x20001EB")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20001EC")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000E27")]
	SkinnedMeshRender,
	[Token(Token = "0x4000E28")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000E29")]
	ProjectorRender,
	[Token(Token = "0x4000E2A")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000E2B")]
	Count
}
[Token(Token = "0x20001ED")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000E2D")]
	Unknown,
	[Token(Token = "0x4000E2E")]
	Default,
	[Token(Token = "0x4000E2F")]
	Verbose,
	[Token(Token = "0x4000E30")]
	Debug,
	[Token(Token = "0x4000E31")]
	Info,
	[Token(Token = "0x4000E32")]
	Warn,
	[Token(Token = "0x4000E33")]
	Error,
	[Token(Token = "0x4000E34")]
	Fatal,
	[Token(Token = "0x4000E35")]
	Silent
}
[Token(Token = "0x20001EE")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20001EF")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000E3A")]
	One = 1,
	[Token(Token = "0x4000E3B")]
	Two = 2,
	[Token(Token = "0x4000E3C")]
	Three = 4,
	[Token(Token = "0x4000E3D")]
	Joystick = 8
}
[Token(Token = "0x20001F0")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000E3F")]
	One = 1,
	[Token(Token = "0x4000E40")]
	Two = 2,
	[Token(Token = "0x4000E41")]
	Joystick = 4,
	[Token(Token = "0x4000E42")]
	ThumbRest = 8,
	[Token(Token = "0x4000E43")]
	Index = 0x10,
	[Token(Token = "0x4000E44")]
	Pointing = 0x40,
	[Token(Token = "0x4000E45")]
	ThumbUp = 0x80
}
[Token(Token = "0x20001F1")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20001F2")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20001F3")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20001F4")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001F5")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001F6")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20001F7")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001F8")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20001F9")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000E65")]
	Add,
	[Token(Token = "0x4000E66")]
	Multiply,
	[Token(Token = "0x4000E67")]
	Count
}
[Token(Token = "0x20001FA")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000E69")]
	Color,
	[Token(Token = "0x4000E6A")]
	Texture,
	[Token(Token = "0x4000E6B")]
	TextureSingleChannel,
	[Token(Token = "0x4000E6C")]
	Parallax,
	[Token(Token = "0x4000E6D")]
	Count
}
[Token(Token = "0x20001FB")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000E6F")]
	None,
	[Token(Token = "0x4000E70")]
	Positional,
	[Token(Token = "0x4000E71")]
	ViewReflection,
	[Token(Token = "0x4000E72")]
	Fresnel,
	[Token(Token = "0x4000E73")]
	Pulse,
	[Token(Token = "0x4000E74")]
	Count
}
[Token(Token = "0x20001FC")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000E76")]
	Touch,
	[Token(Token = "0x4000E77")]
	Malibu,
	[Token(Token = "0x4000E78")]
	Go,
	[Token(Token = "0x4000E79")]
	Quest,
	[Token(Token = "0x4000E7A")]
	Count
}
[Token(Token = "0x20001FD")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000E7C")]
	Lowest = 1,
	[Token(Token = "0x4000E7D")]
	Medium = 3,
	[Token(Token = "0x4000E7E")]
	Highest = 5
}
[Token(Token = "0x20001FE")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000E80")]
	Unknown = -1,
	[Token(Token = "0x4000E81")]
	One,
	[Token(Token = "0x4000E82")]
	Two
}
[Token(Token = "0x20001FF")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x15AA0C4", Offset = "0x15AA0C4", VA = "0x15AA0C4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x9BAF58", Offset = "0x9BAF58", VA = "0x9BAF58", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x9BAF60", Offset = "0x9BAF60", VA = "0x9BAF60", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000200")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x15AA3F4", Offset = "0x15AA3F4", VA = "0x15AA3F4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x9BB1FC", Offset = "0x9BB1FC", VA = "0x9BB1FC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x9BB204", Offset = "0x9BB204", VA = "0x9BB204", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000201")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x15A976C", Offset = "0x15A976C", VA = "0x15A976C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x9BACA8", Offset = "0x9BACA8", VA = "0x9BACA8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x9BACB0", Offset = "0x9BACB0", VA = "0x9BACB0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000202")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x15AA930", Offset = "0x15AA930", VA = "0x15AA930")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x9BBAA8", Offset = "0x9BBAA8", VA = "0x9BBAA8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x9BBAB0", Offset = "0x9BBAB0", VA = "0x9BBAB0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000203")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xC1FF40", Offset = "0xC1FF40", VA = "0xC1FF40")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000204")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000205")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000EB7")]
	FirstPerson = 1,
	[Token(Token = "0x4000EB8")]
	ThirdPerson = 2,
	[Token(Token = "0x4000EB9")]
	SelfOccluding = 4
}
[Token(Token = "0x2000206")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000207")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000208")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000209")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200020A")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000ECF")]
	Default,
	[Token(Token = "0x4000ED0")]
	GripSphere,
	[Token(Token = "0x4000ED1")]
	GripCube,
	[Token(Token = "0x4000ED2")]
	Count
}
[Token(Token = "0x200020B")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000ED4")]
	Body,
	[Token(Token = "0x4000ED5")]
	Clothing,
	[Token(Token = "0x4000ED6")]
	Eyewear,
	[Token(Token = "0x4000ED7")]
	Hair,
	[Token(Token = "0x4000ED8")]
	Beard,
	[Token(Token = "0x4000ED9")]
	Count
}
[Token(Token = "0x200020C")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200020D")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200020E")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200020F")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000210")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000EE3")]
	AvatarHead,
	[Token(Token = "0x4000EE4")]
	AvatarHand,
	[Token(Token = "0x4000EE5")]
	Object,
	[Token(Token = "0x4000EE6")]
	ObjectStatic,
	[Token(Token = "0x4000EE7")]
	Count
}
[Token(Token = "0x2000211")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000212")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000213")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000214")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000215")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000EF3")]
	Point,
	[Token(Token = "0x4000EF4")]
	Direction,
	[Token(Token = "0x4000EF5")]
	Spot,
	[Token(Token = "0x4000EF6")]
	Count
}
[Token(Token = "0x2000216")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000217")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000218")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000219")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200021A")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000F0C")]
	None = 0u,
	[Token(Token = "0x4000F0D")]
	GazeTarget = 1u,
	[Token(Token = "0x4000F0E")]
	Any = uint.MaxValue
}
[Token(Token = "0x200021B")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200021C")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200021D")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200021E")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200021F")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000220")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200049D")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x99A2EC", Offset = "0x99A2EC", VA = "0x99A2EC")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000F23")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000076")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xC234A8", Offset = "0xC234A8", VA = "0xC234A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xC29AE4", Offset = "0xC29AE4", VA = "0xC29AE4")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xC29D0C", Offset = "0xC29D0C", VA = "0xC29D0C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xC29D80", Offset = "0xC29D80", VA = "0xC29D80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xC2A5D4", Offset = "0xC2A5D4", VA = "0xC2A5D4")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xC2A630", Offset = "0xC2A630", VA = "0xC2A630")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xC2A68C", Offset = "0xC2A68C", VA = "0xC2A68C")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xC2A6F4", Offset = "0xC2A6F4", VA = "0xC2A6F4")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xC2A75C", Offset = "0xC2A75C", VA = "0xC2A75C")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xC2A40C", Offset = "0xC2A40C", VA = "0xC2A40C")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xC2A84C", Offset = "0xC2A84C", VA = "0xC2A84C")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xC2A968", Offset = "0xC2A968", VA = "0xC2A968")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xC2363C", Offset = "0xC2363C", VA = "0xC2363C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xC2AA4C", Offset = "0xC2AA4C", VA = "0xC2AA4C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xC29CE4", Offset = "0xC29CE4", VA = "0xC29CE4")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xC26260", Offset = "0xC26260", VA = "0xC26260")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xC2AB24", Offset = "0xC2AB24", VA = "0xC2AB24")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000221")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000077")]
	public static string AppID
	{
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xC2AAE4", Offset = "0xC2AAE4", VA = "0xC2AAE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xC2AC7C", Offset = "0xC2AC7C", VA = "0xC2AC7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xC2AB04", Offset = "0xC2AB04", VA = "0xC2AB04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xC2ACA8", Offset = "0xC2ACA8", VA = "0xC2ACA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xC2AB68", Offset = "0xC2AB68", VA = "0xC2AB68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xC2ACD4", Offset = "0xC2ACD4", VA = "0xC2ACD4")]
		set
		{
		}
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xC2AD28", Offset = "0xC2AD28", VA = "0xC2AD28")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000222")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xC2C488", Offset = "0xC2C488", VA = "0xC2C488")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xC225C4", Offset = "0xC225C4", VA = "0xC225C4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xC2C5D0", Offset = "0xC2C5D0", VA = "0xC2C5D0")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xC2C734", Offset = "0xC2C734", VA = "0xC2C734")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000223")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xC2C744", Offset = "0xC2C744", VA = "0xC2C744")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xC227F8", Offset = "0xC227F8", VA = "0xC227F8")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xC2C87C", Offset = "0xC2C87C", VA = "0xC2C87C")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000224")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000F32")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000F33")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000F34")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xC2AD80", Offset = "0xC2AD80", VA = "0xC2AD80")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xC22994", Offset = "0xC22994", VA = "0xC22994")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xC2BC38", Offset = "0xC2BC38", VA = "0xC2BC38")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xC2B360", Offset = "0xC2B360", VA = "0xC2B360")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xC2B128", Offset = "0xC2B128", VA = "0xC2B128")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xC2B240", Offset = "0xC2B240", VA = "0xC2B240")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xC2C478", Offset = "0xC2C478", VA = "0xC2C478")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000225")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200049E")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200049F")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x99A35C", Offset = "0x99A35C", VA = "0x99A35C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20004A0")]
	public struct TextureSet
	{
		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x99A3F4", Offset = "0x99A3F4", VA = "0x99A3F4")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20004A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFA70", Offset = "0x8DFA70")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xC2DCE4", Offset = "0xC2DCE4", VA = "0xC2DCE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xC2DD50", Offset = "0xC2DD50", VA = "0xC2DD50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xC2D678", Offset = "0xC2D678", VA = "0xC2D678")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xC2D7E8", Offset = "0xC2D7E8", VA = "0xC2D7E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xC2D7EC", Offset = "0xC2D7EC", VA = "0xC2D7EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xC2DCEC", Offset = "0xC2DCEC", VA = "0xC2DCEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000F38")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000F39")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000F3C")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000F3D")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000F3E")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000F3F")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000F40")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000F41")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000F42")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xC2D048", Offset = "0xC2D048", VA = "0xC2D048")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xC2D3A4", Offset = "0xC2D3A4", VA = "0xC2D3A4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xC282D8", Offset = "0xC282D8", VA = "0xC282D8")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xC26670", Offset = "0xC26670", VA = "0xC26670")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xC2D530", Offset = "0xC2D530", VA = "0xC2D530")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xC262E4", Offset = "0xC262E4", VA = "0xC262E4")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xC264D8", Offset = "0xC264D8", VA = "0xC264D8")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xC2D5E0", Offset = "0xC2D5E0", VA = "0xC2D5E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5F88", Offset = "0x8F5F88")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xC2A7F8", Offset = "0xC2A7F8", VA = "0xC2A7F8")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xC2D6A4", Offset = "0xC2D6A4", VA = "0xC2D6A4")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000226")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xC2DD58", Offset = "0xC2DD58", VA = "0xC2DD58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xC2DEB8", Offset = "0xC2DEB8", VA = "0xC2DEB8")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000227")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000D14")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xBE24A8", Offset = "0xBE24A8", VA = "0xBE24A8")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000228")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EA9B0", Offset = "0x8EA9B0")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EA9E8", Offset = "0x8EA9E8")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAA20", Offset = "0x8EAA20")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xCC5114", Offset = "0xCC5114", VA = "0xCC5114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xCC5118", Offset = "0xCC5118", VA = "0xCC5118")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xCC5198", Offset = "0xCC5198", VA = "0xCC5198")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xCC5388", Offset = "0xCC5388", VA = "0xCC5388")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000229")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xCC53B0", Offset = "0xCC53B0", VA = "0xCC53B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xCC54C0", Offset = "0xCC54C0", VA = "0xCC54C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xCC57D8", Offset = "0xCC57D8", VA = "0xCC57D8")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xCC5A70", Offset = "0xCC5A70", VA = "0xCC5A70")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xCC5AC0", Offset = "0xCC5AC0", VA = "0xCC5AC0")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200022A")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700007A")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xE9B970", Offset = "0xE9B970", VA = "0xE9B970")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xE9BC2C", Offset = "0xE9BC2C", VA = "0xE9BC2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xE9BD68", Offset = "0xE9BD68", VA = "0xE9BD68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xE9BC9C", Offset = "0xE9BC9C", VA = "0xE9BC9C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xE99B28", Offset = "0xE99B28", VA = "0xE99B28")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xE9BEF0", Offset = "0xE9BEF0", VA = "0xE9BEF0")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xE99AC0", Offset = "0xE99AC0", VA = "0xE99AC0")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xE99BAC", Offset = "0xE99BAC", VA = "0xE99BAC")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xE9BE00", Offset = "0xE9BE00", VA = "0xE9BE00")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xE9BF90", Offset = "0xE9BF90", VA = "0xE9BF90")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xE9BFCC", Offset = "0xE9BFCC", VA = "0xE9BFCC")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xE9C1C8", Offset = "0xE9C1C8", VA = "0xE9C1C8")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xE9BFDC", Offset = "0xE9BFDC", VA = "0xE9BFDC")]
	private void Display()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xE9C278", Offset = "0xE9C278", VA = "0xE9C278")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x200022B")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xE9EA2C", Offset = "0xE9EA2C", VA = "0xE9EA2C")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x200022C")]
public static class OVRTouchpad
{
	[Token(Token = "0x20004A2")]
	public enum TouchEvent
	{
		[Token(Token = "0x4001D76")]
		SingleTap,
		[Token(Token = "0x4001D77")]
		DoubleTap,
		[Token(Token = "0x4001D78")]
		Left,
		[Token(Token = "0x4001D79")]
		Right,
		[Token(Token = "0x4001D7A")]
		Up,
		[Token(Token = "0x4001D7B")]
		Down
	}

	[Token(Token = "0x20004A3")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xE9872C", Offset = "0xE9872C", VA = "0xE9872C")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xEA1460", Offset = "0xEA1460", VA = "0xEA1460")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xEA1784", Offset = "0xEA1784", VA = "0xEA1784")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xEA15D0", Offset = "0xEA15D0", VA = "0xEA15D0")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xE9961C", Offset = "0xE9961C", VA = "0xE9961C")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200022D")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xEA1838", Offset = "0xEA1838", VA = "0xEA1838")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xEA18B4", Offset = "0xEA18B4", VA = "0xEA18B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xEA194C", Offset = "0xEA194C", VA = "0xEA194C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xEA19A8", Offset = "0xEA19A8", VA = "0xEA19A8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xEA1A0C", Offset = "0xEA1A0C", VA = "0xEA1A0C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xEA1A10", Offset = "0xEA1A10", VA = "0xEA1A10")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200022E")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20004A4")]
	public enum Result
	{
		[Token(Token = "0x4001D7D")]
		Success = 0,
		[Token(Token = "0x4001D7E")]
		Unknown = -2200,
		[Token(Token = "0x4001D7F")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4001D80")]
		InvalidParam = -2202,
		[Token(Token = "0x4001D81")]
		BadSampleRate = -2203,
		[Token(Token = "0x4001D82")]
		MissingDLL = -2204,
		[Token(Token = "0x4001D83")]
		BadVersion = -2205,
		[Token(Token = "0x4001D84")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20004A5")]
	public enum AudioDataType
	{
		[Token(Token = "0x4001D86")]
		S16_Mono,
		[Token(Token = "0x4001D87")]
		S16_Stereo,
		[Token(Token = "0x4001D88")]
		F32_Mono,
		[Token(Token = "0x4001D89")]
		F32_Stereo
	}

	[Token(Token = "0x20004A6")]
	public enum Viseme
	{
		[Token(Token = "0x4001D8B")]
		sil,
		[Token(Token = "0x4001D8C")]
		PP,
		[Token(Token = "0x4001D8D")]
		FF,
		[Token(Token = "0x4001D8E")]
		TH,
		[Token(Token = "0x4001D8F")]
		DD,
		[Token(Token = "0x4001D90")]
		kk,
		[Token(Token = "0x4001D91")]
		CH,
		[Token(Token = "0x4001D92")]
		SS,
		[Token(Token = "0x4001D93")]
		nn,
		[Token(Token = "0x4001D94")]
		RR,
		[Token(Token = "0x4001D95")]
		aa,
		[Token(Token = "0x4001D96")]
		E,
		[Token(Token = "0x4001D97")]
		ih,
		[Token(Token = "0x4001D98")]
		oh,
		[Token(Token = "0x4001D99")]
		ou
	}

	[Token(Token = "0x20004A7")]
	public enum Signals
	{
		[Token(Token = "0x4001D9B")]
		VisemeOn,
		[Token(Token = "0x4001D9C")]
		VisemeOff,
		[Token(Token = "0x4001D9D")]
		VisemeAmount,
		[Token(Token = "0x4001D9E")]
		VisemeSmoothing,
		[Token(Token = "0x4001D9F")]
		LaughterAmount
	}

	[Token(Token = "0x20004A8")]
	public enum ContextProviders
	{
		[Token(Token = "0x4001DA1")]
		Original,
		[Token(Token = "0x4001DA2")]
		Enhanced,
		[Token(Token = "0x4001DA3")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20004A9")]
	public class Frame
	{
		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xE9937C", Offset = "0xE9937C", VA = "0xE9937C")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xE993D8", Offset = "0xE993D8", VA = "0xE993D8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xE99468", Offset = "0xE99468", VA = "0xE99468")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000F5D")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xE97C30", Offset = "0xE97C30", VA = "0xE97C30")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xE97CD8", Offset = "0xE97CD8", VA = "0xE97CD8")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xE97D60", Offset = "0xE97D60", VA = "0xE97D60")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xE97E0C", Offset = "0xE97E0C", VA = "0xE97E0C")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xE97ECC", Offset = "0xE97ECC", VA = "0xE97ECC")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xE97FB0", Offset = "0xE97FB0", VA = "0xE97FB0")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xE98048", Offset = "0xE98048", VA = "0xE98048")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xE980E0", Offset = "0xE980E0", VA = "0xE980E0")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xE981A0", Offset = "0xE981A0", VA = "0xE981A0")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xE982B4", Offset = "0xE982B4", VA = "0xE982B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xE98730", Offset = "0xE98730", VA = "0xE98730")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xE985F4", Offset = "0xE985F4", VA = "0xE985F4")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xE98810", Offset = "0xE98810", VA = "0xE98810")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xE98924", Offset = "0xE98924", VA = "0xE98924")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xE98994", Offset = "0xE98994", VA = "0xE98994")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xE989FC", Offset = "0xE989FC", VA = "0xE989FC")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xE98B20", Offset = "0xE98B20", VA = "0xE98B20")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xE98C58", Offset = "0xE98C58", VA = "0xE98C58")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xE98D38", Offset = "0xE98D38", VA = "0xE98D38")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xE98E18", Offset = "0xE98E18", VA = "0xE98E18")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xE98F1C", Offset = "0xE98F1C", VA = "0xE98F1C")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xE990C4", Offset = "0xE990C4", VA = "0xE990C4")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xE99264", Offset = "0xE99264", VA = "0xE99264")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x200022F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DE93C", Offset = "0x8DE93C")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAA58", Offset = "0x8EAA58")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAA90", Offset = "0x8EAA90")]
	public bool enableTouchInput;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAAC8", Offset = "0x8EAAC8")]
	public bool audioLoopback;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAB00", Offset = "0x8EAB00")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAB38", Offset = "0x8EAB38")]
	public bool showVisemes;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAB70", Offset = "0x8EAB70")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EABA8", Offset = "0x8EABA8")]
	public bool skipAudioSource;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EABE0", Offset = "0x8EABE0")]
	public float gain;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xE994F0", Offset = "0xE994F0", VA = "0xE994F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xE996DC", Offset = "0xE996DC", VA = "0xE996DC")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xE99C2C", Offset = "0xE99C2C", VA = "0xE99C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xE99EE8", Offset = "0xE99EE8", VA = "0xE99EE8")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xE99F50", Offset = "0xE99F50", VA = "0xE99F50")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xE99FC0", Offset = "0xE99FC0", VA = "0xE99FC0")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xE9A15C", Offset = "0xE9A15C", VA = "0xE9A15C")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xE9A2F8", Offset = "0xE9A2F8", VA = "0xE9A2F8")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xE9A42C", Offset = "0xE9A42C", VA = "0xE9A42C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xE99C74", Offset = "0xE99C74", VA = "0xE99C74")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xE999EC", Offset = "0xE999EC", VA = "0xE999EC")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xE9A43C", Offset = "0xE9A43C", VA = "0xE9A43C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xE9A568", Offset = "0xE9A568", VA = "0xE9A568")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000230")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DE9A0", Offset = "0x8DE9A0")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAC18", Offset = "0x8EAC18")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAC50", Offset = "0x8EAC50")]
	public bool enableAcceleration;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700007B")]
	public int Smoothing
	{
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xE9A6E8", Offset = "0xE9A6E8", VA = "0xE9A6E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xE9A5FC", Offset = "0xE9A5FC", VA = "0xE9A5FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public uint Context
	{
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xE9A6F0", Offset = "0xE9A6F0", VA = "0xE9A6F0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700007D")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xE9A6F8", Offset = "0xE9A6F8", VA = "0xE9A6F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xE9A700", Offset = "0xE9A700", VA = "0xE9A700")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xE9A898", Offset = "0xE9A898", VA = "0xE9A898")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xE9A9BC", Offset = "0xE9A9BC", VA = "0xE9A9BC")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xE9A9C4", Offset = "0xE9A9C4", VA = "0xE9A9C4")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xE9AAB8", Offset = "0xE9AAB8", VA = "0xE9AAB8")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xE9AB80", Offset = "0xE9AB80", VA = "0xE9AB80")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xE9A58C", Offset = "0xE9A58C", VA = "0xE9A58C")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000231")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DEA04", Offset = "0x8DEA04")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAC88", Offset = "0x8EAC88")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xE9ABF8", Offset = "0xE9ABF8", VA = "0xE9ABF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xE9AD74", Offset = "0xE9AD74", VA = "0xE9AD74")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000232")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EACC0", Offset = "0x8EACC0")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EACF8", Offset = "0x8EACF8")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAD30", Offset = "0x8EAD30")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAD68", Offset = "0x8EAD68")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EADA0", Offset = "0x8EADA0")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EADD8", Offset = "0x8EADD8")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EAE10", Offset = "0x8EAE10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAE10", Offset = "0x8EAE10")]
	public float laughterThreshold;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EAE64", Offset = "0x8EAE64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAE64", Offset = "0x8EAE64")]
	public float laughterMultiplier;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EAEB8", Offset = "0x8EAEB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAEB8", Offset = "0x8EAEB8")]
	public int smoothAmount;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xE9AD78", Offset = "0xE9AD78", VA = "0xE9AD78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xE9AEBC", Offset = "0xE9AEBC", VA = "0xE9AEBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xE9B18C", Offset = "0xE9B18C", VA = "0xE9B18C")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xE9AFCC", Offset = "0xE9AFCC", VA = "0xE9AFCC")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xE9B098", Offset = "0xE9B098", VA = "0xE9B098")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xE9B264", Offset = "0xE9B264", VA = "0xE9B264")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xE9B334", Offset = "0xE9B334", VA = "0xE9B334")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xE9B39C", Offset = "0xE9B39C", VA = "0xE9B39C")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000233")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EAF10", Offset = "0x8EAF10")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x8EAF10", Offset = "0x8EAF10")]
	public Texture[] Textures;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EB08C", Offset = "0x8EB08C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB08C", Offset = "0x8EB08C")]
	public int smoothAmount;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xE9B494", Offset = "0xE9B494", VA = "0xE9B494")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xE9B5E8", Offset = "0xE9B5E8", VA = "0xE9B5E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xE9B79C", Offset = "0xE9B79C", VA = "0xE9B79C")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xE9B8C4", Offset = "0xE9B8C4", VA = "0xE9B8C4")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000234")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DEA68", Offset = "0x8DEA68")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x20004AA")]
	public enum micActivation
	{
		[Token(Token = "0x4001DA9")]
		HoldToSpeak,
		[Token(Token = "0x4001DAA")]
		PushToSpeak,
		[Token(Token = "0x4001DAB")]
		ConstantSpeak
	}

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB0E4", Offset = "0x8EB0E4")]
	public AudioSource audioSource;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB11C", Offset = "0x8EB11C")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB154", Offset = "0x8EB154")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EB18C", Offset = "0x8EB18C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB18C", Offset = "0x8EB18C")]
	private float micInputVolume;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB1F4", Offset = "0x8EB1F4")]
	private int micFrequency;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB240", Offset = "0x8EB240")]
	public micActivation micControl;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB278", Offset = "0x8EB278")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB2B0", Offset = "0x8EB2B0")]
	public string selectedDevice;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x1700007E")]
	public float MicFrequency
	{
		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xE9C2EC", Offset = "0xE9C2EC", VA = "0xE9C2EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xE9C2F8", Offset = "0xE9C2F8", VA = "0xE9C2F8")]
		set
		{
		}
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xE9C384", Offset = "0xE9C384", VA = "0xE9C384")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xE9C444", Offset = "0xE9C444", VA = "0xE9C444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xE9C490", Offset = "0xE9C490", VA = "0xE9C490")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xE9C5E4", Offset = "0xE9C5E4", VA = "0xE9C5E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xE9CA28", Offset = "0xE9CA28", VA = "0xE9CA28")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xE9CA3C", Offset = "0xE9CA3C", VA = "0xE9CA3C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xE9CA54", Offset = "0xE9CA54", VA = "0xE9CA54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xE9CA58", Offset = "0xE9CA58", VA = "0xE9CA58")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xE9CAD0", Offset = "0xE9CAD0", VA = "0xE9CAD0")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xE9C51C", Offset = "0xE9C51C", VA = "0xE9C51C")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xE9C888", Offset = "0xE9C888", VA = "0xE9C888")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xE9C740", Offset = "0xE9C740", VA = "0xE9C740")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xE9CCC4", Offset = "0xE9CCC4", VA = "0xE9CCC4")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xE9CCCC", Offset = "0xE9CCCC", VA = "0xE9CCCC")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000235")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xE9ACCC", Offset = "0xE9ACCC", VA = "0xE9ACCC")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xE9CCFC", Offset = "0xE9CCFC", VA = "0xE9CCFC")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000236")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20004AB")]
	public delegate void OnClick();

	[Token(Token = "0x20004AC")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20004AD")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20004AE")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20004AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFA80", Offset = "0x8DFA80")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xBDFD64", Offset = "0xBDFD64", VA = "0xBDFD64")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xBE0720", Offset = "0xBE0720", VA = "0xBE0720")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20004B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFA90", Offset = "0x8DFA90")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xBDFFE8", Offset = "0xBDFFE8", VA = "0xBDFFE8")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xBE0954", Offset = "0xBE0954", VA = "0xBE0954")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20004B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFAA0", Offset = "0x8DFAA0")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xBE0204", Offset = "0xBE0204", VA = "0xBE0204")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xBE0BB8", Offset = "0xBE0BB8", VA = "0xBE0BB8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20004B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFAB0", Offset = "0x8DFAB0")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xBE039C", Offset = "0xBE039C", VA = "0xBE039C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xBE0F90", Offset = "0xBE0F90", VA = "0xBE0F90")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20004B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFAC0", Offset = "0x8DFAC0")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xBE05F8", Offset = "0xBE05F8", VA = "0xBE05F8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xBE0FB4", Offset = "0xBE0FB4", VA = "0xBE0FB4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000F91")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000F92")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000F93")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000FA0")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000FA1")]
	private const float marginH = 16f;

	[Token(Token = "0x4000FA2")]
	private const float marginV = 16f;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xBDECD0", Offset = "0xBDECD0", VA = "0xBDECD0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xBDF0D8", Offset = "0xBDF0D8", VA = "0xBDF0D8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xBDF6B8", Offset = "0xBDF6B8", VA = "0xBDF6B8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xBDF45C", Offset = "0xBDF45C", VA = "0xBDF45C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xBDF878", Offset = "0xBDF878", VA = "0xBDF878")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xBDFB30", Offset = "0xBDFB30", VA = "0xBDFB30")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xBDFD6C", Offset = "0xBDFD6C", VA = "0xBDFD6C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xBDFE54", Offset = "0xBDFE54", VA = "0xBDFE54")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xBDFFF0", Offset = "0xBDFFF0", VA = "0xBDFFF0")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xBE008C", Offset = "0xBE008C", VA = "0xBE008C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xBE020C", Offset = "0xBE020C", VA = "0xBE020C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xBE03A4", Offset = "0xBE03A4", VA = "0xBE03A4")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xBE0600", Offset = "0xBE0600", VA = "0xBE0600")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xBE06B0", Offset = "0xBE06B0", VA = "0xBE06B0")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000237")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xCC3F40", Offset = "0xCC3F40", VA = "0xCC3F40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xCC3FCC", Offset = "0xCC3FCC", VA = "0xCC3FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xCC4094", Offset = "0xCC4094", VA = "0xCC4094")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xCC40D4", Offset = "0xCC40D4", VA = "0xCC40D4")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000238")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20004B4")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001DB5")]
		On,
		[Token(Token = "0x4001DB6")]
		Off,
		[Token(Token = "0x4001DB7")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700007F")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xCC48B8", Offset = "0xCC48B8", VA = "0xCC48B8")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xCC4874", Offset = "0xCC4874", VA = "0xCC4874")]
		set
		{
		}
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xCC48C0", Offset = "0xCC48C0", VA = "0xCC48C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xCC4918", Offset = "0xCC4918", VA = "0xCC4918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xCC4A30", Offset = "0xCC4A30", VA = "0xCC4A30", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xCC4A4C", Offset = "0xCC4A4C", VA = "0xCC4A4C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xCC4AA4", Offset = "0xCC4AA4", VA = "0xCC4AA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xCC4D08", Offset = "0xCC4D08", VA = "0xCC4D08")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xCC4E1C", Offset = "0xCC4E1C", VA = "0xCC4E1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xCC4EB0", Offset = "0xCC4EB0", VA = "0xCC4EB0")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xCC4F80", Offset = "0xCC4F80", VA = "0xCC4F80")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xCC5038", Offset = "0xCC5038", VA = "0xCC5038")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xCC5104", Offset = "0xCC5104", VA = "0xCC5104")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000239")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xBDBE10", Offset = "0xBDBE10", VA = "0xBDBE10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xBDC020", Offset = "0xBDC020", VA = "0xBDC020")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xBDC4FC", Offset = "0xBDC4FC", VA = "0xBDC4FC")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200023A")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xCC1A3C", Offset = "0xCC1A3C", VA = "0xCC1A3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xCC1B74", Offset = "0xCC1B74", VA = "0xCC1B74")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xCC1DD0", Offset = "0xCC1DD0", VA = "0xCC1DD0")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200023B")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000080")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xCC1E7C", Offset = "0xCC1E7C", VA = "0xCC1E7C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000007")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xCC1AD0", Offset = "0xCC1AD0", VA = "0xCC1AD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5FEC", Offset = "0x8F5FEC")]
		add
		{
		}
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xCC1DD8", Offset = "0xCC1DD8", VA = "0xCC1DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5FFC", Offset = "0x8F5FFC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xCC1E88", Offset = "0xCC1E88", VA = "0xCC1E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xCC1FF4", Offset = "0xCC1FF4", VA = "0xCC1FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xCC2174", Offset = "0xCC2174", VA = "0xCC2174")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xCC217C", Offset = "0xCC217C", VA = "0xCC217C")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x200023C")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000FC3")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000FC4")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000FC5")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB398", Offset = "0x8EB398")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB3D0", Offset = "0x8EB3D0")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB408", Offset = "0x8EB408")]
	public float HeightOffset;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB440", Offset = "0x8EB440")]
	public float MinimumHeight;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB478", Offset = "0x8EB478")]
	public float MaximumHeight;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xBDD254", Offset = "0xBDD254", VA = "0xBDD254")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xBDD25C", Offset = "0xBDD25C", VA = "0xBDD25C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xBDD2CC", Offset = "0xBDD2CC", VA = "0xBDD2CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xBDD35C", Offset = "0xBDD35C", VA = "0xBDD35C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xBDD3EC", Offset = "0xBDD3EC", VA = "0xBDD3EC")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xBDD7FC", Offset = "0xBDD7FC", VA = "0xBDD7FC")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xBDDAA8", Offset = "0xBDDAA8", VA = "0xBDDAA8")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200023D")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xCC5AD0", Offset = "0xCC5AD0", VA = "0xCC5AD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xCC5B7C", Offset = "0xCC5B7C", VA = "0xCC5B7C")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200023E")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20004B5")]
	public enum States
	{
		[Token(Token = "0x4001DB9")]
		Ready,
		[Token(Token = "0x4001DBA")]
		Aim,
		[Token(Token = "0x4001DBB")]
		CancelAim,
		[Token(Token = "0x4001DBC")]
		PreTeleport,
		[Token(Token = "0x4001DBD")]
		CancelTeleport,
		[Token(Token = "0x4001DBE")]
		Teleporting,
		[Token(Token = "0x4001DBF")]
		PostTeleport
	}

	[Token(Token = "0x20004B6")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001DC1")]
		None,
		[Token(Token = "0x4001DC2")]
		Aim,
		[Token(Token = "0x4001DC3")]
		PreTeleport,
		[Token(Token = "0x4001DC4")]
		Teleport
	}

	[Token(Token = "0x20004B7")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001DC6")]
		Point,
		[Token(Token = "0x4001DC7")]
		Sphere,
		[Token(Token = "0x4001DC8")]
		Capsule
	}

	[Token(Token = "0x20004B8")]
	public class AimData
	{
		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E04", Offset = "0x8F3E04")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000254")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0xCC8DCC", Offset = "0xCC8DCC", VA = "0xCC8DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F942C", Offset = "0x8F942C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xCC8DD4", Offset = "0xCC8DD4", VA = "0xCC8DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F943C", Offset = "0x8F943C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xCC8D58", Offset = "0xCC8D58", VA = "0xCC8D58")]
		public AimData()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xCC8DDC", Offset = "0xCC8DDC", VA = "0xCC8DDC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20004B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFAD0", Offset = "0x8DFAD0")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000255")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0xCC8B98", Offset = "0xCC8B98", VA = "0xCC8B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xCC8C04", Offset = "0xCC8C04", VA = "0xCC8C04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xCC7068", Offset = "0xCC7068", VA = "0xCC7068")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xCC8AAC", Offset = "0xCC8AAC", VA = "0xCC8AAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xCC8AB0", Offset = "0xCC8AB0", VA = "0xCC8AB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xCC8BA0", Offset = "0xCC8BA0", VA = "0xCC8BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFAE0", Offset = "0x8DFAE0")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000257")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D52")]
			[Address(RVA = "0xCC8568", Offset = "0xCC8568", VA = "0xCC8568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xCC85D4", Offset = "0xCC85D4", VA = "0xCC85D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xCC7554", Offset = "0xCC7554", VA = "0xCC7554")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xCC842C", Offset = "0xCC842C", VA = "0xCC842C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xCC8430", Offset = "0xCC8430", VA = "0xCC8430", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xCC8570", Offset = "0xCC8570", VA = "0xCC8570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFAF0", Offset = "0x8DFAF0")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000259")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xCC867C", Offset = "0xCC867C", VA = "0xCC867C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xCC86E8", Offset = "0xCC86E8", VA = "0xCC86E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xCC773C", Offset = "0xCC773C", VA = "0xCC773C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xCC85DC", Offset = "0xCC85DC", VA = "0xCC85DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xCC85E0", Offset = "0xCC85E0", VA = "0xCC85E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xCC8684", Offset = "0xCC8684", VA = "0xCC8684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB00", Offset = "0x8DFB00")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700025B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0xCC8A38", Offset = "0xCC8A38", VA = "0xCC8A38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0xCC8AA4", Offset = "0xCC8AA4", VA = "0xCC8AA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xCC7924", Offset = "0xCC7924", VA = "0xCC7924")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xCC895C", Offset = "0xCC895C", VA = "0xCC895C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xCC8960", Offset = "0xCC8960", VA = "0xCC8960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xCC8A40", Offset = "0xCC8A40", VA = "0xCC8A40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB10", Offset = "0x8DFB10")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700025D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0xCC8790", Offset = "0xCC8790", VA = "0xCC8790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xCC87FC", Offset = "0xCC87FC", VA = "0xCC87FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xCC7B0C", Offset = "0xCC7B0C", VA = "0xCC7B0C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xCC86F0", Offset = "0xCC86F0", VA = "0xCC86F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xCC86F4", Offset = "0xCC86F4", VA = "0xCC86F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xCC8798", Offset = "0xCC8798", VA = "0xCC8798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB20", Offset = "0x8DFB20")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700025F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0xCC8CE4", Offset = "0xCC8CE4", VA = "0xCC8CE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xCC8D50", Offset = "0xCC8D50", VA = "0xCC8D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xCC7CF4", Offset = "0xCC7CF4", VA = "0xCC7CF4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xCC8C0C", Offset = "0xCC8C0C", VA = "0xCC8C0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xCC8C10", Offset = "0xCC8C10", VA = "0xCC8C10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xCC8CEC", Offset = "0xCC8CEC", VA = "0xCC8CEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB30", Offset = "0x8DFB30")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000261")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0xCC88E8", Offset = "0xCC88E8", VA = "0xCC88E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D72")]
			[Address(RVA = "0xCC8954", Offset = "0xCC8954", VA = "0xCC8954", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xCC7EDC", Offset = "0xCC7EDC", VA = "0xCC7EDC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xCC8804", Offset = "0xCC8804", VA = "0xCC8804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xCC8808", Offset = "0xCC8808", VA = "0xCC8808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xCC88F0", Offset = "0xCC88F0", VA = "0xCC88F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB4B0", Offset = "0x8EB4B0")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB4E8", Offset = "0x8EB4E8")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB520", Offset = "0x8EB520")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB558", Offset = "0x8EB558")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB590", Offset = "0x8EB590")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB5C8", Offset = "0x8EB5C8")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB600", Offset = "0x8EB600")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB638", Offset = "0x8EB638")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB670", Offset = "0x8EB670")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB680", Offset = "0x8EB680")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB6B8", Offset = "0x8EB6B8")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB700", Offset = "0x8EB700")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB710", Offset = "0x8EB710")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB748", Offset = "0x8EB748")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB780", Offset = "0x8EB780")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB7B8", Offset = "0x8EB7B8")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000081")]
	public States CurrentState
	{
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xCC6590", Offset = "0xCC6590", VA = "0xCC6590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F600C", Offset = "0x8F600C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xCC6598", Offset = "0xCC6598", VA = "0xCC6598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F601C", Offset = "0x8F601C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xCC67C8", Offset = "0xCC67C8", VA = "0xCC67C8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000083")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xCC67F4", Offset = "0xCC67F4", VA = "0xCC67F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F604C", Offset = "0x8F604C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xCC67FC", Offset = "0xCC67FC", VA = "0xCC67FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F605C", Offset = "0x8F605C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xCC65A0", Offset = "0xCC65A0", VA = "0xCC65A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F602C", Offset = "0x8F602C")]
		add
		{
		}
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xCC6644", Offset = "0xCC6644", VA = "0xCC6644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F603C", Offset = "0x8F603C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xCC6F20", Offset = "0xCC6F20", VA = "0xCC6F20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F60A4", Offset = "0x8F60A4")]
		add
		{
		}
		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xCC6FC4", Offset = "0xCC6FC4", VA = "0xCC6FC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F60B4", Offset = "0x8F60B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xCC7094", Offset = "0xCC7094", VA = "0xCC7094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6128", Offset = "0x8F6128")]
		add
		{
		}
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xCC7138", Offset = "0xCC7138", VA = "0xCC7138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6138", Offset = "0x8F6138")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xCC71DC", Offset = "0xCC71DC", VA = "0xCC71DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6148", Offset = "0x8F6148")]
		add
		{
		}
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xCC7280", Offset = "0xCC7280", VA = "0xCC7280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6158", Offset = "0x8F6158")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xCC7398", Offset = "0xCC7398", VA = "0xCC7398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6168", Offset = "0x8F6168")]
		add
		{
		}
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xCC743C", Offset = "0xCC743C", VA = "0xCC743C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6178", Offset = "0x8F6178")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xCC7580", Offset = "0xCC7580", VA = "0xCC7580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F61EC", Offset = "0x8F61EC")]
		add
		{
		}
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xCC7624", Offset = "0xCC7624", VA = "0xCC7624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F61FC", Offset = "0x8F61FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xCC7768", Offset = "0xCC7768", VA = "0xCC7768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6270", Offset = "0x8F6270")]
		add
		{
		}
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xCC780C", Offset = "0xCC780C", VA = "0xCC780C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6280", Offset = "0x8F6280")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xCC7950", Offset = "0xCC7950", VA = "0xCC7950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F62F4", Offset = "0x8F62F4")]
		add
		{
		}
		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xCC79F4", Offset = "0xCC79F4", VA = "0xCC79F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6304", Offset = "0x8F6304")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xCC7B38", Offset = "0xCC7B38", VA = "0xCC7B38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6378", Offset = "0x8F6378")]
		add
		{
		}
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xCC7BDC", Offset = "0xCC7BDC", VA = "0xCC7BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6388", Offset = "0x8F6388")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xCC7D20", Offset = "0xCC7D20", VA = "0xCC7D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F63FC", Offset = "0x8F63FC")]
		add
		{
		}
		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xCC7DC4", Offset = "0xCC7DC4", VA = "0xCC7DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F640C", Offset = "0x8F640C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xCC7F08", Offset = "0xCC7F08", VA = "0xCC7F08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6480", Offset = "0x8F6480")]
		add
		{
		}
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xCC7FAC", Offset = "0xCC7FAC", VA = "0xCC7FAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6490", Offset = "0x8F6490")]
		remove
		{
		}
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xCC6248", Offset = "0xCC6248", VA = "0xCC6248")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xCC626C", Offset = "0xCC626C", VA = "0xCC626C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xCC66E8", Offset = "0xCC66E8", VA = "0xCC66E8")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xCC6804", Offset = "0xCC6804", VA = "0xCC6804")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xCC6B64", Offset = "0xCC6B64", VA = "0xCC6B64")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F606C", Offset = "0x8F606C")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xCC6C1C", Offset = "0xCC6C1C", VA = "0xCC6C1C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xCC6CE8", Offset = "0xCC6CE8", VA = "0xCC6CE8")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xCC6D04", Offset = "0xCC6D04", VA = "0xCC6D04")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xCC6DD0", Offset = "0xCC6DD0", VA = "0xCC6DD0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xCC6E18", Offset = "0xCC6E18", VA = "0xCC6E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xCC6E74", Offset = "0xCC6E74", VA = "0xCC6E74", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xCC6F18", Offset = "0xCC6F18", VA = "0xCC6F18", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xCC6EA4", Offset = "0xCC6EA4", VA = "0xCC6EA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F60C4", Offset = "0x8F60C4")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xCC7324", Offset = "0xCC7324", VA = "0xCC7324")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xCC74E0", Offset = "0xCC74E0", VA = "0xCC74E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6188", Offset = "0x8F6188")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xCC76C8", Offset = "0xCC76C8", VA = "0xCC76C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F620C", Offset = "0x8F620C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xCC78B0", Offset = "0xCC78B0", VA = "0xCC78B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6290", Offset = "0x8F6290")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xCC7A98", Offset = "0xCC7A98", VA = "0xCC7A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6314", Offset = "0x8F6314")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xCC7C80", Offset = "0xCC7C80", VA = "0xCC7C80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6398", Offset = "0x8F6398")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xCC7E68", Offset = "0xCC7E68", VA = "0xCC7E68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F641C", Offset = "0x8F641C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xCC8050", Offset = "0xCC8050", VA = "0xCC8050")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xCC8198", Offset = "0xCC8198", VA = "0xCC8198")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xCC81D0", Offset = "0xCC81D0", VA = "0xCC81D0")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xCC82EC", Offset = "0xCC82EC", VA = "0xCC82EC")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xCC841C", Offset = "0xCC841C", VA = "0xCC841C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200023F")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x14000013")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xA84368", Offset = "0xA84368", VA = "0xA84368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F64A0", Offset = "0x8F64A0")]
		add
		{
		}
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xA8440C", Offset = "0xA8440C", VA = "0xA8440C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F64B0", Offset = "0x8F64B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xA844B0", Offset = "0xA844B0", VA = "0xA844B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F64C0", Offset = "0x8F64C0")]
		add
		{
		}
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xA84554", Offset = "0xA84554", VA = "0xA84554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F64D0", Offset = "0x8F64D0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xA845F8", Offset = "0xA845F8", VA = "0xA845F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xA846A0", Offset = "0xA846A0", VA = "0xA846A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xA846A4", Offset = "0xA846A4", VA = "0xA846A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xA84718", Offset = "0xA84718", VA = "0xA84718")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xA8488C", Offset = "0xA8488C", VA = "0xA8488C")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xA84B74", Offset = "0xA84B74", VA = "0xA84B74")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xA84D6C", Offset = "0xA84D6C", VA = "0xA84D6C")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000240")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xA898A0", Offset = "0xA898A0", VA = "0xA898A0", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xA89938", Offset = "0xA89938", VA = "0xA89938", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000E01")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xA89A0C", Offset = "0xA89A0C", VA = "0xA89A0C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000241")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB8B0", Offset = "0x8EB8B0")]
	public float Range;

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xA89A1C", Offset = "0xA89A1C", VA = "0xA89A1C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xA89B7C", Offset = "0xA89B7C", VA = "0xA89B7C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000242")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB8E8", Offset = "0x8EB8E8")]
	public float Range;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB920", Offset = "0x8EB920")]
	public float MinimumElevation;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB958", Offset = "0x8EB958")]
	public float Gravity;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB990", Offset = "0x8EB990")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EB990", Offset = "0x8EB990")]
	public float AimVelocity;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EB9EC", Offset = "0x8EB9EC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EB9EC", Offset = "0x8EB9EC")]
	public float AimStep;

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xA89B8C", Offset = "0xA89B8C", VA = "0xA89B8C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xA89DDC", Offset = "0xA89DDC", VA = "0xA89DDC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000243")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBA44", Offset = "0x8EBA44")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xA89DF0", Offset = "0xA89DF0", VA = "0xA89DF0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xA89ED4", Offset = "0xA89ED4", VA = "0xA89ED4")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xA89F04", Offset = "0xA89F04", VA = "0xA89F04")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xA89F34", Offset = "0xA89F34", VA = "0xA89F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xA89FD4", Offset = "0xA89FD4", VA = "0xA89FD4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xA8A040", Offset = "0xA8A040", VA = "0xA8A040", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xA8A0A8", Offset = "0xA8A0A8", VA = "0xA8A0A8")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000244")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EBA7C", Offset = "0x8EBA7C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBA8C", Offset = "0x8EBA8C")]
	public Transform PositionIndicator;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBAC4", Offset = "0x8EBAC4")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBAFC", Offset = "0x8EBAFC")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000084")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xA8A1CC", Offset = "0xA8A1CC", VA = "0xA8A1CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F64E0", Offset = "0x8F64E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xA8A1D4", Offset = "0xA8A1D4", VA = "0xA8A1D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F64F0", Offset = "0x8F64F0")]
		private set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xA8A38C", Offset = "0xA8A38C", VA = "0xA8A38C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6500", Offset = "0x8F6500")]
		add
		{
		}
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xA8A430", Offset = "0xA8A430", VA = "0xA8A430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6510", Offset = "0x8F6510")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xA8A1E0", Offset = "0xA8A1E0", VA = "0xA8A1E0")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xA8A270", Offset = "0xA8A270", VA = "0xA8A270")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xA8A348", Offset = "0xA8A348", VA = "0xA8A348")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xA8A388", Offset = "0xA8A388", VA = "0xA8A388")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xA8A4D4", Offset = "0xA8A4D4", VA = "0xA8A4D4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xA8A53C", Offset = "0xA8A53C", VA = "0xA8A53C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xA8A560", Offset = "0xA8A560", VA = "0xA8A560", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000245")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB40", Offset = "0x8DFB40")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000263")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D76")]
			[Address(RVA = "0xA8AC58", Offset = "0xA8AC58", VA = "0xA8AC58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D78")]
			[Address(RVA = "0xA8ACC4", Offset = "0xA8ACC4", VA = "0xA8ACC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xA8A994", Offset = "0xA8A994", VA = "0xA8A994")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xA8ABC4", Offset = "0xA8ABC4", VA = "0xA8ABC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xA8ABC8", Offset = "0xA8ABC8", VA = "0xA8ABC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xA8AC60", Offset = "0xA8AC60", VA = "0xA8AC60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB50", Offset = "0x8DFB50")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000265")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xA8AB50", Offset = "0xA8AB50", VA = "0xA8AB50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xA8ABBC", Offset = "0xA8ABBC", VA = "0xA8ABBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xA8AA34", Offset = "0xA8AA34", VA = "0xA8AA34")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xA8AAB8", Offset = "0xA8AAB8", VA = "0xA8AAB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xA8AABC", Offset = "0xA8AABC", VA = "0xA8AABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xA8AB58", Offset = "0xA8AB58", VA = "0xA8AB58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xA8A758", Offset = "0xA8A758", VA = "0xA8A758")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xA8A804", Offset = "0xA8A804", VA = "0xA8A804", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xA8A860", Offset = "0xA8A860", VA = "0xA8A860", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xA8A920", Offset = "0xA8A920", VA = "0xA8A920")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6520", Offset = "0x8F6520")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xA8A9C0", Offset = "0xA8A9C0", VA = "0xA8A9C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6584", Offset = "0x8F6584")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E1E")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000E1F")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xA8AA60", Offset = "0xA8AA60", VA = "0xA8AA60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F65E8", Offset = "0x8F65E8")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xA8AA8C", Offset = "0xA8AA8C", VA = "0xA8AA8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F65F8", Offset = "0x8F65F8")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000246")]
public class TeleportInputHandlerAvatarTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20004C2")]
	public enum InputModes
	{
		[Token(Token = "0x4001DEA")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001DEB")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001DEC")]
		ThumbstickTeleport,
		[Token(Token = "0x4001DED")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20004C3")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001DEF")]
		A,
		[Token(Token = "0x4001DF0")]
		B,
		[Token(Token = "0x4001DF1")]
		LeftTrigger,
		[Token(Token = "0x4001DF2")]
		LeftThumbstick,
		[Token(Token = "0x4001DF3")]
		RightTrigger,
		[Token(Token = "0x4001DF4")]
		RightThumbstick,
		[Token(Token = "0x4001DF5")]
		X,
		[Token(Token = "0x4001DF6")]
		Y
	}

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBB44", Offset = "0x8EBB44")]
	public OvrAvatar Avatar;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBB7C", Offset = "0x8EBB7C")]
	public InputModes InputMode;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBBB4", Offset = "0x8EBBB4")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBBEC", Offset = "0x8EBBEC")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBC24", Offset = "0x8EBC24")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xA8ACCC", Offset = "0xA8ACCC", VA = "0xA8ACCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xA8ADAC", Offset = "0xA8ADAC", VA = "0xA8ADAC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xA8B35C", Offset = "0xA8B35C", VA = "0xA8B35C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xA8B440", Offset = "0xA8B440", VA = "0xA8B440")]
	public TeleportInputHandlerAvatarTouch()
	{
	}
}
[Token(Token = "0x2000247")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EBC5C", Offset = "0x8EBC5C")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBC6C", Offset = "0x8EBC6C")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBCA4", Offset = "0x8EBCA4")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBCDC", Offset = "0x8EBCDC")]
	public bool FastTeleport;

	[Token(Token = "0x17000085")]
	public Transform Pointer
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xA8B4F0", Offset = "0xA8B4F0", VA = "0xA8B4F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6608", Offset = "0x8F6608")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xA8B4F8", Offset = "0xA8B4F8", VA = "0xA8B4F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6618", Offset = "0x8F6618")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xA8B1FC", Offset = "0xA8B1FC", VA = "0xA8B1FC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xA8B500", Offset = "0xA8B500", VA = "0xA8B500", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xA8B4EC", Offset = "0xA8B4EC", VA = "0xA8B4EC")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000248")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20004C4")]
	public enum InputModes
	{
		[Token(Token = "0x4001DF8")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001DF9")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001DFA")]
		ThumbstickTeleport,
		[Token(Token = "0x4001DFB")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20004C5")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001DFD")]
		A,
		[Token(Token = "0x4001DFE")]
		B,
		[Token(Token = "0x4001DFF")]
		LeftTrigger,
		[Token(Token = "0x4001E00")]
		LeftThumbstick,
		[Token(Token = "0x4001E01")]
		RightTrigger,
		[Token(Token = "0x4001E02")]
		RightThumbstick,
		[Token(Token = "0x4001E03")]
		X,
		[Token(Token = "0x4001E04")]
		Y
	}

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBD14", Offset = "0x8EBD14")]
	public InputModes InputMode;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBD4C", Offset = "0x8EBD4C")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBD84", Offset = "0x8EBD84")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBDBC", Offset = "0x8EBDBC")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xA8B5BC", Offset = "0xA8B5BC", VA = "0xA8B5BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xA8B5C0", Offset = "0xA8B5C0", VA = "0xA8B5C0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xA8BA10", Offset = "0xA8BA10", VA = "0xA8BA10", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xA8BAD4", Offset = "0xA8BAD4", VA = "0xA8BAD4")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000249")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20004C6")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001E06")]
		HeadRelative,
		[Token(Token = "0x4001E07")]
		ForwardFacing
	}

	[Token(Token = "0x20004C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB60", Offset = "0x8DFB60")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000267")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0xA8BF70", Offset = "0xA8BF70", VA = "0xA8BF70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D84")]
			[Address(RVA = "0xA8BFDC", Offset = "0xA8BFDC", VA = "0xA8BFDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xA8BD44", Offset = "0xA8BD44", VA = "0xA8BD44")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xA8BEC4", Offset = "0xA8BEC4", VA = "0xA8BEC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xA8BEC8", Offset = "0xA8BEC8", VA = "0xA8BEC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xA8BF78", Offset = "0xA8BF78", VA = "0xA8BF78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xA8BB80", Offset = "0xA8BB80", VA = "0xA8BB80")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xA8BC34", Offset = "0xA8BC34", VA = "0xA8BC34")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xA8BC3C", Offset = "0xA8BC3C", VA = "0xA8BC3C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xA8BC88", Offset = "0xA8BC88", VA = "0xA8BC88", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xA8BCD0", Offset = "0xA8BCD0", VA = "0xA8BCD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6628", Offset = "0x8F6628")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E34")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000E35")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xA8BD70", Offset = "0xA8BD70", VA = "0xA8BD70")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xA8BE98", Offset = "0xA8BE98", VA = "0xA8BE98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F668C", Offset = "0x8F668C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200024A")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xA8BFE4", Offset = "0xA8BFE4", VA = "0xA8BFE4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xA8BFE8", Offset = "0xA8BFE8", VA = "0xA8BFE8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xA8C068", Offset = "0xA8C068", VA = "0xA8C068")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200024B")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBDF4", Offset = "0x8EBDF4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBE2C", Offset = "0x8EBE2C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBE64", Offset = "0x8EBE64")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBE9C", Offset = "0x8EBE9C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xA8C06C", Offset = "0xA8C06C", VA = "0xA8C06C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xA8C0DC", Offset = "0xA8C0DC", VA = "0xA8C0DC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xA8C564", Offset = "0xA8C564", VA = "0xA8C564")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200024C")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBED4", Offset = "0x8EBED4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBF0C", Offset = "0x8EBF0C")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBF44", Offset = "0x8EBF44")]
	public float RotateStickThreshold;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xA8C568", Offset = "0xA8C568", VA = "0xA8C568", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xA8C5AC", Offset = "0xA8C5AC", VA = "0xA8C5AC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xA8CA20", Offset = "0xA8CA20", VA = "0xA8CA20")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200024D")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xA8CA30", Offset = "0xA8CA30", VA = "0xA8CA30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xA8CA34", Offset = "0xA8CA34", VA = "0xA8CA34")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xA8CA3C", Offset = "0xA8CA3C", VA = "0xA8CA3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xA8CB24", Offset = "0xA8CB24", VA = "0xA8CB24")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xA8CB4C", Offset = "0xA8CB4C", VA = "0xA8CB4C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200024E")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EBF7C", Offset = "0x8EBF7C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000086")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xA8CB64", Offset = "0xA8CB64", VA = "0xA8CB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F669C", Offset = "0x8F669C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xA8CB6C", Offset = "0xA8CB6C", VA = "0xA8CB6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F66AC", Offset = "0x8F66AC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xA898D4", Offset = "0xA898D4", VA = "0xA898D4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xA899E0", Offset = "0xA899E0", VA = "0xA899E0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xA8CB74", Offset = "0xA8CB74", VA = "0xA8CB74")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F66BC", Offset = "0x8F66BC")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xA8A034", Offset = "0xA8A034", VA = "0xA8A034", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xA8A0A0", Offset = "0xA8A0A0", VA = "0xA8A0A0", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xA89A14", Offset = "0xA89A14", VA = "0xA89A14")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200024F")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20004C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB70", Offset = "0x8DFB70")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000269")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0xA8D1D8", Offset = "0xA8D1D8", VA = "0xA8D1D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0xA8D244", Offset = "0xA8D244", VA = "0xA8D244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xA8CDD0", Offset = "0xA8CDD0", VA = "0xA8CDD0")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xA8CF6C", Offset = "0xA8CF6C", VA = "0xA8CF6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xA8CF70", Offset = "0xA8CF70", VA = "0xA8CF70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xA8D1E0", Offset = "0xA8D1E0", VA = "0xA8D1E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBF8C", Offset = "0x8EBF8C")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4001042")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xA8CC3C", Offset = "0xA8CC3C", VA = "0xA8CC3C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xA8CD00", Offset = "0xA8CD00", VA = "0xA8CD00", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xA8CD30", Offset = "0xA8CD30", VA = "0xA8CD30", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xA8CD5C", Offset = "0xA8CD5C", VA = "0xA8CD5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F66F4", Offset = "0x8F66F4")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xA8CDFC", Offset = "0xA8CDFC", VA = "0xA8CDFC", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000E53")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xA8CE18", Offset = "0xA8CE18", VA = "0xA8CE18", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xA8CF40", Offset = "0xA8CF40", VA = "0xA8CF40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6758", Offset = "0x8F6758")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000250")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xA8D24C", Offset = "0xA8D24C", VA = "0xA8D24C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xA8D2AC", Offset = "0xA8D2AC", VA = "0xA8D2AC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xA8D434", Offset = "0xA8D434", VA = "0xA8D434", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xA8D524", Offset = "0xA8D524", VA = "0xA8D524")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F6768", Offset = "0x8F6768")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xA8D528", Offset = "0xA8D528", VA = "0xA8D528")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000251")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBFC4", Offset = "0x8EBFC4")]
	public float LOSOffset;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EBFFC", Offset = "0x8EBFFC")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xA8D534", Offset = "0xA8D534", VA = "0xA8D534", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xA8D768", Offset = "0xA8D768", VA = "0xA8D768")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000252")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xA8D774", Offset = "0xA8D774", VA = "0xA8D774", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xA8D8FC", Offset = "0xA8D8FC", VA = "0xA8D8FC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000253")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xA8D900", Offset = "0xA8D900", VA = "0xA8D900", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xA8D9A0", Offset = "0xA8D9A0", VA = "0xA8D9A0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000E61")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xA8DA3C", Offset = "0xA8DA3C", VA = "0xA8DA3C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000254")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20004C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB80", Offset = "0x8DFB80")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700026B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0xA8DDB4", Offset = "0xA8DDB4", VA = "0xA8DDB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0xA8DE20", Offset = "0xA8DE20", VA = "0xA8DE20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xA8DAE4", Offset = "0xA8DAE4", VA = "0xA8DAE4")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xA8DCB0", Offset = "0xA8DCB0", VA = "0xA8DCB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xA8DCB4", Offset = "0xA8DCB4", VA = "0xA8DCB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xA8DDBC", Offset = "0xA8DDBC", VA = "0xA8DDBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EC034", Offset = "0x8EC034")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EC034", Offset = "0x8EC034")]
	public float TransitionDuration;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EC08C", Offset = "0x8EC08C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EC08C", Offset = "0x8EC08C")]
	public float TeleportDelay;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EC0E0", Offset = "0x8EC0E0")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xA8DA44", Offset = "0xA8DA44", VA = "0xA8DA44", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xA8DA70", Offset = "0xA8DA70", VA = "0xA8DA70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F67A0", Offset = "0x8F67A0")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xA8DB10", Offset = "0xA8DB10", VA = "0xA8DB10")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000255")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xA8DE28", Offset = "0xA8DE28", VA = "0xA8DE28", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xA8DE44", Offset = "0xA8DE44", VA = "0xA8DE44")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000256")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20004CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB90", Offset = "0x8DFB90")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700026D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0xA8E098", Offset = "0xA8E098", VA = "0xA8E098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0xA8E104", Offset = "0xA8E104", VA = "0xA8E104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xA8DEEC", Offset = "0xA8DEEC", VA = "0xA8DEEC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xA8DF60", Offset = "0xA8DF60", VA = "0xA8DF60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xA8DF64", Offset = "0xA8DF64", VA = "0xA8DF64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xA8E0A0", Offset = "0xA8E0A0", VA = "0xA8E0A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EC118", Offset = "0x8EC118")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EC118", Offset = "0x8EC118")]
	public float TransitionDuration;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xA8DE4C", Offset = "0xA8DE4C", VA = "0xA8DE4C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xA8DE78", Offset = "0xA8DE78", VA = "0xA8DE78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6804", Offset = "0x8F6804")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xA8DF18", Offset = "0xA8DF18", VA = "0xA8DF18")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000257")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20004CB")]
	public enum PlabackState
	{
		[Token(Token = "0x4001E1A")]
		Idle = 1,
		[Token(Token = "0x4001E1B")]
		Preparing,
		[Token(Token = "0x4001E1C")]
		Buffering,
		[Token(Token = "0x4001E1D")]
		Ready,
		[Token(Token = "0x4001E1E")]
		Ended
	}

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000087")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xCCE1E8", Offset = "0xCCE1E8", VA = "0xCCE1E8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000088")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xCCE4A4", Offset = "0xCCE4A4", VA = "0xCCE4A4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000089")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xCCB5E0", Offset = "0xCCB5E0", VA = "0xCCB5E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008A")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xCCC898", Offset = "0xCCC898", VA = "0xCCC898")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008B")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xCCE6F0", Offset = "0xCCE6F0", VA = "0xCCE6F0")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700008C")]
	public static long Duration
	{
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xCCCA7C", Offset = "0xCCCA7C", VA = "0xCCCA7C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700008D")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xCCC988", Offset = "0xCCC988", VA = "0xCCC988")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xCCC048", Offset = "0xCCC048", VA = "0xCCC048")]
		set
		{
		}
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xCCD0F4", Offset = "0xCCD0F4", VA = "0xCCD0F4")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xCCCE30", Offset = "0xCCCE30", VA = "0xCCCE30")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xCCBCD0", Offset = "0xCCBCD0", VA = "0xCCBCD0")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xCCBE58", Offset = "0xCCBE58", VA = "0xCCBE58")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xCCCC4C", Offset = "0xCCCC4C", VA = "0xCCCC4C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xCCD2F0", Offset = "0xCCD2F0", VA = "0xCCD2F0")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xCCC6D4", Offset = "0xCCC6D4", VA = "0xCCC6D4")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000258")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000016")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xBDC504", Offset = "0xBDC504", VA = "0xBDC504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6868", Offset = "0x8F6868")]
		add
		{
		}
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xBDC5A8", Offset = "0xBDC5A8", VA = "0xBDC5A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6878", Offset = "0x8F6878")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xBDC64C", Offset = "0xBDC64C", VA = "0xBDC64C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xBDC660", Offset = "0xBDC660", VA = "0xBDC660")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000259")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20004CC")]
	public enum ButtonType
	{
		[Token(Token = "0x4001E20")]
		Play,
		[Token(Token = "0x4001E21")]
		Pause,
		[Token(Token = "0x4001E22")]
		FastForward,
		[Token(Token = "0x4001E23")]
		Rewind,
		[Token(Token = "0x4001E24")]
		SkipForward,
		[Token(Token = "0x4001E25")]
		SkipBack,
		[Token(Token = "0x4001E26")]
		Stop
	}

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700008E")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xCC8F60", Offset = "0xCC8F60", VA = "0xCC8F60")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xCC8F68", Offset = "0xCC8F68", VA = "0xCC8F68")]
		set
		{
		}
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xCC8F8C", Offset = "0xCC8F8C", VA = "0xCC8F8C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xCCA45C", Offset = "0xCCA45C", VA = "0xCCA45C")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200025A")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20004CD")]
	public enum VideoShape
	{
		[Token(Token = "0x4001E28")]
		_360,
		[Token(Token = "0x4001E29")]
		_180,
		[Token(Token = "0x4001E2A")]
		Quad
	}

	[Token(Token = "0x20004CE")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001E2C")]
		Mono,
		[Token(Token = "0x4001E2D")]
		TopBottom,
		[Token(Token = "0x4001E2E")]
		LeftRight,
		[Token(Token = "0x4001E2F")]
		BottomTop
	}

	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFBA0", Offset = "0x8DFBA0")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700026F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xCCD5C4", Offset = "0xCCD5C4", VA = "0xCCD5C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0xCCD630", Offset = "0xCCD630", VA = "0xCCD630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xCCB9C4", Offset = "0xCCB9C4", VA = "0xCCB9C4")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xCCD43C", Offset = "0xCCD43C", VA = "0xCCD43C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xCCD440", Offset = "0xCCD440", VA = "0xCCD440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xCCD5CC", Offset = "0xCCD5CC", VA = "0xCCD5CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFBB0", Offset = "0x8DFBB0")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xCCBC30", Offset = "0xCCBC30", VA = "0xCCBC30")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xCCD01C", Offset = "0xCCD01C", VA = "0xCCD01C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC1A0", Offset = "0x8EC1A0")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC1B0", Offset = "0x8EC1B0")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC1C0", Offset = "0x8EC1C0")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700008F")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xCCB38C", Offset = "0xCCB38C", VA = "0xCCB38C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6888", Offset = "0x8F6888")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xCCB394", Offset = "0xCCB394", VA = "0xCCB394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6898", Offset = "0x8F6898")]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public long Duration
	{
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xCCB3A0", Offset = "0xCCB3A0", VA = "0xCCB3A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F68A8", Offset = "0x8F68A8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xCCB3A8", Offset = "0xCCB3A8", VA = "0xCCB3A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F68B8", Offset = "0x8F68B8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xCCB3B0", Offset = "0xCCB3B0", VA = "0xCCB3B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F68C8", Offset = "0x8F68C8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xCCB3B8", Offset = "0xCCB3B8", VA = "0xCCB3B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F68D8", Offset = "0x8F68D8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xCCB3C0", Offset = "0xCCB3C0", VA = "0xCCB3C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xCCB648", Offset = "0xCCB648", VA = "0xCCB648")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xCCB6B4", Offset = "0xCCB6B4", VA = "0xCCB6B4")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xCCB950", Offset = "0xCCB950", VA = "0xCCB950")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F68E8", Offset = "0x8F68E8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xCCB9F0", Offset = "0xCCB9F0", VA = "0xCCB9F0")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xCCBC38", Offset = "0xCCBC38", VA = "0xCCBC38")]
	public void Play()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xCCBDC4", Offset = "0xCCBDC4", VA = "0xCCBDC4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xCCBF4C", Offset = "0xCCBF4C", VA = "0xCCBF4C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xCCC190", Offset = "0xCCC190", VA = "0xCCC190")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xCCCB70", Offset = "0xCCCB70", VA = "0xCCCB70")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xCCCD9C", Offset = "0xCCCD9C", VA = "0xCCCD9C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xCCCF24", Offset = "0xCCCF24", VA = "0xCCCF24")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xCCD00C", Offset = "0xCCD00C", VA = "0xCCD00C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200025B")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20004D1")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001E37")]
		Playing,
		[Token(Token = "0x4001E38")]
		Paused,
		[Token(Token = "0x4001E39")]
		Rewinding,
		[Token(Token = "0x4001E3A")]
		FastForwarding
	}

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xCCD638", Offset = "0xCCD638", VA = "0xCCD638")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xCCD940", Offset = "0xCCD940", VA = "0xCCD940")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xCCDB1C", Offset = "0xCCDB1C", VA = "0xCCDB1C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xCCDC60", Offset = "0xCCDC60", VA = "0xCCDC60")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xCCDD70", Offset = "0xCCDD70", VA = "0xCCDD70")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xCCDC30", Offset = "0xCCDC30", VA = "0xCCDC30")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xCCDE3C", Offset = "0xCCDE3C", VA = "0xCCDE3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xCCD82C", Offset = "0xCCD82C", VA = "0xCCD82C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xCCE1D8", Offset = "0xCCE1D8", VA = "0xCCE1D8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200025C")]
public static class VectorUtil
{
	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xA8E434", Offset = "0xA8E434", VA = "0xA8E434")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200025D")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xBE1764", Offset = "0xBE1764", VA = "0xBE1764")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xBE1B5C", Offset = "0xBE1B5C", VA = "0xBE1B5C")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xBE1C18", Offset = "0xBE1C18", VA = "0xBE1C18")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xBE1E20", Offset = "0xBE1E20", VA = "0xBE1E20")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xBE1F0C", Offset = "0xBE1F0C", VA = "0xBE1F0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xBE1FE8", Offset = "0xBE1FE8", VA = "0xBE1FE8")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xBE2054", Offset = "0xBE2054", VA = "0xBE2054")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xBE205C", Offset = "0xBE205C", VA = "0xBE205C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F695C", Offset = "0x8F695C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xBE20B8", Offset = "0xBE20B8", VA = "0xBE20B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F696C", Offset = "0x8F696C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xBE2114", Offset = "0xBE2114", VA = "0xBE2114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F697C", Offset = "0x8F697C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xBE2170", Offset = "0xBE2170", VA = "0xBE2170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F698C", Offset = "0x8F698C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200025E")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFBC0", Offset = "0x8DFBC0")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000271")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0xCC4538", Offset = "0xCC4538", VA = "0xCC4538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0xCC45A4", Offset = "0xCC45A4", VA = "0xCC45A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xCC43E4", Offset = "0xCC43E4", VA = "0xCC43E4")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xCC4418", Offset = "0xCC4418", VA = "0xCC4418", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xCC441C", Offset = "0xCC441C", VA = "0xCC441C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xCC4540", Offset = "0xCC4540", VA = "0xCC4540", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xCC40DC", Offset = "0xCC40DC", VA = "0xCC40DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xCC41E0", Offset = "0xCC41E0", VA = "0xCC41E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xCC416C", Offset = "0xCC416C", VA = "0xCC416C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F699C", Offset = "0x8F699C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xCC4410", Offset = "0xCC4410", VA = "0xCC4410")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200025F")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EC1E0", Offset = "0x8EC1E0")]
	public int SubdivisionsU;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EC1FC", Offset = "0x8EC1FC")]
	public int SubdivisionsV;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xBDE064", Offset = "0xBDE064", VA = "0xBDE064")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xBDEB24", Offset = "0xBDEB24", VA = "0xBDEB24")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000260")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000092")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xCC5B84", Offset = "0xCC5B84", VA = "0xCC5B84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xCC5BDC", Offset = "0xCC5BDC", VA = "0xCC5BDC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xCC5F2C", Offset = "0xCC5F2C", VA = "0xCC5F2C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xCC6010", Offset = "0xCC6010", VA = "0xCC6010")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F6A00", Offset = "0x8F6A00")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000EB5")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000EB6")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000EB7")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000EB8")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000EB9")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000EBA")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000EBB")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000EBC")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xCC6078", Offset = "0xCC6078", VA = "0xCC6078")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xCC60B8", Offset = "0xCC60B8", VA = "0xCC60B8")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xCC612C", Offset = "0xCC612C", VA = "0xCC612C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xCC6290", Offset = "0xCC6290", VA = "0xCC6290")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xCC6370", Offset = "0xCC6370", VA = "0xCC6370")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xCC5E30", Offset = "0xCC5E30", VA = "0xCC5E30")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xCC6434", Offset = "0xCC6434", VA = "0xCC6434")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xCC64A4", Offset = "0xCC64A4", VA = "0xCC64A4")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xCC6588", Offset = "0xCC6588", VA = "0xCC6588")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000261")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DEAEC", Offset = "0x8DEAEC")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20004D3")]
	public enum DrawMode
	{
		[Token(Token = "0x4001E3F")]
		Opaque,
		[Token(Token = "0x4001E40")]
		OpaqueWithClip,
		[Token(Token = "0x4001E41")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001E42")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000093")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xEA00E0", Offset = "0xEA00E0", VA = "0xEA00E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xEA0174", Offset = "0xEA0174", VA = "0xEA0174")]
		set
		{
		}
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xE9EA58", Offset = "0xE9EA58", VA = "0xE9EA58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xE9F6D4", Offset = "0xE9F6D4", VA = "0xE9F6D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xE9F758", Offset = "0xE9F758", VA = "0xE9F758")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xE9F84C", Offset = "0xE9F84C", VA = "0xE9F84C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xE9F940", Offset = "0xE9F940", VA = "0xE9F940", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xE9FB48", Offset = "0xE9FB48", VA = "0xE9FB48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xEA0250", Offset = "0xEA0250", VA = "0xEA0250")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000262")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20004D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFBD0", Offset = "0x8DFBD0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xA88A9C", Offset = "0xA88A9C", VA = "0xA88A9C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xA88B8C", Offset = "0xA88B8C", VA = "0xA88B8C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xA888F4", Offset = "0xA888F4", VA = "0xA888F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xA88AA4", Offset = "0xA88AA4", VA = "0xA88AA4")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xA88B84", Offset = "0xA88B84", VA = "0xA88B84")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000263")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8DEB50", Offset = "0x8DEB50")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20004D5")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001E46")]
		MouseXAndY,
		[Token(Token = "0x4001E47")]
		MouseX,
		[Token(Token = "0x4001E48")]
		MouseY
	}

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xCCB044", Offset = "0xCCB044", VA = "0xCCB044")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xCCB2AC", Offset = "0xCCB2AC", VA = "0xCCB2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xCCB36C", Offset = "0xCCB36C", VA = "0xCCB36C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000264")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000265")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xE8D644", Offset = "0xE8D644", VA = "0xE8D644")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xE8D648", Offset = "0xE8D648", VA = "0xE8D648")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xE8D64C", Offset = "0xE8D64C", VA = "0xE8D64C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xE8D7BC", Offset = "0xE8D7BC", VA = "0xE8D7BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xE8D69C", Offset = "0xE8D69C", VA = "0xE8D69C")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xE8D730", Offset = "0xE8D730", VA = "0xE8D730")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xE8D80C", Offset = "0xE8D80C", VA = "0xE8D80C")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xE8D8A4", Offset = "0xE8D8A4", VA = "0xE8D8A4")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xE8DA0C", Offset = "0xE8DA0C", VA = "0xE8DA0C")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xE8DB74", Offset = "0xE8DB74", VA = "0xE8DB74")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000266")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20004D6")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40010CE")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40010D4")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xB8DEA8", Offset = "0xB8DEA8", VA = "0xB8DEA8")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xB8DCD8", Offset = "0xB8DCD8", VA = "0xB8DCD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F6A38", Offset = "0x8F6A38")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xB8DEE0", Offset = "0xB8DEE0", VA = "0xB8DEE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xB8E02C", Offset = "0xB8E02C", VA = "0xB8E02C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xB8E138", Offset = "0xB8E138", VA = "0xB8E138")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xB8EB64", Offset = "0xB8EB64", VA = "0xB8EB64")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xB8DF80", Offset = "0xB8DF80", VA = "0xB8DF80")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xB8E090", Offset = "0xB8E090", VA = "0xB8E090")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xB8E860", Offset = "0xB8E860", VA = "0xB8E860")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xB8E8F8", Offset = "0xB8E8F8", VA = "0xB8E8F8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xB8E994", Offset = "0xB8E994", VA = "0xB8E994")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xB8EA30", Offset = "0xB8EA30", VA = "0xB8EA30")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xB8EAC8", Offset = "0xB8EAC8", VA = "0xB8EAC8")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xB8F9A0", Offset = "0xB8F9A0", VA = "0xB8F9A0")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xB8FA60", Offset = "0xB8FA60", VA = "0xB8FA60")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xB8FB20", Offset = "0xB8FB20", VA = "0xB8FB20")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000267")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20004D7")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001E4A")]
		Uninitialized = -1,
		[Token(Token = "0x4001E4B")]
		NotEnabled,
		[Token(Token = "0x4001E4C")]
		Success,
		[Token(Token = "0x4001E4D")]
		StreamError,
		[Token(Token = "0x4001E4E")]
		ProcessError,
		[Token(Token = "0x4001E4F")]
		MaxStatValue
	}

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000094")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xCCE848", Offset = "0xCCE848", VA = "0xCCE848")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xCCE850", Offset = "0xCCE850", VA = "0xCCE850")]
		set
		{
		}
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xCCE85C", Offset = "0xCCE85C", VA = "0xCCE85C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xCCEA90", Offset = "0xCCEA90", VA = "0xCCEA90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xCCECE4", Offset = "0xCCECE4", VA = "0xCCECE4")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000268")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20004D8")]
	private enum Parameters
	{
		[Token(Token = "0x4001E51")]
		P_GAIN,
		[Token(Token = "0x4001E52")]
		P_USEINVSQR,
		[Token(Token = "0x4001E53")]
		P_NEAR,
		[Token(Token = "0x4001E54")]
		P_FAR,
		[Token(Token = "0x4001E55")]
		P_RADIUS,
		[Token(Token = "0x4001E56")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001E57")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001E58")]
		P_AMBISTAT,
		[Token(Token = "0x4001E59")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001E5A")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001E5B")]
		P_SENDLEVEL,
		[Token(Token = "0x4001E5C")]
		P_NUM
	}

	[Token(Token = "0x40010DB")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000095")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xCCEF70", Offset = "0xCCEF70", VA = "0xCCEF70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xCCEF78", Offset = "0xCCEF78", VA = "0xCCEF78")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float Gain
	{
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xCCEF84", Offset = "0xCCEF84", VA = "0xCCEF84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xCCEF8C", Offset = "0xCCEF8C", VA = "0xCCEF8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xCCF010", Offset = "0xCCF010", VA = "0xCCF010")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xCCF018", Offset = "0xCCF018", VA = "0xCCF018")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public float Near
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xCCF024", Offset = "0xCCF024", VA = "0xCCF024")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xCCF02C", Offset = "0xCCF02C", VA = "0xCCF02C")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public float Far
	{
		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xCCF0B4", Offset = "0xCCF0B4", VA = "0xCCF0B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xCCF0BC", Offset = "0xCCF0BC", VA = "0xCCF0BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xCCF144", Offset = "0xCCF144", VA = "0xCCF144")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xCCF14C", Offset = "0xCCF14C", VA = "0xCCF14C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public float ReverbSend
	{
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xCCF1D4", Offset = "0xCCF1D4", VA = "0xCCF1D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xCCF1DC", Offset = "0xCCF1DC", VA = "0xCCF1DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xCCF264", Offset = "0xCCF264", VA = "0xCCF264")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xCCF26C", Offset = "0xCCF26C", VA = "0xCCF26C")]
		set
		{
		}
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xCCED68", Offset = "0xCCED68", VA = "0xCCED68")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8F6A9C", Offset = "0x8F6A9C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xCCEE78", Offset = "0xCCEE78", VA = "0xCCEE78")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xCCF278", Offset = "0xCCF278", VA = "0xCCF278")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xCCF3F0", Offset = "0xCCF3F0", VA = "0xCCF3F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xCCF3F4", Offset = "0xCCF3F4", VA = "0xCCF3F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xCCF2E4", Offset = "0xCCF2E4", VA = "0xCCF2E4")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xCCF4C0", Offset = "0xCCF4C0", VA = "0xCCF4C0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xCCF920", Offset = "0xCCF920", VA = "0xCCF920")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xCCEDE0", Offset = "0xCCEDE0", VA = "0xCCEDE0")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xCCF9F0", Offset = "0xCCF9F0", VA = "0xCCF9F0")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000269")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40010E6")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40010E8")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xCCFA10", Offset = "0xCCFA10", VA = "0xCCFA10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xCCFA1C", Offset = "0xCCFA1C", VA = "0xCCFA1C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xCCFAEC", Offset = "0xCCFAEC", VA = "0xCCFAEC")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xCCFA54", Offset = "0xCCFA54", VA = "0xCCFA54")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xCCFB84", Offset = "0xCCFB84", VA = "0xCCFB84")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x200026A")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20004D9")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20004DA")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40010EF")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700009D")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xCD2A4C", Offset = "0xCD2A4C", VA = "0xCD2A4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009E")]
	public string filePath
	{
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xCD2AD8", Offset = "0xCD2AD8", VA = "0xCD2AD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xCD2B50", Offset = "0xCD2B50", VA = "0xCD2B50")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xCD2C8C", Offset = "0xCD2C8C", VA = "0xCD2C8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xCD2C90", Offset = "0xCD2C90", VA = "0xCD2C90")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xCD3200", Offset = "0xCD3200", VA = "0xCD3200")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xCD35A4", Offset = "0xCD35A4", VA = "0xCD35A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xCD3704", Offset = "0xCD3704", VA = "0xCD3704")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xCD3DCC", Offset = "0xCD3DCC", VA = "0xCD3DCC")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xCD3E18", Offset = "0xCD3E18", VA = "0xCD3E18")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xCD5784", Offset = "0xCD5784", VA = "0xCD5784")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xCD5658", Offset = "0xCD5658", VA = "0xCD5658")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xCD3034", Offset = "0xCD3034", VA = "0xCD3034")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xCD2E60", Offset = "0xCD2E60", VA = "0xCD2E60")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xCD5D98", Offset = "0xCD5D98", VA = "0xCD5D98")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xCD61E0", Offset = "0xCD61E0", VA = "0xCD61E0")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x200026B")]
internal class ONSPPropagation
{
	[Token(Token = "0x20004DB")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001E63")]
		Int8,
		[Token(Token = "0x4001E64")]
		UInt8,
		[Token(Token = "0x4001E65")]
		Int16,
		[Token(Token = "0x4001E66")]
		UInt16,
		[Token(Token = "0x4001E67")]
		Int32,
		[Token(Token = "0x4001E68")]
		UInt32,
		[Token(Token = "0x4001E69")]
		Int64,
		[Token(Token = "0x4001E6A")]
		UInt64,
		[Token(Token = "0x4001E6B")]
		Float16,
		[Token(Token = "0x4001E6C")]
		Float32,
		[Token(Token = "0x4001E6D")]
		Float64
	}

	[Token(Token = "0x20004DC")]
	public class ClientType
	{
		[Token(Token = "0x4001E6E")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001E6F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001E70")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001E71")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001E72")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001E73")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001E74")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001E75")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001E76")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001E77")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001E78")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001E79")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001E7A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001E7B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001E7C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xCD0070", Offset = "0xCD0070", VA = "0xCD0070")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20004DD")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001DAC")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001DAD")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001DAE")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001DAF")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001DB0")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6001DB1")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001DB2")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001DB3")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001DB4")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001DB5")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001DB6")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001DB7")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001DB8")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001DB9")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001DBA")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20004DE")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001E7D")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000273")]
		private IntPtr context
		{
			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0xCD0E34", Offset = "0xCD0E34", VA = "0xCD0E34")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xCD0E98", Offset = "0xCD0E98", VA = "0xCD0E98")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xCD0F40", Offset = "0xCD0F40", VA = "0xCD0F40")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xCD0FE8", Offset = "0xCD0FE8", VA = "0xCD0FE8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xCD100C", Offset = "0xCD100C", VA = "0xCD100C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xCD10B4", Offset = "0xCD10B4", VA = "0xCD10B4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xCD10D8", Offset = "0xCD10D8", VA = "0xCD10D8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xCD117C", Offset = "0xCD117C", VA = "0xCD117C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xCD11A0", Offset = "0xCD11A0", VA = "0xCD11A0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xCD1238", Offset = "0xCD1238", VA = "0xCD1238", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xCD1240", Offset = "0xCD1240", VA = "0xCD1240")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xCD1364", Offset = "0xCD1364", VA = "0xCD1364", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xCD145C", Offset = "0xCD145C", VA = "0xCD145C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xCD150C", Offset = "0xCD150C", VA = "0xCD150C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xCD1518", Offset = "0xCD1518", VA = "0xCD1518")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xCD165C", Offset = "0xCD165C", VA = "0xCD165C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xCD1668", Offset = "0xCD1668", VA = "0xCD1668")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xCD172C", Offset = "0xCD172C", VA = "0xCD172C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xCD1738", Offset = "0xCD1738", VA = "0xCD1738")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xCD17FC", Offset = "0xCD17FC", VA = "0xCD17FC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xCD1808", Offset = "0xCD1808", VA = "0xCD1808")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xCD18CC", Offset = "0xCD18CC", VA = "0xCD18CC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xCD18D8", Offset = "0xCD18D8", VA = "0xCD18D8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xCD197C", Offset = "0xCD197C", VA = "0xCD197C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xCD19A0", Offset = "0xCD19A0", VA = "0xCD19A0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xCD1A38", Offset = "0xCD1A38", VA = "0xCD1A38", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xCD1A40", Offset = "0xCD1A40", VA = "0xCD1A40")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xCD1B00", Offset = "0xCD1B00", VA = "0xCD1B00", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xCD1B0C", Offset = "0xCD1B0C", VA = "0xCD1B0C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xCD1BCC", Offset = "0xCD1BCC", VA = "0xCD1BCC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xCD1BDC", Offset = "0xCD1BDC", VA = "0xCD1BDC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xCD1C84", Offset = "0xCD1C84", VA = "0xCD1C84", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xCD001C", Offset = "0xCD001C", VA = "0xCD001C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20004DF")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001E7F")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000274")]
		private IntPtr context
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0xCD1C90", Offset = "0xCD1C90", VA = "0xCD1C90")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xCCFE34", Offset = "0xCCFE34", VA = "0xCCFE34")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xCD1CF4", Offset = "0xCD1CF4", VA = "0xCD1CF4")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xCD1D9C", Offset = "0xCD1D9C", VA = "0xCD1D9C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xCD1DC0", Offset = "0xCD1DC0", VA = "0xCD1DC0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xCD1E68", Offset = "0xCD1E68", VA = "0xCD1E68", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xCD1E8C", Offset = "0xCD1E8C", VA = "0xCD1E8C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xCD1F34", Offset = "0xCD1F34", VA = "0xCD1F34", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xCD1F58", Offset = "0xCD1F58", VA = "0xCD1F58")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xCD1FF0", Offset = "0xCD1FF0", VA = "0xCD1FF0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xCD1FF8", Offset = "0xCD1FF8", VA = "0xCD1FF8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xCD211C", Offset = "0xCD211C", VA = "0xCD211C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xCD2214", Offset = "0xCD2214", VA = "0xCD2214")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xCD22C4", Offset = "0xCD22C4", VA = "0xCD22C4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xCD22D0", Offset = "0xCD22D0", VA = "0xCD22D0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xCD2414", Offset = "0xCD2414", VA = "0xCD2414", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xCD2420", Offset = "0xCD2420", VA = "0xCD2420")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xCD24E4", Offset = "0xCD24E4", VA = "0xCD24E4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xCD24F0", Offset = "0xCD24F0", VA = "0xCD24F0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xCD25B4", Offset = "0xCD25B4", VA = "0xCD25B4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xCD25C0", Offset = "0xCD25C0", VA = "0xCD25C0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xCD2684", Offset = "0xCD2684", VA = "0xCD2684", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xCD2690", Offset = "0xCD2690", VA = "0xCD2690")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xCD2738", Offset = "0xCD2738", VA = "0xCD2738", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xCD275C", Offset = "0xCD275C", VA = "0xCD275C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xCD27F4", Offset = "0xCD27F4", VA = "0xCD27F4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xCD27FC", Offset = "0xCD27FC", VA = "0xCD27FC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xCD28BC", Offset = "0xCD28BC", VA = "0xCD28BC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xCD28C8", Offset = "0xCD28C8", VA = "0xCD28C8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xCD2988", Offset = "0xCD2988", VA = "0xCD2988", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xCD2998", Offset = "0xCD2998", VA = "0xCD2998")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xCD2A40", Offset = "0xCD2A40", VA = "0xCD2A40", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xCCFEDC", Offset = "0xCCFEDC", VA = "0xCCFEDC")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20004E0")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001E81")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000275")]
		private IntPtr context
		{
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xCD0078", Offset = "0xCD0078", VA = "0xCD0078")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xCCFF28", Offset = "0xCCFF28", VA = "0xCCFF28")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xCD00DC", Offset = "0xCD00DC", VA = "0xCD00DC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xCD0184", Offset = "0xCD0184", VA = "0xCD0184", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xCD01A8", Offset = "0xCD01A8", VA = "0xCD01A8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xCD0250", Offset = "0xCD0250", VA = "0xCD0250", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xCD0274", Offset = "0xCD0274", VA = "0xCD0274")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xCD031C", Offset = "0xCD031C", VA = "0xCD031C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xCD0340", Offset = "0xCD0340", VA = "0xCD0340")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xCD03D8", Offset = "0xCD03D8", VA = "0xCD03D8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xCD03E0", Offset = "0xCD03E0", VA = "0xCD03E0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xCD0504", Offset = "0xCD0504", VA = "0xCD0504", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xCD05FC", Offset = "0xCD05FC", VA = "0xCD05FC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xCD06AC", Offset = "0xCD06AC", VA = "0xCD06AC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xCD06B8", Offset = "0xCD06B8", VA = "0xCD06B8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xCD07FC", Offset = "0xCD07FC", VA = "0xCD07FC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xCD0808", Offset = "0xCD0808", VA = "0xCD0808")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xCD08CC", Offset = "0xCD08CC", VA = "0xCD08CC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xCD08D8", Offset = "0xCD08D8", VA = "0xCD08D8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xCD099C", Offset = "0xCD099C", VA = "0xCD099C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xCD09A8", Offset = "0xCD09A8", VA = "0xCD09A8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xCD0A6C", Offset = "0xCD0A6C", VA = "0xCD0A6C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xCD0A78", Offset = "0xCD0A78", VA = "0xCD0A78")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xCD0B20", Offset = "0xCD0B20", VA = "0xCD0B20", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xCD0B44", Offset = "0xCD0B44", VA = "0xCD0B44")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xCD0BDC", Offset = "0xCD0BDC", VA = "0xCD0BDC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xCD0BE4", Offset = "0xCD0BE4", VA = "0xCD0BE4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xCD0CA4", Offset = "0xCD0CA4", VA = "0xCD0CA4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xCD0CB0", Offset = "0xCD0CB0", VA = "0xCD0CB0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xCD0D70", Offset = "0xCD0D70", VA = "0xCD0D70", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xCD0D80", Offset = "0xCD0D80", VA = "0xCD0D80")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xCD0E28", Offset = "0xCD0E28", VA = "0xCD0E28", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xCCFFD0", Offset = "0xCCFFD0", VA = "0xCCFFD0")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700009F")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xCCFB94", Offset = "0xCCFB94", VA = "0xCCFB94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xCCFC04", Offset = "0xCCFC04", VA = "0xCCFC04")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xCD0068", Offset = "0xCD0068", VA = "0xCD0068")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x200026C")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20004E1")]
	public enum Preset
	{
		[Token(Token = "0x4001E84")]
		Custom,
		[Token(Token = "0x4001E85")]
		AcousticTile,
		[Token(Token = "0x4001E86")]
		Brick,
		[Token(Token = "0x4001E87")]
		BrickPainted,
		[Token(Token = "0x4001E88")]
		Carpet,
		[Token(Token = "0x4001E89")]
		CarpetHeavy,
		[Token(Token = "0x4001E8A")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001E8B")]
		CeramicTile,
		[Token(Token = "0x4001E8C")]
		Concrete,
		[Token(Token = "0x4001E8D")]
		ConcreteRough,
		[Token(Token = "0x4001E8E")]
		ConcreteBlock,
		[Token(Token = "0x4001E8F")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001E90")]
		Curtain,
		[Token(Token = "0x4001E91")]
		Foliage,
		[Token(Token = "0x4001E92")]
		Glass,
		[Token(Token = "0x4001E93")]
		GlassHeavy,
		[Token(Token = "0x4001E94")]
		Grass,
		[Token(Token = "0x4001E95")]
		Gravel,
		[Token(Token = "0x4001E96")]
		GypsumBoard,
		[Token(Token = "0x4001E97")]
		PlasterOnBrick,
		[Token(Token = "0x4001E98")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001E99")]
		Soil,
		[Token(Token = "0x4001E9A")]
		SoundProof,
		[Token(Token = "0x4001E9B")]
		Snow,
		[Token(Token = "0x4001E9C")]
		Steel,
		[Token(Token = "0x4001E9D")]
		Water,
		[Token(Token = "0x4001E9E")]
		WoodThin,
		[Token(Token = "0x4001E9F")]
		WoodThick,
		[Token(Token = "0x4001EA0")]
		WoodFloor,
		[Token(Token = "0x4001EA1")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20004E2")]
	public sealed class Point
	{
		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xE8CF8C", Offset = "0xE8CF8C", VA = "0xE8CF8C")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xE8CFC4", Offset = "0xE8CFC4", VA = "0xE8CFC4")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xE8D034", Offset = "0xE8D034", VA = "0xE8D034")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20004E3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8DFBE0", Offset = "0x8DFBE0")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0018", Offset = "0x8E0018")]
		private sealed class <>c
		{
			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001F87")]
			[Address(RVA = "0xE8D520", Offset = "0xE8D520", VA = "0xE8D520")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F88")]
			[Address(RVA = "0xE8D528", Offset = "0xE8D528", VA = "0xE8D528")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001F89")]
			[Address(RVA = "0xE8D544", Offset = "0xE8D544", VA = "0xE8D544")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000276")]
		public float Item
		{
			[Token(Token = "0x6001E21")]
			[Address(RVA = "0xE8D06C", Offset = "0xE8D06C", VA = "0xE8D06C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xE8D444", Offset = "0xE8D444", VA = "0xE8D444")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EC318", Offset = "0x8EC318")]
	public Spectrum absorption;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EC350", Offset = "0x8EC350")]
	public Spectrum transmission;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EC388", Offset = "0x8EC388")]
	public Spectrum scattering;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x170000A0")]
	public Preset preset
	{
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xCD62B8", Offset = "0xCD62B8", VA = "0xCD62B8")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xCD62C0", Offset = "0xCD62C0", VA = "0xCD62C0")]
		set
		{
		}
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xCD62E8", Offset = "0xCD62E8", VA = "0xCD62E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xCD5C28", Offset = "0xCD5C28", VA = "0xCD5C28")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xCD68F0", Offset = "0xCD68F0", VA = "0xCD68F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xCD68F4", Offset = "0xCD68F4", VA = "0xCD68F4")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xCD62EC", Offset = "0xCD62EC", VA = "0xCD62EC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xCD54C4", Offset = "0xCD54C4", VA = "0xCD54C4")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xCD69D8", Offset = "0xCD69D8", VA = "0xCD69D8")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xCD6E7C", Offset = "0xCD6E7C", VA = "0xCD6E7C")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xCD7324", Offset = "0xCD7324", VA = "0xCD7324")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xCD77C8", Offset = "0xCD77C8", VA = "0xCD77C8")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xCD7C80", Offset = "0xCD7C80", VA = "0xCD7C80")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xCD8124", Offset = "0xCD8124", VA = "0xCD8124")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xCD85C8", Offset = "0xCD85C8", VA = "0xCD85C8")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xCD8A74", Offset = "0xCD8A74", VA = "0xCD8A74")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xCD8F20", Offset = "0xCD8F20", VA = "0xCD8F20")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xCD93D0", Offset = "0xCD93D0", VA = "0xCD93D0")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xCD987C", Offset = "0xCD987C", VA = "0xCD987C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xCD9D30", Offset = "0xCD9D30", VA = "0xCD9D30")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xCDA1D4", Offset = "0xCDA1D4", VA = "0xCDA1D4")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xCDA684", Offset = "0xCDA684", VA = "0xCDA684")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xCDAB18", Offset = "0xCDAB18", VA = "0xCDAB18")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xCDAFB8", Offset = "0xCDAFB8", VA = "0xCDAFB8")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xCDB344", Offset = "0xCDB344", VA = "0xCDB344")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xCDB6C8", Offset = "0xCDB6C8", VA = "0xCDB6C8")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xCDBB7C", Offset = "0xCDBB7C", VA = "0xCDBB7C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xCDC02C", Offset = "0xCDC02C", VA = "0xCDC02C")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xCDC4D4", Offset = "0xCDC4D4", VA = "0xCDC4D4")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xCDC864", Offset = "0xCDC864", VA = "0xCDC864")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xCDC9CC", Offset = "0xCDC9CC", VA = "0xCDC9CC")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xCDCD4C", Offset = "0xCDCD4C", VA = "0xCDCD4C")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xCDD1E0", Offset = "0xCDD1E0", VA = "0xCDD1E0")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xCDD688", Offset = "0xCDD688", VA = "0xCDD688")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xCDDB24", Offset = "0xCDDB24", VA = "0xCDDB24")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xCDDFC8", Offset = "0xCDDFC8", VA = "0xCDDFC8")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xCDE474", Offset = "0xCDE474", VA = "0xCDE474")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xCDE91C", Offset = "0xCDE91C", VA = "0xCDE91C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x200026D")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xE8D560", Offset = "0xE8D560", VA = "0xE8D560")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xE8D634", Offset = "0xE8D634", VA = "0xE8D634")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200026E")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x170000A1")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xE8DBFC", Offset = "0xE8DBFC", VA = "0xE8DBFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xE8DD10", Offset = "0xE8DD10", VA = "0xE8DD10")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x200026F")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40010FA")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xE8DD20", Offset = "0xE8DD20", VA = "0xE8DD20")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xE8DDD0", Offset = "0xE8DDD0", VA = "0xE8DDD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xE8DEDC", Offset = "0xE8DEDC", VA = "0xE8DEDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xE8DEE0", Offset = "0xE8DEE0", VA = "0xE8DEE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xE8DEE4", Offset = "0xE8DEE4", VA = "0xE8DEE4")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000270")]
public class VoiceModDemo_Logic : MonoBehaviour
{
	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRVoiceModContext[] contexts;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] xfrms;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoiceModEnableSwitch SwitchTarget;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetSet;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 scale;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float scaleMax;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentPreset;

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xA8E4C8", Offset = "0xA8E4C8", VA = "0xA8E4C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xA8E6D4", Offset = "0xA8E6D4", VA = "0xA8E6D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xA8EAF8", Offset = "0xA8EAF8", VA = "0xA8EAF8")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xA8EBF0", Offset = "0xA8EBF0", VA = "0xA8EBF0")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xA8E9A4", Offset = "0xA8E9A4", VA = "0xA8E9A4")]
	private void UpdateModelScale()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xA8EFA4", Offset = "0xA8EFA4", VA = "0xA8EFA4")]
	public VoiceModDemo_Logic()
	{
	}
}
[Token(Token = "0x2000271")]
public class VoiceModEnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000F61")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xA8E604", Offset = "0xA8E604", VA = "0xA8E604")]
	public bool SetActive(int target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xA8F008", Offset = "0xA8F008", VA = "0xA8F008")]
	public VoiceModEnableSwitch()
	{
	}
}
[Token(Token = "0x2000272")]
public class OVRDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRDebugConsole s_Instance;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x170000A2")]
	public static OVRDebugConsole instance
	{
		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xE97148", Offset = "0xE97148", VA = "0xE97148")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xE97404", Offset = "0xE97404", VA = "0xE97404")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xE97540", Offset = "0xE97540", VA = "0xE97540")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xE97474", Offset = "0xE97474", VA = "0xE97474")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xE97640", Offset = "0xE97640", VA = "0xE97640")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xE977B4", Offset = "0xE977B4", VA = "0xE977B4")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xE975D8", Offset = "0xE975D8", VA = "0xE975D8")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xE97890", Offset = "0xE97890", VA = "0xE97890")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xE976C4", Offset = "0xE976C4", VA = "0xE976C4")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xE97854", Offset = "0xE97854", VA = "0xE97854")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xE97910", Offset = "0xE97910", VA = "0xE97910")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xE97B0C", Offset = "0xE97B0C", VA = "0xE97B0C")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xE97920", Offset = "0xE97920", VA = "0xE97920")]
	private void Display()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xE97BBC", Offset = "0xE97BBC", VA = "0xE97BBC")]
	public OVRDebugConsole()
	{
	}
}
[Token(Token = "0x2000273")]
public delegate void OVRCallback();
[Token(Token = "0x2000274")]
public delegate void OVRCallback<T>(T arg1);
[Token(Token = "0x2000275")]
public delegate void OVRCallback<T, U>(T arg1, U arg2);
[Token(Token = "0x2000276")]
public delegate void OVRCallback<T, U, V>(T arg1, U arg2, V arg3);
[Token(Token = "0x2000277")]
internal static class OVRMessenger
{
	[Token(Token = "0x20004E4")]
	public class BroadcastException : Exception
	{
		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xE9DB70", Offset = "0xE9DB70", VA = "0xE9DB70")]
		public BroadcastException(string msg)
		{
		}
	}

	[Token(Token = "0x20004E5")]
	public class ListenerException : Exception
	{
		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xE9D768", Offset = "0xE9D768", VA = "0xE9D768")]
		public ListenerException(string msg)
		{
		}
	}

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MessengerHelper messengerHelper;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Delegate> eventTable;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> permanentMessages;

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xE9CD6C", Offset = "0xE9CD6C", VA = "0xE9CD6C")]
	public static void MarkAsPermanent(string eventType)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xE9CDF0", Offset = "0xE9CDF0", VA = "0xE9CDF0")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xE9D1C4", Offset = "0xE9D1C4", VA = "0xE9D1C4")]
	public static void PrintEventTable()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xE9D514", Offset = "0xE9D514", VA = "0xE9D514")]
	public static void OnListenerAdding(string eventType, Delegate listenerBeingAdded)
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xE9D7E0", Offset = "0xE9D7E0", VA = "0xE9D7E0")]
	public static void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved)
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xE9DA1C", Offset = "0xE9DA1C", VA = "0xE9DA1C")]
	public static void OnListenerRemoved(string eventType)
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xE9DAEC", Offset = "0xE9DAEC", VA = "0xE9DAEC")]
	public static void OnBroadcasting(string eventType)
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xE9DAF0", Offset = "0xE9DAF0", VA = "0xE9DAF0")]
	public static BroadcastException CreateBroadcastSignatureException(string eventType)
	{
		return null;
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xE9DBE8", Offset = "0xE9DBE8", VA = "0xE9DBE8")]
	public static void AddListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x6000F8C")]
	public static void AddListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x6000F8D")]
	public static void AddListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x6000F8E")]
	public static void AddListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xE9DCF4", Offset = "0xE9DCF4", VA = "0xE9DCF4")]
	public static void RemoveListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x6000F90")]
	public static void RemoveListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x6000F91")]
	public static void RemoveListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x6000F92")]
	public static void RemoveListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xE9DE08", Offset = "0xE9DE08", VA = "0xE9DE08")]
	public static void Broadcast(string eventType)
	{
	}

	[Token(Token = "0x6000F94")]
	public static void Broadcast<T>(string eventType, T arg1)
	{
	}

	[Token(Token = "0x6000F95")]
	public static void Broadcast<T, U>(string eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x6000F96")]
	public static void Broadcast<T, U, V>(string eventType, T arg1, U arg2, V arg3)
	{
	}
}
[Token(Token = "0x2000278")]
public sealed class MessengerHelper : MonoBehaviour
{
	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xCCA4C4", Offset = "0xCCA4C4", VA = "0xCCA4C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xCCA540", Offset = "0xCCA540", VA = "0xCCA540")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xCCA5A0", Offset = "0xCCA5A0", VA = "0xCCA5A0")]
	public MessengerHelper()
	{
	}
}
[Token(Token = "0x2000279")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DEB88", Offset = "0x8DEB88")]
public class OVRMicInput : MonoBehaviour
{
	[Token(Token = "0x20004E6")]
	public enum micActivation
	{
		[Token(Token = "0x4001EA7")]
		HoldToSpeak,
		[Token(Token = "0x4001EA8")]
		PushToSpeak,
		[Token(Token = "0x4001EA9")]
		ConstantSpeak
	}

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool GuiSelectDevice;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float sensitivity;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float sourceVolume;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int micFrequency;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public micActivation micControl;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string selectedDevice;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float loudness;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool micSelected;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int minFreq;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxFreq;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool focused;

	[Token(Token = "0x170000A3")]
	public float Sensitivity
	{
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xE9DFF4", Offset = "0xE9DFF4", VA = "0xE9DFF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xE9DFFC", Offset = "0xE9DFFC", VA = "0xE9DFFC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public float SourceVolume
	{
		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xE9E084", Offset = "0xE9E084", VA = "0xE9E084")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xE9E08C", Offset = "0xE9E08C", VA = "0xE9E08C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public float MicFrequency
	{
		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xE9E114", Offset = "0xE9E114", VA = "0xE9E114")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xE9E120", Offset = "0xE9E120", VA = "0xE9E120")]
		set
		{
		}
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xE9E1AC", Offset = "0xE9E1AC", VA = "0xE9E1AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xE9E26C", Offset = "0xE9E26C", VA = "0xE9E26C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xE9E3E4", Offset = "0xE9E3E4", VA = "0xE9E3E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xE9E76C", Offset = "0xE9E76C", VA = "0xE9E76C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xE9E780", Offset = "0xE9E780", VA = "0xE9E780")]
	private void OnApplicationPause(bool focus)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xE9E794", Offset = "0xE9E794", VA = "0xE9E794")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xE9E798", Offset = "0xE9E798", VA = "0xE9E798")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xE9E810", Offset = "0xE9E810", VA = "0xE9E810")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xE9E31C", Offset = "0xE9E31C", VA = "0xE9E31C")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xE9E6E4", Offset = "0xE9E6E4", VA = "0xE9E6E4")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xE9E5B0", Offset = "0xE9E5B0", VA = "0xE9E5B0")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xE9E6DC", Offset = "0xE9E6DC", VA = "0xE9E6DC")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xE9EA04", Offset = "0xE9EA04", VA = "0xE9EA04")]
	public OVRMicInput()
	{
	}
}
[Token(Token = "0x200027A")]
public class OVRVoiceMod : MonoBehaviour
{
	[Token(Token = "0x20004E7")]
	public enum ovrVoiceModError
	{
		[Token(Token = "0x4001EAB")]
		Unknown = -2250,
		[Token(Token = "0x4001EAC")]
		CannotCreateContext = -2251,
		[Token(Token = "0x4001EAD")]
		InvalidParam = -2252,
		[Token(Token = "0x4001EAE")]
		BadSampleRate = -2253,
		[Token(Token = "0x4001EAF")]
		MissingDLL = -2254,
		[Token(Token = "0x4001EB0")]
		BadVersion = -2255,
		[Token(Token = "0x4001EB1")]
		UndefinedFunction = -2256
	}

	[Token(Token = "0x20004E8")]
	public enum ovrViceModFlag
	{
		[Token(Token = "0x4001EB3")]
		None
	}

	[Token(Token = "0x4001119")]
	public const int ovrVoiceModSuccess = 0;

	[Token(Token = "0x400111A")]
	public const string strOVRLS = "OVRVoiceMod";

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sOVRVoiceModInit;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OVRVoiceMod sInstance;

	[PreserveSig]
	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xEA1A18", Offset = "0xEA1A18", VA = "0xEA1A18")]
	private static extern int ovrVoiceModDll_Initialize(int SampleRate, int BufferSize);

	[PreserveSig]
	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xEA1AC0", Offset = "0xEA1AC0", VA = "0xEA1AC0")]
	private static extern void ovrVoiceModDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xEA1B48", Offset = "0xEA1B48", VA = "0xEA1B48")]
	private static extern IntPtr ovrVoicemodDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xEA1BF8", Offset = "0xEA1BF8", VA = "0xEA1BF8")]
	private static extern int ovrVoiceModDll_CreateContext(ref uint Context);

	[PreserveSig]
	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xEA1C90", Offset = "0xEA1C90", VA = "0xEA1C90")]
	private static extern int ovrVoiceModDll_DestroyContext(uint Context);

	[PreserveSig]
	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xEA1D28", Offset = "0xEA1D28", VA = "0xEA1D28")]
	private static extern int ovrVoiceModDll_SendParameter(uint Context, int Parameter, int Value);

	[PreserveSig]
	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xEA1DD8", Offset = "0xEA1DD8", VA = "0xEA1DD8")]
	private static extern int ovrVoiceModDll_ProcessFrame(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xEA1E90", Offset = "0xEA1E90", VA = "0xEA1E90")]
	private static extern int ovrVoiceModDll_ProcessFrameInterleaved(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xEA1F48", Offset = "0xEA1F48", VA = "0xEA1F48")]
	private static extern int ovrVoiceModDll_GetAverageAbsVolume(uint Context, ref float Volume);

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xEA1FF0", Offset = "0xEA1FF0", VA = "0xEA1FF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xEA2374", Offset = "0xEA2374", VA = "0xEA2374")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xEA2378", Offset = "0xEA2378", VA = "0xEA2378")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xEA237C", Offset = "0xEA237C", VA = "0xEA237C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xEA2488", Offset = "0xEA2488", VA = "0xEA2488")]
	public static int IsInitialized()
	{
		return default(int);
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xEA24F0", Offset = "0xEA24F0", VA = "0xEA24F0")]
	public static int CreateContext(ref uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xEA25D0", Offset = "0xEA25D0", VA = "0xEA25D0")]
	public static int DestroyContext(uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xEA26B0", Offset = "0xEA26B0", VA = "0xEA26B0")]
	public static int SendParameter(uint context, int parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xEA27AC", Offset = "0xEA27AC", VA = "0xEA27AC")]
	public static int ProcessFrame(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xEA2898", Offset = "0xEA2898", VA = "0xEA2898")]
	public static int ProcessFrameInterleaved(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xEA2984", Offset = "0xEA2984", VA = "0xEA2984")]
	public static float GetAverageAbsVolume(uint context)
	{
		return default(float);
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xEA2A68", Offset = "0xEA2A68", VA = "0xEA2A68")]
	public OVRVoiceMod()
	{
	}
}
[Token(Token = "0x200027B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DEBEC", Offset = "0x8DEBEC")]
public class OVRVoiceModContext : MonoBehaviour
{
	[Token(Token = "0x20004E9")]
	public enum ovrVoiceModParams
	{
		[Token(Token = "0x4001EB5")]
		MixInputAudio,
		[Token(Token = "0x4001EB6")]
		PitchInputAudio,
		[Token(Token = "0x4001EB7")]
		SetBands,
		[Token(Token = "0x4001EB8")]
		FormantCorrection,
		[Token(Token = "0x4001EB9")]
		Carrier1_TrackPitch,
		[Token(Token = "0x4001EBA")]
		Carrier1_Type,
		[Token(Token = "0x4001EBB")]
		Carrier1_Gain,
		[Token(Token = "0x4001EBC")]
		Carrier1_Frequency,
		[Token(Token = "0x4001EBD")]
		Carrier1_Note,
		[Token(Token = "0x4001EBE")]
		Carrier1_PulseWidth,
		[Token(Token = "0x4001EBF")]
		Carrier1_CycledNoiseSize,
		[Token(Token = "0x4001EC0")]
		Carrier2_TrackPitch,
		[Token(Token = "0x4001EC1")]
		Carrier2_Type,
		[Token(Token = "0x4001EC2")]
		Carrier2_Gain,
		[Token(Token = "0x4001EC3")]
		Carrier2_Frequency,
		[Token(Token = "0x4001EC4")]
		Carrier2_Note,
		[Token(Token = "0x4001EC5")]
		Carrier2_PulseWidth,
		[Token(Token = "0x4001EC6")]
		Carrier2_CycledNoiseSize,
		[Token(Token = "0x4001EC7")]
		Count
	}

	[Token(Token = "0x20004EA")]
	public struct VMPreset
	{
		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string info;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mix;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bands;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int formant;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c1PTrack;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c1Type;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float c1Gain;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float c1Freq;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c1Note;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float c1PW;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c1CNS;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c2PTrack;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c2Type;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float c2Gain;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float c2Freq;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c2Note;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float c2PW;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c2CNS;
	}

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool audioMute;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode loopback;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VMPreset[] VMPresets;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VM_MixAudio;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VM_Pitch;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int VM_Bands;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int VM_FormantCorrect;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VM_C1_TrackPitch;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VM_C1_Type;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VM_C1_Gain;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VM_C1_Freq;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int VM_C1_Note;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VM_C1_PulseWidth;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int VM_C1_CycledNoiseSize;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VM_C2_TrackPitch;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VM_C2_Type;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float VM_C2_Gain;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VM_C2_Freq;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VM_C2_Note;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VM_C2_PulseWidth;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VM_C2_CycledNoiseSize;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint context;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float prevVol;

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xEA2AD0", Offset = "0xEA2AD0", VA = "0xEA2AD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xEA2B90", Offset = "0xEA2B90", VA = "0xEA2B90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xEA3128", Offset = "0xEA3128", VA = "0xEA3128")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xEA3388", Offset = "0xEA3388", VA = "0xEA3388")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xEA34AC", Offset = "0xEA34AC", VA = "0xEA34AC")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xEA36D8", Offset = "0xEA36D8", VA = "0xEA36D8")]
	public int SendParameter(ovrVoiceModParams parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xEA37D8", Offset = "0xEA37D8", VA = "0xEA37D8")]
	public bool SetPreset(int preset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xEA3AB0", Offset = "0xEA3AB0", VA = "0xEA3AB0")]
	public int GetNumPresets()
	{
		return default(int);
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xEA3AD0", Offset = "0xEA3AD0", VA = "0xEA3AD0")]
	public Color GetPresetColor(int preset)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xEA3B30", Offset = "0xEA3B30", VA = "0xEA3B30")]
	public float GetAverageAbsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xEA3BD4", Offset = "0xEA3BD4", VA = "0xEA3BD4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xEA32EC", Offset = "0xEA32EC", VA = "0xEA32EC")]
	private void UpdateVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xEA2D74", Offset = "0xEA2D74", VA = "0xEA2D74")]
	private void SendVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xEA3CB4", Offset = "0xEA3CB4", VA = "0xEA3CB4")]
	public OVRVoiceModContext()
	{
	}
}
[Token(Token = "0x200027C")]
public class OculusSpatializerFMOD : MonoBehaviour
{
	[Token(Token = "0x20004EB")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4001145")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400114B")]
	private const string strOSP = "OculusSpatializerFMOD";

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xB8B9E0", Offset = "0xB8B9E0", VA = "0xB8B9E0")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xB8BA18", Offset = "0xB8BA18", VA = "0xB8BA18")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xB8BBE8", Offset = "0xB8BBE8", VA = "0xB8BBE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xB8BC64", Offset = "0xB8BC64", VA = "0xB8BC64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xB8BD70", Offset = "0xB8BD70", VA = "0xB8BD70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xB8C740", Offset = "0xB8C740", VA = "0xB8C740")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xB8BCC8", Offset = "0xB8BCC8", VA = "0xB8BCC8")]
	private static extern int OSP_FMOD_AssignRayCastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xB8C43C", Offset = "0xB8C43C", VA = "0xB8C43C")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xB8C4D4", Offset = "0xB8C4D4", VA = "0xB8C4D4")]
	private static extern int OSP_FMOD_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xB8C570", Offset = "0xB8C570", VA = "0xB8C570")]
	private static extern int OSP_FMOD_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xB8C60C", Offset = "0xB8C60C", VA = "0xB8C60C")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xB8C6A4", Offset = "0xB8C6A4", VA = "0xB8C6A4")]
	private static extern int OSP_FMOD_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xB8D57C", Offset = "0xB8D57C", VA = "0xB8D57C")]
	private static extern int OSP_FMOD_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xB8D63C", Offset = "0xB8D63C", VA = "0xB8D63C")]
	private static extern int OSP_FMOD_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xB8D6FC", Offset = "0xB8D6FC", VA = "0xB8D6FC")]
	public OculusSpatializerFMOD()
	{
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200027D")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170000A6")]
		public bool Highlight
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0xB7B264", Offset = "0xB7B264", VA = "0xB7B264")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0xB7B26C", Offset = "0xB7B26C", VA = "0xB7B26C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xB7B278", Offset = "0xB7B278", VA = "0xB7B278")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xB7B450", Offset = "0xB7B450", VA = "0xB7B450", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xB7B478", Offset = "0xB7B478", VA = "0xB7B478", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xB7B4A0", Offset = "0xB7B4A0", VA = "0xB7B4A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xB7B344", Offset = "0xB7B344", VA = "0xB7B344")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xB7B714", Offset = "0xB7B714", VA = "0xB7B714")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170000A7")]
		public bool InRange
		{
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0xB7BEAC", Offset = "0xB7BEAC", VA = "0xB7BEAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xB7BEB4", Offset = "0xB7BEB4", VA = "0xB7BEB4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public bool Targeted
		{
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0xB7C038", Offset = "0xB7C038", VA = "0xB7C038")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0xB7C040", Offset = "0xB7C040", VA = "0xB7C040")]
			set
			{
			}
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xB7C04C", Offset = "0xB7C04C", VA = "0xB7C04C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xB7BEC0", Offset = "0xB7BEC0", VA = "0xB7BEC0")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xB7C1EC", Offset = "0xB7C1EC", VA = "0xB7C1EC")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DEC50", Offset = "0x8DEC50")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170000A9")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xB7C1F4", Offset = "0xB7C1F4", VA = "0xB7C1F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0xB7C1FC", Offset = "0xB7C1FC", VA = "0xB7C1FC")]
			set
			{
			}
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xB7C218", Offset = "0xB7C218", VA = "0xB7C218", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xB7C424", Offset = "0xB7C424", VA = "0xB7C424", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xB7CD68", Offset = "0xB7CD68", VA = "0xB7CD68", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xB7D32C", Offset = "0xB7D32C", VA = "0xB7D32C", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xB7D714", Offset = "0xB7D714", VA = "0xB7D714")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xB7C678", Offset = "0xB7C678", VA = "0xB7C678")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xB7D7F4", Offset = "0xB7D7F4", VA = "0xB7D7F4")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xB7DC38", Offset = "0xB7DC38", VA = "0xB7DC38", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xB7DC50", Offset = "0xB7DC50", VA = "0xB7DC50", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xB7DC58", Offset = "0xB7DC58", VA = "0xB7DC58")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20004EC")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001EDD")]
			Disabled,
			[Token(Token = "0x4001EDE")]
			Enabled,
			[Token(Token = "0x4001EDF")]
			Targeted
		}

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xB7F9A8", Offset = "0xB7F9A8", VA = "0xB7F9A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xB7C150", Offset = "0xB7C150", VA = "0xB7C150")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xB7FA10", Offset = "0xB7FA10", VA = "0xB7FA10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xB7FA5C", Offset = "0xB7FA5C", VA = "0xB7FA5C")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xB7F83C", Offset = "0xB7F83C", VA = "0xB7F83C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xB7F8F0", Offset = "0xB7F8F0", VA = "0xB7F8F0")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xB7F9A0", Offset = "0xB7F9A0", VA = "0xB7F9A0")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001005")]
		[Address(RVA = "0xB84928", Offset = "0xB84928", VA = "0xB84928")]
		private void Start()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xB849F4", Offset = "0xB849F4", VA = "0xB849F4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xB84A00", Offset = "0xB84A00", VA = "0xB84A00")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xB84A0C", Offset = "0xB84A0C", VA = "0xB84A0C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xB79EB4", Offset = "0xB79EB4", VA = "0xB79EB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xB79F0C", Offset = "0xB79F0C", VA = "0xB79F0C")]
		private void Update()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xB7A1B8", Offset = "0xB7A1B8", VA = "0xB7A1B8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xB7A2AC", Offset = "0xB7A2AC", VA = "0xB7A2AC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xB79F10", Offset = "0xB79F10", VA = "0xB79F10")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xB7A3A0", Offset = "0xB7A3A0", VA = "0xB7A3A0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20004ED")]
		public enum ContactTest
		{
			[Token(Token = "0x4001EE1")]
			PerpenTest,
			[Token(Token = "0x4001EE2")]
			BackwardsPress
		}

		[Token(Token = "0x4001170")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001171")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170000AA")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0xB7A438", Offset = "0xB7A438", VA = "0xB7A438", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AB")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001010")]
			[Address(RVA = "0xB7A440", Offset = "0xB7A440", VA = "0xB7A440")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xB7A44C", Offset = "0xB7A44C", VA = "0xB7A44C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xB7A5A4", Offset = "0xB7A5A4", VA = "0xB7A5A4")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xB7A7AC", Offset = "0xB7A7AC", VA = "0xB7A7AC", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xB7AD00", Offset = "0xB7AD00", VA = "0xB7AD00")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xB7AC14", Offset = "0xB7AC14", VA = "0xB7AC14")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xB7AE50", Offset = "0xB7AE50", VA = "0xB7AE50")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xB7AF48", Offset = "0xB7AF48", VA = "0xB7AF48")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xB7B078", Offset = "0xB7B078", VA = "0xB7B078")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC540", Offset = "0x8EC540")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC550", Offset = "0x8EC550")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170000AC")]
		public Collider Collider
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xB7B168", Offset = "0xB7B168", VA = "0xB7B168", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AB0", Offset = "0x8F6AB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101A")]
			[Address(RVA = "0xB7B170", Offset = "0xB7B170", VA = "0xB7B170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AC0", Offset = "0x8F6AC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0xB7B178", Offset = "0xB7B178", VA = "0xB7B178", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AD0", Offset = "0x8F6AD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xB7B180", Offset = "0xB7B180", VA = "0xB7B180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AE0", Offset = "0x8F6AE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xB7B188", Offset = "0xB7B188", VA = "0xB7B188", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xB7B1DC", Offset = "0xB7B1DC", VA = "0xB7B1DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xB7B25C", Offset = "0xB7B25C", VA = "0xB7B25C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public interface ColliderZone
	{
		[Token(Token = "0x170000AF")]
		Collider Collider
		{
			[Token(Token = "0x6001020")]
			get;
		}

		[Token(Token = "0x170000B0")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001021")]
			get;
		}

		[Token(Token = "0x170000B1")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001022")]
			get;
		}
	}
	[Token(Token = "0x2000287")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xB7A708", Offset = "0xB7A708", VA = "0xB7A708")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000288")]
	public enum InteractionType
	{
		[Token(Token = "0x4001185")]
		Enter,
		[Token(Token = "0x4001186")]
		Stay,
		[Token(Token = "0x4001187")]
		Exit
	}
	[Token(Token = "0x2000289")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20004EE")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001EE4")]
			Mesh,
			[Token(Token = "0x4001EE5")]
			Skeleton,
			[Token(Token = "0x4001EE6")]
			Both
		}

		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC18", Offset = "0x8DFC18")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000277")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E2C")]
				[Address(RVA = "0xB809B4", Offset = "0xB809B4", VA = "0xB809B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E2E")]
				[Address(RVA = "0xB80A20", Offset = "0xB80A20", VA = "0xB80A20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E29")]
			[Address(RVA = "0xB804A0", Offset = "0xB804A0", VA = "0xB804A0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xB8078C", Offset = "0xB8078C", VA = "0xB8078C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0xB80790", Offset = "0xB80790", VA = "0xB80790", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0xB809BC", Offset = "0xB809BC", VA = "0xB809BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001188")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC580", Offset = "0x8EC580")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170000B2")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0xB7E8E8", Offset = "0xB7E8E8", VA = "0xB7E8E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001025")]
			[Address(RVA = "0xB7FA64", Offset = "0xB7FA64", VA = "0xB7FA64")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0xB7F4B0", Offset = "0xB7F4B0", VA = "0xB7F4B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001027")]
			[Address(RVA = "0xB7FAD0", Offset = "0xB7FAD0", VA = "0xB7FAD0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0xB7FB3C", Offset = "0xB7FB3C", VA = "0xB7FB3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001029")]
			[Address(RVA = "0xB7FB7C", Offset = "0xB7FB7C", VA = "0xB7FB7C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0xB7FBE8", Offset = "0xB7FBE8", VA = "0xB7FBE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102B")]
			[Address(RVA = "0xB7FC28", Offset = "0xB7FC28", VA = "0xB7FC28")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0xB7FC94", Offset = "0xB7FC94", VA = "0xB7FC94")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102D")]
			[Address(RVA = "0xB7FCD4", Offset = "0xB7FCD4", VA = "0xB7FCD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600102E")]
			[Address(RVA = "0xB7E8AC", Offset = "0xB7E8AC", VA = "0xB7E8AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102F")]
			[Address(RVA = "0xB7FD40", Offset = "0xB7FD40", VA = "0xB7FD40")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0xB7F474", Offset = "0xB7F474", VA = "0xB7F474")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001031")]
			[Address(RVA = "0xB7FDA8", Offset = "0xB7FDA8", VA = "0xB7FDA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0xB7FE10", Offset = "0xB7FE10", VA = "0xB7FE10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001033")]
			[Address(RVA = "0xB7FE4C", Offset = "0xB7FE4C", VA = "0xB7FE4C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0xB7FEB4", Offset = "0xB7FEB4", VA = "0xB7FEB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001035")]
			[Address(RVA = "0xB7FEF0", Offset = "0xB7FEF0", VA = "0xB7FEF0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0xB7FF58", Offset = "0xB7FF58", VA = "0xB7FF58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001037")]
			[Address(RVA = "0xB7FF94", Offset = "0xB7FF94", VA = "0xB7FF94")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0xB7FFFC", Offset = "0xB7FFFC", VA = "0xB7FFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6AF0", Offset = "0x8F6AF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001039")]
			[Address(RVA = "0xB8004C", Offset = "0xB8004C", VA = "0xB8004C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B00", Offset = "0x8F6B00")]
			private set
			{
			}
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xB800A0", Offset = "0xB800A0", VA = "0xB800A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xB80418", Offset = "0xB80418", VA = "0xB80418")]
		private void Update()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xB803A4", Offset = "0xB803A4", VA = "0xB803A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6B10", Offset = "0x8F6B10")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xB7BCFC", Offset = "0xB7BCFC", VA = "0xB7BCFC")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xB804CC", Offset = "0xB804CC", VA = "0xB804CC")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xB7F4F0", Offset = "0xB7F4F0", VA = "0xB7F4F0")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xB7E71C", Offset = "0xB7E71C", VA = "0xB7E71C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xB806AC", Offset = "0xB806AC", VA = "0xB806AC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004F0")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xB81170", Offset = "0xB81170", VA = "0xB81170")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170000BD")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0xB80A28", Offset = "0xB80A28", VA = "0xB80A28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001043")]
			[Address(RVA = "0xB80A30", Offset = "0xB80A30", VA = "0xB80A30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0xB80A38", Offset = "0xB80A38", VA = "0xB80A38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0xB80A40", Offset = "0xB80A40", VA = "0xB80A40", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001046")]
			[Address(RVA = "0xB80A48", Offset = "0xB80A48", VA = "0xB80A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B74", Offset = "0x8F6B74")]
			add
			{
			}
			[Token(Token = "0x6001047")]
			[Address(RVA = "0xB80AEC", Offset = "0xB80AEC", VA = "0xB80AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B84", Offset = "0x8F6B84")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xB80C04", Offset = "0xB80C04", VA = "0xB80C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6B94", Offset = "0x8F6B94")]
			add
			{
			}
			[Token(Token = "0x600104A")]
			[Address(RVA = "0xB80CA8", Offset = "0xB80CA8", VA = "0xB80CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6BA4", Offset = "0x8F6BA4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0xB80DC0", Offset = "0xB80DC0", VA = "0xB80DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6BB4", Offset = "0x8F6BB4")]
			add
			{
			}
			[Token(Token = "0x600104D")]
			[Address(RVA = "0xB80E64", Offset = "0xB80E64", VA = "0xB80E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6BC4", Offset = "0x8F6BC4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xB80B90", Offset = "0xB80B90", VA = "0xB80B90", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xB80D4C", Offset = "0xB80D4C", VA = "0xB80D4C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xB80F08", Offset = "0xB80F08", VA = "0xB80F08", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600104F")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xB7A540", Offset = "0xB7A540", VA = "0xB7A540", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xB81044", Offset = "0xB81044", VA = "0xB81044", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xB7B160", Offset = "0xB7B160", VA = "0xB7B160")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40011A0")]
		None,
		[Token(Token = "0x40011A1")]
		Proximity,
		[Token(Token = "0x40011A2")]
		Contact,
		[Token(Token = "0x40011A3")]
		Action
	}
	[Token(Token = "0x200028C")]
	public enum InteractableState
	{
		[Token(Token = "0x40011A5")]
		Default,
		[Token(Token = "0x40011A6")]
		ProximityState,
		[Token(Token = "0x40011A7")]
		ContactState,
		[Token(Token = "0x40011A8")]
		ActionState
	}
	[Token(Token = "0x200028D")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xB7ADAC", Offset = "0xB7ADAC", VA = "0xB7ADAC")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170000C1")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0xB811C0", Offset = "0xB811C0", VA = "0xB811C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xB80F7C", Offset = "0xB80F7C", VA = "0xB80F7C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xB810A8", Offset = "0xB810A8", VA = "0xB810A8")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xB81228", Offset = "0xB81228", VA = "0xB81228")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC28", Offset = "0x8DFC28")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000279")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E34")]
				[Address(RVA = "0xB8225C", Offset = "0xB8225C", VA = "0xB8225C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E36")]
				[Address(RVA = "0xB822C8", Offset = "0xB822C8", VA = "0xB822C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xB81D14", Offset = "0xB81D14", VA = "0xB81D14")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001E31")]
			[Address(RVA = "0xB81E48", Offset = "0xB81E48", VA = "0xB81E48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xB81EBC", Offset = "0xB81EBC", VA = "0xB81EBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0xB81E64", Offset = "0xB81E64", VA = "0xB81E64")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xB82264", Offset = "0xB82264", VA = "0xB82264", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xB81C08", Offset = "0xB81C08", VA = "0xB81C08")]
		private void Awake()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xB81C84", Offset = "0xB81C84", VA = "0xB81C84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6BD4", Offset = "0x8F6BD4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xB81D40", Offset = "0xB81D40", VA = "0xB81D40")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xB81E40", Offset = "0xB81E40", VA = "0xB81E40")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170000C2")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0xB7E140", Offset = "0xB7E140", VA = "0xB7E140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xB7E2A8", Offset = "0xB7E2A8", VA = "0xB7E2A8")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xB822D0", Offset = "0xB822D0", VA = "0xB822D0")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xB82384", Offset = "0xB82384", VA = "0xB82384")]
		private void Update()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xB82648", Offset = "0xB82648", VA = "0xB82648")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xB82690", Offset = "0xB82690", VA = "0xB82690")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xB82908", Offset = "0xB82908", VA = "0xB82908")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xB82A44", Offset = "0xB82A44", VA = "0xB82A44")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC38", Offset = "0x8DFC38")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E3A")]
				[Address(RVA = "0xB7F704", Offset = "0xB7F704", VA = "0xB7F704", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3C")]
				[Address(RVA = "0xB7F770", Offset = "0xB7F770", VA = "0xB7F770", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xB7E3D0", Offset = "0xB7E3D0", VA = "0xB7E3D0")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xB7F0E8", Offset = "0xB7F0E8", VA = "0xB7F0E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xB7F0EC", Offset = "0xB7F0EC", VA = "0xB7F0EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0xB7F70C", Offset = "0xB7F70C", VA = "0xB7F70C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011B8")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170000C3")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0xB7E01C", Offset = "0xB7E01C", VA = "0xB7E01C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000C4")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0xB7E024", Offset = "0xB7E024", VA = "0xB7E024", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000C5")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0xB7E02C", Offset = "0xB7E02C", VA = "0xB7E02C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C6")]
		public override bool EnableState
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0xB7E034", Offset = "0xB7E034", VA = "0xB7E034", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001069")]
			[Address(RVA = "0xB7E060", Offset = "0xB7E060", VA = "0xB7E060", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xB7E09C", Offset = "0xB7E09C", VA = "0xB7E09C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xB7E35C", Offset = "0xB7E35C", VA = "0xB7E35C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6C38", Offset = "0x8F6C38")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xB7E3FC", Offset = "0xB7E3FC", VA = "0xB7E3FC")]
		private void Update()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xB7E928", Offset = "0xB7E928", VA = "0xB7E928")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xB7EBAC", Offset = "0xB7EBAC", VA = "0xB7EBAC")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xB7ECF8", Offset = "0xB7ECF8", VA = "0xB7ECF8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xB7EFBC", Offset = "0xB7EFBC", VA = "0xB7EFBC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xB7EFC0", Offset = "0xB7EFC0", VA = "0xB7EFC0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xB7EFC4", Offset = "0xB7EFC4", VA = "0xB7EFC4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC610", Offset = "0x8EC610")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC620", Offset = "0x8EC620")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC630", Offset = "0x8EC630")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170000C7")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0xB7F778", Offset = "0xB7F778", VA = "0xB7F778", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6C9C", Offset = "0x8F6C9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001074")]
			[Address(RVA = "0xB7F780", Offset = "0xB7F780", VA = "0xB7F780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CAC", Offset = "0x8F6CAC")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public bool EnableState
		{
			[Token(Token = "0x6001075")]
			[Address(RVA = "0xB7F788", Offset = "0xB7F788", VA = "0xB7F788", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001076")]
			[Address(RVA = "0xB7F7A4", Offset = "0xB7F7A4", VA = "0xB7F7A4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001077")]
			[Address(RVA = "0xB7F7C4", Offset = "0xB7F7C4", VA = "0xB7F7C4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CBC", Offset = "0x8F6CBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001078")]
			[Address(RVA = "0xB7F7CC", Offset = "0xB7F7CC", VA = "0xB7F7CC", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CCC", Offset = "0x8F6CCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public float SphereRadius
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xB7F7D8", Offset = "0xB7F7D8", VA = "0xB7F7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CDC", Offset = "0x8F6CDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xB7F7E0", Offset = "0xB7F7E0", VA = "0xB7F7E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CEC", Offset = "0x8F6CEC")]
			private set
			{
			}
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xB7F7E8", Offset = "0xB7F7E8", VA = "0xB7F7E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xB7F830", Offset = "0xB7F830", VA = "0xB7F830", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xB7F834", Offset = "0xB7F834", VA = "0xB7F834")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40011C8")]
		None = 0,
		[Token(Token = "0x40011C9")]
		Ray = 1,
		[Token(Token = "0x40011CA")]
		Poke = 4,
		[Token(Token = "0x40011CB")]
		All = -1
	}
	[Token(Token = "0x2000294")]
	public enum ToolInputState
	{
		[Token(Token = "0x40011CD")]
		Inactive,
		[Token(Token = "0x40011CE")]
		PrimaryInputDown,
		[Token(Token = "0x40011CF")]
		PrimaryInputDownStay,
		[Token(Token = "0x40011D0")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000295")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xB7EF78", Offset = "0xB7EF78", VA = "0xB7EF78")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000296")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC640", Offset = "0x8EC640")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC650", Offset = "0x8EC650")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC660", Offset = "0x8EC660")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170000CB")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0xB7B070", Offset = "0xB7B070", VA = "0xB7B070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001080")]
			[Address(RVA = "0xB812A4", Offset = "0xB812A4", VA = "0xB812A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6CFC", Offset = "0x8F6CFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xB812AC", Offset = "0xB812AC", VA = "0xB812AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D0C", Offset = "0x8F6D0C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001082")]
			get;
		}

		[Token(Token = "0x170000CE")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001083")]
			get;
		}

		[Token(Token = "0x170000CF")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001084")]
			get;
		}

		[Token(Token = "0x170000D0")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0xB812B8", Offset = "0xB812B8", VA = "0xB812B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D1C", Offset = "0x8F6D1C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001086")]
			[Address(RVA = "0xB812C4", Offset = "0xB812C4", VA = "0xB812C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D2C", Offset = "0x8F6D2C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0xB812D0", Offset = "0xB812D0", VA = "0xB812D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D3C", Offset = "0x8F6D3C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001088")]
			[Address(RVA = "0xB812DC", Offset = "0xB812DC", VA = "0xB812DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D4C", Offset = "0x8F6D4C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600108D")]
			get;
			[Token(Token = "0x600108E")]
			set;
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xB812E8", Offset = "0xB812E8", VA = "0xB812E8")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600108A")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600108B")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600108C")]
		public abstract void DeFocus();

		[Token(Token = "0x600108F")]
		public abstract void Initialize();

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xB812F0", Offset = "0xB812F0", VA = "0xB812F0")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xB81340", Offset = "0xB81340", VA = "0xB81340")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xB81398", Offset = "0xB81398", VA = "0xB81398", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xB815EC", Offset = "0xB815EC", VA = "0xB815EC", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xB7EFD8", Offset = "0xB7EFD8", VA = "0xB7EFD8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170000D3")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001095")]
			get;
		}

		[Token(Token = "0x170000D4")]
		bool EnableState
		{
			[Token(Token = "0x6001097")]
			get;
			[Token(Token = "0x6001098")]
			set;
		}

		[Token(Token = "0x170000D5")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001099")]
			get;
			[Token(Token = "0x600109A")]
			set;
		}

		[Token(Token = "0x6001096")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000298")]
	public class PinchStateModule
	{
		[Token(Token = "0x20004F3")]
		private enum PinchState
		{
			[Token(Token = "0x4001EF7")]
			None,
			[Token(Token = "0x4001EF8")]
			PinchDown,
			[Token(Token = "0x4001EF9")]
			PinchStay,
			[Token(Token = "0x4001EFA")]
			PinchUp
		}

		[Token(Token = "0x40011DD")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170000D6")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0xB84A14", Offset = "0xB84A14", VA = "0xB84A14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D7")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0xB84AA0", Offset = "0xB84AA0", VA = "0xB84AA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D8")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0xB84B2C", Offset = "0xB84B2C", VA = "0xB84B2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xB84BB8", Offset = "0xB84BB8", VA = "0xB84BB8")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xB84BE4", Offset = "0xB84BE4", VA = "0xB84BE4")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40011E0")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40011E1")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40011E2")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40011E3")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40011E4")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EC680", Offset = "0x8EC680")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170000D9")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0xB84E8C", Offset = "0xB84E8C", VA = "0xB84E8C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000DA")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xB84E94", Offset = "0xB84E94", VA = "0xB84E94", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000DB")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0xB84EFC", Offset = "0xB84EFC", VA = "0xB84EFC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DC")]
		public override bool EnableState
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xB84F04", Offset = "0xB84F04", VA = "0xB84F04", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0xB84F38", Offset = "0xB84F38", VA = "0xB84F38", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xB84FAC", Offset = "0xB84FAC", VA = "0xB84FAC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xB8500C", Offset = "0xB8500C", VA = "0xB8500C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xB850A8", Offset = "0xB850A8", VA = "0xB850A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xB853B0", Offset = "0xB853B0", VA = "0xB853B0")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xB854AC", Offset = "0xB854AC", VA = "0xB854AC", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xB8581C", Offset = "0xB8581C", VA = "0xB8581C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xB859DC", Offset = "0xB859DC", VA = "0xB859DC")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xB85B04", Offset = "0xB85B04", VA = "0xB85B04")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xB85E48", Offset = "0xB85E48", VA = "0xB85E48")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xB86264", Offset = "0xB86264", VA = "0xB86264", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xB86340", Offset = "0xB86340", VA = "0xB86340", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xB86374", Offset = "0xB86374", VA = "0xB86374")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40011F0")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40011F1")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC6F4", Offset = "0x8EC6F4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170000DD")]
		public bool EnableState
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0xB84F1C", Offset = "0xB84F1C", VA = "0xB84F1C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xB84F54", Offset = "0xB84F54", VA = "0xB84F54", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xB8642C", Offset = "0xB8642C", VA = "0xB8642C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xB85374", Offset = "0xB85374", VA = "0xB85374", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xB86668", Offset = "0xB86668", VA = "0xB86668", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D5C", Offset = "0x8F6D5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xB86670", Offset = "0xB86670", VA = "0xB86670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6D6C", Offset = "0x8F6D6C")]
			set
			{
			}
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xB86434", Offset = "0xB86434", VA = "0xB86434")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xB8629C", Offset = "0xB8629C", VA = "0xB8629C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xB86678", Offset = "0xB86678", VA = "0xB86678")]
		private void Update()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xB869B0", Offset = "0xB869B0", VA = "0xB869B0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xB86BA0", Offset = "0xB86BA0", VA = "0xB86BA0")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170000E0")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xB7DC78", Offset = "0xB7DC78", VA = "0xB7DC78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0xB7DC80", Offset = "0xB7DC80", VA = "0xB7DC80")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xB7DD10", Offset = "0xB7DD10", VA = "0xB7DD10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0xB7DD18", Offset = "0xB7DD18", VA = "0xB7DD18")]
			set
			{
			}
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xB7DD88", Offset = "0xB7DD88", VA = "0xB7DD88")]
		private void Start()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xB7DFF4", Offset = "0xB7DFF4", VA = "0xB7DFF4")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xB7E004", Offset = "0xB7E004", VA = "0xB7E004")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xB7E014", Offset = "0xB7E014", VA = "0xB7E014")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xB7B810", Offset = "0xB7B810", VA = "0xB7B810")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xB7B814", Offset = "0xB7B814", VA = "0xB7B814")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xB7B898", Offset = "0xB7B898", VA = "0xB7B898")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xB7B98C", Offset = "0xB7B98C", VA = "0xB7B98C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xB7BA80", Offset = "0xB7BA80", VA = "0xB7BA80")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xB7BB44", Offset = "0xB7BB44", VA = "0xB7BB44")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xB7BC38", Offset = "0xB7BC38", VA = "0xB7BC38")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xB7BC84", Offset = "0xB7BC84", VA = "0xB7BC84")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xB7BDE4", Offset = "0xB7BDE4", VA = "0xB7BDE4")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xB7BE58", Offset = "0xB7BE58", VA = "0xB7BE58")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xB7BE60", Offset = "0xB7BE60", VA = "0xB7BE60")]
		private void Start()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xB7BE64", Offset = "0xB7BE64", VA = "0xB7BE64")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xB7BE1C", Offset = "0xB7BE1C", VA = "0xB7BE1C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xB7BEA4", Offset = "0xB7BEA4", VA = "0xB7BEA4")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC48", Offset = "0x8DFC48")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E40")]
				[Address(RVA = "0xB848B4", Offset = "0xB848B4", VA = "0xB848B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E42")]
				[Address(RVA = "0xB84920", Offset = "0xB84920", VA = "0xB84920", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xB845D8", Offset = "0xB845D8", VA = "0xB845D8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xB846BC", Offset = "0xB846BC", VA = "0xB846BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xB846C0", Offset = "0xB846C0", VA = "0xB846C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xB848BC", Offset = "0xB848BC", VA = "0xB848BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001201")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001202")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xB841E4", Offset = "0xB841E4", VA = "0xB841E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xB8427C", Offset = "0xB8427C", VA = "0xB8427C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xB84510", Offset = "0xB84510", VA = "0xB84510")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xB8449C", Offset = "0xB8449C", VA = "0xB8449C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6D7C", Offset = "0x8F6D7C")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xB84604", Offset = "0xB84604", VA = "0xB84604")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20004F5")]
		public enum SelectionState
		{
			[Token(Token = "0x4001F02")]
			Off,
			[Token(Token = "0x4001F03")]
			Selected,
			[Token(Token = "0x4001F04")]
			Highlighted
		}

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170000E2")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xB86C00", Offset = "0xB86C00", VA = "0xB86C00")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0xB86C08", Offset = "0xB86C08", VA = "0xB86C08")]
			set
			{
			}
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xB86D9C", Offset = "0xB86D9C", VA = "0xB86D9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xB86F68", Offset = "0xB86F68", VA = "0xB86F68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xB86C90", Offset = "0xB86C90", VA = "0xB86C90")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xB87050", Offset = "0xB87050", VA = "0xB87050")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20004F6")]
		public enum SegmentType
		{
			[Token(Token = "0x4001F06")]
			Straight,
			[Token(Token = "0x4001F07")]
			LeftTurn,
			[Token(Token = "0x4001F08")]
			RightTurn,
			[Token(Token = "0x4001F09")]
			Switch
		}

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001217")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001218")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC7D4", Offset = "0x8EC7D4")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170000E3")]
		public float StartDistance
		{
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0xB870BC", Offset = "0xB870BC", VA = "0xB870BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6DE0", Offset = "0x8F6DE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0xB870C4", Offset = "0xB870C4", VA = "0xB870C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6DF0", Offset = "0x8F6DF0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public float GridSize
		{
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0xB870CC", Offset = "0xB870CC", VA = "0xB870CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010E1")]
			[Address(RVA = "0xB870D4", Offset = "0xB870D4", VA = "0xB870D4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public int SubDivCount
		{
			[Token(Token = "0x60010E2")]
			[Address(RVA = "0xB870DC", Offset = "0xB870DC", VA = "0xB870DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0xB870E4", Offset = "0xB870E4", VA = "0xB870E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public SegmentType Type
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0xB870EC", Offset = "0xB870EC", VA = "0xB870EC")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170000E7")]
		public Pose EndPose
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0xB870F4", Offset = "0xB870F4", VA = "0xB870F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		public float Radius
		{
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0xB8758C", Offset = "0xB8758C", VA = "0xB8758C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E9")]
		public float SegmentLength
		{
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xB8715C", Offset = "0xB8715C", VA = "0xB8715C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xB8759C", Offset = "0xB8759C", VA = "0xB8759C")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xB875B4", Offset = "0xB875B4", VA = "0xB875B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xB8719C", Offset = "0xB8719C", VA = "0xB8719C")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xB875B8", Offset = "0xB875B8", VA = "0xB875B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xB875BC", Offset = "0xB875BC", VA = "0xB875BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xB87628", Offset = "0xB87628", VA = "0xB87628")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xB881BC", Offset = "0xB881BC", VA = "0xB881BC")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xB884D4", Offset = "0xB884D4", VA = "0xB884D4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC58", Offset = "0x8DFC58")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700027F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E46")]
				[Address(RVA = "0xB89120", Offset = "0xB89120", VA = "0xB89120", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E48")]
				[Address(RVA = "0xB8918C", Offset = "0xB8918C", VA = "0xB8918C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xB88E70", Offset = "0xB88E70", VA = "0xB88E70")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xB88F6C", Offset = "0xB88F6C", VA = "0xB88F6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xB88F70", Offset = "0xB88F70", VA = "0xB88F70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E47")]
			[Address(RVA = "0xB89128", Offset = "0xB89128", VA = "0xB89128", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400121E")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400121F")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xB88578", Offset = "0xB88578", VA = "0xB88578")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xB88628", Offset = "0xB88628", VA = "0xB88628")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xB886DC", Offset = "0xB886DC", VA = "0xB886DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xB8880C", Offset = "0xB8880C", VA = "0xB8880C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xB88980", Offset = "0xB88980", VA = "0xB88980")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xB88B20", Offset = "0xB88B20", VA = "0xB88B20")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xB88DA4", Offset = "0xB88DA4", VA = "0xB88DA4")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xB88C3C", Offset = "0xB88C3C", VA = "0xB88C3C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xB88C50", Offset = "0xB88C50", VA = "0xB88C50")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xB88DFC", Offset = "0xB88DFC", VA = "0xB88DFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6E00", Offset = "0x8F6E00")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xB88E9C", Offset = "0xB88E9C", VA = "0xB88E9C")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170000EA")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0xB89194", Offset = "0xB89194", VA = "0xB89194")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xB891A4", Offset = "0xB891A4", VA = "0xB891A4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xB891AC", Offset = "0xB891AC", VA = "0xB891AC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xB89630", Offset = "0xB89630", VA = "0xB89630")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001232")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001233")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC8D4", Offset = "0x8EC8D4")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170000EB")]
		public float Distance
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0xB89728", Offset = "0xB89728", VA = "0xB89728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E64", Offset = "0x8F6E64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001100")]
			[Address(RVA = "0xB89730", Offset = "0xB89730", VA = "0xB89730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6E74", Offset = "0x8F6E74")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public float Scale
		{
			[Token(Token = "0x6001101")]
			[Address(RVA = "0xB89738", Offset = "0xB89738", VA = "0xB89738")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001102")]
			[Address(RVA = "0xB89740", Offset = "0xB89740", VA = "0xB89740")]
			set
			{
			}
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xB891A8", Offset = "0xB891A8", VA = "0xB891A8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xB89748", Offset = "0xB89748", VA = "0xB89748")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xB891FC", Offset = "0xB891FC", VA = "0xB891FC")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xB894DC", Offset = "0xB894DC", VA = "0xB894DC")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001107")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xB896A0", Offset = "0xB896A0", VA = "0xB896A0")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC68", Offset = "0x8DFC68")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000281")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E4C")]
				[Address(RVA = "0xB8A12C", Offset = "0xB8A12C", VA = "0xB8A12C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000282")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E4E")]
				[Address(RVA = "0xB8A198", Offset = "0xB8A198", VA = "0xB8A198", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xB89D44", Offset = "0xB89D44", VA = "0xB89D44")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xB89EE8", Offset = "0xB89EE8", VA = "0xB89EE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xB89EEC", Offset = "0xB89EEC", VA = "0xB89EEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xB8A134", Offset = "0xB8A134", VA = "0xB8A134", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xB89928", Offset = "0xB89928", VA = "0xB89928")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xB8997C", Offset = "0xB8997C", VA = "0xB8997C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xB89A88", Offset = "0xB89A88", VA = "0xB89A88")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xB89BE0", Offset = "0xB89BE0", VA = "0xB89BE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xB89AE8", Offset = "0xB89AE8", VA = "0xB89AE8")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xB89CC0", Offset = "0xB89CC0", VA = "0xB89CC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6E84", Offset = "0x8F6E84")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xB89D70", Offset = "0xB89D70", VA = "0xB89D70")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xB89E28", Offset = "0xB89E28", VA = "0xB89E28")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xB89E88", Offset = "0xB89E88", VA = "0xB89E88")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20004F9")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001F1C")]
			Start,
			[Token(Token = "0x4001F1D")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001F1E")]
			Stop
		}

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC78", Offset = "0x8DFC78")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E52")]
				[Address(RVA = "0xB8AAE8", Offset = "0xB8AAE8", VA = "0xB8AAE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E54")]
				[Address(RVA = "0xB8AB54", Offset = "0xB8AB54", VA = "0xB8AB54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0xB8A474", Offset = "0xB8A474", VA = "0xB8A474")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xB8A8C4", Offset = "0xB8A8C4", VA = "0xB8A8C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0xB8A8C8", Offset = "0xB8A8C8", VA = "0xB8A8C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xB8AAF0", Offset = "0xB8AAF0", VA = "0xB8AAF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001246")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001247")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001248")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001249")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EC934", Offset = "0x8EC934")]
		protected float _initialSpeed;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xB8A1A0", Offset = "0xB8A1A0", VA = "0xB8A1A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xB8A304", Offset = "0xB8A304", VA = "0xB8A304")]
		private void Update()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xB8A310", Offset = "0xB8A310", VA = "0xB8A310", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xB7B84C", Offset = "0xB7B84C", VA = "0xB7B84C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xB8A27C", Offset = "0xB8A27C", VA = "0xB8A27C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6EE8", Offset = "0x8F6EE8")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xB8A4A0", Offset = "0xB8A4A0", VA = "0xB8A4A0")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xB8A40C", Offset = "0xB8A40C", VA = "0xB8A40C")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xB7B8D0", Offset = "0xB7B8D0", VA = "0xB7B8D0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xB7B9C4", Offset = "0xB7B9C4", VA = "0xB7B9C4")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xB8A6E0", Offset = "0xB8A6E0", VA = "0xB8A6E0")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xB8A7D0", Offset = "0xB8A7D0", VA = "0xB8A7D0")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xB7BAB8", Offset = "0xB7BAB8", VA = "0xB7BAB8")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xB7BB7C", Offset = "0xB7BB7C", VA = "0xB7BB7C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xB7BC74", Offset = "0xB7BC74", VA = "0xB7BC74")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xB8A858", Offset = "0xB8A858", VA = "0xB8A858")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170000ED")]
		public float TrackLength
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0xB8AB5C", Offset = "0xB8AB5C", VA = "0xB8AB5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001123")]
			[Address(RVA = "0xB8AB64", Offset = "0xB8AB64", VA = "0xB8AB64")]
			private set
			{
			}
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xB8AB6C", Offset = "0xB8AB6C", VA = "0xB8AB6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xB897CC", Offset = "0xB897CC", VA = "0xB897CC")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xB8AB70", Offset = "0xB8AB70", VA = "0xB8AB70")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xB8AD74", Offset = "0xB8AD74", VA = "0xB8AD74")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xB8AE98", Offset = "0xB8AE98", VA = "0xB8AE98")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class Pose
	{
		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xB84D70", Offset = "0xB84D70", VA = "0xB84D70")]
		public Pose()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xB84E1C", Offset = "0xB84E1C", VA = "0xB84E1C")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC88", Offset = "0x8DFC88")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E58")]
				[Address(RVA = "0xB8B48C", Offset = "0xB8B48C", VA = "0xB8B48C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E5A")]
				[Address(RVA = "0xB8B4F8", Offset = "0xB8B4F8", VA = "0xB8B4F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xB8B148", Offset = "0xB8B148", VA = "0xB8B148")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xB8B2AC", Offset = "0xB8B2AC", VA = "0xB8B2AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xB8B2B0", Offset = "0xB8B2B0", VA = "0xB8B2B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xB8B494", Offset = "0xB8B494", VA = "0xB8B494", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC98", Offset = "0x8DFC98")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E5E")]
				[Address(RVA = "0xB8B5CC", Offset = "0xB8B5CC", VA = "0xB8B5CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E60")]
				[Address(RVA = "0xB8B638", Offset = "0xB8B638", VA = "0xB8B638", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xB8B20C", Offset = "0xB8B20C", VA = "0xB8B20C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xB8B500", Offset = "0xB8B500", VA = "0xB8B500", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0xB8B504", Offset = "0xB8B504", VA = "0xB8B504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0xB8B5D4", Offset = "0xB8B5D4", VA = "0xB8B5D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400126C")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECB1C", Offset = "0x8ECB1C")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170000EE")]
		public bool IsMoving
		{
			[Token(Token = "0x600112B")]
			[Address(RVA = "0xB8AEB4", Offset = "0xB8AEB4", VA = "0xB8AEB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F4C", Offset = "0x8F6F4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600112C")]
			[Address(RVA = "0xB8AEBC", Offset = "0xB8AEBC", VA = "0xB8AEBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F6F5C", Offset = "0x8F6F5C")]
			private set
			{
			}
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xB8AEC8", Offset = "0xB8AEC8", VA = "0xB8AEC8")]
		private void Start()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xB8AF04", Offset = "0xB8AF04", VA = "0xB8AF04")]
		private void Update()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xB8B05C", Offset = "0xB8B05C", VA = "0xB8B05C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xB8B0C4", Offset = "0xB8B0C4", VA = "0xB8B0C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6F6C", Offset = "0x8F6F6C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xB8B174", Offset = "0xB8B174", VA = "0xB8B174")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F6FD0", Offset = "0x8F6FD0")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xB8B238", Offset = "0xB8B238", VA = "0xB8B238")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xB8B2A4", Offset = "0xB8B2A4", VA = "0xB8B2A4")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xB8B640", Offset = "0xB8B640", VA = "0xB8B640")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xB8B6A8", Offset = "0xB8B6A8", VA = "0xB8B6A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xB8B768", Offset = "0xB8B768", VA = "0xB8B768")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xB8B870", Offset = "0xB8B870", VA = "0xB8B870")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xB8B8F0", Offset = "0xB8B8F0", VA = "0xB8B8F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xB8B9D0", Offset = "0xB8B9D0", VA = "0xB8B9D0")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x400127D")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x400127E")]
		EUDT_OverlayQuad,
		[Token(Token = "0x400127F")]
		EUDT_None,
		[Token(Token = "0x4001280")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20002AB")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFCA8", Offset = "0x8DFCA8")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E64")]
				[Address(RVA = "0xB84170", Offset = "0xB84170", VA = "0xB84170", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E66")]
				[Address(RVA = "0xB841DC", Offset = "0xB841DC", VA = "0xB841DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E61")]
			[Address(RVA = "0xB837E0", Offset = "0xB837E0", VA = "0xB837E0")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001E62")]
			[Address(RVA = "0xB83F20", Offset = "0xB83F20", VA = "0xB83F20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E63")]
			[Address(RVA = "0xB83F24", Offset = "0xB83F24", VA = "0xB83F24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E65")]
			[Address(RVA = "0xB84178", Offset = "0xB84178", VA = "0xB84178", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001282")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001283")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001284")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ECB5C", Offset = "0x8ECB5C")]
		public GameObject mainCamera;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ECB94", Offset = "0x8ECB94")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xB82B04", Offset = "0xB82B04", VA = "0xB82B04")]
		private void Start()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xB832F4", Offset = "0xB832F4", VA = "0xB832F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xB83434", Offset = "0xB83434", VA = "0xB83434")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xB83564", Offset = "0xB83564", VA = "0xB83564")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xB83694", Offset = "0xB83694", VA = "0xB83694")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xB83408", Offset = "0xB83408", VA = "0xB83408")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xB8376C", Offset = "0xB8376C", VA = "0xB8376C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7034", Offset = "0x8F7034")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xB8380C", Offset = "0xB8380C", VA = "0xB8380C")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xB82E78", Offset = "0xB82E78", VA = "0xB82E78")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xB83934", Offset = "0xB83934", VA = "0xB83934")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xB83840", Offset = "0xB83840", VA = "0xB83840")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xB83CD8", Offset = "0xB83CD8", VA = "0xB83CD8")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xB83DB4", Offset = "0xB83DB4", VA = "0xB83DB4")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xB83E30", Offset = "0xB83E30", VA = "0xB83E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7098", Offset = "0x8F7098")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xB83E80", Offset = "0xB83E80", VA = "0xB83E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F70A8", Offset = "0x8F70A8")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xB83ED0", Offset = "0xB83ED0", VA = "0xB83ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F70B8", Offset = "0x8F70B8")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DECC4", Offset = "0x8DECC4")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFCB8", Offset = "0x8DFCB8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001E68")]
			[Address(RVA = "0xEA10E4", Offset = "0xEA10E4", VA = "0xEA10E4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E69")]
			[Address(RVA = "0xEA10EC", Offset = "0xEA10EC", VA = "0xEA10EC")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001299")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400129A")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x400129B")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400129C")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400129D")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400129E")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400129F")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40012A0")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40012A1")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40012A2")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40012A3")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xEA0304", Offset = "0xEA0304", VA = "0xEA0304")]
		private void Awake()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xEA035C", Offset = "0xEA035C", VA = "0xEA035C")]
		private void Start()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xEA076C", Offset = "0xEA076C", VA = "0xEA076C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xEA0838", Offset = "0xEA0838", VA = "0xEA0838")]
		private void Update()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xEA0948", Offset = "0xEA0948", VA = "0xEA0948")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xEA0C84", Offset = "0xEA0C84", VA = "0xEA0C84")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xEA0DF4", Offset = "0xEA0DF4", VA = "0xEA0DF4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xEA0F44", Offset = "0xEA0F44", VA = "0xEA0F44")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xEA09E4", Offset = "0xEA09E4", VA = "0xEA09E4")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xEA0A84", Offset = "0xEA0A84", VA = "0xEA0A84")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xEA05C0", Offset = "0xEA05C0", VA = "0xEA05C0")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xEA1068", Offset = "0xEA1068", VA = "0xEA1068")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public enum HandPoseId
	{
		[Token(Token = "0x40012B6")]
		Default,
		[Token(Token = "0x40012B7")]
		Generic,
		[Token(Token = "0x40012B8")]
		PingPongBall,
		[Token(Token = "0x40012B9")]
		Controller
	}
	[Token(Token = "0x20002AE")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170000EF")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0xEA111C", Offset = "0xEA111C", VA = "0xEA111C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F0")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0xEA1124", Offset = "0xEA1124", VA = "0xEA1124")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F1")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0xEA112C", Offset = "0xEA112C", VA = "0xEA112C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xEA1134", Offset = "0xEA1134", VA = "0xEA1134")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xEA113C", Offset = "0xEA113C", VA = "0xEA113C")]
		private void Update()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xEA13B4", Offset = "0xEA13B4", VA = "0xEA13B4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xEA1410", Offset = "0xEA1410", VA = "0xEA1410")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xEA1458", Offset = "0xEA1458", VA = "0xEA1458")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20002B0")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40012C1")]
		TRIANGLES,
		[Token(Token = "0x40012C2")]
		QUADS
	}
	[Token(Token = "0x20002B1")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40012C4")]
		ABSORPTION,
		[Token(Token = "0x40012C5")]
		TRANSMISSION,
		[Token(Token = "0x40012C6")]
		SCATTERING
	}
	[Token(Token = "0x20002B2")]
	public struct MeshGroup
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20002B3")]
	public static class AvatarLogger
	{
		[Token(Token = "0x40012CB")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x40012CC")]
		public const string Tab = "    ";

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xEA4370", Offset = "0xEA4370", VA = "0xEA4370")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F70C8", Offset = "0x8F70C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F70C8", Offset = "0x8F70C8")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xEA43F8", Offset = "0xEA43F8", VA = "0xEA43F8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F7128", Offset = "0x8F7128")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F7128", Offset = "0x8F7128")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xEA4490", Offset = "0xEA4490", VA = "0xEA4490")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F7188", Offset = "0x8F7188")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F7188", Offset = "0x8F7188")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xEA4518", Offset = "0xEA4518", VA = "0xEA4518")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F71E8", Offset = "0x8F71E8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F71E8", Offset = "0x8F71E8")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xEA45A0", Offset = "0xEA45A0", VA = "0xEA45A0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F7248", Offset = "0x8F7248")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F7248", Offset = "0x8F7248")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class CAPI
	{
		[Token(Token = "0x20004FF")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000500")]
		public enum Result
		{
			[Token(Token = "0x4001F3A")]
			Success = 0,
			[Token(Token = "0x4001F3B")]
			Failure = -1000,
			[Token(Token = "0x4001F3C")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001F3D")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001F3E")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001F3F")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001F40")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001F41")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001F42")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000501")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0xB79D44", Offset = "0xB79D44", VA = "0xB79D44")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x40012CD")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x40012D5")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001163")]
		[Address(RVA = "0xEA46A0", Offset = "0xEA46A0", VA = "0xEA46A0")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xEA474C", Offset = "0xEA474C", VA = "0xEA474C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xEA4908", Offset = "0xEA4908", VA = "0xEA4908")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001166")]
		[Address(RVA = "0xEA49E8", Offset = "0xEA49E8", VA = "0xEA49E8")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001167")]
		[Address(RVA = "0xEA4A74", Offset = "0xEA4A74", VA = "0xEA4A74")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001168")]
		[Address(RVA = "0xEA4B00", Offset = "0xEA4B00", VA = "0xEA4B00")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xEA4B9C", Offset = "0xEA4B9C", VA = "0xEA4B9C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600116A")]
		[Address(RVA = "0xEA4CB4", Offset = "0xEA4CB4", VA = "0xEA4CB4")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xEA4D50", Offset = "0xEA4D50", VA = "0xEA4D50")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600116C")]
		[Address(RVA = "0xEA4E68", Offset = "0xEA4E68", VA = "0xEA4E68")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600116D")]
		[Address(RVA = "0xEA4F04", Offset = "0xEA4F04", VA = "0xEA4F04")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600116E")]
		[Address(RVA = "0xEA4FA0", Offset = "0xEA4FA0", VA = "0xEA4FA0")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600116F")]
		[Address(RVA = "0xEA503C", Offset = "0xEA503C", VA = "0xEA503C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001170")]
		[Address(RVA = "0xEA50D8", Offset = "0xEA50D8", VA = "0xEA50D8")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001171")]
		[Address(RVA = "0xEA5184", Offset = "0xEA5184", VA = "0xEA5184")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001172")]
		[Address(RVA = "0xEA5230", Offset = "0xEA5230", VA = "0xEA5230")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001173")]
		[Address(RVA = "0xEA52DC", Offset = "0xEA52DC", VA = "0xEA52DC")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001174")]
		[Address(RVA = "0xEA5378", Offset = "0xEA5378", VA = "0xEA5378")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001175")]
		[Address(RVA = "0xEA5414", Offset = "0xEA5414", VA = "0xEA5414")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001176")]
		[Address(RVA = "0xEA54C0", Offset = "0xEA54C0", VA = "0xEA54C0")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001177")]
		[Address(RVA = "0xEA556C", Offset = "0xEA556C", VA = "0xEA556C")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001178")]
		[Address(RVA = "0xEA5618", Offset = "0xEA5618", VA = "0xEA5618")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001179")]
		[Address(RVA = "0xEA56B4", Offset = "0xEA56B4", VA = "0xEA56B4")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xEA5778", Offset = "0xEA5778", VA = "0xEA5778")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600117B")]
		[Address(RVA = "0xEA57FC", Offset = "0xEA57FC", VA = "0xEA57FC")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x600117C")]
		[Address(RVA = "0xEA58B8", Offset = "0xEA58B8", VA = "0xEA58B8")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x600117D")]
		[Address(RVA = "0xEA5994", Offset = "0xEA5994", VA = "0xEA5994")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x600117E")]
		[Address(RVA = "0xEA5A80", Offset = "0xEA5A80", VA = "0xEA5A80")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600117F")]
		[Address(RVA = "0xEA5B2C", Offset = "0xEA5B2C", VA = "0xEA5B2C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001180")]
		[Address(RVA = "0xEA5BD8", Offset = "0xEA5BD8", VA = "0xEA5BD8")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001181")]
		[Address(RVA = "0xEA5C84", Offset = "0xEA5C84", VA = "0xEA5C84")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001182")]
		[Address(RVA = "0xEA5D30", Offset = "0xEA5D30", VA = "0xEA5D30")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001183")]
		[Address(RVA = "0xEA5DDC", Offset = "0xEA5DDC", VA = "0xEA5DDC")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xEA5E78", Offset = "0xEA5E78", VA = "0xEA5E78")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xEA5FB4", Offset = "0xEA5FB4", VA = "0xEA5FB4")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001186")]
		[Address(RVA = "0xEA5F08", Offset = "0xEA5F08", VA = "0xEA5F08")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xEA61A8", Offset = "0xEA61A8", VA = "0xEA61A8")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001188")]
		[Address(RVA = "0xEA62E0", Offset = "0xEA62E0", VA = "0xEA62E0")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001189")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xEA637C", Offset = "0xEA637C", VA = "0xEA637C")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600118B")]
		[Address(RVA = "0xEA65EC", Offset = "0xEA65EC", VA = "0xEA65EC")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xEA6688", Offset = "0xEA6688", VA = "0xEA6688")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600118D")]
		[Address(RVA = "0xEA67C0", Offset = "0xEA67C0", VA = "0xEA67C0")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xEA685C", Offset = "0xEA685C", VA = "0xEA685C")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600118F")]
		[Address(RVA = "0xEA6994", Offset = "0xEA6994", VA = "0xEA6994")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xEA6A30", Offset = "0xEA6A30", VA = "0xEA6A30")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001191")]
		[Address(RVA = "0xEA6B68", Offset = "0xEA6B68", VA = "0xEA6B68")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xEA6C04", Offset = "0xEA6C04", VA = "0xEA6C04")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001193")]
		[Address(RVA = "0xEA6D3C", Offset = "0xEA6D3C", VA = "0xEA6D3C")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001194")]
		[Address(RVA = "0xEA6DD8", Offset = "0xEA6DD8", VA = "0xEA6DD8")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001195")]
		[Address(RVA = "0xEA6E74", Offset = "0xEA6E74", VA = "0xEA6E74")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001196")]
		[Address(RVA = "0xEA6F28", Offset = "0xEA6F28", VA = "0xEA6F28")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xEA6FC4", Offset = "0xEA6FC4", VA = "0xEA6FC4")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xEA719C", Offset = "0xEA719C", VA = "0xEA719C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001199")]
		[Address(RVA = "0xEA72D8", Offset = "0xEA72D8", VA = "0xEA72D8")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600119A")]
		[Address(RVA = "0xEA7100", Offset = "0xEA7100", VA = "0xEA7100")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600119B")]
		[Address(RVA = "0xEA7374", Offset = "0xEA7374", VA = "0xEA7374")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600119C")]
		[Address(RVA = "0xEA7410", Offset = "0xEA7410", VA = "0xEA7410")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600119D")]
		[Address(RVA = "0xEA74BC", Offset = "0xEA74BC", VA = "0xEA74BC")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600119E")]
		[Address(RVA = "0xEA7558", Offset = "0xEA7558", VA = "0xEA7558")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600119F")]
		[Address(RVA = "0xEA7604", Offset = "0xEA7604", VA = "0xEA7604")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xEA76A0", Offset = "0xEA76A0", VA = "0xEA76A0")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xEA773C", Offset = "0xEA773C", VA = "0xEA773C")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xEA7984", Offset = "0xEA7984", VA = "0xEA7984")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xEA7A30", Offset = "0xEA7A30", VA = "0xEA7A30")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xEA7C1C", Offset = "0xEA7C1C", VA = "0xEA7C1C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xEA7CD0", Offset = "0xEA7CD0", VA = "0xEA7CD0")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xEA7DFC", Offset = "0xEA7DFC", VA = "0xEA7DFC")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xEA7E98", Offset = "0xEA7E98", VA = "0xEA7E98")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xEA7F34", Offset = "0xEA7F34", VA = "0xEA7F34")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xEA805C", Offset = "0xEA805C", VA = "0xEA805C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xEA80F8", Offset = "0xEA80F8", VA = "0xEA80F8")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xEA8220", Offset = "0xEA8220", VA = "0xEA8220")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xEA82BC", Offset = "0xEA82BC", VA = "0xEA82BC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xEA8368", Offset = "0xEA8368", VA = "0xEA8368")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xEA8414", Offset = "0xEA8414", VA = "0xEA8414")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xEA84C0", Offset = "0xEA84C0", VA = "0xEA84C0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xEA855C", Offset = "0xEA855C", VA = "0xEA855C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xEA8600", Offset = "0xEA8600", VA = "0xEA8600")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xEA86A4", Offset = "0xEA86A4", VA = "0xEA86A4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xEA8740", Offset = "0xEA8740", VA = "0xEA8740")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xEA87DC", Offset = "0xEA87DC", VA = "0xEA87DC")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xEA88AC", Offset = "0xEA88AC", VA = "0xEA88AC")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xEA8958", Offset = "0xEA8958", VA = "0xEA8958")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xEA8A04", Offset = "0xEA8A04", VA = "0xEA8A04")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xEA8AA0", Offset = "0xEA8AA0", VA = "0xEA8AA0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xEA8B3C", Offset = "0xEA8B3C", VA = "0xEA8B3C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xEA8BD8", Offset = "0xEA8BD8", VA = "0xEA8BD8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xEA8C8C", Offset = "0xEA8C8C", VA = "0xEA8C8C")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xEA8D38", Offset = "0xEA8D38", VA = "0xEA8D38")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xEA8DE4", Offset = "0xEA8DE4", VA = "0xEA8DE4")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xEA8E90", Offset = "0xEA8E90", VA = "0xEA8E90")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xEA8F44", Offset = "0xEA8F44", VA = "0xEA8F44")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xEA8FF8", Offset = "0xEA8FF8", VA = "0xEA8FF8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xEA9094", Offset = "0xEA9094", VA = "0xEA9094")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xEA9130", Offset = "0xEA9130", VA = "0xEA9130")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xEA9258", Offset = "0xEA9258", VA = "0xEA9258")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xEA92F4", Offset = "0xEA92F4", VA = "0xEA92F4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xEA941C", Offset = "0xEA941C", VA = "0xEA941C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xEA94B8", Offset = "0xEA94B8", VA = "0xEA94B8")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xEA95E0", Offset = "0xEA95E0", VA = "0xEA95E0")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xEA967C", Offset = "0xEA967C", VA = "0xEA967C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xEA9840", Offset = "0xEA9840", VA = "0xEA9840")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xEA9AE8", Offset = "0xEA9AE8", VA = "0xEA9AE8")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xEA97A4", Offset = "0xEA97A4", VA = "0xEA97A4")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xEA9B94", Offset = "0xEA9B94", VA = "0xEA9B94")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xEA9C30", Offset = "0xEA9C30", VA = "0xEA9C30")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xEA9CDC", Offset = "0xEA9CDC", VA = "0xEA9CDC")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xEA9D88", Offset = "0xEA9D88", VA = "0xEA9D88")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xEA9E34", Offset = "0xEA9E34", VA = "0xEA9E34")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xEA9EF0", Offset = "0xEA9EF0", VA = "0xEA9EF0")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xEA9FAC", Offset = "0xEA9FAC", VA = "0xEA9FAC")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xEAA068", Offset = "0xEAA068", VA = "0xEAA068")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xEAA104", Offset = "0xEAA104", VA = "0xEAA104")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xEAA1A0", Offset = "0xEAA1A0", VA = "0xEAA1A0")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xEAA23C", Offset = "0xEAA23C", VA = "0xEAA23C")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xEAA2D8", Offset = "0xEAA2D8", VA = "0xEAA2D8")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xEAA374", Offset = "0xEAA374", VA = "0xEAA374")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xEAA4B4", Offset = "0xEAA4B4", VA = "0xEAA4B4")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xEAA568", Offset = "0xEAA568", VA = "0xEAA568")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xEAA604", Offset = "0xEAA604", VA = "0xEAA604")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xEAA668", Offset = "0xEAA668", VA = "0xEAA668")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xEAA784", Offset = "0xEAA784", VA = "0xEAA784")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xEAA830", Offset = "0xEAA830", VA = "0xEAA830")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xEAA974", Offset = "0xEAA974", VA = "0xEAA974")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xEAAA20", Offset = "0xEAAA20", VA = "0xEAAA20")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xEAAAE4", Offset = "0xEAAAE4", VA = "0xEAAAE4")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xEAAE84", Offset = "0xEAAE84", VA = "0xEAAE84")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xEAAF20", Offset = "0xEAAF20", VA = "0xEAAF20")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xEAAFD4", Offset = "0xEAAFD4", VA = "0xEAAFD4")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xEAB7A4", Offset = "0xEAB7A4", VA = "0xEAB7A4")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xEAB840", Offset = "0xEAB840", VA = "0xEAB840")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xEA4638", Offset = "0xEA4638", VA = "0xEA4638")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F72A8", Offset = "0x8F72A8")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xEAB8F4", Offset = "0xEAB8F4", VA = "0xEAB8F4")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xEAB994", Offset = "0xEAB994", VA = "0xEAB994")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xEABA30", Offset = "0xEABA30", VA = "0xEABA30")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xEABACC", Offset = "0xEABACC", VA = "0xEABACC")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xEABB68", Offset = "0xEABB68", VA = "0xEABB68")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xEAC54C", Offset = "0xEAC54C", VA = "0xEAC54C")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xEAC5E8", Offset = "0xEAC5E8", VA = "0xEAC5E8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xEAC9EC", Offset = "0xEAC9EC", VA = "0xEAC9EC")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xEAC95C", Offset = "0xEAC95C", VA = "0xEAC95C")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xEACA78", Offset = "0xEACA78", VA = "0xEACA78")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20002B5")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x8ECC4C", Offset = "0x8ECC4C")]
		public SoundFXRef testSound1;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xE96E08", Offset = "0xE96E08", VA = "0xE96E08")]
		private void Start()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xE96E0C", Offset = "0xE96E0C", VA = "0xE96E0C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xE96ED4", Offset = "0xE96ED4", VA = "0xE96ED4")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECC98", Offset = "0x8ECC98")]
		public bool autoRetrigger;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8ECCD0", Offset = "0x8ECCD0")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECCF4", Offset = "0x8ECCF4")]
		public Transform[] playPositions;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xE8DEEC", Offset = "0xE8DEEC", VA = "0xE8DEEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xE8E074", Offset = "0xE8E074", VA = "0xE8E074")]
		private void Update()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xE8E254", Offset = "0xE8E254", VA = "0xE8E254")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xE8E0D4", Offset = "0xE8E0D4", VA = "0xE8E0D4")]
		public void Play()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xE8E3A0", Offset = "0xE8E3A0", VA = "0xE8E3A0")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xE8E520", Offset = "0xE8E520", VA = "0xE8E520")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40012E4")]
		Default,
		[Token(Token = "0x40012E5")]
		Preload,
		[Token(Token = "0x40012E6")]
		ManualPreload
	}
	[Token(Token = "0x20002B8")]
	public enum Fade
	{
		[Token(Token = "0x40012E8")]
		In,
		[Token(Token = "0x40012E9")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20002B9")]
	public class SoundGroup
	{
		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8ECD2C", Offset = "0x8ECD2C")]
		public int maxPlayingSounds;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xE96CE8", Offset = "0xE96CE8", VA = "0xE96CE8")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xE96D7C", Offset = "0xE96D7C", VA = "0xE96D7C")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xE95708", Offset = "0xE95708", VA = "0xE95708")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xE95848", Offset = "0xE95848", VA = "0xE95848")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xE9633C", Offset = "0xE9633C", VA = "0xE9633C")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002BA")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000502")]
		public enum Fade
		{
			[Token(Token = "0x4001F45")]
			In,
			[Token(Token = "0x4001F46")]
			Out
		}

		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFCC8", Offset = "0x8DFCC8")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0xE927E8", Offset = "0xE927E8", VA = "0xE927E8")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001E71")]
			[Address(RVA = "0xE951C0", Offset = "0xE951C0", VA = "0xE951C0")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFCD8", Offset = "0x8DFCD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xE95124", Offset = "0xE95124", VA = "0xE95124")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xE9512C", Offset = "0xE9512C", VA = "0xE9512C")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECD58", Offset = "0x8ECD58")]
		public bool makePersistent;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECD90", Offset = "0x8ECD90")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECDC8", Offset = "0x8ECDC8")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECE00", Offset = "0x8ECE00")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECE38", Offset = "0x8ECE38")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECE70", Offset = "0x8ECE70")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECEA8", Offset = "0x8ECEA8")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECEE0", Offset = "0x8ECEE0")]
		public bool verboseLogging;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECF18", Offset = "0x8ECF18")]
		public int maxSoundEmitters;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECF50", Offset = "0x8ECF50")]
		public float volumeSoundFX;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ECF88", Offset = "0x8ECF88")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000F2")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0xE8E5DC", Offset = "0xE8E5DC", VA = "0xE8E5DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F3")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001202")]
			[Address(RVA = "0xE8E6C0", Offset = "0xE8E6C0", VA = "0xE8E6C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0xE8E728", Offset = "0xE8E728", VA = "0xE8E728")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F5")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0xE8E7A0", Offset = "0xE8E7A0", VA = "0xE8E7A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F6")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0xE8E818", Offset = "0xE8E818", VA = "0xE8E818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0xE8E890", Offset = "0xE8E890", VA = "0xE8E890")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0xE8E908", Offset = "0xE8E908", VA = "0xE8E908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0xE906B0", Offset = "0xE906B0", VA = "0xE906B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xE8E980", Offset = "0xE8E980", VA = "0xE8E980")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xE8EBAC", Offset = "0xE8EBAC", VA = "0xE8EBAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xE8E984", Offset = "0xE8E984", VA = "0xE8E984")]
		private void Init()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xE8F804", Offset = "0xE8F804", VA = "0xE8F804")]
		private void Update()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xE8ED04", Offset = "0xE8ED04", VA = "0xE8ED04")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xE8FE30", Offset = "0xE8FE30", VA = "0xE8FE30")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xE8FFB8", Offset = "0xE8FFB8", VA = "0xE8FFB8")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xE90158", Offset = "0xE90158", VA = "0xE90158")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xE90258", Offset = "0xE90258", VA = "0xE90258")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xE902EC", Offset = "0xE902EC", VA = "0xE902EC")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xE90718", Offset = "0xE90718", VA = "0xE90718")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xE90794", Offset = "0xE90794", VA = "0xE90794")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xE8F154", Offset = "0xE8F154", VA = "0xE8F154")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xE8F808", Offset = "0xE8F808", VA = "0xE8F808")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xE90A20", Offset = "0xE90A20", VA = "0xE90A20")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xE90B1C", Offset = "0xE90B1C", VA = "0xE90B1C")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xE90C1C", Offset = "0xE90C1C", VA = "0xE90C1C")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xE908EC", Offset = "0xE908EC", VA = "0xE908EC")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xE90D9C", Offset = "0xE90D9C", VA = "0xE90D9C")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xE90EFC", Offset = "0xE90EFC", VA = "0xE90EFC")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xE910B8", Offset = "0xE910B8", VA = "0xE910B8")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xE8E2E4", Offset = "0xE8E2E4", VA = "0xE8E2E4")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xE8E464", Offset = "0xE8E464", VA = "0xE8E464")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xE91270", Offset = "0xE91270", VA = "0xE91270")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xE91340", Offset = "0xE91340", VA = "0xE91340")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xE913E8", Offset = "0xE913E8", VA = "0xE913E8")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xE914BC", Offset = "0xE914BC", VA = "0xE914BC")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xE91568", Offset = "0xE91568", VA = "0xE91568")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xE91648", Offset = "0xE91648", VA = "0xE91648")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xE9212C", Offset = "0xE9212C", VA = "0xE9212C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xE927F0", Offset = "0xE927F0", VA = "0xE927F0")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xE929D0", Offset = "0xE929D0", VA = "0xE929D0")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xE9371C", Offset = "0xE9371C", VA = "0xE9371C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xE91850", Offset = "0xE91850", VA = "0xE91850")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xE93840", Offset = "0xE93840", VA = "0xE93840")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xE9391C", Offset = "0xE9391C", VA = "0xE9391C")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xE93A04", Offset = "0xE93A04", VA = "0xE93A04")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xE93DC0", Offset = "0xE93DC0", VA = "0xE93DC0")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xE93FC8", Offset = "0xE93FC8", VA = "0xE93FC8")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xE940E4", Offset = "0xE940E4", VA = "0xE940E4")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xE942B8", Offset = "0xE942B8", VA = "0xE942B8")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xE94394", Offset = "0xE94394", VA = "0xE94394")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xE944D0", Offset = "0xE944D0", VA = "0xE944D0")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xE948C4", Offset = "0xE948C4", VA = "0xE948C4")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001311")]
		None = -1,
		[Token(Token = "0x4001312")]
		Reserved,
		[Token(Token = "0x4001313")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20002BC")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xE952C0", Offset = "0xE952C0", VA = "0xE952C0")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xE95264", Offset = "0xE95264", VA = "0xE95264")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000505")]
		public enum FadeState
		{
			[Token(Token = "0x4001F4B")]
			Null,
			[Token(Token = "0x4001F4C")]
			FadingIn,
			[Token(Token = "0x4001F4D")]
			FadingOut,
			[Token(Token = "0x4001F4E")]
			Ducking
		}

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFCE8", Offset = "0x8DFCE8")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x1700028B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E78")]
				[Address(RVA = "0xE95D28", Offset = "0xE95D28", VA = "0xE95D28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E7A")]
				[Address(RVA = "0xE95D94", Offset = "0xE95D94", VA = "0xE95D94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E75")]
			[Address(RVA = "0xE959F8", Offset = "0xE959F8", VA = "0xE959F8")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xE95C40", Offset = "0xE95C40", VA = "0xE95C40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E77")]
			[Address(RVA = "0xE95C44", Offset = "0xE95C44", VA = "0xE95C44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E79")]
			[Address(RVA = "0xE95D30", Offset = "0xE95D30", VA = "0xE95D30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFCF8", Offset = "0x8DFCF8")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x1700028D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7E")]
				[Address(RVA = "0xE961EC", Offset = "0xE961EC", VA = "0xE961EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E80")]
				[Address(RVA = "0xE96258", Offset = "0xE96258", VA = "0xE96258", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0xE95BD0", Offset = "0xE95BD0", VA = "0xE95BD0")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0xE9607C", Offset = "0xE9607C", VA = "0xE9607C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0xE96080", Offset = "0xE96080", VA = "0xE96080", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0xE961F4", Offset = "0xE961F4", VA = "0xE961F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD08", Offset = "0x8DFD08")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700028F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E84")]
				[Address(RVA = "0xE96008", Offset = "0xE96008", VA = "0xE96008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000290")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E86")]
				[Address(RVA = "0xE96074", Offset = "0xE96074", VA = "0xE96074", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0xE95BFC", Offset = "0xE95BFC", VA = "0xE95BFC")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0xE95D9C", Offset = "0xE95D9C", VA = "0xE95D9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0xE95DA0", Offset = "0xE95DA0", VA = "0xE95DA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0xE96010", Offset = "0xE96010", VA = "0xE96010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000FA")]
		public float volume
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xE93700", Offset = "0xE93700", VA = "0xE93700")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xE95360", Offset = "0xE95360", VA = "0xE95360")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public float pitch
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xE9537C", Offset = "0xE9537C", VA = "0xE9537C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600123B")]
			[Address(RVA = "0xE95398", Offset = "0xE95398", VA = "0xE95398")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public AudioClip clip
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xE953B4", Offset = "0xE953B4", VA = "0xE953B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xE953D0", Offset = "0xE953D0", VA = "0xE953D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public float time
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xE953EC", Offset = "0xE953EC", VA = "0xE953EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600123F")]
			[Address(RVA = "0xE9162C", Offset = "0xE9162C", VA = "0xE9162C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public float length
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0xE95408", Offset = "0xE95408", VA = "0xE95408")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FF")]
		public bool loop
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xE954C0", Offset = "0xE954C0", VA = "0xE954C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001242")]
			[Address(RVA = "0xE954DC", Offset = "0xE954DC", VA = "0xE954DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public bool mute
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xE954FC", Offset = "0xE954FC", VA = "0xE954FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xE95518", Offset = "0xE95518", VA = "0xE95518")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0xE95538", Offset = "0xE95538", VA = "0xE95538")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xE95554", Offset = "0xE95554", VA = "0xE95554")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public bool isPlaying
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xE95570", Offset = "0xE95570", VA = "0xE95570")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xE9558C", Offset = "0xE9558C", VA = "0xE9558C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xE936EC", Offset = "0xE936EC", VA = "0xE936EC")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xE95798", Offset = "0xE95798", VA = "0xE95798")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xE939FC", Offset = "0xE939FC", VA = "0xE939FC")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xE957A0", Offset = "0xE957A0", VA = "0xE957A0")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xE957A8", Offset = "0xE957A8", VA = "0xE957A8")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xE94210", Offset = "0xE94210", VA = "0xE94210")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xE909C0", Offset = "0xE909C0", VA = "0xE909C0")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xE957B0", Offset = "0xE957B0", VA = "0xE957B0")]
		public void Play()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xE95810", Offset = "0xE95810", VA = "0xE95810")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xE9080C", Offset = "0xE9080C", VA = "0xE9080C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xE958D8", Offset = "0xE958D8", VA = "0xE958D8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xE93CC4", Offset = "0xE93CC4", VA = "0xE93CC4")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xE93F10", Offset = "0xE93F10", VA = "0xE93F10")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xE90D5C", Offset = "0xE90D5C", VA = "0xE90D5C")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xE95938", Offset = "0xE95938", VA = "0xE95938")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xE95964", Offset = "0xE95964", VA = "0xE95964")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F730C", Offset = "0x8F730C")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xE95A24", Offset = "0xE95A24", VA = "0xE95A24")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xE9117C", Offset = "0xE9117C", VA = "0xE9117C")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xE911F8", Offset = "0xE911F8", VA = "0xE911F8")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xE91020", Offset = "0xE91020", VA = "0xE91020")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xE90E60", Offset = "0xE90E60", VA = "0xE90E60")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xE95A9C", Offset = "0xE95A9C", VA = "0xE95A9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7370", Offset = "0x8F7370")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xE95B24", Offset = "0xE95B24", VA = "0xE95B24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F73D4", Offset = "0x8F73D4")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xE95C28", Offset = "0xE95C28", VA = "0xE95C28")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public enum SoundFXNext
	{
		[Token(Token = "0x400132A")]
		Random,
		[Token(Token = "0x400132B")]
		Sequential
	}
	[Token(Token = "0x20002C0")]
	public enum FreqHint
	{
		[Token(Token = "0x400132D")]
		None,
		[Token(Token = "0x400132E")]
		Wide,
		[Token(Token = "0x400132F")]
		Narrow
	}
	[Token(Token = "0x20002C1")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001331")]
		VeryLow = -2,
		[Token(Token = "0x4001332")]
		Low,
		[Token(Token = "0x4001333")]
		Default,
		[Token(Token = "0x4001334")]
		High,
		[Token(Token = "0x4001335")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20002C2")]
	public class OSPProps
	{
		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED070", Offset = "0x8ED070")]
		public bool enableSpatialization;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED0A8", Offset = "0x8ED0A8")]
		public bool useFastOverride;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED0E0", Offset = "0x8ED0E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8ED0E0", Offset = "0x8ED0E0")]
		public float gain;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED134", Offset = "0x8ED134")]
		public bool enableInvSquare;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED16C", Offset = "0x8ED16C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8ED16C", Offset = "0x8ED16C")]
		public float volumetric;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED1C4", Offset = "0x8ED1C4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8ED1C4", Offset = "0x8ED1C4")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xE952D0", Offset = "0xE952D0", VA = "0xE952D0")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C3")]
	public class SoundFX
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED224", Offset = "0x8ED224")]
		public string name;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED25C", Offset = "0x8ED25C")]
		public SoundFXNext playback;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED294", Offset = "0x8ED294")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8ED294", Offset = "0x8ED294")]
		public float volume;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED2E8", Offset = "0x8ED2E8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8ED2E8", Offset = "0x8ED2E8")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED344", Offset = "0x8ED344")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8ED344", Offset = "0x8ED344")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED3A4", Offset = "0x8ED3A4")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED3DC", Offset = "0x8ED3DC")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED414", Offset = "0x8ED414")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED44C", Offset = "0x8ED44C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8ED44C", Offset = "0x8ED44C")]
		public float spread;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED4A4", Offset = "0x8ED4A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8ED4A4", Offset = "0x8ED4A4")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED4F8", Offset = "0x8ED4F8")]
		public SoundPriority priority;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED530", Offset = "0x8ED530")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8ED530", Offset = "0x8ED530")]
		public Vector2 delay;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED58C", Offset = "0x8ED58C")]
		public bool looping;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED5C4", Offset = "0x8ED5C4")]
		public AudioClip[] soundClips;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000103")]
		public int Length
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xE96260", Offset = "0xE96260", VA = "0xE96260")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000104")]
		public bool IsValid
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xE96280", Offset = "0xE96280", VA = "0xE96280")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000105")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0xE9632C", Offset = "0xE9632C", VA = "0xE9632C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001266")]
			[Address(RVA = "0xE96334", Offset = "0xE96334", VA = "0xE96334")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0xE935F0", Offset = "0xE935F0", VA = "0xE935F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000107")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0xE93624", Offset = "0xE93624", VA = "0xE93624")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xE94BD4", Offset = "0xE94BD4", VA = "0xE94BD4")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xE93518", Offset = "0xE93518", VA = "0xE93518")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xE93648", Offset = "0xE93648", VA = "0xE93648")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xE935FC", Offset = "0xE935FC", VA = "0xE935FC")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xE9635C", Offset = "0xE9635C", VA = "0xE9635C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xE9363C", Offset = "0xE9363C", VA = "0xE9363C")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xE96464", Offset = "0xE96464", VA = "0xE96464")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xE96540", Offset = "0xE96540", VA = "0xE96540")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xE96654", Offset = "0xE96654", VA = "0xE96654")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xE966E0", Offset = "0xE966E0", VA = "0xE966E0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xE96774", Offset = "0xE96774", VA = "0xE96774")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xE96800", Offset = "0xE96800", VA = "0xE96800")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xE9688C", Offset = "0xE9688C", VA = "0xE9688C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C4")]
	public class SoundFXRef
	{
		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000108")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0xE96904", Offset = "0xE96904", VA = "0xE96904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		public string name
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0xE969F8", Offset = "0xE969F8", VA = "0xE969F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001277")]
			[Address(RVA = "0xE96A00", Offset = "0xE96A00", VA = "0xE96A00")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public int Length
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0xE96A08", Offset = "0xE96A08", VA = "0xE96A08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010B")]
		public bool IsValid
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0xE96A50", Offset = "0xE96A50", VA = "0xE96A50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xE96934", Offset = "0xE96934", VA = "0xE96934")]
		private void Init()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xE96A88", Offset = "0xE96A88", VA = "0xE96A88")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xE96AC0", Offset = "0xE96AC0", VA = "0xE96AC0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xE96B00", Offset = "0xE96B00", VA = "0xE96B00")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xE8E264", Offset = "0xE8E264", VA = "0xE8E264")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xE96B48", Offset = "0xE96B48", VA = "0xE96B48")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xE96B88", Offset = "0xE96B88", VA = "0xE96B88")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xE96BD8", Offset = "0xE96BD8", VA = "0xE96BD8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xE96C10", Offset = "0xE96C10", VA = "0xE96C10")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xE96C50", Offset = "0xE96C50", VA = "0xE96C50")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xE96C88", Offset = "0xE96C88", VA = "0xE96C88")]
		public SoundFXRef()
		{
		}
	}
}
namespace cGrabber
{
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DED28", Offset = "0x8DED28")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DED28", Offset = "0x8DED28")]
	public class cGrabbable : MonoBehaviour
	{
		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED5FC", Offset = "0x8ED5FC")]
		public bool avoidIntersection;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8ED634", Offset = "0x8ED634")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED634", Offset = "0x8ED634")]
		public bool handsDisappear;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8ED69C", Offset = "0x8ED69C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED69C", Offset = "0x8ED69C")]
		public float maxSpeed;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onGrabbed;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onReleased;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onGrabClicked;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onGrabMoved;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int grabId_;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float grabClickCooldown_;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<cGrabber> grabbers_;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rigidbody rigidbody_;

		[Token(Token = "0x1700010C")]
		public List<cGrabber> grabbers
		{
			[Token(Token = "0x6001285")]
			[Address(RVA = "0xB6223C", Offset = "0xB6223C", VA = "0xB6223C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		public Rigidbody rigidbody
		{
			[Token(Token = "0x6001286")]
			[Address(RVA = "0xB62244", Offset = "0xB62244", VA = "0xB62244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		public bool isGrabbed
		{
			[Token(Token = "0x6001287")]
			[Address(RVA = "0xB6224C", Offset = "0xB6224C", VA = "0xB6224C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010F")]
		public bool isMultiGrabbed
		{
			[Token(Token = "0x6001288")]
			[Address(RVA = "0xB622A8", Offset = "0xB622A8", VA = "0xB622A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		public Vector3 position
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0xB62304", Offset = "0xB62304", VA = "0xB62304")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600128A")]
			[Address(RVA = "0xB62320", Offset = "0xB62320", VA = "0xB62320")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public Quaternion rotation
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0xB6232C", Offset = "0xB6232C", VA = "0xB6232C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600128C")]
			[Address(RVA = "0xB62348", Offset = "0xB62348", VA = "0xB62348")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public Vector3 scale
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0xB62354", Offset = "0xB62354", VA = "0xB62354")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600128E")]
			[Address(RVA = "0xB62378", Offset = "0xB62378", VA = "0xB62378")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public Vector3 velocity
		{
			[Token(Token = "0x600128F")]
			[Address(RVA = "0xB623C4", Offset = "0xB623C4", VA = "0xB623C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001290")]
			[Address(RVA = "0xB623E0", Offset = "0xB623E0", VA = "0xB623E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6001291")]
			[Address(RVA = "0xB623FC", Offset = "0xB623FC", VA = "0xB623FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001292")]
			[Address(RVA = "0xB62418", Offset = "0xB62418", VA = "0xB62418")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		private Vector3 vrWorldPos
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0xB62434", Offset = "0xB62434", VA = "0xB62434")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xB62510", Offset = "0xB62510", VA = "0xB62510")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xB62568", Offset = "0xB62568", VA = "0xB62568")]
		private void Update()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xB625CC", Offset = "0xB625CC", VA = "0xB625CC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xB626C8", Offset = "0xB626C8", VA = "0xB626C8", Slot = "4")]
		public virtual int OnGrabbed(cGrabber grabber)
		{
			return default(int);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xB62804", Offset = "0xB62804", VA = "0xB62804", Slot = "5")]
		public virtual void OnReleased(cGrabber grabber)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xB628F0", Offset = "0xB628F0", VA = "0xB628F0")]
		public void OnGrabClicked(cGrabber grabber)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xB62938", Offset = "0xB62938", VA = "0xB62938", Slot = "6")]
		public virtual void SetPosition(Vector3 dest)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xB62AE4", Offset = "0xB62AE4", VA = "0xB62AE4", Slot = "7")]
		public virtual void SetRotation(Quaternion dest)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xB62B00", Offset = "0xB62B00", VA = "0xB62B00")]
		public cGrabbable()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DEDB4", Offset = "0x8DEDB4")]
	public class cGrabber : MonoBehaviour
	{
		[Token(Token = "0x2000509")]
		public class TargetClickEvent : UnityEvent<cGrabber, RaycastHit>
		{
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0xB655A8", Offset = "0xB655A8", VA = "0xB655A8")]
			public TargetClickEvent()
			{
			}
		}

		[Token(Token = "0x200050A")]
		internal class AverageVelocity
		{
			[Token(Token = "0x4001F6A")]
			private const int n = 5;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3[] velocities_;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int index_;

			[Token(Token = "0x17000291")]
			public Vector3 average
			{
				[Token(Token = "0x6001E88")]
				[Address(RVA = "0xB64730", Offset = "0xB64730", VA = "0xB64730")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0xB65374", Offset = "0xB65374", VA = "0xB65374")]
			public void Add(Vector3 velocity)
			{
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0xB65678", Offset = "0xB65678", VA = "0xB65678")]
			public AverageVelocity()
			{
			}
		}

		[Token(Token = "0x200050B")]
		internal class GrabInfo
		{
			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public cGrabber grabber;

			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public cGrabbable grabbable;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Matrix4x4 initGripToGrabbableMat;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Matrix4x4 initGrabbableToGrabMat;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public float distance;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public AverageVelocity velocity;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public bool isKinematic;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public float smoothFilter;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public float stickMove;

			[Token(Token = "0x17000292")]
			public Matrix4x4 grabMat
			{
				[Token(Token = "0x6001E8B")]
				[Address(RVA = "0xB642CC", Offset = "0xB642CC", VA = "0xB642CC")]
				get
				{
					return default(Matrix4x4);
				}
			}

			[Token(Token = "0x17000293")]
			public Matrix4x4 gripToGrabbableMat
			{
				[Token(Token = "0x6001E8C")]
				[Address(RVA = "0xB6465C", Offset = "0xB6465C", VA = "0xB6465C")]
				get
				{
					return default(Matrix4x4);
				}
			}

			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0xB649EC", Offset = "0xB649EC", VA = "0xB649EC")]
			public GrabInfo()
			{
			}
		}

		[Token(Token = "0x200050C")]
		internal class DualGrabInfo
		{
			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 primaryToSecondary;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 pos;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 center;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 scale;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion rot;

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0xB655F8", Offset = "0xB655F8", VA = "0xB655F8")]
			public DualGrabInfo()
			{
			}
		}

		[Token(Token = "0x200050D")]
		internal class CandidateInfo
		{
			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public cGrabbable grabbable;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Collider collider;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int refCount;

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0xB639A8", Offset = "0xB639A8", VA = "0xB639A8")]
			public CandidateInfo()
			{
			}
		}

		[Token(Token = "0x400135D")]
		private const float grabBeginThreshold = 0.5f;

		[Token(Token = "0x400135E")]
		private const float grabEndThreshold = 0.35f;

		[Token(Token = "0x400135F")]
		private const float minGrabSmoothDist = 0.5f;

		[Token(Token = "0x4001360")]
		private const float maxGrabSmoothDist = 2f;

		[Token(Token = "0x4001361")]
		private const float minGrabSmoothFilter = 0.15f;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8ED704", Offset = "0x8ED704")]
		public GameObject handMeshReference;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro debugText;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SOInputHandler.Hand side;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform grip;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private cTargetLine line;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8ED730", Offset = "0x8ED730")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED730", Offset = "0x8ED730")]
		[SerializeField]
		private float maxGrabDistance;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0x8ED7A8", Offset = "0x8ED7A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED7A8", Offset = "0x8ED7A8")]
		[SerializeField]
		private float stickMoveSpeed;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TargetClickEvent onTargetClicked;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabInfo grabInfo_;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private DualGrabInfo dualGrabInfo_;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<Collider, CandidateInfo> directGrabCandidates_;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit targetHit_;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float holdInput_;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float triggerInput_;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool isHoldStart_;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		private bool isHoldEnd_;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		private bool isTriggerStart_;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
		private bool isTriggerEnd_;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 preRayDirection_;

		[Token(Token = "0x17000116")]
		public bool isLeft
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0xB62BE8", Offset = "0xB62BE8", VA = "0xB62BE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000117")]
		public bool isRight
		{
			[Token(Token = "0x600129E")]
			[Address(RVA = "0xB62BF8", Offset = "0xB62BF8", VA = "0xB62BF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000118")]
		public Transform gripTransform
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0xB62C08", Offset = "0xB62C08", VA = "0xB62C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		public Vector3 gripDir
		{
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0xB62C94", Offset = "0xB62C94", VA = "0xB62C94")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700011A")]
		public Vector3 targetPos
		{
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0xB62CB4", Offset = "0xB62CB4", VA = "0xB62CB4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700011B")]
		public bool isGrabbing
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0xB62F14", Offset = "0xB62F14", VA = "0xB62F14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011C")]
		private cGrabber opposite
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0xB62F94", Offset = "0xB62F94", VA = "0xB62F94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		public bool isPrimary
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0xB6305C", Offset = "0xB6305C", VA = "0xB6305C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xB630DC", Offset = "0xB630DC", VA = "0xB630DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xB6325C", Offset = "0xB6325C", VA = "0xB6325C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xB63530", Offset = "0xB63530", VA = "0xB63530")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xB6379C", Offset = "0xB6379C", VA = "0xB6379C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xB63860", Offset = "0xB63860", VA = "0xB63860")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xB639B0", Offset = "0xB639B0", VA = "0xB639B0")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xB6356C", Offset = "0xB6356C", VA = "0xB6356C")]
		private void UpdateTransform()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xB63280", Offset = "0xB63280", VA = "0xB63280")]
		private void UpdateInput()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xB6346C", Offset = "0xB6346C", VA = "0xB6346C")]
		private void UpdateGrab()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xB6360C", Offset = "0xB6360C", VA = "0xB6360C")]
		private void UpdateTouch()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xB64084", Offset = "0xB64084", VA = "0xB64084")]
		private void Grab(cGrabbable grabbable, float distance)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xB63D60", Offset = "0xB63D60", VA = "0xB63D60")]
		private void DirectGrab()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xB63BBC", Offset = "0xB63BBC", VA = "0xB63BBC")]
		private void RemoteGrab()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xB643E4", Offset = "0xB643E4", VA = "0xB643E4")]
		private void SecondGrab(cGrabbable grabbable)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xB63FA0", Offset = "0xB63FA0", VA = "0xB63FA0")]
		public void Release()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xB64888", Offset = "0xB64888", VA = "0xB64888")]
		private void ReGrab()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xB637D0", Offset = "0xB637D0", VA = "0xB637D0")]
		private void FixedUpdateGrabbingObject()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xB64DC0", Offset = "0xB64DC0", VA = "0xB64DC0")]
		private void FixedUpdateGrabbingObjectBySingleHand()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xB64A7C", Offset = "0xB64A7C", VA = "0xB64A7C")]
		private void FixedUpdateGrabbingObjectByDualHand()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xB650F4", Offset = "0xB650F4", VA = "0xB650F4")]
		private void FixedUpdateGrabbingObjectTransform(Vector3 pos, Quaternion rot, Vector3 scale)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xB653F0", Offset = "0xB653F0", VA = "0xB653F0")]
		public void PlayHaptics()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xB6545C", Offset = "0xB6545C", VA = "0xB6545C")]
		public void EndHaptics()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xB654C0", Offset = "0xB654C0", VA = "0xB654C0")]
		public cGrabber()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xB65600", Offset = "0xB65600", VA = "0xB65600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7438", Offset = "0x8F7438")]
		private bool <get_opposite>b__43_0(cGrabber grabber)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DEE18", Offset = "0x8DEE18")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DEE18", Offset = "0x8DEE18")]
	public class cTargetLine : MonoBehaviour
	{
		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private cGrabber grabber_;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer line_;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject handReference;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxAngle;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int jointNum;

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xB656D8", Offset = "0xB656D8", VA = "0xB656D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xB65748", Offset = "0xB65748", VA = "0xB65748")]
		private void Start()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xB657B8", Offset = "0xB657B8", VA = "0xB657B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xB65BD0", Offset = "0xB65BD0", VA = "0xB65BD0")]
		public cTargetLine()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public static class MatrixExtension
	{
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xAD75AC", Offset = "0xAD75AC", VA = "0xAD75AC")]
		public static Vector3 GetRight(this Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xAD7650", Offset = "0xAD7650", VA = "0xAD7650")]
		public static Vector3 GetUp(this Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xAD76F4", Offset = "0xAD76F4", VA = "0xAD76F4")]
		public static Vector3 GetForward(this Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xAD7798", Offset = "0xAD7798", VA = "0xAD7798")]
		public static Vector3 GetPosition(this Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xAD783C", Offset = "0xAD783C", VA = "0xAD783C")]
		public static Quaternion GetRotation(this Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xAD7944", Offset = "0xAD7944", VA = "0xAD7944")]
		public static Vector3 GetScale(this Matrix4x4 m)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DEEB4", Offset = "0x8DEEB4")]
	public class SOOculusInputHandler : SOInputHandler
	{
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xAD7A54", Offset = "0xAD7A54", VA = "0xAD7A54")]
		private OVRInput.Controller GetOVRController(Hand side)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xAD7AE8", Offset = "0xAD7AE8", VA = "0xAD7AE8", Slot = "8")]
		public override bool GetAnyButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xAD7B50", Offset = "0xAD7B50", VA = "0xAD7B50", Slot = "9")]
		public override bool GetAnyButton()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xAD7BB8", Offset = "0xAD7BB8", VA = "0xAD7BB8", Slot = "4")]
		public override Vector3 GetDevicePosition(Hand side)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xAD7C30", Offset = "0xAD7C30", VA = "0xAD7C30", Slot = "5")]
		public override Quaternion GetDeviceRotation(Hand side)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xAD7CA8", Offset = "0xAD7CA8", VA = "0xAD7CA8", Slot = "6")]
		public override Vector3 GetDeviceVelocity(Hand side)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xAD7D20", Offset = "0xAD7D20", VA = "0xAD7D20", Slot = "7")]
		public override Vector3 GetDeviceAngularVelocity(Hand side)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xAD7D98", Offset = "0xAD7D98", VA = "0xAD7D98", Slot = "10")]
		public override bool GetTrigger(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xAD7E28", Offset = "0xAD7E28", VA = "0xAD7E28", Slot = "11")]
		public override bool GetTriggerDown(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xAD7EA4", Offset = "0xAD7EA4", VA = "0xAD7EA4", Slot = "12")]
		public override bool GetTriggerUp(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xAD7F20", Offset = "0xAD7F20", VA = "0xAD7F20", Slot = "13")]
		public override float GetTriggerValue(Hand side)
		{
			return default(float);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xAD7F9C", Offset = "0xAD7F9C", VA = "0xAD7F9C", Slot = "14")]
		public override bool GetTriggerTouch(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xAD8018", Offset = "0xAD8018", VA = "0xAD8018", Slot = "15")]
		public override bool GetGrabButton(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xAD80A8", Offset = "0xAD80A8", VA = "0xAD80A8", Slot = "16")]
		public override bool GetGrabButtonDown(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xAD8124", Offset = "0xAD8124", VA = "0xAD8124", Slot = "17")]
		public override bool GetGrabButtonUp(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xAD81A0", Offset = "0xAD81A0", VA = "0xAD81A0", Slot = "18")]
		public override float GetGrabButtonFloat(Hand side)
		{
			return default(float);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xAD821C", Offset = "0xAD821C", VA = "0xAD821C", Slot = "19")]
		public override bool GetGrabButtonTouch(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xAD8298", Offset = "0xAD8298", VA = "0xAD8298", Slot = "20")]
		public override bool GetFaceButton1(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xAD8314", Offset = "0xAD8314", VA = "0xAD8314", Slot = "21")]
		public override bool GetFaceButton1Down(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xAD8390", Offset = "0xAD8390", VA = "0xAD8390", Slot = "22")]
		public override bool GetFaceButton1Up(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xAD840C", Offset = "0xAD840C", VA = "0xAD840C", Slot = "23")]
		public override bool GetFaceButton1Touch(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xAD8488", Offset = "0xAD8488", VA = "0xAD8488", Slot = "24")]
		public override bool GetFaceButton2(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xAD8504", Offset = "0xAD8504", VA = "0xAD8504", Slot = "25")]
		public override bool GetFaceButton2Down(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xAD8580", Offset = "0xAD8580", VA = "0xAD8580", Slot = "26")]
		public override bool GetFaceButton2Up(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xAD85FC", Offset = "0xAD85FC", VA = "0xAD85FC", Slot = "27")]
		public override bool GetFaceButton2Touch(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xAD8678", Offset = "0xAD8678", VA = "0xAD8678", Slot = "28")]
		public override float GetThumbstickXAxis(Hand side)
		{
			return default(float);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xAD8744", Offset = "0xAD8744", VA = "0xAD8744", Slot = "29")]
		public override float GetThumbstickYAxis(Hand side)
		{
			return default(float);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xAD8810", Offset = "0xAD8810", VA = "0xAD8810", Slot = "30")]
		public override Vector2 GetThumbstickAxis(Hand side)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xAD888C", Offset = "0xAD888C", VA = "0xAD888C", Slot = "31")]
		public override bool GetThumbstick(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xAD8908", Offset = "0xAD8908", VA = "0xAD8908", Slot = "32")]
		public override bool GetThumbstickDown(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xAD8984", Offset = "0xAD8984", VA = "0xAD8984", Slot = "33")]
		public override bool GetThumbstickUp(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xAD8A00", Offset = "0xAD8A00", VA = "0xAD8A00", Slot = "34")]
		public override bool GetThumbstickTouch(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xAD8A7C", Offset = "0xAD8A7C", VA = "0xAD8A7C", Slot = "35")]
		public override bool GetMenuButton(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xAD8AF8", Offset = "0xAD8AF8", VA = "0xAD8AF8", Slot = "36")]
		public override bool GetMenuButtonDown(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xAD8B74", Offset = "0xAD8B74", VA = "0xAD8B74", Slot = "37")]
		public override bool GetMenuButtonUp(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xAD8BF0", Offset = "0xAD8BF0", VA = "0xAD8BF0", Slot = "38")]
		public override bool BeginHaptics(float freq, float amp, Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xAD8C88", Offset = "0xAD8C88", VA = "0xAD8C88", Slot = "39")]
		public override bool EndHaptics(Hand side)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xAD8D10", Offset = "0xAD8D10", VA = "0xAD8D10")]
		public SOOculusInputHandler()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DEF00", Offset = "0x8DEF00")]
	public class SOXRInputHandler : SOInputHandler
	{
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<InputDevice> devices;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputDevice leftHand;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputDevice rightHand;

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xB60BC0", Offset = "0xB60BC0", VA = "0xB60BC0")]
		public InputDevice GetDevice(Hand hand)
		{
			return default(InputDevice);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xB60C80", Offset = "0xB60C80", VA = "0xB60C80", Slot = "4")]
		public override Vector3 GetDevicePosition(Hand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xB60DB8", Offset = "0xB60DB8", VA = "0xB60DB8", Slot = "5")]
		public override Quaternion GetDeviceRotation(Hand hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xB60EF8", Offset = "0xB60EF8", VA = "0xB60EF8", Slot = "20")]
		public override bool GetFaceButton1(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xB60FE0", Offset = "0xB60FE0", VA = "0xB60FE0", Slot = "23")]
		public override bool GetFaceButton1Touch(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xB610C8", Offset = "0xB610C8", VA = "0xB610C8", Slot = "24")]
		public override bool GetFaceButton2(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xB611B0", Offset = "0xB611B0", VA = "0xB611B0", Slot = "27")]
		public override bool GetFaceButton2Touch(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xB61298", Offset = "0xB61298", VA = "0xB61298", Slot = "15")]
		public override bool GetGrabButton(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xB61380", Offset = "0xB61380", VA = "0xB61380", Slot = "18")]
		public override float GetGrabButtonFloat(Hand hand)
		{
			return default(float);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xB61388", Offset = "0xB61388", VA = "0xB61388", Slot = "19")]
		public override bool GetGrabButtonTouch(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xB61390", Offset = "0xB61390", VA = "0xB61390", Slot = "35")]
		public override bool GetMenuButton(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xB61478", Offset = "0xB61478", VA = "0xB61478", Slot = "31")]
		public override bool GetThumbstick(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xB61560", Offset = "0xB61560", VA = "0xB61560", Slot = "34")]
		public override bool GetThumbstickTouch(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xB61648", Offset = "0xB61648", VA = "0xB61648", Slot = "28")]
		public override float GetThumbstickXAxis(Hand hand)
		{
			return default(float);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xB6175C", Offset = "0xB6175C", VA = "0xB6175C", Slot = "29")]
		public override float GetThumbstickYAxis(Hand hand)
		{
			return default(float);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xB61870", Offset = "0xB61870", VA = "0xB61870", Slot = "30")]
		public override Vector2 GetThumbstickAxis(Hand hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xB618D0", Offset = "0xB618D0", VA = "0xB618D0", Slot = "10")]
		public override bool GetTrigger(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xB619B8", Offset = "0xB619B8", VA = "0xB619B8", Slot = "14")]
		public override bool GetTriggerTouch(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xB61AA0", Offset = "0xB61AA0", VA = "0xB61AA0", Slot = "13")]
		public override float GetTriggerValue(Hand hand)
		{
			return default(float);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xB61B7C", Offset = "0xB61B7C", VA = "0xB61B7C", Slot = "38")]
		public override bool BeginHaptics(float freq, float amp, Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xB61B84", Offset = "0xB61B84", VA = "0xB61B84", Slot = "39")]
		public override bool EndHaptics(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xB61B8C", Offset = "0xB61B8C", VA = "0xB61B8C", Slot = "11")]
		public override bool GetTriggerDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xB61BF0", Offset = "0xB61BF0", VA = "0xB61BF0", Slot = "12")]
		public override bool GetTriggerUp(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xB61C54", Offset = "0xB61C54", VA = "0xB61C54", Slot = "16")]
		public override bool GetGrabButtonDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xB61CB8", Offset = "0xB61CB8", VA = "0xB61CB8", Slot = "17")]
		public override bool GetGrabButtonUp(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xB61D1C", Offset = "0xB61D1C", VA = "0xB61D1C", Slot = "21")]
		public override bool GetFaceButton1Down(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xB61D80", Offset = "0xB61D80", VA = "0xB61D80", Slot = "22")]
		public override bool GetFaceButton1Up(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xB61DE4", Offset = "0xB61DE4", VA = "0xB61DE4", Slot = "25")]
		public override bool GetFaceButton2Down(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xB61E48", Offset = "0xB61E48", VA = "0xB61E48", Slot = "26")]
		public override bool GetFaceButton2Up(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xB61EAC", Offset = "0xB61EAC", VA = "0xB61EAC", Slot = "32")]
		public override bool GetThumbstickDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xB61F10", Offset = "0xB61F10", VA = "0xB61F10", Slot = "33")]
		public override bool GetThumbstickUp(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xB61F74", Offset = "0xB61F74", VA = "0xB61F74", Slot = "36")]
		public override bool GetMenuButtonDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xB61FD8", Offset = "0xB61FD8", VA = "0xB61FD8", Slot = "37")]
		public override bool GetMenuButtonUp(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xB6203C", Offset = "0xB6203C", VA = "0xB6203C", Slot = "6")]
		public override Vector3 GetDeviceVelocity(Hand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xB620A0", Offset = "0xB620A0", VA = "0xB620A0", Slot = "7")]
		public override Vector3 GetDeviceAngularVelocity(Hand hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xB62104", Offset = "0xB62104", VA = "0xB62104", Slot = "8")]
		public override bool GetAnyButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xB62168", Offset = "0xB62168", VA = "0xB62168", Slot = "9")]
		public override bool GetAnyButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xB621CC", Offset = "0xB621CC", VA = "0xB621CC")]
		public SOXRInputHandler()
		{
		}
	}
}
namespace uSignals
{
	[Token(Token = "0x20002CB")]
	public class uSignalEventTypes
	{
		[Serializable]
		[Token(Token = "0x200050E")]
		public class UnityEventBool : UnityEvent<bool>
		{
			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x15B1C04", Offset = "0x15B1C04", VA = "0x15B1C04")]
			public UnityEventBool()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200050F")]
		public class UnityEventString : UnityEvent<string>
		{
			[Token(Token = "0x6001E91")]
			[Address(RVA = "0x15B1D44", Offset = "0x15B1D44", VA = "0x15B1D44")]
			public UnityEventString()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000510")]
		public class UnityEventFloat : UnityEvent<float>
		{
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x15B1C54", Offset = "0x15B1C54", VA = "0x15B1C54")]
			public UnityEventFloat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000511")]
		public class UnityEventInt : UnityEvent<int>
		{
			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x15B1CA4", Offset = "0x15B1CA4", VA = "0x15B1CA4")]
			public UnityEventInt()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000512")]
		public class UnityEventVector2 : UnityEvent<Vector2>
		{
			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x15B1D94", Offset = "0x15B1D94", VA = "0x15B1D94")]
			public UnityEventVector2()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000513")]
		public class UnityEventVector3 : UnityEvent<Vector3>
		{
			[Token(Token = "0x6001E95")]
			[Address(RVA = "0x15B1DE4", Offset = "0x15B1DE4", VA = "0x15B1DE4")]
			public UnityEventVector3()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000514")]
		public class UnityEventObject : UnityEvent<UnityEngine.Object>
		{
			[Token(Token = "0x6001E96")]
			[Address(RVA = "0x15B1CF4", Offset = "0x15B1CF4", VA = "0x15B1CF4")]
			public UnityEventObject()
			{
			}
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x15B1BFC", Offset = "0x15B1BFC", VA = "0x15B1BFC")]
		public uSignalEventTypes()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class uSignalInvoker : MonoBehaviour
	{
		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD18", Offset = "0x8DFD18")]
		private sealed class <ExecuteAfterTime>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action task;

			[Token(Token = "0x17000294")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9A")]
				[Address(RVA = "0x15B2EF8", Offset = "0x15B2EF8", VA = "0x15B2EF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000295")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9C")]
				[Address(RVA = "0x15B2F64", Offset = "0x15B2F64", VA = "0x15B2F64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x15B2254", Offset = "0x15B2254", VA = "0x15B2254")]
			[DebuggerHidden]
			public <ExecuteAfterTime>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x15B2E40", Offset = "0x15B2E40", VA = "0x15B2E40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x15B2E44", Offset = "0x15B2E44", VA = "0x15B2E44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x15B2F00", Offset = "0x15B2F00", VA = "0x15B2F00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD28", Offset = "0x8DFD28")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalInvoker <>4__this;

			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool arg;

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x15B23E0", Offset = "0x15B23E0", VA = "0x15B23E0")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x15B2988", Offset = "0x15B2988", VA = "0x15B2988")]
			internal void <SignalRaiseBool>b__0()
			{
			}
		}

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD38", Offset = "0x8DFD38")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalInvoker <>4__this;

			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string arg;

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x15B24B0", Offset = "0x15B24B0", VA = "0x15B24B0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x15B2A34", Offset = "0x15B2A34", VA = "0x15B2A34")]
			internal void <SignalRaiseString>b__0()
			{
			}
		}

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD48", Offset = "0x8DFD48")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalInvoker <>4__this;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float arg;

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x15B2584", Offset = "0x15B2584", VA = "0x15B2584")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x15B2AE0", Offset = "0x15B2AE0", VA = "0x15B2AE0")]
			internal void <SignalRaiseFloat>b__0()
			{
			}
		}

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD58", Offset = "0x8DFD58")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalInvoker <>4__this;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int arg;

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x15B2658", Offset = "0x15B2658", VA = "0x15B2658")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x15B2B8C", Offset = "0x15B2B8C", VA = "0x15B2B8C")]
			internal void <SignalRaiseInt>b__0()
			{
			}
		}

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD68", Offset = "0x8DFD68")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalInvoker <>4__this;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 arg;

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x15B2730", Offset = "0x15B2730", VA = "0x15B2730")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x15B2C38", Offset = "0x15B2C38", VA = "0x15B2C38")]
			internal void <SignalRaiseVector2>b__0()
			{
			}
		}

		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD78", Offset = "0x8DFD78")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalInvoker <>4__this;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 arg;

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x15B2818", Offset = "0x15B2818", VA = "0x15B2818")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x15B2CE4", Offset = "0x15B2CE4", VA = "0x15B2CE4")]
			internal void <SignalRaiseVector3>b__0()
			{
			}
		}

		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD88", Offset = "0x8DFD88")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalInvoker <>4__this;

			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.Object arg;

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0x15B28E8", Offset = "0x15B28E8", VA = "0x15B28E8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x15B2D94", Offset = "0x15B2D94", VA = "0x15B2D94")]
			internal void <SignalRaiseObject>b__0()
			{
			}
		}

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uSignalDatabase database;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED830", Offset = "0x8ED830")]
		public uSignal signal;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int selectedCategory;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int selectedSignal;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public float delay;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8ED878", Offset = "0x8ED878")]
		[SerializeField]
		public string myComment;

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x15B1E34", Offset = "0x15B1E34", VA = "0x15B1E34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x15B1E38", Offset = "0x15B1E38", VA = "0x15B1E38")]
		private void GetSignal()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x15B21D0", Offset = "0x15B21D0", VA = "0x15B21D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F74A8", Offset = "0x8F74A8")]
		private IEnumerator ExecuteAfterTime(float time, Action task)
		{
			return null;
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x15B2280", Offset = "0x15B2280", VA = "0x15B2280")]
		public void SignalRaise()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x15B2310", Offset = "0x15B2310", VA = "0x15B2310")]
		public void SignalRaiseBool(bool arg)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x15B23E8", Offset = "0x15B23E8", VA = "0x15B23E8")]
		public void SignalRaiseString(string arg)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x15B24B8", Offset = "0x15B24B8", VA = "0x15B24B8")]
		public void SignalRaiseFloat(float arg)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x15B258C", Offset = "0x15B258C", VA = "0x15B258C")]
		public void SignalRaiseInt(int arg)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x15B2660", Offset = "0x15B2660", VA = "0x15B2660")]
		public void SignalRaiseVector2(Vector2 arg)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x15B2738", Offset = "0x15B2738", VA = "0x15B2738")]
		public void SignalRaiseVector3(Vector3 arg)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x15B2820", Offset = "0x15B2820", VA = "0x15B2820")]
		public void SignalRaiseObject(UnityEngine.Object arg)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x15B28F0", Offset = "0x15B28F0", VA = "0x15B28F0")]
		public uSignalInvoker()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x15B28F8", Offset = "0x15B28F8", VA = "0x15B28F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F750C", Offset = "0x8F750C")]
		private void <SignalRaise>b__9_0()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8DEF4C", Offset = "0x8DEF4C")]
	public class uSignalListener : MonoBehaviour
	{
		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD98", Offset = "0x8DFD98")]
		private sealed class <ExecuteAfterTime>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action task;

			[Token(Token = "0x17000296")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EAE")]
				[Address(RVA = "0x15B3780", Offset = "0x15B3780", VA = "0x15B3780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000297")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB0")]
				[Address(RVA = "0x15B37EC", Offset = "0x15B37EC", VA = "0x15B37EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x15B31C0", Offset = "0x15B31C0", VA = "0x15B31C0")]
			[DebuggerHidden]
			public <ExecuteAfterTime>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x15B36C8", Offset = "0x15B36C8", VA = "0x15B36C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x15B36CC", Offset = "0x15B36CC", VA = "0x15B36CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x15B3788", Offset = "0x15B3788", VA = "0x15B3788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFDA8", Offset = "0x8DFDA8")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalListener <>4__this;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool arg;

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x15B31EC", Offset = "0x15B31EC", VA = "0x15B31EC")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x15B3398", Offset = "0x15B3398", VA = "0x15B3398")]
			internal void <OnSignalRaised>b__0()
			{
			}
		}

		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFDB8", Offset = "0x8DFDB8")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalListener <>4__this;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string arg;

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x15B31F4", Offset = "0x15B31F4", VA = "0x15B31F4")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x15B340C", Offset = "0x15B340C", VA = "0x15B340C")]
			internal void <OnSignalRaised>b__0()
			{
			}
		}

		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFDC8", Offset = "0x8DFDC8")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalListener <>4__this;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float arg;

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x15B31FC", Offset = "0x15B31FC", VA = "0x15B31FC")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x15B3480", Offset = "0x15B3480", VA = "0x15B3480")]
			internal void <OnSignalRaised>b__0()
			{
			}
		}

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFDD8", Offset = "0x8DFDD8")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalListener <>4__this;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int arg;

			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0x15B3204", Offset = "0x15B3204", VA = "0x15B3204")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x15B34F4", Offset = "0x15B34F4", VA = "0x15B34F4")]
			internal void <OnSignalRaised>b__0()
			{
			}
		}

		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFDE8", Offset = "0x8DFDE8")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalListener <>4__this;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 arg;

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x15B320C", Offset = "0x15B320C", VA = "0x15B320C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x15B3568", Offset = "0x15B3568", VA = "0x15B3568")]
			internal void <OnSignalRaised>b__0()
			{
			}
		}

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFDF8", Offset = "0x8DFDF8")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalListener <>4__this;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 arg;

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x15B3214", Offset = "0x15B3214", VA = "0x15B3214")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x15B35DC", Offset = "0x15B35DC", VA = "0x15B35DC")]
			internal void <OnSignalRaised>b__0()
			{
			}
		}

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE08", Offset = "0x8DFE08")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uSignalListener <>4__this;

			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.Object arg;

			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x15B321C", Offset = "0x15B321C", VA = "0x15B321C")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x15B3654", Offset = "0x15B3654", VA = "0x15B3654")]
			internal void <OnSignalRaised>b__0()
			{
			}
		}

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uSignalDatabase database;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED8B0", Offset = "0x8ED8B0")]
		public uSignal signal;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8ED8E8", Offset = "0x8ED8E8")]
		public string myComment;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED920", Offset = "0x8ED920")]
		public UnityEvent signalEvent;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ED958", Offset = "0x8ED958")]
		public bool showSignalEvent;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public uSignalEventTypes.UnityEventBool boolEvent;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool showBoolEvent;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public uSignalEventTypes.UnityEventString stringEvent;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool showStringEvent;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uSignalEventTypes.UnityEventFloat floatEvent;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool showFloatEvent;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public uSignalEventTypes.UnityEventInt intEvent;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool showIntEvent;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public uSignalEventTypes.UnityEventVector2 vector2Event;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool showVector2Event;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public uSignalEventTypes.UnityEventVector3 vector3Event;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool showVector3Event;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public uSignalEventTypes.UnityEventObject objectEvent;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool showObjectEvent;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int selectedCategory;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int selectedSignal;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x15B2F6C", Offset = "0x15B2F6C", VA = "0x15B2F6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x15B313C", Offset = "0x15B313C", VA = "0x15B313C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F751C", Offset = "0x8F751C")]
		private IEnumerator ExecuteAfterTime(float time, Action task)
		{
			return null;
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x15B1390", Offset = "0x15B1390", VA = "0x15B1390")]
		public void OnSignalRaised(float delay = 0f)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x15B1420", Offset = "0x15B1420", VA = "0x15B1420")]
		public void OnSignalRaised(bool arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x15B14F0", Offset = "0x15B14F0", VA = "0x15B14F0")]
		public void OnSignalRaised(string arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x15B15B8", Offset = "0x15B15B8", VA = "0x15B15B8")]
		public void OnSignalRaised(float arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x15B1684", Offset = "0x15B1684", VA = "0x15B1684")]
		public void OnSignalRaised(int arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x15B1750", Offset = "0x15B1750", VA = "0x15B1750")]
		public void OnSignalRaised(Vector2 arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x15B1828", Offset = "0x15B1828", VA = "0x15B1828")]
		public void OnSignalRaised(Vector3 arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x15B1908", Offset = "0x15B1908", VA = "0x15B1908")]
		public void OnSignalRaised(UnityEngine.Object arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x15B3224", Offset = "0x15B3224", VA = "0x15B3224")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x15B32D0", Offset = "0x15B32D0", VA = "0x15B32D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x15B337C", Offset = "0x15B337C", VA = "0x15B337C")]
		public uSignalListener()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x15B3384", Offset = "0x15B3384", VA = "0x15B3384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7580", Offset = "0x8F7580")]
		private void <OnSignalRaised>b__23_0()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class uBundle : ScriptableObject
	{
		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<uBundleEntry> Signals;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool Show;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Comment;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool hideInDatabase;

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x15B05D8", Offset = "0x15B05D8", VA = "0x15B05D8")]
		public void Raise(params object[] args)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x15B1320", Offset = "0x15B1320", VA = "0x15B1320")]
		public uBundle()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class uSignal : ScriptableObject
	{
		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> gameobjectNames;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<uSignalListener> listeners;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8ED9C0", Offset = "0x8ED9C0")]
		public string Comment;

		[NonSerialized]
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool showListener;

		[NonSerialized]
		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool hideInDatabase;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool printLog;

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x15AF4C8", Offset = "0x15AF4C8", VA = "0x15AF4C8")]
		public void Raise(float delay = 0f)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x15B0AD8", Offset = "0x15B0AD8", VA = "0x15B0AD8")]
		public void Raise(bool arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x15B0C08", Offset = "0x15B0C08", VA = "0x15B0C08")]
		public void Raise(string arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x15B0D34", Offset = "0x15B0D34", VA = "0x15B0D34")]
		public void Raise(float arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x15B0E58", Offset = "0x15B0E58", VA = "0x15B0E58")]
		public void Raise(int arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x15B0F84", Offset = "0x15B0F84", VA = "0x15B0F84")]
		public void Raise(Vector2 arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x15B10B8", Offset = "0x15B10B8", VA = "0x15B10B8")]
		public void Raise(Vector3 arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x15B11F4", Offset = "0x15B11F4", VA = "0x15B11F4")]
		public void Raise(UnityEngine.Object arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x15AF5E4", Offset = "0x15AF5E4", VA = "0x15AF5E4")]
		public void RaiseBool(bool arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x15AF5EC", Offset = "0x15AF5EC", VA = "0x15AF5EC")]
		public void RaiseString(string arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x15AF5F0", Offset = "0x15AF5F0", VA = "0x15AF5F0")]
		public void RaiseFloat(float arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x15AF5F4", Offset = "0x15AF5F4", VA = "0x15AF5F4")]
		public void RaiseInt(int arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x15AF5F8", Offset = "0x15AF5F8", VA = "0x15AF5F8")]
		public void RaiseVector2(Vector2 arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x15AF5FC", Offset = "0x15AF5FC", VA = "0x15AF5FC")]
		public void RaiseVector3(Vector3 arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x15B19D0", Offset = "0x15B19D0", VA = "0x15B19D0")]
		public void RaiseObject(UnityEngine.Object arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x15B19D4", Offset = "0x15B19D4", VA = "0x15B19D4")]
		public void RegisterListener(uSignalListener listener, string name)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x15B1A8C", Offset = "0x15B1A8C", VA = "0x15B1A8C")]
		public void DeregisterListener(uSignalListener listener, string name)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x15B1B44", Offset = "0x15B1B44", VA = "0x15B1B44")]
		public uSignal()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class uSignalSettings : ScriptableObject
	{
		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static string PluginVersion;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string uSignalVersion;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public string uBundleVersion;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public string uListenerVersion;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public string uDebugVersion;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public string uExportVersion;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public uSignalThemes currentTheme;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool debugSignalsAll;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool debugDatabase;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool showAllEditorsAtOnce;

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x15B597C", Offset = "0x15B597C", VA = "0x15B597C")]
		public uSignalSettings()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public enum uSignalThemes
	{
		[Token(Token = "0x40013AE")]
		LIGHT,
		[Token(Token = "0x40013AF")]
		DARK
	}
	[Token(Token = "0x20002D2")]
	public static class uSignalRaiser
	{
		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uSignalDatabase sigDatabase;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static uBundleDatabase bunDatabase;

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x15B37F4", Offset = "0x15B37F4", VA = "0x15B37F4")]
		static uSignalRaiser()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x15B3A44", Offset = "0x15B3A44", VA = "0x15B3A44")]
		public static uSignal GetSignal(string category, string name)
		{
			return null;
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x15B3B10", Offset = "0x15B3B10", VA = "0x15B3B10")]
		public static void RaiseSignal(string category, string name, float delay = 0f)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x15B3C3C", Offset = "0x15B3C3C", VA = "0x15B3C3C")]
		public static void RaiseSignal(string category, string name, bool arg, float delay = 0f)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x15B3D70", Offset = "0x15B3D70", VA = "0x15B3D70")]
		public static void RaiseSignal(string category, string name, string arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x15B3EA4", Offset = "0x15B3EA4", VA = "0x15B3EA4")]
		public static void RaiseSignal(string category, string name, float arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x15B3FD8", Offset = "0x15B3FD8", VA = "0x15B3FD8")]
		public static void RaiseSignal(string category, string name, int arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x15B410C", Offset = "0x15B410C", VA = "0x15B410C")]
		public static void RaiseSignal(string category, string name, Vector2 arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x15B4254", Offset = "0x15B4254", VA = "0x15B4254")]
		public static void RaiseSignal(string category, string name, Vector3 arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x15B43A4", Offset = "0x15B43A4", VA = "0x15B43A4")]
		public static void RaiseSignal(string category, string name, UnityEngine.Object arg, float delay = 0f)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x15B44D8", Offset = "0x15B44D8", VA = "0x15B44D8")]
		public static uBundle GetBundle(string category, string name)
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x15B45A4", Offset = "0x15B45A4", VA = "0x15B45A4")]
		public static void RaiseBundle(string category, string name, params object[] args)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x15B4D8C", Offset = "0x15B4D8C", VA = "0x15B4D8C")]
		public static void RaiseBundle(uBundle ubundle, params object[] args)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x15B54B4", Offset = "0x15B54B4", VA = "0x15B54B4")]
		public static void RaiseBundle(params uBundleEntry[] uBundleEntrys)
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public static class uSignalStatics
	{
		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static uSignalDatabase database;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static uBundleDatabase databaseBundle;

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x15B5A38", Offset = "0x15B5A38", VA = "0x15B5A38")]
		static uSignalStatics()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x15B2008", Offset = "0x15B2008", VA = "0x15B2008")]
		public static uSignalDatabase GetDatabase()
		{
			return null;
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x15B3878", Offset = "0x15B3878", VA = "0x15B3878")]
		public static uBundleDatabase GetBundleDatabase()
		{
			return null;
		}
	}
}
namespace uSignals.Database
{
	[Token(Token = "0x20002D4")]
	public class uBundleDatabase : ScriptableObject
	{
		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE18", Offset = "0x8DFE18")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string category;

			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string bundle;

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x15AFA88", Offset = "0x15AFA88", VA = "0x15AFA88")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x15AFB00", Offset = "0x15AFB00", VA = "0x15AFB00")]
			internal bool <GetBundle>b__0(uBundleDatabaseCategory c)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x15AFB28", Offset = "0x15AFB28", VA = "0x15AFB28")]
			internal bool <GetBundle>b__1(uBundle x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<uBundleDatabaseCategory> Categories;

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x15AF71C", Offset = "0x15AF71C", VA = "0x15AF71C")]
		public uBundle GetBundle(string category, string bundle)
		{
			return null;
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x15AFA90", Offset = "0x15AFA90", VA = "0x15AFA90")]
		public uBundleDatabase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D5")]
	public class uBundleDatabaseCategory
	{
		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<uBundle> Bundles;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool Show;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Vector2 scrollPositionSignals;

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x15AFB64", Offset = "0x15AFB64", VA = "0x15AFB64")]
		public uBundleDatabaseCategory()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D6")]
	public class uBundleEntry
	{
		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Category;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object Arg;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Delay;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uSignal Signal;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool hideInDatabase;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public int selectedCategory;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int selectedSignal;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int selectedType;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool boolParameter;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public string stringParameter;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float floatParameter;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public int intParameter;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Vector2 vector2Parameter;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 vector3Parameter;

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x15AFD2C", Offset = "0x15AFD2C", VA = "0x15AFD2C")]
		public uBundleEntry(string category, string name, [Optional] object arg, float delay = 0f)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D7")]
	public class uBundleDatabaseJson
	{
		[Serializable]
		[Token(Token = "0x2000526")]
		public class uBundleCategoryJson
		{
			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<uBundleJson> Bundles;

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0x15AFC44", Offset = "0x15AFC44", VA = "0x15AFC44")]
			public uBundleCategoryJson()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000527")]
		public class uBundleJson
		{
			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Comment;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<uSignalJson> Signals;

			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0x15AFCB4", Offset = "0x15AFCB4", VA = "0x15AFCB4")]
			public uBundleJson()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000528")]
		public class uSignalJson
		{
			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Category;

			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string Comment;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int SelectedCategory;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int SelectedSignal;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float Delay;

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0x15AFD24", Offset = "0x15AFD24", VA = "0x15AFD24")]
			public uSignalJson()
			{
			}
		}

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<uBundleCategoryJson> Categories;

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x15AFBD4", Offset = "0x15AFBD4", VA = "0x15AFBD4")]
		public uBundleDatabaseJson()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class uSignalDatabase : ScriptableObject
	{
		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE28", Offset = "0x8DFE28")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string category;

			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string signal;

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x15B03A4", Offset = "0x15B03A4", VA = "0x15B03A4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x15B041C", Offset = "0x15B041C", VA = "0x15B041C")]
			internal bool <GetSignal>b__0(uSignalDatabaseCategory c)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x15B0444", Offset = "0x15B0444", VA = "0x15B0444")]
			internal bool <GetSignal>b__1(uSignal x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<uSignalDatabaseCategory> Categories;

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x15AFE18", Offset = "0x15AFE18", VA = "0x15AFE18")]
		public uSignal GetSignal(int categoryIndex, int signalIndex)
		{
			return null;
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x15B0038", Offset = "0x15B0038", VA = "0x15B0038")]
		public uSignal GetSignal(string category, string signal)
		{
			return null;
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x15B03AC", Offset = "0x15B03AC", VA = "0x15B03AC")]
		public uSignalDatabase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D9")]
	public class uSignalDatabaseCategory
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<uSignal> Signals;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool Show;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Vector2 scrollPositionSignals;

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x15B0480", Offset = "0x15B0480", VA = "0x15B0480")]
		public uSignalDatabaseCategory()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DA")]
	public class uSignalDatabaseJson
	{
		[Serializable]
		[Token(Token = "0x200052A")]
		public class uSignalCategoryJson
		{
			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<uSignalJson> Signals;

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x15B0560", Offset = "0x15B0560", VA = "0x15B0560")]
			public uSignalCategoryJson()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200052B")]
		public class uSignalJson
		{
			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Comment;

			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x15B05D0", Offset = "0x15B05D0", VA = "0x15B05D0")]
			public uSignalJson()
			{
			}
		}

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<uSignalCategoryJson> Categories;

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x15B04F0", Offset = "0x15B04F0", VA = "0x15B04F0")]
		public uSignalDatabaseJson()
		{
		}
	}
}
namespace FlowWeaver
{
	[Token(Token = "0x20002DB")]
	public static class Audio
	{
		[Token(Token = "0x200052C")]
		private enum AudioBusType
		{
			[Token(Token = "0x4001FB7")]
			Master,
			[Token(Token = "0x4001FB8")]
			Music,
			[Token(Token = "0x4001FB9")]
			Sfx,
			[Token(Token = "0x4001FBA")]
			VO_2D,
			[Token(Token = "0x4001FBB")]
			VO_3D,
			[Token(Token = "0x4001FBC")]
			Ambience,
			[Token(Token = "0x4001FBD")]
			UI
		}

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<EventInstance, AudioHandle> handleLookup;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<EventInstance, AudioHandle> playingHandles;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<AudioBusType, Bus> audioBuses;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool initialized;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string masterBus;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string musicBus;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string sfxBus;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string vo2DBus;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string vo3DBus;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string uiBus;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string ambienceBus;

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xBE4F44", Offset = "0xBE4F44", VA = "0xBE4F44")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xBE4FDC", Offset = "0xBE4FDC", VA = "0xBE4FDC")]
		private static void InitializeBusses()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xBE51EC", Offset = "0xBE51EC", VA = "0xBE51EC")]
		public static void UpdateVolumes()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xBE5430", Offset = "0xBE5430", VA = "0xBE5430")]
		public static void SetGlobalParameter(string paramName, float value)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xBE54C4", Offset = "0xBE54C4", VA = "0xBE54C4")]
		public static AudioHandle CreateAndPlay(AudioRefDef audioRef, [Optional] Transform transform, [Optional] Rigidbody rigidbody, [Optional] string parameterName, float parameterValue = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xBE5590", Offset = "0xBE5590", VA = "0xBE5590")]
		private static AudioHandle CreateHandle(AudioRefDef audioRef, [Optional] Transform transform, [Optional] Rigidbody rigidbody, [Optional] string parameterName, float parameterValue = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xBE5F84", Offset = "0xBE5F84", VA = "0xBE5F84")]
		private static void AddNewAudioHandle(AudioHandle handle)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xBE587C", Offset = "0xBE587C", VA = "0xBE587C")]
		public static void Play(AudioHandle handle)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xBE6060", Offset = "0xBE6060", VA = "0xBE6060")]
		private static void AddPlayingHandle(AudioHandle handle)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xBE4ED8", Offset = "0xBE4ED8", VA = "0xBE4ED8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F7590", Offset = "0x8F7590")]
		private static RESULT AudioCompleteCallback(EVENT_CALLBACK_TYPE type, EventInstance _event, IntPtr parameterPtr)
		{
			return default(RESULT);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xBE613C", Offset = "0xBE613C", VA = "0xBE613C")]
		private static void RemovePlayingHandle(EventInstance _event)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xBE6314", Offset = "0xBE6314", VA = "0xBE6314")]
		public static void ReleaseAllHandles()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xBE64B8", Offset = "0xBE64B8", VA = "0xBE64B8")]
		private static void Release(AudioHandle handle)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xBE64D4", Offset = "0xBE64D4", VA = "0xBE64D4")]
		public static void PauseAllCurrentPlayingAudio()
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xBE66D8", Offset = "0xBE66D8", VA = "0xBE66D8")]
		public static void ResumeAllCurrentPlayingAudio()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xBE68B8", Offset = "0xBE68B8", VA = "0xBE68B8")]
		public static void Stop(AudioHandle handle, bool canFade = true)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xBE68D4", Offset = "0xBE68D4", VA = "0xBE68D4")]
		public static void Pause(AudioHandle handle)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xBE68F4", Offset = "0xBE68F4", VA = "0xBE68F4")]
		public static void Resume(AudioHandle handle)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xBE6914", Offset = "0xBE6914", VA = "0xBE6914")]
		public static void SetMasterVolume(float volume)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xBE69C4", Offset = "0xBE69C4", VA = "0xBE69C4")]
		public static void ResetMasterVolume()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class AudioHandle
	{
		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioRefDef def;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventInstance instance;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform transform;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rigidbody;

		[Token(Token = "0x1700011E")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0xBE6614", Offset = "0xBE6614", VA = "0xBE6614")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011F")]
		private PLAYBACK_STATE State
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0xBE6BB0", Offset = "0xBE6BB0", VA = "0xBE6BB0")]
			get
			{
				return default(PLAYBACK_STATE);
			}
		}

		[Token(Token = "0x17000120")]
		public bool IsPaused
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0xBE6824", Offset = "0xBE6824", VA = "0xBE6824")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xBE5A9C", Offset = "0xBE5A9C", VA = "0xBE5A9C")]
		public AudioHandle(AudioRefDef audioRef, [Optional] Transform transform, [Optional] Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xBE5E6C", Offset = "0xBE5E6C", VA = "0xBE5E6C")]
		public void SetParameter(string paramName, float val)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xBE6BE0", Offset = "0xBE6BE0", VA = "0xBE6BE0")]
		public void Stop(bool canFade = true)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xBE6674", Offset = "0xBE6674", VA = "0xBE6674")]
		public void Pause()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xBE6854", Offset = "0xBE6854", VA = "0xBE6854")]
		public void Play()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public abstract class AudioHook : MonoBehaviour
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AudioRefDef audioRefDef;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected bool playOnEnable;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		protected bool stopOnDisable;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string parameterName;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected float parameterValue;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Transform source;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Rigidbody rigidbodySource;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected AudioHandle handle;

		[Token(Token = "0x17000121")]
		public string EventName
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0xBE6C74", Offset = "0xBE6C74", VA = "0xBE6C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xBE6C94", Offset = "0xBE6C94", VA = "0xBE6C94")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xBE6CAC", Offset = "0xBE6CAC", VA = "0xBE6CAC", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xBE6CB8", Offset = "0xBE6CB8", VA = "0xBE6CB8", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xBE6CD0", Offset = "0xBE6CD0", VA = "0xBE6CD0", Slot = "6")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xBE6CE4", Offset = "0xBE6CE4", VA = "0xBE6CE4", Slot = "7")]
		public virtual void Pause()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xBE6CF4", Offset = "0xBE6CF4", VA = "0xBE6CF4", Slot = "8")]
		public virtual void Resume()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xBE6D08", Offset = "0xBE6D08", VA = "0xBE6D08", Slot = "9")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xBE6D14", Offset = "0xBE6D14", VA = "0xBE6D14", Slot = "10")]
		protected virtual void PlayWithHandle()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xBE6D18", Offset = "0xBE6D18", VA = "0xBE6D18")]
		protected void Play(AudioRefDef audioRefDef, [Optional] Transform transform, [Optional] Rigidbody rigidbody, [Optional] string parameterName, float parameterValue = 0f)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xBE6DF4", Offset = "0xBE6DF4", VA = "0xBE6DF4", Slot = "11")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xBE6E04", Offset = "0xBE6E04", VA = "0xBE6E04")]
		public void SetParameter(string paramName, float val)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xBE6E14", Offset = "0xBE6E14", VA = "0xBE6E14")]
		protected AudioHook()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DEF84", Offset = "0x8DEF84")]
	public class AudioRefDef : ScriptableObject
	{
		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string niceName;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[EventRef]
		[SerializeField]
		private string fmodEvent;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<AudioParameter> defaultParameters;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool playOnce;

		[Token(Token = "0x17000122")]
		public string NiceName
		{
			[Token(Token = "0x600138A")]
			[Address(RVA = "0xBE6E24", Offset = "0xBE6E24", VA = "0xBE6E24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		public string FMODEvent
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0xBE6E2C", Offset = "0xBE6E2C", VA = "0xBE6E2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		public bool PlayOnce
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0xBE6E34", Offset = "0xBE6E34", VA = "0xBE6E34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000125")]
		public IEnumerable<AudioParameter> DefaultParameters
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0xBE6E3C", Offset = "0xBE6E3C", VA = "0xBE6E3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xBE6E44", Offset = "0xBE6E44", VA = "0xBE6E44")]
		public AudioRefDef()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DF")]
	public class AudioParameter
	{
		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string parameterName;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xBE6E1C", Offset = "0xBE6E1C", VA = "0xBE6E1C")]
		public AudioParameter()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class Dialogue : MonoBehaviour
	{
		[Token(Token = "0x200052D")]
		private enum OverlappingBehavior
		{
			[Token(Token = "0x4001FBF")]
			QuietSelf,
			[Token(Token = "0x4001FC0")]
			StopCurrentPlaying,
			[Token(Token = "0x4001FC1")]
			NeverInterrupt
		}

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SFX_3DHook[] lines;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent OnDialogueFinished;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool playOnStart;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool stopOnDisable;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool closeCompassWhenStart;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[SerializeField]
		private bool lockCompassWhilePlaying;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool fireOnce;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private bool alwaysFinishAfterPlay;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private OverlappingBehavior overlappingBehavior;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string dialogueId;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action OnTimelineFinishedCallback;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dialogue currentPlayingDialogue;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int currentLine;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isPlayingDialogue;

		[Token(Token = "0x17000126")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001390")]
			[Address(RVA = "0xC09A74", Offset = "0xC09A74", VA = "0xC09A74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xC09A7C", Offset = "0xC09A7C", VA = "0xC09A7C")]
		public bool IsPlayed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xC09B90", Offset = "0xC09B90", VA = "0xC09B90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xC09BF8", Offset = "0xC09BF8", VA = "0xC09BF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xC09FB8", Offset = "0xC09FB8", VA = "0xC09FB8")]
		public static void SkipCurrentLineOfActiveDialogue()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xC0A12C", Offset = "0xC0A12C", VA = "0xC0A12C")]
		public static bool IsBusy()
		{
			return default(bool);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xC0A0C4", Offset = "0xC0A0C4", VA = "0xC0A0C4")]
		private void SkipCurrentLine()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xC0A208", Offset = "0xC0A208", VA = "0xC0A208")]
		private void Start()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xC0A218", Offset = "0xC0A218", VA = "0xC0A218")]
		public void StartDialogue()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xC0A584", Offset = "0xC0A584", VA = "0xC0A584")]
		public bool IsGoodToPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xC0A940", Offset = "0xC0A940", VA = "0xC0A940")]
		private void AddSubtitles()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xC0A8B8", Offset = "0xC0A8B8", VA = "0xC0A8B8")]
		public void StopDialogue()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xC0A830", Offset = "0xC0A830", VA = "0xC0A830")]
		private void SkipDialogue()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xC0AB04", Offset = "0xC0AB04", VA = "0xC0AB04")]
		private void Update()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xC09E04", Offset = "0xC09E04", VA = "0xC09E04")]
		private void Finish(bool markAsPlayed = true)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xC0AF18", Offset = "0xC0AF18", VA = "0xC0AF18")]
		private void MarkVoAsPlayed()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xC0B090", Offset = "0xC0B090", VA = "0xC0B090")]
		public Dialogue()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class DialogueList : MonoBehaviour
	{
		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Dialogue> dialogues;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool playOnce;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<int> preferDialogues;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool played;

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xC0B0A8", Offset = "0xC0B0A8", VA = "0xC0B0A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xC0B128", Offset = "0xC0B128", VA = "0xC0B128")]
		public void PlayRandomDialogue()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xC0B3B0", Offset = "0xC0B3B0", VA = "0xC0B3B0")]
		public DialogueList()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class GenericAudio : Static<GenericAudio>
	{
		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DialogueList objectOffEdgeVOs;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DialogueList idleVOs;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float idleInterval;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DialogueList quantumChangedVOs;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timer;

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xC17B40", Offset = "0xC17B40", VA = "0xC17B40")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xC0C630", Offset = "0xC0C630", VA = "0xC0C630")]
		public void ResetTimer()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xC17BFC", Offset = "0xC17BFC", VA = "0xC17BFC")]
		public void PlayObjectOffEdgeVO()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xC17C14", Offset = "0xC17C14", VA = "0xC17C14")]
		public GenericAudio()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DEFD8", Offset = "0x8DEFD8")]
	public class PlaySfxOnCollide : MonoBehaviour
	{
		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioRefDef audioRefDef;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float minimumCollisionVelocity;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioHandle audioHandle;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<string, float> materialMap;

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xC742F4", Offset = "0xC742F4", VA = "0xC742F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xC7434C", Offset = "0xC7434C", VA = "0xC7434C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xC744EC", Offset = "0xC744EC", VA = "0xC744EC")]
		private float GetMaterialParam(string tag)
		{
			return default(float);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xC74588", Offset = "0xC74588", VA = "0xC74588")]
		public PlaySfxOnCollide()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class SetAudioGlobalParam : MonoBehaviour
	{
		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool setOnEnable;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string paramName;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float value;

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xB4D0A8", Offset = "0xB4D0A8", VA = "0xB4D0A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xB4D0B8", Offset = "0xB4D0B8", VA = "0xB4D0B8")]
		public void SetParameter()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xB4D134", Offset = "0xB4D134", VA = "0xB4D134")]
		public SetAudioGlobalParam()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class SFX_2DHook : AudioHook
	{
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xB48524", Offset = "0xB48524", VA = "0xB48524", Slot = "10")]
		protected override void PlayWithHandle()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xB4866C", Offset = "0xB4866C", VA = "0xB4866C")]
		public SFX_2DHook()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class SFX_3DHook : AudioHook
	{
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xB48674", Offset = "0xB48674", VA = "0xB48674", Slot = "10")]
		protected override void PlayWithHandle()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xB487BC", Offset = "0xB487BC", VA = "0xB487BC")]
		public SFX_3DHook()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class Bootstrapper
	{
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xBE834C", Offset = "0xBE834C", VA = "0xBE834C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8F75F4", Offset = "0x8F75F4")]
		public static void Execute()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xBE8460", Offset = "0xBE8460", VA = "0xBE8460")]
		public Bootstrapper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E8")]
	public class Command
	{
		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CommandType commandType;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int id;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int g_ID;

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xBEA6A8", Offset = "0xBEA6A8", VA = "0xBEA6A8")]
		protected Command(CommandType commandType)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xBEA724", Offset = "0xBEA724", VA = "0xBEA724", Slot = "4")]
		public virtual Command CloneCommand()
		{
			return null;
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xBEA788", Offset = "0xBEA788", VA = "0xBEA788", Slot = "5")]
		public virtual string CommandLabel()
		{
			return null;
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xBEA7D0", Offset = "0xBEA7D0", VA = "0xBEA7D0", Slot = "6")]
		public virtual string CommandSecondaryLabel()
		{
			return null;
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xBEA818", Offset = "0xBEA818", VA = "0xBEA818", Slot = "7")]
		public virtual Sprite CommandImage()
		{
			return null;
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xBEA820", Offset = "0xBEA820", VA = "0xBEA820", Slot = "8")]
		public virtual void Execute()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xBEA824", Offset = "0xBEA824", VA = "0xBEA824", Slot = "9")]
		public virtual int SortOrder()
		{
			return default(int);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xBEA82C", Offset = "0xBEA82C", VA = "0xBEA82C")]
		public static int SortDescending(Command commandA, Command commandB)
		{
			return default(int);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xBEA884", Offset = "0xBEA884", VA = "0xBEA884")]
		public static int SortAscending(Command commandA, Command commandB)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002E9")]
	public enum CommandType
	{
		[Token(Token = "0x400140F")]
		None,
		[Token(Token = "0x4001410")]
		QuestProgress,
		[Token(Token = "0x4001411")]
		QuestReset,
		[Token(Token = "0x4001412")]
		QuestFail,
		[Token(Token = "0x4001413")]
		QuestForceComplete
	}
	[Token(Token = "0x20002EA")]
	public static class Commander
	{
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<Command> commands;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Command> executedCommands;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Queue<Command> stagedCommands;

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xBEA8D8", Offset = "0xBEA8D8", VA = "0xBEA8D8")]
		public static void Init()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xBEA9A4", Offset = "0xBEA9A4", VA = "0xBEA9A4")]
		public static void AddNewCommand(Command command)
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xBEAA10", Offset = "0xBEAA10", VA = "0xBEAA10")]
		public static void ExecuteCommands()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EB")]
	public class QuestFailCommand : Command
	{
		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int defId;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QuestInst questRef;

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xC7AD58", Offset = "0xC7AD58", VA = "0xC7AD58")]
		private void Init()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xC7AEB4", Offset = "0xC7AEB4", VA = "0xC7AEB4")]
		public QuestFailCommand(QuestInst quest)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xC7AEF4", Offset = "0xC7AEF4", VA = "0xC7AEF4", Slot = "5")]
		public override string CommandLabel()
		{
			return null;
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xC7B094", Offset = "0xC7B094", VA = "0xC7B094", Slot = "8")]
		public override void Execute()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xC7B298", Offset = "0xC7B298", VA = "0xC7B298", Slot = "4")]
		public override Command CloneCommand()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002EC")]
	public class QuestForceCompleteCommand : Command
	{
		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int defId;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QuestInst questRef;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xC7B304", Offset = "0xC7B304", VA = "0xC7B304")]
		private void Init()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xC7B36C", Offset = "0xC7B36C", VA = "0xC7B36C")]
		public QuestForceCompleteCommand(QuestInst quest)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xC7B3AC", Offset = "0xC7B3AC", VA = "0xC7B3AC", Slot = "5")]
		public override string CommandLabel()
		{
			return null;
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xC7B41C", Offset = "0xC7B41C", VA = "0xC7B41C", Slot = "8")]
		public override void Execute()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xC7B808", Offset = "0xC7B808", VA = "0xC7B808", Slot = "4")]
		public override Command CloneCommand()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002ED")]
	public class QuestProgressCommand : Command
	{
		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int defId;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool degress;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QuestInst questRef;

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xC7D9AC", Offset = "0xC7D9AC", VA = "0xC7D9AC")]
		private void Init()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xC7DA14", Offset = "0xC7DA14", VA = "0xC7DA14")]
		public QuestProgressCommand(QuestInst quest, bool degress = false)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xC7DA68", Offset = "0xC7DA68", VA = "0xC7DA68", Slot = "5")]
		public override string CommandLabel()
		{
			return null;
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xC7DAF0", Offset = "0xC7DAF0", VA = "0xC7DAF0", Slot = "8")]
		public override void Execute()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xC7DB30", Offset = "0xC7DB30", VA = "0xC7DB30", Slot = "4")]
		public override Command CloneCommand()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002EE")]
	public class QuestResetCommand : Command
	{
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int defId;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool force;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QuestInst questRef;

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xC7DD30", Offset = "0xC7DD30", VA = "0xC7DD30")]
		private void Init()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xC7DD98", Offset = "0xC7DD98", VA = "0xC7DD98")]
		public QuestResetCommand(QuestInst quest, bool force)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xC7DDEC", Offset = "0xC7DDEC", VA = "0xC7DDEC", Slot = "5")]
		public override string CommandLabel()
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xC7DE5C", Offset = "0xC7DE5C", VA = "0xC7DE5C", Slot = "8")]
		public override void Execute()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xC7DF94", Offset = "0xC7DF94", VA = "0xC7DF94", Slot = "4")]
		public override Command CloneCommand()
		{
			return null;
		}
	}
	[Token(Token = "0x20002EF")]
	public class CrossFlowObject : MonoBehaviour
	{
		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ObjectIdReference]
		private int objectId;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool destroyOnLoad;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhysicGrabale grabale;

		[Token(Token = "0x17000127")]
		public bool IsBeingHeld
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xC06E30", Offset = "0xC06E30", VA = "0xC06E30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000128")]
		public int ObjectID
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xC06F78", Offset = "0xC06F78", VA = "0xC06F78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xC06F80", Offset = "0xC06F80", VA = "0xC06F80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xC07010", Offset = "0xC07010", VA = "0xC07010")]
		public void StartFlowTransition(UnityEngine.Object arg)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xC07114", Offset = "0xC07114", VA = "0xC07114")]
		private void SaveTransform()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xC077DC", Offset = "0xC077DC", VA = "0xC077DC")]
		public void MoveObjectBackToDefaultFlow()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xC07948", Offset = "0xC07948", VA = "0xC07948")]
		public CrossFlowObject()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class CrossFlowObjectManager : Static<CrossFlowObjectManager>
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ObjectsDatabase database;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ObjectsData objectsData;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ObjectDataContainer dataContainer;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, Dictionary<int, GameObject>> objectsLookUp;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool initialized;

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xC07950", Offset = "0xC07950", VA = "0xC07950", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xC079A8", Offset = "0xC079A8", VA = "0xC079A8")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xC07CAC", Offset = "0xC07CAC", VA = "0xC07CAC")]
		public void StartFlowTransition(UnityEngine.Object arg)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xC07D7C", Offset = "0xC07D7C", VA = "0xC07D7C")]
		private void DisableObjectsInFlow(int flowId)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xC07F58", Offset = "0xC07F58", VA = "0xC07F58")]
		public void OnReachNewFlow(int flowId)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xC07FE8", Offset = "0xC07FE8", VA = "0xC07FE8")]
		private void UpdateObjectsInFlow(int flowId)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xC082A8", Offset = "0xC082A8", VA = "0xC082A8")]
		private void UpdateObjectTransform(GameObject target, ObjectDataInst dataInst)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xC07208", Offset = "0xC07208", VA = "0xC07208")]
		public void MoveObjectBetweenFlows(int objectId, int currentFlow, int newFlow)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xC07868", Offset = "0xC07868", VA = "0xC07868")]
		public void MoveObjectBackToDefaultFlow(int objectId)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xC08374", Offset = "0xC08374", VA = "0xC08374")]
		public void DestroyObject(int objId)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xC08498", Offset = "0xC08498", VA = "0xC08498")]
		public GameObject GetObject(int objectId)
		{
			return null;
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xC08840", Offset = "0xC08840", VA = "0xC08840")]
		public int GetObjectCurrentFlow(int objectId)
		{
			return default(int);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xC08A00", Offset = "0xC08A00", VA = "0xC08A00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xC08A04", Offset = "0xC08A04", VA = "0xC08A04")]
		private void ClearData()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xC08C9C", Offset = "0xC08C9C", VA = "0xC08C9C")]
		public CrossFlowObjectManager()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class EnableCrossFlowObject : MonoBehaviour
	{
		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ObjectIdReference]
		private int objectId;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent OnEnabled;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnDisabled;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xC0E68C", Offset = "0xC0E68C", VA = "0xC0E68C")]
		public void Enable()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xC0E744", Offset = "0xC0E744", VA = "0xC0E744")]
		public void Disable()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xC0E7FC", Offset = "0xC0E7FC", VA = "0xC0E7FC")]
		public EnableCrossFlowObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F2")]
	public class ObjectDataContainer
	{
		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ObjectDataContainer Instance;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectsDatabase database;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ObjectDataInst> ObjectDataInsts;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<int, ObjectDataInst> dataInstLookUp;

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xC6E324", Offset = "0xC6E324", VA = "0xC6E324")]
		public void Initialize(ObjectsDatabase newDatabase)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xC6E880", Offset = "0xC6E880", VA = "0xC6E880")]
		public void SaveTransform(int objectID, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xC6E960", Offset = "0xC6E960", VA = "0xC6E960")]
		public GameObject GetObjectPrefab(int objectId)
		{
			return null;
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xC6E9DC", Offset = "0xC6E9DC", VA = "0xC6E9DC")]
		public string GetObjectName(int id)
		{
			return null;
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xC6EA50", Offset = "0xC6EA50", VA = "0xC6EA50")]
		public int GetObjectCurrentFlow(int id)
		{
			return default(int);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xC6EAC4", Offset = "0xC6EAC4", VA = "0xC6EAC4")]
		public void SetObjectCurrentFlow(int id, int newFlow)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xC6EB3C", Offset = "0xC6EB3C", VA = "0xC6EB3C")]
		public ObjectDataContainer()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class ObjectDataDef : ScriptableObject
	{
		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int id;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string niceName;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[StateInfoIdReference]
		[SerializeField]
		private int defaultFlowStateID;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject objPrefab;

		[Token(Token = "0x17000129")]
		public int ID
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xC6EBAC", Offset = "0xC6EBAC", VA = "0xC6EBAC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xC6EBB4", Offset = "0xC6EBB4", VA = "0xC6EBB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public string NiceName
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xC6EBBC", Offset = "0xC6EBBC", VA = "0xC6EBBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xC6EBC4", Offset = "0xC6EBC4", VA = "0xC6EBC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public int DefaultFlowId
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xC6EBCC", Offset = "0xC6EBCC", VA = "0xC6EBCC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700012C")]
		public GameObject ObjPrefab
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xC6EBD4", Offset = "0xC6EBD4", VA = "0xC6EBD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xC6EBDC", Offset = "0xC6EBDC", VA = "0xC6EBDC")]
		public ObjectDataDef()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F4")]
	public class ObjectDataInst
	{
		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string niceName;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int currentFlow;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 currentPosition;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Quaternion currentRotation;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool isActive;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool transformUpdated;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int defId;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ObjectDataDef dataDef;

		[Token(Token = "0x1700012D")]
		public ObjectDataDef DataDef
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xC6E6F8", Offset = "0xC6E6F8", VA = "0xC6E6F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		public int CurrentFlow
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xC6EBE4", Offset = "0xC6EBE4", VA = "0xC6EBE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xC6EBEC", Offset = "0xC6EBEC", VA = "0xC6EBEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public bool IsActive
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xC6EBF4", Offset = "0xC6EBF4", VA = "0xC6EBF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xC6EBFC", Offset = "0xC6EBFC", VA = "0xC6EBFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public Vector3 CurrentPos
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0xC6EC08", Offset = "0xC6EC08", VA = "0xC6EC08")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001403")]
			[Address(RVA = "0xC6EC14", Offset = "0xC6EC14", VA = "0xC6EC14")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public Quaternion CurrentRot
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0xC6EC20", Offset = "0xC6EC20", VA = "0xC6EC20")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xC6EC2C", Offset = "0xC6EC2C", VA = "0xC6EC2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public bool TransformUpdated
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xC6EC38", Offset = "0xC6EC38", VA = "0xC6EC38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000133")]
		public string NiceName
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xC6EC40", Offset = "0xC6EC40", VA = "0xC6EC40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xC6EC48", Offset = "0xC6EC48", VA = "0xC6EC48")]
		public ObjectDataInst()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xC6E828", Offset = "0xC6E828", VA = "0xC6E828")]
		public ObjectDataInst(ObjectDataDef dataDef)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xC6E944", Offset = "0xC6E944", VA = "0xC6E944")]
		public void SaveTransform(Vector3 pos, Quaternion rot)
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class ObjectDataSerializer
	{
		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ObjectsData> saveFiles;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, bool> fileNames;

		[Token(Token = "0x400143E")]
		private const string SAVE_LOCATION = "/Saves/Objects/";

		[Token(Token = "0x400143F")]
		private const string FILE_EXTENSION = ".bss";

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string saveFilePath;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string lastloadPath;

		[Token(Token = "0x17000134")]
		public static List<ObjectsData> SaveFiles
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0xC6F0C8", Offset = "0xC6F0C8", VA = "0xC6F0C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xC6EC58", Offset = "0xC6EC58", VA = "0xC6EC58")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xC6F118", Offset = "0xC6F118", VA = "0xC6F118")]
		private static string SaveNameToFullPath(string saveName)
		{
			return null;
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xC6F180", Offset = "0xC6F180", VA = "0xC6F180")]
		private static ObjectsData BinaryDeserialize(string path)
		{
			return null;
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xC6F27C", Offset = "0xC6F27C", VA = "0xC6F27C")]
		private static void BinarySerializeFile(ObjectsData data)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xC6F070", Offset = "0xC6F070", VA = "0xC6F070")]
		private static ObjectsData JSONDeserialize(string path)
		{
			return null;
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xC6F34C", Offset = "0xC6F34C", VA = "0xC6F34C")]
		private static bool JSONSerialize(string filename, ObjectsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xC6F400", Offset = "0xC6F400", VA = "0xC6F400")]
		public static ObjectsData Save(ObjectsData data)
		{
			return null;
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xC6F418", Offset = "0xC6F418", VA = "0xC6F418")]
		public static ObjectsData SaveAs(ObjectsData data, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xC6F650", Offset = "0xC6F650", VA = "0xC6F650")]
		public static string GenerateUniqueFilename()
		{
			return null;
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xC6F788", Offset = "0xC6F788", VA = "0xC6F788")]
		public static void Delete(ObjectsData data)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xC6F858", Offset = "0xC6F858", VA = "0xC6F858")]
		public static bool TryGetSaveFile(string fileName, out ObjectsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xC6F970", Offset = "0xC6F970", VA = "0xC6F970")]
		public ObjectDataSerializer()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class ObjectDefSettings
	{
		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string databaseFolder;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string databasePath;

		[Token(Token = "0x17000135")]
		public static string DatabasePath
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0xC6F978", Offset = "0xC6F978", VA = "0xC6F978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		public static string DatabaseFolder
		{
			[Token(Token = "0x6001419")]
			[Address(RVA = "0xC6F9E0", Offset = "0xC6F9E0", VA = "0xC6F9E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xC6FA48", Offset = "0xC6FA48", VA = "0xC6FA48")]
		public ObjectDefSettings()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8DF03C", Offset = "0x8DF03C")]
	public class ObjectIdReference : PropertyAttribute
	{
		[Token(Token = "0x600141C")]
		[Address(RVA = "0xC6FAC4", Offset = "0xC6FAC4", VA = "0xC6FAC4")]
		public ObjectIdReference()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F8")]
	public class ObjectRule : Rule
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[ObjectIdReference]
		private int objectId;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[StateInfoIdReference]
		private int inScene;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<StateRule> objectState;

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xC6FACC", Offset = "0xC6FACC", VA = "0xC6FACC", Slot = "4")]
		public override bool RuleMet()
		{
			return default(bool);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xC6FB8C", Offset = "0xC6FB8C", VA = "0xC6FB8C")]
		public ObjectRule()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F9")]
	public class ObjectsData
	{
		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string saveName;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectDataContainer dataContainer;

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xC6FB9C", Offset = "0xC6FB9C", VA = "0xC6FB9C")]
		public void Initialize(ObjectsDatabase database)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xC6FC20", Offset = "0xC6FC20", VA = "0xC6FC20")]
		public ObjectsData()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class ObjectsDatabase : ScriptableObject
	{
		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ObjectDataDef> objectDefs;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string defaultSave;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectsDatabase instance;

		[Token(Token = "0x17000137")]
		public static ObjectsDatabase Instance
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0xC6FC84", Offset = "0xC6FC84", VA = "0xC6FC84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xC6FCD4", Offset = "0xC6FCD4", VA = "0xC6FCD4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xC6FD28", Offset = "0xC6FD28", VA = "0xC6FD28")]
		public ObjectDataDef TryGetObjectDef(int id)
		{
			return null;
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xC6FE44", Offset = "0xC6FE44", VA = "0xC6FE44")]
		public ObjectsDatabase()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class DreamThought : Dragable
	{
		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EDF98", Offset = "0x8EDF98")]
		[SerializeField]
		private DreamThoughtDef dreamThoughtDef;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Dialogue dreamThoughtVO;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SFX_2DHook lookOverHereSFX;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SFX_2DHook onPlayedSFX;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private HighlightController highlightController;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private UnityEvent OnUnlocked;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private UnityEvent OnSpawned;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private UnityEvent OnDisableVisual;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private UnityEvent OnFinishedLerp;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private UnityEvent OnDreamThoughtVOFinished;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject visual;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject dreamAppearEffect;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Transform dreamscapeTransform;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isPlayingLookSFX;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 startPos;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float endLookSFXTimer;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float startTime;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 lerpStartPos;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float journeyLength;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float distCovered;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float fractionOfJourney;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 dreamThoughtDestination;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool isLerping;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private StateInst dreamthoughtStateInst;

		[Token(Token = "0x17000138")]
		private StateInst DreamthoughtStateInst
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0xC0D2B0", Offset = "0xC0D2B0", VA = "0xC0D2B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private bool IsInteractable
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xC0D330", Offset = "0xC0D330", VA = "0xC0D330")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013A")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xC0D358", Offset = "0xC0D358", VA = "0xC0D358")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xC0D378", Offset = "0xC0D378", VA = "0xC0D378", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xC0D3A0", Offset = "0xC0D3A0", VA = "0xC0D3A0")]
		private void ToggleDreamThoughtVisual()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xC0D7D4", Offset = "0xC0D7D4", VA = "0xC0D7D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xC0D890", Offset = "0xC0D890", VA = "0xC0D890")]
		private void MarkDreamThoughtAsPlayed()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xC0D960", Offset = "0xC0D960", VA = "0xC0D960")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xC0DA1C", Offset = "0xC0DA1C", VA = "0xC0DA1C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xC0DA84", Offset = "0xC0DA84", VA = "0xC0DA84", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xC0DE3C", Offset = "0xC0DE3C", VA = "0xC0DE3C", Slot = "9")]
		protected override void DragCompleted()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xC0DF44", Offset = "0xC0DF44", VA = "0xC0DF44")]
		private void ActivateDreamThought()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xC0DFA8", Offset = "0xC0DFA8", VA = "0xC0DFA8")]
		public void UnlockDreamThought()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xC0D46C", Offset = "0xC0D46C", VA = "0xC0D46C")]
		private void SpawnDreamThought()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xC0E0C4", Offset = "0xC0E0C4", VA = "0xC0E0C4")]
		private void SetupDreamThoughtLerp()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xC0DC94", Offset = "0xC0DC94", VA = "0xC0DC94")]
		private void LerpFinished()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xC0E1F4", Offset = "0xC0E1F4", VA = "0xC0E1F4", Slot = "11")]
		protected override bool IsDraggable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xC0E238", Offset = "0xC0E238", VA = "0xC0E238")]
		public void StopDreamThought()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xC0E250", Offset = "0xC0E250", VA = "0xC0E250")]
		public DreamThought()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DF050", Offset = "0x8DF050")]
	public class DreamThoughtDef : ScriptableObject
	{
		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[StateInfoIdReference]
		[SerializeField]
		private int stateId;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8EE0DC", Offset = "0x8EE0DC")]
		private string desc;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float endLookSoundAfterSeconds;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float dreamThoughtLerpSpeed;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve effectCurve;

		[Token(Token = "0x1700013B")]
		public int ID
		{
			[Token(Token = "0x6001438")]
			[Address(RVA = "0xC0E260", Offset = "0xC0E260", VA = "0xC0E260")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013C")]
		public float EndLookSoundAfterSeconds
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0xC0E268", Offset = "0xC0E268", VA = "0xC0E268")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013D")]
		public float DreamThoughtLerpSpeed
		{
			[Token(Token = "0x600143A")]
			[Address(RVA = "0xC0E270", Offset = "0xC0E270", VA = "0xC0E270")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013E")]
		public AnimationCurve EffectCurve
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0xC0E278", Offset = "0xC0E278", VA = "0xC0E278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xC0E280", Offset = "0xC0E280", VA = "0xC0E280")]
		public DreamThoughtDef()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class DreamThoughtsManager : Static<DreamThoughtsManager>
	{
		[Serializable]
		[Token(Token = "0x200052E")]
		private struct DreamThoughtData
		{
			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[StateInfoIdReference]
			[SerializeField]
			private int dreamThoughtId;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			private DreamThought dreamThought;

			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StateInst stateInst;

			[Token(Token = "0x17000298")]
			public int DreamThoughtID
			{
				[Token(Token = "0x6001ECA")]
				[Address(RVA = "0x999CF8", Offset = "0x999CF8", VA = "0x999CF8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000299")]
			public DreamThought DreamThought
			{
				[Token(Token = "0x6001ECB")]
				[Address(RVA = "0x999D00", Offset = "0x999D00", VA = "0x999D00")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029A")]
			public int DreamThoughtValue
			{
				[Token(Token = "0x6001ECC")]
				[Address(RVA = "0x999D08", Offset = "0x999D08", VA = "0x999D08")]
				get
				{
					return default(int);
				}
			}
		}

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<DreamThoughtData> dreamThoughts;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DialogueList dreathoughtSpawnVO;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private uSignal PulledDreamThoughtSignal;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private uSignal RefreshCompassSignal;

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xC0E294", Offset = "0xC0E294", VA = "0xC0E294")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xC0E298", Offset = "0xC0E298", VA = "0xC0E298")]
		public void RefreshDreamThoughts()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xC0DF24", Offset = "0xC0DF24", VA = "0xC0DF24")]
		public void PulledDreamThought()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xC0D940", Offset = "0xC0D940", VA = "0xC0D940")]
		public void DreamThoughtFinished()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xC0E4DC", Offset = "0xC0E4DC", VA = "0xC0E4DC")]
		public void OnReachNewFlow()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xC0E604", Offset = "0xC0E604", VA = "0xC0E604")]
		public DreamThoughtsManager()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public enum DreamThoughtState
	{
		[Token(Token = "0x400146E")]
		Locked,
		[Token(Token = "0x400146F")]
		ToBeSpawned,
		[Token(Token = "0x4001470")]
		Spawned,
		[Token(Token = "0x4001471")]
		Played
	}
	[Token(Token = "0x20002FF")]
	public class DayNightSystem : MonoBehaviour
	{
		[Token(Token = "0x200052F")]
		private enum MaterialWorldTime
		{
			[Token(Token = "0x4001FC6")]
			Day,
			[Token(Token = "0x4001FC7")]
			Night
		}

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int materialWorldTimeState;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material daySkybox;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material nightSkybox;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject dayRays;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent OnDay;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent OnNight;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StateInst materialWorldTimeStateInst;

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xC0946C", Offset = "0xC0946C", VA = "0xC0946C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xC094D8", Offset = "0xC094D8", VA = "0xC094D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xC094DC", Offset = "0xC094DC", VA = "0xC094DC")]
		private void SetTime()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xC09510", Offset = "0xC09510", VA = "0xC09510")]
		private void SetNight()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xC095D4", Offset = "0xC095D4", VA = "0xC095D4")]
		private void SetDay()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xC09698", Offset = "0xC09698", VA = "0xC09698")]
		private void SetDayNightPrefabs(bool isDay)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xC0973C", Offset = "0xC0973C", VA = "0xC0973C")]
		public DayNightSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000300")]
	public class FwLocalSettings
	{
		[Token(Token = "0x2000530")]
		public enum SupportedLanguage
		{
			[Token(Token = "0x4001FC9")]
			ENG = 1,
			[Token(Token = "0x4001FCA")]
			FR,
			[Token(Token = "0x4001FCB")]
			SP,
			[Token(Token = "0x4001FCC")]
			DE,
			[Token(Token = "0x4001FCD")]
			KO,
			[Token(Token = "0x4001FCE")]
			JP,
			[Token(Token = "0x4001FCF")]
			ZH
		}

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FwLocalSettings Instance;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float masterVolume;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float dialogVolume;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sfxVolume;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float musicVolume;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ambianceVolume;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float hapticIntensity;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SupportedLanguage language;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool subtitleEnabled;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float subtitlesDepth;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float subtitlesHeight;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float subtitlesSize;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action OnLanguageChanged;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action OnToggledSubtitle;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action OnSubtitleDepthChanged;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action OnSubtitleHeightChanged;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action OnSubtitleSizeChanged;

		[Token(Token = "0x1700013F")]
		public SupportedLanguage Language
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0xC133A4", Offset = "0xC133A4", VA = "0xC133A4")]
			get
			{
				return default(SupportedLanguage);
			}
			[Token(Token = "0x600144B")]
			[Address(RVA = "0xC133AC", Offset = "0xC133AC", VA = "0xC133AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public bool SubtitleEnabled
		{
			[Token(Token = "0x600144C")]
			[Address(RVA = "0xC13470", Offset = "0xC13470", VA = "0xC13470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600144D")]
			[Address(RVA = "0xC13478", Offset = "0xC13478", VA = "0xC13478")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public float SubtitlesDepth
		{
			[Token(Token = "0x600144E")]
			[Address(RVA = "0xC13498", Offset = "0xC13498", VA = "0xC13498")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600144F")]
			[Address(RVA = "0xC134A0", Offset = "0xC134A0", VA = "0xC134A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public float SubtitlesHeight
		{
			[Token(Token = "0x6001450")]
			[Address(RVA = "0xC134BC", Offset = "0xC134BC", VA = "0xC134BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001451")]
			[Address(RVA = "0xC134C4", Offset = "0xC134C4", VA = "0xC134C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public float SubtitlesSize
		{
			[Token(Token = "0x6001452")]
			[Address(RVA = "0xC134E0", Offset = "0xC134E0", VA = "0xC134E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001453")]
			[Address(RVA = "0xC134E8", Offset = "0xC134E8", VA = "0xC134E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public float MasterVolume
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0xC13504", Offset = "0xC13504", VA = "0xC13504")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001455")]
			[Address(RVA = "0xC1350C", Offset = "0xC1350C", VA = "0xC1350C")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public float MusicVolume
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0xC13514", Offset = "0xC13514", VA = "0xC13514")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001457")]
			[Address(RVA = "0xC1351C", Offset = "0xC1351C", VA = "0xC1351C")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public float SfxVolume
		{
			[Token(Token = "0x6001458")]
			[Address(RVA = "0xC13524", Offset = "0xC13524", VA = "0xC13524")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001459")]
			[Address(RVA = "0xC1352C", Offset = "0xC1352C", VA = "0xC1352C")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public float AmbianceVolume
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0xC13534", Offset = "0xC13534", VA = "0xC13534")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600145B")]
			[Address(RVA = "0xC1353C", Offset = "0xC1353C", VA = "0xC1353C")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public float DialogVolume
		{
			[Token(Token = "0x600145C")]
			[Address(RVA = "0xC13544", Offset = "0xC13544", VA = "0xC13544")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600145D")]
			[Address(RVA = "0xC1354C", Offset = "0xC1354C", VA = "0xC1354C")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public float Haptic
		{
			[Token(Token = "0x600145E")]
			[Address(RVA = "0xC13554", Offset = "0xC13554", VA = "0xC13554")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600145F")]
			[Address(RVA = "0xC1355C", Offset = "0xC1355C", VA = "0xC1355C")]
			set
			{
			}
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xC13564", Offset = "0xC13564", VA = "0xC13564")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xC135B8", Offset = "0xC135B8", VA = "0xC135B8")]
		public static FwLocalSettings GetLocalSettingsFile()
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xC136D0", Offset = "0xC136D0", VA = "0xC136D0")]
		public static void SaveSettings()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xC1369C", Offset = "0xC1369C", VA = "0xC1369C")]
		public FwLocalSettings()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class GameManager : Singleton<GameManager>
	{
		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform trackingSpace;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputHandlerDef inputHandlerDef;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QuestsDatabase questsDatabase;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LegacyDataMap legacyDataMap;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject saveIcon;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook saveSuccessSFX;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool ProcessCommands;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameData currentGameData;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FwLocalSettings settings;

		[Token(Token = "0x1700014A")]
		public GameData CurrentGameData
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0xC13820", Offset = "0xC13820", VA = "0xC13820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xC13828", Offset = "0xC13828", VA = "0xC13828", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xC13C54", Offset = "0xC13C54", VA = "0xC13C54")]
		public void NewGame()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xC13D7C", Offset = "0xC13D7C", VA = "0xC13D7C")]
		public void ContinueGame()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xC13E7C", Offset = "0xC13E7C", VA = "0xC13E7C")]
		public void ExitToMainMenu()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xC13F5C", Offset = "0xC13F5C", VA = "0xC13F5C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xC13BC0", Offset = "0xC13BC0", VA = "0xC13BC0")]
		public void SetMenuState()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xC09D70", Offset = "0xC09D70", VA = "0xC09D70")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8F7608", Offset = "0x8F7608")]
		public void SetInGameState()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xC14070", Offset = "0xC14070", VA = "0xC14070")]
		public void SetLoadingState()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xC0AA74", Offset = "0xC0AA74", VA = "0xC0AA74")]
		public void SetLockCompassState()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xC1410C", Offset = "0xC1410C", VA = "0xC1410C")]
		public void FinishedLoading()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xC14110", Offset = "0xC14110", VA = "0xC14110")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xC0AD80", Offset = "0xC0AD80", VA = "0xC0AD80")]
		public bool IsInGame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xC14170", Offset = "0xC14170", VA = "0xC14170")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xC0C458", Offset = "0xC0C458", VA = "0xC0C458")]
		public Vector3 TransformDevicePosToWorldSpace(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xC14930", Offset = "0xC14930", VA = "0xC14930")]
		public Quaternion TransformDeviceRotToWorldSpace(Quaternion pos)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xC14A60", Offset = "0xC14A60", VA = "0xC14A60")]
		public void SaveGame()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xC14AF0", Offset = "0xC14AF0", VA = "0xC14AF0")]
		private void HideSavingIcon()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xC14B10", Offset = "0xC14B10", VA = "0xC14B10")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class GazeSystem : MonoBehaviour
	{
		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask mask;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera cameraRig;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float rayCastDistance;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private RaycastHit target;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastHit previousTarget;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GazeTarget gazeTarget;

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xC161B8", Offset = "0xC161B8", VA = "0xC161B8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xC162A0", Offset = "0xC162A0", VA = "0xC162A0")]
		private void RaycastCheck()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xC16480", Offset = "0xC16480", VA = "0xC16480")]
		private void HitCollider()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xC16664", Offset = "0xC16664", VA = "0xC16664")]
		private bool IsValidTarget(GazeTarget target)
		{
			return default(bool);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xC16814", Offset = "0xC16814", VA = "0xC16814")]
		public GazeSystem()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class StandingGhostSystem : MonoBehaviour
	{
		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform minX;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform maxX;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform minZ;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform maxZ;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float fadeSpeed;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshPro standingGhostText;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer fadeSphereRend;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float volumeReduction;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool standingGhostOn;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool isFading;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float startVolume;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Transparency;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera mCamera;

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xB55104", Offset = "0xB55104", VA = "0xB55104")]
		private void Start()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xB55154", Offset = "0xB55154", VA = "0xB55154")]
		private void Update()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xB55238", Offset = "0xB55238", VA = "0xB55238")]
		private void HandleFade()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xB55504", Offset = "0xB55504", VA = "0xB55504")]
		private void TurnOnStandingGhost()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xB55670", Offset = "0xB55670", VA = "0xB55670")]
		private void TurnOffStandingGhost()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xB553E0", Offset = "0xB553E0", VA = "0xB553E0")]
		private bool IsPlayerOutOfBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xB55728", Offset = "0xB55728", VA = "0xB55728")]
		public StandingGhostSystem()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class SystemsManager : Singleton<SystemsManager>
	{
		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject inGameSystemsPrefab;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject inGameSystems;

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xB570FC", Offset = "0xB570FC", VA = "0xB570FC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xB5714C", Offset = "0xB5714C", VA = "0xB5714C")]
		public void InstantiateInGameSystems()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xB4B388", Offset = "0xB4B388", VA = "0xB4B388")]
		public void DeleteInGameSystems()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xB57240", Offset = "0xB57240", VA = "0xB57240")]
		public SystemsManager()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class DisableHandsCommand : UpdateHandsCommand
	{
		[Token(Token = "0x6001489")]
		[Address(RVA = "0xC0B50C", Offset = "0xC0B50C", VA = "0xC0B50C", Slot = "4")]
		public override void Execute()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xC0B5E0", Offset = "0xC0B5E0", VA = "0xC0B5E0", Slot = "5")]
		public override void Undo()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xC0B5E4", Offset = "0xC0B5E4", VA = "0xC0B5E4")]
		public DisableHandsCommand(HandVisualStateMachine handVisualStateMachine)
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class EnableHandsCommand : UpdateHandsCommand
	{
		[Token(Token = "0x600148C")]
		[Address(RVA = "0xC0E804", Offset = "0xC0E804", VA = "0xC0E804", Slot = "4")]
		public override void Execute()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xC0E8D0", Offset = "0xC0E8D0", VA = "0xC0E8D0", Slot = "5")]
		public override void Undo()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xC0E8D4", Offset = "0xC0E8D4", VA = "0xC0E8D4")]
		public EnableHandsCommand(HandVisualStateMachine handVisualStateMachine)
		{
		}
	}
	[Token(Token = "0x2000307")]
	public abstract class UpdateHandsCommand
	{
		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected HandVisualStateMachine handVisualStateMachine;

		[Token(Token = "0x600148F")]
		public abstract void Execute();

		[Token(Token = "0x6001490")]
		public abstract void Undo();

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xB5B9FC", Offset = "0xB5B9FC", VA = "0xB5B9FC")]
		public UpdateHandsCommand(HandVisualStateMachine handVisualStateMachine)
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class HandsCommander
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Queue<UpdateHandsCommand> toBeExecutedCommands;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<UpdateHandsCommand> executedCommands;

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xC19AE8", Offset = "0xC19AE8", VA = "0xC19AE8")]
		public void Execute()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xC1993C", Offset = "0xC1993C", VA = "0xC1993C")]
		public void AddCommand(UpdateHandsCommand newCommand)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xC19BC8", Offset = "0xC19BC8", VA = "0xC19BC8")]
		public void UndoLastCommand()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xC1975C", Offset = "0xC1975C", VA = "0xC1975C")]
		public HandsCommander()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class HandsController : Static<HandsController>
	{
		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject leftHandVisual;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject rightHandVisual;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject leftControllerVisual;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject rightControllerVisual;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshPro rightControllerText;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<Inputs.InputSide, HandState> handStates;

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xC19C44", Offset = "0xC19C44", VA = "0xC19C44")]
		private void Start()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xC19D20", Offset = "0xC19D20", VA = "0xC19D20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xC0C20C", Offset = "0xC0C20C", VA = "0xC0C20C")]
		public bool IsHandFree(Inputs.InputSide inputSide)
		{
			return default(bool);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xC0C5B4", Offset = "0xC0C5B4", VA = "0xC0C5B4")]
		public void SetHandState(Inputs.InputSide inputSide, HandState.ActionState state)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xC19E24", Offset = "0xC19E24", VA = "0xC19E24")]
		public void ShowControllerModels()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xC19F28", Offset = "0xC19F28", VA = "0xC19F28")]
		public void ShowHandModels()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xC1A02C", Offset = "0xC1A02C", VA = "0xC1A02C")]
		public void SetText(string newText)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xC1A048", Offset = "0xC1A048", VA = "0xC1A048")]
		public HandsController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030A")]
	public class HandState
	{
		[Token(Token = "0x2000531")]
		public enum ActionState
		{
			[Token(Token = "0x4001FD1")]
			Free,
			[Token(Token = "0x4001FD2")]
			Grabbing,
			[Token(Token = "0x4001FD3")]
			Dragging
		}

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HandsCommander handsCommander;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandVisualStateMachine visualStateMachine;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActionState currentActionState;

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xC19688", Offset = "0xC19688", VA = "0xC19688")]
		public HandState(GameObject handVisual, GameObject controllerVisual)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xC1982C", Offset = "0xC1982C", VA = "0xC1982C")]
		public void SetActionState(ActionState newState)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xC19834", Offset = "0xC19834", VA = "0xC19834")]
		private void UpdateVisual(ActionState newState)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xC199A4", Offset = "0xC199A4", VA = "0xC199A4")]
		public bool IsFree()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xC199B4", Offset = "0xC199B4", VA = "0xC199B4")]
		public void ShowControllers()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xC19A28", Offset = "0xC19A28", VA = "0xC19A28")]
		public void ShowHands()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xC19A9C", Offset = "0xC19A9C", VA = "0xC19A9C")]
		public void Tick()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class ControllersModel : HandVisualState
	{
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xBEB2C4", Offset = "0xBEB2C4", VA = "0xBEB2C4", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xBEB3AC", Offset = "0xBEB3AC", VA = "0xBEB3AC", Slot = "5")]
		public override void End()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xBEB3B0", Offset = "0xBEB3B0", VA = "0xBEB3B0", Slot = "6")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xBEB3FC", Offset = "0xBEB3FC", VA = "0xBEB3FC")]
		public ControllersModel()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class HandsModel : HandVisualState
	{
		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xC1A0C0", Offset = "0xC1A0C0", VA = "0xC1A0C0", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xC1A1A8", Offset = "0xC1A1A8", VA = "0xC1A1A8", Slot = "5")]
		public override void End()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xC1A1AC", Offset = "0xC1A1AC", VA = "0xC1A1AC", Slot = "6")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xC0E8C8", Offset = "0xC0E8C8", VA = "0xC0E8C8")]
		public HandsModel()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public abstract class HandVisualState
	{
		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GameObject handVisual;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected GameObject controllerVisual;

		[Token(Token = "0x60014AD")]
		public abstract void Start();

		[Token(Token = "0x60014AE")]
		public abstract void End();

		[Token(Token = "0x60014AF")]
		public abstract void Refresh();

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xC19BA8", Offset = "0xC19BA8", VA = "0xC19BA8")]
		public void Initialize(GameObject handVisual, GameObject controllerVisual)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xC19BB0", Offset = "0xC19BB0", VA = "0xC19BB0")]
		protected HandVisualState()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class HandVisualStateMachine
	{
		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HandVisualState currentState;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HandVisualState previousState;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject handVisual;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject controllerVisual;

		[Token(Token = "0x1700014B")]
		public HandVisualState CurrentState
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xC19BB8", Offset = "0xC19BB8", VA = "0xC19BB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		public HandVisualState PreviousState
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xC19BC0", Offset = "0xC19BC0", VA = "0xC19BC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xC197F4", Offset = "0xC197F4", VA = "0xC197F4")]
		public HandVisualStateMachine(GameObject handVisual, GameObject controllerVisual)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xC0B580", Offset = "0xC0B580", VA = "0xC0B580")]
		public void SetState(HandVisualState newState)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xC19B88", Offset = "0xC19B88", VA = "0xC19B88")]
		public void Run()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class NoModel : HandVisualState
	{
		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xC6E1E4", Offset = "0xC6E1E4", VA = "0xC6E1E4", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xC6E2CC", Offset = "0xC6E2CC", VA = "0xC6E2CC", Slot = "5")]
		public override void End()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xC6E2D0", Offset = "0xC6E2D0", VA = "0xC6E2D0", Slot = "6")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xC6E31C", Offset = "0xC6E31C", VA = "0xC6E31C")]
		public NoModel()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class GameplayInputBinder : InputBinder
	{
		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputAction LeftHandSpellPrime;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InputAction RightHandSpellPrime;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InputAction LeftHandGrab;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputAction RightHandGrab;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InputAction Mediation;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InputAction Compass;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InputAction SkipVO;

		[Token(Token = "0x1700014D")]
		public Vector3 HeadsetPos
		{
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xC14DEC", Offset = "0xC14DEC", VA = "0xC14DEC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xC14E30", Offset = "0xC14E30", VA = "0xC14E30")]
		public GameplayInputBinder(InputHandlerDef def)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xC14F80", Offset = "0xC14F80", VA = "0xC14F80", Slot = "5")]
		public override void Disable()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC15264", Offset = "0xC15264", VA = "0xC15264")]
		public bool IsGrabButtonPressed(Inputs.InputSide inputSide)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xC1529C", Offset = "0xC1529C", VA = "0xC1529C")]
		public Vector2 GetThumbstick(Inputs.InputSide inputSide)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xC152DC", Offset = "0xC152DC", VA = "0xC152DC")]
		public Quaternion GetHandRotation(Inputs.InputSide inputSide)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xC15320", Offset = "0xC15320", VA = "0xC15320")]
		public Vector3 GetHandAngularVelocity(Inputs.InputSide inputSide)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xC15360", Offset = "0xC15360", VA = "0xC15360")]
		public Vector3 GetHandVelocity(Inputs.InputSide inputSide)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xC153A0", Offset = "0xC153A0", VA = "0xC153A0")]
		public Vector3 GetHandPosition(Inputs.InputSide inputSide)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xC153E0", Offset = "0xC153E0", VA = "0xC153E0", Slot = "6")]
		public override void Process()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xC15454", Offset = "0xC15454", VA = "0xC15454")]
		private void ProcessCompassAction()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xC15BC4", Offset = "0xC15BC4", VA = "0xC15BC4")]
		private void ProcessCompassLeft()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xC15D40", Offset = "0xC15D40", VA = "0xC15D40")]
		private void ProcessCompassRight()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xC15478", Offset = "0xC15478", VA = "0xC15478")]
		private void ProcessMeditationAction()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xC15EB0", Offset = "0xC15EB0", VA = "0xC15EB0")]
		private void ProcessMeditationLeft()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xC16034", Offset = "0xC16034", VA = "0xC16034")]
		private void ProcessMeditationRight()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xC1549C", Offset = "0xC1549C", VA = "0xC1549C")]
		private void ProcessLeftHandGrab()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xC1560C", Offset = "0xC1560C", VA = "0xC1560C")]
		private void ProcessRightHandGrab()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xC1577C", Offset = "0xC1577C", VA = "0xC1577C")]
		private void ProcessLeftHandSpellPrime()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xC158E8", Offset = "0xC158E8", VA = "0xC158E8")]
		private void ProcessRightHandSpellPrime()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xC15A54", Offset = "0xC15A54", VA = "0xC15A54")]
		private void ProcessSkipVO()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class Haptics : MonoBehaviour
	{
		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE38", Offset = "0x8DFE38")]
		private sealed class <Vibrate>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Inputs.InputSide hand;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float frequency;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float amplitude;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x1700029B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED0")]
				[Address(RVA = "0xC1AF84", Offset = "0xC1AF84", VA = "0xC1AF84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED2")]
				[Address(RVA = "0xC1AFF0", Offset = "0xC1AFF0", VA = "0xC1AFF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0xC1AD30", Offset = "0xC1AD30", VA = "0xC1AD30")]
			[DebuggerHidden]
			public <Vibrate>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xC1AD98", Offset = "0xC1AD98", VA = "0xC1AD98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xC1AD9C", Offset = "0xC1AD9C", VA = "0xC1AD9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0xC1AF8C", Offset = "0xC1AF8C", VA = "0xC1AF8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE48", Offset = "0x8DFE48")]
		private sealed class <Vibrate>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float frequency;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float amplitude;

			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timer>5__2;

			[Token(Token = "0x1700029D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED6")]
				[Address(RVA = "0xC1B168", Offset = "0xC1B168", VA = "0xC1B168", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED8")]
				[Address(RVA = "0xC1B1D4", Offset = "0xC1B1D4", VA = "0xC1B1D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0xC1AD5C", Offset = "0xC1AD5C", VA = "0xC1AD5C")]
			[DebuggerHidden]
			public <Vibrate>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0xC1AFF8", Offset = "0xC1AFF8", VA = "0xC1AFF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0xC1AFFC", Offset = "0xC1AFFC", VA = "0xC1AFFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0xC1B170", Offset = "0xC1B170", VA = "0xC1B170", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EE34C", Offset = "0x8EE34C")]
		[SerializeField]
		private float durationOfHaptics;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool customHaptics;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EE3A8", Offset = "0x8EE3A8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EE3A8", Offset = "0x8EE3A8")]
		public float customFrequency;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EE40C", Offset = "0x8EE40C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EE40C", Offset = "0x8EE40C")]
		public float customAmplitude;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float hapticIntensity;

		[Token(Token = "0x1700014E")]
		public float DurationOfHaptics
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xC1A45C", Offset = "0xC1A45C", VA = "0xC1A45C")]
			set
			{
			}
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xC1A464", Offset = "0xC1A464", VA = "0xC1A464")]
		public void StrongPulse()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xC1A550", Offset = "0xC1A550", VA = "0xC1A550")]
		public void Pulse()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xC1A634", Offset = "0xC1A634", VA = "0xC1A634")]
		public void Buzz()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xC1A718", Offset = "0xC1A718", VA = "0xC1A718")]
		public void SlightBuzz()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xC1A7FC", Offset = "0xC1A7FC", VA = "0xC1A7FC")]
		public void QuickBuzz()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xC1A8E0", Offset = "0xC1A8E0", VA = "0xC1A8E0")]
		public void MaxBuzz()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xC1A9C4", Offset = "0xC1A9C4", VA = "0xC1A9C4")]
		public void CustomHaptics()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xC1A46C", Offset = "0xC1A46C", VA = "0xC1A46C")]
		public void StrongPulse(Inputs.InputSide? hand)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xC1A558", Offset = "0xC1A558", VA = "0xC1A558")]
		public void Pulse(Inputs.InputSide? hand)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xC1A63C", Offset = "0xC1A63C", VA = "0xC1A63C")]
		public void Buzz(Inputs.InputSide? hand)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xC1A720", Offset = "0xC1A720", VA = "0xC1A720")]
		public void SlightBuzz(Inputs.InputSide? hand)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xC1A804", Offset = "0xC1A804", VA = "0xC1A804")]
		public void QuickBuzz(Inputs.InputSide? hand)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xC1A8E8", Offset = "0xC1A8E8", VA = "0xC1A8E8")]
		public void MaxBuzz(Inputs.InputSide? hand)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xC1A9CC", Offset = "0xC1A9CC", VA = "0xC1A9CC")]
		public void CustomHaptics(Inputs.InputSide? hand)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xC1AC28", Offset = "0xC1AC28", VA = "0xC1AC28")]
		public void StopHaptics()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xC1AB90", Offset = "0xC1AB90", VA = "0xC1AB90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7640", Offset = "0x8F7640")]
		private IEnumerator Vibrate(Inputs.InputSide hand, float frequency, float amplitude, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xC1AB00", Offset = "0xC1AB00", VA = "0xC1AB00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F76A4", Offset = "0x8F76A4")]
		private IEnumerator Vibrate(float frequency, float amplitude, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xC1AD88", Offset = "0xC1AD88", VA = "0xC1AD88")]
		public Haptics()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class InputAction
	{
		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Inputs.InputSide?> performed;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Inputs.InputSide?> canceled;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftPressed;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool rightPress;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool pressed;

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xC14F78", Offset = "0xC14F78", VA = "0xC14F78")]
		public InputAction()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public abstract class InputBinder
	{
		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string name;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected InputHandlerDef inputHandlerDef;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool isEnable;

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xC1BF6C", Offset = "0xC1BF6C", VA = "0xC1BF6C", Slot = "4")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xC151D4", Offset = "0xC151D4", VA = "0xC151D4", Slot = "5")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xC14F4C", Offset = "0xC14F4C", VA = "0xC14F4C")]
		public InputBinder(InputHandlerDef def)
		{
		}

		[Token(Token = "0x60014E7")]
		public abstract void Process();
	}
	[Token(Token = "0x2000314")]
	public abstract class InputHandlerDef : ScriptableObject
	{
		[Token(Token = "0x60014E8")]
		public abstract bool IsActive(Inputs.InputSide hand);

		[Token(Token = "0x60014E9")]
		public abstract Vector3 GetDevicePosition(Inputs.InputSide hand);

		[Token(Token = "0x60014EA")]
		public abstract Quaternion GetDeviceRotation(Inputs.InputSide hand);

		[Token(Token = "0x60014EB")]
		public abstract Vector3 GetDeviceVelocity(Inputs.InputSide hand);

		[Token(Token = "0x60014EC")]
		public abstract Vector3 GetDeviceAngularVelocity(Inputs.InputSide hand);

		[Token(Token = "0x60014ED")]
		public abstract bool GetAnyButtonDown();

		[Token(Token = "0x60014EE")]
		public abstract bool GetAnyButton();

		[Token(Token = "0x60014EF")]
		public abstract bool GetIndexTrigger(Inputs.InputSide hand);

		[Token(Token = "0x60014F0")]
		public abstract bool GetIndexTriggerDown(Inputs.InputSide hand);

		[Token(Token = "0x60014F1")]
		public abstract bool GetIndexTriggerUp(Inputs.InputSide hand);

		[Token(Token = "0x60014F2")]
		public abstract float GetIndexTriggerValue(Inputs.InputSide hand);

		[Token(Token = "0x60014F3")]
		public abstract bool GetIndexTriggerTouch(Inputs.InputSide hand);

		[Token(Token = "0x60014F4")]
		public abstract bool GetHandTrigger(Inputs.InputSide hand);

		[Token(Token = "0x60014F5")]
		public abstract bool GetGripDown(Inputs.InputSide hand);

		[Token(Token = "0x60014F6")]
		public abstract bool GetGripUp(Inputs.InputSide hand);

		[Token(Token = "0x60014F7")]
		public abstract float GetGrip(Inputs.InputSide hand);

		[Token(Token = "0x60014F8")]
		public abstract bool GetHandTriggerTouch(Inputs.InputSide hand);

		[Token(Token = "0x60014F9")]
		public abstract bool GetFaceButton1(Inputs.InputSide hand);

		[Token(Token = "0x60014FA")]
		public abstract bool GetPrimaryButtonDown(Inputs.InputSide hand);

		[Token(Token = "0x60014FB")]
		public abstract bool GetPrimaryButtonUp(Inputs.InputSide hand);

		[Token(Token = "0x60014FC")]
		public abstract bool GetFaceButton1Touch(Inputs.InputSide hand);

		[Token(Token = "0x60014FD")]
		public abstract bool GetFaceButton2(Inputs.InputSide hand);

		[Token(Token = "0x60014FE")]
		public abstract bool GetSecondaryButtonDown(Inputs.InputSide hand);

		[Token(Token = "0x60014FF")]
		public abstract bool GetGetSecondaryButtonUp(Inputs.InputSide hand);

		[Token(Token = "0x6001500")]
		public abstract bool GetFaceButton2Touch(Inputs.InputSide hand);

		[Token(Token = "0x6001501")]
		public abstract float GetThumbstickXAxis(Inputs.InputSide hand);

		[Token(Token = "0x6001502")]
		public abstract float GetThumbstickYAxis(Inputs.InputSide hand);

		[Token(Token = "0x6001503")]
		public abstract Vector2 GetThumbstickAxis(Inputs.InputSide hand);

		[Token(Token = "0x6001504")]
		public abstract bool GetThumbstick(Inputs.InputSide hand);

		[Token(Token = "0x6001505")]
		public abstract bool GetThumbstickDown(Inputs.InputSide hand);

		[Token(Token = "0x6001506")]
		public abstract bool GetThumbstickUp(Inputs.InputSide hand);

		[Token(Token = "0x6001507")]
		public abstract bool GetThumbstickTouch(Inputs.InputSide hand);

		[Token(Token = "0x6001508")]
		public abstract bool GetMenuButton(Inputs.InputSide hand);

		[Token(Token = "0x6001509")]
		public abstract bool GetMenuButtonDown(Inputs.InputSide hand);

		[Token(Token = "0x600150A")]
		public abstract bool GetMenuButtonUp(Inputs.InputSide hand);

		[Token(Token = "0x600150B")]
		public abstract bool BeginHaptics(float freq, float amp, Inputs.InputSide hand);

		[Token(Token = "0x600150C")]
		public abstract bool EndHaptics(Inputs.InputSide hand);

		[Token(Token = "0x600150D")]
		public abstract Vector3 GetHeadSetPosition();

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xC1C000", Offset = "0xC1C000", VA = "0xC1C000")]
		protected InputHandlerDef()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class InputProcesser : InputBinder
	{
		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameplayInputBinder gameplay;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MenuInputBinder menu;

		[Token(Token = "0x1700014F")]
		public GameplayInputBinder Gameplay
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0xC1C008", Offset = "0xC1C008", VA = "0xC1C008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		public MenuInputBinder Menu
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0xC1C010", Offset = "0xC1C010", VA = "0xC1C010")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xC1C018", Offset = "0xC1C018", VA = "0xC1C018")]
		public InputProcesser(InputHandlerDef def)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xC1C0C8", Offset = "0xC1C0C8", VA = "0xC1C0C8", Slot = "5")]
		public override void Disable()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xC1C20C", Offset = "0xC1C20C", VA = "0xC1C20C", Slot = "6")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xC1C264", Offset = "0xC1C264", VA = "0xC1C264")]
		public void SendHaptic(Inputs.InputSide side, float freq, float amp)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xC1C288", Offset = "0xC1C288", VA = "0xC1C288")]
		public void StopHaptic(Inputs.InputSide side)
		{
		}
	}
	[Token(Token = "0x2000316")]
	public static class Inputs
	{
		[Token(Token = "0x2000534")]
		public enum InputSide
		{
			[Token(Token = "0x4001FE2")]
			Left,
			[Token(Token = "0x4001FE3")]
			Right
		}

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool initialized;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static InputProcesser gameInputs;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool bindedMenuActions;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private static bool bindedGameplayActions;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action OnEnableGameplayInputs;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action OnDisableGameplayInputs;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<InputSide> OnPressedGrabCallback;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<InputSide> OnReleasedGrabCallback;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action<InputSide> OnPressedSpellPrimeCallback;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Action<InputSide> OnReleasedSpellPrimeCallback;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Action OnPressedMediationCallback;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Action OnReleasedMediationCallback;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Action OnPressedMenuButtonCallback;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Action<InputSide> OnPressedCompassButtonCallback;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Action OnPressedSkipVoButtonCallback;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Action OnPressedSkipCreditsButtonCallback;

		[Token(Token = "0x17000151")]
		public static Vector3 HeadsetPos
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0xC1C2AC", Offset = "0xC1C2AC", VA = "0xC1C2AC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000152")]
		public static Vector3 LeftHandPos
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0xC0C3D8", Offset = "0xC0C3D8", VA = "0xC0C3D8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000153")]
		public static Vector3 RightHandPos
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0xC0C534", Offset = "0xC0C534", VA = "0xC0C534")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000154")]
		public static Vector3 LeftHandVelocity
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0xC1C328", Offset = "0xC1C328", VA = "0xC1C328")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000155")]
		public static Vector3 RightHandVelocity
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xC1C3A8", Offset = "0xC1C3A8", VA = "0xC1C3A8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000156")]
		public static Vector3 LeftHandAngularVelocity
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0xC1C428", Offset = "0xC1C428", VA = "0xC1C428")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000157")]
		public static Vector3 RightHandAngularVelocity
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0xC1C4A8", Offset = "0xC1C4A8", VA = "0xC1C4A8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000158")]
		public static Quaternion LeftHandRot
		{
			[Token(Token = "0x600151D")]
			[Address(RVA = "0xC1C528", Offset = "0xC1C528", VA = "0xC1C528")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000159")]
		public static Quaternion RightHandRot
		{
			[Token(Token = "0x600151E")]
			[Address(RVA = "0xC1C5A8", Offset = "0xC1C5A8", VA = "0xC1C5A8")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700015A")]
		public static Vector2 RightThumbstick
		{
			[Token(Token = "0x600151F")]
			[Address(RVA = "0xC1C628", Offset = "0xC1C628", VA = "0xC1C628")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700015B")]
		public static Vector2 LeftThumbstick
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0xC1C6A8", Offset = "0xC1C6A8", VA = "0xC1C6A8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700015C")]
		public static bool RightHandGrabPressed
		{
			[Token(Token = "0x6001521")]
			[Address(RVA = "0xC0BE0C", Offset = "0xC0BE0C", VA = "0xC0BE0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015D")]
		public static bool LeftHandGrabPressed
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0xC0BE8C", Offset = "0xC0BE8C", VA = "0xC0BE8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xC13AD4", Offset = "0xC13AD4", VA = "0xC13AD4")]
		public static void Init(InputHandlerDef inputHandlerDef)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xC13FF0", Offset = "0xC13FF0", VA = "0xC13FF0")]
		public static void Process()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xC1C728", Offset = "0xC1C728", VA = "0xC1C728")]
		public static void StopAllInputs()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xC1C7C4", Offset = "0xC1C7C4", VA = "0xC1C7C4")]
		public static void ResumeGameInputs()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xC1C83C", Offset = "0xC1C83C", VA = "0xC1C83C")]
		public static void SetUseMenuInputs()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xC1C948", Offset = "0xC1C948", VA = "0xC1C948")]
		private static void BindMenuActions()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xC1CAB4", Offset = "0xC1CAB4", VA = "0xC1CAB4")]
		private static void MenuButtonPressed(InputSide? side)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xC1CB30", Offset = "0xC1CB30", VA = "0xC1CB30")]
		private static void SkipCreditsButtonPressed(InputSide? side)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xC1BD64", Offset = "0xC1BD64", VA = "0xC1BD64")]
		public static void SetUseGameplayInputs()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xC1CBAC", Offset = "0xC1CBAC", VA = "0xC1CBAC")]
		private static void BindGameplayActions()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xC1D160", Offset = "0xC1D160", VA = "0xC1D160")]
		private static void GrabButtonPressed(InputSide? side)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xC1D210", Offset = "0xC1D210", VA = "0xC1D210")]
		private static void GrabButtonReleased(InputSide? side)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xC1D2C0", Offset = "0xC1D2C0", VA = "0xC1D2C0")]
		private static void SpellPrimeButtonPressed(InputSide? side)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xC1D370", Offset = "0xC1D370", VA = "0xC1D370")]
		private static void SpellPrimeButtonReleased(InputSide? side)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xC1D420", Offset = "0xC1D420", VA = "0xC1D420")]
		private static void MediationButtonPressed(InputSide? side)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xC1D49C", Offset = "0xC1D49C", VA = "0xC1D49C")]
		private static void MediationButtonReleased(InputSide? side)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xC1D518", Offset = "0xC1D518", VA = "0xC1D518")]
		private static void CompassButtonPressed(InputSide? side)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xC1D5C8", Offset = "0xC1D5C8", VA = "0xC1D5C8")]
		private static void SkipVoPressed(InputSide? side)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xC0C920", Offset = "0xC0C920", VA = "0xC0C920")]
		public static Vector3 GetHandPos(InputSide inputSide)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xC194B8", Offset = "0xC194B8", VA = "0xC194B8")]
		public static Quaternion GetHandRot(InputSide inputSide)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xC1D644", Offset = "0xC1D644", VA = "0xC1D644")]
		public static Vector2 GetThumbstick(InputSide inputSide)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xC1437C", Offset = "0xC1437C", VA = "0xC1437C")]
		public static void UnbindGameplayActions()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xC1AEDC", Offset = "0xC1AEDC", VA = "0xC1AEDC")]
		public static void SendHaptics(InputSide inputSide, float freq, float amplitude)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xC1ACA0", Offset = "0xC1ACA0", VA = "0xC1ACA0")]
		public static void StopHaptic(InputSide inputSide)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xC1953C", Offset = "0xC1953C", VA = "0xC1953C")]
		public static Vector3 GetHandVelocity(InputSide inputSide)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xC195C0", Offset = "0xC195C0", VA = "0xC195C0")]
		public static Vector3 GetHandAngularVelocity(InputSide inputSide)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xC14210", Offset = "0xC14210", VA = "0xC14210")]
		public static void UnbindMenuActions()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000317")]
	public class UnityEventHandSide : UnityEvent<Inputs.InputSide?>
	{
		[Token(Token = "0x600153F")]
		[Address(RVA = "0xB5B95C", Offset = "0xB5B95C", VA = "0xB5B95C")]
		public UnityEventHandSide()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class MenuInputBinder : InputBinder
	{
		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputAction MenuButton;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InputAction SkipCreditsButton;

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xC6BB5C", Offset = "0xC6BB5C", VA = "0xC6BB5C")]
		public MenuInputBinder(InputHandlerDef def)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xC6BC00", Offset = "0xC6BC00", VA = "0xC6BC00", Slot = "6")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xC6BC3C", Offset = "0xC6BC3C", VA = "0xC6BC3C")]
		private void ProcessPressMenuButton()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xC6BDAC", Offset = "0xC6BDAC", VA = "0xC6BDAC")]
		private void ProcessPressSkipCreditsButton()
		{
		}
	}
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DF0A0", Offset = "0x8DF0A0")]
	public class OculusInputHandlerDef : InputHandlerDef
	{
		[Token(Token = "0x6001544")]
		[Address(RVA = "0xC6FEB4", Offset = "0xC6FEB4", VA = "0xC6FEB4")]
		private OVRInput.Controller GetOVRController(Inputs.InputSide side)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xC6FF48", Offset = "0xC6FF48", VA = "0xC6FF48", Slot = "9")]
		public override bool GetAnyButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xC6FFB0", Offset = "0xC6FFB0", VA = "0xC6FFB0", Slot = "10")]
		public override bool GetAnyButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xC70018", Offset = "0xC70018", VA = "0xC70018", Slot = "4")]
		public override bool IsActive(Inputs.InputSide hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xC7009C", Offset = "0xC7009C", VA = "0xC7009C", Slot = "5")]
		public override Vector3 GetDevicePosition(Inputs.InputSide side)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xC70114", Offset = "0xC70114", VA = "0xC70114", Slot = "6")]
		public override Quaternion GetDeviceRotation(Inputs.InputSide side)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xC7018C", Offset = "0xC7018C", VA = "0xC7018C", Slot = "7")]
		public override Vector3 GetDeviceVelocity(Inputs.InputSide side)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xC70204", Offset = "0xC70204", VA = "0xC70204", Slot = "8")]
		public override Vector3 GetDeviceAngularVelocity(Inputs.InputSide side)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xC7027C", Offset = "0xC7027C", VA = "0xC7027C", Slot = "11")]
		public override bool GetIndexTrigger(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xC7030C", Offset = "0xC7030C", VA = "0xC7030C", Slot = "12")]
		public override bool GetIndexTriggerDown(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xC70388", Offset = "0xC70388", VA = "0xC70388", Slot = "13")]
		public override bool GetIndexTriggerUp(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xC70404", Offset = "0xC70404", VA = "0xC70404", Slot = "14")]
		public override float GetIndexTriggerValue(Inputs.InputSide side)
		{
			return default(float);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xC70480", Offset = "0xC70480", VA = "0xC70480", Slot = "15")]
		public override bool GetIndexTriggerTouch(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xC704FC", Offset = "0xC704FC", VA = "0xC704FC", Slot = "16")]
		public override bool GetHandTrigger(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xC7058C", Offset = "0xC7058C", VA = "0xC7058C", Slot = "17")]
		public override bool GetGripDown(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xC70608", Offset = "0xC70608", VA = "0xC70608", Slot = "18")]
		public override bool GetGripUp(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xC70684", Offset = "0xC70684", VA = "0xC70684", Slot = "19")]
		public override float GetGrip(Inputs.InputSide side)
		{
			return default(float);
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xC70700", Offset = "0xC70700", VA = "0xC70700", Slot = "20")]
		public override bool GetHandTriggerTouch(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xC7077C", Offset = "0xC7077C", VA = "0xC7077C", Slot = "21")]
		public override bool GetFaceButton1(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xC707F8", Offset = "0xC707F8", VA = "0xC707F8", Slot = "22")]
		public override bool GetPrimaryButtonDown(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xC70874", Offset = "0xC70874", VA = "0xC70874", Slot = "23")]
		public override bool GetPrimaryButtonUp(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xC708F0", Offset = "0xC708F0", VA = "0xC708F0", Slot = "24")]
		public override bool GetFaceButton1Touch(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xC7096C", Offset = "0xC7096C", VA = "0xC7096C", Slot = "25")]
		public override bool GetFaceButton2(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xC709E8", Offset = "0xC709E8", VA = "0xC709E8", Slot = "26")]
		public override bool GetSecondaryButtonDown(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xC70A64", Offset = "0xC70A64", VA = "0xC70A64", Slot = "27")]
		public override bool GetGetSecondaryButtonUp(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xC70AE0", Offset = "0xC70AE0", VA = "0xC70AE0", Slot = "28")]
		public override bool GetFaceButton2Touch(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xC70B5C", Offset = "0xC70B5C", VA = "0xC70B5C", Slot = "29")]
		public override float GetThumbstickXAxis(Inputs.InputSide side)
		{
			return default(float);
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xC70C28", Offset = "0xC70C28", VA = "0xC70C28", Slot = "30")]
		public override float GetThumbstickYAxis(Inputs.InputSide side)
		{
			return default(float);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xC70CF4", Offset = "0xC70CF4", VA = "0xC70CF4", Slot = "31")]
		public override Vector2 GetThumbstickAxis(Inputs.InputSide side)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xC70D70", Offset = "0xC70D70", VA = "0xC70D70", Slot = "32")]
		public override bool GetThumbstick(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xC70DEC", Offset = "0xC70DEC", VA = "0xC70DEC", Slot = "33")]
		public override bool GetThumbstickDown(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xC70E68", Offset = "0xC70E68", VA = "0xC70E68", Slot = "34")]
		public override bool GetThumbstickUp(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xC70EE4", Offset = "0xC70EE4", VA = "0xC70EE4", Slot = "35")]
		public override bool GetThumbstickTouch(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xC70F60", Offset = "0xC70F60", VA = "0xC70F60", Slot = "36")]
		public override bool GetMenuButton(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xC70FDC", Offset = "0xC70FDC", VA = "0xC70FDC", Slot = "37")]
		public override bool GetMenuButtonDown(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xC71058", Offset = "0xC71058", VA = "0xC71058", Slot = "38")]
		public override bool GetMenuButtonUp(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xC710D4", Offset = "0xC710D4", VA = "0xC710D4", Slot = "39")]
		public override bool BeginHaptics(float freq, float amp, Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xC7116C", Offset = "0xC7116C", VA = "0xC7116C", Slot = "40")]
		public override bool EndHaptics(Inputs.InputSide side)
		{
			return default(bool);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xC711F4", Offset = "0xC711F4", VA = "0xC711F4", Slot = "41")]
		public override Vector3 GetHeadSetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xC712C0", Offset = "0xC712C0", VA = "0xC712C0")]
		public OculusInputHandlerDef()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public abstract class Breakable : MonoBehaviour
	{
		[Token(Token = "0x600156C")]
		public abstract bool IsBreakable();

		[Token(Token = "0x600156D")]
		public abstract void Break();

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xBE8C34", Offset = "0xBE8C34", VA = "0xBE8C34")]
		protected Breakable()
		{
		}
	}
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DF0F0", Offset = "0x8DF0F0")]
	public class Burnable : MonoBehaviour, ISpellTarget
	{
		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE58", Offset = "0x8DFE58")]
		private sealed class <BurningAwayCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Burnable <>4__this;

			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float timeToBurn;

			[Token(Token = "0x1700029F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EDC")]
				[Address(RVA = "0xBE96B4", Offset = "0xBE96B4", VA = "0xBE96B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EDE")]
				[Address(RVA = "0xBE9720", Offset = "0xBE9720", VA = "0xBE9720", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xBE90F4", Offset = "0xBE90F4", VA = "0xBE90F4")]
			[DebuggerHidden]
			public <BurningAwayCoroutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0xBE9608", Offset = "0xBE9608", VA = "0xBE9608", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0xBE960C", Offset = "0xBE960C", VA = "0xBE960C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0xBE96BC", Offset = "0xBE96BC", VA = "0xBE96BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EE470", Offset = "0x8EE470")]
		[SerializeField]
		private GameObject burningEffect;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useFlameColor;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color flameColor;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystemRenderer rend;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Light light;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int BaseColor;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EE4DC", Offset = "0x8EE4DC")]
		[SerializeField]
		private bool burningOnStart;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool burnsAway;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EE538", Offset = "0x8EE538")]
		private bool burnsAwayEventOnAwake;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EE588", Offset = "0x8EE588")]
		private float burnAwayTime;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool stopFireWhenCollide;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float timeSpentBurning;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool isBurning;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EE5E8", Offset = "0x8EE5E8")]
		[SerializeField]
		private SFX_3DHook igniteSFX;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SFX_3DHook extingSFX;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SFX_3DHook burningSFX;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EE654", Offset = "0x8EE654")]
		[SerializeField]
		private UnityEvent OnStartBurn;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UnityEvent OnEndBurn;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EE6B0", Offset = "0x8EE6B0")]
		private UnityEvent OnBurntAway;

		[Token(Token = "0x1700015E")]
		public Color FlameColor
		{
			[Token(Token = "0x600156F")]
			[Address(RVA = "0xBE8C3C", Offset = "0xBE8C3C", VA = "0xBE8C3C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700015F")]
		public bool IsBurning
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0xBE8C48", Offset = "0xBE8C48", VA = "0xBE8C48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000160")]
		public bool StopFireWhenCollide
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0xBE8C50", Offset = "0xBE8C50", VA = "0xBE8C50")]
			set
			{
			}
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xBE8C5C", Offset = "0xBE8C5C", VA = "0xBE8C5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xBE8EBC", Offset = "0xBE8EBC", VA = "0xBE8EBC", Slot = "8")]
		public virtual void StartBurn()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xBE9070", Offset = "0xBE9070", VA = "0xBE9070")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7708", Offset = "0x8F7708")]
		private IEnumerator BurningAwayCoroutine(float timeToBurn)
		{
			return null;
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xBE8D40", Offset = "0xBE8D40", VA = "0xBE8D40")]
		public void SetFlameColor(Color _flameColor)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xBE9120", Offset = "0xBE9120", VA = "0xBE9120", Slot = "9")]
		public virtual void EndBurn()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xBE9234", Offset = "0xBE9234", VA = "0xBE9234", Slot = "10")]
		protected virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xBE92F0", Offset = "0xBE92F0", VA = "0xBE92F0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xBE9308", Offset = "0xBE9308", VA = "0xBE9308", Slot = "11")]
		public virtual void EndBurnAway()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xBE9448", Offset = "0xBE9448", VA = "0xBE9448")]
		public void ReachedNewFlow()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xBE9490", Offset = "0xBE9490", VA = "0xBE9490", Slot = "4")]
		public bool IsTargetable(Spell spell)
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xBE953C", Offset = "0xBE953C", VA = "0xBE953C", Slot = "5")]
		public void Detect(Spell spell)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xBE9540", Offset = "0xBE9540", VA = "0xBE9540", Slot = "6")]
		public void Cast(Spell spell)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xBE9560", Offset = "0xBE9560", VA = "0xBE9560", Slot = "7")]
		public void StopCast(Spell spell)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xBE9564", Offset = "0xBE9564", VA = "0xBE9564")]
		public Burnable()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class Clickable : MonoBehaviour, ISpellTarget
	{
		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool isClickable;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules targetRules;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnTargeted;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected UnityEventHandSide OnClicked;

		[Token(Token = "0x17000161")]
		public bool IsClickable
		{
			[Token(Token = "0x6001581")]
			[Address(RVA = "0xBEA3C4", Offset = "0xBEA3C4", VA = "0xBEA3C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001582")]
			[Address(RVA = "0xBEA3CC", Offset = "0xBEA3CC", VA = "0xBEA3CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xBEA3D8", Offset = "0xBEA3D8", VA = "0xBEA3D8", Slot = "4")]
		public bool IsTargetable(Spell spell)
		{
			return default(bool);
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xBEA4C4", Offset = "0xBEA4C4", VA = "0xBEA4C4", Slot = "5")]
		public void Detect(Spell spell)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xBEA4D8", Offset = "0xBEA4D8", VA = "0xBEA4D8", Slot = "6")]
		public void Cast(Spell spell)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xBEA634", Offset = "0xBEA634", VA = "0xBEA634", Slot = "7")]
		public void StopCast(Spell spell)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xBEA638", Offset = "0xBEA638", VA = "0xBEA638")]
		public Clickable()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class Communicable : MonoBehaviour, ISpellTarget
	{
		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules communicableRules;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent OnTargeted;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnCommune;

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xBEAFE0", Offset = "0xBEAFE0", VA = "0xBEAFE0", Slot = "4")]
		public bool IsTargetable(Spell spell)
		{
			return default(bool);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xBEB0C8", Offset = "0xBEB0C8", VA = "0xBEB0C8", Slot = "5")]
		public void Detect(Spell spell)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xBEB0DC", Offset = "0xBEB0DC", VA = "0xBEB0DC", Slot = "6")]
		public void Cast(Spell newHand)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xBEB19C", Offset = "0xBEB19C", VA = "0xBEB19C", Slot = "7")]
		public void StopCast(Spell spell)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xBEB1A0", Offset = "0xBEB1A0", VA = "0xBEB1A0")]
		public Communicable()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class Dragable : MonoBehaviour
	{
		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EE770", Offset = "0x8EE770")]
		[SerializeField]
		private Collider collider;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float releaseDistance;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool moveWithHandWhileDragging;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		private bool snapBackToStartPosWhenRelease;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnDragStarted;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnDragCompleted;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent OnDragCanceled;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isDraggable;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 defaultPos;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 grabbedPos;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isDragging;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Inputs.InputSide? currentGrabbingHand;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool requireReCheckInputs;

		[Token(Token = "0x17000162")]
		public bool IsDragging
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0xC0B810", Offset = "0xC0B810", VA = "0xC0B810")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xC0B818", Offset = "0xC0B818", VA = "0xC0B818", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xC0BA24", Offset = "0xC0BA24", VA = "0xC0BA24", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xC0BD58", Offset = "0xC0BD58", VA = "0xC0BD58")]
		private void OnEnableInputs()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xC0BF0C", Offset = "0xC0BF0C", VA = "0xC0BF0C")]
		private void OnDisableInputs()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xC0BF20", Offset = "0xC0BF20", VA = "0xC0BF20")]
		private void OnGrab(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xC0C288", Offset = "0xC0C288", VA = "0xC0C288")]
		private bool IsHandCloseEnough(Inputs.InputSide inputSide)
		{
			return default(bool);
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xC0C638", Offset = "0xC0C638", VA = "0xC0C638")]
		private void OnRelease(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xC0BC60", Offset = "0xC0BC60", VA = "0xC0BC60")]
		private void Release()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xC0C6E8", Offset = "0xC0C6E8", VA = "0xC0C6E8", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xC0C6F8", Offset = "0xC0C6F8", VA = "0xC0C6F8")]
		private void Dragging()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xC0C9A4", Offset = "0xC0C9A4", VA = "0xC0C9A4")]
		public void ForceRelease()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xC0C9EC", Offset = "0xC0C9EC", VA = "0xC0C9EC", Slot = "7")]
		protected virtual void DragStarted()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xC0C9F0", Offset = "0xC0C9F0", VA = "0xC0C9F0", Slot = "8")]
		protected virtual void DragRunning(Vector3 handPos, float percentage, float distance, Vector3 direction)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xC0C9F4", Offset = "0xC0C9F4", VA = "0xC0C9F4", Slot = "9")]
		protected virtual void DragCompleted()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xC0C9F8", Offset = "0xC0C9F8", VA = "0xC0C9F8", Slot = "10")]
		protected virtual void DragCancelled()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xC0C9FC", Offset = "0xC0C9FC", VA = "0xC0C9FC", Slot = "11")]
		protected virtual bool IsDraggable()
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xC0CA04", Offset = "0xC0CA04", VA = "0xC0CA04", Slot = "12")]
		protected virtual void GrabFailed()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xC0CA08", Offset = "0xC0CA08", VA = "0xC0CA08")]
		public Dragable()
		{
		}
	}
	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DF154", Offset = "0x8DF154")]
	public class GazeTarget : MonoBehaviour
	{
		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EE81C", Offset = "0x8EE81C")]
		[SerializeField]
		private float maxGazeDuration;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool onlyFireOnce;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool onlyGazableWhenNotPlayingVO;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[SerializeField]
		private bool onlyDetectOnMeditate;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem attentionParticles;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EE8A8", Offset = "0x8EE8A8")]
		[SerializeField]
		private UnityEvent OnGazeDetected;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EE8F4", Offset = "0x8EE8F4")]
		[SerializeField]
		private UnityEvent OnGazeUndetected;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EE940", Offset = "0x8EE940")]
		[SerializeField]
		private UnityEvent OnGazeFocused;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EE98C", Offset = "0x8EE98C")]
		[SerializeField]
		private UnityEvent OnAttentionParticlesStarted;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Dialogue dialogue;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float gazeDuration;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool gazeStarted;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool isGazeable;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		private bool fired;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		private bool untargetedBool;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider coll;

		[Token(Token = "0x17000163")]
		public bool OnlyDetectOnMeditate
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0xC16824", Offset = "0xC16824", VA = "0xC16824")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		public bool OnlyGazableWhenNotPlayingVO
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0xC1682C", Offset = "0xC1682C", VA = "0xC1682C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xC16834", Offset = "0xC16834", VA = "0xC16834")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xC169E8", Offset = "0xC169E8", VA = "0xC169E8")]
		private void StopAttentionParticles()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xC1693C", Offset = "0xC1693C", VA = "0xC1693C")]
		public void StartAttentionParticles()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xC16A7C", Offset = "0xC16A7C", VA = "0xC16A7C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xC1674C", Offset = "0xC1674C", VA = "0xC1674C")]
		public void Targeted()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xC165E4", Offset = "0xC165E4", VA = "0xC165E4")]
		public void Untargeted()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xC16BA0", Offset = "0xC16BA0", VA = "0xC16BA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xC16BB4", Offset = "0xC16BB4", VA = "0xC16BB4")]
		public GazeTarget()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class Grabable : MonoBehaviour
	{
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EE9E8", Offset = "0x8EE9E8")]
		[SerializeField]
		private Collider collider;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool stayInPlace;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnGrabbed;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnReleased;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEventHandSide OnGrabbedHandSide;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool handTransferable;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool isGrabbale;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 defaultPos;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 grabbedPos;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isGrabbing;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Inputs.InputSide? currentGrabbingHand;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool requireReCheckInputs;

		[Token(Token = "0x17000165")]
		public bool IsGrabbing
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0xC1840C", Offset = "0xC1840C", VA = "0xC1840C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000166")]
		public Inputs.InputSide CurrentGrabbingHand
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xC18414", Offset = "0xC18414", VA = "0xC18414")]
			get
			{
				return default(Inputs.InputSide);
			}
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xC18464", Offset = "0xC18464", VA = "0xC18464", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xC18670", Offset = "0xC18670", VA = "0xC18670", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xC1888C", Offset = "0xC1888C", VA = "0xC1888C")]
		private void OnEnableInputs()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xC18940", Offset = "0xC18940", VA = "0xC18940")]
		private void OnDisableInputs()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xC18954", Offset = "0xC18954", VA = "0xC18954")]
		private void OnGrab(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xC18E20", Offset = "0xC18E20", VA = "0xC18E20", Slot = "6")]
		protected virtual bool IsGrabale()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xC18A50", Offset = "0xC18A50", VA = "0xC18A50")]
		private bool IsHandCloseEnough(Inputs.InputSide inputSide)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xC18BA0", Offset = "0xC18BA0", VA = "0xC18BA0")]
		private bool TransferToNewHand(Inputs.InputSide inputSide)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xC18C98", Offset = "0xC18C98", VA = "0xC18C98")]
		private void Grab(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xC18F60", Offset = "0xC18F60", VA = "0xC18F60")]
		public void DistanceGrab(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xC1904C", Offset = "0xC1904C", VA = "0xC1904C", Slot = "7")]
		protected virtual void GrabTransferred()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xC18E28", Offset = "0xC18E28", VA = "0xC18E28")]
		private Vector3 GetGrabPos(Inputs.InputSide side)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xC19050", Offset = "0xC19050", VA = "0xC19050")]
		private void OnRelease(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xC19100", Offset = "0xC19100", VA = "0xC19100")]
		private void Release()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xC191CC", Offset = "0xC191CC", VA = "0xC191CC", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xC191DC", Offset = "0xC191DC", VA = "0xC191DC")]
		private void Grabbing()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xC19644", Offset = "0xC19644", VA = "0xC19644", Slot = "9")]
		protected virtual void GrabStarted()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xC19648", Offset = "0xC19648", VA = "0xC19648", Slot = "10")]
		protected virtual void GrabRunning(Vector3 handPos, Quaternion handRot, float distance, Vector3 direction, Vector3 handVelocity, Vector3 handAngularVelocity)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xC1964C", Offset = "0xC1964C", VA = "0xC1964C", Slot = "11")]
		protected virtual void GrabReleased()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xC19650", Offset = "0xC19650", VA = "0xC19650")]
		public void SetNotGrabale()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xC19658", Offset = "0xC19658", VA = "0xC19658")]
		public void SetGrabale()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xC10CDC", Offset = "0xC10CDC", VA = "0xC10CDC")]
		public void ForceRelease()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xC19664", Offset = "0xC19664", VA = "0xC19664", Slot = "12")]
		protected virtual bool UseTransformMovement()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xC1966C", Offset = "0xC1966C", VA = "0xC1966C")]
		protected void ForceGrab(Inputs.InputSide side, bool checkDistance = true)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xC19678", Offset = "0xC19678", VA = "0xC19678")]
		public Grabable()
		{
		}
	}
	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DF1B8", Offset = "0x8DF1B8")]
	public class PhysicGrabale : Grabable
	{
		[Token(Token = "0x2000536")]
		public enum Axis
		{
			[Token(Token = "0x4001FE9")]
			x,
			[Token(Token = "0x4001FEA")]
			y,
			[Token(Token = "0x4001FEB")]
			z,
			[Token(Token = "0x4001FEC")]
			xy,
			[Token(Token = "0x4001FED")]
			yz,
			[Token(Token = "0x4001FEE")]
			xz,
			[Token(Token = "0x4001FEF")]
			all
		}

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		protected bool isKinematicOnGrab;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[SerializeField]
		protected bool isKinematicOnRelease;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[SerializeField]
		private bool rotateWithHand;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private bool applyVelocityOnRelease;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[SerializeField]
		private bool applyAngularVelocityOnRelease;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[SerializeField]
		protected bool lockedOnAxis;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float tetherDistance;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Axis lockedAxis;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float velocityMultiplier;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float angularVelocityMultiplier;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Vector3> recordedVelocities;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Vector3> recordedAngularVelocities;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Rigidbody rb;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int framesBeforeThrow;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int framesAfterThrow;

		[Token(Token = "0x17000167")]
		public bool LockedOnAxis
		{
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0xC72DB8", Offset = "0xC72DB8", VA = "0xC72DB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xC72DC0", Offset = "0xC72DC0", VA = "0xC72DC0", Slot = "13")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xC717E0", Offset = "0xC717E0", VA = "0xC717E0", Slot = "9")]
		protected override void GrabStarted()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xC71948", Offset = "0xC71948", VA = "0xC71948", Slot = "10")]
		protected override void GrabRunning(Vector3 handPos, Quaternion handRot, float distance, Vector3 direction, Vector3 handVelocity, Vector3 handAngularVelocity)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xC72E18", Offset = "0xC72E18", VA = "0xC72E18")]
		private void RecordControllerVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xC72EDC", Offset = "0xC72EDC", VA = "0xC72EDC")]
		private void RecordControllerAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xC72FA0", Offset = "0xC72FA0", VA = "0xC72FA0")]
		private Vector3 UpdateVelocityBasedOnLockedAxis(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xC730DC", Offset = "0xC730DC", VA = "0xC730DC", Slot = "11")]
		protected override void GrabReleased()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xC7315C", Offset = "0xC7315C", VA = "0xC7315C")]
		private void ApplyVelocities()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xC731EC", Offset = "0xC731EC", VA = "0xC731EC")]
		private Vector3 GetAverageVelocities()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xC733A4", Offset = "0xC733A4", VA = "0xC733A4")]
		private Vector3 GetAverageVelocitiesByAxis(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xC731A4", Offset = "0xC731A4", VA = "0xC731A4")]
		private void ApplyAngularVelocities()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xC73454", Offset = "0xC73454", VA = "0xC73454")]
		private Vector3 GetAverageAngularVelocities()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xC735F4", Offset = "0xC735F4", VA = "0xC735F4")]
		private Vector3 GetAverageAngularVelocitiesByAxis(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xC736A4", Offset = "0xC736A4", VA = "0xC736A4", Slot = "12")]
		protected override bool UseTransformMovement()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xC736AC", Offset = "0xC736AC", VA = "0xC736AC", Slot = "7")]
		protected override void GrabTransferred()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xC73720", Offset = "0xC73720", VA = "0xC73720")]
		public void SetKinematic()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xC72118", Offset = "0xC72118", VA = "0xC72118")]
		public PhysicGrabale()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class Pressable : MonoBehaviour
	{
		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EEB14", Offset = "0x8EEB14")]
		[SerializeField]
		private Collider collider;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEventHandSide OnPressed;

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xC78220", Offset = "0xC78220", VA = "0xC78220", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xC78304", Offset = "0xC78304", VA = "0xC78304", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xC783E8", Offset = "0xC783E8", VA = "0xC783E8")]
		private void OnPress(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xC784B4", Offset = "0xC784B4", VA = "0xC784B4")]
		protected bool IsHandCloseEnough(Inputs.InputSide inputSide)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xC78610", Offset = "0xC78610", VA = "0xC78610")]
		private void Press(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xC786FC", Offset = "0xC786FC", VA = "0xC786FC", Slot = "6")]
		protected virtual void PressStarted(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xC78700", Offset = "0xC78700", VA = "0xC78700")]
		public Pressable()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class ShadowHandable : PhysicGrabale, ISpellTarget
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EEB60", Offset = "0x8EEB60")]
		[SerializeField]
		private bool isShadowHandable;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[SerializeField]
		private bool allowThumbstickControl;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float minDistanceToSnapToGrab;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameRules targetRules;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AdvancedGameRule advancedTargetRules;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private UnityEvent OnCasted;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private UnityEvent OnUnCasted;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ShadowHand currentGrabbedHand;

		[Token(Token = "0x17000168")]
		public bool AllowThumbstickControl
		{
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xB4E7D8", Offset = "0xB4E7D8", VA = "0xB4E7D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000169")]
		public Inputs.InputSide CurrentShadowControlHand
		{
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0xB4E7E0", Offset = "0xB4E7E0", VA = "0xB4E7E0")]
			get
			{
				return default(Inputs.InputSide);
			}
		}

		[Token(Token = "0x1700016A")]
		public bool IsBeingControlled
		{
			[Token(Token = "0x60015E0")]
			[Address(RVA = "0xB47FA0", Offset = "0xB47FA0", VA = "0xB47FA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016B")]
		public bool IsShadowHandable
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0xB4E800", Offset = "0xB4E800", VA = "0xB4E800")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0xB4E808", Offset = "0xB4E808", VA = "0xB4E808")]
			set
			{
			}
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xB4E814", Offset = "0xB4E814", VA = "0xB4E814", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xB4E8A8", Offset = "0xB4E8A8", VA = "0xB4E8A8")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xB4EB98", Offset = "0xB4EB98", VA = "0xB4EB98", Slot = "14")]
		public bool IsTargetable(Spell spell)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xB4EC9C", Offset = "0xB4EC9C", VA = "0xB4EC9C", Slot = "15")]
		public void Detect(Spell spell)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xB4ECA0", Offset = "0xB4ECA0", VA = "0xB4ECA0", Slot = "16")]
		public void Cast(Spell newHand)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xB4EE38", Offset = "0xB4EE38", VA = "0xB4EE38", Slot = "17")]
		public void StopCast(Spell spell)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xB46FB0", Offset = "0xB46FB0", VA = "0xB46FB0")]
		public ShadowHandable()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class ShadowHandRestriction : MonoBehaviour
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useXLimits;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool useYLimits;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool useZLimits;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform xMin;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform xMax;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform yMin;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform yMax;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform zMin;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform zMax;

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xB4E65C", Offset = "0xB4E65C", VA = "0xB4E65C")]
		public Vector3 GetRestrictedPosition(Vector3 newPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xB4E7D0", Offset = "0xB4E7D0", VA = "0xB4E7D0")]
		public ShadowHandRestriction()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class DisableInTargetedLanguage : MonoBehaviour
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FwLocalSettings.SupportedLanguage targetLanguage;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject target;

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xC0B5EC", Offset = "0xC0B5EC", VA = "0xC0B5EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xC0B73C", Offset = "0xC0B73C", VA = "0xC0B73C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xC0B6C0", Offset = "0xC0B6C0", VA = "0xC0B6C0")]
		private void TryDisable()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xC0B808", Offset = "0xC0B808", VA = "0xC0B808")]
		public DisableInTargetedLanguage()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class Localization : Singleton<Localization>
	{
		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<TextAsset> files;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ShowInInspector]
		[ReadOnly]
		private Dictionary<FwLocalSettings.SupportedLanguage, Dictionary<string, string>> texts;

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xC18098", Offset = "0xC18098", VA = "0xC18098")]
		public string GetText(string tag)
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xC1E2E8", Offset = "0xC1E2E8", VA = "0xC1E2E8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F776C", Offset = "0x8F776C")]
		private void BuildDictionary()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xC1E790", Offset = "0xC1E790", VA = "0xC1E790")]
		private void BuildRowList(string[] lines)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xC1EB0C", Offset = "0xC1EB0C", VA = "0xC1EB0C")]
		private void AddLine(FwLocalSettings.SupportedLanguage lang, string[] line)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xC1EC0C", Offset = "0xC1EC0C", VA = "0xC1EC0C")]
		public Localization()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class Localizer : MonoBehaviour
	{
		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string token;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI uiText;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro text;

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xC69908", Offset = "0xC69908", VA = "0xC69908")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xC69C34", Offset = "0xC69C34", VA = "0xC69C34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xC69D00", Offset = "0xC69D00", VA = "0xC69D00")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8F777C", Offset = "0x8F777C")]
		public void RefreshFromMenu()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xC699DC", Offset = "0xC699DC", VA = "0xC699DC")]
		public void RefreshToken()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xC69D04", Offset = "0xC69D04", VA = "0xC69D04")]
		public Localizer()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class AudioUIController : MonoBehaviour
	{
		[Token(Token = "0x2000537")]
		private enum Bank
		{
			[Token(Token = "0x4001FF1")]
			Master,
			[Token(Token = "0x4001FF2")]
			Music,
			[Token(Token = "0x4001FF3")]
			Ambiance,
			[Token(Token = "0x4001FF4")]
			Dialogue,
			[Token(Token = "0x4001FF5")]
			Sfx
		}

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float step;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider slider;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Bank bank;

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xBE6EB4", Offset = "0xBE6EB4", VA = "0xBE6EB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xBE7000", Offset = "0xBE7000", VA = "0xBE7000")]
		public void VolumeChange()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xBE7198", Offset = "0xBE7198", VA = "0xBE7198")]
		public void DecreaseVolume()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xBE724C", Offset = "0xBE724C", VA = "0xBE724C")]
		public void IncreaseVolume()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xBE7088", Offset = "0xBE7088", VA = "0xBE7088")]
		private void SetVolume(Bank targetBank, float value)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xBE6EF4", Offset = "0xBE6EF4", VA = "0xBE6EF4")]
		private float GetVolume(Bank targetBank)
		{
			return default(float);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xBE7300", Offset = "0xBE7300", VA = "0xBE7300")]
		public AudioUIController()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class ButtonHover : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DepthButton logic;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SFX_2DHook hoverSFX;

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xBE9728", Offset = "0xBE9728", VA = "0xBE9728")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xBE9854", Offset = "0xBE9854", VA = "0xBE9854")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xBE9890", Offset = "0xBE9890", VA = "0xBE9890", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xBE98B0", Offset = "0xBE98B0", VA = "0xBE98B0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xBE98B4", Offset = "0xBE98B4", VA = "0xBE98B4")]
		public ButtonHover()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class DepthButton : MonoBehaviour
	{
		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float defaultPos;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EECC4", Offset = "0x8EECC4")]
		public float offset;

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xC09854", Offset = "0xC09854", VA = "0xC09854")]
		public void ResetPos(GameObject obj)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xC098F8", Offset = "0xC098F8", VA = "0xC098F8")]
		public void MoveForward(GameObject obj)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xC099AC", Offset = "0xC099AC", VA = "0xC099AC")]
		public void MoveBack(GameObject obj)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xC09A60", Offset = "0xC09A60", VA = "0xC09A60")]
		public DepthButton()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class HapticUIController : MonoBehaviour
	{
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float step;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider slider;

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xC1A1F8", Offset = "0xC1A1F8", VA = "0xC1A1F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xC1A270", Offset = "0xC1A270", VA = "0xC1A270")]
		public void HapticChange()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xC1A2F0", Offset = "0xC1A2F0", VA = "0xC1A2F0")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xC1A39C", Offset = "0xC1A39C", VA = "0xC1A39C")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xC1A448", Offset = "0xC1A448", VA = "0xC1A448")]
		public HapticUIController()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class MenuController : MonoBehaviour
	{
		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool isInGameMenu;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules inGameMenuActiveRule;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject optionsMenu;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject audioMenu;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject controlsMenu;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<GameObject> disabledInGame;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<GameObject> enabledInGame;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI subtitleText;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject uiHelpers;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SOGameEvent enableLaserEvent;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SOGameEvent disableLaserEvent;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI objectiveText;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private List<string> objectiveTokens;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isOpen;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool newGamePressed;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool continueGamePressed;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject continueButton;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject nonFadeSphere;

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xC6AEE0", Offset = "0xC6AEE0", VA = "0xC6AEE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xC6B2B4", Offset = "0xC6B2B4", VA = "0xC6B2B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xC6B398", Offset = "0xC6B398", VA = "0xC6B398")]
		private void ToggleInGameMenu()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xC6B4F8", Offset = "0xC6B4F8", VA = "0xC6B4F8")]
		private void OpenInGameMenu()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xC6B3F4", Offset = "0xC6B3F4", VA = "0xC6B3F4")]
		private void CloseInGameMenu()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xC6B608", Offset = "0xC6B608", VA = "0xC6B608")]
		private void OpenMenu()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xC6B240", Offset = "0xC6B240", VA = "0xC6B240")]
		private void CloseMenu()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xC6B658", Offset = "0xC6B658", VA = "0xC6B658")]
		public void NewGame()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xC6B710", Offset = "0xC6B710", VA = "0xC6B710")]
		public void ContinueGame()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xC6B7C8", Offset = "0xC6B7C8", VA = "0xC6B7C8")]
		public void ExitToMainMenu()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xC6B850", Offset = "0xC6B850", VA = "0xC6B850")]
		public void Credits()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xC6B8F8", Offset = "0xC6B8F8", VA = "0xC6B8F8")]
		public void ToggleSubtitle()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xC6BA08", Offset = "0xC6BA08", VA = "0xC6BA08")]
		public void ChooseLanguage(int newLanguage)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xC6BA6C", Offset = "0xC6BA6C", VA = "0xC6BA6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xC6BB4C", Offset = "0xC6BB4C", VA = "0xC6BB4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xC6BB54", Offset = "0xC6BB54", VA = "0xC6BB54")]
		public MenuController()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class SubtitlesUIController : MonoBehaviour
	{
		[Token(Token = "0x2000538")]
		private enum Property
		{
			[Token(Token = "0x4001FF7")]
			Depth,
			[Token(Token = "0x4001FF8")]
			Height,
			[Token(Token = "0x4001FF9")]
			Size
		}

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float step;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider slider;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Property property;

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xB56BB4", Offset = "0xB56BB4", VA = "0xB56BB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xB56CB4", Offset = "0xB56CB4", VA = "0xB56CB4")]
		public void VolumeChange()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xB56DE8", Offset = "0xB56DE8", VA = "0xB56DE8")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xB56E54", Offset = "0xB56E54", VA = "0xB56E54")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xB56CF4", Offset = "0xB56CF4", VA = "0xB56CF4")]
		private void SetProperty(Property targetProperty, float value)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xB56BF4", Offset = "0xB56BF4", VA = "0xB56BF4")]
		private float GetCurrentValue(Property targetProperty)
		{
			return default(float);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xB56EC0", Offset = "0xB56EC0", VA = "0xB56EC0")]
		public SubtitlesUIController()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class ToggleSubtitleButton : MonoBehaviour
	{
		[Token(Token = "0x6001626")]
		[Address(RVA = "0xB59688", Offset = "0xB59688", VA = "0xB59688")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xB59718", Offset = "0xB59718", VA = "0xB59718")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xB5979C", Offset = "0xB5979C", VA = "0xB5979C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xB5985C", Offset = "0xB5985C", VA = "0xB5985C")]
		public ToggleSubtitleButton()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class Meditation : Static<Meditation>
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules activateRules;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private uSignal meditateSignal;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnStartMeditating;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnMediationStarted;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent OnStopMeditating;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material detectionMaterial;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float meditationHapticsAmpMultiplier;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float meditationPulseFreqMultiplier;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float meditationTotalPulseTime;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float meditationSecondPulseTime;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float meditationRestartTime;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float fadeTime;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject fadeSphere;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SFX_2DHook detectMagicSFX;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isMeditating;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FadeSphere fadeRend;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FadeToken fadeToken;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float meditationTime;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float cancelTime;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float meditationProgress;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float meditationHapticTimer;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Transparency;

		[Token(Token = "0x1700016C")]
		public bool IsMeditating
		{
			[Token(Token = "0x600162A")]
			[Address(RVA = "0xC69F7C", Offset = "0xC69F7C", VA = "0xC69F7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016D")]
		public float MeditationProgress
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0xC69F84", Offset = "0xC69F84", VA = "0xC69F84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xC69F8C", Offset = "0xC69F8C", VA = "0xC69F8C")]
		private void Start()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xC6A160", Offset = "0xC6A160", VA = "0xC6A160")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xC6A29C", Offset = "0xC6A29C", VA = "0xC6A29C")]
		private void MeditateButtonPressed()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xC6A2E8", Offset = "0xC6A2E8", VA = "0xC6A2E8")]
		private void StartMeditating()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xC6A334", Offset = "0xC6A334", VA = "0xC6A334")]
		private void MeditateButtonReleased()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xC6A3E8", Offset = "0xC6A3E8", VA = "0xC6A3E8")]
		private void StopMeditating()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xC6A404", Offset = "0xC6A404", VA = "0xC6A404")]
		private void Update()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xC6A434", Offset = "0xC6A434", VA = "0xC6A434")]
		private void PlayEffects()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xC6A59C", Offset = "0xC6A59C", VA = "0xC6A59C")]
		private void StopEffects()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xC6A650", Offset = "0xC6A650", VA = "0xC6A650")]
		private void PlayHaptics()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xC6A86C", Offset = "0xC6A86C", VA = "0xC6A86C")]
		private void SetMeditationAudioVisuals()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xC6A920", Offset = "0xC6A920", VA = "0xC6A920")]
		public Meditation()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class MeditationParticles : MonoBehaviour
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float particleStartRadius;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float minParticleRadius;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timer;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem ps;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem.ShapeModule psShape;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool started;

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xC6AA08", Offset = "0xC6AA08", VA = "0xC6AA08")]
		private void Start()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xC6AA74", Offset = "0xC6AA74", VA = "0xC6AA74")]
		private void Update()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xC6AC74", Offset = "0xC6AC74", VA = "0xC6AC74")]
		private void UpdateRadius()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xC6AD54", Offset = "0xC6AD54", VA = "0xC6AD54")]
		public MeditationParticles()
		{
		}
	}
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DF21C", Offset = "0x8DF21C")]
	public class CurveFlyEffect : FlyEffect
	{
		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve curve;

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xC08D14", Offset = "0xC08D14", VA = "0xC08D14", Slot = "4")]
		public override Vector3 GetComingFlyTargetPosition(Vector3 currentPos, float delta)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xC08D88", Offset = "0xC08D88", VA = "0xC08D88")]
		public CurveFlyEffect()
		{
		}
	}
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DF270", Offset = "0x8DF270")]
	public abstract class FlyEffect : ScriptableObject
	{
		[Token(Token = "0x600163F")]
		[Address(RVA = "0xC12BC0", Offset = "0xC12BC0", VA = "0xC12BC0", Slot = "4")]
		public virtual Vector3 GetComingFlyTargetPosition(Vector3 currentPos, float delta = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xC08D90", Offset = "0xC08D90", VA = "0xC08D90")]
		protected FlyEffect()
		{
		}
	}
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DF2C4", Offset = "0x8DF2C4")]
	public class SinFlyEffect : FlyEffect
	{
		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected float amplitude;

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xB50FEC", Offset = "0xB50FEC", VA = "0xB50FEC", Slot = "4")]
		public override Vector3 GetComingFlyTargetPosition(Vector3 currentPos, float delta = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xB510CC", Offset = "0xB510CC", VA = "0xB510CC")]
		public SinFlyEffect()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class FlyToTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000539")]
		private enum TypeOfFloat
		{
			[Token(Token = "0x4001FFB")]
			OriginalGravity,
			[Token(Token = "0x4001FFC")]
			OriginalKinematic,
			[Token(Token = "0x4001FFD")]
			Both,
			[Token(Token = "0x4001FFE")]
			StickInPlace
		}

		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE68", Offset = "0x8DFE68")]
		private sealed class <FlyToTargetCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlyToTarget <>4__this;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <startPosition>5__2;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x170002A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EE2")]
				[Address(RVA = "0xC13330", Offset = "0xC13330", VA = "0xC13330", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE4")]
				[Address(RVA = "0xC1339C", Offset = "0xC1339C", VA = "0xC1339C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0xC12FA4", Offset = "0xC12FA4", VA = "0xC12FA4")]
			[DebuggerHidden]
			public <FlyToTargetCoroutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0xC1307C", Offset = "0xC1307C", VA = "0xC1307C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0xC13080", Offset = "0xC13080", VA = "0xC13080", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0xC13338", Offset = "0xC13338", VA = "0xC13338", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string targetName;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "InlineEditorAttribute", RVA = "0x8EEF70", Offset = "0x8EEF70")]
		private FlyEffect flyEffect;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float flightTimeToReachTarget;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve speedCurve;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TypeOfFloat typeOfFloat;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool closeCompassWhenStartFlying;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool lockCompassWhileFlying;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnReachedTarget;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool originalKinematic;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool originalGravity;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider matchingSnap;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rb;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lerpFloat;

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xC12BC4", Offset = "0xC12BC4", VA = "0xC12BC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xC12CA0", Offset = "0xC12CA0", VA = "0xC12CA0")]
		public void StartFlyToTarget()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xC12E70", Offset = "0xC12E70", VA = "0xC12E70")]
		private bool TryGetTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xC12F30", Offset = "0xC12F30", VA = "0xC12F30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F77B4", Offset = "0x8F77B4")]
		private IEnumerator FlyToTargetCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xC12FD0", Offset = "0xC12FD0", VA = "0xC12FD0")]
		private void SetPhysicProperties()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xC1306C", Offset = "0xC1306C", VA = "0xC1306C")]
		public FlyToTarget()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class RelocateWhenOutOfReach : MonoBehaviour
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool activate;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules relocateRules;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[StateInfoIdReference]
		private int shadowhandSpellId;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[StateInfoIdReference]
		private int currentSceneId;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LayerMask layerMask;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float delayUntilRespawn;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float maxGrabDistance;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float maxShadowhandDistance;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float maxDistance;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool isSnapping;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 underworldPlatform;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 skybridgePlatform;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float timer;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float frameTimerDelay;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float frameTimer;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private StateInst currentSceneStateInst;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private StateInst shadowhandSpellInst;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Camera mCamera;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private PhysicGrabale physicGrabale;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float timeSinceLastVOPlayed;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float voCooldown;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool? requestPlayVo;

		[Token(Token = "0x1700016E")]
		public bool IsSnapping
		{
			[Token(Token = "0x6001649")]
			[Address(RVA = "0xC80E20", Offset = "0xC80E20", VA = "0xC80E20")]
			set
			{
			}
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xC80E2C", Offset = "0xC80E2C", VA = "0xC80E2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xC80EBC", Offset = "0xC80EBC", VA = "0xC80EBC")]
		private void Start()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xC80F40", Offset = "0xC80F40", VA = "0xC80F40")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xC815F8", Offset = "0xC815F8", VA = "0xC815F8")]
		private void Update()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xC810EC", Offset = "0xC810EC", VA = "0xC810EC")]
		private bool ShouldCheckForRelocation()
		{
			return default(bool);
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xC812A8", Offset = "0xC812A8", VA = "0xC812A8")]
		private bool IsWithinGrabaleRange(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xC813AC", Offset = "0xC813AC", VA = "0xC813AC")]
		private bool IsBlocked(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xC81548", Offset = "0xC81548", VA = "0xC81548")]
		private bool IsOutOfMaxRange(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xC81358", Offset = "0xC81358", VA = "0xC81358")]
		private void StartTimer(Action OnReachedTime)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xC8170C", Offset = "0xC8170C", VA = "0xC8170C")]
		private void Relocate()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xC818BC", Offset = "0xC818BC", VA = "0xC818BC")]
		private Vector3 GetRandomSafePositionInUnderworld(int maxAttempt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xC81A0C", Offset = "0xC81A0C", VA = "0xC81A0C")]
		private Vector3 GetRandomSafePositionInSkybridge(int maxAttempt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xC81B5C", Offset = "0xC81B5C", VA = "0xC81B5C")]
		private Vector3 GetRandomSafePositionInNormalScenes(int maxAttempt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xC81C94", Offset = "0xC81C94", VA = "0xC81C94")]
		public void ActivateRelocation()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xC81CA0", Offset = "0xC81CA0", VA = "0xC81CA0")]
		public RelocateWhenOutOfReach()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class Shudder : MonoBehaviour
	{
		[Token(Token = "0x200053B")]
		private delegate void RotationCalculation();

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool shudder;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x8EF10C", Offset = "0x8EF10C")]
		[SerializeField]
		private bool xPosition;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float seedXT;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF168", Offset = "0x8EF168")]
		[SerializeField]
		private float noiseAmplitudeXT;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF1B8", Offset = "0x8EF1B8")]
		[SerializeField]
		private float noiseSpeedXT;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool yPosition;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float seedYT;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF218", Offset = "0x8EF218")]
		[SerializeField]
		private float noiseAmplitudeYT;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF268", Offset = "0x8EF268")]
		[SerializeField]
		private float noiseSpeedYT;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool zPosition;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float seedZT;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF2C8", Offset = "0x8EF2C8")]
		[SerializeField]
		private float noiseAmplitudeZT;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF318", Offset = "0x8EF318")]
		[SerializeField]
		private float noiseSpeedZT;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x8EF368", Offset = "0x8EF368")]
		[SerializeField]
		private bool xRotation;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float seedXR;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF3C4", Offset = "0x8EF3C4")]
		[SerializeField]
		private float noiseAmplitudeXR;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF414", Offset = "0x8EF414")]
		[SerializeField]
		private float noiseSpeedXR;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool yRotation;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float seedYR;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF474", Offset = "0x8EF474")]
		[SerializeField]
		private float noiseAmplitudeYR;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF4C4", Offset = "0x8EF4C4")]
		[SerializeField]
		private float noiseSpeedYR;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool zRotation;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float seedZR;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF524", Offset = "0x8EF524")]
		[SerializeField]
		private float noiseAmplitudeZR;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8EF574", Offset = "0x8EF574")]
		[SerializeField]
		private float noiseSpeedZR;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool rotation;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 originalPosition;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion originalRotation;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RotationCalculation rotationCalculation;

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xB4F278", Offset = "0xB4F278", VA = "0xB4F278")]
		private void Awake()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xB4F4B8", Offset = "0xB4F4B8", VA = "0xB4F4B8")]
		private void RotateXYZ()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xB4F67C", Offset = "0xB4F67C", VA = "0xB4F67C")]
		private void RotateXY()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xB4F840", Offset = "0xB4F840", VA = "0xB4F840")]
		private void RotateXZ()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xB4FA04", Offset = "0xB4FA04", VA = "0xB4FA04")]
		private void RotateYZ()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xB4FBB4", Offset = "0xB4FBB4", VA = "0xB4FBB4")]
		private void RotateX()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xB4FD34", Offset = "0xB4FD34", VA = "0xB4FD34")]
		private void RotateY()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xB4FEAC", Offset = "0xB4FEAC", VA = "0xB4FEAC")]
		private void RotateZ()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xB50024", Offset = "0xB50024", VA = "0xB50024")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xB50198", Offset = "0xB50198", VA = "0xB50198")]
		private float CalculateNoise(float noiseSpeed, float seed, float noiseAmplitude)
		{
			return default(float);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xB50478", Offset = "0xB50478", VA = "0xB50478")]
		public void StartShudder()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xB50484", Offset = "0xB50484", VA = "0xB50484")]
		public void StopShudder()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xB5048C", Offset = "0xB5048C", VA = "0xB5048C")]
		public Shudder()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class CompassBlockCanvasController : MonoBehaviour
	{
		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject leftCanvas;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject rightCanvas;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEventHandSide compassBlock;

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xBEB208", Offset = "0xBEB208", VA = "0xBEB208")]
		public void OnCompassBlock(int inputSide)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xBEB2BC", Offset = "0xBEB2BC", VA = "0xBEB2BC")]
		public CompassBlockCanvasController()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class PlanarCompass : Static<PlanarCompass>
	{
		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules activeCompassRule;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent OnOpenedCompass;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnClosedCompass;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float screenFadeTime;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject screenFadeSphere;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EF634", Offset = "0x8EF634")]
		[SerializeField]
		private uSignal OpenCompassSignal;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uSignal CompassBlockSignal;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EF690", Offset = "0x8EF690")]
		[SerializeField]
		private SFX_2DHook openCloseSound;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isLocked;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isOpened;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float screenFadeTimer;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FadeSphere screenFadeRend;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FadeToken fadeToken;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 orbStartPos;

		[Token(Token = "0x1700016F")]
		public bool IsOpen
		{
			[Token(Token = "0x6001668")]
			[Address(RVA = "0xC73740", Offset = "0xC73740", VA = "0xC73740")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000170")]
		public bool IsLocked
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0xC73748", Offset = "0xC73748", VA = "0xC73748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600166A")]
			[Address(RVA = "0xC73750", Offset = "0xC73750", VA = "0xC73750")]
			set
			{
			}
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xC7375C", Offset = "0xC7375C", VA = "0xC7375C")]
		private void Start()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xC73808", Offset = "0xC73808", VA = "0xC73808")]
		public void OnReachedNewFlow()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xC7380C", Offset = "0xC7380C", VA = "0xC7380C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xC738F0", Offset = "0xC738F0", VA = "0xC738F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xC739D4", Offset = "0xC739D4", VA = "0xC739D4")]
		private void ToggleCompass(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xC73ADC", Offset = "0xC73ADC", VA = "0xC73ADC")]
		private void CloseCompass()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xC73B2C", Offset = "0xC73B2C", VA = "0xC73B2C")]
		private void OpenCompass()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xC6D628", Offset = "0xC6D628", VA = "0xC6D628")]
		public void ForceCloseCompass()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xC73B9C", Offset = "0xC73B9C", VA = "0xC73B9C")]
		public PlanarCompass()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class PlanarCompassTranslation : MonoBehaviour
	{
		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] planarCompassText;

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xC73BF4", Offset = "0xC73BF4", VA = "0xC73BF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xC73BF8", Offset = "0xC73BF8", VA = "0xC73BF8")]
		public void CheckLanguage()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xC73C78", Offset = "0xC73C78", VA = "0xC73C78")]
		private void UpdateTranslationText(bool isEnabled)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xC73D08", Offset = "0xC73D08", VA = "0xC73D08")]
		public PlanarCompassTranslation()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class PlanarKey : ShadowHandable
	{
		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EF6EC", Offset = "0x8EF6EC")]
		[StateInfoIdReference]
		[SerializeField]
		private int flow;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject keyEffect;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Dialogue portalKeyGrabbedVO;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Dialogue portalKeyNotYetFedVO;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float timeUntilReminderVO;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UnityEvent OnConsumed;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private StateInst flowStateInst;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool isInPlanarKeyReceiver;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float voTimer;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool isVOTimerRunning;

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xC73D10", Offset = "0xC73D10", VA = "0xC73D10", Slot = "13")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xC73D80", Offset = "0xC73D80", VA = "0xC73D80", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xC73DF4", Offset = "0xC73DF4", VA = "0xC73DF4")]
		private void StartVoTimer()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xC73E08", Offset = "0xC73E08", VA = "0xC73E08", Slot = "9")]
		protected override void GrabStarted()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xC73E4C", Offset = "0xC73E4C", VA = "0xC73E4C", Slot = "11")]
		protected override void GrabReleased()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xC74014", Offset = "0xC74014", VA = "0xC74014")]
		private void Absorb()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xC74060", Offset = "0xC74060", VA = "0xC74060")]
		public void EnterPlanarKeyReceiver()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xC73F18", Offset = "0xC73F18", VA = "0xC73F18")]
		private void ActivateEffect(bool turnOn)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xC74070", Offset = "0xC74070", VA = "0xC74070")]
		public void ExitPlanarKeyReceiver()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xC7407C", Offset = "0xC7407C", VA = "0xC7407C")]
		public PlanarKey()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class PlanarKeyReceiver : Static<PlanarKeyReceiver>
	{
		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject glowObject;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SFX_3DHook keyEatenSFX;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnUnlockedFlow;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlanarKey keyInReceiver;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hovering;

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xC7408C", Offset = "0xC7408C", VA = "0xC7408C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xC73FBC", Offset = "0xC73FBC", VA = "0xC73FBC")]
		public void AbsorbPlanarKey()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xC74188", Offset = "0xC74188", VA = "0xC74188")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xC742A4", Offset = "0xC742A4", VA = "0xC742A4")]
		public PlanarKeyReceiver()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class FlowController : Static<FlowController>
	{
		[Serializable]
		[Token(Token = "0x200053C")]
		private struct FlowData
		{
			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[StateInfoIdReference]
			[SerializeField]
			private int flowId;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			private SceneDef sceneDef;

			[Token(Token = "0x170002A3")]
			public int FlowID
			{
				[Token(Token = "0x6001EE9")]
				[Address(RVA = "0x999D54", Offset = "0x999D54", VA = "0x999D54")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002A4")]
			public SceneDef SceneDef
			{
				[Token(Token = "0x6001EEA")]
				[Address(RVA = "0x999D5C", Offset = "0x999D5C", VA = "0x999D5C")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE78", Offset = "0x8DFE78")]
		private sealed class <MarkSceneAsVisitedCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowController <>4__this;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneDef loadedWorld;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EEE")]
				[Address(RVA = "0xC11BB8", Offset = "0xC11BB8", VA = "0xC11BB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EF0")]
				[Address(RVA = "0xC11C24", Offset = "0xC11C24", VA = "0xC11C24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xC11894", Offset = "0xC11894", VA = "0xC11894")]
			[DebuggerHidden]
			public <MarkSceneAsVisitedCoroutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xC11ABC", Offset = "0xC11ABC", VA = "0xC11ABC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xC11AC0", Offset = "0xC11AC0", VA = "0xC11AC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xC11BC0", Offset = "0xC11BC0", VA = "0xC11BC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<FlowData> flows;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules showNecromancerCubemapRule;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private uSignal StartFlowTransitionSignal;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private uSignal OnReachNewFlow;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, SceneDef> flowSceneDefsLookUp;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<SceneDef, int> flowIdsLookUp;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int currentFlowStateID;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int previousFlowStateID;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EF808", Offset = "0x8EF808")]
		[SerializeField]
		private SFX_2DHook firstVisitSound;

		[Token(Token = "0x17000171")]
		public int CurrentFlowStateID
		{
			[Token(Token = "0x6001686")]
			[Address(RVA = "0xC10FDC", Offset = "0xC10FDC", VA = "0xC10FDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001687")]
			[Address(RVA = "0xC10FE4", Offset = "0xC10FE4", VA = "0xC10FE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public bool InMaterialWorld
		{
			[Token(Token = "0x6001688")]
			[Address(RVA = "0xC10FEC", Offset = "0xC10FEC", VA = "0xC10FEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xC11060", Offset = "0xC11060", VA = "0xC11060")]
		public bool IsMaterialWorld(int flowID)
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xC110DC", Offset = "0xC110DC", VA = "0xC110DC")]
		public void TravelToFlow(int flowID)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xC11264", Offset = "0xC11264", VA = "0xC11264", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xC113D4", Offset = "0xC113D4", VA = "0xC113D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xC113D8", Offset = "0xC113D8", VA = "0xC113D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xC11544", Offset = "0xC11544", VA = "0xC11544")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xC116B0", Offset = "0xC116B0", VA = "0xC116B0")]
		private void SceneLoaded(SceneDef loadedWorld)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xC11814", Offset = "0xC11814", VA = "0xC11814")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7818", Offset = "0x8F7818")]
		private IEnumerator MarkSceneAsVisitedCoroutine(SceneDef loadedWorld)
		{
			return null;
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xC118C0", Offset = "0xC118C0", VA = "0xC118C0")]
		public Color GetPrimaryColor(int flowID)
		{
			return default(Color);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xC11938", Offset = "0xC11938", VA = "0xC11938")]
		public Cubemap GetCubemap(int flowID)
		{
			return null;
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xC119D0", Offset = "0xC119D0", VA = "0xC119D0")]
		public FlowController()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public enum FlowState
	{
		[Token(Token = "0x40015F9")]
		Locked,
		[Token(Token = "0x40015FA")]
		Unlocked,
		[Token(Token = "0x40015FB")]
		BeenVisited
	}
	[Token(Token = "0x200033E")]
	public class FlowParticles : MonoBehaviour
	{
		[Token(Token = "0x200053E")]
		private enum FlowPerc
		{
			[Token(Token = "0x400200B")]
			Zero,
			[Token(Token = "0x400200C")]
			Twenty,
			[Token(Token = "0x400200D")]
			Fourty,
			[Token(Token = "0x400200E")]
			Sixty,
			[Token(Token = "0x400200F")]
			Eighty,
			[Token(Token = "0x4002010")]
			OneHundred
		}

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FlowPerc startPercentage;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float gradientVariation;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem.MinMaxGradient baseColor;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSys;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem.MainModule particleSysMain;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float requrieStartPercentage;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float requriePreviousPercentage;

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xC11C3C", Offset = "0xC11C3C", VA = "0xC11C3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xC11CAC", Offset = "0xC11CAC", VA = "0xC11CAC")]
		private void SetRequirePercentages()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xC11D30", Offset = "0xC11D30", VA = "0xC11D30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xC120E4", Offset = "0xC120E4", VA = "0xC120E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xC12498", Offset = "0xC12498", VA = "0xC12498")]
		private void SetParticleColor(Portal portal)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xC12748", Offset = "0xC12748", VA = "0xC12748")]
		private void StopParticles()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xC12838", Offset = "0xC12838", VA = "0xC12838")]
		private void PlayParticle(float flowPercentage)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xC12918", Offset = "0xC12918", VA = "0xC12918")]
		private void StopParticles(float flowPercentage)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xC12964", Offset = "0xC12964", VA = "0xC12964")]
		public FlowParticles()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class FlowTransition : UnityEngine.Object
	{
		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int currentFlow;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int targetFlow;

		[Token(Token = "0x17000173")]
		public int CurrentFlow
		{
			[Token(Token = "0x600169D")]
			[Address(RVA = "0xC12978", Offset = "0xC12978", VA = "0xC12978")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000174")]
		public int TargetFlow
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0xC12980", Offset = "0xC12980", VA = "0xC12980")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xC111E4", Offset = "0xC111E4", VA = "0xC111E4")]
		public FlowTransition(int currentFlow, int targetFlow)
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class Portal : Dragable
	{
		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EF884", Offset = "0x8EF884")]
		[SerializeField]
		private AdvancedGameRule localPullableRules;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ActivationConditions spellOrb;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject effects;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private UnityEvent OnLocalRuleFailed;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private StateInst flowStateInst;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 startPos;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool isOpening;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool hasBeenOpened;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Transparency;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xC7523C", Offset = "0xC7523C", VA = "0xC7523C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xC752F0", Offset = "0xC752F0", VA = "0xC752F0")]
		private void SetPortalTransparency()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xC753CC", Offset = "0xC753CC", VA = "0xC753CC")]
		private void ToggleEffects(bool setActive)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xC755F4", Offset = "0xC755F4", VA = "0xC755F4", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xC75640", Offset = "0xC75640", VA = "0xC75640", Slot = "12")]
		protected override void GrabFailed()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xC758B4", Offset = "0xC758B4", VA = "0xC758B4", Slot = "7")]
		protected override void DragStarted()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xC7596C", Offset = "0xC7596C", VA = "0xC7596C")]
		private void PortalStarted()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xC75A8C", Offset = "0xC75A8C", VA = "0xC75A8C", Slot = "9")]
		protected override void DragCompleted()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xC75B2C", Offset = "0xC75B2C", VA = "0xC75B2C")]
		private void PortalCompleted()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xC75CF8", Offset = "0xC75CF8", VA = "0xC75CF8", Slot = "10")]
		protected override void DragCancelled()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xC75D98", Offset = "0xC75D98", VA = "0xC75D98")]
		private void PortalCanceled()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xC75C94", Offset = "0xC75C94", VA = "0xC75C94")]
		private void Reset()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xC75E10", Offset = "0xC75E10", VA = "0xC75E10", Slot = "11")]
		protected override bool IsDraggable()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xC75470", Offset = "0xC75470", VA = "0xC75470")]
		private bool IsGrabable()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xC75EEC", Offset = "0xC75EEC", VA = "0xC75EEC", Slot = "8")]
		protected override void DragRunning(Vector3 handPos, float percentage, float distance, Vector3 direction)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xC761C4", Offset = "0xC761C4", VA = "0xC761C4")]
		public Portal()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class PortalController : Static<PortalController>
	{
		[Serializable]
		[Token(Token = "0x200053F")]
		private struct PortalData
		{
			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[StateInfoIdReference]
			[SerializeField]
			private int flowId;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			private Portal portal;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StateInst stateInst;

			[Token(Token = "0x170002A7")]
			public int FlowID
			{
				[Token(Token = "0x6001EF1")]
				[Address(RVA = "0x99A6B0", Offset = "0x99A6B0", VA = "0x99A6B0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002A8")]
			public Portal Portal
			{
				[Token(Token = "0x6001EF2")]
				[Address(RVA = "0x99A6B8", Offset = "0x99A6B8", VA = "0x99A6B8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A9")]
			public int FlowValue
			{
				[Token(Token = "0x6001EF3")]
				[Address(RVA = "0x99A6C0", Offset = "0x99A6C0", VA = "0x99A6C0")]
				get
				{
					return default(int);
				}
			}
		}

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<PortalData> portals;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EF920", Offset = "0x8EF920")]
		[SerializeField]
		private uSignal OpenPortalSignal;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EF96C", Offset = "0x8EF96C")]
		[SerializeField]
		private SFX_2DHook portalCancel;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SFX_2DHook portalEnd;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SFX_2DHook portalMid;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_2DHook portalStart;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Dialogue portalBlockVO;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent OnPortalStarted;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent OnPortalReleased;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action<Portal> PortalStartedCallback;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action PortalCancelledCallback;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action PortalCompletedCallback;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Action<float> PortalTearingWithPercentageParamCallback;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action<Vector3> PortalTearingWithHandPosParamCallback;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action<float> PortalTearingWithDistanceParamCallback;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<Portal, int> portalIdsLookUp;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastFlowPercentage;

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xC76230", Offset = "0xC76230", VA = "0xC76230", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xC76374", Offset = "0xC76374", VA = "0xC76374")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xC76378", Offset = "0xC76378", VA = "0xC76378")]
		public void RefreshPortals()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xC759C0", Offset = "0xC759C0", VA = "0xC759C0")]
		public void PortalStarted(Portal portal)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xC76104", Offset = "0xC76104", VA = "0xC76104")]
		public void PortalTearingWithPercentageParam(float percentage)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xC76560", Offset = "0xC76560", VA = "0xC76560")]
		private void PortalReachedPercentage(float percentage)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xC76150", Offset = "0xC76150", VA = "0xC76150")]
		public void PortalTearingWithDistanceParam(float distance)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xC76074", Offset = "0xC76074", VA = "0xC76074")]
		public void PortalTearingWithHandPosParam(Vector3 handPos)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xC75B68", Offset = "0xC75B68", VA = "0xC75B68")]
		public void PortalCompleted(Portal portal)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xC75DA0", Offset = "0xC75DA0", VA = "0xC75DA0")]
		public void PortalCancelled()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xC75E24", Offset = "0xC75E24", VA = "0xC75E24")]
		public bool IsPortalOfCurrentFlow(Portal portal)
		{
			return default(bool);
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xC765E8", Offset = "0xC765E8", VA = "0xC765E8")]
		private bool IsMaterialWorldPortal(Portal portal)
		{
			return default(bool);
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xC75764", Offset = "0xC75764", VA = "0xC75764")]
		public bool IsRequiredTravelBackToMaterialWorldFirst(Portal portal)
		{
			return default(bool);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xC75820", Offset = "0xC75820", VA = "0xC75820")]
		public void PlayPortalBlockVO()
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xC766AC", Offset = "0xC766AC", VA = "0xC766AC")]
		public Color GetPrimaryColor(Portal portal)
		{
			return default(Color);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xC76770", Offset = "0xC76770", VA = "0xC76770")]
		public Cubemap GetCubemap(Portal portal)
		{
			return null;
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xC76834", Offset = "0xC76834", VA = "0xC76834")]
		public PortalController()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public enum PortalState
	{
		[Token(Token = "0x4001622")]
		Locked,
		[Token(Token = "0x4001623")]
		Unlocked
	}
	[Token(Token = "0x2000343")]
	public class PortalParticlesController : MonoBehaviour
	{
		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera mCamera;

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xC768E4", Offset = "0xC768E4", VA = "0xC768E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xC7690C", Offset = "0xC7690C", VA = "0xC7690C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xC76B0C", Offset = "0xC76B0C", VA = "0xC76B0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xC76D0C", Offset = "0xC76D0C", VA = "0xC76D0C")]
		private void PortalStarted(Portal portal)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xC76E08", Offset = "0xC76E08", VA = "0xC76E08")]
		private void EnableAllParticles()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xC76E9C", Offset = "0xC76E9C", VA = "0xC76E9C")]
		private void PortalCancelled()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xC76EA0", Offset = "0xC76EA0", VA = "0xC76EA0")]
		private void DisableAllParticles()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xC76F34", Offset = "0xC76F34", VA = "0xC76F34")]
		public PortalParticlesController()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class PortalRenderController : StaticInstance<PortalRenderController>
	{
		[Token(Token = "0x2000540")]
		public enum PortalState
		{
			[Token(Token = "0x4002015")]
			None,
			[Token(Token = "0x4002016")]
			Opening,
			[Token(Token = "0x4002017")]
			Cancelling,
			[Token(Token = "0x4002018")]
			Closing
		}

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject portalFill;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float portalFadeTime;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float portalFillTime;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EFA48", Offset = "0x8EFA48")]
		private float portalFillCreepAmount;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EFA8C", Offset = "0x8EFA8C")]
		private float portalCancelCloseSpeed;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8EFAD0", Offset = "0x8EFAD0")]
		private float portalTearSpeed;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float portalStartBuffer;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float portalWashPerFrame;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent OnPortalFullyClosed;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float portalFadeTimer;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float portalFillTimer;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer portalFillRend;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera mCamera;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int DissolveDirection;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int FlowCubeMap;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int EdgeColour;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int DissolveAmount;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int PortalWash;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int PortalAlpha;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PortalState currentPortalState;

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xC76F3C", Offset = "0xC76F3C", VA = "0xC76F3C")]
		private new void Awake()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xC76FB0", Offset = "0xC76FB0", VA = "0xC76FB0")]
		public void OnReachNewFlow()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xC76FC8", Offset = "0xC76FC8", VA = "0xC76FC8")]
		public void ReParent()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xC77104", Offset = "0xC77104", VA = "0xC77104")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xC7742C", Offset = "0xC7742C", VA = "0xC7742C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xC77820", Offset = "0xC77820", VA = "0xC77820")]
		private void PortalStated(Portal portal)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xC77B04", Offset = "0xC77B04", VA = "0xC77B04")]
		private void PortalTearingWithDistance(float distance)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xC77BCC", Offset = "0xC77BCC", VA = "0xC77BCC")]
		private void PortalOpened()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xC77BD8", Offset = "0xC77BD8", VA = "0xC77BD8")]
		private void PortalCancelled()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xC77BE4", Offset = "0xC77BE4", VA = "0xC77BE4")]
		private void Update()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xC77BE8", Offset = "0xC77BE8", VA = "0xC77BE8")]
		private void UpdatePortalState()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xC780A0", Offset = "0xC780A0", VA = "0xC780A0")]
		private void SetPortalState(PortalState portalState)
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xC76FBC", Offset = "0xC76FBC", VA = "0xC76FBC")]
		public void ClosePortal()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xC780A8", Offset = "0xC780A8", VA = "0xC780A8")]
		public PortalRenderController()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DF318", Offset = "0x8DF318")]
	public class TearParticles : MonoBehaviour
	{
		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float particleSpeed;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float lifetimeTillDistance;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float growSpeedMultiplier;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float gradientVariation;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera mCamera;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem particleSys;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.ShapeModule particleSysShape;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.TrailModule particleSysTrail;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3? startPos;

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xB57290", Offset = "0xB57290", VA = "0xB57290")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xB57328", Offset = "0xB57328", VA = "0xB57328")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xB57778", Offset = "0xB57778", VA = "0xB57778")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xB57BC8", Offset = "0xB57BC8", VA = "0xB57BC8")]
		private void MoveParticles(Vector3 handPos)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xB57E14", Offset = "0xB57E14", VA = "0xB57E14")]
		private void UpdateEmitterSize(float pullDist)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xB57E28", Offset = "0xB57E28", VA = "0xB57E28")]
		private void UpdateParticleColor(Portal portal)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xB58148", Offset = "0xB58148", VA = "0xB58148")]
		private void PlayParticle(Vector3 handPos)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xB58270", Offset = "0xB58270", VA = "0xB58270")]
		private void StopParticles()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xB58294", Offset = "0xB58294", VA = "0xB58294")]
		public TearParticles()
		{
		}
	}
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8DF37C", Offset = "0x8DF37C")]
	public class QuestDefReference : PropertyAttribute
	{
		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xC7AD50", Offset = "0xC7AD50", VA = "0xC7AD50")]
		public QuestDefReference()
		{
		}
	}
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8DF390", Offset = "0x8DF390")]
	public class StateInfoIdReference : PropertyAttribute
	{
		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xB55A0C", Offset = "0xB55A0C", VA = "0xB55A0C")]
		public StateInfoIdReference()
		{
		}
	}
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8DF3A4", Offset = "0x8DF3A4")]
	public class StateInfoValueReference : PropertyAttribute
	{
		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xB55A14", Offset = "0xB55A14", VA = "0xB55A14")]
		public StateInfoValueReference()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000349")]
	public class QuestDef : ScriptableObject
	{
		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string niceName;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int id;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private QuestType questType;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EFBB0", Offset = "0x8EFBB0")]
		public QuestDef[] subQuests;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EFBE8", Offset = "0x8EFBE8")]
		public QuestDef[] preRequisites;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EFC20", Offset = "0x8EFC20")]
		public QuestDef[] failures;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EFC58", Offset = "0x8EFC58")]
		public int totalProgress;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EFCA4", Offset = "0x8EFCA4")]
		public int initialProgress;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EFCF0", Offset = "0x8EFCF0")]
		public int failProgress;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EFD3C", Offset = "0x8EFD3C")]
		public int minProgress;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8EFD88", Offset = "0x8EFD88")]
		public int subQuestsRequired;

		[NonSerialized]
		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool requiredByFoldout;

		[NonSerialized]
		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool advancedFoldout;

		[NonSerialized]
		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool failsOnCompleteFoldout;

		[NonSerialized]
		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<QuestDef> parents;

		[Token(Token = "0x17000175")]
		public int ID
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xC79C38", Offset = "0xC79C38", VA = "0xC79C38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xC79C40", Offset = "0xC79C40", VA = "0xC79C40")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public string NiceName
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xC79C48", Offset = "0xC79C48", VA = "0xC79C48")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xC79C50", Offset = "0xC79C50", VA = "0xC79C50")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public QuestType QuestType
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xC79C58", Offset = "0xC79C58", VA = "0xC79C58")]
			get
			{
				return default(QuestType);
			}
		}

		[Token(Token = "0x17000178")]
		public int SubQuestsAmount
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xC79C60", Offset = "0xC79C60", VA = "0xC79C60")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000179")]
		public int PreRequisiteAmount
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0xC79C80", Offset = "0xC79C80", VA = "0xC79C80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017A")]
		public int ParentsAmount
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xC79CA0", Offset = "0xC79CA0", VA = "0xC79CA0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017B")]
		public int FailureAmount
		{
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xC79CF4", Offset = "0xC79CF4", VA = "0xC79CF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xC79D14", Offset = "0xC79D14", VA = "0xC79D14")]
		public void RemoveAllSubQuests()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xC79DEC", Offset = "0xC79DEC", VA = "0xC79DEC")]
		public bool ContainsSubQuest(QuestDef target)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xC79E4C", Offset = "0xC79E4C", VA = "0xC79E4C")]
		public bool ContainsPreRequisitesQuest(QuestDef target)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xC79EAC", Offset = "0xC79EAC", VA = "0xC79EAC")]
		public bool ContainsFailureQuest(QuestDef target)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xC79F0C", Offset = "0xC79F0C", VA = "0xC79F0C")]
		public void AddParentQuest(QuestDef newQuest)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xC79FA8", Offset = "0xC79FA8", VA = "0xC79FA8")]
		public void AssignSelfAsParentToAllSubQuests()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xC7A08C", Offset = "0xC7A08C", VA = "0xC7A08C")]
		public bool IsHavingNullPreRequisites()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xC7A164", Offset = "0xC7A164", VA = "0xC7A164")]
		public bool IsHavingSelfAsPreRequisites()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xC7A244", Offset = "0xC7A244", VA = "0xC7A244")]
		public bool IsHavingNullSubQuest()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xC7A31C", Offset = "0xC7A31C", VA = "0xC7A31C")]
		public bool IsHavingSelfAsSubQuest()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xC7A3FC", Offset = "0xC7A3FC", VA = "0xC7A3FC")]
		public void RemovePreRequisitionQuest(QuestDef target)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xC7A498", Offset = "0xC7A498", VA = "0xC7A498")]
		public void RemoveSubQuest(QuestDef target)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xC7A534", Offset = "0xC7A534", VA = "0xC7A534")]
		public void RemoveFailureQuest(QuestDef target)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xC7A5D0", Offset = "0xC7A5D0", VA = "0xC7A5D0")]
		public QuestDef GetPreRequisiteQuest(int index)
		{
			return null;
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xC7A6D8", Offset = "0xC7A6D8", VA = "0xC7A6D8")]
		public QuestDef GetParentQuest(int index)
		{
			return null;
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xC7A7DC", Offset = "0xC7A7DC", VA = "0xC7A7DC")]
		public QuestDef GetSubQuest(int index)
		{
			return null;
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xC7A8E4", Offset = "0xC7A8E4", VA = "0xC7A8E4")]
		public QuestDef GetFailureQuest(int index)
		{
			return null;
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xC7A9EC", Offset = "0xC7A9EC", VA = "0xC7A9EC")]
		public void AddPreRequisitionQuest(QuestDef target)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xC7AA88", Offset = "0xC7AA88", VA = "0xC7AA88")]
		public void AddSubQuest(QuestDef target)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xC7AB24", Offset = "0xC7AB24", VA = "0xC7AB24")]
		public QuestDef()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public enum QuestType
	{
		[Token(Token = "0x4001653")]
		Progress,
		[Token(Token = "0x4001654")]
		TaskList,
		[Token(Token = "0x4001655")]
		OrderedList
	}
	[Token(Token = "0x200034B")]
	public class QuestsDatabase : ScriptableObject
	{
		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<QuestDef> QuestDefs;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<StateDef> StateDefs;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string defaultSave;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static QuestsDatabase instance;

		[Token(Token = "0x1700017C")]
		public static QuestsDatabase Instance
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0xC7F590", Offset = "0xC7F590", VA = "0xC7F590")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xC7F5E0", Offset = "0xC7F5E0", VA = "0xC7F5E0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xC7F634", Offset = "0xC7F634", VA = "0xC7F634")]
		public QuestDef TryGetQuestDef(int id)
		{
			return null;
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xC7F750", Offset = "0xC7F750", VA = "0xC7F750")]
		public StateDef TryGetStateDef(int id)
		{
			return null;
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xC7F86C", Offset = "0xC7F86C", VA = "0xC7F86C")]
		public void AddQuest(QuestDef newQuest)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xC7F8D4", Offset = "0xC7F8D4", VA = "0xC7F8D4")]
		public void AddState(StateDef newState)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xC7F93C", Offset = "0xC7F93C", VA = "0xC7F93C")]
		public void RemoveQuest(QuestDef questDef)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xC7F9A4", Offset = "0xC7F9A4", VA = "0xC7F9A4")]
		public QuestsDatabase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034C")]
	public class StateDef : ScriptableObject
	{
		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string niceName;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int id;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StateInfo[] possibleStates;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int initialState;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool showLog;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<int> ids;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> descriptions;

		[Token(Token = "0x1700017D")]
		public int ID
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0xB557B0", Offset = "0xB557B0", VA = "0xB557B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600170B")]
			[Address(RVA = "0xB557B8", Offset = "0xB557B8", VA = "0xB557B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public string NiceName
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0xB557C0", Offset = "0xB557C0", VA = "0xB557C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600170D")]
			[Address(RVA = "0xB557C8", Offset = "0xB557C8", VA = "0xB557C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool ShowLog
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0xB557D0", Offset = "0xB557D0", VA = "0xB557D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000180")]
		public int InitialState
		{
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xB557D8", Offset = "0xB557D8", VA = "0xB557D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xB557E0", Offset = "0xB557E0", VA = "0xB557E0")]
		private void Init()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xB55928", Offset = "0xB55928", VA = "0xB55928")]
		public List<int> GetPossibleStateIds()
		{
			return null;
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xB5594C", Offset = "0xB5594C", VA = "0xB5594C")]
		public List<string> GetPossibleStateDescs()
		{
			return null;
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xB55970", Offset = "0xB55970", VA = "0xB55970")]
		public StateInfo GetStateInfo(int id)
		{
			return null;
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xB559DC", Offset = "0xB559DC", VA = "0xB559DC")]
		public StateDef()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034D")]
	public class QuestData
	{
		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string saveName;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quests quests;

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xC79A60", Offset = "0xC79A60", VA = "0xC79A60")]
		public void Initialize(QuestsDatabase questsDatabase)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xC79BD4", Offset = "0xC79BD4", VA = "0xC79BD4")]
		public QuestData()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public static class QuestHelpers
	{
		[Token(Token = "0x6001717")]
		[Address(RVA = "0xC7B874", Offset = "0xC7B874", VA = "0xC7B874")]
		public static string MakePathSafe(string value, string invalidPathChars = "")
		{
			return null;
		}

		[Token(Token = "0x6001718")]
		public static bool Evaluate<T>(this List<T> ruleList) where T : Rule
		{
			return default(bool);
		}

		[Token(Token = "0x6001719")]
		public static bool Evaluate<T>(this T[] ruleArray) where T : Rule
		{
			return default(bool);
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xC7B9B4", Offset = "0xC7B9B4", VA = "0xC7B9B4")]
		public static bool Evaluate(this GameRules[] rules)
		{
			return default(bool);
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xC7BA34", Offset = "0xC7BA34", VA = "0xC7BA34")]
		public static bool Evaluate(this List<GameRules> rules)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200034F")]
	public class QuestInst
	{
		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string niceName;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int defId;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool failState;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int progress;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool currentStep;

		[NonSerialized]
		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private QuestDef def;

		[NonSerialized]
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<QuestInst> parentQuests;

		[NonSerialized]
		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<QuestInst> childrenQuests;

		[NonSerialized]
		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<QuestInst> subQuests;

		[NonSerialized]
		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private QuestInst subQuestParent;

		[NonSerialized]
		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<QuestInst> totalChildQuests;

		[NonSerialized]
		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<QuestInst> failParentQuests;

		[NonSerialized]
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<QuestInst> failChildQuests;

		[NonSerialized]
		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int questDepth;

		[NonSerialized]
		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool depthSetComplete;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool cachedComplete;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool cachedActive;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] recurssionTypes;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int lastCount;

		[Token(Token = "0x17000181")]
		public int DefID
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0xC7BCE4", Offset = "0xC7BCE4", VA = "0xC7BCE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000182")]
		public List<QuestInst> AllChildrenQuests
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0xC7BCEC", Offset = "0xC7BCEC", VA = "0xC7BCEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public List<QuestInst> PureChildrenQuests
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0xC7BDC0", Offset = "0xC7BDC0", VA = "0xC7BDC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		public List<QuestInst> ParentQuests
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0xC7BDC8", Offset = "0xC7BDC8", VA = "0xC7BDC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		public List<QuestInst> SubQuests
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0xC7BDD0", Offset = "0xC7BDD0", VA = "0xC7BDD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public QuestInst SubQuestParent
		{
			[Token(Token = "0x6001723")]
			[Address(RVA = "0xC7BDD8", Offset = "0xC7BDD8", VA = "0xC7BDD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public QuestDef Def
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0xC7AF64", Offset = "0xC7AF64", VA = "0xC7AF64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public bool IsSubQuest
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0xC7D788", Offset = "0xC7D788", VA = "0xC7D788")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000189")]
		public bool IsTopLevelQuest
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0xC7D798", Offset = "0xC7D798", VA = "0xC7D798")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xC7BADC", Offset = "0xC7BADC", VA = "0xC7BADC")]
		public QuestInst()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xC7BBCC", Offset = "0xC7BBCC", VA = "0xC7BBCC")]
		public QuestInst(QuestDef def)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xC7BDE0", Offset = "0xC7BDE0", VA = "0xC7BDE0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xC7BFCC", Offset = "0xC7BFCC", VA = "0xC7BFCC")]
		private void LoadParentQuestsInst()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xC7C0D4", Offset = "0xC7C0D4", VA = "0xC7C0D4")]
		private void LoadFailureQuestsInst()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xC7C1DC", Offset = "0xC7C1DC", VA = "0xC7C1DC")]
		private void LoadSubQuestsInst()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xC7C388", Offset = "0xC7C388", VA = "0xC7C388")]
		public void SetSubQuest()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xC7C458", Offset = "0xC7C458", VA = "0xC7C458")]
		public void Progress()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xC7B0C0", Offset = "0xC7B0C0", VA = "0xC7B0C0")]
		public void Fail()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xC7C7A4", Offset = "0xC7C7A4", VA = "0xC7C7A4")]
		private void SubQuestChildFailed(QuestInst quest)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xC7C4F0", Offset = "0xC7C4F0", VA = "0xC7C4F0")]
		private void Completed()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xC7CB18", Offset = "0xC7CB18", VA = "0xC7CB18")]
		private void SubQuestCompleted(QuestInst quest)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xC7C8E0", Offset = "0xC7C8E0", VA = "0xC7C8E0")]
		private void NextQuestInList(QuestInst quest)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xC7CA3C", Offset = "0xC7CA3C", VA = "0xC7CA3C")]
		private void CheckActivate()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xC7CE64", Offset = "0xC7CE64", VA = "0xC7CE64")]
		public void Degress()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xC7B48C", Offset = "0xC7B48C", VA = "0xC7B48C")]
		public void ForceComplete()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xC7D024", Offset = "0xC7D024", VA = "0xC7D024")]
		private void ReEvaluateOtherQuestsInOrderList()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xC7D294", Offset = "0xC7D294", VA = "0xC7D294")]
		private void CompleteAllSubQuests()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xC7CEF0", Offset = "0xC7CEF0", VA = "0xC7CEF0")]
		public void ForceActivate()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xC7D1F8", Offset = "0xC7D1F8", VA = "0xC7D1F8")]
		private void CompleteAllParentQuests()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xC7D330", Offset = "0xC7D330", VA = "0xC7D330")]
		public void ResetQuest()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xC7D4B8", Offset = "0xC7D4B8", VA = "0xC7D4B8")]
		private void CompleteChildQuestsInOrderList()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xC7D5E0", Offset = "0xC7D5E0", VA = "0xC7D5E0")]
		public bool IsComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xC7D5E8", Offset = "0xC7D5E8", VA = "0xC7D5E8")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xC7D5F0", Offset = "0xC7D5F0", VA = "0xC7D5F0")]
		public bool IsFailed()
		{
			return default(bool);
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xC7D5F8", Offset = "0xC7D5F8", VA = "0xC7D5F8")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xC7D604", Offset = "0xC7D604", VA = "0xC7D604")]
		public void SetComplete(bool isCompleted)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xC7D610", Offset = "0xC7D610", VA = "0xC7D610")]
		public int CompletedChildren()
		{
			return default(int);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xC7D6B4", Offset = "0xC7D6B4", VA = "0xC7D6B4")]
		public bool AllParentQuestsCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xC7CCE8", Offset = "0xC7CCE8", VA = "0xC7CCE8")]
		private void Activate()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xC7D7F4", Offset = "0xC7D7F4", VA = "0xC7D7F4")]
		public static int SortByDepth(QuestInst questA, QuestInst questB)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000350")]
	public enum QuestState
	{
		[Token(Token = "0x4001677")]
		Complete,
		[Token(Token = "0x4001678")]
		NotComplete,
		[Token(Token = "0x4001679")]
		Failed,
		[Token(Token = "0x400167A")]
		Active
	}
	[Token(Token = "0x2000351")]
	public class QuestReferenceHook : MonoBehaviour
	{
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[QuestDefReference]
		[SerializeField]
		private int questDefId;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onQuestComplete;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onQuestFail;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onQuestActivate;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent onQuestReset;

		[Token(Token = "0x1700018A")]
		public int QuestDefId
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0xC7DBAC", Offset = "0xC7DBAC", VA = "0xC7DBAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018B")]
		private QuestInst QuestInst
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0xC7DBB4", Offset = "0xC7DBB4", VA = "0xC7DBB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xC7DC14", Offset = "0xC7DC14", VA = "0xC7DC14")]
		public void ProgressQuest()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xC7DC70", Offset = "0xC7DC70", VA = "0xC7DC70")]
		public void DegressQuest()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xC7DCCC", Offset = "0xC7DCCC", VA = "0xC7DCCC")]
		public void FailQuest()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xC7CCBC", Offset = "0xC7CCBC", VA = "0xC7CCBC")]
		public void OnQuestComplete(int questDefId)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xC7C778", Offset = "0xC7C778", VA = "0xC7C778")]
		public void OnQuestFailed(int questDefId)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xC7D75C", Offset = "0xC7D75C", VA = "0xC7D75C")]
		public void OnQuestActivate(int questDefId)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xC7D5B4", Offset = "0xC7D5B4", VA = "0xC7D5B4")]
		public void OnQuestReset(int questDefId)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xC7DD28", Offset = "0xC7DD28", VA = "0xC7DD28")]
		public QuestReferenceHook()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000352")]
	public class Quests
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Quests instance;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<QuestInst> quests;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, QuestInst> questLookup;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, List<QuestInst>> questsByDepth;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int totalDepth;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<StateInst> states;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, StateInst> stateLookup;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private QuestsDatabase questsDatabase;

		[Token(Token = "0x1700018C")]
		public int QuestAmount
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0xC7E2F4", Offset = "0xC7E2F4", VA = "0xC7E2F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018D")]
		public int StateAmount
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0xC7E348", Offset = "0xC7E348", VA = "0xC7E348")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xC79B54", Offset = "0xC79B54", VA = "0xC79B54")]
		public void Initialize(QuestsDatabase newQuestsDatabase)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xC7E39C", Offset = "0xC7E39C", VA = "0xC7E39C")]
		private void BuildQuests()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xC7E81C", Offset = "0xC7E81C", VA = "0xC7E81C")]
		private void SortQuests()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xC7EA70", Offset = "0xC7EA70", VA = "0xC7EA70")]
		private void DepthFirstSetDepth(QuestInst start, QuestInst current, bool first)
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xC7E5E4", Offset = "0xC7E5E4", VA = "0xC7E5E4")]
		private void BuildStates()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xC7B5F4", Offset = "0xC7B5F4", VA = "0xC7B5F4")]
		public void RebuildDepthCompleteStatus()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xC7DEF0", Offset = "0xC7DEF0", VA = "0xC7DEF0")]
		public void RebuildQuestCache()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xC7EB5C", Offset = "0xC7EB5C", VA = "0xC7EB5C")]
		private void RebuildProgressQuests()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xC7ECD8", Offset = "0xC7ECD8", VA = "0xC7ECD8")]
		private void RebuildListQuests(List<QuestInst> depthQuestList)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xC7EE88", Offset = "0xC7EE88", VA = "0xC7EE88")]
		private void ReBuildOrderListQuests(QuestInst target)
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xC7EF34", Offset = "0xC7EF34", VA = "0xC7EF34")]
		private bool AllChildrenCompleted(QuestInst target)
		{
			return default(bool);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xC7EEBC", Offset = "0xC7EEBC", VA = "0xC7EEBC")]
		private void ReBuildTaskListQuests(QuestInst target)
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xC7EDD0", Offset = "0xC7EDD0", VA = "0xC7EDD0")]
		private void SetQuestsActivateStatus()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xC7EF9C", Offset = "0xC7EF9C", VA = "0xC7EF9C")]
		private void SetQuestActiveStateWithDepth(QuestInst quest)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xC7F014", Offset = "0xC7F014", VA = "0xC7F014")]
		public static bool IsQuestComplete(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xC7ADC0", Offset = "0xC7ADC0", VA = "0xC7ADC0")]
		public QuestInst GetQuest(int questDefId)
		{
			return null;
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xC74A90", Offset = "0xC74A90", VA = "0xC74A90")]
		public bool SetStateValue(int stateId, int stateValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xC6D440", Offset = "0xC6D440", VA = "0xC6D440")]
		public StateInst GetStateInfo(int stateDefId)
		{
			return null;
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xC7F0C4", Offset = "0xC7F0C4", VA = "0xC7F0C4")]
		public int GetStateValue(int stateDefId)
		{
			return default(int);
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xC7F0E8", Offset = "0xC7F0E8", VA = "0xC7F0E8")]
		public StateInst GetStateAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xC7F210", Offset = "0xC7F210", VA = "0xC7F210")]
		public QuestInst GetQuestAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xC7F338", Offset = "0xC7F338", VA = "0xC7F338")]
		public int GetPossibleStateOptions(int stateId)
		{
			return default(int);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xC7F480", Offset = "0xC7F480", VA = "0xC7F480")]
		public void ProgressQuest(int questId)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xC79AE4", Offset = "0xC79AE4", VA = "0xC79AE4")]
		public Quests()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000353")]
	public class StateInfo
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int id;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string description;

		[Token(Token = "0x1700018E")]
		public int ID
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0xB559F4", Offset = "0xB559F4", VA = "0xB559F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018F")]
		public string Description
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0xB559FC", Offset = "0xB559FC", VA = "0xB559FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xB55A04", Offset = "0xB55A04", VA = "0xB55A04")]
		public StateInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000354")]
	public class StateInst
	{
		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string niceName;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int defId;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int value;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string valueDescription;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StateDef def;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StateInfo currentState;

		[Token(Token = "0x17000190")]
		public int Value
		{
			[Token(Token = "0x600176C")]
			[Address(RVA = "0xB55A1C", Offset = "0xB55A1C", VA = "0xB55A1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600176D")]
			[Address(RVA = "0xB47634", Offset = "0xB47634", VA = "0xB47634")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public bool ShowLog
		{
			[Token(Token = "0x600176E")]
			[Address(RVA = "0xB55B38", Offset = "0xB55B38", VA = "0xB55B38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000192")]
		public string NiceName
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0xB55B58", Offset = "0xB55B58", VA = "0xB55B58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public StateDef Def
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0xB55A24", Offset = "0xB55A24", VA = "0xB55A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public StateInfo CurrentValue
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0xB55B90", Offset = "0xB55B90", VA = "0xB55B90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xB55BC8", Offset = "0xB55BC8", VA = "0xB55BC8")]
		public StateInst(StateDef def)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xB55D48", Offset = "0xB55D48", VA = "0xB55D48")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xB55C38", Offset = "0xB55C38", VA = "0xB55C38")]
		public bool SetState(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xB55B78", Offset = "0xB55B78", VA = "0xB55B78")]
		private StateInfo GetStateInfo(int id)
		{
			return null;
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xB55E00", Offset = "0xB55E00", VA = "0xB55E00")]
		public string CurrentStateDescription()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000355")]
	public class UnityEventInt : UnityEvent<int>
	{
		[Token(Token = "0x6001777")]
		[Address(RVA = "0xB5B9AC", Offset = "0xB5B9AC", VA = "0xB5B9AC")]
		public UnityEventInt()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class StateInstHook : MonoBehaviour
	{
		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[StateInfoIdReference]
		[SerializeField]
		private int stateMonitorId;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEventInt OnStateChanged;

		[Token(Token = "0x17000195")]
		public int ID
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0xB55E5C", Offset = "0xB55E5C", VA = "0xB55E5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xB55D8C", Offset = "0xB55D8C", VA = "0xB55D8C")]
		public void StateChanged(int stateValue)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xB55E64", Offset = "0xB55E64", VA = "0xB55E64")]
		public void SetState(int newValue)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xB55ED8", Offset = "0xB55ED8", VA = "0xB55ED8")]
		public StateInstHook()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public static class QuestSettings
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string databaseFolder;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string databasePath;

		[Token(Token = "0x17000196")]
		public static string DatabasePath
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0xC7E1B0", Offset = "0xC7E1B0", VA = "0xC7E1B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		public static string DatabaseFolder
		{
			[Token(Token = "0x600177D")]
			[Address(RVA = "0xC7E218", Offset = "0xC7E218", VA = "0xC7E218")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x2000358")]
	public class QuestsSerializer
	{
		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<QuestData> saveFiles;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, bool> fileNames;

		[Token(Token = "0x4001696")]
		private const string SAVE_LOCATION = "/Saves/";

		[Token(Token = "0x4001697")]
		private const string FILE_EXTENSION = ".bss";

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string saveFilePath;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string lastloadPath;

		[Token(Token = "0x17000198")]
		public static List<QuestData> SaveFiles
		{
			[Token(Token = "0x6001780")]
			[Address(RVA = "0xC7FEAC", Offset = "0xC7FEAC", VA = "0xC7FEAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xC7FA3C", Offset = "0xC7FA3C", VA = "0xC7FA3C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xC7FEFC", Offset = "0xC7FEFC", VA = "0xC7FEFC")]
		private static string SaveNameToFullPath(string saveName)
		{
			return null;
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xC7FF64", Offset = "0xC7FF64", VA = "0xC7FF64")]
		private static QuestData BinaryDeserialize(string path)
		{
			return null;
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xC80060", Offset = "0xC80060", VA = "0xC80060")]
		private static void BinarySerializeFile(QuestData data)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xC7FE54", Offset = "0xC7FE54", VA = "0xC7FE54")]
		private static QuestData JSONDeserialize(string path)
		{
			return null;
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xC80130", Offset = "0xC80130", VA = "0xC80130")]
		private static bool JSONSerialize(string filename, QuestData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xC801E4", Offset = "0xC801E4", VA = "0xC801E4")]
		public static QuestData Save(QuestData data)
		{
			return null;
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xC801FC", Offset = "0xC801FC", VA = "0xC801FC")]
		public static QuestData SaveAs(QuestData data, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xC80434", Offset = "0xC80434", VA = "0xC80434")]
		public static string GenerateUniqueFilename()
		{
			return null;
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xC8056C", Offset = "0xC8056C", VA = "0xC8056C")]
		public static void Delete(QuestData data)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xC8063C", Offset = "0xC8063C", VA = "0xC8063C")]
		public static bool TryGetSaveFile(string fileName, out QuestData data)
		{
			return default(bool);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xC80754", Offset = "0xC80754", VA = "0xC80754")]
		public QuestsSerializer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000359")]
	public class GameRules
	{
		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<QuestRule> questRules;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<StateRule> stateRules;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ObjectRule> objectRules;

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xC09014", Offset = "0xC09014", VA = "0xC09014")]
		public bool Evaluate()
		{
			return default(bool);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xC14BB4", Offset = "0xC14BB4", VA = "0xC14BB4")]
		public bool ContainQuestRule(int questId)
		{
			return default(bool);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xC14CD0", Offset = "0xC14CD0", VA = "0xC14CD0")]
		public bool ContainStateRule(int questId)
		{
			return default(bool);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xC09384", Offset = "0xC09384", VA = "0xC09384")]
		public GameRules()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035A")]
	public class QuestRule : Rule
	{
		[Token(Token = "0x2000541")]
		public enum QuestResultType
		{
			[Token(Token = "0x400201A")]
			IsCompleted,
			[Token(Token = "0x400201B")]
			IsNotCompleted,
			[Token(Token = "0x400201C")]
			IsActive,
			[Token(Token = "0x400201D")]
			IsInactive,
			[Token(Token = "0x400201E")]
			IsNotActive,
			[Token(Token = "0x400201F")]
			IsFailed,
			[Token(Token = "0x4002020")]
			IsNotFailed
		}

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[QuestDefReference]
		[SerializeField]
		private int questDefId;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private QuestResultType desiredResult;

		[Token(Token = "0x17000199")]
		public int QuestDefId
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xC7E010", Offset = "0xC7E010", VA = "0xC7E010")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001791")]
			[Address(RVA = "0xC7E018", Offset = "0xC7E018", VA = "0xC7E018")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public QuestResultType ResultType
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0xC7E020", Offset = "0xC7E020", VA = "0xC7E020")]
			get
			{
				return default(QuestResultType);
			}
			[Token(Token = "0x6001793")]
			[Address(RVA = "0xC7E028", Offset = "0xC7E028", VA = "0xC7E028")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		private QuestInst Quest
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0xC7E030", Offset = "0xC7E030", VA = "0xC7E030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xC7E090", Offset = "0xC7E090", VA = "0xC7E090", Slot = "4")]
		public override bool RuleMet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xC7E1A8", Offset = "0xC7E1A8", VA = "0xC7E1A8")]
		public QuestRule()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035B")]
	public class Rule
	{
		[Token(Token = "0x6001797")]
		[Address(RVA = "0xC82444", Offset = "0xC82444", VA = "0xC82444", Slot = "4")]
		public virtual bool RuleMet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xC6FB94", Offset = "0xC6FB94", VA = "0xC6FB94")]
		public Rule()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035C")]
	public class StateRule : Rule
	{
		[Token(Token = "0x2000542")]
		public enum StateRuleType
		{
			[Token(Token = "0x4002022")]
			MatchesValue,
			[Token(Token = "0x4002023")]
			DoesNotMatchValue
		}

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[StateInfoIdReference]
		[SerializeField]
		private int stateId;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public StateRuleType matches;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[StateInfoValueReference]
		public int stateInfoId;

		[Token(Token = "0x1700019C")]
		public int StateID
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0xB56090", Offset = "0xB56090", VA = "0xB56090")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xB56098", Offset = "0xB56098", VA = "0xB56098", Slot = "4")]
		public override bool RuleMet()
		{
			return default(bool);
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xB56134", Offset = "0xB56134", VA = "0xB56134")]
		public StateRule()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class BindingCircleCrackAlpha : MonoBehaviour
	{
		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer rend;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color tint;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int TintColor;

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xBE7F60", Offset = "0xBE7F60", VA = "0xBE7F60")]
		private void Start()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xBE8078", Offset = "0xBE8078", VA = "0xBE8078")]
		public void SetCrackAlphaLevel(int runestoneNum)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xBE8180", Offset = "0xBE8180", VA = "0xBE8180")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F78BC", Offset = "0x8F78BC")]
		public void IncrementCrackAlpha()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xBE8218", Offset = "0xBE8218", VA = "0xBE8218")]
		public BindingCircleCrackAlpha()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class Runestone : ShadowHandable
	{
		[Token(Token = "0x2000543")]
		private enum RunestoneState
		{
			[Token(Token = "0x4002025")]
			NotUsed,
			[Token(Token = "0x4002026")]
			Used
		}

		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE88", Offset = "0x8DFE88")]
		private sealed class <RunestoneReleased>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Runestone <>4__this;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RunestoneSlot <runestoneSlot>5__2;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <d>5__3;

			[Token(Token = "0x170002AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EF7")]
				[Address(RVA = "0xB478E0", Offset = "0xB478E0", VA = "0xB478E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EF9")]
				[Address(RVA = "0xB4794C", Offset = "0xB4794C", VA = "0xB4794C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xB46F08", Offset = "0xB46F08", VA = "0xB46F08")]
			[DebuggerHidden]
			public <RunestoneReleased>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xB4704C", Offset = "0xB4704C", VA = "0xB4704C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0xB47050", Offset = "0xB47050", VA = "0xB47050", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xB478E8", Offset = "0xB478E8", VA = "0xB478E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8EFF94", Offset = "0x8EFF94")]
		[SerializeField]
		[StateInfoIdReference]
		private int runestoneId;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private List<GameRules> consumeRule;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject visual;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float runeStoneSpeedToHoverPoint;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float runeStoneHoverTime;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float waitBeforeCrackCircleTime;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float startTime;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 lerpStartPos;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float journeyLength;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float distCovered;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float fractionOfJourney;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private StateInst runestoneStateInst;

		[Token(Token = "0x1700019D")]
		private StateInst RunestoneStateInst
		{
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0xB46C6C", Offset = "0xB46C6C", VA = "0xB46C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xB46CE0", Offset = "0xB46CE0", VA = "0xB46CE0", Slot = "9")]
		protected override void GrabStarted()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xB46E40", Offset = "0xB46E40", VA = "0xB46E40", Slot = "11")]
		protected override void GrabReleased()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xB46E94", Offset = "0xB46E94", VA = "0xB46E94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F78CC", Offset = "0x8F78CC")]
		private IEnumerator RunestoneReleased()
		{
			return null;
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xB46F34", Offset = "0xB46F34", VA = "0xB46F34")]
		public Runestone()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class RunestoneSlot : MonoBehaviour
	{
		[Token(Token = "0x2000545")]
		private enum RunestoneSlotState
		{
			[Token(Token = "0x400202D")]
			Empty,
			[Token(Token = "0x400202E")]
			Occupied
		}

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int runeStoneSlotStateId;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject runestoneOrb;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject shatterEffect;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject circleArt;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Dialogue runeStoneIntro;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Dialogue runeStoneContent;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnUnlocked;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform hoverPoint;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SFX_3DHook runestoneSlotSFX;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SFX_3DHook circleWeakenSFX;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private uSignal circleWeakenSignal;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isPlayingDreamthought;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private StateInst runeStoneSlotInst;

		[Token(Token = "0x1700019E")]
		public Vector3 HoverPointPos
		{
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0xB475C0", Offset = "0xB475C0", VA = "0xB475C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700019F")]
		public bool IsEmpty
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0xB4795C", Offset = "0xB4795C", VA = "0xB4795C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		private StateInst RuneStoneSlotInst
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0xB47984", Offset = "0xB47984", VA = "0xB47984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xB479F8", Offset = "0xB479F8", VA = "0xB479F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xB47578", Offset = "0xB47578", VA = "0xB47578")]
		public void UnlockRuneStoneSlot()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xB477B8", Offset = "0xB477B8", VA = "0xB477B8")]
		public void PlayRuneStone()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xB475DC", Offset = "0xB475DC", VA = "0xB475DC")]
		public void PutRunestoneInSlot()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xB47A90", Offset = "0xB47A90", VA = "0xB47A90")]
		public void ToggleRunestone()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xB47BA8", Offset = "0xB47BA8", VA = "0xB47BA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xB47CB0", Offset = "0xB47CB0", VA = "0xB47CB0")]
		public RunestoneSlot()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class RunestonesManager : Static<RunestonesManager>
	{
		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RunestoneSlot[] runestoneSlots;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject shadowNecromancer;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dialogue firstRunestoneGrabbedVO;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<Dialogue> runestoneGrabbedVOs;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject visual;

		[Token(Token = "0x170001A1")]
		private bool IsFirstRuneStone
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xB47CB8", Offset = "0xB47CB8", VA = "0xB47CB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A2")]
		public int NumOfRunestoneSlotted
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0xB47D3C", Offset = "0xB47D3C", VA = "0xB47D3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xB46D74", Offset = "0xB46D74", VA = "0xB46D74")]
		public void RunestoneGrabbed()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xB47C94", Offset = "0xB47C94", VA = "0xB47C94")]
		public bool IsShowingNecromancer()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xB47A70", Offset = "0xB47A70", VA = "0xB47A70")]
		public void ShowShadowNecromancer()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xB47B88", Offset = "0xB47B88", VA = "0xB47B88")]
		public void HideShadowNecromancer()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xB474F0", Offset = "0xB474F0", VA = "0xB474F0")]
		public RunestoneSlot GetAvailableSlot()
		{
			return null;
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xB47DD4", Offset = "0xB47DD4", VA = "0xB47DD4")]
		public void HideVisual()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xB47DF4", Offset = "0xB47DF4", VA = "0xB47DF4")]
		public RunestonesManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000361")]
	public class GameData
	{
		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long lastModifiedLinuxTimestamp;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QuestData questData;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectsData objectsData;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VoiceOverData voiceOverData;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int checkPoint;

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xC13778", Offset = "0xC13778", VA = "0xC13778")]
		public GameData()
		{
		}
	}
	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DF3C8", Offset = "0x8DF3C8")]
	public class LegacyDataMap : ScriptableObject
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RunestoneData> runestoneCollectionStates;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<StateIdElement> runestoneStates;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SpellConvertData> spellStates;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<CheckpointConvertData> checkpoints;

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xC1D9D4", Offset = "0xC1D9D4", VA = "0xC1D9D4")]
		public void SetRunestoneAsUsed(cRunestone.RuneLocation location)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xC1DBA0", Offset = "0xC1DBA0", VA = "0xC1DBA0")]
		public LegacyDataMap()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000363")]
	public class StateIdElement
	{
		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[StateInfoIdReference]
		public int stateId;

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xB559EC", Offset = "0xB559EC", VA = "0xB559EC")]
		public StateIdElement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000364")]
	public class QuestIdElement
	{
		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[QuestDefReference]
		public int questId;

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xC7BAD4", Offset = "0xC7BAD4", VA = "0xC7BAD4")]
		public QuestIdElement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000365")]
	public class RunestoneData
	{
		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public cRunestone.RuneLocation location;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StateIdElement state;

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xB47954", Offset = "0xB47954", VA = "0xB47954")]
		public RunestoneData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000366")]
	public class SpellConvertData
	{
		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string legacyName;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[StateInfoIdReference]
		public int spellOrbStateId;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[StateInfoIdReference]
		public int spellStateId;

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xB54068", Offset = "0xB54068", VA = "0xB54068")]
		public SpellConvertData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000367")]
	public class CheckpointConvertData
	{
		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string note;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAsset saveFile;

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xBE9B4C", Offset = "0xBE9B4C", VA = "0xBE9B4C")]
		public CheckpointConvertData()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class SaveGame : MonoBehaviour
	{
		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int index;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool saved;

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xB487C4", Offset = "0xB487C4", VA = "0xB487C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8F7930", Offset = "0x8F7930")]
		public void Save()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xB48918", Offset = "0xB48918", VA = "0xB48918")]
		public SaveGame()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class SaveManager
	{
		[Token(Token = "0x40016D7")]
		private const string SAVE_PROFILE_LOCATION = "/GameData/";

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string filePath;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xB48920", Offset = "0xB48920", VA = "0xB48920")]
		public static bool HasSaveFile()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xB48A70", Offset = "0xB48A70", VA = "0xB48A70")]
		public static void DeleteSaveFile()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xB48ABC", Offset = "0xB48ABC", VA = "0xB48ABC")]
		public static void SaveData(GameData gameData)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xB48B9C", Offset = "0xB48B9C", VA = "0xB48B9C")]
		private static string GenerateSaveFilePath()
		{
			return null;
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xB48C6C", Offset = "0xB48C6C", VA = "0xB48C6C")]
		public static bool TryLoadSaveFile(out GameData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xB489F0", Offset = "0xB489F0", VA = "0xB489F0")]
		private static string GetSaveFilePath()
		{
			return null;
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xB48CF8", Offset = "0xB48CF8", VA = "0xB48CF8")]
		private static GameData JSONDeserialize(string path)
		{
			return null;
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xB48D50", Offset = "0xB48D50", VA = "0xB48D50")]
		public static void TryConvertLegacySaveFile(LegacyDataMap legacyDataMap, GameData newGameData, QuestsDatabase database)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xB48954", Offset = "0xB48954", VA = "0xB48954")]
		private static string GetLegacyFilePath()
		{
			return null;
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xB48E2C", Offset = "0xB48E2C", VA = "0xB48E2C")]
		private static SaveData LoadLegacyFileData()
		{
			return null;
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xB49054", Offset = "0xB49054", VA = "0xB49054")]
		private static void ConvertLegacyDataToNewData(SaveData legacyData, GameData newGameData, LegacyDataMap legacyDataMap, QuestsDatabase database)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xB495DC", Offset = "0xB495DC", VA = "0xB495DC")]
		private void LoadSBools(SaveData saveData)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xB490A8", Offset = "0xB490A8", VA = "0xB490A8")]
		private static void ConvertSpellData(SaveData legacyData, GameData newGameData, LegacyDataMap legacyDataMap)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xB49270", Offset = "0xB49270", VA = "0xB49270")]
		private static void ConvertRunstoneData(SaveData legacyData, GameData newGameData, LegacyDataMap legacyDataMap)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xB49398", Offset = "0xB49398", VA = "0xB49398")]
		private static void ConvertCheckpointData(SaveData legacyData, GameData newGameData, LegacyDataMap legacyDataMap, QuestsDatabase database)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xB496E4", Offset = "0xB496E4", VA = "0xB496E4")]
		public SaveManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036A")]
	public class VoiceOverData
	{
		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, int> vo;

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xB5C67C", Offset = "0xB5C67C", VA = "0xB5C67C")]
		public void SetVOAsPlayed(string VoName)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xB5C73C", Offset = "0xB5C73C", VA = "0xB5C73C")]
		public bool IsPlayed(string VoName)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xB5C7D8", Offset = "0xB5C7D8", VA = "0xB5C7D8")]
		public VoiceOverData()
		{
		}
	}
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DF418", Offset = "0x8DF418")]
	public class SceneDef : ScriptableObject
	{
		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SceneLevel scene;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Cubemap sceneCubeMap;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Cubemap necromancerCubemap;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture2D sceneTex2D;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color primaryColor;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color secondaryColor;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color tertiaryColor;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SceneDef lightProbeWorldDef;

		[Token(Token = "0x170001A3")]
		public SceneLevel Scene
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0xB496EC", Offset = "0xB496EC", VA = "0xB496EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		public SceneDef LightProbeWorldDef
		{
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0xB496F4", Offset = "0xB496F4", VA = "0xB496F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		public Texture2D SceneTexture2D
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0xB496FC", Offset = "0xB496FC", VA = "0xB496FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		public Color PrimaryColor
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xB49704", Offset = "0xB49704", VA = "0xB49704")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xB49710", Offset = "0xB49710", VA = "0xB49710")]
		public Color SecondaryColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xB4971C", Offset = "0xB4971C", VA = "0xB4971C")]
		public Color TertiaryColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xB49728", Offset = "0xB49728", VA = "0xB49728")]
		public void ToggleRootGameObjectsInScene(bool isActive)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xB49838", Offset = "0xB49838", VA = "0xB49838")]
		private GameObject[] GetRootGameObjects(SceneDef worldDefData)
		{
			return null;
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xB49884", Offset = "0xB49884", VA = "0xB49884")]
		public Cubemap GetCubemap(bool showNecromancerCubemap)
		{
			return null;
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xB49918", Offset = "0xB49918", VA = "0xB49918")]
		public SceneDef()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class SceneLoader : Singleton<SceneLoader>
	{
		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE98", Offset = "0x8DFE98")]
		private sealed class <LoadSceneInBackgroundCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneDef targetScene;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneLoader <>4__this;

			[Token(Token = "0x170002AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EFD")]
				[Address(RVA = "0xB4BD88", Offset = "0xB4BD88", VA = "0xB4BD88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EFF")]
				[Address(RVA = "0xB4BDF4", Offset = "0xB4BDF4", VA = "0xB4BDF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xB49FD4", Offset = "0xB49FD4", VA = "0xB49FD4")]
			[DebuggerHidden]
			public <LoadSceneInBackgroundCoroutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0xB4BA68", Offset = "0xB4BA68", VA = "0xB4BA68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0xB4BA6C", Offset = "0xB4BA6C", VA = "0xB4BA6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xB4BD90", Offset = "0xB4BD90", VA = "0xB4BD90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFEA8", Offset = "0x8DFEA8")]
		private sealed class <UnloadSceneCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneDef sceneToUnload;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <unloadingScene>5__2;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <unloadingResources>5__3;

			[Token(Token = "0x170002AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F03")]
				[Address(RVA = "0xB4C560", Offset = "0xB4C560", VA = "0xB4C560", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F05")]
				[Address(RVA = "0xB4C5CC", Offset = "0xB4C5CC", VA = "0xB4C5CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xB4A080", Offset = "0xB4A080", VA = "0xB4A080")]
			[DebuggerHidden]
			public <UnloadSceneCoroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xB4C354", Offset = "0xB4C354", VA = "0xB4C354", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F02")]
			[Address(RVA = "0xB4C358", Offset = "0xB4C358", VA = "0xB4C358", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xB4C568", Offset = "0xB4C568", VA = "0xB4C568", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFEB8", Offset = "0x8DFEB8")]
		private sealed class <LoadNewSceneCoroutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneDef toBeLoadedScene;

			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneLoader <>4__this;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <loadingTimer>5__2;

			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <loadingScene>5__3;

			[Token(Token = "0x170002B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F09")]
				[Address(RVA = "0xB4B9F4", Offset = "0xB4B9F4", VA = "0xB4B9F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F0B")]
				[Address(RVA = "0xB4BA60", Offset = "0xB4BA60", VA = "0xB4BA60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F06")]
			[Address(RVA = "0xB4A12C", Offset = "0xB4A12C", VA = "0xB4A12C")]
			[DebuggerHidden]
			public <LoadNewSceneCoroutine>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001F07")]
			[Address(RVA = "0xB4B7B0", Offset = "0xB4B7B0", VA = "0xB4B7B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F08")]
			[Address(RVA = "0xB4B7B4", Offset = "0xB4B7B4", VA = "0xB4B7B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0xB4B9FC", Offset = "0xB4B9FC", VA = "0xB4B9FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFEC8", Offset = "0x8DFEC8")]
		private sealed class <LoadCreditsSceneCoroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Renderer <fadeRend>5__2;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <loadingScene>5__3;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <currentShaderVal>5__4;

			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperation <unloadSceneAsync>5__5;

			[Token(Token = "0x170002B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F0F")]
				[Address(RVA = "0xB4AFD0", Offset = "0xB4AFD0", VA = "0xB4AFD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F11")]
				[Address(RVA = "0xB4B03C", Offset = "0xB4B03C", VA = "0xB4B03C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0xB4A66C", Offset = "0xB4A66C", VA = "0xB4A66C")]
			[DebuggerHidden]
			public <LoadCreditsSceneCoroutine>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xB4AB54", Offset = "0xB4AB54", VA = "0xB4AB54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xB4AB58", Offset = "0xB4AB58", VA = "0xB4AB58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xB4AFD8", Offset = "0xB4AFD8", VA = "0xB4AFD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFED8", Offset = "0x8DFED8")]
		private sealed class <LoadMainMenuSceneCoroutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <toBeUnLoad>5__2;

			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <loadingScene>5__3;

			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <unloadingScene>5__4;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperation <unloadMaterialWorldScene>5__5;

			[Token(Token = "0x170002B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F15")]
				[Address(RVA = "0xB4B43C", Offset = "0xB4B43C", VA = "0xB4B43C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F17")]
				[Address(RVA = "0xB4B4A8", Offset = "0xB4B4A8", VA = "0xB4B4A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xB4A738", Offset = "0xB4A738", VA = "0xB4A738")]
			[DebuggerHidden]
			public <LoadMainMenuSceneCoroutine>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6001F13")]
			[Address(RVA = "0xB4B044", Offset = "0xB4B044", VA = "0xB4B044", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xB4B048", Offset = "0xB4B048", VA = "0xB4B048", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F16")]
			[Address(RVA = "0xB4B444", Offset = "0xB4B444", VA = "0xB4B444", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFEE8", Offset = "0x8DFEE8")]
		private sealed class <LoadTutorialSceneCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <loadingScene>5__2;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <unloadingScene>5__3;

			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <unloadingResources>5__4;

			[Token(Token = "0x170002B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F1B")]
				[Address(RVA = "0xB4C070", Offset = "0xB4C070", VA = "0xB4C070", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F1D")]
				[Address(RVA = "0xB4C0DC", Offset = "0xB4C0DC", VA = "0xB4C0DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F18")]
			[Address(RVA = "0xB4A7D8", Offset = "0xB4A7D8", VA = "0xB4A7D8")]
			[DebuggerHidden]
			public <LoadTutorialSceneCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001F19")]
			[Address(RVA = "0xB4BDFC", Offset = "0xB4BDFC", VA = "0xB4BDFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0xB4BE00", Offset = "0xB4BE00", VA = "0xB4BE00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0xB4C078", Offset = "0xB4C078", VA = "0xB4C078", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFEF8", Offset = "0x8DFEF8")]
		private sealed class <LoadMaterialWorldSceneCoroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <loadingScene>5__2;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <unloadingScene>5__3;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <unloadingResources>5__4;

			[Token(Token = "0x170002B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F21")]
				[Address(RVA = "0xB4B73C", Offset = "0xB4B73C", VA = "0xB4B73C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F23")]
				[Address(RVA = "0xB4B7A8", Offset = "0xB4B7A8", VA = "0xB4B7A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0xB4A878", Offset = "0xB4A878", VA = "0xB4A878")]
			[DebuggerHidden]
			public <LoadMaterialWorldSceneCoroutine>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0xB4B4B0", Offset = "0xB4B4B0", VA = "0xB4B4B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F20")]
			[Address(RVA = "0xB4B4B4", Offset = "0xB4B4B4", VA = "0xB4B4B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F22")]
			[Address(RVA = "0xB4B744", Offset = "0xB4B744", VA = "0xB4B744", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF08", Offset = "0x8DFF08")]
		private sealed class <RefreshLightProbesCoroutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneDef probeWorld;

			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <loadingProbes>5__2;

			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <unloadingProbes>5__3;

			[Token(Token = "0x170002BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F27")]
				[Address(RVA = "0xB4C2E0", Offset = "0xB4C2E0", VA = "0xB4C2E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F29")]
				[Address(RVA = "0xB4C34C", Offset = "0xB4C34C", VA = "0xB4C34C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0xB4AA44", Offset = "0xB4AA44", VA = "0xB4AA44")]
			[DebuggerHidden]
			public <RefreshLightProbesCoroutine>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xB4C0E4", Offset = "0xB4C0E4", VA = "0xB4C0E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0xB4C0E8", Offset = "0xB4C0E8", VA = "0xB4C0E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0xB4C2E8", Offset = "0xB4C2E8", VA = "0xB4C2E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F0238", Offset = "0x8F0238")]
		[SerializeField]
		private List<SceneDef> sceneDefs;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[StateInfoIdReference]
		private int currentSceneStateId;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F02BC", Offset = "0x8F02BC")]
		private float delayTimeWhenTravelFromTutorialScene;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SceneDef matWorldDayProbes;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SceneDef matWorldNightProbes;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StateInst currentSceneStateInst;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool refreshingProbes;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool isTargetSceneLoaded;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool isTargetSceneUnloaded;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject fadeSphere;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Transparency;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SceneDef cachedWorld;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[CanBeNull]
		private SceneDef previousScene;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[CanBeNull]
		private SceneDef currentActiveScene;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action<SceneDef> OnSceneLoadedCallback;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEvent OnLoadedTutorial;

		[Token(Token = "0x170001A7")]
		private SceneDef materialWorld
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xB49920", Offset = "0xB49920", VA = "0xB49920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private SceneDef otherwhere
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xB4998C", Offset = "0xB4998C", VA = "0xB4998C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private SceneDef credits
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0xB499F8", Offset = "0xB499F8", VA = "0xB499F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		private SceneDef mainMenu
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xB49A64", Offset = "0xB49A64", VA = "0xB49A64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private SceneDef tutorial
		{
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0xB49ACC", Offset = "0xB49ACC", VA = "0xB49ACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xB49B38", Offset = "0xB49B38", VA = "0xB49B38", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xB49B94", Offset = "0xB49B94", VA = "0xB49B94")]
		public void StartGameAtTutorial()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xB49CB4", Offset = "0xB49CB4", VA = "0xB49CB4")]
		public void StartGameAtMaterialWorld()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xB49E28", Offset = "0xB49E28", VA = "0xB49E28")]
		public void LoadScene(SceneDef worldDef)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xB49F54", Offset = "0xB49F54", VA = "0xB49F54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7968", Offset = "0x8F7968")]
		private IEnumerator LoadSceneInBackgroundCoroutine(SceneDef targetScene)
		{
			return null;
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xB4A000", Offset = "0xB4A000", VA = "0xB4A000")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F79CC", Offset = "0x8F79CC")]
		private IEnumerator UnloadSceneCoroutine(SceneDef sceneToUnload)
		{
			return null;
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xB4A0AC", Offset = "0xB4A0AC", VA = "0xB4A0AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7A30", Offset = "0x8F7A30")]
		private IEnumerator LoadNewSceneCoroutine(SceneDef toBeLoadedScene)
		{
			return null;
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xB4A158", Offset = "0xB4A158", VA = "0xB4A158")]
		private int GetSceneDefStateValue(SceneDef sceneDef)
		{
			return default(int);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xB4A264", Offset = "0xB4A264", VA = "0xB4A264")]
		private void SwitchScenes()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xB4A5CC", Offset = "0xB4A5CC", VA = "0xB4A5CC")]
		public void LoadCredits()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xB4A5F8", Offset = "0xB4A5F8", VA = "0xB4A5F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7A94", Offset = "0x8F7A94")]
		private IEnumerator LoadCreditsSceneCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xB4A698", Offset = "0xB4A698", VA = "0xB4A698")]
		public void LoadMainMenu()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xB4A6C4", Offset = "0xB4A6C4", VA = "0xB4A6C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7AF8", Offset = "0x8F7AF8")]
		private IEnumerator LoadMainMenuSceneCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xB49C10", Offset = "0xB49C10", VA = "0xB49C10")]
		private void LoadTutorial()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xB4A764", Offset = "0xB4A764", VA = "0xB4A764")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7B5C", Offset = "0x8F7B5C")]
		private IEnumerator LoadTutorialSceneCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xB49D84", Offset = "0xB49D84", VA = "0xB49D84")]
		public void LoadMaterialWorld()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xB4A804", Offset = "0xB4A804", VA = "0xB4A804")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7BC0", Offset = "0x8F7BC0")]
		private IEnumerator LoadMaterialWorldSceneCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xB4A498", Offset = "0xB4A498", VA = "0xB4A498")]
		public void RefreshLightProbes(SceneDef world)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xB4A924", Offset = "0xB4A924", VA = "0xB4A924")]
		public void RefreshMaterialWorldLightProbes(bool isDay)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xB4A8A4", Offset = "0xB4A8A4", VA = "0xB4A8A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7C24", Offset = "0x8F7C24")]
		private IEnumerator RefreshLightProbesCoroutine(SceneDef probeWorld)
		{
			return null;
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xB4AA70", Offset = "0xB4AA70", VA = "0xB4AA70")]
		public SceneLoader()
		{
		}
	}
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DF46C", Offset = "0x8DF46C")]
	public class SnapList : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200054E")]
		private class SnapTarget
		{
			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[ObjectIdReference]
			private int targetId;

			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private GameRules snapRules;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private UnityEvent OnSnapped;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private UnityEvent OnUnSnapped;

			[Token(Token = "0x170002BC")]
			public int ID
			{
				[Token(Token = "0x6001F2A")]
				[Address(RVA = "0xB52B90", Offset = "0xB52B90", VA = "0xB52B90")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002BD")]
			public bool PassSnapRules
			{
				[Token(Token = "0x6001F2B")]
				[Address(RVA = "0xB529BC", Offset = "0xB529BC", VA = "0xB529BC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0xB529D8", Offset = "0xB529D8", VA = "0xB529D8")]
			public void InvokeOnSnapped()
			{
			}

			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0xB529EC", Offset = "0xB529EC", VA = "0xB529EC")]
			public void InvokeOnUnSnapped()
			{
			}

			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0xB52B98", Offset = "0xB52B98", VA = "0xB52B98")]
			public SnapTarget()
			{
			}
		}

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<SnapTarget> snapTargets;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform snapTransform;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem hoverEffect;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem snapEffect;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DialogueList snapVOList;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, SnapTarget> snapTargetsLookup;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isOccupied;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CrossFlowObject currentTarget;

		[Token(Token = "0x170001AC")]
		public bool IsOccupied
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0xB51ED8", Offset = "0xB51ED8", VA = "0xB51ED8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xB51EE0", Offset = "0xB51EE0", VA = "0xB51EE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xB52050", Offset = "0xB52050", VA = "0xB52050")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xB52144", Offset = "0xB52144", VA = "0xB52144")]
		private bool IsSnapTarget(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xB52260", Offset = "0xB52260", VA = "0xB52260")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xB52388", Offset = "0xB52388", VA = "0xB52388")]
		private void Update()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xB524AC", Offset = "0xB524AC", VA = "0xB524AC")]
		private bool TargetReadyToSnap(ShadowHandable target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xB52840", Offset = "0xB52840", VA = "0xB52840")]
		private bool TargetBeingHeld(ShadowHandable shadowHandable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xB52548", Offset = "0xB52548", VA = "0xB52548")]
		private void Snap(ShadowHandable target)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xB5286C", Offset = "0xB5286C", VA = "0xB5286C")]
		private void UnSnap(ShadowHandable target)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xB52A00", Offset = "0xB52A00", VA = "0xB52A00")]
		public void DisableSnappedTarget()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xB52AF8", Offset = "0xB52AF8", VA = "0xB52AF8")]
		public SnapList()
		{
		}
	}
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DF4D0", Offset = "0x8DF4D0")]
	public class SnapPoint : MonoBehaviour
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ObjectIdReference]
		private int targetId;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules snapRules;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform snapTransform;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem hoverEffect;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem snapEffect;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool snapWhenTargetIsHolding;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnSnapped;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent OnUnSnapped;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isOccupied;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossFlowObject currentTarget;

		[Token(Token = "0x170001AD")]
		public bool IsOccupied
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0xB52C00", Offset = "0xB52C00", VA = "0xB52C00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xB52C08", Offset = "0xB52C08", VA = "0xB52C08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xB52C90", Offset = "0xB52C90", VA = "0xB52C90")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xB52D80", Offset = "0xB52D80", VA = "0xB52D80")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xB52EA8", Offset = "0xB52EA8", VA = "0xB52EA8")]
		private void Update()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xB52FEC", Offset = "0xB52FEC", VA = "0xB52FEC")]
		private bool TargetReadyToSnap(ShadowHandable target)
		{
			return default(bool);
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xB532BC", Offset = "0xB532BC", VA = "0xB532BC")]
		private bool TargetBeingHeld(ShadowHandable shadowHandable)
		{
			return default(bool);
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xB53038", Offset = "0xB53038", VA = "0xB53038")]
		private void Snap(CrossFlowObject target)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xB532E8", Offset = "0xB532E8", VA = "0xB532E8")]
		private void UnSnap(ShadowHandable target)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xB53410", Offset = "0xB53410", VA = "0xB53410")]
		public SnapPoint()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class Commune : Spell
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F0460", Offset = "0x8F0460")]
		[SerializeField]
		private GameObject communeIndicator;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject castRing;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject handEffect;

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xBEAB2C", Offset = "0xBEAB2C", VA = "0xBEAB2C", Slot = "7")]
		protected override void Primed(Inputs.InputSide newHand)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xBEAB88", Offset = "0xBEAB88", VA = "0xBEAB88", Slot = "8")]
		protected override void UnPrimed(Inputs.InputSide newHand)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xBEABE4", Offset = "0xBEABE4", VA = "0xBEABE4", Slot = "9")]
		protected override void SpellCast(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xBEADC4", Offset = "0xBEADC4", VA = "0xBEADC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xBEADE8", Offset = "0xBEADE8", VA = "0xBEADE8", Slot = "11")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xBEAE10", Offset = "0xBEAE10", VA = "0xBEAE10")]
		private void UpdateSelectedIndicator()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xBEAF04", Offset = "0xBEAF04", VA = "0xBEAF04")]
		private void DisplaySelected(Vector3 position)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xBEADC8", Offset = "0xBEADC8", VA = "0xBEADC8")]
		private void HideSelected()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xBEAF78", Offset = "0xBEAF78", VA = "0xBEAF78")]
		public Commune()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class Fire : Spell
	{
		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject handEffect;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private cRayOfFireBeam handRay;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Dialogue firstTimeVO;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Dialogue coolVO;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private SFX_3DHook rayCastSFX;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool wasCasting;

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xC102DC", Offset = "0xC102DC", VA = "0xC102DC", Slot = "7")]
		protected override void Primed(Inputs.InputSide newHand)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xC10338", Offset = "0xC10338", VA = "0xC10338", Slot = "8")]
		protected override void UnPrimed(Inputs.InputSide newHand)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xC10408", Offset = "0xC10408", VA = "0xC10408", Slot = "9")]
		protected override void SpellCast(Inputs.InputSide hand)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xC10470", Offset = "0xC10470", VA = "0xC10470", Slot = "10")]
		protected override void SpellStopCast(Inputs.InputSide hand)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xC103A8", Offset = "0xC103A8", VA = "0xC103A8")]
		private void PlayAudio()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xC104BC", Offset = "0xC104BC", VA = "0xC104BC")]
		public Fire()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public interface ISpellTarget
	{
		[Token(Token = "0x6001820")]
		bool IsTargetable(Spell spell);

		[Token(Token = "0x6001821")]
		void Detect(Spell spell);

		[Token(Token = "0x6001822")]
		void Cast(Spell newHand);

		[Token(Token = "0x6001823")]
		void StopCast(Spell spell);
	}
	[Token(Token = "0x2000372")]
	public class ShadowHand : Spell
	{
		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF18", Offset = "0x8DFF18")]
		private sealed class <ShadowHandTravelCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShadowHand <>4__this;

			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <targetPosition>5__2;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <tValue>5__3;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <travelTimer>5__4;

			[Token(Token = "0x170002BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F32")]
				[Address(RVA = "0xB4E5E8", Offset = "0xB4E5E8", VA = "0xB4E5E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F34")]
				[Address(RVA = "0xB4E654", Offset = "0xB4E654", VA = "0xB4E654", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0xB4D8A0", Offset = "0xB4D8A0", VA = "0xB4D8A0")]
			[DebuggerHidden]
			public <ShadowHandTravelCoroutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001F30")]
			[Address(RVA = "0xB4E240", Offset = "0xB4E240", VA = "0xB4E240", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F31")]
			[Address(RVA = "0xB4E244", Offset = "0xB4E244", VA = "0xB4E244", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F33")]
			[Address(RVA = "0xB4E5F0", Offset = "0xB4E5F0", VA = "0xB4E5F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F051C", Offset = "0x8F051C")]
		[SerializeField]
		private float maxGrabDistance;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float trackSpeedMultiplier;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float pushPullSpeed;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameRules showDefaultShadowHandVisual;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject shadowHandDefault;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject shadowHandUnderworld;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject shadowHandTravel;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject shBurstEffect;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject shBurstEffectObject;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private SFX_3DHook shadowHandCastDefaultSFX;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Animator handAnimator;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private uSignal shadowHandMoveObjectSignal;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool raisedMovedObjectSignal;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 hitPoint;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float shGrabbedDistance;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GameObject shadowHandVisual;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private MeshRenderer shTravelMesh;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 shOriginalPosition;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float maxTravelTime;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float shadowHandTravelLimit;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool isHandTravelling;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ShadowHandHold;

		[Token(Token = "0x170001AE")]
		public Vector3 Position
		{
			[Token(Token = "0x6001824")]
			[Address(RVA = "0xB4D144", Offset = "0xB4D144", VA = "0xB4D144")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xB4D160", Offset = "0xB4D160", VA = "0xB4D160")]
		private void Start()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xB4D220", Offset = "0xB4D220", VA = "0xB4D220", Slot = "7")]
		protected override void Primed(Inputs.InputSide newHand)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xB4D380", Offset = "0xB4D380", VA = "0xB4D380", Slot = "8")]
		protected override void UnPrimed(Inputs.InputSide newHand)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xB4D1DC", Offset = "0xB4D1DC", VA = "0xB4D1DC")]
		private void HideAllShadowHands()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xB4D4F8", Offset = "0xB4D4F8", VA = "0xB4D4F8", Slot = "9")]
		protected override void SpellCast(Inputs.InputSide hand)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xB4D82C", Offset = "0xB4D82C", VA = "0xB4D82C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7C88", Offset = "0x8F7C88")]
		private IEnumerator ShadowHandTravelCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xB4D8CC", Offset = "0xB4D8CC", VA = "0xB4D8CC", Slot = "10")]
		protected override void SpellStopCast(Inputs.InputSide hand)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xB4D33C", Offset = "0xB4D33C", VA = "0xB4D33C")]
		private void ShowShadowHand()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xB4DB70", Offset = "0xB4DB70", VA = "0xB4DB70")]
		public Vector3 GetShadowHandTargetPosition(ShadowHandable shadowHandable)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xB4DE74", Offset = "0xB4DE74", VA = "0xB4DE74")]
		private Vector3 GetLockedOnAxisPos(ShadowHandable shadowHandable, Vector3 targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xB4E110", Offset = "0xB4E110", VA = "0xB4E110")]
		public ShadowHand()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class Spell : MonoBehaviour
	{
		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F0618", Offset = "0x8F0618")]
		[SerializeField]
		protected Inputs.InputSide inputSide;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected bool requireTarget;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform gripTransform;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float targetRadius;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineRenderer spellRay;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float maxDistance;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uSignal spellPrimeSignal;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uSignal spellCastSignal;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SkinnedMeshRenderer handSkinnedMesh;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color spellGemColor;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEvent OnCastSpell;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color defaultColor;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ISpellTarget potentialTarget;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ISpellTarget currentTarget;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int GemColour;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool isPrimed;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject potentialTargetObj;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected GameObject currentTargetObj;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEventHandSide OnDetectedTarget;

		[Token(Token = "0x170001AF")]
		public Inputs.InputSide InputSide
		{
			[Token(Token = "0x6001831")]
			[Address(RVA = "0xB53478", Offset = "0xB53478", VA = "0xB53478")]
			get
			{
				return default(Inputs.InputSide);
			}
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xB53480", Offset = "0xB53480", VA = "0xB53480", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xB535FC", Offset = "0xB535FC", VA = "0xB535FC", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xB537F8", Offset = "0xB537F8", VA = "0xB537F8", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xB4D2EC", Offset = "0xB4D2EC", VA = "0xB4D2EC", Slot = "7")]
		protected virtual void Primed(Inputs.InputSide newHand)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xB4D44C", Offset = "0xB4D44C", VA = "0xB4D44C", Slot = "8")]
		protected virtual void UnPrimed(Inputs.InputSide newHand)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xB53558", Offset = "0xB53558", VA = "0xB53558")]
		private void HideLine()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xB4D684", Offset = "0xB4D684", VA = "0xB4D684", Slot = "9")]
		protected virtual void SpellCast(Inputs.InputSide hand)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xB4D9DC", Offset = "0xB4D9DC", VA = "0xB4D9DC", Slot = "10")]
		protected virtual void SpellStopCast(Inputs.InputSide hand)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xB539F8", Offset = "0xB539F8", VA = "0xB539F8", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xB53A18", Offset = "0xB53A18", VA = "0xB53A18")]
		private void CastForTargets()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xB53D90", Offset = "0xB53D90", VA = "0xB53D90")]
		private void DisplayLineBetweenPoints(Vector3 point1, Vector3 point2)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xB53EB0", Offset = "0xB53EB0", VA = "0xB53EB0")]
		private void DisplayMaxDistanceLine()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xB4EAA4", Offset = "0xB4EAA4", VA = "0xB4EAA4")]
		public void StopSpell()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xB4E1B8", Offset = "0xB4E1B8", VA = "0xB4E1B8")]
		public Spell()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class SpellOrb : Grabable
	{
		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F0704", Offset = "0x8F0704")]
		[SerializeField]
		[StateInfoIdReference]
		private int spellId;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float equipDistance;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ParticleSystem pullOrbParticles;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ParticleSystem equippedParticles;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SFX_3DHook grabbedSFX;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SFX_3DHook equippedSFX;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEventInt OnEquiped;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F07C0", Offset = "0x8F07C0")]
		private float thresholdForFloat;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3? initialPosition;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion? initialRotation;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool hasBeenReleased;

		[Token(Token = "0x170001B0")]
		public int SpellID
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xB54088", Offset = "0xB54088", VA = "0xB54088")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xB54090", Offset = "0xB54090", VA = "0xB54090", Slot = "9")]
		protected override void GrabStarted()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xB54194", Offset = "0xB54194", VA = "0xB54194")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xB54278", Offset = "0xB54278", VA = "0xB54278")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xB545FC", Offset = "0xB545FC", VA = "0xB545FC", Slot = "11")]
		protected override void GrabReleased()
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xB5463C", Offset = "0xB5463C", VA = "0xB5463C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xB54664", Offset = "0xB54664", VA = "0xB54664", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xB5452C", Offset = "0xB5452C", VA = "0xB5452C")]
		private void ResetTransform()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xB5468C", Offset = "0xB5468C", VA = "0xB5468C")]
		public SpellOrb()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000375")]
	public class SpellData
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[StateInfoIdReference]
		private int id;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ActivationConditions activationConditions;

		[Token(Token = "0x170001B1")]
		public int ID
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0xB54070", Offset = "0xB54070", VA = "0xB54070")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B2")]
		public ActivationConditions ActivationConditions
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0xB54078", Offset = "0xB54078", VA = "0xB54078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xB54080", Offset = "0xB54080", VA = "0xB54080")]
		public SpellData()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class SpellsManager : Static<SpellsManager>
	{
		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<SpellData> spells;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, ActivationConditions> spellsLookUp;

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xB546B4", Offset = "0xB546B4", VA = "0xB546B4")]
		private void Start()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xB547E0", Offset = "0xB547E0", VA = "0xB547E0")]
		public void OnSelectedSpell(int spellId)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xB548E8", Offset = "0xB548E8", VA = "0xB548E8")]
		public SpellsManager()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class Weather : Spell
	{
		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject handEffect;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject castEffect;

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xB5C848", Offset = "0xB5C848", VA = "0xB5C848", Slot = "7")]
		protected override void Primed(Inputs.InputSide newHand)
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xB5C8A0", Offset = "0xB5C8A0", VA = "0xB5C8A0", Slot = "8")]
		protected override void UnPrimed(Inputs.InputSide newHand)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xB5C8F8", Offset = "0xB5C8F8", VA = "0xB5C8F8", Slot = "9")]
		protected override void SpellCast(Inputs.InputSide hand)
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xB5C984", Offset = "0xB5C984", VA = "0xB5C984", Slot = "10")]
		protected override void SpellStopCast(Inputs.InputSide hand)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xB5C988", Offset = "0xB5C988", VA = "0xB5C988")]
		public Weather()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class BlockInputs : State
	{
		[Token(Token = "0x6001855")]
		[Address(RVA = "0xBE8284", Offset = "0xBE8284", VA = "0xBE8284", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xBE82E4", Offset = "0xBE82E4", VA = "0xBE82E4", Slot = "5")]
		public override void End()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xBE8344", Offset = "0xBE8344", VA = "0xBE8344")]
		public BlockInputs()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class InGame : State
	{
		[Token(Token = "0x6001858")]
		[Address(RVA = "0xC1BC0C", Offset = "0xC1BC0C", VA = "0xC1BC0C", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xC1BEF4", Offset = "0xC1BEF4", VA = "0xC1BEF4", Slot = "5")]
		public override void End()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xC14068", Offset = "0xC14068", VA = "0xC14068")]
		public InGame()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class Initialize : State
	{
		[Token(Token = "0x600185B")]
		[Address(RVA = "0xC1BEF8", Offset = "0xC1BEF8", VA = "0xC1BEF8", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xC1BF60", Offset = "0xC1BF60", VA = "0xC1BF60", Slot = "5")]
		public override void End()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xC1BF64", Offset = "0xC1BF64", VA = "0xC1BF64")]
		public Initialize()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class Loading : State
	{
		[Token(Token = "0x600185E")]
		[Address(RVA = "0xC1E258", Offset = "0xC1E258", VA = "0xC1E258", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xC1E2E4", Offset = "0xC1E2E4", VA = "0xC1E2E4", Slot = "5")]
		public override void End()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xC14104", Offset = "0xC14104", VA = "0xC14104")]
		public Loading()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class Menu : State
	{
		[Token(Token = "0x6001861")]
		[Address(RVA = "0xC6AD6C", Offset = "0xC6AD6C", VA = "0xC6AD6C", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xC6AE20", Offset = "0xC6AE20", VA = "0xC6AE20", Slot = "5")]
		public override void End()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xC6AED8", Offset = "0xC6AED8", VA = "0xC6AED8")]
		public Menu()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class Pause : State
	{
		[Token(Token = "0x6001864")]
		[Address(RVA = "0xC72C54", Offset = "0xC72C54", VA = "0xC72C54", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xC72D14", Offset = "0xC72D14", VA = "0xC72D14", Slot = "5")]
		public override void End()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xC72DB0", Offset = "0xC72DB0", VA = "0xC72DB0")]
		public Pause()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public abstract class State
	{
		[Token(Token = "0x6001867")]
		public abstract void Start();

		[Token(Token = "0x6001868")]
		public abstract void End();

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xB557A8", Offset = "0xB557A8", VA = "0xB557A8")]
		protected State()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public static class StateMachine
	{
		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static State previousState;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static State currentState;

		[Token(Token = "0x170001B3")]
		public static State PreviousState
		{
			[Token(Token = "0x600186A")]
			[Address(RVA = "0xB55EE0", Offset = "0xB55EE0", VA = "0xB55EE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		public static State CurrentState
		{
			[Token(Token = "0x600186B")]
			[Address(RVA = "0xB55F30", Offset = "0xB55F30", VA = "0xB55F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xB55F80", Offset = "0xB55F80", VA = "0xB55F80")]
		public static void Init()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xB55FF8", Offset = "0xB55FF8", VA = "0xB55FF8")]
		public static void SetState(State state)
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class SubtitleProcessor : Static<SubtitleProcessor>
	{
		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject mainObject;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI outputText;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isShowingDemo;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xB5613C", Offset = "0xB5613C", VA = "0xB5613C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xB56748", Offset = "0xB56748", VA = "0xB56748")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xB56694", Offset = "0xB56694", VA = "0xB56694")]
		private void ToggleSubtitles()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xB56428", Offset = "0xB56428", VA = "0xB56428")]
		private void SetSubtitleDistance()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xB56524", Offset = "0xB56524", VA = "0xB56524")]
		private void SetSubtitleHeight()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xB56624", Offset = "0xB56624", VA = "0xB56624")]
		private void SetSubtitleSize()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xB568F4", Offset = "0xB568F4", VA = "0xB568F4")]
		public void SubtitleFrame(string token)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xB56A1C", Offset = "0xB56A1C", VA = "0xB56A1C")]
		public void ShowNonLocalizedText(string text)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xB56AC4", Offset = "0xB56AC4", VA = "0xB56AC4")]
		public void EraseSubtitles()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xB56B64", Offset = "0xB56B64", VA = "0xB56B64")]
		public SubtitleProcessor()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class SkipTimeline : MonoBehaviour
	{
		[Token(Token = "0x6001878")]
		[Address(RVA = "0xB51384", Offset = "0xB51384", VA = "0xB51384")]
		private void Start()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xB51454", Offset = "0xB51454", VA = "0xB51454")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xB51524", Offset = "0xB51524", VA = "0xB51524")]
		public SkipTimeline()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class TimelineBridge : MonoBehaviour
	{
		[Token(Token = "0x2000550")]
		private enum OverlappingBehavior
		{
			[Token(Token = "0x400206A")]
			AllowOverlapping,
			[Token(Token = "0x400206B")]
			StopCurrentPlaying,
			[Token(Token = "0x400206C")]
			None,
			[Token(Token = "0x400206D")]
			NeverInterrupt
		}

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int myChannel;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayableDirector director;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool playOnActiveOnly;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool loop;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool playOnStart;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[SerializeField]
		private bool stopOnDisable;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool closeCompassWhenStart;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private bool lockCompassWhilePlaying;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[SerializeField]
		private bool fireOnce;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		[SerializeField]
		private bool isSkipable;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private OverlappingBehavior overlappingBehavior;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TimelineBridge[] activeChannels;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isPlaying;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool tripped;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool played;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action OnTimelineFinishedCallback;

		[Token(Token = "0x170001B5")]
		public bool IsPlaying
		{
			[Token(Token = "0x600187B")]
			[Address(RVA = "0xB582A8", Offset = "0xB582A8", VA = "0xB582A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B6")]
		public bool Played
		{
			[Token(Token = "0x600187C")]
			[Address(RVA = "0xB582B0", Offset = "0xB582B0", VA = "0xB582B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xB582B8", Offset = "0xB582B8", VA = "0xB582B8")]
		private void Start()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xB58580", Offset = "0xB58580", VA = "0xB58580")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xB582C8", Offset = "0xB582C8", VA = "0xB582C8")]
		public void TryStartTimeline()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xB586C0", Offset = "0xB586C0", VA = "0xB586C0")]
		private bool ShouldBePlayed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xB58B14", Offset = "0xB58B14", VA = "0xB58B14")]
		private bool IsPlayingHighPriorityTimeline()
		{
			return default(bool);
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xB58C88", Offset = "0xB58C88", VA = "0xB58C88")]
		public void TimelineFinished()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xB58D9C", Offset = "0xB58D9C", VA = "0xB58D9C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xB5869C", Offset = "0xB5869C", VA = "0xB5869C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xB58DB8", Offset = "0xB58DB8", VA = "0xB58DB8")]
		public void Resume()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xB58744", Offset = "0xB58744", VA = "0xB58744")]
		private static void StopActiveTimelineAtChannel(int _channel, bool checkForSkipable = false)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xB58DD4", Offset = "0xB58DD4", VA = "0xB58DD4")]
		public void StopLooping()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xB58E88", Offset = "0xB58E88", VA = "0xB58E88")]
		public static void SkipTimelinesInAllChannels()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xB58F34", Offset = "0xB58F34", VA = "0xB58F34")]
		public static void PauseTimelinesInAllChannels()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xB58FDC", Offset = "0xB58FDC", VA = "0xB58FDC")]
		private static void PauseActiveTimelineAtChannel(int _channel)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xB59188", Offset = "0xB59188", VA = "0xB59188")]
		public static void ResumeTimelinesInAllChannels()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xB59230", Offset = "0xB59230", VA = "0xB59230")]
		private static void ResumeActiveTimelineAtChannel(int _channel)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xB593DC", Offset = "0xB593DC", VA = "0xB593DC")]
		public static bool IsHavingActiveTimeline()
		{
			return default(bool);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xB59550", Offset = "0xB59550", VA = "0xB59550")]
		private void Update()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xB5960C", Offset = "0xB5960C", VA = "0xB5960C")]
		public TimelineBridge()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class MergeTarget : MonoBehaviour
	{
		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ObjectIdReference]
		private int targetId;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool disableOnMerged;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent OnCollideWithAnotherTarget;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnMerged;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ShadowHandable shadowHandable;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MergeTrigger currentTrigger;

		[Token(Token = "0x170001B7")]
		public bool IsGrabbing
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0xC6BF50", Offset = "0xC6BF50", VA = "0xC6BF50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xC6C024", Offset = "0xC6C024", VA = "0xC6C024")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xC6C328", Offset = "0xC6C328", VA = "0xC6C328")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xC6C4C8", Offset = "0xC6C4C8", VA = "0xC6C4C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xC6C6C0", Offset = "0xC6C6C0", VA = "0xC6C6C0")]
		private void Merge()
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xC6C6D4", Offset = "0xC6C6D4", VA = "0xC6C6D4")]
		public MergeTarget()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class MergeTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ObjectIdReference]
		private int expectTargetId;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules mergeRules;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Dialogue> wrongPieceVOs;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem hoverEffect;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem snapEffect;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent OnTargetEnter;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnMerged;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent OnTargetExit;

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xC6C5E0", Offset = "0xC6C5E0", VA = "0xC6C5E0")]
		public bool IsReadyToMerge()
		{
			return default(bool);
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xC6C1BC", Offset = "0xC6C1BC", VA = "0xC6C1BC")]
		public bool IsCorrectTrigger(int targetId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xC6C5FC", Offset = "0xC6C5FC", VA = "0xC6C5FC")]
		public void Merge(Action onTargetMerged)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xC6C284", Offset = "0xC6C284", VA = "0xC6C284")]
		public void TargetEnter()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xC6C1CC", Offset = "0xC6C1CC", VA = "0xC6C1CC")]
		public void WrongTargetEnter()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xC6C424", Offset = "0xC6C424", VA = "0xC6C424")]
		public void TargetExit()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xC6C6E4", Offset = "0xC6C6E4", VA = "0xC6C6E4")]
		public MergeTrigger()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class OpenCompassTutorial : Tutorial
	{
		[Token(Token = "0x600189E")]
		[Address(RVA = "0xC72C4C", Offset = "0xC72C4C", VA = "0xC72C4C")]
		public OpenCompassTutorial()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class Tutorial : MonoBehaviour
	{
		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int order;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TutorialDef tutorialDef;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameRules activeRules;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameRules completeRules;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private uSignal tutorialCompletedSignal;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public UnityEvent onTutorialCompleted;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool actionCompleted;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool isPlaying;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool isCompleted;

		[Token(Token = "0x170001B8")]
		public int Order
		{
			[Token(Token = "0x600189F")]
			[Address(RVA = "0xB5A59C", Offset = "0xB5A59C", VA = "0xB5A59C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B9")]
		public TutorialDef TutorialDef
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0xB5A5A4", Offset = "0xB5A5A4", VA = "0xB5A5A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public bool IsCompleted
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xB5A5AC", Offset = "0xB5A5AC", VA = "0xB5A5AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BB")]
		public bool IsActive
		{
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xB5A5C8", Offset = "0xB5A5C8", VA = "0xB5A5C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BC")]
		public bool IsPlaying
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0xB5A5E4", Offset = "0xB5A5E4", VA = "0xB5A5E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xB5A5EC", Offset = "0xB5A5EC", VA = "0xB5A5EC")]
			set
			{
			}
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xB5A5F8", Offset = "0xB5A5F8", VA = "0xB5A5F8")]
		public void CompleteAction()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xB5A604", Offset = "0xB5A604", VA = "0xB5A604")]
		public void CheckIfHappening()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xB5A84C", Offset = "0xB5A84C", VA = "0xB5A84C")]
		public void ResetTutorial()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xB5A858", Offset = "0xB5A858", VA = "0xB5A858")]
		public Tutorial()
		{
		}
	}
	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DF534", Offset = "0x8DF534")]
	public class TutorialDef : ScriptableObject
	{
		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected TutorialGraphicDisplayType displayType;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected TutorialDisplayButton buttonEnum;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string text;

		[Token(Token = "0x170001BD")]
		public TutorialGraphicDisplayType DisplayType
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0xB5A8E0", Offset = "0xB5A8E0", VA = "0xB5A8E0")]
			get
			{
				return default(TutorialGraphicDisplayType);
			}
		}

		[Token(Token = "0x170001BE")]
		public TutorialDisplayButton ButtonEnum
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xB5A8E8", Offset = "0xB5A8E8", VA = "0xB5A8E8")]
			get
			{
				return default(TutorialDisplayButton);
			}
		}

		[Token(Token = "0x170001BF")]
		public string Text
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xB5A8F0", Offset = "0xB5A8F0", VA = "0xB5A8F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xB5A8F8", Offset = "0xB5A8F8", VA = "0xB5A8F8")]
		public TutorialDef()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public enum TutorialGraphicDisplayType
	{
		[Token(Token = "0x4001779")]
		Controller,
		[Token(Token = "0x400177A")]
		Hand
	}
	[Token(Token = "0x2000389")]
	public enum TutorialDisplayButton
	{
		[Token(Token = "0x400177C")]
		TRIGGER,
		[Token(Token = "0x400177D")]
		GRIP,
		[Token(Token = "0x400177E")]
		A_X,
		[Token(Token = "0x400177F")]
		B_Y,
		[Token(Token = "0x4001780")]
		THUMBSTICK,
		[Token(Token = "0x4001781")]
		MENU,
		[Token(Token = "0x4001782")]
		TRIGGER_GRIP_THUMBSTICK
	}
	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8DF584", Offset = "0x8DF584")]
	public class TutorialRuneStonesAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SFX_2DHook runeDisappearSoundEffect;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator runestoneAnim;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isAnimating;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int RunestonesAppear;

		[Token(Token = "0x170001C0")]
		public bool IsAnimating
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0xB5A900", Offset = "0xB5A900", VA = "0xB5A900")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xB5A908", Offset = "0xB5A908", VA = "0xB5A908")]
		private void Start()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xB5A960", Offset = "0xB5A960", VA = "0xB5A960")]
		public void PlayAnimation()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xB5A9EC", Offset = "0xB5A9EC", VA = "0xB5A9EC")]
		public void RunestoneAnimationDone()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xB5AA14", Offset = "0xB5AA14", VA = "0xB5AA14")]
		public TutorialRuneStonesAnimation()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class TutorialsManager : Static<TutorialsManager>
	{
		[Serializable]
		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF28", Offset = "0x8DFF28")]
		private sealed class <>c
		{
			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Tutorial, int> <>9__7_0;

			[Token(Token = "0x6001F36")]
			[Address(RVA = "0xB5B6BC", Offset = "0xB5B6BC", VA = "0xB5B6BC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F37")]
			[Address(RVA = "0xB5B6C4", Offset = "0xB5B6C4", VA = "0xB5B6C4")]
			internal int <InitializeTutorials>b__7_0(Tutorial t)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private sTextEvent controllerTextEvent;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Tutorial> tutorials;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private cControllerDisplay leftControllerScript;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private cControllerDisplay rightControllerScript;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, Tutorial> tutorialLookUp;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tutorial currentTutorial;

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xB5AA80", Offset = "0xB5AA80", VA = "0xB5AA80", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xB5AAD8", Offset = "0xB5AAD8", VA = "0xB5AAD8")]
		private void InitializeTutorials()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xB5AF28", Offset = "0xB5AF28", VA = "0xB5AF28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xB5AE18", Offset = "0xB5AE18", VA = "0xB5AE18")]
		private void TryFindTutorial()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xB5AFB0", Offset = "0xB5AFB0", VA = "0xB5AFB0")]
		private void ShowHands()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xB5B038", Offset = "0xB5B038", VA = "0xB5B038")]
		private void ShowControllers()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xB5B0C0", Offset = "0xB5B0C0", VA = "0xB5B0C0")]
		private void DisplayTutorialText(string newText)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xB5B150", Offset = "0xB5B150", VA = "0xB5B150")]
		private void Update()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xB5B23C", Offset = "0xB5B23C", VA = "0xB5B23C")]
		private void StartTutorial(Tutorial tutorial)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xB5B33C", Offset = "0xB5B33C", VA = "0xB5B33C")]
		private void HighlightButton(cControllerDisplaySystem.DisplayButton button)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xB5A7B8", Offset = "0xB5A7B8", VA = "0xB5A7B8")]
		public void CompletedTutorial()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xB5B4B4", Offset = "0xB5B4B4", VA = "0xB5B4B4")]
		public void StartTutorial(int index)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xB5A76C", Offset = "0xB5A76C", VA = "0xB5A76C")]
		public void ShowDefaultHand()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xB5B478", Offset = "0xB5B478", VA = "0xB5B478")]
		public void HideButtonHighlights()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xB5B5B4", Offset = "0xB5B5B4", VA = "0xB5B5B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xB5B5B8", Offset = "0xB5B5B8", VA = "0xB5B5B8")]
		public TutorialsManager()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class ActivationConditions : MonoBehaviour
	{
		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject target;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool evaluateAtAwake;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool evaluateAtOnEnable;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool evaluateAtStart;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameRules gameRules;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnActive;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent OnNotActive;

		[Token(Token = "0x170001C1")]
		public GameObject Target
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xBE3148", Offset = "0xBE3148", VA = "0xBE3148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xBE31D8", Offset = "0xBE31D8", VA = "0xBE31D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xBE3258", Offset = "0xBE3258", VA = "0xBE3258")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xBE3268", Offset = "0xBE3268", VA = "0xBE3268")]
		private void Start()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xBE31E8", Offset = "0xBE31E8", VA = "0xBE31E8")]
		public void ReEvaluate()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xBE3278", Offset = "0xBE3278", VA = "0xBE3278")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xBE32F4", Offset = "0xBE32F4", VA = "0xBE32F4")]
		public ActivationConditions()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class AdvancedActivationConditions : MonoBehaviour
	{
		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject target;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool evaluateAtAwake;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool evaluateAtOnEnable;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool evaluateAtStart;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AdvancedGameRule gameRules;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnActive;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent OnNotActive;

		[Token(Token = "0x170001C2")]
		public GameObject Target
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xBE3364", Offset = "0xBE3364", VA = "0xBE3364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xBE33F4", Offset = "0xBE33F4", VA = "0xBE33F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xBE3470", Offset = "0xBE3470", VA = "0xBE3470")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xBE3480", Offset = "0xBE3480", VA = "0xBE3480")]
		private void Start()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xBE3404", Offset = "0xBE3404", VA = "0xBE3404")]
		public void ReEvaluate()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xBE34F4", Offset = "0xBE34F4", VA = "0xBE34F4")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xBE356C", Offset = "0xBE356C", VA = "0xBE356C")]
		public AdvancedActivationConditions()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038E")]
	public class AdvancedGameRule
	{
		[Token(Token = "0x2000552")]
		private enum LogicalOperation
		{
			[Token(Token = "0x4002071")]
			And,
			[Token(Token = "0x4002072")]
			Or
		}

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameRules rule1;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LogicalOperation logicalOperation;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules rule2;

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xBE3490", Offset = "0xBE3490", VA = "0xBE3490")]
		public bool Evaluate()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xBE35DC", Offset = "0xBE35DC", VA = "0xBE35DC")]
		public AdvancedGameRule()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public static class Helpers
	{
		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xC12890", Offset = "0xC12890", VA = "0xC12890")]
		public static bool IsEqualToFloat(this float mValue, float compareValue, float minUnit = 0.001f)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xC1B1DC", Offset = "0xC1B1DC", VA = "0xC1B1DC")]
		public static GameObject RemoveAllComponentsExcept(this GameObject toRemove, params Type[] excludeFromDelete)
		{
			return null;
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xC1B3F8", Offset = "0xC1B3F8", VA = "0xC1B3F8")]
		private static void RemoveAllComponentsExcept(GameObject obj, Dictionary<Type, bool> typesAllowed)
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class InvokeConditions : MonoBehaviour
	{
		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF38", Offset = "0x8DFF38")]
		private sealed class <InvokeAfterSecondsCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent action;

			[Token(Token = "0x170002C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F3B")]
				[Address(RVA = "0xC1D960", Offset = "0xC1D960", VA = "0xC1D960", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F3D")]
				[Address(RVA = "0xC1D9CC", Offset = "0xC1D9CC", VA = "0xC1D9CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F38")]
			[Address(RVA = "0xC1D878", Offset = "0xC1D878", VA = "0xC1D878")]
			[DebuggerHidden]
			public <InvokeAfterSecondsCoroutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001F39")]
			[Address(RVA = "0xC1D8AC", Offset = "0xC1D8AC", VA = "0xC1D8AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0xC1D8B0", Offset = "0xC1D8B0", VA = "0xC1D8B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0xC1D968", Offset = "0xC1D968", VA = "0xC1D968", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool invokeOnAwake;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool invokeOnStart;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool invokeOnEnable;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool invokeOnDisable;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules gameRules;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float delay;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnPassed;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent OnFailed;

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xC1D6CC", Offset = "0xC1D6CC", VA = "0xC1D6CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xC1D6E0", Offset = "0xC1D6E0", VA = "0xC1D6E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xC1D6F0", Offset = "0xC1D6F0", VA = "0xC1D6F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xC1D700", Offset = "0xC1D700", VA = "0xC1D700")]
		private void Start()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xC1D6DC", Offset = "0xC1D6DC", VA = "0xC1D6DC")]
		public void Invoke()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xC1D710", Offset = "0xC1D710", VA = "0xC1D710")]
		private void TryInvoke()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xC1D7F4", Offset = "0xC1D7F4", VA = "0xC1D7F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7D0C", Offset = "0x8F7D0C")]
		private IEnumerator InvokeAfterSecondsCoroutine(float time, UnityEvent action)
		{
			return null;
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xC1D8A4", Offset = "0xC1D8A4", VA = "0xC1D8A4")]
		public InvokeConditions()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class MatchCameraPos : MonoBehaviour
	{
		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera mCamera;

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xC69D0C", Offset = "0xC69D0C", VA = "0xC69D0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xC69D34", Offset = "0xC69D34", VA = "0xC69D34")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xC69E98", Offset = "0xC69E98", VA = "0xC69E98")]
		public MatchCameraPos()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public abstract class Static<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0C94", Offset = "0x8F0C94")]
		private static T <Instance>k__BackingField;

		[Token(Token = "0x170001C3")]
		public static T Instance
		{
			[Token(Token = "0x60018E1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D70", Offset = "0x8F7D70")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018E2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D80", Offset = "0x8F7D80")]
			private set
			{
			}
		}

		[Token(Token = "0x60018E3")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60018E4")]
		protected Static()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public abstract class StaticInstance<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0CA4", Offset = "0x8F0CA4")]
		private static T <Instance>k__BackingField;

		[Token(Token = "0x170001C4")]
		public static T Instance
		{
			[Token(Token = "0x60018E5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7D90", Offset = "0x8F7D90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018E6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7DA0", Offset = "0x8F7DA0")]
			private set
			{
			}
		}

		[Token(Token = "0x60018E7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60018E8")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60018E9")]
		protected StaticInstance()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public abstract class Singleton<T> : StaticInstance<T> where T : MonoBehaviour
	{
		[Token(Token = "0x60018EA")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60018EB")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public abstract class PersistentSingleton<T> : Singleton<T> where T : MonoBehaviour
	{
		[Token(Token = "0x60018EC")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60018ED")]
		protected PersistentSingleton()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class TrackTransform : MonoBehaviour
	{
		[Token(Token = "0x2000554")]
		private enum UpdateMethod
		{
			[Token(Token = "0x4002078")]
			UPDATE,
			[Token(Token = "0x4002079")]
			LATE_UPDATE,
			[Token(Token = "0x400207A")]
			FIXED_UPDATE
		}

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string findOnEnable;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool tracking;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform transformToTrack;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F0CE4", Offset = "0x8F0CE4")]
		[SerializeField]
		private UpdateMethod updateMethod;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F0D30", Offset = "0x8F0D30")]
		[SerializeField]
		private bool trackPosition;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F0D7C", Offset = "0x8F0D7C")]
		[SerializeField]
		private bool trackRotation;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		private bool constraintXPos;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[SerializeField]
		private bool constraintYPos;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool constraintZPos;

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xB59EA4", Offset = "0xB59EA4", VA = "0xB59EA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xB59EA8", Offset = "0xB59EA8", VA = "0xB59EA8")]
		private void FindTransformToTrack()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xB59F94", Offset = "0xB59F94", VA = "0xB59F94")]
		private void UpdateTransform()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xB5A070", Offset = "0xB5A070", VA = "0xB5A070")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xB5A148", Offset = "0xB5A148", VA = "0xB5A148")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xB5A160", Offset = "0xB5A160", VA = "0xB5A160")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xB5A17C", Offset = "0xB5A17C", VA = "0xB5A17C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xB5A198", Offset = "0xB5A198", VA = "0xB5A198")]
		public void StartTracking()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xB5A1A4", Offset = "0xB5A1A4", VA = "0xB5A1A4")]
		public void StopTracking()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xB5A1AC", Offset = "0xB5A1AC", VA = "0xB5A1AC")]
		public TrackTransform()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class UpdateParentTransform : MonoBehaviour
	{
		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules rule;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool parentOnStart;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform parent;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string parentName;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool resetLocalPos;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool resetLocalRot;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent OnParented;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnUnParented;

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xB5BA28", Offset = "0xB5BA28", VA = "0xB5BA28")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xB5BA38", Offset = "0xB5BA38", VA = "0xB5BA38")]
		public void UpdateParent()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xB5BA7C", Offset = "0xB5BA7C", VA = "0xB5BA7C")]
		private bool TryChangeParent()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xB5BB88", Offset = "0xB5BB88", VA = "0xB5BB88")]
		private void ResetLocalTransform()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xB5BC80", Offset = "0xB5BC80", VA = "0xB5BC80")]
		public void UnParent()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xB5BCD0", Offset = "0xB5BCD0", VA = "0xB5BCD0")]
		public void SetDontDestroyOnLoad()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xB5BD4C", Offset = "0xB5BD4C", VA = "0xB5BD4C")]
		public UpdateParentTransform()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class ArrivedInEndGame : MonoBehaviour
	{
		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xBE35E4", Offset = "0xBE35E4", VA = "0xBE35E4")]
		public void BeginCredits()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xBE366C", Offset = "0xBE366C", VA = "0xBE366C")]
		public ArrivedInEndGame()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class Bowl : MonoBehaviour
	{
		[Token(Token = "0x2000555")]
		private enum BowState
		{
			[Token(Token = "0x400207C")]
			Stuck,
			[Token(Token = "0x400207D")]
			NotFill,
			[Token(Token = "0x400207E")]
			Fill
		}

		[Token(Token = "0x2000556")]
		private struct LaunchData
		{
			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Vector3 initialVelocity;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public readonly float timeToTarget;

			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0x999C98", Offset = "0x999C98", VA = "0x999C98")]
			public LaunchData(Vector3 initialVelocity, float timeToTarget)
			{
			}
		}

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject ectoplasmGO;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 throwingDirection;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 targetPos;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[StateInfoIdReference]
		private int bowlState;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DialogueList takeEctoplasmVO;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float h;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MeshCollider collider;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StateInst bowlStateInst;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float gravity;

		[Token(Token = "0x170001C5")]
		private StateInst BowlStateInst
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0xBE8468", Offset = "0xBE8468", VA = "0xBE8468")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xBE84DC", Offset = "0xBE84DC", VA = "0xBE84DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xBE8504", Offset = "0xBE8504", VA = "0xBE8504")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xBE854C", Offset = "0xBE854C", VA = "0xBE854C")]
		public void ThrowBowl()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xBE8820", Offset = "0xBE8820", VA = "0xBE8820")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xBE85DC", Offset = "0xBE85DC", VA = "0xBE85DC")]
		private LaunchData CalculateLaunchData()
		{
			return default(LaunchData);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xBE88C0", Offset = "0xBE88C0", VA = "0xBE88C0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xBE8ADC", Offset = "0xBE8ADC", VA = "0xBE8ADC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xBE8BCC", Offset = "0xBE8BCC", VA = "0xBE8BCC")]
		public Bowl()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public enum DaisIngredientId
	{
		[Token(Token = "0x40017C4")]
		PurpleFlower,
		[Token(Token = "0x40017C5")]
		Ectoplasm,
		[Token(Token = "0x40017C6")]
		Wine
	}
	[Token(Token = "0x200039B")]
	public class Dais : MonoBehaviour
	{
		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules activationRules;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[QuestDefReference]
		private int daisCompletedQuest;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<DaisStep> daisSteps;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SFX_3DHook correctIngredientVO;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SFX_3DHook wrongIngredientVO;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject consumeParticle;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uSignal faerieExcitedSignal;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private uSignal faerieRejectedSignal;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent daisCompleted;

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xC08D98", Offset = "0xC08D98", VA = "0xC08D98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xC08EF8", Offset = "0xC08EF8", VA = "0xC08EF8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xC090E8", Offset = "0xC090E8", VA = "0xC090E8")]
		private void UseIngredient(DaisIngredient ingredient)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xC092F8", Offset = "0xC092F8", VA = "0xC092F8")]
		public Dais()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class DaisIngredient : MonoBehaviour
	{
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DaisIngredientId daisIngredientId;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules rules;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isCorrectIngredient;

		[Token(Token = "0x170001C6")]
		public DaisIngredientId DaisIngredientId
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xC09444", Offset = "0xC09444", VA = "0xC09444")]
			get
			{
				return default(DaisIngredientId);
			}
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xC090A4", Offset = "0xC090A4", VA = "0xC090A4")]
		public bool IsCorrectIngredient()
		{
			return default(bool);
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xC0944C", Offset = "0xC0944C", VA = "0xC0944C")]
		public DaisIngredient()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039D")]
	public class DaisStep
	{
		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private DaisIngredientId ingredientId;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[QuestDefReference]
		private int completeQuest;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent OnUsedIngredient;

		[Token(Token = "0x170001C7")]
		public bool IsCompleted
		{
			[Token(Token = "0x6001911")]
			[Address(RVA = "0xC08ED8", Offset = "0xC08ED8", VA = "0xC08ED8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C8")]
		public DaisIngredientId IngredientId
		{
			[Token(Token = "0x6001912")]
			[Address(RVA = "0xC0945C", Offset = "0xC0945C", VA = "0xC0945C")]
			get
			{
				return default(DaisIngredientId);
			}
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xC0926C", Offset = "0xC0926C", VA = "0xC0926C")]
		public void UseIngredient()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xC08EE4", Offset = "0xC08EE4", VA = "0xC08EE4")]
		public void InvokeUsedIngredient()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xC09464", Offset = "0xC09464", VA = "0xC09464")]
		public DaisStep()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class Dirt : MonoBehaviour
	{
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent plantAcorn;

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xC0B448", Offset = "0xC0B448", VA = "0xC0B448")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xC0B504", Offset = "0xC0B504", VA = "0xC0B504")]
		public Dirt()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class FaerieAnimations : MonoBehaviour
	{
		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF48", Offset = "0x8DFF48")]
		private sealed class <LerpOverTime>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FaerieAnimations <>4__this;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject faerie;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endPos;

			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float seconds;

			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeToTurnPassed>5__2;

			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <startingPos>5__3;

			[Token(Token = "0x170002C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F42")]
				[Address(RVA = "0xC0F938", Offset = "0xC0F938", VA = "0xC0F938", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F44")]
				[Address(RVA = "0xC0F9A4", Offset = "0xC0F9A4", VA = "0xC0F9A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0xC0F1E8", Offset = "0xC0F1E8", VA = "0xC0F1E8")]
			[DebuggerHidden]
			public <LerpOverTime>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6001F40")]
			[Address(RVA = "0xC0F39C", Offset = "0xC0F39C", VA = "0xC0F39C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F41")]
			[Address(RVA = "0xC0F3A0", Offset = "0xC0F3A0", VA = "0xC0F3A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F43")]
			[Address(RVA = "0xC0F940", Offset = "0xC0F940", VA = "0xC0F940", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve speedCurve;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] faeriePositions;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform daisTransform;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1090", Offset = "0x8F1090")]
		private float timeBeforeMoving;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F10DC", Offset = "0x8F10DC")]
		private float timeToFly;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1128", Offset = "0x8F1128")]
		private float timeToTurn;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1174", Offset = "0x8F1174")]
		private float rotationSpeed;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F11C0", Offset = "0x8F11C0")]
		private float pos1Magnitude;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F120C", Offset = "0x8F120C")]
		private float pos2Radius;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1258", Offset = "0x8F1258")]
		private float pos3Radius;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F12A4", Offset = "0x8F12A4")]
		private float MoveToDaisTime;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F12F0", Offset = "0x8F12F0")]
		private bool FaerieLooksAtPlayer;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Animator faerieAnimController;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F134C", Offset = "0x8F134C")]
		private bool randomMove;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 endingPosition;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float timePassed;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool positionFixed;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float tempTime;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int index;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Flying;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int PointDown;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int Talking;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int Excited;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int Laugh;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int CrossArms;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int Lean;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int Revolted;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int PresentGoblet;

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xC0E8DC", Offset = "0xC0E8DC", VA = "0xC0E8DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xC0E938", Offset = "0xC0E938", VA = "0xC0E938")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xC0E9C4", Offset = "0xC0E9C4", VA = "0xC0E9C4")]
		private void UpdateFaerieEndingPosition()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xC0EC44", Offset = "0xC0EC44", VA = "0xC0EC44")]
		public void SetTalking(bool state)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xC0ECD8", Offset = "0xC0ECD8", VA = "0xC0ECD8")]
		public void SetRandomMove(bool state)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xC0ECE4", Offset = "0xC0ECE4", VA = "0xC0ECE4")]
		public void TriggerExcited()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xC0ED68", Offset = "0xC0ED68", VA = "0xC0ED68")]
		public void TriggerLaugh()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xC0EDEC", Offset = "0xC0EDEC", VA = "0xC0EDEC")]
		public void TriggerCrossArms()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xC0EE70", Offset = "0xC0EE70", VA = "0xC0EE70")]
		public void TriggerLean()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xC0EEF4", Offset = "0xC0EEF4", VA = "0xC0EEF4")]
		public void TriggerPointDown()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xC0EF78", Offset = "0xC0EF78", VA = "0xC0EF78")]
		public void TriggerRejectItem()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xC0EFFC", Offset = "0xC0EFFC", VA = "0xC0EFFC")]
		public void TriggerPresentGoblet()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xC0F080", Offset = "0xC0F080", VA = "0xC0F080")]
		public void MoveToDais()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xC0F184", Offset = "0xC0F184", VA = "0xC0F184")]
		public void MovingToLocation(Vector3 position)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xC0EB9C", Offset = "0xC0EB9C", VA = "0xC0EB9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7DB0", Offset = "0x8F7DB0")]
		private IEnumerator LerpOverTime(GameObject faerie, Vector3 endPos, float seconds)
		{
			return null;
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xC0F214", Offset = "0xC0F214", VA = "0xC0F214")]
		public FaerieAnimations()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class FeylandWeather : MonoBehaviour
	{
		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float weatherDuration;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject rainObject;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SFX_3DHook faerieDanceSFX;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SFX_3DHook rainSFX;

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xC10218", Offset = "0xC10218", VA = "0xC10218")]
		public void ControlWeatherCast()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xC10270", Offset = "0xC10270", VA = "0xC10270")]
		public void DisableWeather()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xC102C8", Offset = "0xC102C8", VA = "0xC102C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xC102CC", Offset = "0xC102CC", VA = "0xC102CC")]
		public FeylandWeather()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class FireFlies : MonoBehaviour
	{
		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator fireflyAnimator;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules playParticlesRules;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem fireflyParticles;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Dialogue firefliesCommunedVO;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Dialogue firefliesCommunedAgainVO;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook communedSFX;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool animPlaying;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int PlayCode;

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xC10524", Offset = "0xC10524", VA = "0xC10524")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xC10580", Offset = "0xC10580", VA = "0xC10580")]
		public void OnCommuned()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xC10640", Offset = "0xC10640", VA = "0xC10640")]
		public void PlayCommunedVO()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xC10684", Offset = "0xC10684", VA = "0xC10684")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xC1068C", Offset = "0xC1068C", VA = "0xC1068C")]
		public FireFlies()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class FlowersController : MonoBehaviour
	{
		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int currentFlow;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[ObjectIdReference]
		private int purpleFlowerObjectId;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[ObjectIdReference]
		private int yellowFlowerObjectId;

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xC12988", Offset = "0xC12988", VA = "0xC12988")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xC12BB8", Offset = "0xC12BB8", VA = "0xC12BB8")]
		public FlowersController()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class Mole : MonoBehaviour
	{
		[Token(Token = "0x2000558")]
		private enum MoleState
		{
			[Token(Token = "0x400208A")]
			NotDig,
			[Token(Token = "0x400208B")]
			Dig
		}

		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF58", Offset = "0x8DFF58")]
		private sealed class <LerpOverTime>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject mole;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 endPos;

			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float seconds;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Mole <>4__this;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timePassed>5__2;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <startingPos>5__3;

			[Token(Token = "0x170002C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F48")]
				[Address(RVA = "0xC6DF58", Offset = "0xC6DF58", VA = "0xC6DF58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F4A")]
				[Address(RVA = "0xC6DFC4", Offset = "0xC6DFC4", VA = "0xC6DFC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F45")]
			[Address(RVA = "0xC6D9D0", Offset = "0xC6D9D0", VA = "0xC6D9D0")]
			[DebuggerHidden]
			public <LerpOverTime>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001F46")]
			[Address(RVA = "0xC6DCF8", Offset = "0xC6DCF8", VA = "0xC6DCF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F47")]
			[Address(RVA = "0xC6DCFC", Offset = "0xC6DCFC", VA = "0xC6DCFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F49")]
			[Address(RVA = "0xC6DF60", Offset = "0xC6DF60", VA = "0xC6DF60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF68", Offset = "0x8DFF68")]
		private sealed class <LerpBackOverTime>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mole <>4__this;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject mole;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endPos;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float seconds;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timePassed>5__2;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <startingPos>5__3;

			[Token(Token = "0x170002C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F4E")]
				[Address(RVA = "0xC6DC84", Offset = "0xC6DC84", VA = "0xC6DC84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F50")]
				[Address(RVA = "0xC6DCF0", Offset = "0xC6DCF0", VA = "0xC6DCF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0xC6D9FC", Offset = "0xC6D9FC", VA = "0xC6D9FC")]
			[DebuggerHidden]
			public <LerpBackOverTime>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0xC6DA40", Offset = "0xC6DA40", VA = "0xC6DA40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0xC6DA44", Offset = "0xC6DA44", VA = "0xC6DA44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0xC6DC8C", Offset = "0xC6DC8C", VA = "0xC6DC8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator moleAnimController;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F14F0", Offset = "0x8F14F0")]
		[SerializeField]
		private float randomTimer;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform bowlTransform;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float durationOfWalkAnimation;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float durationOfDigAnimation;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SFX_3DHook moleDigSFX;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook moleSqueakSFX;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Dialogue moleCommunedVO;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject moleVFX;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private uSignal MoleFinishedDigSignal;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[StateInfoIdReference]
		private int moleState;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private StateInst moleStateInst;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 originalPosition;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool moveCompleted;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float tempTimer;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float randomFloatValue;

		[Token(Token = "0x170001C9")]
		private StateInst MoleStateInst
		{
			[Token(Token = "0x6001935")]
			[Address(RVA = "0xC6D3D0", Offset = "0xC6D3D0", VA = "0xC6D3D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xC6D4B8", Offset = "0xC6D4B8", VA = "0xC6D4B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xC6D4FC", Offset = "0xC6D4FC", VA = "0xC6D4FC")]
		public void MoleCommuned()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xC6D6B8", Offset = "0xC6D6B8", VA = "0xC6D6B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xC6D7B4", Offset = "0xC6D7B4", VA = "0xC6D7B4")]
		public void FinishedDigAnimation()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xC6D7D4", Offset = "0xC6D7D4", VA = "0xC6D7D4")]
		public void MoveToBowl()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xC6D76C", Offset = "0xC6D76C", VA = "0xC6D76C")]
		public void MoveToOriginalPos()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xC6D87C", Offset = "0xC6D87C", VA = "0xC6D87C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7E14", Offset = "0x8F7E14")]
		public IEnumerator LerpOverTime(GameObject mole, Vector3 endPos, float seconds)
		{
			return null;
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xC6D928", Offset = "0xC6D928", VA = "0xC6D928")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7E78", Offset = "0x8F7E78")]
		public IEnumerator LerpBackOverTime(GameObject mole, Vector3 endPos, float seconds)
		{
			return null;
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xC6DA28", Offset = "0xC6DA28", VA = "0xC6DA28")]
		public Mole()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A4")]
	public class FlowChartingSpellComponent
	{
		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[QuestDefReference]
		private int questId;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[StateInfoIdReference]
		private int spellID;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject visual;

		[Token(Token = "0x170001CA")]
		public int SpellID
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0xC10FC4", Offset = "0xC10FC4", VA = "0xC10FC4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xC10D7C", Offset = "0xC10D7C", VA = "0xC10D7C")]
		public void AddSpell()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xC10890", Offset = "0xC10890", VA = "0xC10890")]
		public bool IsAdded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xC10FCC", Offset = "0xC10FCC", VA = "0xC10FCC")]
		public FlowChartingSpellComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A5")]
	public class FlowChartingStage
	{
		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Dialogue vo;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject visual;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent OnStageCompleted;

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xC10D24", Offset = "0xC10D24", VA = "0xC10D24")]
		public void Complete()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xC10FD4", Offset = "0xC10FD4", VA = "0xC10FD4")]
		public FlowChartingStage()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class FlowChartingMachine : MonoBehaviour
	{
		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<FlowChartingSpellComponent> spellComponents;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<FlowChartingStage> stages;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private uSignal refreshCompassSignal;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnActivated;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent OnCompleted;

		[Token(Token = "0x170001CB")]
		private int NumOfAddedComponent
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0xC10784", Offset = "0xC10784", VA = "0xC10784")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CC")]
		private bool IsCompleted
		{
			[Token(Token = "0x6001946")]
			[Address(RVA = "0xC10900", Offset = "0xC10900", VA = "0xC10900")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xC10A10", Offset = "0xC10A10", VA = "0xC10A10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xC10A4C", Offset = "0xC10A4C", VA = "0xC10A4C")]
		private void Activate()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xC10A60", Offset = "0xC10A60", VA = "0xC10A60")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xC10DF4", Offset = "0xC10DF4", VA = "0xC10DF4")]
		private void CheckCompleteness()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xC10F18", Offset = "0xC10F18", VA = "0xC10F18")]
		private void AllSpellsCast()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xC10F2C", Offset = "0xC10F2C", VA = "0xC10F2C")]
		public FlowChartingMachine()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class GoldenChaliceEnable : MonoBehaviour
	{
		[Token(Token = "0x200055B")]
		private enum GoldenChaliceState
		{
			[Token(Token = "0x400209D")]
			Locked,
			[Token(Token = "0x400209E")]
			Unlocked,
			[Token(Token = "0x400209F")]
			BeenGrab
		}

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ObjectIdReference]
		private int goldenChaliceObjectId;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[StateInfoIdReference]
		private int goldenChaliceStateId;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StateInst goldenChaliceStateInst;

		[Token(Token = "0x170001CD")]
		private StateInst GoldenChaliceStateInst
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0xC18294", Offset = "0xC18294", VA = "0xC18294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xC18308", Offset = "0xC18308", VA = "0xC18308")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xC1830C", Offset = "0xC1830C", VA = "0xC1830C")]
		private void EnableGoldenChalice()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xC183CC", Offset = "0xC183CC", VA = "0xC183CC")]
		public void UnlockGoldenChalice()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xC18404", Offset = "0xC18404", VA = "0xC18404")]
		public GoldenChaliceEnable()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class Candle : Burnable
	{
		[Token(Token = "0x200055C")]
		private enum CandleState
		{
			[Token(Token = "0x40020A1")]
			NotLit,
			[Token(Token = "0x40020A2")]
			Lit
		}

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[StateInfoIdReference]
		private int candleStateId;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject quantumParticleBurst;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private StateInst candleStateInst;

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xBE98BC", Offset = "0xBE98BC", VA = "0xBE98BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xBE9928", Offset = "0xBE9928", VA = "0xBE9928")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xBE9960", Offset = "0xBE9960", VA = "0xBE9960", Slot = "8")]
		public override void StartBurn()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xBE99AC", Offset = "0xBE99AC", VA = "0xBE99AC", Slot = "9")]
		public override void EndBurn()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xBE99F8", Offset = "0xBE99F8", VA = "0xBE99F8")]
		public Candle()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class ChestLid : Grabable
	{
		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F17AC", Offset = "0x8F17AC")]
		[SerializeField]
		[StateInfoIdReference]
		private int chestStateId;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float offsetFromGrabPoint;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Animator chestAnimator;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1828", Offset = "0x8F1828")]
		private float scrubSpeed;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1874", Offset = "0x8F1874")]
		private float decaySpeed;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform startHeightMarker;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SnapPoint snapPoint;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F18E0", Offset = "0x8F18E0")]
		[SerializeField]
		private SFX_3DHook chestOpenSFX;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SFX_3DHook chestCloseSFX;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float lowestY;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool caughtUpToHand;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float animationProgress;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private double cachedTime;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isClosed;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool isInteractable;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Progress;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float minProgressToProp;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool isSnapped;

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xBE9B54", Offset = "0xBE9B54", VA = "0xBE9B54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xBE9B94", Offset = "0xBE9B94", VA = "0xBE9B94", Slot = "9")]
		protected override void GrabStarted()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xBE9BBC", Offset = "0xBE9BBC", VA = "0xBE9BBC")]
		private void Grab()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xBE9C00", Offset = "0xBE9C00", VA = "0xBE9C00", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xBE9D4C", Offset = "0xBE9D4C", VA = "0xBE9D4C")]
		private void AutoCloseChest()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xBE9E7C", Offset = "0xBE9E7C", VA = "0xBE9E7C", Slot = "10")]
		protected override void GrabRunning(Vector3 handPos, Quaternion handRot, float distance, Vector3 direction, Vector3 handVelocity, Vector3 handAngularVelocity)
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xBE9FBC", Offset = "0xBE9FBC", VA = "0xBE9FBC")]
		private void DriveAnimation(Vector3 handPos, float offset)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xBEA19C", Offset = "0xBEA19C", VA = "0xBEA19C", Slot = "6")]
		protected override bool IsGrabale()
		{
			return default(bool);
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xBE9CB0", Offset = "0xBE9CB0", VA = "0xBE9CB0")]
		private bool IsChestOpenEnoughForSnap()
		{
			return default(bool);
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xBEA1BC", Offset = "0xBEA1BC", VA = "0xBEA1BC", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xBEA278", Offset = "0xBEA278", VA = "0xBEA278")]
		public void SnapOpen()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xBEA330", Offset = "0xBEA330", VA = "0xBEA330")]
		public void UnSnap()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xBEA33C", Offset = "0xBEA33C", VA = "0xBEA33C")]
		public ChestLid()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class GlowInDarkWriting : MonoBehaviour
	{
		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer transparentWallTextRend;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules voRules;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dialogue glowInDarkRecipeRevealedVO;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Dialogue glowInDarkRecipeRevealedBeforeTalkToSpiritVO;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameRules activateRules;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject localizedGlowInDarkWritingOverlay;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshPro faerieBrewText;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshPro wineText;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshPro ectoplasmText;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshPro purpleFlowerText;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEvent OnReaveledRecipe;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color hidden;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Color visible;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int BaseColor;

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xC17C6C", Offset = "0xC17C6C", VA = "0xC17C6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xC17EA0", Offset = "0xC17EA0", VA = "0xC17EA0")]
		public void ShowText()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xC17EA8", Offset = "0xC17EA8", VA = "0xC17EA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xC17CCC", Offset = "0xC17CCC", VA = "0xC17CCC")]
		private void DisplayText(bool isVisible)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xC17EB0", Offset = "0xC17EB0", VA = "0xC17EB0")]
		private void SetOverlayLanguage()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xC18198", Offset = "0xC18198", VA = "0xC18198")]
		public void ToggleText()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xC181CC", Offset = "0xC181CC", VA = "0xC181CC")]
		public GlowInDarkWriting()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class MaterialWorldIdleVO : MonoBehaviour
	{
		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float playFaerieBrewHintAfterSeconds;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dialogue faerieBrewHint;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameRules playHintsRule;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool timing;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timer;

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xC69EA0", Offset = "0xC69EA0", VA = "0xC69EA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xC69EF8", Offset = "0xC69EF8", VA = "0xC69EF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xC69F00", Offset = "0xC69F00", VA = "0xC69F00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xC69EE4", Offset = "0xC69EE4", VA = "0xC69EE4")]
		private void StartTimer()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xC69F6C", Offset = "0xC69F6C", VA = "0xC69F6C")]
		public MaterialWorldIdleVO()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class Necromancer : MonoBehaviour
	{
		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator necromancerAnimator;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator doorAnimator;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SFX_3DHook doorOpenSFX;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SFX_3DHook doorCloseSFX;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SFX_3DHook necromancerLeaveSFX;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Open;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Close;

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xC6DFCC", Offset = "0xC6DFCC", VA = "0xC6DFCC")]
		public void Appear()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xC6E088", Offset = "0xC6E088", VA = "0xC6E088")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xC6E158", Offset = "0xC6E158", VA = "0xC6E158")]
		public Necromancer()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class QuantumChest : MonoBehaviour
	{
		[Token(Token = "0x200055D")]
		private enum QuantumChestState
		{
			[Token(Token = "0x40020A4")]
			Closed,
			[Token(Token = "0x40020A5")]
			Open
		}

		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF78", Offset = "0x8DFF78")]
		private sealed class <ActivateObjectCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuantumChest <>4__this;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject item;

			[Token(Token = "0x170002C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F54")]
				[Address(RVA = "0xC7961C", Offset = "0xC7961C", VA = "0xC7961C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F56")]
				[Address(RVA = "0xC79688", Offset = "0xC79688", VA = "0xC79688", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F51")]
			[Address(RVA = "0xC792D4", Offset = "0xC792D4", VA = "0xC792D4")]
			[DebuggerHidden]
			public <ActivateObjectCoroutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001F52")]
			[Address(RVA = "0xC794A4", Offset = "0xC794A4", VA = "0xC794A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F53")]
			[Address(RVA = "0xC794A8", Offset = "0xC794A8", VA = "0xC794A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F55")]
			[Address(RVA = "0xC79624", Offset = "0xC79624", VA = "0xC79624", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int quantumChestStateId;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private QuantumChestButton[] quantumButtons;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QuantumChestItemData[] unlockableObjects;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SnapList itemContainer;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float activateTime;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DialogueList openChestVOs;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SFX_3DHook openSFX;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent OnOpened;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent OnClosed;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isActivatingItem;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private StateInst quantumChestStateInst;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator anim;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WaitForSeconds activateTimeWFS;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int CloseLid;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int OpenLid;

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xC78C3C", Offset = "0xC78C3C", VA = "0xC78C3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xC78DB4", Offset = "0xC78DB4", VA = "0xC78DB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xC78DE0", Offset = "0xC78DE0", VA = "0xC78DE0")]
		private void OpenChest()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xC78EA4", Offset = "0xC78EA4", VA = "0xC78EA4")]
		private void CheckCombination()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xC79058", Offset = "0xC79058", VA = "0xC79058")]
		private int[] GetActiveCombination()
		{
			return null;
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xC79254", Offset = "0xC79254", VA = "0xC79254")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7EDC", Offset = "0x8F7EDC")]
		private IEnumerator ActivateObjectCoroutine(GameObject item)
		{
			return null;
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xC79300", Offset = "0xC79300", VA = "0xC79300")]
		private void Update()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xC7934C", Offset = "0xC7934C", VA = "0xC7934C")]
		private void CloseChest()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xC79410", Offset = "0xC79410", VA = "0xC79410")]
		public QuantumChest()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class QuantumChestButton : Pressable
	{
		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro currentNumberText;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color hoverColor;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook dialSoundEffect;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Dialogue firstTouchVO;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int currentNumber;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color startColor;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private cQuantumChestSelector hoveringHand;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Renderer myRend;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isHovering;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action OnButtonPressCallback;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int BaseColor;

		[Token(Token = "0x170001CE")]
		public int CurrentNumber
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0xC79690", Offset = "0xC79690", VA = "0xC79690")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xC79698", Offset = "0xC79698", VA = "0xC79698")]
		private void Start()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xC7973C", Offset = "0xC7973C", VA = "0xC7973C", Slot = "6")]
		protected override void PressStarted(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xC79774", Offset = "0xC79774", VA = "0xC79774")]
		private void CycleNumber()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xC7980C", Offset = "0xC7980C", VA = "0xC7980C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xC79880", Offset = "0xC79880", VA = "0xC79880")]
		private void SetHovering(bool hovered)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xC7996C", Offset = "0xC7996C", VA = "0xC7996C")]
		public QuantumChestButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AF")]
	public class QuantumChestItemData
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[ObjectIdReference]
		private int itemId;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[StateInfoIdReference]
		private int itemStateId;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int[] secretCode;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnUnlockedItem;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StateInst itemStateIdInst;

		[Token(Token = "0x170001CF")]
		private StateInst ItemStateIdInst
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0xC799E0", Offset = "0xC799E0", VA = "0xC799E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public int ItemID
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xC79A50", Offset = "0xC79A50", VA = "0xC79A50")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D1")]
		public int ItemState
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0xC79204", Offset = "0xC79204", VA = "0xC79204")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xC79224", Offset = "0xC79224", VA = "0xC79224")]
			set
			{
			}
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xC79114", Offset = "0xC79114", VA = "0xC79114")]
		public bool IsCorrectCode(int[] attemptCode)
		{
			return default(bool);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xC79A58", Offset = "0xC79A58", VA = "0xC79A58")]
		public QuantumChestItemData()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public enum QuantumObjectState
	{
		[Token(Token = "0x400186F")]
		Locked,
		[Token(Token = "0x4001870")]
		Unlocked
	}
	[Token(Token = "0x20003B1")]
	public class Rat : MonoBehaviour
	{
		[Token(Token = "0x200055F")]
		private enum CobwebState
		{
			[Token(Token = "0x40020AB")]
			NotBurnt,
			[Token(Token = "0x40020AC")]
			Burnt
		}

		[Token(Token = "0x2000560")]
		private enum SkeletonState
		{
			[Token(Token = "0x40020AE")]
			NotFall,
			[Token(Token = "0x40020AF")]
			Fall
		}

		[Token(Token = "0x2000561")]
		private enum PlankState
		{
			[Token(Token = "0x40020B1")]
			NotBurnt,
			[Token(Token = "0x40020B2")]
			Burnt
		}

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1BE4", Offset = "0x8F1BE4")]
		[SerializeField]
		private float randomTimer;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator ratMovementAnimController;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator ratAnimController;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator wallSkeletonAnimController;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SFX_3DHook ratIdleSFX;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook ratScratchSFX;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SFX_3DHook ratMoveSFX;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Dialogue removePlanksHintVO;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Dialogue thankRatVO;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Dialogue removePlanksHint2VO;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[StateInfoIdReference]
		private int plank;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[StateInfoIdReference]
		private int cobwebBurnt;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[StateInfoIdReference]
		private int skeletonFell;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private uSignal skeletonFallSignal;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float randomFloatValue;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float tempTimer;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private StateInst cobwebBurntStateInst;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private StateInst skeletonFellStateInst;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private StateInst plankStateInst;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Moving;

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xC8075C", Offset = "0xC8075C", VA = "0xC8075C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xC80804", Offset = "0xC80804", VA = "0xC80804")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xC808D8", Offset = "0xC808D8", VA = "0xC808D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xC80978", Offset = "0xC80978", VA = "0xC80978")]
		public void RatScratch()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xC80A34", Offset = "0xC80A34", VA = "0xC80A34")]
		public void RatMove()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xC80AD8", Offset = "0xC80AD8", VA = "0xC80AD8")]
		public void RatStop()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xC80B60", Offset = "0xC80B60", VA = "0xC80B60")]
		public void RatWall()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xC80830", Offset = "0xC80830", VA = "0xC80830")]
		public void RatSpawn()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xC80D50", Offset = "0xC80D50", VA = "0xC80D50")]
		public void TriggerSkeletonFalling()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xC80DAC", Offset = "0xC80DAC", VA = "0xC80DAC")]
		public Rat()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class Skeleton : MonoBehaviour
	{
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[StateInfoIdReference]
		[SerializeField]
		private int skeletonStateId;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator skeletonAnim;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rigidbody skullRb;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject skeletonSitting;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject skeletonCrumbled;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject quantumBurst;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnSkeletonCrumbe;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Dialogue skullAttachedVO;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SFX_3DHook skullTurnSFX;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SFX_3DHook skeletonCrumbleSfx;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEvent OnSkeletonStartTalking;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int SkullRotate;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private StateInst skeletonStateInst;

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xB510D4", Offset = "0xB510D4", VA = "0xB510D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xB51140", Offset = "0xB51140", VA = "0xB51140")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xB5116C", Offset = "0xB5116C", VA = "0xB5116C")]
		private void Crumble()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xB511FC", Offset = "0xB511FC", VA = "0xB511FC")]
		private void CrumbleBones()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xB51240", Offset = "0xB51240", VA = "0xB51240")]
		public void SkullTurnAndSpeak()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xB512DC", Offset = "0xB512DC", VA = "0xB512DC")]
		public void SkullFinishedTurning()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xB51318", Offset = "0xB51318", VA = "0xB51318")]
		public Skeleton()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class WineBottle : ShadowHandable
	{
		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F1E50", Offset = "0x8F1E50")]
		[SerializeField]
		private Dialogue drinkingWineVO;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[QuestDefReference]
		private int giveWineFaerieQuest;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Camera mCamera;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool isWaitingToRelease;

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xB5CA0C", Offset = "0xB5CA0C", VA = "0xB5CA0C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xB5CA9C", Offset = "0xB5CA9C", VA = "0xB5CA9C", Slot = "10")]
		protected override void GrabRunning(Vector3 handPos, Quaternion handRot, float distance, Vector3 direction, Vector3 handVelocity, Vector3 handAngularVelocity)
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xB5CC8C", Offset = "0xB5CC8C", VA = "0xB5CC8C")]
		public void GiveWineFaerie()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xB5CD60", Offset = "0xB5CD60", VA = "0xB5CD60")]
		public WineBottle()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class WineBottleRespawner : MonoBehaviour
	{
		[Token(Token = "0x2000562")]
		private enum WineState
		{
			[Token(Token = "0x40020B4")]
			NotBeenPickedUp,
			[Token(Token = "0x40020B5")]
			BeenPickUp
		}

		[Token(Token = "0x2000563")]
		private enum WineActiveState
		{
			[Token(Token = "0x40020B7")]
			Active,
			[Token(Token = "0x40020B8")]
			NotActive
		}

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int materialWorldStateId;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[ObjectIdReference]
		private int wineBottleId;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[StateInfoIdReference]
		private int wineStateId;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[StateInfoIdReference]
		private int wineActiveStateId;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AdvancedGameRule respawnWineRule;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameRules spawnWineRules;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform wineSpawnLocation;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StateInst wineActiveStateInst;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StateInst wineStateInst;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject wineInstance;

		[Token(Token = "0x170001D2")]
		private StateInst WineActiveStateInst
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0xB5CD64", Offset = "0xB5CD64", VA = "0xB5CD64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private StateInst WineStateInst
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0xB5CDD8", Offset = "0xB5CDD8", VA = "0xB5CDD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xB5CE4C", Offset = "0xB5CE4C", VA = "0xB5CE4C")]
		public void DayTime()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xB5CF28", Offset = "0xB5CF28", VA = "0xB5CF28")]
		private void DisableWineBottle()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xB5D05C", Offset = "0xB5D05C", VA = "0xB5D05C")]
		public void NightTime()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xB5D138", Offset = "0xB5D138", VA = "0xB5D138")]
		private void RespawnWine()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xB5D370", Offset = "0xB5D370", VA = "0xB5D370")]
		public WineBottleRespawner()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class WoodPlank : MonoBehaviour
	{
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject tempBurningEffect;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject plankVisual;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject quantumParticles;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float burnTime;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Dialogue> flameTooSmallVOs;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent OnPlanksBurned;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool burning;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool burned;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timer;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float cooldowntime;

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xB5D3F8", Offset = "0xB5D3F8", VA = "0xB5D3F8")]
		public void TryBurnSmallFlame()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xB5D4A4", Offset = "0xB5D4A4", VA = "0xB5D4A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xB5D4E4", Offset = "0xB5D4E4", VA = "0xB5D4E4")]
		public void StartBurn()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xB5D578", Offset = "0xB5D578", VA = "0xB5D578")]
		public void EndBurn()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xB5D63C", Offset = "0xB5D63C", VA = "0xB5D63C")]
		private void DisableParticles()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xB5D65C", Offset = "0xB5D65C", VA = "0xB5D65C")]
		public WoodPlank()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class ScrollCredit : MonoBehaviour
	{
		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF88", Offset = "0x8DFF88")]
		private sealed class <ScrollCredits>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScrollCredit <>4__this;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <pos>5__2;

			[Token(Token = "0x170002CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F5A")]
				[Address(RVA = "0xB4D034", Offset = "0xB4D034", VA = "0xB4D034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F5C")]
				[Address(RVA = "0xB4D0A0", Offset = "0xB4D0A0", VA = "0xB4D0A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F57")]
			[Address(RVA = "0xB4CB70", Offset = "0xB4CB70", VA = "0xB4CB70")]
			[DebuggerHidden]
			public <ScrollCredits>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0xB4CED4", Offset = "0xB4CED4", VA = "0xB4CED4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F59")]
			[Address(RVA = "0xB4CED8", Offset = "0xB4CED8", VA = "0xB4CED8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0xB4D03C", Offset = "0xB4D03C", VA = "0xB4D03C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF98", Offset = "0x8DFF98")]
		private sealed class <Finish>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScrollCredit <>4__this;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <alpha>5__2;

			[Token(Token = "0x170002CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F60")]
				[Address(RVA = "0xB4CE60", Offset = "0xB4CE60", VA = "0xB4CE60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F62")]
				[Address(RVA = "0xB4CECC", Offset = "0xB4CECC", VA = "0xB4CECC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0xB4CC10", Offset = "0xB4CC10", VA = "0xB4CC10")]
			[DebuggerHidden]
			public <Finish>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0xB4CC44", Offset = "0xB4CC44", VA = "0xB4CC44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0xB4CC48", Offset = "0xB4CC48", VA = "0xB4CC48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F61")]
			[Address(RVA = "0xB4CE68", Offset = "0xB4CE68", VA = "0xB4CE68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextAsset creditsTxt;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scrollSpeed;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float startYPos;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float stopYPos;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float creditFadeSpeed;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI tmp;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool skip;

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xB4C5D4", Offset = "0xB4C5D4", VA = "0xB4C5D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xB4C9BC", Offset = "0xB4C9BC", VA = "0xB4C9BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xB4CAF0", Offset = "0xB4CAF0", VA = "0xB4CAF0")]
		private void Skip()
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xB4C78C", Offset = "0xB4C78C", VA = "0xB4C78C")]
		private void PopulateCredits()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xB4C98C", Offset = "0xB4C98C", VA = "0xB4C98C")]
		public void StartScroll()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xB4CAFC", Offset = "0xB4CAFC", VA = "0xB4CAFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7F40", Offset = "0x8F7F40")]
		private IEnumerator ScrollCredits()
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xB4CB9C", Offset = "0xB4CB9C", VA = "0xB4CB9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F7FA4", Offset = "0x8F7FA4")]
		private IEnumerator Finish()
		{
			return null;
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xB4CC3C", Offset = "0xB4CC3C", VA = "0xB4CC3C")]
		public ScrollCredit()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class Acorn : MonoBehaviour
	{
		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dialogue deadAcorn;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dialogue deadAcorn2;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ShadowHandable grabable;

		[Token(Token = "0x170001D4")]
		public bool IsGrabbing
		{
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xBE2E88", Offset = "0xBE2E88", VA = "0xBE2E88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xBE2F48", Offset = "0xBE2F48", VA = "0xBE2F48")]
		public void PlayGrabVO()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xBE2F90", Offset = "0xBE2F90", VA = "0xBE2F90")]
		public Acorn()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class AcornTile : MonoBehaviour
	{
		[Token(Token = "0x2000566")]
		private enum AcornTileState
		{
			[Token(Token = "0x40020C2")]
			Closed,
			[Token(Token = "0x40020C3")]
			Open
		}

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int acornTileStateId;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _defaultPos;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float enableDistance;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StateInst acornTileStateInst;

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xBE2F98", Offset = "0xBE2F98", VA = "0xBE2F98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xBE3024", Offset = "0xBE3024", VA = "0xBE3024")]
		private void Update()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xBE3138", Offset = "0xBE3138", VA = "0xBE3138")]
		public AcornTile()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class Dragon : MonoBehaviour
	{
		[Token(Token = "0x2000567")]
		private enum DragonState
		{
			[Token(Token = "0x40020C5")]
			Far,
			[Token(Token = "0x40020C6")]
			Close,
			[Token(Token = "0x40020C7")]
			RevealPortal,
			[Token(Token = "0x40020C8")]
			Left
		}

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int dragonState;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject farDragon;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject closeDragon;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DragonAnimation dragonAnimation;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SFX_2DHook dragonAppearMusicSFX;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook wallBreakSFX;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float secondsBeforeFlowWeaverScreamVO;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Dialogue flowWeaverScreamVO;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject dragonRoarSFX;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private StateInst dragonStateInst;

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xC0CA18", Offset = "0xC0CA18", VA = "0xC0CA18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xC0CAE8", Offset = "0xC0CAE8", VA = "0xC0CAE8")]
		public void DragonArrive()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xC0CC48", Offset = "0xC0CC48", VA = "0xC0CC48")]
		private void PlayFlowWeaverScreamVo()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xC0CCB0", Offset = "0xC0CCB0", VA = "0xC0CCB0")]
		private void PlayRoarSFX()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xC0CCD0", Offset = "0xC0CCD0", VA = "0xC0CCD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xC0CCF0", Offset = "0xC0CCF0", VA = "0xC0CCF0")]
		public Dragon()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class DragonAnimation : MonoBehaviour
	{
		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator shadowDragonController;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator wallAnimationController;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int TowerEntrance;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Collapse;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int WallBroken;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int Talking;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int Idle;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int Spawned;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int ShiftWeight;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int GiveCrystal;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int CrystalIdle;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int LeaveTower;

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xC0CBA0", Offset = "0xC0CBA0", VA = "0xC0CBA0")]
		public void TriggerEntrance()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xC0CD00", Offset = "0xC0CD00", VA = "0xC0CD00")]
		public void TriggerTalking()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xC0CD88", Offset = "0xC0CD88", VA = "0xC0CD88")]
		public void TriggerSpawned()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xC0CE3C", Offset = "0xC0CE3C", VA = "0xC0CE3C")]
		private void WallAlreadyBroken()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xC0CEC4", Offset = "0xC0CEC4", VA = "0xC0CEC4")]
		public void TriggerShiftWeight()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xC0CF70", Offset = "0xC0CF70", VA = "0xC0CF70")]
		public void TriggerPlanarKey()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xC0D03C", Offset = "0xC0D03C", VA = "0xC0D03C")]
		public void TriggerLeaveTower()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xC0D108", Offset = "0xC0D108", VA = "0xC0D108")]
		public DragonAnimation()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class DragonLeftAnimatorSignal : MonoBehaviour
	{
		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent OnDragonLeft;

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xC0D294", Offset = "0xC0D294", VA = "0xC0D294")]
		public void DragonLeft()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xC0D2A8", Offset = "0xC0D2A8", VA = "0xC0D2A8")]
		public DragonLeftAnimatorSignal()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class MetalCage : MonoBehaviour
	{
		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject openGameObject;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject closedGameObject;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SFX_3DHook chestOpenSFX;

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xC6C774", Offset = "0xC6C774", VA = "0xC6C774")]
		public void FreeSwirlingDarkness()
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xC6C7D8", Offset = "0xC6C7D8", VA = "0xC6C7D8")]
		public MetalCage()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class ShadowRealmIdleVO : MonoBehaviour
	{
		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float playChillLineAfterSeconds;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float playIdleLinesAfterSeconds;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules generalHintRules;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dialogue[] generalHintVOs;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameRules amuletHintRules;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Dialogue amuletHint;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Dialogue chillLine;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float chillLineTimer;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float idleLineTimer;

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xB4EF24", Offset = "0xB4EF24", VA = "0xB4EF24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xB4EF30", Offset = "0xB4EF30", VA = "0xB4EF30")]
		private void Update()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xB4EFB4", Offset = "0xB4EFB4", VA = "0xB4EFB4")]
		private void IdleLineTimer()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xB4F060", Offset = "0xB4F060", VA = "0xB4F060")]
		private void PlayIdleLine()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xB4F0D0", Offset = "0xB4F0D0", VA = "0xB4F0D0")]
		private void PlayGeneralHints()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xB4F004", Offset = "0xB4F004", VA = "0xB4F004")]
		private void ChillLineTimer()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xB4F1E4", Offset = "0xB4F1E4", VA = "0xB4F1E4")]
		public ShadowRealmIdleVO()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class SwirlingDarkness : MonoBehaviour
	{
		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SFX_3DHook flySFX;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnReleasedDarkness;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int FreeDarkness;

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xB56ED4", Offset = "0xB56ED4", VA = "0xB56ED4")]
		private void Start()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xB56F30", Offset = "0xB56F30", VA = "0xB56F30")]
		public void StartEffect()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xB56FCC", Offset = "0xB56FCC", VA = "0xB56FCC")]
		public void ReleasedDarkness()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xB56FFC", Offset = "0xB56FFC", VA = "0xB56FFC")]
		private void DisableEffect()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xB57090", Offset = "0xB57090", VA = "0xB57090")]
		public SwirlingDarkness()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class Astrolabe : MonoBehaviour
	{
		[Token(Token = "0x2000568")]
		private enum AstrolabeState
		{
			[Token(Token = "0x40020CA")]
			NotDeployed,
			[Token(Token = "0x40020CB")]
			Deployed,
			[Token(Token = "0x40020CC")]
			Solved,
			[Token(Token = "0x40020CD")]
			Off
		}

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int astrolabStateId;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<AstrolabeRing> astrolabeRings;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameRules astrolabeSolvedRules;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem[] particleEffects;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject astrolabMesh;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DeployRingsAnimation ringsAnimation;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LightningRod lightningRod;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent OnAstrolabeSolved;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F232C", Offset = "0x8F232C")]
		[SerializeField]
		private Dialogue consoleOnVO;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Dialogue cityRiseVO;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Dialogue cityRainVO;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Dialogue citySeenVO;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F23A8", Offset = "0x8F23A8")]
		[SerializeField]
		private SFX_3DHook cityRainSFX;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SFX_3DHook cityRiseMusicCue;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Animator astrolabeAnimator;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Animator magicCityAnim;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int AstrolabeStart;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int AstrolabeStop;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int AstrolabeIdle;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int CityRisen;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int CityActivate;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isCityRising;

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xBE3674", Offset = "0xBE3674", VA = "0xBE3674")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xBE376C", Offset = "0xBE376C", VA = "0xBE376C")]
		private void DisableAstrolabeRingsInteractions()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xBE3808", Offset = "0xBE3808", VA = "0xBE3808")]
		private void SetCityRisen()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xBE39F4", Offset = "0xBE39F4", VA = "0xBE39F4")]
		private void SetAstrolabeDeployedIdle()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xBE3BC4", Offset = "0xBE3BC4", VA = "0xBE3BC4")]
		private void AstrolabeReadyForInteraction()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xBE3BF8", Offset = "0xBE3BF8", VA = "0xBE3BF8")]
		private void EnableAstrolabeRingsInteractions()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xBE3D94", Offset = "0xBE3D94", VA = "0xBE3D94")]
		public void PowerOn()
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xBE3918", Offset = "0xBE3918", VA = "0xBE3918")]
		public void CheckAstrolabePuzzle()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xBE3E8C", Offset = "0xBE3E8C", VA = "0xBE3E8C")]
		private void AstrolabePuzzleCorrect()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xBE3EB0", Offset = "0xBE3EB0", VA = "0xBE3EB0")]
		private void ActivateMagicCity()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xBE400C", Offset = "0xBE400C", VA = "0xBE400C")]
		private void PlayParticles()
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xBE4080", Offset = "0xBE4080", VA = "0xBE4080")]
		private void Update()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xBE416C", Offset = "0xBE416C", VA = "0xBE416C")]
		public void CityHasRisen()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xBE4268", Offset = "0xBE4268", VA = "0xBE4268")]
		public void CityFullyRisen()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xBE41C4", Offset = "0xBE41C4", VA = "0xBE41C4")]
		private void PowerOffAstrolabe()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xBE42F0", Offset = "0xBE42F0", VA = "0xBE42F0")]
		public Astrolabe()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class AstrolabeIsland : MonoBehaviour
	{
		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F2424", Offset = "0x8F2424")]
		private float fullLerpTime;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[StateInfoIdReference]
		private int ringStateId;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[StateInfoIdReference]
		private int ringAngleStateId;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnStartMoving;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnStopMoving;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lerpTime;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float currentLerpTime;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float percent;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion startRotation;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion currentRotationTarget;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isMoving;

		[Token(Token = "0x170001D5")]
		public bool IsMoving
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0xBE4444", Offset = "0xBE4444", VA = "0xBE4444")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xBE444C", Offset = "0xBE444C", VA = "0xBE444C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xBE445C", Offset = "0xBE445C", VA = "0xBE445C")]
		private void RotateIsland()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xBE463C", Offset = "0xBE463C", VA = "0xBE463C")]
		private void UpdateRingState()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xBE46D8", Offset = "0xBE46D8", VA = "0xBE46D8")]
		public void StartRotation(Quaternion rotationTarget)
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xBE4894", Offset = "0xBE4894", VA = "0xBE4894")]
		public void SetRotation(Quaternion rot)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xBE48E8", Offset = "0xBE48E8", VA = "0xBE48E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xBE48F4", Offset = "0xBE48F4", VA = "0xBE48F4")]
		public AstrolabeIsland()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class AstrolabeRing : MonoBehaviour
	{
		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int ringMovementStateId;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[StateInfoIdReference]
		private int ringAngleStateId;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F2570", Offset = "0x8F2570")]
		private Vector3 intendedRotation;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public AstrolabeIsland island;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float rotationAnglePerGrab;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float timeToRotate;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Clickable> clickableGems;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnDeployed;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent OnStartRotation;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float deployTimer;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool deploying;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool deployed;

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xBE4904", Offset = "0xBE4904", VA = "0xBE4904")]
		public void SetAsDeployed()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xBE491C", Offset = "0xBE491C", VA = "0xBE491C")]
		public void RotateIsland()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xBE49D0", Offset = "0xBE49D0", VA = "0xBE49D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xBE49D4", Offset = "0xBE49D4", VA = "0xBE49D4")]
		private void TryRotateToDeployedRotation()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xBE4C38", Offset = "0xBE4C38", VA = "0xBE4C38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xBE4C44", Offset = "0xBE4C44", VA = "0xBE4C44")]
		public void LoadSavedAngle()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xBE3C94", Offset = "0xBE3C94", VA = "0xBE3C94")]
		public void SetInteractable()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xBE3AC8", Offset = "0xBE3AC8", VA = "0xBE3AC8")]
		public void SetNotInteractable()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xBE4E5C", Offset = "0xBE4E5C", VA = "0xBE4E5C")]
		public AstrolabeRing()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class DeployRingsAnimation : MonoBehaviour
	{
		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules deployRules;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public AstrolabeRing[] ringsToDeploy;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnDeployed;

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xC09744", Offset = "0xC09744", VA = "0xC09744")]
		public void DeployRings()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xC097D8", Offset = "0xC097D8", VA = "0xC097D8")]
		public void SetToPreviousAngle()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xC0984C", Offset = "0xC0984C", VA = "0xC0984C")]
		public DeployRingsAnimation()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class BeamLogic : MonoBehaviour
	{
		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules activateBeamRules;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float beamOvershot;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LineRenderer beam1;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineRenderer beam2;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LineRenderer beam3;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LineRenderer beam4;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LineRenderer beamFinal;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform startTransform;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform targetTransform1;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform targetTransform2;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform targetTransform3;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform targetTransform4;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform targetTransformFinal;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector3 beam1Direction;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private Vector3 beam2Direction;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Vector3 beam3Direction;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private Vector3 beam4Direction;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool firing;

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xBE7314", Offset = "0xBE7314", VA = "0xBE7314")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F8008", Offset = "0x8F8008")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xBE7338", Offset = "0xBE7338", VA = "0xBE7338")]
		public void CheckBeams()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xBE7398", Offset = "0xBE7398", VA = "0xBE7398")]
		private void CalculateDirections()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xBE7590", Offset = "0xBE7590", VA = "0xBE7590")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xBE75C4", Offset = "0xBE75C4", VA = "0xBE75C4")]
		private void CheckBeam1()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xBE7784", Offset = "0xBE7784", VA = "0xBE7784")]
		private void CheckBeam2()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xBE7A28", Offset = "0xBE7A28", VA = "0xBE7A28")]
		private void CheckBeam3()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xBE7CC4", Offset = "0xBE7CC4", VA = "0xBE7CC4")]
		private void CheckBeam4()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xBE7EF0", Offset = "0xBE7EF0", VA = "0xBE7EF0")]
		public BeamLogic()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class Generator : MonoBehaviour
	{
		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules generatorFixedRules;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules activatePurpleBeamRules;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dialogue generatorRepairedConsoleNotPoweredVO;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject whiteBeam;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject purpleBeam;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook consolePoweredOnSFX;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent generatorCompletedEvent;

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xC1793C", Offset = "0xC1793C", VA = "0xC1793C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xC179CC", Offset = "0xC179CC", VA = "0xC179CC")]
		private void ArrivedInSkybridge()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xC17960", Offset = "0xC17960", VA = "0xC17960")]
		private void CheckGeneratorFixed()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xC17A48", Offset = "0xC17A48", VA = "0xC17A48")]
		public void FixGenerator()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xC179D0", Offset = "0xC179D0", VA = "0xC179D0")]
		private void PowerConsole()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xC179F0", Offset = "0xC179F0", VA = "0xC179F0")]
		private void TogglePurpleBeam()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xC17AC0", Offset = "0xC17AC0", VA = "0xC17AC0")]
		public Generator()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class LightningRod : MonoBehaviour
	{
		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules energizedSilverSheetRules;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SnapPoint sheetSnapPoint;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameRules scaffoldingRules;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject scaffolding;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float controlWeatherDuration;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject weatherEffect;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject lightningHitRodEffect;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Dialogue sheetEnergized;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Dialogue otherwhereMirrorComplete;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Dialogue lightningRodHints;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[ObjectIdReference]
		private int silverSheetObjectId;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[ObjectIdReference]
		private int gildedMirrorPortalKeyId;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameRules otherwhereUnlockedRules;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameRules finishedLastDreamthoughtRules;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SFX_3DHook lightningStrikeSoundEffect;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SFX_3DHook mirrorPortalKeySpawnedSound;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Dialogue runestoneNotFoundSequence;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Dialogue rodGazedNoScaffolding;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Dialogue rodGazedWithScaffolding;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GazeTarget gazeTarget;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private UnityEvent OnEnergizedSilverSheet;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private UnityEvent OnGildedMirror;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[StateInfoIdReference]
		private int mirrorStateId;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[StateInfoIdReference]
		private int silverSheetStateId;

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xC1DC88", Offset = "0xC1DC88", VA = "0xC1DC88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xC1DC8C", Offset = "0xC1DC8C", VA = "0xC1DC8C")]
		private void ArrivedInSkybridge()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xC1DCF4", Offset = "0xC1DCF4", VA = "0xC1DCF4")]
		private void ToggleLightningRodGaze()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xC1DD5C", Offset = "0xC1DD5C", VA = "0xC1DD5C")]
		public void LightningRodGazed()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xC1DCF0", Offset = "0xC1DCF0", VA = "0xC1DCF0")]
		public void DisplayMeditationHint(bool isVisible)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xC1DDB8", Offset = "0xC1DDB8", VA = "0xC1DDB8")]
		public void ControlWeatherCast()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xC1DE04", Offset = "0xC1DE04", VA = "0xC1DE04")]
		public void BackgroundWeather()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xC1DE24", Offset = "0xC1DE24", VA = "0xC1DE24")]
		private void LightningHitRod()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xC1DEB0", Offset = "0xC1DEB0", VA = "0xC1DEB0")]
		private void TryEnergizeSheet()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xC1DFF8", Offset = "0xC1DFF8", VA = "0xC1DFF8")]
		private void DisableWeather()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xC1E018", Offset = "0xC1E018", VA = "0xC1E018")]
		private void DisableLightningHitRod()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xC1E038", Offset = "0xC1E038", VA = "0xC1E038")]
		public void TryImbueSheetWithPlanarEnergy()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xC1E1A4", Offset = "0xC1E1A4", VA = "0xC1E1A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xC1E1A8", Offset = "0xC1E1A8", VA = "0xC1E1A8")]
		public LightningRod()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class MetalPole : MonoBehaviour
	{
		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AdvancedGameRule whiteGemRules;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules purpleGemRules;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameRules pinkGemRules;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject whiteGem;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject purpleGem;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject pinkGem;

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xC6C7E0", Offset = "0xC6C7E0", VA = "0xC6C7E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xC6C8AC", Offset = "0xC6C8AC", VA = "0xC6C8AC")]
		public MetalPole()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class SkybridgeBird : MonoBehaviour
	{
		[Token(Token = "0x2000569")]
		private enum BirdState
		{
			[Token(Token = "0x40020CF")]
			NotCommune,
			[Token(Token = "0x40020D0")]
			Communed
		}

		[Token(Token = "0x200056A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFA8", Offset = "0x8DFFA8")]
		private sealed class <RetrieveItem>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkybridgeBird <>4__this;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 endPos;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startingPos>5__2;

			[Token(Token = "0x170002CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F66")]
				[Address(RVA = "0xB51CEC", Offset = "0xB51CEC", VA = "0xB51CEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F68")]
				[Address(RVA = "0xB51D58", Offset = "0xB51D58", VA = "0xB51D58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F63")]
			[Address(RVA = "0xB5174C", Offset = "0xB5174C", VA = "0xB5174C")]
			[DebuggerHidden]
			public <RetrieveItem>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001F64")]
			[Address(RVA = "0xB51818", Offset = "0xB51818", VA = "0xB51818", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F65")]
			[Address(RVA = "0xB5181C", Offset = "0xB5181C", VA = "0xB5181C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F67")]
			[Address(RVA = "0xB51CF4", Offset = "0xB51CF4", VA = "0xB51CF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int birdStateId;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[ObjectIdReference]
		private int runestoneId;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator birdAnimator;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform targetTransform;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float timePassed;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float timePassedReturn;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float secondsToFlyToTarget;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook pickupSound;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent onStartFlying;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent onEndFlying;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private DialogueList spawnRunestoneVO;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion originalRotation;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool itemGrabbed;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Grab;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Flying;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private StateInst birdStateInst;

		[Token(Token = "0x170001D6")]
		private StateInst BirdStateInst
		{
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xB5152C", Offset = "0xB5152C", VA = "0xB5152C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xB515A0", Offset = "0xB515A0", VA = "0xB515A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xB515FC", Offset = "0xB515FC", VA = "0xB515FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xB51670", Offset = "0xB51670", VA = "0xB51670")]
		public void RetrieveItemLoop()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xB516B4", Offset = "0xB516B4", VA = "0xB516B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F8018", Offset = "0x8F8018")]
		private IEnumerator RetrieveItem(Vector3 endPos)
		{
			return null;
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xB51778", Offset = "0xB51778", VA = "0xB51778")]
		public SkybridgeBird()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class SkybridgeIdleVO : MonoBehaviour
	{
		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dialogue firstTimeArriveVO;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dialogue secondTimeArriveVO;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dialogue scaffoldingVO;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameRules playHintsRule;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float playScaffoldingLineAfterSeconds;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float scaffoldingLineTimer;

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xB51D60", Offset = "0xB51D60", VA = "0xB51D60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xB51DC8", Offset = "0xB51DC8", VA = "0xB51DC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xB51DCC", Offset = "0xB51DCC", VA = "0xB51DCC")]
		private void ScaffoldingLineTimer()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xB51E1C", Offset = "0xB51E1C", VA = "0xB51E1C")]
		private void PlayScaffoldingLine()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xB51E68", Offset = "0xB51E68", VA = "0xB51E68")]
		public SkybridgeIdleVO()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class ChairSystem : MonoBehaviour
	{
		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SFX_3DHook chairPoweredOnSFX;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StampingTool stampingTool;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PolishingTool polishingTool;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameRules rules;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Dialogue toolNotPoweredVO;

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xBE9A5C", Offset = "0xBE9A5C", VA = "0xBE9A5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xBE9AC0", Offset = "0xBE9AC0", VA = "0xBE9AC0")]
		public void ChairPoweredUp()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xBE9A60", Offset = "0xBE9A60", VA = "0xBE9A60")]
		private void ActivateTools()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xBE9AF8", Offset = "0xBE9AF8", VA = "0xBE9AF8")]
		public void TryGrabStamperArm()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xBE9B44", Offset = "0xBE9B44", VA = "0xBE9B44")]
		public ChairSystem()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class Crankable : MonoBehaviour
	{
		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform crankPivot;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabable crankGrabbable;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float minOffset;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float maxOffset;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float standardMoveAmount;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SFX_3DHook crankSound;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook lockSound;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent onLockedFront;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent onStopLockedFront;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SFX_3DHook stuckSFX;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastY;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float thisY;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lastOffset;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstFrameGrabbed;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2C8C", Offset = "0x8F2C8C")]
		private bool <lockedFront>k__BackingField;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2C9C", Offset = "0x8F2C9C")]
		private bool <lockedBack>k__BackingField;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		private bool crankSoundPlaying;

		[Token(Token = "0x170001D7")]
		public bool lockedFront
		{
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xC06794", Offset = "0xC06794", VA = "0xC06794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F807C", Offset = "0x8F807C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xC0679C", Offset = "0xC0679C", VA = "0xC0679C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F808C", Offset = "0x8F808C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public bool lockedBack
		{
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0xC067A8", Offset = "0xC067A8", VA = "0xC067A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F809C", Offset = "0x8F809C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xC067B0", Offset = "0xC067B0", VA = "0xC067B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F80AC", Offset = "0x8F80AC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xC067BC", Offset = "0xC067BC", VA = "0xC067BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xC067C0", Offset = "0xC067C0", VA = "0xC067C0")]
		private void CheckGrabbed()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xC067F0", Offset = "0xC067F0", VA = "0xC067F0")]
		private void HandleCranking()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xC06AF8", Offset = "0xC06AF8", VA = "0xC06AF8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xC06C30", Offset = "0xC06C30", VA = "0xC06C30")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xC06BDC", Offset = "0xC06BDC", VA = "0xC06BDC")]
		private void TryLockBack()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xC06C1C", Offset = "0xC06C1C", VA = "0xC06C1C")]
		private void TryLockFront()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xC06CFC", Offset = "0xC06CFC", VA = "0xC06CFC")]
		private void LockBack()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xC06D28", Offset = "0xC06D28", VA = "0xC06D28")]
		private void LockFront()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xC06928", Offset = "0xC06928", VA = "0xC06928")]
		private void Move(float moveAmount)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xC06DC8", Offset = "0xC06DC8", VA = "0xC06DC8")]
		public void PlayCrankSound()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xC06D90", Offset = "0xC06D90", VA = "0xC06D90")]
		public void StopSoundEffect()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xC06D70", Offset = "0xC06D70", VA = "0xC06D70")]
		private void PlayLockSound()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xC06E0C", Offset = "0xC06E0C", VA = "0xC06E0C")]
		public Crankable()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class FarMetalGate : HorizontalLockPoint
	{
		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float retractSpeed;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float timeBeforeRetract;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float retractTimer;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private bool isRetracting;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject[] lightPlanes;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SFX_3DHook gateClosing;

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xC0F9AC", Offset = "0xC0F9AC", VA = "0xC0F9AC", Slot = "5")]
		public override void LateUpdate()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xC0FEFC", Offset = "0xC0FEFC", VA = "0xC0FEFC")]
		private void ShowLights(bool lightsOn)
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xC0FBE4", Offset = "0xC0FBE4", VA = "0xC0FBE4")]
		private void UpdateGateLights()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xC0FF80", Offset = "0xC0FF80", VA = "0xC0FF80", Slot = "6")]
		protected override void LockGrabbable(Transform lockTransform)
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xC10158", Offset = "0xC10158", VA = "0xC10158")]
		private void ResetRetracting()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xC10194", Offset = "0xC10194", VA = "0xC10194")]
		private void StartRetractTimer()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xC101D4", Offset = "0xC101D4", VA = "0xC101D4")]
		public FarMetalGate()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class FireGem : MonoBehaviour
	{
		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xC10754", Offset = "0xC10754", VA = "0xC10754")]
		public void Unparent()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xC1077C", Offset = "0xC1077C", VA = "0xC1077C")]
		public FireGem()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class GearsPuzzle : MonoBehaviour
	{
		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules puzzleComplete;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> debrisIdxs;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> rotatingParts;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<cGearRotate> completedGearsToSpin;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int rotatingGears;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook gearWallCompleteSFX;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Dialogue gearsAreConnectedVO;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Dialogue debrisBlockingVO;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Dialogue missingGearHint;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameRules gearsPuzzleCompleted;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEvent OnCompleted;

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xC16BD0", Offset = "0xC16BD0", VA = "0xC16BD0")]
		private void CheckGears()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xC17018", Offset = "0xC17018", VA = "0xC17018")]
		public void CheckGearsPuzzleComplete()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xC16FB8", Offset = "0xC16FB8", VA = "0xC16FB8")]
		private void CompletePuzzle()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xC17058", Offset = "0xC17058", VA = "0xC17058")]
		private void RotateAllGears()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xC170F8", Offset = "0xC170F8", VA = "0xC170F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xC17138", Offset = "0xC17138", VA = "0xC17138")]
		public GearsPuzzle()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class GemCodeButton : Pressable
	{
		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GemPipeAudio pipeAudio;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int GemCode;

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xC171E4", Offset = "0xC171E4", VA = "0xC171E4", Slot = "6")]
		protected override void PressStarted(Inputs.InputSide inputSide)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xC172A4", Offset = "0xC172A4", VA = "0xC172A4")]
		public GemCodeButton()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class GemPipeAudio : MonoBehaviour
	{
		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioRefDef gemOneSound;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioRefDef gemTwoSound;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioRefDef gemThreeSound;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioRefDef gemFourSound;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject gem1;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject gem2;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject gem3;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject gem4;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<AudioHandle> audioHandles;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool animationPlaying;

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xC17310", Offset = "0xC17310", VA = "0xC17310")]
		public void AnimationStart()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xC17388", Offset = "0xC17388", VA = "0xC17388")]
		public void AnimationEnd()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xC173FC", Offset = "0xC173FC", VA = "0xC173FC")]
		public void PlayGem1()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xC17530", Offset = "0xC17530", VA = "0xC17530")]
		public void PlayGem2()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xC17664", Offset = "0xC17664", VA = "0xC17664")]
		public void PlayGem3()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xC17798", Offset = "0xC17798", VA = "0xC17798")]
		public void PlayGem4()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xC17434", Offset = "0xC17434", VA = "0xC17434")]
		private void PlayGemOne(Transform trans)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xC17568", Offset = "0xC17568", VA = "0xC17568")]
		private void PlayGemTwo(Transform trans)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xC1769C", Offset = "0xC1769C", VA = "0xC1769C")]
		private void PlayGemThree(Transform trans)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xC177D0", Offset = "0xC177D0", VA = "0xC177D0")]
		private void PlayGemFour(Transform trans)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xC178CC", Offset = "0xC178CC", VA = "0xC178CC")]
		public GemPipeAudio()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class HorizontalLockPoint : MonoBehaviour
	{
		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform lockPointFront;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform lockPointBack;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lockDistance;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float refreshDistance;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool lockedBack;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		protected bool lockedFront;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected UnityEvent onLockedBack;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected UnityEvent onLockedFront;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SFX_3DHook polisherLockSFX;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rigidbody rb;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PhysicGrabale grabbable;

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xC1B62C", Offset = "0xC1B62C", VA = "0xC1B62C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xC1B69C", Offset = "0xC1B69C", VA = "0xC1B69C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xC1B790", Offset = "0xC1B790", VA = "0xC1B790", Slot = "4")]
		protected virtual void HandleLockingLogic()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xC1BBF0", Offset = "0xC1BBF0", VA = "0xC1BBF0", Slot = "5")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xC0FE08", Offset = "0xC0FE08", VA = "0xC0FE08")]
		protected void ResetPositionFront()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xC0FD14", Offset = "0xC0FD14", VA = "0xC0FD14")]
		protected void ResetPositionBack()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xC1BB08", Offset = "0xC1BB08", VA = "0xC1BB08")]
		protected bool CheckLockPositionFront()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xC1BB88", Offset = "0xC1BB88", VA = "0xC1BB88")]
		protected bool CheckLockPositionBack()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xC1B884", Offset = "0xC1B884", VA = "0xC1B884")]
		protected void CheckRefreshPosition(Transform lockPoint)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xC1BB70", Offset = "0xC1BB70", VA = "0xC1BB70")]
		private void GrabRelease()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xC10080", Offset = "0xC10080", VA = "0xC10080", Slot = "6")]
		protected virtual void LockGrabbable(Transform lockTransform)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xC0FCF4", Offset = "0xC0FCF4", VA = "0xC0FCF4")]
		protected void PlayLockAudio()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xC101FC", Offset = "0xC101FC", VA = "0xC101FC")]
		public HorizontalLockPoint()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class MineCart : MonoBehaviour
	{
		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform oilTransform;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MinecartController mineCartController;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dialogue minecartPassedWithOilVO;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DialogueList failToStopMinecartVO;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SFX_3DHook collisionSound;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SFX_3DHook movementSound;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OilFlask oilFlaskScript;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool hittingFarGate;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool hittingCloseGate;

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xC6C954", Offset = "0xC6C954", VA = "0xC6C954")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xC6CAE4", Offset = "0xC6CAE4", VA = "0xC6CAE4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xC6D084", Offset = "0xC6D084", VA = "0xC6D084")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xC6CF44", Offset = "0xC6CF44", VA = "0xC6CF44")]
		public void ParentFlask(bool playVO = true)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xC6CEFC", Offset = "0xC6CEFC", VA = "0xC6CEFC")]
		private void PlayCollisionSound()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xC6D380", Offset = "0xC6D380", VA = "0xC6D380")]
		public void PlayMovementSound()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xC6D3A0", Offset = "0xC6D3A0", VA = "0xC6D3A0")]
		public void StopMovementSound()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xC6D3C0", Offset = "0xC6D3C0", VA = "0xC6D3C0")]
		public void ResetGateHitBools()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xC6D3C8", Offset = "0xC6D3C8", VA = "0xC6D3C8")]
		public MineCart()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class OilFlask : PhysicGrabale
	{
		[Token(Token = "0x200056B")]
		private enum OilFlaskState
		{
			[Token(Token = "0x40020D7")]
			OnShelf,
			[Token(Token = "0x40020D8")]
			InCart,
			[Token(Token = "0x40020D9")]
			Pickup,
			[Token(Token = "0x40020DA")]
			Exploded,
			[Token(Token = "0x40020DB")]
			Used
		}

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFB8", Offset = "0x8DFFB8")]
		private sealed class <DisappearAfterSecondsCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OilFlask <>4__this;

			[Token(Token = "0x170002D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F6C")]
				[Address(RVA = "0xC72318", Offset = "0xC72318", VA = "0xC72318", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F6E")]
				[Address(RVA = "0xC72384", Offset = "0xC72384", VA = "0xC72384", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F69")]
			[Address(RVA = "0xC71E78", Offset = "0xC71E78", VA = "0xC71E78")]
			[DebuggerHidden]
			public <DisappearAfterSecondsCoroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0xC721DC", Offset = "0xC721DC", VA = "0xC721DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0xC721E0", Offset = "0xC721E0", VA = "0xC721E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xC72320", Offset = "0xC72320", VA = "0xC72320", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2F0C", Offset = "0x8F2F0C")]
		[SerializeField]
		[StateInfoIdReference]
		private int oilFlaskStateId;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject graphic;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private OilSpout oilSpout;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ParticleSystem[] oilExplodeEffects;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ParticleSystem disappearEffect;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Dialogue oilInCartVO;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Dialogue oilFlaskExplosionVO;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Dialogue oilFlaskFuelVO;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private SFX_3DHook disapearSFX;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UnityEvent OnExploded;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UnityEvent OnPutInCart;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UnityEvent OnPour;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool isAtLeverPos;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private StateInst oilFlaskStateInst;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Transform startParentTransform;

		[Token(Token = "0x170001D9")]
		private Rigidbody Rb
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0xC712C8", Offset = "0xC712C8", VA = "0xC712C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private StateInst OilFlaskStateInst
		{
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0xC71360", Offset = "0xC71360", VA = "0xC71360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xC713D0", Offset = "0xC713D0", VA = "0xC713D0", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xC6CF1C", Offset = "0xC6CF1C", VA = "0xC6CF1C")]
		public bool IsInCart()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xC71484", Offset = "0xC71484", VA = "0xC71484")]
		public void PutOnShelf()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xC6D2CC", Offset = "0xC6D2CC", VA = "0xC6D2CC")]
		public void PutInCart(bool playVO = true)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xC71560", Offset = "0xC71560", VA = "0xC71560")]
		private void EnableAsKinematicObj()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xC71648", Offset = "0xC71648", VA = "0xC71648")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xC716D4", Offset = "0xC716D4", VA = "0xC716D4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xC7178C", Offset = "0xC7178C", VA = "0xC7178C", Slot = "9")]
		protected override void GrabStarted()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xC718AC", Offset = "0xC718AC", VA = "0xC718AC", Slot = "10")]
		protected override void GrabRunning(Vector3 handPos, Quaternion handRot, float distance, Vector3 direction, Vector3 handVelocity, Vector3 handAngularVelocity)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xC71BF4", Offset = "0xC71BF4", VA = "0xC71BF4")]
		private bool IsUpSideDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xC71CBC", Offset = "0xC71CBC", VA = "0xC71CBC")]
		private void Pour()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xC71E04", Offset = "0xC71E04", VA = "0xC71E04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F80BC", Offset = "0x8F80BC")]
		private IEnumerator DisappearAfterSecondsCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xC71EA4", Offset = "0xC71EA4", VA = "0xC71EA4")]
		public void Explode()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xC71F64", Offset = "0xC71F64", VA = "0xC71F64")]
		private void PlayExplodeParticleEffects()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xC7203C", Offset = "0xC7203C", VA = "0xC7203C")]
		public void SetKinematic(bool isKinematic)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xC714EC", Offset = "0xC714EC", VA = "0xC714EC")]
		private void StopParticleEffects()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xC7206C", Offset = "0xC7206C", VA = "0xC7206C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xC72114", Offset = "0xC72114", VA = "0xC72114")]
		public OilFlask()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class OilShelf : MonoBehaviour
	{
		[Token(Token = "0x200056D")]
		private enum RopeState
		{
			[Token(Token = "0x40020E0")]
			NotBurnt,
			[Token(Token = "0x40020E1")]
			Burnt
		}

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ObjectIdReference]
		private int oilFlaskId;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[StateInfoIdReference]
		private int ropeStateId;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameRules spawnOilFlaskRule;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform oilFlaskSpawnPoint;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform burnedTransform;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform partsToMove;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform conveyorTarget;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float conveyorSpeed;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float timeToRespawnOil;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Animator burnAnimator;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool toBeReset;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float oilTimer;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject oilFlaskObj;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private OilFlask oilFlask;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool dropped;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool waitingToRespawn;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int BurnShelf;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private StateInst ropeStateInst;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Burnt;

		[Token(Token = "0x170001DB")]
		private StateInst RopeStateInst
		{
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0xC7238C", Offset = "0xC7238C", VA = "0xC7238C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xC723FC", Offset = "0xC723FC", VA = "0xC723FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xC72408", Offset = "0xC72408", VA = "0xC72408")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xC72540", Offset = "0xC72540", VA = "0xC72540")]
		private void SpawnFlask()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xC72690", Offset = "0xC72690", VA = "0xC72690")]
		private void HandleOilFlaskBehaviors()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xC727B0", Offset = "0xC727B0", VA = "0xC727B0")]
		private void MoveFlaskTowardsTarget()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xC728D8", Offset = "0xC728D8", VA = "0xC728D8")]
		private void StartTimerToSpawnFlask()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xC728E8", Offset = "0xC728E8", VA = "0xC728E8")]
		public void RopeBurned()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xC72A28", Offset = "0xC72A28", VA = "0xC72A28")]
		public void SetBurnt()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xC7297C", Offset = "0xC7297C", VA = "0xC7297C")]
		private void UpdateShelfStateAfterBurntRope()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xC72ABC", Offset = "0xC72ABC", VA = "0xC72ABC")]
		public OilShelf()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class OilSpout : MonoBehaviour
	{
		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem[] oilPourEffects;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SFX_3DHook oilPourSFX;

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xC71DD0", Offset = "0xC71DD0", VA = "0xC71DD0")]
		public void StartPouring()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xC71DCC", Offset = "0xC71DCC", VA = "0xC71DCC")]
		public void StopPouring()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xC72B5C", Offset = "0xC72B5C", VA = "0xC72B5C")]
		private void PlayParticleEffects()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xC72BD0", Offset = "0xC72BD0", VA = "0xC72BD0")]
		private void StopParticleEffects()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xC72C44", Offset = "0xC72C44", VA = "0xC72C44")]
		public OilSpout()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class PolishingTool : MonoBehaviour
	{
		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFC8", Offset = "0x8DFFC8")]
		private sealed class <DelayCoroutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PolishingTool <>4__this;

			[Token(Token = "0x170002D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F72")]
				[Address(RVA = "0xC751C8", Offset = "0xC751C8", VA = "0xC751C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F74")]
				[Address(RVA = "0xC75234", Offset = "0xC75234", VA = "0xC75234", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xC74E60", Offset = "0xC74E60", VA = "0xC74E60")]
			[DebuggerHidden]
			public <DelayCoroutine>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xC74F48", Offset = "0xC74F48", VA = "0xC74F48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xC74F4C", Offset = "0xC74F4C", VA = "0xC74F4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xC751D0", Offset = "0xC751D0", VA = "0xC751D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform outake;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float timeToDelay;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator polishAnim;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private cShudder polisherShudderScript;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem steamEffectParticles;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool powered;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject activationLight;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Dialogue machineryNotPoweredVO;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ParticleSystem snapSuccessParticles;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ParticleSystem hoverParticles;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SFX_3DHook snapSFX;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEvent gemInserted;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UnityEvent polishStarted;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UnityEvent gemPolished;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private UnityEvent poweredOn;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameRules gemInsertedRule;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[StateInfoIdReference]
		private int gemStateId;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[ObjectIdReference]
		private int gemObjectId;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private DialogueList polishSuccessVO;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool delayed;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool buttonPressed;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject gemGO;

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xC74700", Offset = "0xC74700", VA = "0xC74700")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xC74764", Offset = "0xC74764", VA = "0xC74764")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xC7479C", Offset = "0xC7479C", VA = "0xC7479C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xC74870", Offset = "0xC74870", VA = "0xC74870")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xC7488C", Offset = "0xC7488C", VA = "0xC7488C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xC74CE0", Offset = "0xC74CE0", VA = "0xC74CE0")]
		public void PolishGem()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xC74DDC", Offset = "0xC74DDC", VA = "0xC74DDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F8120", Offset = "0x8F8120")]
		private IEnumerator DelayCoroutine(float delayTime)
		{
			return null;
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xC74E8C", Offset = "0xC74E8C", VA = "0xC74E8C")]
		public void PowerOn(bool state)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xC74F38", Offset = "0xC74F38", VA = "0xC74F38")]
		public PolishingTool()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class Pulley : MonoBehaviour
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ShadowHandable grabbable;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float yGrabPosition;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool gotFirstPos;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ConfigurableJoint jointToMove;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float returnSpeed;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float jointMaxHeight;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float jointMinHeight;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float maxYDisplacement;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool pulleyDown;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float tolerance;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnHornPulled;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SFX_3DHook pulleyPullSFX;

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xC78708", Offset = "0xC78708", VA = "0xC78708")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xC787A4", Offset = "0xC787A4", VA = "0xC787A4")]
		private void DisableAutoconfigAnchor()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xC787C4", Offset = "0xC787C4", VA = "0xC787C4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xC78A7C", Offset = "0xC78A7C", VA = "0xC78A7C")]
		private void CheckLimits()
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xC78BF4", Offset = "0xC78BF4", VA = "0xC78BF4")]
		private void PlayPulleyAudio()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xC78C14", Offset = "0xC78C14", VA = "0xC78C14")]
		public Pulley()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class RoughStone : Breakable
	{
		[Token(Token = "0x200056F")]
		private enum StoneState
		{
			[Token(Token = "0x40020E7")]
			InCart,
			[Token(Token = "0x40020E8")]
			PickedUp,
			[Token(Token = "0x40020E9")]
			Break
		}

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[StateInfoIdReference]
		private int roughStoneStateId;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[ObjectIdReference]
		private int runestoneId;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent OnStammped;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StampingArm stampingArm;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MinecartController minecartController;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody rb;

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xC81D84", Offset = "0xC81D84", VA = "0xC81D84")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xC81E98", Offset = "0xC81E98", VA = "0xC81E98")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xC81FAC", Offset = "0xC81FAC", VA = "0xC81FAC")]
		public void UnparentStone()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xC8206C", Offset = "0xC8206C", VA = "0xC8206C", Slot = "4")]
		public override bool IsBreakable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xC820E0", Offset = "0xC820E0", VA = "0xC820E0", Slot = "5")]
		public override void Break()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xC82220", Offset = "0xC82220", VA = "0xC82220")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xC6D104", Offset = "0xC6D104", VA = "0xC6D104")]
		public void TryPutInCart()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xC82370", Offset = "0xC82370", VA = "0xC82370")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xC8243C", Offset = "0xC8243C", VA = "0xC8243C")]
		public RoughStone()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public enum LeverState
	{
		[Token(Token = "0x40019F3")]
		NotOiled,
		[Token(Token = "0x40019F4")]
		Oiled
	}
	[Token(Token = "0x20003D9")]
	public class RustyLever : MonoBehaviour
	{
		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameRules spawnGemRules;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ShadowHandable shadowhandable;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform leverGrabbableTransform;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float returnRate;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform lockPointDown;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform lockPointDefault;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent onLeverOiled;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[StateInfoIdReference]
		private int gemStateId;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[ObjectIdReference]
		private int gemObjectId;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Animator jostleAnim;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool puzzleSolved;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Dialogue leverStuckVO;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SFX_3DHook rustedLeverSoundEvent;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SFX_3DHook leverPullSoundEvent;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SFX_3DHook leverOiledSoundEvent;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SFX_3DHook gemDoorOpenSoundEvent;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[StateInfoIdReference]
		private int leverStateId;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private StateInst leverStateInst;

		[Token(Token = "0x170001DC")]
		public StateInst LeverStateInst
		{
			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0xB47E6C", Offset = "0xB47E6C", VA = "0xB47E6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xB47EE0", Offset = "0xB47EE0", VA = "0xB47EE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xB47F48", Offset = "0xB47F48", VA = "0xB47F48")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xB48010", Offset = "0xB48010", VA = "0xB48010")]
		private void ReturnToDefaultPosition()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xB481B0", Offset = "0xB481B0", VA = "0xB481B0")]
		public void ApplyOil()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xB4825C", Offset = "0xB4825C", VA = "0xB4825C")]
		public void FireGemGrabbed()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xB48218", Offset = "0xB48218", VA = "0xB48218")]
		private void PlayOiledAudio()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xB48238", Offset = "0xB48238", VA = "0xB48238")]
		private void UnlockLever()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xB48268", Offset = "0xB48268", VA = "0xB48268")]
		public void HandleGrabAudio()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xB48308", Offset = "0xB48308", VA = "0xB48308")]
		public void LeverPulled(bool highRelease)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xB4843C", Offset = "0xB4843C", VA = "0xB4843C")]
		public RustyLever()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class RustyLeverRotationTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RustyLever lever;

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xB4844C", Offset = "0xB4844C", VA = "0xB4844C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xB4851C", Offset = "0xB4851C", VA = "0xB4851C")]
		public RustyLeverRotationTrigger()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class SilverLump : Breakable
	{
		[Token(Token = "0x2000570")]
		public enum LumpState
		{
			[Token(Token = "0x40020EB")]
			NotSpawned,
			[Token(Token = "0x40020EC")]
			Lump,
			[Token(Token = "0x40020ED")]
			Heated,
			[Token(Token = "0x40020EE")]
			Gilded
		}

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject silverLump;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject heatedLump;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[StateInfoIdReference]
		private int silverLumpStateId;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[StateInfoIdReference]
		private int silverSheetStateId;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnStampped;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[ObjectIdReference]
		private int silverSheet;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StampingArm stampingArm;

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xB504F0", Offset = "0xB504F0", VA = "0xB504F0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xB50698", Offset = "0xB50698", VA = "0xB50698")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xB50840", Offset = "0xB50840", VA = "0xB50840")]
		public void HeatLump()
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xB508CC", Offset = "0xB508CC", VA = "0xB508CC")]
		public void SetLumpState(LumpState state)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xB509C4", Offset = "0xB509C4", VA = "0xB509C4", Slot = "4")]
		public override bool IsBreakable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xB50A3C", Offset = "0xB50A3C", VA = "0xB50A3C", Slot = "5")]
		public override void Break()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xB50A6C", Offset = "0xB50A6C", VA = "0xB50A6C")]
		private void StampLump()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xB50C48", Offset = "0xB50C48", VA = "0xB50C48")]
		public SilverLump()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class SilverVein : MonoBehaviour
	{
		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFD8", Offset = "0x8DFFD8")]
		private sealed class <EarthquakeCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SilverVein <>4__this;

			[Token(Token = "0x170002D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F78")]
				[Address(RVA = "0xB50F78", Offset = "0xB50F78", VA = "0xB50F78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F7A")]
				[Address(RVA = "0xB50FE4", Offset = "0xB50FE4", VA = "0xB50FE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F75")]
			[Address(RVA = "0xB50D2C", Offset = "0xB50D2C", VA = "0xB50D2C")]
			[DebuggerHidden]
			public <EarthquakeCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0xB50D68", Offset = "0xB50D68", VA = "0xB50D68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F77")]
			[Address(RVA = "0xB50D6C", Offset = "0xB50D6C", VA = "0xB50D6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0xB50F80", Offset = "0xB50F80", VA = "0xB50F80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject earthquakeVFX;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dialogue underworldControlWeatherVO;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Haptics haptics;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float earthQuakeDuration;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameRules spawnedSheetRule;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[ObjectIdReference]
		private int silverLump;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnDropSilverLump;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isEarthquaking;

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xB50C50", Offset = "0xB50C50", VA = "0xB50C50")]
		public void ControlWeatherCast()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xB50CB8", Offset = "0xB50CB8", VA = "0xB50CB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F8184", Offset = "0x8F8184")]
		private IEnumerator EarthquakeCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xB50D58", Offset = "0xB50D58", VA = "0xB50D58")]
		public SilverVein()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class StampingArm : MonoBehaviour
	{
		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform raisedPosition;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform loweredPosition;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F3690", Offset = "0x8F3690")]
		private float refreshSpeed;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Dialogue silverLumpTooSolidVO;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VerticalLockPoints handleLockPoints;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PhysicGrabale handleGrabbable;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private DialogueList crushSuccessVO;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Breakable> breakables;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float progress;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F371C", Offset = "0x8F371C")]
		private bool <isLockedFront>k__BackingField;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float maxHeight;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float minHeight;

		[Token(Token = "0x170001DD")]
		public bool isLockedFront
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0xB54988", Offset = "0xB54988", VA = "0xB54988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F81E8", Offset = "0x8F81E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0xB54990", Offset = "0xB54990", VA = "0xB54990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F81F8", Offset = "0x8F81F8")]
			set
			{
			}
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xB5499C", Offset = "0xB5499C", VA = "0xB5499C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xB549E4", Offset = "0xB549E4", VA = "0xB549E4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xB54B20", Offset = "0xB54B20", VA = "0xB54B20")]
		private void CheckCrashingObjects()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xB54DE8", Offset = "0xB54DE8", VA = "0xB54DE8")]
		private void UpdateProgress()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xB54F08", Offset = "0xB54F08", VA = "0xB54F08")]
		public void SnapToHeight(float height)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xB54E40", Offset = "0xB54E40", VA = "0xB54E40")]
		private void StampBlocked()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xB50600", Offset = "0xB50600", VA = "0xB50600")]
		public void AddBreakableItem(Breakable target)
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xB507A8", Offset = "0xB507A8", VA = "0xB507A8")]
		public void RemoveBreakableItem(Breakable target)
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xB54FB8", Offset = "0xB54FB8", VA = "0xB54FB8")]
		public StampingArm()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class StampingTool : MonoBehaviour
	{
		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject powerIndicator;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhysicGrabale grabbable;

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xB55030", Offset = "0xB55030", VA = "0xB55030")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xB5507C", Offset = "0xB5507C", VA = "0xB5507C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F8208", Offset = "0x8F8208")]
		public void PowerOn()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xB550B8", Offset = "0xB550B8", VA = "0xB550B8")]
		private void SetPowerVisual(bool isOn)
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xB550D8", Offset = "0xB550D8", VA = "0xB550D8")]
		private void AllowInteraction()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xB550FC", Offset = "0xB550FC", VA = "0xB550FC")]
		public StampingTool()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class TrackSwitcher : MonoBehaviour
	{
		[Token(Token = "0x2000572")]
		private enum TrackState
		{
			[Token(Token = "0x40020F3")]
			Left,
			[Token(Token = "0x40020F4")]
			Right
		}

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isGrabbed;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rb;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform leftLockPoint;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform rightLockPoint;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float lockDistance;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float wrongDirectionTolerance;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabable grabbable;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool lockedLeft;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool lockedRight;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent onLockedLeft;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEvent onLockedRight;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[StateInfoIdReference]
		private int trackSwitcherStateId;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SFX_3DHook lockSFX;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private StateInst trackSwitcherStateInst;

		[Token(Token = "0x170001DE")]
		public StateInst TrackSwitcherStateInst
		{
			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0xB59864", Offset = "0xB59864", VA = "0xB59864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xB598D8", Offset = "0xB598D8", VA = "0xB598D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xB59948", Offset = "0xB59948", VA = "0xB59948")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xB59A1C", Offset = "0xB59A1C", VA = "0xB59A1C")]
		public void SetGrabbed(bool grabbed)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xB5994C", Offset = "0xB5994C", VA = "0xB5994C")]
		private void UpdateTrackSwitcherPosition()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xB59A28", Offset = "0xB59A28", VA = "0xB59A28")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xB59A80", Offset = "0xB59A80", VA = "0xB59A80")]
		private void CheckLockPoints()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xB59C74", Offset = "0xB59C74", VA = "0xB59C74")]
		private void LockRight()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xB59DA0", Offset = "0xB59DA0", VA = "0xB59DA0")]
		private void LockLeft()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xB59CCC", Offset = "0xB59CCC", VA = "0xB59CCC")]
		private float CheckDistance(Vector3 pos1, Vector3 pos2)
		{
			return default(float);
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xB59E5C", Offset = "0xB59E5C", VA = "0xB59E5C")]
		private void HandleRelease()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xB59E6C", Offset = "0xB59E6C", VA = "0xB59E6C")]
		private void GrabRelease()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xB59C14", Offset = "0xB59C14", VA = "0xB59C14")]
		private bool CheckTooFarRight()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xB59DF8", Offset = "0xB59DF8", VA = "0xB59DF8")]
		private bool CheckTooFarLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xB59E88", Offset = "0xB59E88", VA = "0xB59E88")]
		public TrackSwitcher()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class Turnstile : MonoBehaviour
	{
		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFE8", Offset = "0x8DFFE8")]
		private sealed class <CloseCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Turnstile <>4__this;

			[Token(Token = "0x170002D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F7E")]
				[Address(RVA = "0xB5A528", Offset = "0xB5A528", VA = "0xB5A528", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F80")]
				[Address(RVA = "0xB5A594", Offset = "0xB5A594", VA = "0xB5A594", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0xB5A358", Offset = "0xB5A358", VA = "0xB5A358")]
			[DebuggerHidden]
			public <CloseCoroutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0xB5A418", Offset = "0xB5A418", VA = "0xB5A418", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0xB5A41C", Offset = "0xB5A41C", VA = "0xB5A41C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xB5A530", Offset = "0xB5A530", VA = "0xB5A530", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float timeToWait;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent OnOpen;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent OnClose;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator turnstileAnimator;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Open;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Close;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3844", Offset = "0x8F3844")]
		private bool <pickedUp>k__BackingField;

		[Token(Token = "0x170001DF")]
		public bool pickedUp
		{
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xB5A1C4", Offset = "0xB5A1C4", VA = "0xB5A1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8218", Offset = "0x8F8218")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xB5A1CC", Offset = "0xB5A1CC", VA = "0xB5A1CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F8228", Offset = "0x8F8228")]
			set
			{
			}
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xB5A1D8", Offset = "0xB5A1D8", VA = "0xB5A1D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xB5A230", Offset = "0xB5A230", VA = "0xB5A230")]
		public void CollisionWithMinecart()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xB5A2E4", Offset = "0xB5A2E4", VA = "0xB5A2E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F8238", Offset = "0x8F8238")]
		private IEnumerator CloseCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xB5A384", Offset = "0xB5A384", VA = "0xB5A384")]
		public Turnstile()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class UnderworldIdleVO : MonoBehaviour
	{
		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float demonLineEverySeconds;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float timer;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool timing;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameRules playHintRules;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Dialogue demonOverseerGearMissing1;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Dialogue demonOverseerGearMissing2;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Dialogue demonOverseerGearMissing3;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Dialogue demonOverseerGearMissing4;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Dialogue demonOverseerWallSolved1;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Dialogue demonOverseerWallSolved2;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Dialogue demonOverseerWallSolved3;

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xB5B6E0", Offset = "0xB5B6E0", VA = "0xB5B6E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xB5B6E4", Offset = "0xB5B6E4", VA = "0xB5B6E4")]
		private void UnderWorldReached()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xB5B730", Offset = "0xB5B730", VA = "0xB5B730")]
		private void StartTimer()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xB5B744", Offset = "0xB5B744", VA = "0xB5B744")]
		private void StartOverseerAudio()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xB5B88C", Offset = "0xB5B88C", VA = "0xB5B88C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xB5B8EC", Offset = "0xB5B8EC", VA = "0xB5B8EC")]
		public UnderworldIdleVO()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class VerticalLockPoints : MonoBehaviour
	{
		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform lockPointTop;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform lockPointBottom;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lockDistance;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float refreshDistance;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool lockedTop;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		protected bool lockedBottom;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected UnityEvent onLockedTop;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected UnityEvent onLockedBottom;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SFX_3DHook lockSFX;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rigidbody rb;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PhysicGrabale physicGrabale;

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xB5BD64", Offset = "0xB5BD64", VA = "0xB5BD64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xB5BDD4", Offset = "0xB5BDD4", VA = "0xB5BDD4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xB54E7C", Offset = "0xB54E7C", VA = "0xB54E7C")]
		public float GetHeightProgress(float newMin, float newMax)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xB5BE04", Offset = "0xB5BE04", VA = "0xB5BE04")]
		public float Map(float x, float in_min, float in_max, float out_min, float out_max)
		{
			return default(float);
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xB5BE20", Offset = "0xB5BE20", VA = "0xB5BE20")]
		public Transform GetLockPoint(bool isTop)
		{
			return null;
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xB5BE38", Offset = "0xB5BE38", VA = "0xB5BE38", Slot = "4")]
		protected virtual void HandleLockingLogic()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xB5C4A4", Offset = "0xB5C4A4", VA = "0xB5C4A4", Slot = "5")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xB5C2A4", Offset = "0xB5C2A4", VA = "0xB5C2A4")]
		protected void ResetPositionTop()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xB5BF2C", Offset = "0xB5BF2C", VA = "0xB5BF2C")]
		protected void ResetPositionBottom()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xB5C398", Offset = "0xB5C398", VA = "0xB5C398")]
		protected bool CheckLockPositionTop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xB5C43C", Offset = "0xB5C43C", VA = "0xB5C43C")]
		protected bool CheckLockPositionBottom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xB5C020", Offset = "0xB5C020", VA = "0xB5C020")]
		protected void CheckRefreshPosition(Transform lockPoint)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xB5C400", Offset = "0xB5C400", VA = "0xB5C400")]
		private void GrabRelease()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xB5C4C0", Offset = "0xB5C4C0", VA = "0xB5C4C0", Slot = "6")]
		protected virtual void LockGrabbable(Transform lockTransform)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xB5C41C", Offset = "0xB5C41C", VA = "0xB5C41C")]
		protected void PlayLockAudio()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xB54D20", Offset = "0xB54D20", VA = "0xB54D20")]
		public void ForceUpdateLocking()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xB5C598", Offset = "0xB5C598", VA = "0xB5C598")]
		public void ForceResetPositionTop()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xB5C660", Offset = "0xB5C660", VA = "0xB5C660")]
		public VerticalLockPoints()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	[ExecuteInEditMode]
	public class HighlightController : MonoBehaviour
	{
		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer rend;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Transparency;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool setToEnable;

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xC0D4AC", Offset = "0xC0D4AC", VA = "0xC0D4AC")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F829C", Offset = "0x8F829C")]
		public void EnableHighlight()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xC0D640", Offset = "0xC0D640", VA = "0xC0D640")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F82AC", Offset = "0x8F82AC")]
		public void DisableHighlight()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xC1B5C0", Offset = "0xC1B5C0", VA = "0xC1B5C0")]
		public HighlightController()
		{
		}
	}
}
namespace AmplifyImpostors
{
	[Token(Token = "0x20003E4")]
	public enum LODReplacement
	{
		[Token(Token = "0x4001A55")]
		DoNothing,
		[Token(Token = "0x4001A56")]
		ReplaceCulled,
		[Token(Token = "0x4001A57")]
		ReplaceLast,
		[Token(Token = "0x4001A58")]
		ReplaceAllExceptFirst,
		[Token(Token = "0x4001A59")]
		ReplaceSpecific,
		[Token(Token = "0x4001A5A")]
		ReplaceAfterSpecific,
		[Token(Token = "0x4001A5B")]
		InsertAfter
	}
	[Token(Token = "0x20003E5")]
	public enum CutMode
	{
		[Token(Token = "0x4001A5D")]
		Automatic,
		[Token(Token = "0x4001A5E")]
		Manual
	}
	[Token(Token = "0x20003E6")]
	public enum FolderMode
	{
		[Token(Token = "0x4001A60")]
		RelativeToPrefab,
		[Token(Token = "0x4001A61")]
		Global
	}
	[Token(Token = "0x20003E7")]
	public enum RenderPipelineInUse
	{
		[Token(Token = "0x4001A63")]
		None = 0,
		[Token(Token = "0x4001A64")]
		LW = 1,
		[Token(Token = "0x4001A65")]
		HD = 2,
		[Token(Token = "0x4001A66")]
		URP = 3,
		[Token(Token = "0x4001A67")]
		Custom = 3
	}
	[Token(Token = "0x20003E8")]
	public class AmplifyImpostor : MonoBehaviour
	{
		[Token(Token = "0x4001A68")]
		private const string ShaderGUID = "e82933f4c0eb9ba42aab0739f48efe21";

		[Token(Token = "0x4001A69")]
		private const string DilateGUID = "57c23892d43bc9f458360024c5985405";

		[Token(Token = "0x4001A6A")]
		private const string PackerGUID = "31bd3cd74692f384a916d9d7ea87710d";

		[Token(Token = "0x4001A6B")]
		private const string ShaderOctaGUID = "572f9be5706148142b8da6e9de53acdb";

		[Token(Token = "0x4001A6C")]
		private const string StandardPreset = "e4786beb7716da54dbb02a632681cc37";

		[Token(Token = "0x4001A6D")]
		private const string LWPreset = "089f3a2f6b5f48348a48c755f8d9a7a2";

		[Token(Token = "0x4001A6E")]
		private const string LWShaderOctaGUID = "94e2ddcdfb3257a43872042f97e2fb01";

		[Token(Token = "0x4001A6F")]
		private const string LWShaderGUID = "990451a2073f6994ebf9fd6f90a842b3";

		[Token(Token = "0x4001A70")]
		private const string HDPreset = "47b6b3dcefe0eaf4997acf89caf8c75e";

		[Token(Token = "0x4001A71")]
		private const string HDShaderOctaGUID = "56236dc63ad9b7949b63a27f0ad180b3";

		[Token(Token = "0x4001A72")]
		private const string HDShaderGUID = "175c951fec709c44fa2f26b8ab78b8dd";

		[Token(Token = "0x4001A73")]
		private const string UPreset = "0403878495ffa3c4e9d4bcb3eac9b559";

		[Token(Token = "0x4001A74")]
		private const string UShaderOctaGUID = "83dd8de9a5c14874884f9012def4fdcc";

		[Token(Token = "0x4001A75")]
		private const string UShaderGUID = "da79d698f4bf0164e910ad798d07efdf";

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AmplifyImpostorAsset m_data;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rootTransform;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LODGroup m_lodGroup;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LODReplacement m_lodReplacement;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public RenderPipelineInUse m_renderPipelineInUse;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_insertIndex;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public GameObject m_lastImpostor;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public string m_folderPath;

		[NonSerialized]
		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_impostorName;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public CutMode m_cutMode;

		[NonSerialized]
		[Token(Token = "0x4001A81")]
		private const float StartXRotation = -90f;

		[NonSerialized]
		[Token(Token = "0x4001A82")]
		private const float StartYRotation = 90f;

		[NonSerialized]
		[Token(Token = "0x4001A83")]
		private const int MinAlphaResolution = 256;

		[NonSerialized]
		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture[] m_rtGBuffers;

		[NonSerialized]
		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture[] m_alphaGBuffers;

		[NonSerialized]
		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_trueDepth;

		[NonSerialized]
		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D m_alphaTex;

		[NonSerialized]
		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_xyFitSize;

		[NonSerialized]
		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_depthFitSize;

		[NonSerialized]
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 m_pixelOffset;

		[NonSerialized]
		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Bounds m_originalBound;

		[NonSerialized]
		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 m_oriPos;

		[NonSerialized]
		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion m_oriRot;

		[NonSerialized]
		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 m_oriSca;

		[NonSerialized]
		[Token(Token = "0x4001A8F")]
		private const int BlockSize = 65536;

		[Token(Token = "0x170001E0")]
		public AmplifyImpostorAsset Data
		{
			[Token(Token = "0x6001B12")]
			[Address(RVA = "0xBD31C4", Offset = "0xBD31C4", VA = "0xBD31C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B13")]
			[Address(RVA = "0xBD31CC", Offset = "0xBD31CC", VA = "0xBD31CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public Transform RootTransform
		{
			[Token(Token = "0x6001B14")]
			[Address(RVA = "0xBD31D4", Offset = "0xBD31D4", VA = "0xBD31D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B15")]
			[Address(RVA = "0xBD31DC", Offset = "0xBD31DC", VA = "0xBD31DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public LODGroup LodGroup
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0xBD31E4", Offset = "0xBD31E4", VA = "0xBD31E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0xBD31EC", Offset = "0xBD31EC", VA = "0xBD31EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public Renderer[] Renderers
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0xBD31F4", Offset = "0xBD31F4", VA = "0xBD31F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0xBD31FC", Offset = "0xBD31FC", VA = "0xBD31FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xBD3204", Offset = "0xBD3204", VA = "0xBD3204")]
		private void GenerateTextures(List<TextureOutput> outputList, bool standardRendering)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xBD36AC", Offset = "0xBD36AC", VA = "0xBD36AC")]
		private void GenerateAlphaTextures(List<TextureOutput> outputList)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xBD3854", Offset = "0xBD3854", VA = "0xBD3854")]
		private void ClearBuffers()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xBD38E8", Offset = "0xBD38E8", VA = "0xBD38E8")]
		private void ClearAlphaBuffers()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xBD397C", Offset = "0xBD397C", VA = "0xBD397C")]
		public void RenderImpostor(ImpostorType impostorType, int targetAmount, bool impostorMaps = true, bool combinedAlphas = false, bool useMinResolution = false, [Optional] Shader customShader)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xBD53B8", Offset = "0xBD53B8", VA = "0xBD53B8")]
		private Matrix4x4 GetCameraRotationMatrix(ImpostorType impostorType, int hframes, int vframes, int x, int y)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xBD5B7C", Offset = "0xBD5B7C", VA = "0xBD5B7C")]
		private Vector3 OctahedronToVector(Vector2 oct)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xBD5960", Offset = "0xBD5960", VA = "0xBD5960")]
		private Vector3 OctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xBD5A8C", Offset = "0xBD5A8C", VA = "0xBD5A8C")]
		private Vector3 HemiOctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xBD5CA8", Offset = "0xBD5CA8", VA = "0xBD5CA8")]
		public void GenerateAutomaticMesh(AmplifyImpostorAsset data)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xBD6DB8", Offset = "0xBD6DB8", VA = "0xBD6DB8")]
		public Mesh GenerateMesh(Vector2[] points, Vector3 offset, float width = 1f, float height = 1f, bool invertY = true)
		{
			return null;
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xBD74FC", Offset = "0xBD74FC", VA = "0xBD74FC")]
		public AmplifyImpostor()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public enum ImpostorType
	{
		[Token(Token = "0x4001A91")]
		Spherical,
		[Token(Token = "0x4001A92")]
		Octahedron,
		[Token(Token = "0x4001A93")]
		HemiOctahedron
	}
	[Token(Token = "0x20003EA")]
	[Flags]
	public enum DeferredBuffers
	{
		[Token(Token = "0x4001A95")]
		AlbedoAlpha = 1,
		[Token(Token = "0x4001A96")]
		SpecularSmoothness = 2,
		[Token(Token = "0x4001A97")]
		NormalDepth = 4,
		[Token(Token = "0x4001A98")]
		EmissionOcclusion = 8
	}
	[Token(Token = "0x20003EB")]
	public enum RenderingMaps
	{
		[Token(Token = "0x4001A9A")]
		Standard,
		[Token(Token = "0x4001A9B")]
		Custom
	}
	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DF618", Offset = "0x8DF618")]
	public class AmplifyImpostorAsset : ScriptableObject
	{
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material Material;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Mesh Mesh;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		public int Version;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public ImpostorType ImpostorType;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		public bool LockedSizes;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		[SerializeField]
		public int SelectedSize;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Vector2 TexSize;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		public bool DecoupleAxisFrames;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F3B14", Offset = "0x8F3B14")]
		public int HorizontalFrames;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F3B58", Offset = "0x8F3B58")]
		public int VerticalFrames;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F3B9C", Offset = "0x8F3B9C")]
		public int PixelPadding;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F3BE0", Offset = "0x8F3BE0")]
		public int MaxVertices;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F3C20", Offset = "0x8F3C20")]
		public float Tolerance;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F3C64", Offset = "0x8F3C64")]
		public float NormalScale;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Vector2[] ShapePoints;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public AmplifyImpostorBakePreset Preset;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public List<TextureOutput> OverrideOutput;

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xBD7608", Offset = "0xBD7608", VA = "0xBD7608")]
		public AmplifyImpostorAsset()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public enum ImageFormat
	{
		[Token(Token = "0x4001AAE")]
		PNG,
		[Token(Token = "0x4001AAF")]
		TGA,
		[Token(Token = "0x4001AB0")]
		EXR
	}
	[Token(Token = "0x20003EE")]
	public enum TextureChannels
	{
		[Token(Token = "0x4001AB2")]
		RGBA,
		[Token(Token = "0x4001AB3")]
		RGB
	}
	[Token(Token = "0x20003EF")]
	public enum TextureCompression
	{
		[Token(Token = "0x4001AB5")]
		None,
		[Token(Token = "0x4001AB6")]
		Normal,
		[Token(Token = "0x4001AB7")]
		High,
		[Token(Token = "0x4001AB8")]
		Low
	}
	[Token(Token = "0x20003F0")]
	public enum TextureScale
	{
		[Token(Token = "0x4001ABA")]
		Full = 1,
		[Token(Token = "0x4001ABB")]
		Half = 2,
		[Token(Token = "0x4001ABC")]
		Quarter = 4,
		[Token(Token = "0x4001ABD")]
		Eighth = 8
	}
	[Token(Token = "0x20003F1")]
	[Flags]
	public enum OverrideMask
	{
		[Token(Token = "0x4001ABF")]
		OutputToggle = 1,
		[Token(Token = "0x4001AC0")]
		NameSuffix = 2,
		[Token(Token = "0x4001AC1")]
		RelativeScale = 4,
		[Token(Token = "0x4001AC2")]
		ColorSpace = 8,
		[Token(Token = "0x4001AC3")]
		QualityCompression = 0x10,
		[Token(Token = "0x4001AC4")]
		FileFormat = 0x20
	}
	[Token(Token = "0x20003F2")]
	public enum PresetPipeline
	{
		[Token(Token = "0x4001AC6")]
		Legacy,
		[Token(Token = "0x4001AC7")]
		Lightweight,
		[Token(Token = "0x4001AC8")]
		HighDefinition
	}
	[Serializable]
	[Token(Token = "0x20003F3")]
	public class TextureOutput
	{
		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int Index;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public OverrideMask OverrideMask;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Active;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Name;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextureScale Scale;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool SRGB;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextureChannels Channels;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TextureCompression Compression;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ImageFormat ImageFormat;

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xBD8818", Offset = "0xBD8818", VA = "0xBD8818")]
		public TextureOutput()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xBD8890", Offset = "0xBD8890", VA = "0xBD8890")]
		public TextureOutput(bool a, string n, TextureScale s, bool sr, TextureChannels c, TextureCompression nc, ImageFormat i)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xBD8968", Offset = "0xBD8968", VA = "0xBD8968")]
		public TextureOutput Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8DF66C", Offset = "0x8DF66C")]
	public class AmplifyImpostorBakePreset : ScriptableObject
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Shader BakeShader;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Shader RuntimeShader;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PresetPipeline Pipeline;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public int AlphaIndex;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<TextureOutput> Output;

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xBD7888", Offset = "0xBD7888", VA = "0xBD7888")]
		public AmplifyImpostorBakePreset()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public static class BoundsEx
	{
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xBD574C", Offset = "0xBD574C", VA = "0xBD574C")]
		public static Bounds Transform(this Bounds bounds, Matrix4x4 matrix)
		{
			return default(Bounds);
		}
	}
	[Token(Token = "0x20003F6")]
	public static class Texture2DEx
	{
		[Token(Token = "0x2000574")]
		public enum Compression
		{
			[Token(Token = "0x40020F9")]
			None,
			[Token(Token = "0x40020FA")]
			RLE
		}

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly byte[] Footer;

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xBD7CCC", Offset = "0xBD7CCC", VA = "0xBD7CCC")]
		public static byte[] EncodeToTGA(this Texture2D tex, Compression compression = Compression.RLE)
		{
			return null;
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xBD8758", Offset = "0xBD8758", VA = "0xBD8758")]
		private static bool Equals(Color32 first, Color32 second)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F7")]
	public static class SpriteUtilityEx
	{
		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type type;

		[Token(Token = "0x170001E4")]
		public static Type Type
		{
			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0xBD7B84", Offset = "0xBD7B84", VA = "0xBD7B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xBD617C", Offset = "0xBD617C", VA = "0xBD617C")]
		public static void GenerateOutline(Texture2D texture, Rect rect, float detail, byte alphaTolerance, bool holeDetection, out Vector2[][] paths)
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public static class RenderTextureEx
	{
		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xBD7B00", Offset = "0xBD7B00", VA = "0xBD7B00")]
		public static RenderTexture GetTemporary(RenderTexture renderTexture)
		{
			return null;
		}
	}
	[Token(Token = "0x20003F9")]
	public static class Vector2Ex
	{
		[Serializable]
		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFF8", Offset = "0x8DFFF8")]
		private sealed class <>c
		{
			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector2> <>9__3_0;

			[Token(Token = "0x6001F82")]
			[Address(RVA = "0xBD96B0", Offset = "0xBD96B0", VA = "0xBD96B0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F83")]
			[Address(RVA = "0xBD96B8", Offset = "0xBD96B8", VA = "0xBD96B8")]
			internal int <ConvexHull>b__3_0(Vector2 a, Vector2 b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0008", Offset = "0x8E0008")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2[] P;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int smallestIndex;

			[Token(Token = "0x6001F84")]
			[Address(RVA = "0xBD93B0", Offset = "0xBD93B0", VA = "0xBD93B0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001F85")]
			[Address(RVA = "0xBD96FC", Offset = "0xBD96FC", VA = "0xBD96FC")]
			internal bool <ReduceLeastSignificantVertice>b__0(Vector2 x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xBD8F44", Offset = "0xBD8F44", VA = "0xBD8F44")]
		public static float Cross(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xBD8F64", Offset = "0xBD8F64", VA = "0xBD8F64")]
		public static float TriangleArea(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xBD9018", Offset = "0xBD9018", VA = "0xBD9018")]
		public static float TriangleArea(this Vector3 O, Vector3 A, Vector3 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xBD6480", Offset = "0xBD6480", VA = "0xBD6480")]
		public static Vector2[] ConvexHull(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xBD6B10", Offset = "0xBD6B10", VA = "0xBD6B10")]
		public static Vector2[] ScaleAlongNormals(Vector2[] P, float scaleAmount)
		{
			return null;
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xBD90C8", Offset = "0xBD90C8", VA = "0xBD90C8")]
		private static Vector2[] ReduceLeastSignificantVertice(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xBD67C0", Offset = "0xBD67C0", VA = "0xBD67C0")]
		public static Vector2[] ReduceVertices(Vector2[] P, int maxVertices)
		{
			return null;
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xBD93B8", Offset = "0xBD93B8", VA = "0xBD93B8")]
		private static Vector2 GetIntersectionPointCoordinates(Vector2 A1, Vector2 A2, Vector2 B1, Vector2 B2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xBD9558", Offset = "0xBD9558", VA = "0xBD9558")]
		private static float OutsideBounds(Vector2 P)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003FA")]
	public static class ImpostorBakingTools
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string PrefGlobalFolder;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string PrefGlobalRelativeFolder;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string PrefGlobalDefault;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string PrefGlobalTexImport;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string PrefGlobalCreateLodGroup;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string PrefGlobalGBuffer0Name;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string PrefGlobalGBuffer1Name;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string PrefGlobalGBuffer2Name;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string PrefGlobalGBuffer3Name;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string PrefGlobalBakingOptions;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly string PrefDataImpType;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly string PrefDataTexSizeLocked;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly string PrefDataTexSizeSelected;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly string PrefDataTexSizeX;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly string PrefDataTexSizeY;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly string PrefDataDecoupledFrames;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly string PrefDataXFrames;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly string PrefDataYFrames;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly string PrefDataPixelBleeding;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly string PrefDataTolerance;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly string PrefDataNormalScale;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly string PrefDataMaxVertices;
	}
	[Token(Token = "0x20003FB")]
	public class Triangulator
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector2> m_points;

		[Token(Token = "0x170001E5")]
		public List<Vector2> Points
		{
			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0xBD89F0", Offset = "0xBD89F0", VA = "0xBD89F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xBD71AC", Offset = "0xBD71AC", VA = "0xBD71AC")]
		public Triangulator(Vector2[] points)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xBD89F8", Offset = "0xBD89F8", VA = "0xBD89F8")]
		public Triangulator(Vector2[] points, bool invertY = true)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xBD7250", Offset = "0xBD7250", VA = "0xBD7250")]
		public int[] Triangulate()
		{
			return null;
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xBD8B50", Offset = "0xBD8B50", VA = "0xBD8B50")]
		private float Area()
		{
			return default(float);
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xBD8C70", Offset = "0xBD8C70", VA = "0xBD8C70")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xBD8ECC", Offset = "0xBD8ECC", VA = "0xBD8ECC")]
		private bool InsideTriangle(Vector2 pt, Vector2 v1, Vector2 v2, Vector2 v3)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20003FC")]
	public class VersionInfo
	{
		[Token(Token = "0x4001AF0")]
		public const byte Major = 0;

		[Token(Token = "0x4001AF1")]
		public const byte Minor = 9;

		[Token(Token = "0x4001AF2")]
		public const byte Release = 7;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static byte Revision;

		[Token(Token = "0x170001E6")]
		public static int FullNumber
		{
			[Token(Token = "0x6001B45")]
			[Address(RVA = "0xBD98C8", Offset = "0xBD98C8", VA = "0xBD98C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E7")]
		public static string FullLabel
		{
			[Token(Token = "0x6001B46")]
			[Address(RVA = "0xBD9938", Offset = "0xBD9938", VA = "0xBD9938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xBD9774", Offset = "0xBD9774", VA = "0xBD9774")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xBD99D0", Offset = "0xBD99D0", VA = "0xBD99D0")]
		public VersionInfo()
		{
		}
	}
}
