using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Threading;
using BNG;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using TMPro;
using UltimateReplay;
using UltimateReplay.Core;
using UltimateReplay.Core.Services;
using UltimateReplay.Core.StatePreparer;
using UltimateReplay.Serializers;
using UltimateReplay.Storage;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using xHolobits;
using xHolobits.VR;
using xHolobits.VR.UI;

[assembly: AssemblyVersion("3.7.1.6")]
[Token(Token = "0x2000002")]
public class ButtonsEventHelperXH : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnRightTriggerDown;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnLeftTriggerDown;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftLaser;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rightLaser;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnAbuttonDown;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnAbuttonUp;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnBbuttonDown;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnXbuttonDown;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnXbuttonUp;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnYbuttonDown;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnYbuttonUp;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent OnRightStickDown;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent OnLeftStickDown;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityFloatEvent OnLeftStickX;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityFloatEvent OnLeftStickY;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityFloatEvent OnRightStickX;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityFloatEvent OnRightStickY;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool lastJoystickupdate;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x774370", Offset = "0x774370", VA = "0x774370")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x774374", Offset = "0x774374", VA = "0x774374")]
	private void UpdateRightLaser()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x7743B8", Offset = "0x7743B8", VA = "0x7743B8")]
	private void UpdateLeftLaser()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x7743FC", Offset = "0x7743FC", VA = "0x7743FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x77498C", Offset = "0x77498C", VA = "0x77498C")]
	public ButtonsEventHelperXH()
	{
	}
}
[Token(Token = "0x2000003")]
public class HelpManager : MonoBehaviour
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject settingsPanel;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject helpButtonIndicator;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject settingsPanelIndicator;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool SettingsPanelActive;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool HelpPanelActive;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] helpItems;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x9AF530", Offset = "0x9AF530", VA = "0x9AF530")]
	public void ToggleHelpItems()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x9AF598", Offset = "0x9AF598", VA = "0x9AF598")]
	public void DoToggleHelpItems()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x9AF680", Offset = "0x9AF680", VA = "0x9AF680")]
	public void Start()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x9AF764", Offset = "0x9AF764", VA = "0x9AF764")]
	public void ToggleSettingsPanel()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x9AF7CC", Offset = "0x9AF7CC", VA = "0x9AF7CC")]
	private void DoToggleSettingsPanel()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x9AF880", Offset = "0x9AF880", VA = "0x9AF880")]
	public HelpManager()
	{
	}
}
[Token(Token = "0x2000004")]
public class hideAllScreens : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public positionHider[] otherHiders;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public positionHider quizesMain;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public positionHider heartsMain;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x5EF5A0", Offset = "0x5EF5A0", VA = "0x5EF5A0")]
	public void hideAll()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x5EF6E4", Offset = "0x5EF6E4", VA = "0x5EF6E4")]
	public void hideAllBut()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x5EF74C", Offset = "0x5EF74C", VA = "0x5EF74C")]
	public hideAllScreens()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x3B7DBC", Offset = "0x3B7DBC")]
public class FastList<T>
{
	[Token(Token = "0x20002C4")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8EE4", Offset = "0x3B8EE4")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170001BE")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001196")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001198")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001193")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001194")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001195")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001197")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000011")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000012")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000014")]
		set
		{
		}
	}

	[Token(Token = "0x600000F")]
	public FastList()
	{
	}

	[Token(Token = "0x6000010")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000015")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000016")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000017")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000018")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000019")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600001A")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600001B")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600001C")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600001D")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600001E")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x600001F")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000020")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000022")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000023")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4550", Offset = "0x3C4550")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000024")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000025")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000026")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000027")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000028")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000006")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x9B2DBC", Offset = "0x9B2DBC", VA = "0x9B2DBC")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000007")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x9B2D90", Offset = "0x9B2D90", VA = "0x9B2D90")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000008")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xFCB96C", Offset = "0xFCB96C", VA = "0xFCB96C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xFCBAD0", Offset = "0xFCBAD0", VA = "0xFCBAD0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xFCBE6C", Offset = "0xFCBE6C", VA = "0xFCBE6C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xFCC010", Offset = "0xFCC010", VA = "0xFCC010", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xFCC040", Offset = "0xFCC040", VA = "0xFCC040")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000009")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xFD369C", Offset = "0xFD369C", VA = "0xFD369C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xFD3730", Offset = "0xFD3730", VA = "0xFD3730")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xFD38A4", Offset = "0xFD38A4", VA = "0xFD38A4")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200000A")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000003")]
	public bool IsVisible
	{
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x80B578", Offset = "0x80B578", VA = "0x80B578")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x80B580", Offset = "0x80B580", VA = "0x80B580")]
		set
		{
		}
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x80B6BC", Offset = "0x80B6BC", VA = "0x80B6BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x80B884", Offset = "0x80B884", VA = "0x80B884")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x80B88C", Offset = "0x80B88C", VA = "0x80B88C")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200000B")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20002C6")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x88A9F8", Offset = "0x88A9F8", VA = "0x88A9F8")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C7")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3C4390", Offset = "0x3C4390")]
		public float FakeLatencyMax;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3C43A8", Offset = "0x3C43A8")]
		public float FakeLatencyMin;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3C43C0", Offset = "0x3C43C0")]
		public float LatencyWeight;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3C43D8", Offset = "0x3C43D8")]
		public int MaxSamples;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x88AA00", Offset = "0x88AA00", VA = "0x88AA00")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x88AB38", Offset = "0x88AB38", VA = "0x88AB38")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x77CC48", Offset = "0x77CC48", VA = "0x77CC48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x77CD8C", Offset = "0x77CD8C", VA = "0x77CD8C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x77D15C", Offset = "0x77D15C", VA = "0x77D15C")]
	private void Update()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x77D0B4", Offset = "0x77D0B4", VA = "0x77D0B4")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x77D488", Offset = "0x77D488", VA = "0x77D488")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x77D768", Offset = "0x77D768", VA = "0x77D768")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200000C")]
public class P2PManager
{
	[Token(Token = "0x20002C8")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40011EA")]
		Update = 1
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xFCCEA8", Offset = "0xFCCEA8", VA = "0xFCCEA8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xFCCF90", Offset = "0xFCCF90", VA = "0xFCCF90")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xFCD074", Offset = "0xFCD074", VA = "0xFCD074")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xFCD0F4", Offset = "0xFCD0F4", VA = "0xFCD0F4")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xFCD264", Offset = "0xFCD264", VA = "0xFCD264")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xFCD4B4", Offset = "0xFCD4B4", VA = "0xFCD4B4")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xFCD8B8", Offset = "0xFCD8B8", VA = "0xFCD8B8")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xFCDB7C", Offset = "0xFCDB7C", VA = "0xFCDB7C")]
	public void processAvatarPacket(RemotePlayer remote, byte[] packet, int offset)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xFCD684", Offset = "0xFCD684", VA = "0xFCD684")]
	private void PackByte(byte b, byte[] buf, int offset)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xFCDAB0", Offset = "0xFCDAB0", VA = "0xFCDAB0")]
	private byte ReadByte(byte[] buf, int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xFCD770", Offset = "0xFCD770", VA = "0xFCD770")]
	private void PackFloat(float f, byte[] buf, int offset)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xFCDDB4", Offset = "0xFCDDB4", VA = "0xFCDDB4")]
	private float ReadFloat(byte[] buf, int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xFCD6CC", Offset = "0xFCD6CC", VA = "0xFCD6CC")]
	private void PackULong(ulong u, byte[] buf, int offset)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xFCDAF4", Offset = "0xFCDAF4", VA = "0xFCDAF4")]
	private ulong ReadULong(byte[] buf, int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xFCD814", Offset = "0xFCD814", VA = "0xFCD814")]
	private void PackUInt32(uint u, byte[] buf, int offset)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xFCDE3C", Offset = "0xFCDE3C", VA = "0xFCDE3C")]
	private uint ReadUInt32(byte[] buf, int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200000D")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xFD0C94", Offset = "0xFD0C94", VA = "0xFD0C94", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xFD0CD0", Offset = "0xFD0CD0", VA = "0xFD0CD0", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xFD0D08", Offset = "0xFD0D08", VA = "0xFD0D08", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xFD0D30", Offset = "0xFD0D30", VA = "0xFD0D30")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xFD0ED8", Offset = "0xFD0ED8", VA = "0xFD0ED8")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xFD0F58", Offset = "0xFD0F58", VA = "0xFD0F58")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xFD0FAC", Offset = "0xFD0FAC", VA = "0xFD0FAC")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200000E")]
public class RemotePlayer
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x77D81C", Offset = "0x77D81C", VA = "0x77D81C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200000F")]
public class RoomManager
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xFA334C", Offset = "0xFA334C", VA = "0xFA334C")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xFA3468", Offset = "0xFA3468", VA = "0xFA3468")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xFA3758", Offset = "0xFA3758", VA = "0xFA3758")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xFA3898", Offset = "0xFA3898", VA = "0xFA3898")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xFA3974", Offset = "0xFA3974", VA = "0xFA3974")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xFA3F30", Offset = "0xFA3F30", VA = "0xFA3F30")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xFA3788", Offset = "0xFA3788", VA = "0xFA3788")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xFA3FB4", Offset = "0xFA3FB4", VA = "0xFA3FB4")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xFA46AC", Offset = "0xFA46AC", VA = "0xFA46AC")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xFA49A0", Offset = "0xFA49A0", VA = "0xFA49A0")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xFA428C", Offset = "0xFA428C", VA = "0xFA428C")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000010")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20002C9")]
	public enum State
	{
		[Token(Token = "0x40011EC")]
		INITIALIZING,
		[Token(Token = "0x40011ED")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40011EE")]
		CREATING_A_ROOM,
		[Token(Token = "0x40011EF")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40011F0")]
		JOINING_A_ROOM,
		[Token(Token = "0x40011F1")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40011F2")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40011F3")]
		SHUTDOWN
	}

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000004")]
	public static State CurrentState
	{
		[Token(Token = "0x600006D")]
		[Address(RVA = "0xFAE590", Offset = "0xFAE590", VA = "0xFAE590")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000005")]
	public static ulong MyID
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0xFA3A90", Offset = "0xFA3A90", VA = "0xFA3A90")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000006")]
	public static string MyOculusID
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0xFAE600", Offset = "0xFAE600", VA = "0xFAE600")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xFACC4C", Offset = "0xFACC4C", VA = "0xFACC4C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xFACFD4", Offset = "0xFACFD4", VA = "0xFACFD4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xFAD430", Offset = "0xFAD430", VA = "0xFAD430")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xFAD5E8", Offset = "0xFAD5E8", VA = "0xFAD5E8", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xFAD5EC", Offset = "0xFAD5EC", VA = "0xFAD5EC")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xFAD70C", Offset = "0xFAD70C", VA = "0xFAD70C")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xFADDCC", Offset = "0xFADDCC", VA = "0xFADDCC")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xFAE1A0", Offset = "0xFAE1A0", VA = "0xFAE1A0")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xFAE3A4", Offset = "0xFAE3A4", VA = "0xFAE3A4")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xFAE524", Offset = "0xFAE524", VA = "0xFAE524")]
	public void AddUser(ulong userID, RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xFAD374", Offset = "0xFAD374", VA = "0xFAD374")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xFA35D8", Offset = "0xFA35D8", VA = "0xFA35D8")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xFA3B70", Offset = "0xFA3B70", VA = "0xFA3B70")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xFAE728", Offset = "0xFAE728", VA = "0xFAE728")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xFA3E24", Offset = "0xFA3E24", VA = "0xFA3E24")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xFA4A14", Offset = "0xFA4A14", VA = "0xFA4A14")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xFA4DFC", Offset = "0xFA4DFC", VA = "0xFA4DFC")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xFA4EE8", Offset = "0xFA4EE8", VA = "0xFA4EE8")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xFA3698", Offset = "0xFA3698", VA = "0xFA3698")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xFA4B6C", Offset = "0xFA4B6C", VA = "0xFA4B6C")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xFA4C08", Offset = "0xFA4C08", VA = "0xFA4C08")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xFAE8D0", Offset = "0xFAE8D0", VA = "0xFAE8D0")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xFAEAE8", Offset = "0xFAEAE8", VA = "0xFAEAE8")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xFACBC8", Offset = "0xFACBC8", VA = "0xFACBC8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x3C45B8", Offset = "0x3C45B8")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xFAEC34", Offset = "0xFAEC34", VA = "0xFAEC34")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xFAED18", Offset = "0xFAED18", VA = "0xFAED18")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000011")]
public class VoipManager
{
	[Token(Token = "0x600007F")]
	[Address(RVA = "0x5ECB50", Offset = "0x5ECB50", VA = "0x5ECB50")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x5ECC38", Offset = "0x5ECC38", VA = "0x5ECC38")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x5ECD1C", Offset = "0x5ECD1C", VA = "0x5ECD1C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x5ECD9C", Offset = "0x5ECD9C", VA = "0x5ECD9C")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x5ECF0C", Offset = "0x5ECF0C", VA = "0x5ECF0C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000012")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x80B234", Offset = "0x80B234", VA = "0x80B234")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x80B2B4", Offset = "0x80B2B4", VA = "0x80B2B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x80B428", Offset = "0x80B428", VA = "0x80B428")]
	private void Update()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x80B48C", Offset = "0x80B48C", VA = "0x80B48C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x80B2F0", Offset = "0x80B2F0", VA = "0x80B2F0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x80B558", Offset = "0x80B558", VA = "0x80B558")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x80B570", Offset = "0x80B570", VA = "0x80B570")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class AvatarLayer
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x76AE84", Offset = "0x76AE84", VA = "0x76AE84")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000014")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xFCDEC4", Offset = "0xFCDEC4", VA = "0xFCDEC4")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000015")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20002CA")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x5FE508", Offset = "0x5FE508", VA = "0x5FE508")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20002CB")]
	public enum HandType
	{
		[Token(Token = "0x40011F6")]
		Right,
		[Token(Token = "0x40011F7")]
		Left,
		[Token(Token = "0x40011F8")]
		Max
	}

	[Token(Token = "0x20002CC")]
	public enum HandJoint
	{
		[Token(Token = "0x40011FA")]
		HandBase,
		[Token(Token = "0x40011FB")]
		IndexBase,
		[Token(Token = "0x40011FC")]
		IndexTip,
		[Token(Token = "0x40011FD")]
		ThumbBase,
		[Token(Token = "0x40011FE")]
		ThumbTip,
		[Token(Token = "0x40011FF")]
		Max
	}

	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8EF4", Offset = "0x3B8EF4")]
	private sealed class <WaitForMouthAudioSource>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x5FE4B8", Offset = "0x5FE4B8", VA = "0x5FE4B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x5FE500", Offset = "0x5FE500", VA = "0x5FE500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x5FE2E8", Offset = "0x5FE2E8", VA = "0x5FE2E8")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x5FE314", Offset = "0x5FE314", VA = "0x5FE314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x5FE318", Offset = "0x5FE318", VA = "0x5FE318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x5FE4C0", Offset = "0x5FE4C0", VA = "0x5FE4C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3B97DC", Offset = "0x3B97DC")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3B9814", Offset = "0x3B9814")]
	public bool EnableBody;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3B984C", Offset = "0x3B984C")]
	public bool RecordPackets;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3B9884", Offset = "0x3B9884")]
	public bool StartWithControllers;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3B98BC", Offset = "0x3B98BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B98BC", Offset = "0x3B98BC")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B992C", Offset = "0x3B992C")]
	private bool CombineMeshes;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9964", Offset = "0x3B9964")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3B999C", Offset = "0x3B999C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3B99D4", Offset = "0x3B99D4")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9A0C", Offset = "0x3B9A0C")]
	public bool EnableLaughter;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float[] visemes;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AudioSource audioSource;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool showLeftController;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool showRightController;

	[Token(Token = "0x40000A4")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000A6")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000A7")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000A8")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000A9")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000AA")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xFE4770", Offset = "0xFE4770", VA = "0xFE4770")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xFE4B64", Offset = "0xFE4B64", VA = "0xFE4B64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xFE4BF8", Offset = "0xFE4BF8", VA = "0xFE4BF8")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xFE4C60", Offset = "0xFE4C60", VA = "0xFE4C60")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xFE4D90", Offset = "0xFE4D90", VA = "0xFE4D90")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xFE4E70", Offset = "0xFE4E70", VA = "0xFE4E70")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xFE4F44", Offset = "0xFE4F44", VA = "0xFE4F44")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xFE5124", Offset = "0xFE5124", VA = "0xFE5124")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xFE5208", Offset = "0xFE5208", VA = "0xFE5208")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xFE5288", Offset = "0xFE5288", VA = "0xFE5288")]
	internal static void ConvertTransform(float[] transform, ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xFE5370", Offset = "0xFE5370", VA = "0xFE5370")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xFE53FC", Offset = "0xFE53FC", VA = "0xFE53FC")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xFE5484", Offset = "0xFE5484", VA = "0xFE5484")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xFE549C", Offset = "0xFE549C", VA = "0xFE549C")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x600009B")]
	private void AddAvatarComponent<T>(T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xFE5908", Offset = "0xFE5908", VA = "0xFE5908")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xFE5C78", Offset = "0xFE5C78", VA = "0xFE5C78")]
	private static bool UpdatePoseRoot(Transform poseRoot, Transform cachedPoseRoot, Transform[] cachedPoseJoints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xFE5E20", Offset = "0xFE5E20", VA = "0xFE5E20")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xFE606C", Offset = "0xFE606C", VA = "0xFE606C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xFE6160", Offset = "0xFE6160", VA = "0xFE6160")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xFE67BC", Offset = "0xFE67BC", VA = "0xFE67BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xFE6AE8", Offset = "0xFE6AE8", VA = "0xFE6AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xFE749C", Offset = "0xFE749C", VA = "0xFE749C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xFE74E4", Offset = "0xFE74E4", VA = "0xFE74E4")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xFE641C", Offset = "0xFE641C", VA = "0xFE641C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xFE64C0", Offset = "0xFE64C0", VA = "0xFE64C0")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xFE7514", Offset = "0xFE7514", VA = "0xFE7514")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xFE6EC0", Offset = "0xFE6EC0", VA = "0xFE6EC0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xFE778C", Offset = "0xFE778C", VA = "0xFE778C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xFE7578", Offset = "0xFE7578", VA = "0xFE7578")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xFE7A34", Offset = "0xFE7A34", VA = "0xFE7A34")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xFE7EA8", Offset = "0xFE7EA8", VA = "0xFE7EA8")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xFE82BC", Offset = "0xFE82BC", VA = "0xFE82BC")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xFE8410", Offset = "0xFE8410", VA = "0xFE8410")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xFE85F4", Offset = "0xFE85F4", VA = "0xFE85F4")]
	public void GetPointingDirection(HandType hand, Vector3 forward, Vector3 up)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xFE7024", Offset = "0xFE7024", VA = "0xFE7024")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xFE86C8", Offset = "0xFE86C8", VA = "0xFE86C8")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xFE6ED0", Offset = "0xFE6ED0", VA = "0xFE6ED0")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xFE86D0", Offset = "0xFE86D0", VA = "0xFE86D0")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xFE8D38", Offset = "0xFE8D38", VA = "0xFE8D38")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xFE921C", Offset = "0xFE921C", VA = "0xFE921C")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xFE9244", Offset = "0xFE9244", VA = "0xFE9244")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xFE926C", Offset = "0xFE926C", VA = "0xFE926C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xFE7330", Offset = "0xFE7330", VA = "0xFE7330")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xFE8794", Offset = "0xFE8794", VA = "0xFE8794")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xFE93F4", Offset = "0xFE93F4", VA = "0xFE93F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4620", Offset = "0x3C4620")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xFE9468", Offset = "0xFE9468", VA = "0xFE9468")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xFE92AC", Offset = "0xFE92AC", VA = "0xFE92AC")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xFE952C", Offset = "0xFE952C", VA = "0xFE952C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xFE9530", Offset = "0xFE9530", VA = "0xFE9530")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xFE92A8", Offset = "0xFE92A8", VA = "0xFE92A8")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xFE9534", Offset = "0xFE9534", VA = "0xFE9534")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000016")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xFE9704", Offset = "0xFE9704", VA = "0xFE9704")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000017")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xFE97C8", Offset = "0xFE97C8", VA = "0xFE97C8")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xFEAA54", Offset = "0xFEAA54", VA = "0xFEAA54")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xFEA634", Offset = "0xFEA634", VA = "0xFEA634")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xFEA3B4", Offset = "0xFEA3B4", VA = "0xFEA3B4")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xFEA49C", Offset = "0xFEA49C", VA = "0xFEA49C")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, [Out] long vertexCount, [Out] IntPtr vertexBuffer, [Out] uint indexCount, [Out] IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xFEACE4", Offset = "0xFEACE4", VA = "0xFEACE4")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000018")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000C7")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xFEB248", Offset = "0xFEB248", VA = "0xFEB248")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000019")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xFEB4B8", Offset = "0xFEB4B8", VA = "0xFEB4B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xFEB914", Offset = "0xFEB914", VA = "0xFEB914")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200001A")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xFE814C", Offset = "0xFE814C", VA = "0xFE814C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xFEBA44", Offset = "0xFEBA44", VA = "0xFEBA44")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xFEBB68", Offset = "0xFEBB68", VA = "0xFEBB68")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200001B")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xFEBBD0", Offset = "0xFEBBD0", VA = "0xFEBBD0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xFEB5DC", Offset = "0xFEB5DC", VA = "0xFEB5DC")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xFEBBD8", Offset = "0xFEBBD8", VA = "0xFEBBD8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xFEBC38", Offset = "0xFEBC38", VA = "0xFEBC38")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xFEC3CC", Offset = "0xFEC3CC", VA = "0xFEC3CC")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xFEB97C", Offset = "0xFEB97C", VA = "0xFEB97C")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200001C")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20002CE")]
	public enum PacketMode
	{
		[Token(Token = "0x4001204")]
		SDK,
		[Token(Token = "0x4001205")]
		Unity
	}

	[Token(Token = "0x20002CF")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x5FE580", Offset = "0x5FE580", VA = "0x5FE580")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20002D0")]
	public struct PoseFrame
	{
		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x5FE65C", Offset = "0x5FE65C", VA = "0x5FE65C")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xFED814", Offset = "0xFED814", VA = "0xFED814")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000D6")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xFED824", Offset = "0xFED824", VA = "0xFED824")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xFE6564", Offset = "0xFE6564", VA = "0xFE6564")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xFED8B4", Offset = "0xFED8B4", VA = "0xFED8B4")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xFED8BC", Offset = "0xFED8BC", VA = "0xFED8BC")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xFED8CC", Offset = "0xFED8CC", VA = "0xFED8CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xFEDA30", Offset = "0xFEDA30", VA = "0xFEDA30")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xFEDAA0", Offset = "0xFEDAA0", VA = "0xFEDAA0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xFEDC04", Offset = "0xFEDC04", VA = "0xFEDC04")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xFEDFA0", Offset = "0xFEDFA0", VA = "0xFEDFA0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xFEE1C4", Offset = "0xFEE1C4", VA = "0xFEE1C4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xFEE1F0", Offset = "0xFEE1F0", VA = "0xFEE1F0")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200001F")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20002D1")]
	public enum TextureType
	{
		[Token(Token = "0x4001216")]
		DiffuseTextures,
		[Token(Token = "0x4001217")]
		NormalMaps,
		[Token(Token = "0x4001218")]
		RoughnessMaps,
		[Token(Token = "0x4001219")]
		Count
	}

	[Token(Token = "0x20002D2")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20002D3")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20002D4")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20002D5")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x888BA4", Offset = "0x888BA4", VA = "0x888BA4")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20002D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8F04", Offset = "0x3B8F04")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x5FF00C", Offset = "0x5FF00C", VA = "0x5FF00C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x5FF054", Offset = "0x5FF054", VA = "0x5FF054", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x5FE960", Offset = "0x5FE960", VA = "0x5FE960")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x5FE98C", Offset = "0x5FE98C", VA = "0x5FE98C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x5FE990", Offset = "0x5FE990", VA = "0x5FE990", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x5FF014", Offset = "0x5FF014", VA = "0x5FF014", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40000FB")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40000FC")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40000FD")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40000FE")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xFEE23C", Offset = "0xFEE23C", VA = "0xFEE23C")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xFEE3C8", Offset = "0xFEE3C8", VA = "0xFEE3C8")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xFEE3F4", Offset = "0xFEE3F4", VA = "0xFEE3F4")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xFEEB54", Offset = "0xFEEB54", VA = "0xFEEB54")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xFEEBC0", Offset = "0xFEEBC0", VA = "0xFEEBC0")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xFEE498", Offset = "0xFEE498", VA = "0xFEE498")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xFEEC14", Offset = "0xFEEC14", VA = "0xFEEC14")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xFEE8CC", Offset = "0xFEE8CC", VA = "0xFEE8CC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xFEED04", Offset = "0xFEED04", VA = "0xFEED04")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xFEEFA8", Offset = "0xFEEFA8", VA = "0xFEEFA8")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xFEF0D0", Offset = "0xFEF0D0", VA = "0xFEF0D0")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xFEF108", Offset = "0xFEF108", VA = "0xFEF108")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xFEEADC", Offset = "0xFEEADC", VA = "0xFEEADC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4688", Offset = "0x3C4688")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xFEFF78", Offset = "0xFEFF78", VA = "0xFEFF78")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000007")]
	public float Duration
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xFC6580", Offset = "0xFC6580", VA = "0xFC6580")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000008")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xFC65F4", Offset = "0xFC65F4", VA = "0xFC65F4")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xFC6684", Offset = "0xFC6684", VA = "0xFC6684")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xFC67A4", Offset = "0xFC67A4", VA = "0xFC67A4")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xFC6958", Offset = "0xFC6958", VA = "0xFC6958")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xFC6A90", Offset = "0xFC6A90", VA = "0xFC6A90")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xFC6B68", Offset = "0xFC6B68", VA = "0xFC6B68")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xFC6D98", Offset = "0xFC6D98", VA = "0xFC6D98")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xFC7060", Offset = "0xFC7060", VA = "0xFC7060")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000021")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x76E9B8", Offset = "0x76E9B8", VA = "0x76E9B8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x76EACC", Offset = "0x76EACC", VA = "0x76EACC")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x76EC78", Offset = "0x76EC78", VA = "0x76EC78")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x76EB3C", Offset = "0x76EB3C", VA = "0x76EB3C")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x76EBD0", Offset = "0x76EBD0", VA = "0x76EBD0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000022")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x76E5B8", Offset = "0x76E5B8", VA = "0x76E5B8")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x76E95C", Offset = "0x76E95C", VA = "0x76E95C")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x76E758", Offset = "0x76E758", VA = "0x76E758")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x76E7D0", Offset = "0x76E7D0", VA = "0x76E7D0")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x76E86C", Offset = "0x76E86C", VA = "0x76E86C")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000106")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000107")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xFC7288", Offset = "0xFC7288", VA = "0xFC7288")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xFC7310", Offset = "0xFC7310", VA = "0xFC7310", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xFC732C", Offset = "0xFC732C", VA = "0xFC732C")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xFC74D0", Offset = "0xFC74D0", VA = "0xFC74D0")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xFC7674", Offset = "0xFC7674", VA = "0xFC7674")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000024")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xFC7708", Offset = "0xFC7708", VA = "0xFC7708")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xFC77F4", Offset = "0xFC77F4", VA = "0xFC77F4")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xFC7C34", Offset = "0xFC7C34", VA = "0xFC7C34")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xFC7FE8", Offset = "0xFC7FE8", VA = "0xFC7FE8")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xFC80F4", Offset = "0xFC80F4", VA = "0xFC80F4")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000025")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000110")]
	Body = 1,
	[Token(Token = "0x4000111")]
	Hands = 2,
	[Token(Token = "0x4000112")]
	Base = 4,
	[Token(Token = "0x4000113")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000114")]
	Expressive = 0x20,
	[Token(Token = "0x4000115")]
	All = -1
}
[Token(Token = "0x2000026")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000117")]
	AvatarSpecification,
	[Token(Token = "0x4000118")]
	AssetLoaded,
	[Token(Token = "0x4000119")]
	Count
}
[Token(Token = "0x2000027")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000028")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000029")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x400011F")]
	Mesh,
	[Token(Token = "0x4000120")]
	Texture,
	[Token(Token = "0x4000121")]
	Pose,
	[Token(Token = "0x4000122")]
	Material,
	[Token(Token = "0x4000123")]
	CombinedMesh,
	[Token(Token = "0x4000124")]
	PBSMaterial,
	[Token(Token = "0x4000125")]
	FailedLoad,
	[Token(Token = "0x4000126")]
	Count
}
[Token(Token = "0x200002A")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200002B")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200002C")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200002D")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200002E")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200002F")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400015B")]
	RGB24,
	[Token(Token = "0x400015C")]
	DXT1,
	[Token(Token = "0x400015D")]
	DXT5,
	[Token(Token = "0x400015E")]
	ASTC_RGB_6x6,
	[Token(Token = "0x400015F")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000160")]
	Count
}
[Token(Token = "0x2000030")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000031")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000168")]
	SkinnedMeshRender,
	[Token(Token = "0x4000169")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400016A")]
	ProjectorRender,
	[Token(Token = "0x400016B")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x400016C")]
	Count
}
[Token(Token = "0x2000032")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x400016E")]
	Unknown,
	[Token(Token = "0x400016F")]
	Default,
	[Token(Token = "0x4000170")]
	Verbose,
	[Token(Token = "0x4000171")]
	Debug,
	[Token(Token = "0x4000172")]
	Info,
	[Token(Token = "0x4000173")]
	Warn,
	[Token(Token = "0x4000174")]
	Error,
	[Token(Token = "0x4000175")]
	Fatal,
	[Token(Token = "0x4000176")]
	Silent
}
[Token(Token = "0x2000033")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000034")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x400017B")]
	One = 1,
	[Token(Token = "0x400017C")]
	Two = 2,
	[Token(Token = "0x400017D")]
	Three = 4,
	[Token(Token = "0x400017E")]
	Joystick = 8
}
[Token(Token = "0x2000035")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000180")]
	One = 1,
	[Token(Token = "0x4000181")]
	Two = 2,
	[Token(Token = "0x4000182")]
	Joystick = 4,
	[Token(Token = "0x4000183")]
	ThumbRest = 8,
	[Token(Token = "0x4000184")]
	Index = 0x10,
	[Token(Token = "0x4000185")]
	Pointing = 0x40,
	[Token(Token = "0x4000186")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000036")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000037")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000038")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000039")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200003A")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200003B")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200003C")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200003D")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200003E")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001A6")]
	Add,
	[Token(Token = "0x40001A7")]
	Multiply,
	[Token(Token = "0x40001A8")]
	Count
}
[Token(Token = "0x200003F")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001AA")]
	Color,
	[Token(Token = "0x40001AB")]
	Texture,
	[Token(Token = "0x40001AC")]
	TextureSingleChannel,
	[Token(Token = "0x40001AD")]
	Parallax,
	[Token(Token = "0x40001AE")]
	Count
}
[Token(Token = "0x2000040")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001B0")]
	None,
	[Token(Token = "0x40001B1")]
	Positional,
	[Token(Token = "0x40001B2")]
	ViewReflection,
	[Token(Token = "0x40001B3")]
	Fresnel,
	[Token(Token = "0x40001B4")]
	Pulse,
	[Token(Token = "0x40001B5")]
	Count
}
[Token(Token = "0x2000041")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001B7")]
	Touch,
	[Token(Token = "0x40001B8")]
	Malibu,
	[Token(Token = "0x40001B9")]
	Go,
	[Token(Token = "0x40001BA")]
	Quest,
	[Token(Token = "0x40001BB")]
	Count
}
[Token(Token = "0x2000042")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001BD")]
	Lowest = 1,
	[Token(Token = "0x40001BE")]
	Medium = 3,
	[Token(Token = "0x40001BF")]
	Highest = 5
}
[Token(Token = "0x2000043")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001C1")]
	Unknown = -1,
	[Token(Token = "0x40001C2")]
	One,
	[Token(Token = "0x40001C3")]
	Two
}
[Token(Token = "0x2000044")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x5F1438", Offset = "0x5F1438", VA = "0x5F1438")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x5F1468", Offset = "0x5F1468", VA = "0x5F1468", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x5F1684", Offset = "0x5F1684", VA = "0x5F1684", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000045")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x5F1768", Offset = "0x5F1768", VA = "0x5F1768")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x5F1798", Offset = "0x5F1798", VA = "0x5F1798", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x5F1B34", Offset = "0x5F1B34", VA = "0x5F1B34", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000046")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x5F0980", Offset = "0x5F0980", VA = "0x5F0980")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x5F09B0", Offset = "0x5F09B0", VA = "0x5F09B0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x5F0C40", Offset = "0x5F0C40", VA = "0x5F0C40", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000047")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x5F1C9C", Offset = "0x5F1C9C", VA = "0x5F1C9C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x5F1CCC", Offset = "0x5F1CCC", VA = "0x5F1CCC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x5F1EBC", Offset = "0x5F1EBC", VA = "0x5F1EBC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000048")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xFE970C", Offset = "0xFE970C", VA = "0xFE970C")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000049")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200004A")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40001F8")]
	FirstPerson = 1,
	[Token(Token = "0x40001F9")]
	ThirdPerson = 2,
	[Token(Token = "0x40001FA")]
	SelfOccluding = 4
}
[Token(Token = "0x200004B")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200004C")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200004D")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200004E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200004F")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000210")]
	Default,
	[Token(Token = "0x4000211")]
	GripSphere,
	[Token(Token = "0x4000212")]
	GripCube,
	[Token(Token = "0x4000213")]
	Count
}
[Token(Token = "0x2000050")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000215")]
	Body,
	[Token(Token = "0x4000216")]
	Clothing,
	[Token(Token = "0x4000217")]
	Eyewear,
	[Token(Token = "0x4000218")]
	Hair,
	[Token(Token = "0x4000219")]
	Beard,
	[Token(Token = "0x400021A")]
	Count
}
[Token(Token = "0x2000051")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000052")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000053")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000054")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000055")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000224")]
	AvatarHead,
	[Token(Token = "0x4000225")]
	AvatarHand,
	[Token(Token = "0x4000226")]
	Object,
	[Token(Token = "0x4000227")]
	ObjectStatic,
	[Token(Token = "0x4000228")]
	Count
}
[Token(Token = "0x2000056")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000057")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000059")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200005A")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000234")]
	Point,
	[Token(Token = "0x4000235")]
	Direction,
	[Token(Token = "0x4000236")]
	Spot,
	[Token(Token = "0x4000237")]
	Count
}
[Token(Token = "0x200005B")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200005C")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200005D")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200005E")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200005F")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x400024D")]
	None = 0u,
	[Token(Token = "0x400024E")]
	GazeTarget = 1u,
	[Token(Token = "0x400024F")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000060")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000061")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000062")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000063")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000064")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000065")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20002D7")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x888BAC", Offset = "0x888BAC", VA = "0x888BAC")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000264")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000009")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0xFC79E4", Offset = "0xFC79E4", VA = "0xFC79E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xFC8104", Offset = "0xFC8104", VA = "0xFC8104")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xFC8424", Offset = "0xFC8424", VA = "0xFC8424")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xFC8494", Offset = "0xFC8494", VA = "0xFC8494")]
	private void Update()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xFC8E60", Offset = "0xFC8E60", VA = "0xFC8E60")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xFC8EB4", Offset = "0xFC8EB4", VA = "0xFC8EB4")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xFC8F08", Offset = "0xFC8F08", VA = "0xFC8F08")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xFC8F6C", Offset = "0xFC8F6C", VA = "0xFC8F6C")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xFC8FD0", Offset = "0xFC8FD0", VA = "0xFC8FD0")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xFC8C60", Offset = "0xFC8C60", VA = "0xFC8C60")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xFC90AC", Offset = "0xFC90AC", VA = "0xFC90AC")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xFC9200", Offset = "0xFC9200", VA = "0xFC9200")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xFC7BB8", Offset = "0xFC7BB8", VA = "0xFC7BB8")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xFC92F4", Offset = "0xFC92F4", VA = "0xFC92F4")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xFC83D8", Offset = "0xFC83D8", VA = "0xFC83D8")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xFC93D4", Offset = "0xFC93D4", VA = "0xFC93D4")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xFC945C", Offset = "0xFC945C", VA = "0xFC945C")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000066")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000A")]
	public static string AppID
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0xFC9394", Offset = "0xFC9394", VA = "0xFC9394")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000141")]
		[Address(RVA = "0xFC95B4", Offset = "0xFC95B4", VA = "0xFC95B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000142")]
		[Address(RVA = "0xFC93B4", Offset = "0xFC93B4", VA = "0xFC93B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000143")]
		[Address(RVA = "0xFC95E0", Offset = "0xFC95E0", VA = "0xFC95E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000144")]
		[Address(RVA = "0xFC9474", Offset = "0xFC9474", VA = "0xFC9474")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000145")]
		[Address(RVA = "0xFC960C", Offset = "0xFC960C", VA = "0xFC960C")]
		set
		{
		}
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xFC9664", Offset = "0xFC9664", VA = "0xFC9664")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000067")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xFCB130", Offset = "0xFCB130", VA = "0xFCB130")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xFCB3F0", Offset = "0xFCB3F0", VA = "0xFCB3F0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xFCB288", Offset = "0xFCB288", VA = "0xFCB288")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xFCB62C", Offset = "0xFCB62C", VA = "0xFCB62C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000068")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xFCB63C", Offset = "0xFCB63C", VA = "0xFCB63C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xFCB788", Offset = "0xFCB788", VA = "0xFCB788")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xFCB95C", Offset = "0xFCB95C", VA = "0xFCB95C")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000069")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000273")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000274")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000275")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xFC96C0", Offset = "0xFC96C0", VA = "0xFC96C0")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xFCA668", Offset = "0xFCA668", VA = "0xFCA668")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xFCA898", Offset = "0xFCA898", VA = "0xFCA898")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xFC9DBC", Offset = "0xFC9DBC", VA = "0xFC9DBC")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xFC9AB0", Offset = "0xFC9AB0", VA = "0xFC9AB0")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xFC9C2C", Offset = "0xFC9C2C", VA = "0xFC9C2C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xFCB120", Offset = "0xFCB120", VA = "0xFCB120")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200006A")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002D8")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20002D9")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x88923C", Offset = "0x88923C", VA = "0x88923C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20002DA")]
	public struct TextureSet
	{
		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x88924C", Offset = "0x88924C", VA = "0x88924C")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8F14", Offset = "0x3B8F14")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x8891EC", Offset = "0x8891EC", VA = "0x8891EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x889234", Offset = "0x889234", VA = "0x889234", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x888BD8", Offset = "0x888BD8", VA = "0x888BD8")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x888C04", Offset = "0x888C04", VA = "0x888C04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x888C08", Offset = "0x888C08", VA = "0x888C08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x8891F4", Offset = "0x8891F4", VA = "0x8891F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000279")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400027A")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400027D")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400027E")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x400027F")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000280")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000281")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000282")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000283")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xFCC084", Offset = "0xFCC084", VA = "0xFCC084")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xFCC468", Offset = "0xFCC468", VA = "0xFCC468")]
	public void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xFCC668", Offset = "0xFCC668", VA = "0xFCC668")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xFCC6B4", Offset = "0xFCC6B4", VA = "0xFCC6B4")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xFCC5DC", Offset = "0xFCC5DC", VA = "0xFCC5DC")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xFCC860", Offset = "0xFCC860", VA = "0xFCC860")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xFCCA60", Offset = "0xFCCA60", VA = "0xFCCA60")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xFCCB04", Offset = "0xFCCB04", VA = "0xFCCB04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4790", Offset = "0x3C4790")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xFC9060", Offset = "0xFC9060", VA = "0xFC9060")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xFCCB94", Offset = "0xFCCB94", VA = "0xFCCB94")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200006B")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xFCCCCC", Offset = "0xFCCCCC", VA = "0xFCCCCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xFCCE34", Offset = "0xFCCE34", VA = "0xFCCE34")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200006C")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000161")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x8078FC", Offset = "0x8078FC", VA = "0x8078FC")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x200006D")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9A64", Offset = "0x3B9A64")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9A9C", Offset = "0x3B9A9C")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9AD4", Offset = "0x3B9AD4")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x980EC0", Offset = "0x980EC0", VA = "0x980EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x980EC4", Offset = "0x980EC4", VA = "0x980EC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x980F44", Offset = "0x980F44", VA = "0x980F44")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x98115C", Offset = "0x98115C", VA = "0x98115C")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x200006E")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x98118C", Offset = "0x98118C", VA = "0x98118C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x9812CC", Offset = "0x9812CC", VA = "0x9812CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x98161C", Offset = "0x98161C", VA = "0x98161C")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x9818A8", Offset = "0x9818A8", VA = "0x9818A8")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x9818F4", Offset = "0x9818F4", VA = "0x9818F4")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200006F")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700000D")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0xDB31F8", Offset = "0xDB31F8", VA = "0xDB31F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xDB34F4", Offset = "0xDB34F4", VA = "0xDB34F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xDB365C", Offset = "0xDB365C", VA = "0xDB365C")]
	private void Update()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xDB3568", Offset = "0xDB3568", VA = "0xDB3568")]
	public void Init()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xDB1354", Offset = "0xDB1354", VA = "0xDB1354")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xDB37DC", Offset = "0xDB37DC", VA = "0xDB37DC")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xDB12F0", Offset = "0xDB12F0", VA = "0xDB12F0")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xDB13D8", Offset = "0xDB13D8", VA = "0xDB13D8")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xDB36F0", Offset = "0xDB36F0", VA = "0xDB36F0")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xDB3880", Offset = "0xDB3880", VA = "0xDB3880")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xDB38BC", Offset = "0xDB38BC", VA = "0xDB38BC")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xDB3AD0", Offset = "0xDB3AD0", VA = "0xDB3AD0")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xDB38CC", Offset = "0xDB38CC", VA = "0xDB38CC")]
	private void Display()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xDB3B80", Offset = "0xDB3B80", VA = "0xDB3B80")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000070")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xFDA920", Offset = "0xFDA920", VA = "0xFDA920")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000071")]
public static class OVRTouchpad
{
	[Token(Token = "0x20002DC")]
	public enum TouchEvent
	{
		[Token(Token = "0x400124C")]
		SingleTap,
		[Token(Token = "0x400124D")]
		DoubleTap,
		[Token(Token = "0x400124E")]
		Left,
		[Token(Token = "0x400124F")]
		Right,
		[Token(Token = "0x4001250")]
		Up,
		[Token(Token = "0x4001251")]
		Down
	}

	[Token(Token = "0x20002DD")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xFDD45C", Offset = "0xFDD45C", VA = "0xFDD45C")]
	public static void Create()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xFDD460", Offset = "0xFDD460", VA = "0xFDD460")]
	public static void Update()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xFDD6F8", Offset = "0xFDD6F8", VA = "0xFDD6F8")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xFDD578", Offset = "0xFDD578", VA = "0xFDD578")]
	private static void HandleInputMouse(Vector3 move)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xFDD6FC", Offset = "0xFDD6FC", VA = "0xFDD6FC")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x2000072")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000182")]
	[Address(RVA = "0xFDD898", Offset = "0xFDD898", VA = "0xFDD898")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xFDD918", Offset = "0xFDD918", VA = "0xFDD918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xFDD9E0", Offset = "0xFDD9E0", VA = "0xFDD9E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xFDDA38", Offset = "0xFDDA38", VA = "0xFDDA38")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xFDDA98", Offset = "0xFDDA98", VA = "0xFDDA98")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xFDDA9C", Offset = "0xFDDA9C", VA = "0xFDDA9C")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000073")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20002DE")]
	public enum Result
	{
		[Token(Token = "0x4001253")]
		Success = 0,
		[Token(Token = "0x4001254")]
		Unknown = -2200,
		[Token(Token = "0x4001255")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4001256")]
		InvalidParam = -2202,
		[Token(Token = "0x4001257")]
		BadSampleRate = -2203,
		[Token(Token = "0x4001258")]
		MissingDLL = -2204,
		[Token(Token = "0x4001259")]
		BadVersion = -2205,
		[Token(Token = "0x400125A")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20002DF")]
	public enum AudioDataType
	{
		[Token(Token = "0x400125C")]
		S16_Mono,
		[Token(Token = "0x400125D")]
		S16_Stereo,
		[Token(Token = "0x400125E")]
		F32_Mono,
		[Token(Token = "0x400125F")]
		F32_Stereo
	}

	[Token(Token = "0x20002E0")]
	public enum Viseme
	{
		[Token(Token = "0x4001261")]
		sil,
		[Token(Token = "0x4001262")]
		PP,
		[Token(Token = "0x4001263")]
		FF,
		[Token(Token = "0x4001264")]
		TH,
		[Token(Token = "0x4001265")]
		DD,
		[Token(Token = "0x4001266")]
		kk,
		[Token(Token = "0x4001267")]
		CH,
		[Token(Token = "0x4001268")]
		SS,
		[Token(Token = "0x4001269")]
		nn,
		[Token(Token = "0x400126A")]
		RR,
		[Token(Token = "0x400126B")]
		aa,
		[Token(Token = "0x400126C")]
		E,
		[Token(Token = "0x400126D")]
		ih,
		[Token(Token = "0x400126E")]
		oh,
		[Token(Token = "0x400126F")]
		ou
	}

	[Token(Token = "0x20002E1")]
	public enum Signals
	{
		[Token(Token = "0x4001271")]
		VisemeOn,
		[Token(Token = "0x4001272")]
		VisemeOff,
		[Token(Token = "0x4001273")]
		VisemeAmount,
		[Token(Token = "0x4001274")]
		VisemeSmoothing,
		[Token(Token = "0x4001275")]
		LaughterAmount
	}

	[Token(Token = "0x20002E2")]
	public enum ContextProviders
	{
		[Token(Token = "0x4001277")]
		Original,
		[Token(Token = "0x4001278")]
		Enhanced,
		[Token(Token = "0x4001279")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20002E3")]
	public class Frame
	{
		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x5FDAF4", Offset = "0x5FDAF4", VA = "0x5FDAF4")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x5FDB4C", Offset = "0x5FDB4C", VA = "0x5FDB4C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x5FDBD8", Offset = "0x5FDBD8", VA = "0x5FDBD8")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x400029E")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000188")]
	[Address(RVA = "0xDAF6C4", Offset = "0xDAF6C4", VA = "0xDAF6C4")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000189")]
	[Address(RVA = "0xDAF754", Offset = "0xDAF754", VA = "0xDAF754")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x600018A")]
	[Address(RVA = "0xDAF7C4", Offset = "0xDAF7C4", VA = "0xDAF7C4")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(int Major, int Minor, int Patch);

	[PreserveSig]
	[Token(Token = "0x600018B")]
	[Address(RVA = "0xDAF858", Offset = "0xDAF858", VA = "0xDAF858")]
	private static extern int ovrLipSyncDll_CreateContextEx(uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600018C")]
	[Address(RVA = "0xDAF900", Offset = "0xDAF900", VA = "0xDAF900")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600018D")]
	[Address(RVA = "0xDAF9CC", Offset = "0xDAF9CC", VA = "0xDAF9CC")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x600018E")]
	[Address(RVA = "0xDAFA4C", Offset = "0xDAFA4C", VA = "0xDAFA4C")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x600018F")]
	[Address(RVA = "0xDAFACC", Offset = "0xDAFACC", VA = "0xDAFACC")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000190")]
	[Address(RVA = "0xDAFB74", Offset = "0xDAFB74", VA = "0xDAFB74")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, int frameNumber, int frameDelay, float[] visemes, int visemeCount, float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xDAFC7C", Offset = "0xDAFC7C", VA = "0xDAFC7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xDB0124", Offset = "0xDB0124", VA = "0xDB0124")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xDAFFC8", Offset = "0xDAFFC8", VA = "0xDAFFC8")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xDB0230", Offset = "0xDB0230", VA = "0xDB0230")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xDB036C", Offset = "0xDB036C", VA = "0xDB036C")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xDB03D8", Offset = "0xDB03D8", VA = "0xDB03D8")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xDB043C", Offset = "0xDB043C", VA = "0xDB043C")]
	public static Result CreateContext(uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xDB0558", Offset = "0xDB0558", VA = "0xDB0558")]
	public static Result CreateContextWithModelFile(uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xDB0688", Offset = "0xDB0688", VA = "0xDB0688")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xDB0760", Offset = "0xDB0760", VA = "0xDB0760")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xDB0838", Offset = "0xDB0838", VA = "0xDB0838")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xDB0934", Offset = "0xDB0934", VA = "0xDB0934")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xDB0AD0", Offset = "0xDB0AD0", VA = "0xDB0AD0")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xDB0C64", Offset = "0xDB0C64", VA = "0xDB0C64")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000074")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B7E64", Offset = "0x3B7E64")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9B0C", Offset = "0x3B9B0C")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9B44", Offset = "0x3B9B44")]
	public bool enableTouchInput;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9B7C", Offset = "0x3B9B7C")]
	public bool audioLoopback;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9BB4", Offset = "0x3B9BB4")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9BEC", Offset = "0x3B9BEC")]
	public bool showVisemes;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9C24", Offset = "0x3B9C24")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9C5C", Offset = "0x3B9C5C")]
	public bool skipAudioSource;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9C94", Offset = "0x3B9C94")]
	public float gain;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xDB0DB0", Offset = "0xDB0DB0", VA = "0xDB0DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xDB0F24", Offset = "0xDB0F24", VA = "0xDB0F24")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xDB1454", Offset = "0xDB1454", VA = "0xDB1454")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xDB173C", Offset = "0xDB173C", VA = "0xDB173C")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xDB17A0", Offset = "0xDB17A0", VA = "0xDB17A0")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xDB180C", Offset = "0xDB180C", VA = "0xDB180C")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xDB19B0", Offset = "0xDB19B0", VA = "0xDB19B0")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xDB1B54", Offset = "0xDB1B54", VA = "0xDB1B54")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xDB1C8C", Offset = "0xDB1C8C", VA = "0xDB1C8C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xDB1498", Offset = "0xDB1498", VA = "0xDB1498")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xDB1208", Offset = "0xDB1208", VA = "0xDB1208")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xDB1C9C", Offset = "0xDB1C9C", VA = "0xDB1C9C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xDB1DBC", Offset = "0xDB1DBC", VA = "0xDB1DBC")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000075")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B7ECC", Offset = "0x3B7ECC")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9CCC", Offset = "0x3B9CCC")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9D04", Offset = "0x3B9D04")]
	public bool enableAcceleration;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700000E")]
	public int Smoothing
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xDB1F64", Offset = "0xDB1F64", VA = "0xDB1F64")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xDB1E58", Offset = "0xDB1E58", VA = "0xDB1E58")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public uint Context
	{
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xDB1F6C", Offset = "0xDB1F6C", VA = "0xDB1F6C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000010")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xDB1F74", Offset = "0xDB1F74", VA = "0xDB1F74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xDB1F7C", Offset = "0xDB1F7C", VA = "0xDB1F7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xDB2164", Offset = "0xDB2164", VA = "0xDB2164")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xDB22C8", Offset = "0xDB22C8", VA = "0xDB22C8")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xDB22D0", Offset = "0xDB22D0", VA = "0xDB22D0")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xDB23F0", Offset = "0xDB23F0", VA = "0xDB23F0")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xDB24CC", Offset = "0xDB24CC", VA = "0xDB24CC")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xDB1DE0", Offset = "0xDB1DE0", VA = "0xDB1DE0")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B7F34", Offset = "0x3B7F34")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9D3C", Offset = "0x3B9D3C")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xDB2544", Offset = "0xDB2544", VA = "0xDB2544")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xDB2614", Offset = "0xDB2614", VA = "0xDB2614")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000077")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9D74", Offset = "0x3B9D74")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9DAC", Offset = "0x3B9DAC")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9DE4", Offset = "0x3B9DE4")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9E1C", Offset = "0x3B9E1C")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9E54", Offset = "0x3B9E54")]
	public KeyCode laughterKey;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9E8C", Offset = "0x3B9E8C")]
	public int laughterBlendTarget;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3B9EC4", Offset = "0x3B9EC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9EC4", Offset = "0x3B9EC4")]
	public float laughterThreshold;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3B9F18", Offset = "0x3B9F18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9F18", Offset = "0x3B9F18")]
	public float laughterMultiplier;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3B9F6C", Offset = "0x3B9F6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9F6C", Offset = "0x3B9F6C")]
	public int smoothAmount;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xDB2618", Offset = "0xDB2618", VA = "0xDB2618")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xDB2774", Offset = "0xDB2774", VA = "0xDB2774")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xDB29C4", Offset = "0xDB29C4", VA = "0xDB29C4")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xDB287C", Offset = "0xDB287C", VA = "0xDB287C")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xDB2928", Offset = "0xDB2928", VA = "0xDB2928")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xDB2A90", Offset = "0xDB2A90", VA = "0xDB2A90")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xDB2B54", Offset = "0xDB2B54", VA = "0xDB2B54")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xDB2BBC", Offset = "0xDB2BBC", VA = "0xDB2BBC")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000078")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3B9FC4", Offset = "0x3B9FC4")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x3B9FC4", Offset = "0x3B9FC4")]
	public Texture[] Textures;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BA144", Offset = "0x3BA144")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA144", Offset = "0x3BA144")]
	public int smoothAmount;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xDB2CDC", Offset = "0xDB2CDC", VA = "0xDB2CDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xDB2E54", Offset = "0xDB2E54", VA = "0xDB2E54")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xDB2FF4", Offset = "0xDB2FF4", VA = "0xDB2FF4")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xDB312C", Offset = "0xDB312C", VA = "0xDB312C")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Serializable]
[Token(Token = "0x2000079")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xFD9E98", Offset = "0xFD9E98", VA = "0xFD9E98")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xFD9F44", Offset = "0xFD9F44", VA = "0xFD9F44")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x200007A")]
public class OVRMetricsToolSDK : MonoBehaviour
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaClass _MetricsService;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AndroidJavaObject _Context;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool _IsBound;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRMetricsToolSDK _Instance;

	[Token(Token = "0x17000011")]
	public static OVRMetricsToolSDK Instance
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xFD9FC4", Offset = "0xFD9FC4", VA = "0xFD9FC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xFDA164", Offset = "0xFDA164", VA = "0xFDA164")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C47F8", Offset = "0x3C47F8")]
	private static void InitJava()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xFDA2B8", Offset = "0xFDA2B8", VA = "0xFDA2B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xFDA41C", Offset = "0xFDA41C", VA = "0xFDA41C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xFDA558", Offset = "0xFDA558", VA = "0xFDA558")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xFDA2BC", Offset = "0xFDA2BC", VA = "0xFDA2BC")]
	private void Bind()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xFDA420", Offset = "0xFDA420", VA = "0xFDA420")]
	private void Shutdown()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xFDA564", Offset = "0xFDA564", VA = "0xFDA564")]
	public bool AppendCsvDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xFDA73C", Offset = "0xFDA73C", VA = "0xFDA73C")]
	public bool SetOverlayDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xFDA914", Offset = "0xFDA914", VA = "0xFDA914")]
	public OVRMetricsToolSDK()
	{
	}
}
[Token(Token = "0x200007B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20002E4")]
	public delegate void OnClick();

	[Token(Token = "0x20002E5")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20002E6")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20002E7")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20002E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8F24", Offset = "0x3B8F24")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x5F4CE0", Offset = "0x5F4CE0", VA = "0x5F4CE0")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x5F4CE8", Offset = "0x5F4CE8", VA = "0x5F4CE8")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8F34", Offset = "0x3B8F34")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x5F4DA8", Offset = "0x5F4DA8", VA = "0x5F4DA8")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x5F4DB0", Offset = "0x5F4DB0", VA = "0x5F4DB0")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8F44", Offset = "0x3B8F44")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x5F4E8C", Offset = "0x5F4E8C", VA = "0x5F4E8C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x5F4E94", Offset = "0x5F4E94", VA = "0x5F4E94")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8F54", Offset = "0x3B8F54")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x5F50B0", Offset = "0x5F50B0", VA = "0x5F50B0")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x5F50B8", Offset = "0x5F50B8", VA = "0x5F50B8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8F64", Offset = "0x3B8F64")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x5F50DC", Offset = "0x5F50DC", VA = "0x5F50DC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x5F50E4", Offset = "0x5F50E4", VA = "0x5F50E4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40002C9")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40002CA")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40002CB")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40002D8")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40002D9")]
	private const float marginH = 16f;

	[Token(Token = "0x40002DA")]
	private const float marginV = 16f;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x8CBE80", Offset = "0x8CBE80", VA = "0x8CBE80")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x8CC33C", Offset = "0x8CC33C", VA = "0x8CC33C")]
	public void Show()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x8CC8F4", Offset = "0x8CC8F4", VA = "0x8CC8F4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x8CC6E4", Offset = "0x8CC6E4", VA = "0x8CC6E4")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x8CCAB0", Offset = "0x8CCAB0", VA = "0x8CCAB0")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x8CCD84", Offset = "0x8CCD84", VA = "0x8CCD84")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x8CD014", Offset = "0x8CD014", VA = "0x8CD014")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x8CD120", Offset = "0x8CD120", VA = "0x8CD120")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x8CD300", Offset = "0x8CD300", VA = "0x8CD300")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x8CD3A4", Offset = "0x8CD3A4", VA = "0x8CD3A4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x8CD574", Offset = "0x8CD574", VA = "0x8CD574")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x8CD764", Offset = "0x8CD764", VA = "0x8CD764")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x8CDA54", Offset = "0x8CDA54", VA = "0x8CDA54")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x8CDAF4", Offset = "0x8CDAF4", VA = "0x8CDAF4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200007C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x9AC0FC", Offset = "0x9AC0FC", VA = "0x9AC0FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x9AC1A0", Offset = "0x9AC1A0", VA = "0x9AC1A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x9AC258", Offset = "0x9AC258", VA = "0x9AC258")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x9AC294", Offset = "0x9AC294", VA = "0x9AC294")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200007D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20002ED")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001287")]
		On,
		[Token(Token = "0x4001288")]
		Off,
		[Token(Token = "0x4001289")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000012")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x97EBE4", Offset = "0x97EBE4", VA = "0x97EBE4")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x97EBA0", Offset = "0x97EBA0", VA = "0x97EBA0")]
		set
		{
		}
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x97EBEC", Offset = "0x97EBEC", VA = "0x97EBEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x97EC48", Offset = "0x97EC48", VA = "0x97EC48")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x97ED94", Offset = "0x97ED94", VA = "0x97ED94", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x97EDB0", Offset = "0x97EDB0", VA = "0x97EDB0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x97EE04", Offset = "0x97EE04", VA = "0x97EE04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x97EFB8", Offset = "0x97EFB8", VA = "0x97EFB8")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x97F0CC", Offset = "0x97F0CC", VA = "0x97F0CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x97F168", Offset = "0x97F168", VA = "0x97F168")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x97F240", Offset = "0x97F240", VA = "0x97F240")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x97F2F4", Offset = "0x97F2F4", VA = "0x97F2F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x97F3E8", Offset = "0x97F3E8", VA = "0x97F3E8")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200007E")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA23C", Offset = "0x3BA23C")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA274", Offset = "0x3BA274")]
	public bool EnableCollision;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA2AC", Offset = "0x3BA2AC")]
	public float MaxFade;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA2E4", Offset = "0x3BA2E4")]
	public float FadeMinDistance;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA31C", Offset = "0x3BA31C")]
	public float FadeMaxDistance;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x8C38E4", Offset = "0x8C38E4", VA = "0x8C38E4")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x8C397C", Offset = "0x8C397C", VA = "0x8C397C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x8C39FC", Offset = "0x8C39FC", VA = "0x8C39FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x8C3A00", Offset = "0x8C3A00", VA = "0x8C3A00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x8C3A28", Offset = "0x8C3A28", VA = "0x8C3A28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x8C3A50", Offset = "0x8C3A50", VA = "0x8C3A50")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x200007F")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x983634", Offset = "0x983634", VA = "0x983634")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x9836E8", Offset = "0x9836E8", VA = "0x9836E8")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000080")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20002EE")]
	public enum States
	{
		[Token(Token = "0x400128B")]
		Ready,
		[Token(Token = "0x400128C")]
		Aim,
		[Token(Token = "0x400128D")]
		CancelAim,
		[Token(Token = "0x400128E")]
		PreTeleport,
		[Token(Token = "0x400128F")]
		CancelTeleport,
		[Token(Token = "0x4001290")]
		Teleporting,
		[Token(Token = "0x4001291")]
		PostTeleport
	}

	[Token(Token = "0x20002EF")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001293")]
		None,
		[Token(Token = "0x4001294")]
		Aim,
		[Token(Token = "0x4001295")]
		PreTeleport,
		[Token(Token = "0x4001296")]
		Teleport
	}

	[Token(Token = "0x20002F0")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001298")]
		Point,
		[Token(Token = "0x4001299")]
		Sphere,
		[Token(Token = "0x400129A")]
		Capsule
	}

	[Token(Token = "0x20002F1")]
	public class AimData
	{
		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C43F0", Offset = "0x3C43F0")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170001C6")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x5FA6FC", Offset = "0x5FA6FC", VA = "0x5FA6FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7B6C", Offset = "0x3C7B6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x5FA704", Offset = "0x5FA704", VA = "0x5FA704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7B7C", Offset = "0x3C7B7C")]
			private set
			{
			}
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x5FA678", Offset = "0x5FA678", VA = "0x5FA678")]
		public AimData()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x5FA70C", Offset = "0x5FA70C", VA = "0x5FA70C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8F74", Offset = "0x3B8F74")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x5FA4D0", Offset = "0x5FA4D0", VA = "0x5FA4D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x5FA518", Offset = "0x5FA518", VA = "0x5FA518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x5FA3B0", Offset = "0x5FA3B0", VA = "0x5FA3B0")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x5FA3DC", Offset = "0x5FA3DC", VA = "0x5FA3DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x5FA3E0", Offset = "0x5FA3E0", VA = "0x5FA3E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x5FA4D8", Offset = "0x5FA4D8", VA = "0x5FA4D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8F84", Offset = "0x3B8F84")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x5F9E58", Offset = "0x5F9E58", VA = "0x5F9E58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x5F9EA0", Offset = "0x5F9EA0", VA = "0x5F9EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x5F9CE8", Offset = "0x5F9CE8", VA = "0x5F9CE8")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x5F9D14", Offset = "0x5F9D14", VA = "0x5F9D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x5F9D18", Offset = "0x5F9D18", VA = "0x5F9D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x5F9E60", Offset = "0x5F9E60", VA = "0x5F9E60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8F94", Offset = "0x3B8F94")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x5F9F78", Offset = "0x5F9F78", VA = "0x5F9F78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x5F9FC0", Offset = "0x5F9FC0", VA = "0x5F9FC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x5F9EA8", Offset = "0x5F9EA8", VA = "0x5F9EA8")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x5F9ED4", Offset = "0x5F9ED4", VA = "0x5F9ED4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x5F9ED8", Offset = "0x5F9ED8", VA = "0x5F9ED8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x5F9F80", Offset = "0x5F9F80", VA = "0x5F9F80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8FA4", Offset = "0x3B8FA4")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x5FA360", Offset = "0x5FA360", VA = "0x5FA360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x5FA3A8", Offset = "0x5FA3A8", VA = "0x5FA3A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x5FA250", Offset = "0x5FA250", VA = "0x5FA250")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x5FA27C", Offset = "0x5FA27C", VA = "0x5FA27C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x5FA280", Offset = "0x5FA280", VA = "0x5FA280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x5FA368", Offset = "0x5FA368", VA = "0x5FA368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8FB4", Offset = "0x3B8FB4")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x5FA098", Offset = "0x5FA098", VA = "0x5FA098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x5FA0E0", Offset = "0x5FA0E0", VA = "0x5FA0E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x5F9FC8", Offset = "0x5F9FC8", VA = "0x5F9FC8")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x5F9FF4", Offset = "0x5F9FF4", VA = "0x5F9FF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x5F9FF8", Offset = "0x5F9FF8", VA = "0x5F9FF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x5FA0A0", Offset = "0x5FA0A0", VA = "0x5FA0A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8FC4", Offset = "0x3B8FC4")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x5FA628", Offset = "0x5FA628", VA = "0x5FA628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0x5FA670", Offset = "0x5FA670", VA = "0x5FA670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x5FA520", Offset = "0x5FA520", VA = "0x5FA520")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x5FA54C", Offset = "0x5FA54C", VA = "0x5FA54C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x5FA550", Offset = "0x5FA550", VA = "0x5FA550", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x5FA630", Offset = "0x5FA630", VA = "0x5FA630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8FD4", Offset = "0x3B8FD4")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0x5FA200", Offset = "0x5FA200", VA = "0x5FA200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0x5FA248", Offset = "0x5FA248", VA = "0x5FA248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x5FA0E8", Offset = "0x5FA0E8", VA = "0x5FA0E8")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x5FA114", Offset = "0x5FA114", VA = "0x5FA114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x5FA118", Offset = "0x5FA118", VA = "0x5FA118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x5FA208", Offset = "0x5FA208", VA = "0x5FA208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA354", Offset = "0x3BA354")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA38C", Offset = "0x3BA38C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA3C4", Offset = "0x3BA3C4")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA3FC", Offset = "0x3BA3FC")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA434", Offset = "0x3BA434")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA46C", Offset = "0x3BA46C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA4A4", Offset = "0x3BA4A4")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA4DC", Offset = "0x3BA4DC")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BA514", Offset = "0x3BA514")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA524", Offset = "0x3BA524")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA55C", Offset = "0x3BA55C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BA5A4", Offset = "0x3BA5A4")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA5B4", Offset = "0x3BA5B4")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA5EC", Offset = "0x3BA5EC")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA624", Offset = "0x3BA624")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA65C", Offset = "0x3BA65C")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000013")]
	public States CurrentState
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x9845EC", Offset = "0x9845EC", VA = "0x9845EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4830", Offset = "0x3C4830")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x9845F4", Offset = "0x9845F4", VA = "0x9845F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4840", Offset = "0x3C4840")]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x984808", Offset = "0x984808", VA = "0x984808")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000015")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x984830", Offset = "0x984830", VA = "0x984830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4870", Offset = "0x3C4870")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x984838", Offset = "0x984838", VA = "0x984838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4880", Offset = "0x3C4880")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x9845FC", Offset = "0x9845FC", VA = "0x9845FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4850", Offset = "0x3C4850")]
		add
		{
		}
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x98469C", Offset = "0x98469C", VA = "0x98469C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4860", Offset = "0x3C4860")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0x984E54", Offset = "0x984E54", VA = "0x984E54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C48C8", Offset = "0x3C48C8")]
		add
		{
		}
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x984EF4", Offset = "0x984EF4", VA = "0x984EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C48D8", Offset = "0x3C48D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x984F94", Offset = "0x984F94", VA = "0x984F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4950", Offset = "0x3C4950")]
		add
		{
		}
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x985034", Offset = "0x985034", VA = "0x985034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4960", Offset = "0x3C4960")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0x9850D4", Offset = "0x9850D4", VA = "0x9850D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4970", Offset = "0x3C4970")]
		add
		{
		}
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x985174", Offset = "0x985174", VA = "0x985174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4980", Offset = "0x3C4980")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x985284", Offset = "0x985284", VA = "0x985284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4990", Offset = "0x3C4990")]
		add
		{
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x985324", Offset = "0x985324", VA = "0x985324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C49A0", Offset = "0x3C49A0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0x985438", Offset = "0x985438", VA = "0x985438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4A18", Offset = "0x3C4A18")]
		add
		{
		}
		[Token(Token = "0x6000219")]
		[Address(RVA = "0x9854D8", Offset = "0x9854D8", VA = "0x9854D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4A28", Offset = "0x3C4A28")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x9855EC", Offset = "0x9855EC", VA = "0x9855EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4AA0", Offset = "0x3C4AA0")]
		add
		{
		}
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x98568C", Offset = "0x98568C", VA = "0x98568C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4AB0", Offset = "0x3C4AB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x9857A0", Offset = "0x9857A0", VA = "0x9857A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4B28", Offset = "0x3C4B28")]
		add
		{
		}
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x985840", Offset = "0x985840", VA = "0x985840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4B38", Offset = "0x3C4B38")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x985954", Offset = "0x985954", VA = "0x985954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4BB0", Offset = "0x3C4BB0")]
		add
		{
		}
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x9859F4", Offset = "0x9859F4", VA = "0x9859F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4BC0", Offset = "0x3C4BC0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x985B08", Offset = "0x985B08", VA = "0x985B08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4C38", Offset = "0x3C4C38")]
		add
		{
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x985BA8", Offset = "0x985BA8", VA = "0x985BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4C48", Offset = "0x3C4C48")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x985CBC", Offset = "0x985CBC", VA = "0x985CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4CC0", Offset = "0x3C4CC0")]
		add
		{
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x985D5C", Offset = "0x985D5C", VA = "0x985D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4CD0", Offset = "0x3C4CD0")]
		remove
		{
		}
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x984290", Offset = "0x984290", VA = "0x984290")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x9842B4", Offset = "0x9842B4", VA = "0x9842B4")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x98473C", Offset = "0x98473C", VA = "0x98473C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x984840", Offset = "0x984840", VA = "0x984840")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, [Out] RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x984A8C", Offset = "0x984A8C", VA = "0x984A8C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C4890", Offset = "0x3C4890")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x984B48", Offset = "0x984B48", VA = "0x984B48")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x984C20", Offset = "0x984C20", VA = "0x984C20")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x984C40", Offset = "0x984C40", VA = "0x984C40")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x984D04", Offset = "0x984D04", VA = "0x984D04")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x984D48", Offset = "0x984D48", VA = "0x984D48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x984DA8", Offset = "0x984DA8", VA = "0x984DA8", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x984E4C", Offset = "0x984E4C", VA = "0x984E4C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x984DD8", Offset = "0x984DD8", VA = "0x984DD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C48E8", Offset = "0x3C48E8")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x985214", Offset = "0x985214", VA = "0x985214")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x9853C4", Offset = "0x9853C4", VA = "0x9853C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C49B0", Offset = "0x3C49B0")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x985578", Offset = "0x985578", VA = "0x985578")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4A38", Offset = "0x3C4A38")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x98572C", Offset = "0x98572C", VA = "0x98572C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4AC0", Offset = "0x3C4AC0")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x9858E0", Offset = "0x9858E0", VA = "0x9858E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4B48", Offset = "0x3C4B48")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x985A94", Offset = "0x985A94", VA = "0x985A94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4BD0", Offset = "0x3C4BD0")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x985C48", Offset = "0x985C48", VA = "0x985C48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4C58", Offset = "0x3C4C58")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x985DFC", Offset = "0x985DFC", VA = "0x985DFC")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x985F3C", Offset = "0x985F3C", VA = "0x985F3C")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x985F70", Offset = "0x985F70", VA = "0x985F70")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x986038", Offset = "0x986038", VA = "0x986038")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x986130", Offset = "0x986130", VA = "0x986130")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000081")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0xFA8680", Offset = "0xFA8680", VA = "0xFA8680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4CE0", Offset = "0x3C4CE0")]
		add
		{
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0xFA8720", Offset = "0xFA8720", VA = "0xFA8720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4CF0", Offset = "0x3C4CF0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0xFA87C0", Offset = "0xFA87C0", VA = "0xFA87C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4D00", Offset = "0x3C4D00")]
		add
		{
		}
		[Token(Token = "0x6000231")]
		[Address(RVA = "0xFA8860", Offset = "0xFA8860", VA = "0xFA8860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4D10", Offset = "0x3C4D10")]
		remove
		{
		}
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xFA8900", Offset = "0xFA8900", VA = "0xFA8900")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xFA89C4", Offset = "0xFA89C4", VA = "0xFA89C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xFA89C8", Offset = "0xFA89C8", VA = "0xFA89C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xFA8A3C", Offset = "0xFA8A3C", VA = "0xFA8A3C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xFA8B60", Offset = "0xFA8B60", VA = "0xFA8B60")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xFA8D48", Offset = "0xFA8D48", VA = "0xFA8D48")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xFA8F10", Offset = "0xFA8F10", VA = "0xFA8F10")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000082")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000239")]
	[Address(RVA = "0xFB8DEC", Offset = "0xFB8DEC", VA = "0xFB8DEC", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xFB8E84", Offset = "0xFB8E84", VA = "0xFB8E84", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600023B")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xFB8F50", Offset = "0xFB8F50", VA = "0xFB8F50")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000083")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA754", Offset = "0x3BA754")]
	public float Range;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xFB8F60", Offset = "0xFB8F60", VA = "0xFB8F60", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xFB905C", Offset = "0xFB905C", VA = "0xFB905C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000084")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA78C", Offset = "0x3BA78C")]
	public float Range;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA7C4", Offset = "0x3BA7C4")]
	public float MinimumElevation;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA7FC", Offset = "0x3BA7FC")]
	public float Gravity;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA834", Offset = "0x3BA834")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BA834", Offset = "0x3BA834")]
	public float AimVelocity;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA890", Offset = "0x3BA890")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BA890", Offset = "0x3BA890")]
	public float AimStep;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xFB906C", Offset = "0xFB906C", VA = "0xFB906C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xFB91FC", Offset = "0xFB91FC", VA = "0xFB91FC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000085")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA8E8", Offset = "0x3BA8E8")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xFB9210", Offset = "0xFB9210", VA = "0xFB9210")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xFB933C", Offset = "0xFB933C", VA = "0xFB933C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xFB936C", Offset = "0xFB936C", VA = "0xFB936C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xFB939C", Offset = "0xFB939C", VA = "0xFB939C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xFB944C", Offset = "0xFB944C", VA = "0xFB944C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xFB94B8", Offset = "0xFB94B8", VA = "0xFB94B8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xFB9520", Offset = "0xFB9520", VA = "0xFB9520")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000086")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BA920", Offset = "0x3BA920")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA930", Offset = "0x3BA930")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA968", Offset = "0x3BA968")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA9A0", Offset = "0x3BA9A0")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000016")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xFB9644", Offset = "0xFB9644", VA = "0xFB9644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4D20", Offset = "0x3C4D20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xFB964C", Offset = "0xFB964C", VA = "0xFB964C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4D30", Offset = "0x3C4D30")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0xFB9808", Offset = "0xFB9808", VA = "0xFB9808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4D40", Offset = "0x3C4D40")]
		add
		{
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xFB98A8", Offset = "0xFB98A8", VA = "0xFB98A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4D50", Offset = "0x3C4D50")]
		remove
		{
		}
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xFB9658", Offset = "0xFB9658", VA = "0xFB9658")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xFB96F0", Offset = "0xFB96F0", VA = "0xFB96F0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xFB97C4", Offset = "0xFB97C4", VA = "0xFB97C4")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xFB9804", Offset = "0xFB9804", VA = "0xFB9804")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xFB9948", Offset = "0xFB9948", VA = "0xFB9948")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xFB99AC", Offset = "0xFB99AC", VA = "0xFB99AC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xFB99D0", Offset = "0xFB99D0", VA = "0xFB99D0", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000087")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8FE4", Offset = "0x3B8FE4")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170001D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0x88DF5C", Offset = "0x88DF5C", VA = "0x88DF5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001209")]
			[Address(RVA = "0x88DFA4", Offset = "0x88DFA4", VA = "0x88DFA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x88DEA0", Offset = "0x88DEA0", VA = "0x88DEA0")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x88DECC", Offset = "0x88DECC", VA = "0x88DECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x88DED0", Offset = "0x88DED0", VA = "0x88DED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x88DF64", Offset = "0x88DF64", VA = "0x88DF64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B8FF4", Offset = "0x3B8FF4")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600120D")]
			[Address(RVA = "0x88DE50", Offset = "0x88DE50", VA = "0x88DE50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0x88DE98", Offset = "0x88DE98", VA = "0x88DE98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x88DD90", Offset = "0x88DD90", VA = "0x88DD90")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x88DDBC", Offset = "0x88DDBC", VA = "0x88DDBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x88DDC0", Offset = "0x88DDC0", VA = "0x88DDC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x88DE58", Offset = "0x88DE58", VA = "0x88DE58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xFB9BE4", Offset = "0xFB9BE4", VA = "0xFB9BE4")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xFB9CAC", Offset = "0xFB9CAC", VA = "0xFB9CAC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xFB9D04", Offset = "0xFB9D04", VA = "0xFB9D04", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xFB9DBC", Offset = "0xFB9DBC", VA = "0xFB9DBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4D60", Offset = "0x3C4D60")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xFB9E30", Offset = "0xFB9E30", VA = "0xFB9E30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4DC8", Offset = "0x3C4DC8")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000259")]
	public abstract void GetAimData([Out] Ray aimRay);

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xFB9EA4", Offset = "0xFB9EA4", VA = "0xFB9EA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4E30", Offset = "0x3C4E30")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xFB9ED0", Offset = "0xFB9ED0", VA = "0xFB9ED0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4E40", Offset = "0x3C4E40")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000088")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BA9E8", Offset = "0x3BA9E8")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BA9F8", Offset = "0x3BA9F8")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAA30", Offset = "0x3BAA30")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAA68", Offset = "0x3BAA68")]
	public bool FastTeleport;

	[Token(Token = "0x17000017")]
	public Transform Pointer
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xFB9EFC", Offset = "0xFB9EFC", VA = "0xFB9EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4E50", Offset = "0x3C4E50")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xFB9F04", Offset = "0xFB9F04", VA = "0xFB9F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4E60", Offset = "0x3C4E60")]
		private set
		{
		}
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xFB9F0C", Offset = "0xFB9F0C", VA = "0xFB9F0C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xFBA05C", Offset = "0xFBA05C", VA = "0xFBA05C", Slot = "9")]
	public override void GetAimData([Out] Ray aimRay)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xFBA114", Offset = "0xFBA114", VA = "0xFBA114")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000089")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20002FB")]
	public enum InputModes
	{
		[Token(Token = "0x40012BC")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40012BD")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40012BE")]
		ThumbstickTeleport,
		[Token(Token = "0x40012BF")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20002FC")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40012C1")]
		A,
		[Token(Token = "0x40012C2")]
		B,
		[Token(Token = "0x40012C3")]
		LeftTrigger,
		[Token(Token = "0x40012C4")]
		LeftThumbstick,
		[Token(Token = "0x40012C5")]
		RightTrigger,
		[Token(Token = "0x40012C6")]
		RightThumbstick,
		[Token(Token = "0x40012C7")]
		X,
		[Token(Token = "0x40012C8")]
		Y
	}

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAAA0", Offset = "0x3BAAA0")]
	public InputModes InputMode;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAAD8", Offset = "0x3BAAD8")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAB10", Offset = "0x3BAB10")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAB48", Offset = "0x3BAB48")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xFBA118", Offset = "0xFBA118", VA = "0xFBA118")]
	private void Start()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xFBA11C", Offset = "0xFBA11C", VA = "0xFBA11C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xFBA4EC", Offset = "0xFBA4EC", VA = "0xFBA4EC", Slot = "9")]
	public override void GetAimData([Out] Ray aimRay)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xFBA5AC", Offset = "0xFBA5AC", VA = "0xFBA5AC")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200008A")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20002FD")]
	public enum OrientationModes
	{
		[Token(Token = "0x40012CA")]
		HeadRelative,
		[Token(Token = "0x40012CB")]
		ForwardFacing
	}

	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B9004", Offset = "0x3B9004")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0x88E080", Offset = "0x88E080", VA = "0x88E080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x88E0C8", Offset = "0x88E0C8", VA = "0x88E0C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x88DFAC", Offset = "0x88DFAC", VA = "0x88DFAC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x88DFD8", Offset = "0x88DFD8", VA = "0x88DFD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x88DFDC", Offset = "0x88DFDC", VA = "0x88DFDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x88E088", Offset = "0x88E088", VA = "0x88E088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xFBA688", Offset = "0xFBA688", VA = "0xFBA688")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xFBA780", Offset = "0xFBA780", VA = "0xFBA780")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xFBA788", Offset = "0xFBA788", VA = "0xFBA788", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xFBA7D4", Offset = "0xFBA7D4", VA = "0xFBA7D4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xFBA81C", Offset = "0xFBA81C", VA = "0xFBA81C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4E70", Offset = "0x3C4E70")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600026B")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xFBA890", Offset = "0xFBA890", VA = "0xFBA890")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xFBA94C", Offset = "0xFBA94C", VA = "0xFBA94C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4ED8", Offset = "0x3C4ED8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200008B")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600026E")]
	[Address(RVA = "0xFBA978", Offset = "0xFBA978", VA = "0xFBA978", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xFBA97C", Offset = "0xFBA97C", VA = "0xFBA97C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xFBA9F8", Offset = "0xFBA9F8", VA = "0xFBA9F8")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200008C")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAB80", Offset = "0x3BAB80")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BABB8", Offset = "0x3BABB8")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BABF0", Offset = "0x3BABF0")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAC28", Offset = "0x3BAC28")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xFBA9FC", Offset = "0xFBA9FC", VA = "0xFBA9FC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xFBAA28", Offset = "0xFBAA28", VA = "0xFBAA28", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xFBADD0", Offset = "0xFBADD0", VA = "0xFBADD0")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200008D")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAC60", Offset = "0x3BAC60")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAC98", Offset = "0x3BAC98")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BACD0", Offset = "0x3BACD0")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xFBADD4", Offset = "0xFBADD4", VA = "0xFBADD4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xFBAE18", Offset = "0xFBAE18", VA = "0xFBAE18", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xFBB1B8", Offset = "0xFBB1B8", VA = "0xFBB1B8")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200008E")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xFBB320", Offset = "0xFBB320", VA = "0xFBB320")]
	private void Start()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xFBB324", Offset = "0xFBB324", VA = "0xFBB324")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xFBB32C", Offset = "0xFBB32C", VA = "0xFBB32C")]
	private void Update()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xFBB3F0", Offset = "0xFBB3F0", VA = "0xFBB3F0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xFBB418", Offset = "0xFBB418", VA = "0xFBB418")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200008F")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BAD08", Offset = "0x3BAD08")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000018")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xFBB430", Offset = "0xFBB430", VA = "0xFBB430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4EE8", Offset = "0x3C4EE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xFBB438", Offset = "0xFBB438", VA = "0xFBB438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4EF8", Offset = "0x3C4EF8")]
		private set
		{
		}
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xFB8E1C", Offset = "0xFB8E1C", VA = "0xFB8E1C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xFB8F24", Offset = "0xFB8F24", VA = "0xFB8F24", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xFBB440", Offset = "0xFBB440", VA = "0xFBB440")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C4F08", Offset = "0x3C4F08")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xFB94AC", Offset = "0xFB94AC", VA = "0xFB94AC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xFB9518", Offset = "0xFB9518", VA = "0xFB9518", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xFB8F58", Offset = "0xFB8F58", VA = "0xFB8F58")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000090")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B9014", Offset = "0x3B9014")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170001DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0x88E394", Offset = "0x88E394", VA = "0x88E394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x88E3DC", Offset = "0x88E3DC", VA = "0x88E3DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x88E0D0", Offset = "0x88E0D0", VA = "0x88E0D0")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x88E0FC", Offset = "0x88E0FC", VA = "0x88E0FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x88E100", Offset = "0x88E100", VA = "0x88E100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x88E39C", Offset = "0x88E39C", VA = "0x88E39C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAD18", Offset = "0x3BAD18")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000366")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xFBB51C", Offset = "0xFBB51C", VA = "0xFBB51C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xFBB624", Offset = "0xFBB624", VA = "0xFBB624", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xFBB654", Offset = "0xFBB654", VA = "0xFBB654", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xFBB680", Offset = "0xFBB680", VA = "0xFBB680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4F40", Offset = "0x3C4F40")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xFBB6F4", Offset = "0xFBB6F4", VA = "0xFBB6F4", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000289")]
	protected abstract bool ConsiderTeleport(Vector3 start, Vector3 end);

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xFBB714", Offset = "0xFBB714", VA = "0xFBB714", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xFBB834", Offset = "0xFBB834", VA = "0xFBB834")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C4FA8", Offset = "0x3C4FA8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000091")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xFBB860", Offset = "0xFBB860", VA = "0xFBB860")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xFBB8C4", Offset = "0xFBB8C4", VA = "0xFBB8C4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xFBB9BC", Offset = "0xFBB9BC", VA = "0xFBB9BC", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xFBBAB4", Offset = "0xFBBAB4", VA = "0xFBBAB4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C4FB8", Offset = "0x3C4FB8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xFBBAB8", Offset = "0xFBBAB8", VA = "0xFBBAB8")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000092")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAD50", Offset = "0x3BAD50")]
	public float LOSOffset;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAD88", Offset = "0x3BAD88")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xFBBAC4", Offset = "0xFBBAC4", VA = "0xFBBAC4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xFBBCD0", Offset = "0xFBBCD0", VA = "0xFBBCD0")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000093")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000293")]
	[Address(RVA = "0xFBBCDC", Offset = "0xFBBCDC", VA = "0xFBBCDC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xFBBDD4", Offset = "0xFBBDD4", VA = "0xFBBDD4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000094")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000295")]
	[Address(RVA = "0xFBBDD8", Offset = "0xFBBDD8", VA = "0xFBBDD8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xFBBE6C", Offset = "0xFBBE6C", VA = "0xFBBE6C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000297")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xFBBEFC", Offset = "0xFBBEFC", VA = "0xFBBEFC")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000095")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B9024", Offset = "0x3B9024")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170001DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x88E510", Offset = "0x88E510", VA = "0x88E510", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x88E558", Offset = "0x88E558", VA = "0x88E558", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x88E3E4", Offset = "0x88E3E4", VA = "0x88E3E4")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x88E410", Offset = "0x88E410", VA = "0x88E410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x88E414", Offset = "0x88E414", VA = "0x88E414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x88E518", Offset = "0x88E518", VA = "0x88E518", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BADC0", Offset = "0x3BADC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BADC0", Offset = "0x3BADC0")]
	public float TransitionDuration;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAE18", Offset = "0x3BAE18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BAE18", Offset = "0x3BAE18")]
	public float TeleportDelay;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAE6C", Offset = "0x3BAE6C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xFBBF04", Offset = "0xFBBF04", VA = "0xFBBF04", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xFBBF30", Offset = "0xFBBF30", VA = "0xFBBF30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C4FF0", Offset = "0x3C4FF0")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xFBBFA4", Offset = "0xFBBFA4", VA = "0xFBBFA4")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000096")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600029C")]
	[Address(RVA = "0xFBC144", Offset = "0xFBC144", VA = "0xFBC144", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xFBC164", Offset = "0xFBC164", VA = "0xFBC164")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000097")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B9034", Offset = "0x3B9034")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170001DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0x88E6B0", Offset = "0x88E6B0", VA = "0x88E6B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0x88E6F8", Offset = "0x88E6F8", VA = "0x88E6F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x88E560", Offset = "0x88E560", VA = "0x88E560")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x88E58C", Offset = "0x88E58C", VA = "0x88E58C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x88E590", Offset = "0x88E590", VA = "0x88E590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x88E6B8", Offset = "0x88E6B8", VA = "0x88E6B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BAEA4", Offset = "0x3BAEA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BAEA4", Offset = "0x3BAEA4")]
	public float TransitionDuration;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BAEFC", Offset = "0x3BAEFC")]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xFBC16C", Offset = "0xFBC16C", VA = "0xFBC16C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xFBC198", Offset = "0xFBC198", VA = "0xFBC198")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5058", Offset = "0x3C5058")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xFBC20C", Offset = "0xFBC20C", VA = "0xFBC20C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000098")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000302")]
	public enum PlabackState
	{
		[Token(Token = "0x40012DE")]
		Idle = 1,
		[Token(Token = "0x40012DF")]
		Preparing,
		[Token(Token = "0x40012E0")]
		Buffering,
		[Token(Token = "0x40012E1")]
		Ready,
		[Token(Token = "0x40012E2")]
		Ended
	}

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000019")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xD9F75C", Offset = "0xD9F75C", VA = "0xD9F75C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001A")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xD9FA8C", Offset = "0xD9FA8C", VA = "0xD9FA8C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001B")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xD9FD5C", Offset = "0xD9FD5C", VA = "0xD9FD5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001C")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xD9FDCC", Offset = "0xD9FDCC", VA = "0xD9FDCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001D")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xD9FEE4", Offset = "0xD9FEE4", VA = "0xD9FEE4")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700001E")]
	public static long Duration
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xDA0000", Offset = "0xDA0000", VA = "0xDA0000")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700001F")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xDA011C", Offset = "0xDA011C", VA = "0xDA011C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xDA0238", Offset = "0xDA0238", VA = "0xDA0238")]
		set
		{
		}
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xDA03B4", Offset = "0xDA03B4", VA = "0xDA03B4")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xDA05DC", Offset = "0xDA05DC", VA = "0xDA05DC")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xDA06F8", Offset = "0xDA06F8", VA = "0xDA06F8")]
	public static void Play()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xDA0814", Offset = "0xDA0814", VA = "0xDA0814")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xDA0930", Offset = "0xDA0930", VA = "0xDA0930")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xDA0AAC", Offset = "0xDA0AAC", VA = "0xDA0AAC")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xDA0C2C", Offset = "0xDA0C2C", VA = "0xDA0C2C")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000099")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x772CC0", Offset = "0x772CC0", VA = "0x772CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C50C0", Offset = "0x3C50C0")]
		add
		{
		}
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x772D60", Offset = "0x772D60", VA = "0x772D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C50D0", Offset = "0x3C50D0")]
		remove
		{
		}
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x772E00", Offset = "0x772E00", VA = "0x772E00", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x772E14", Offset = "0x772E14", VA = "0x772E14")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200009A")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000303")]
	public enum ButtonType
	{
		[Token(Token = "0x40012E4")]
		Play,
		[Token(Token = "0x40012E5")]
		Pause,
		[Token(Token = "0x40012E6")]
		FastForward,
		[Token(Token = "0x40012E7")]
		Rewind,
		[Token(Token = "0x40012E8")]
		SkipForward,
		[Token(Token = "0x40012E9")]
		SkipBack,
		[Token(Token = "0x40012EA")]
		Stop
	}

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000020")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x988534", Offset = "0x988534", VA = "0x988534")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x98853C", Offset = "0x98853C", VA = "0x98853C")]
		set
		{
		}
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x988560", Offset = "0x988560", VA = "0x988560", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x9899FC", Offset = "0x9899FC", VA = "0x9899FC")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200009B")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	public enum VideoShape
	{
		[Token(Token = "0x40012EC")]
		_360,
		[Token(Token = "0x40012ED")]
		_180,
		[Token(Token = "0x40012EE")]
		Quad
	}

	[Token(Token = "0x2000305")]
	public enum VideoStereo
	{
		[Token(Token = "0x40012F0")]
		Mono,
		[Token(Token = "0x40012F1")]
		TopBottom,
		[Token(Token = "0x40012F2")]
		LeftRight,
		[Token(Token = "0x40012F3")]
		BottomTop
	}

	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B9044", Offset = "0x3B9044")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170001E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600122B")]
			[Address(RVA = "0x5FAD4C", Offset = "0x5FAD4C", VA = "0x5FAD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x5FAD94", Offset = "0x5FAD94", VA = "0x5FAD94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x5FAB64", Offset = "0x5FAB64", VA = "0x5FAB64")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x5FAB90", Offset = "0x5FAB90", VA = "0x5FAB90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x5FAB94", Offset = "0x5FAB94", VA = "0x5FAB94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x5FAD54", Offset = "0x5FAD54", VA = "0x5FAD54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B9054", Offset = "0x3B9054")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x5FAA6C", Offset = "0x5FAA6C", VA = "0x5FAA6C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x5FAA74", Offset = "0x5FAA74", VA = "0x5FAA74")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BAF2C", Offset = "0x3BAF2C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BAF3C", Offset = "0x3BAF3C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BAF4C", Offset = "0x3BAF4C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000021")]
	public bool IsPlaying
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x98B130", Offset = "0x98B130", VA = "0x98B130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C50E0", Offset = "0x3C50E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x98B138", Offset = "0x98B138", VA = "0x98B138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C50F0", Offset = "0x3C50F0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public long Duration
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x98B144", Offset = "0x98B144", VA = "0x98B144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C5100", Offset = "0x3C5100")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x98B14C", Offset = "0x98B14C", VA = "0x98B14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C5110", Offset = "0x3C5110")]
		private set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x98B154", Offset = "0x98B154", VA = "0x98B154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C5120", Offset = "0x3C5120")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x98B15C", Offset = "0x98B15C", VA = "0x98B15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C5130", Offset = "0x3C5130")]
		private set
		{
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x98B164", Offset = "0x98B164", VA = "0x98B164")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x98B3E4", Offset = "0x98B3E4", VA = "0x98B3E4")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x98B448", Offset = "0x98B448", VA = "0x98B448")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x98B6BC", Offset = "0x98B6BC", VA = "0x98B6BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5140", Offset = "0x3C5140")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x98B730", Offset = "0x98B730", VA = "0x98B730")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x98B9D8", Offset = "0x98B9D8", VA = "0x98B9D8")]
	public void Play()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x98BA6C", Offset = "0x98BA6C", VA = "0x98BA6C")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x98BAFC", Offset = "0x98BAFC", VA = "0x98BAFC")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x98BC00", Offset = "0x98BC00", VA = "0x98BC00")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x98C158", Offset = "0x98C158", VA = "0x98C158")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x98C210", Offset = "0x98C210", VA = "0x98C210")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x98C2A0", Offset = "0x98C2A0", VA = "0x98C2A0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x98C394", Offset = "0x98C394", VA = "0x98C394")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200009C")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000308")]
	private enum PlaybackState
	{
		[Token(Token = "0x40012FB")]
		Playing,
		[Token(Token = "0x40012FC")]
		Paused,
		[Token(Token = "0x40012FD")]
		Rewinding,
		[Token(Token = "0x40012FE")]
		FastForwarding
	}

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.UI.Slider ProgressBar;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xD9EA68", Offset = "0xD9EA68", VA = "0xD9EA68")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xD9ED7C", Offset = "0xD9ED7C", VA = "0xD9ED7C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xD9EEBC", Offset = "0xD9EEBC", VA = "0xD9EEBC")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xD9EFE4", Offset = "0xD9EFE4", VA = "0xD9EFE4")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xD9F0D4", Offset = "0xD9F0D4", VA = "0xD9F0D4")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xD9EFB0", Offset = "0xD9EFB0", VA = "0xD9EFB0")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xD9F124", Offset = "0xD9F124", VA = "0xD9F124")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xD9EC68", Offset = "0xD9EC68", VA = "0xD9EC68")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xD9F464", Offset = "0xD9F464", VA = "0xD9F464")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200009D")]
public static class VectorUtil
{
	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x5EAC54", Offset = "0x5EAC54", VA = "0x5EAC54")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200009E")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x8CDB74", Offset = "0x8CDB74", VA = "0x8CDB74")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x8CE078", Offset = "0x8CE078", VA = "0x8CE078")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x8CE138", Offset = "0x8CE138", VA = "0x8CE138")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x8CE360", Offset = "0x8CE360", VA = "0x8CE360")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x8CE448", Offset = "0x8CE448", VA = "0x8CE448")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x8CE534", Offset = "0x8CE534", VA = "0x8CE534")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x8CE5A8", Offset = "0x8CE5A8", VA = "0x8CE5A8")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x8CE5B0", Offset = "0x8CE5B0", VA = "0x8CE5B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C51B8", Offset = "0x3C51B8")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x8CE61C", Offset = "0x8CE61C", VA = "0x8CE61C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C51C8", Offset = "0x3C51C8")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x8CE688", Offset = "0x8CE688", VA = "0x8CE688")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C51D8", Offset = "0x3C51D8")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x8CE6F4", Offset = "0x8CE6F4", VA = "0x8CE6F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C51E8", Offset = "0x3C51E8")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200009F")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B9064", Offset = "0x3B9064")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170001E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001233")]
			[Address(RVA = "0x5F8070", Offset = "0x5F8070", VA = "0x5F8070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0x5F80B8", Offset = "0x5F80B8", VA = "0x5F80B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x5F7F28", Offset = "0x5F7F28", VA = "0x5F7F28")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x5F7F54", Offset = "0x5F7F54", VA = "0x5F7F54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x5F7F58", Offset = "0x5F7F58", VA = "0x5F7F58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x5F8078", Offset = "0x5F8078", VA = "0x5F8078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x9ACA3C", Offset = "0x9ACA3C", VA = "0x9ACA3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x9ACB50", Offset = "0x9ACB50", VA = "0x9ACB50")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x9ACADC", Offset = "0x9ACADC", VA = "0x9ACADC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C51F8", Offset = "0x3C51F8")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x9ACD0C", Offset = "0x9ACD0C", VA = "0x9ACD0C")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000A0")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B7FAC", Offset = "0x3B7FAC")]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BAF6C", Offset = "0x3BAF6C")]
	public int SubdivisionsU;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BAF88", Offset = "0x3BAF88")]
	public int SubdivisionsV;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x8C3CB0", Offset = "0x8C3CB0", VA = "0x8C3CB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x8C46C0", Offset = "0x8C46C0", VA = "0x8C46C0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000A1")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000024")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x983B04", Offset = "0x983B04", VA = "0x983B04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x983B58", Offset = "0x983B58", VA = "0x983B58")]
	public void Start()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x983F54", Offset = "0x983F54", VA = "0x983F54")]
	public void Update()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x984048", Offset = "0x984048", VA = "0x984048")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C5260", Offset = "0x3C5260")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60002EB")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002EC")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60002ED")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60002EE")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60002EF")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60002F0")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60002F1")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60002F2")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x9840B4", Offset = "0x9840B4", VA = "0x9840B4")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x9840F8", Offset = "0x9840F8", VA = "0x9840F8")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x984168", Offset = "0x984168", VA = "0x984168")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x9842D8", Offset = "0x9842D8", VA = "0x9842D8")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x9843BC", Offset = "0x9843BC", VA = "0x9843BC")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x983E4C", Offset = "0x983E4C", VA = "0x983E4C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x984484", Offset = "0x984484", VA = "0x984484")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x9844EC", Offset = "0x9844EC", VA = "0x9844EC")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x9845E4", Offset = "0x9845E4", VA = "0x9845E4")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B7FBC", Offset = "0x3B7FBC")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200030A")]
	public enum DrawMode
	{
		[Token(Token = "0x4001303")]
		Opaque,
		[Token(Token = "0x4001304")]
		OpaqueWithClip,
		[Token(Token = "0x4001305")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001306")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BAFA4", Offset = "0x3BAFA4")]
	private Shader _transparentShader;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BAFDC", Offset = "0x3BAFDC")]
	private Shader _opaqueShader;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000025")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0xFDBE10", Offset = "0xFDBE10", VA = "0xFDBE10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000303")]
		[Address(RVA = "0xFDBEAC", Offset = "0xFDBEAC", VA = "0xFDBEAC")]
		set
		{
		}
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xFDA94C", Offset = "0xFDA94C", VA = "0xFDA94C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xFDB460", Offset = "0xFDB460", VA = "0xFDB460")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xFDB4E8", Offset = "0xFDB4E8", VA = "0xFDB4E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xFDB5D8", Offset = "0xFDB5D8", VA = "0xFDB5D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xFDB6C8", Offset = "0xFDB6C8", VA = "0xFDB6C8", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xFDB8E8", Offset = "0xFDB8E8", VA = "0xFDB8E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xFDBF78", Offset = "0xFDBF78", VA = "0xFDBF78")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000A3")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B9074", Offset = "0x3B9074")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x88D97C", Offset = "0x88D97C", VA = "0x88D97C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x88D984", Offset = "0x88D984", VA = "0x88D984")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xFB1C74", Offset = "0xFB1C74", VA = "0xFB1C74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xFB1E78", Offset = "0xFB1E78", VA = "0xFB1E78")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xFB1F90", Offset = "0xFB1F90", VA = "0xFB1F90")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000A4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x3B8024", Offset = "0x3B8024")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200030C")]
	public enum RotationAxes
	{
		[Token(Token = "0x400130A")]
		MouseXAndY,
		[Token(Token = "0x400130B")]
		MouseX,
		[Token(Token = "0x400130C")]
		MouseY
	}

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x989AD4", Offset = "0x989AD4", VA = "0x989AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x989CA8", Offset = "0x989CA8", VA = "0x989CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x989D70", Offset = "0x989D70", VA = "0x989D70")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000A5")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000A6")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xDAEE54", Offset = "0xDAEE54", VA = "0xDAEE54")]
	private void Start()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xDAEE58", Offset = "0xDAEE58", VA = "0xDAEE58")]
	private void Update()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xDAEE5C", Offset = "0xDAEE5C", VA = "0xDAEE5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xDAEFDC", Offset = "0xDAEFDC", VA = "0xDAEFDC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xDAEEA8", Offset = "0xDAEEA8", VA = "0xDAEEA8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xDAEF40", Offset = "0xDAEF40", VA = "0xDAEF40")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xDAF028", Offset = "0xDAF028", VA = "0xDAF028")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xDAF0C8", Offset = "0xDAF0C8", VA = "0xDAF0C8")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xDAF260", Offset = "0xDAF260", VA = "0xDAF260")]
	private void SetReflectionValues(ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xDAF3F8", Offset = "0xDAF3F8", VA = "0xDAF3F8")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000A7")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200030D")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, [Out] Vector3 point, [Out] Vector3 normal, IntPtr data);

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40003F2")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40003F8")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xFDE390", Offset = "0xFDE390", VA = "0xFDE390")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xFDE224", Offset = "0xFDE224", VA = "0xFDE224")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x3C5298", Offset = "0x3C5298")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, [Out] Vector3 point, [Out] Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xFDE398", Offset = "0xFDE398", VA = "0xFDE398")]
	private void Start()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xFDE4E4", Offset = "0xFDE4E4", VA = "0xFDE4E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xFDE5E0", Offset = "0xFDE5E0", VA = "0xFDE5E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xFDEEE0", Offset = "0xFDEEE0", VA = "0xFDEEE0")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600031D")]
	[Address(RVA = "0xFDE450", Offset = "0xFDE450", VA = "0xFDE450")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600031E")]
	[Address(RVA = "0xFDE550", Offset = "0xFDE550", VA = "0xFDE550")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600031F")]
	[Address(RVA = "0xFDEC48", Offset = "0xFDEC48", VA = "0xFDEC48")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000320")]
	[Address(RVA = "0xFDECC8", Offset = "0xFDECC8", VA = "0xFDECC8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000321")]
	[Address(RVA = "0xFDED50", Offset = "0xFDED50", VA = "0xFDED50")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000322")]
	[Address(RVA = "0xFDEDD8", Offset = "0xFDEDD8", VA = "0xFDEDD8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000323")]
	[Address(RVA = "0xFDEE58", Offset = "0xFDEE58", VA = "0xFDEE58")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000324")]
	[Address(RVA = "0xFDFB9C", Offset = "0xFDFB9C", VA = "0xFDFB9C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, [Out] Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000325")]
	[Address(RVA = "0xFDFC44", Offset = "0xFDFC44", VA = "0xFDFC44")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xFDFCEC", Offset = "0xFDFCEC", VA = "0xFDFCEC")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000A8")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200030E")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x400130E")]
		Uninitialized = -1,
		[Token(Token = "0x400130F")]
		NotEnabled,
		[Token(Token = "0x4001310")]
		Success,
		[Token(Token = "0x4001311")]
		StreamError,
		[Token(Token = "0x4001312")]
		ProcessError,
		[Token(Token = "0x4001313")]
		MaxStatValue
	}

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000026")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xDA1540", Offset = "0xDA1540", VA = "0xDA1540")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xDA1548", Offset = "0xDA1548", VA = "0xDA1548")]
		set
		{
		}
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xDA1554", Offset = "0xDA1554", VA = "0xDA1554")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xDA17C0", Offset = "0xDA17C0", VA = "0xDA17C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xDA1A10", Offset = "0xDA1A10", VA = "0xDA1A10")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200030F")]
	private enum Parameters
	{
		[Token(Token = "0x4001315")]
		P_GAIN,
		[Token(Token = "0x4001316")]
		P_USEINVSQR,
		[Token(Token = "0x4001317")]
		P_NEAR,
		[Token(Token = "0x4001318")]
		P_FAR,
		[Token(Token = "0x4001319")]
		P_RADIUS,
		[Token(Token = "0x400131A")]
		P_DISABLE_RFL,
		[Token(Token = "0x400131B")]
		P_VSPEAKERMODE,
		[Token(Token = "0x400131C")]
		P_AMBISTAT,
		[Token(Token = "0x400131D")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x400131E")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x400131F")]
		P_SENDLEVEL,
		[Token(Token = "0x4001320")]
		P_NUM
	}

	[Token(Token = "0x40003FF")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000027")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xDA1DA0", Offset = "0xDA1DA0", VA = "0xDA1DA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xDA1DA8", Offset = "0xDA1DA8", VA = "0xDA1DA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public float Gain
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xDA1DB4", Offset = "0xDA1DB4", VA = "0xDA1DB4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xDA1DBC", Offset = "0xDA1DBC", VA = "0xDA1DBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0xDA1DEC", Offset = "0xDA1DEC", VA = "0xDA1DEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000335")]
		[Address(RVA = "0xDA1DF4", Offset = "0xDA1DF4", VA = "0xDA1DF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float Near
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0xDA1E00", Offset = "0xDA1E00", VA = "0xDA1E00")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000337")]
		[Address(RVA = "0xDA1E08", Offset = "0xDA1E08", VA = "0xDA1E08")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public float Far
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0xDA1E3C", Offset = "0xDA1E3C", VA = "0xDA1E3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000339")]
		[Address(RVA = "0xDA1E44", Offset = "0xDA1E44", VA = "0xDA1E44")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public float VolumetricRadius
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0xDA1E78", Offset = "0xDA1E78", VA = "0xDA1E78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600033B")]
		[Address(RVA = "0xDA1E80", Offset = "0xDA1E80", VA = "0xDA1E80")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public float ReverbSend
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0xDA1EB4", Offset = "0xDA1EB4", VA = "0xDA1EB4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xDA1EBC", Offset = "0xDA1EBC", VA = "0xDA1EBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public bool EnableRfl
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xDA1EF0", Offset = "0xDA1EF0", VA = "0xDA1EF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xDA1EF8", Offset = "0xDA1EF8", VA = "0xDA1EF8")]
		set
		{
		}
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xDA1A90", Offset = "0xDA1A90", VA = "0xDA1A90")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x3C5300", Offset = "0x3C5300")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600032F")]
	[Address(RVA = "0xDA1CC0", Offset = "0xDA1CC0", VA = "0xDA1CC0")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(bool reflOn, bool reverbOn, float width, float height, float length);

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xDA1F04", Offset = "0xDA1F04", VA = "0xDA1F04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xDA2070", Offset = "0xDA2070", VA = "0xDA2070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xDA2074", Offset = "0xDA2074", VA = "0xDA2074")]
	private void Update()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xDA1F6C", Offset = "0xDA1F6C", VA = "0xDA1F6C")]
	public void SetParameters(AudioSource source)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xDA2138", Offset = "0xDA2138", VA = "0xDA2138")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xDA2528", Offset = "0xDA2528", VA = "0xDA2528")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000346")]
	[Address(RVA = "0xDA1C40", Offset = "0xDA1C40", VA = "0xDA1C40")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xDA2600", Offset = "0xDA2600", VA = "0xDA2600")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000AA")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400040A")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x400040C")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xDA2620", Offset = "0xDA2620", VA = "0xDA2620")]
	private void Start()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xDA262C", Offset = "0xDA262C", VA = "0xDA262C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600034B")]
	[Address(RVA = "0xDA26E4", Offset = "0xDA26E4", VA = "0xDA26E4")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x600034C")]
	[Address(RVA = "0xDA2664", Offset = "0xDA2664", VA = "0xDA2664")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xDA2764", Offset = "0xDA2764", VA = "0xDA2764")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000AB")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000310")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000311")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000413")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700002F")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0xDA2A60", Offset = "0xDA2A60", VA = "0xDA2A60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public string filePath
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xDA2AFC", Offset = "0xDA2AFC", VA = "0xDA2AFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xDA2B84", Offset = "0xDA2B84", VA = "0xDA2B84")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xDA2CDC", Offset = "0xDA2CDC", VA = "0xDA2CDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xDA2CE0", Offset = "0xDA2CE0", VA = "0xDA2CE0")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xDA32B4", Offset = "0xDA32B4", VA = "0xDA32B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xDA3660", Offset = "0xDA3660", VA = "0xDA3660")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xDA37D4", Offset = "0xDA37D4", VA = "0xDA37D4")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xDA3F44", Offset = "0xDA3F44", VA = "0xDA3F44")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xDA3F80", Offset = "0xDA3F80", VA = "0xDA3F80")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xDA57A4", Offset = "0xDA57A4", VA = "0xDA57A4")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, int vertexOffset, int indexOffset, int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xDA567C", Offset = "0xDA567C", VA = "0xDA567C")]
	private static void updateCountsForMesh(int totalVertexCount, uint totalIndexCount, int totalFaceCount, int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xDA30C0", Offset = "0xDA30C0", VA = "0xDA30C0")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xDA2ED0", Offset = "0xDA2ED0", VA = "0xDA2ED0")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xDA5E24", Offset = "0xDA5E24", VA = "0xDA5E24")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xDA629C", Offset = "0xDA629C", VA = "0xDA629C")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000AC")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000312")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001327")]
		Int8,
		[Token(Token = "0x4001328")]
		UInt8,
		[Token(Token = "0x4001329")]
		Int16,
		[Token(Token = "0x400132A")]
		UInt16,
		[Token(Token = "0x400132B")]
		Int32,
		[Token(Token = "0x400132C")]
		UInt32,
		[Token(Token = "0x400132D")]
		Int64,
		[Token(Token = "0x400132E")]
		UInt64,
		[Token(Token = "0x400132F")]
		Float16,
		[Token(Token = "0x4001330")]
		Float32,
		[Token(Token = "0x4001331")]
		Float64
	}

	[Token(Token = "0x2000313")]
	public class ClientType
	{
		[Token(Token = "0x4001332")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001333")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001334")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001335")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001336")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001337")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001338")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001339")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x400133A")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x400133B")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x400133C")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x400133D")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x400133E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x400133F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001340")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x5FAD9C", Offset = "0x5FAD9C", VA = "0x5FAD9C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000314")]
	public interface PropagationInterface
	{
		[Token(Token = "0x600123D")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x600123E")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x600123F")]
		int CreateAudioGeometry([Out] IntPtr geometry);

		[Token(Token = "0x6001240")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001241")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6001242")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001243")]
		int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x6001244")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001245")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001246")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001247")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x6001248")]
		int CreateAudioMaterial([Out] IntPtr material);

		[Token(Token = "0x6001249")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600124A")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600124B")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000315")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001341")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001E5")]
		private IntPtr context
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0x5FBAE0", Offset = "0x5FBAE0", VA = "0x5FBAE0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600124D")]
		[Address(RVA = "0x5FBB40", Offset = "0x5FBB40", VA = "0x5FBB40")]
		public static extern int ovrAudio_GetPluginContext([Out] IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600124E")]
		[Address(RVA = "0x5FBBD0", Offset = "0x5FBBD0", VA = "0x5FBBD0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x5FBC60", Offset = "0x5FBC60", VA = "0x5FBC60", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001250")]
		[Address(RVA = "0x5FBC84", Offset = "0x5FBC84", VA = "0x5FBC84")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x5FBD14", Offset = "0x5FBD14", VA = "0x5FBD14", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001252")]
		[Address(RVA = "0x5FBD38", Offset = "0x5FBD38", VA = "0x5FBD38")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, [Out] IntPtr geometry);

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x5FBDC4", Offset = "0x5FBDC4", VA = "0x5FBDC4", Slot = "6")]
		public int CreateAudioGeometry([Out] IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001254")]
		[Address(RVA = "0x5FBDE8", Offset = "0x5FBDE8", VA = "0x5FBDE8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x5FBE68", Offset = "0x5FBE68", VA = "0x5FBE68", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001256")]
		[Address(RVA = "0x5FBE70", Offset = "0x5FBE70", VA = "0x5FBE70")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x5FBF90", Offset = "0x5FBF90", VA = "0x5FBF90", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001258")]
		[Address(RVA = "0x5FC08C", Offset = "0x5FC08C", VA = "0x5FC08C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x5FC124", Offset = "0x5FC124", VA = "0x5FC124", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600125A")]
		[Address(RVA = "0x5FC130", Offset = "0x5FC130", VA = "0x5FC130")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x5FC258", Offset = "0x5FC258", VA = "0x5FC258", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600125C")]
		[Address(RVA = "0x5FC264", Offset = "0x5FC264", VA = "0x5FC264")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x5FC310", Offset = "0x5FC310", VA = "0x5FC310", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600125E")]
		[Address(RVA = "0x5FC31C", Offset = "0x5FC31C", VA = "0x5FC31C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x5FC3C8", Offset = "0x5FC3C8", VA = "0x5FC3C8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001260")]
		[Address(RVA = "0x5FC3D4", Offset = "0x5FC3D4", VA = "0x5FC3D4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x5FC480", Offset = "0x5FC480", VA = "0x5FC480", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001262")]
		[Address(RVA = "0x5FC48C", Offset = "0x5FC48C", VA = "0x5FC48C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, [Out] IntPtr material);

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x5FC518", Offset = "0x5FC518", VA = "0x5FC518", Slot = "15")]
		public int CreateAudioMaterial([Out] IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001264")]
		[Address(RVA = "0x5FC53C", Offset = "0x5FC53C", VA = "0x5FC53C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x5FC5BC", Offset = "0x5FC5BC", VA = "0x5FC5BC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001266")]
		[Address(RVA = "0x5FC5C4", Offset = "0x5FC5C4", VA = "0x5FC5C4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x5FC66C", Offset = "0x5FC66C", VA = "0x5FC66C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001268")]
		[Address(RVA = "0x5FC678", Offset = "0x5FC678", VA = "0x5FC678")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x5FC720", Offset = "0x5FC720", VA = "0x5FC720", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600126A")]
		[Address(RVA = "0x5FC730", Offset = "0x5FC730", VA = "0x5FC730")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x5FC7C0", Offset = "0x5FC7C0", VA = "0x5FC7C0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x5FC7CC", Offset = "0x5FC7CC", VA = "0x5FC7CC")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000316")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001343")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001E6")]
		private IntPtr context
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x5FC814", Offset = "0x5FC814", VA = "0x5FC814")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600126E")]
		[Address(RVA = "0x5FC874", Offset = "0x5FC874", VA = "0x5FC874")]
		public static extern int ovrAudio_GetPluginContext([Out] IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600126F")]
		[Address(RVA = "0x5FC904", Offset = "0x5FC904", VA = "0x5FC904")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x5FC994", Offset = "0x5FC994", VA = "0x5FC994", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001271")]
		[Address(RVA = "0x5FC9B8", Offset = "0x5FC9B8", VA = "0x5FC9B8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x5FCA48", Offset = "0x5FCA48", VA = "0x5FCA48", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001273")]
		[Address(RVA = "0x5FCA6C", Offset = "0x5FCA6C", VA = "0x5FCA6C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, [Out] IntPtr geometry);

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x5FCAFC", Offset = "0x5FCAFC", VA = "0x5FCAFC", Slot = "6")]
		public int CreateAudioGeometry([Out] IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001275")]
		[Address(RVA = "0x5FCB20", Offset = "0x5FCB20", VA = "0x5FCB20")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x5FCBA0", Offset = "0x5FCBA0", VA = "0x5FCBA0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001277")]
		[Address(RVA = "0x5FCBA8", Offset = "0x5FCBA8", VA = "0x5FCBA8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x5FCCC8", Offset = "0x5FCCC8", VA = "0x5FCCC8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001279")]
		[Address(RVA = "0x5FCDC4", Offset = "0x5FCDC4", VA = "0x5FCDC4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x5FCE5C", Offset = "0x5FCE5C", VA = "0x5FCE5C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600127B")]
		[Address(RVA = "0x5FCE68", Offset = "0x5FCE68", VA = "0x5FCE68")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x5FCF90", Offset = "0x5FCF90", VA = "0x5FCF90", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600127D")]
		[Address(RVA = "0x5FCF9C", Offset = "0x5FCF9C", VA = "0x5FCF9C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x5FD048", Offset = "0x5FD048", VA = "0x5FD048", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600127F")]
		[Address(RVA = "0x5FD054", Offset = "0x5FD054", VA = "0x5FD054")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x5FD100", Offset = "0x5FD100", VA = "0x5FD100", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001281")]
		[Address(RVA = "0x5FD10C", Offset = "0x5FD10C", VA = "0x5FD10C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x5FD1B8", Offset = "0x5FD1B8", VA = "0x5FD1B8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001283")]
		[Address(RVA = "0x5FD1C4", Offset = "0x5FD1C4", VA = "0x5FD1C4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, [Out] IntPtr material);

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x5FD254", Offset = "0x5FD254", VA = "0x5FD254", Slot = "15")]
		public int CreateAudioMaterial([Out] IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001285")]
		[Address(RVA = "0x5FD278", Offset = "0x5FD278", VA = "0x5FD278")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x5FD2F8", Offset = "0x5FD2F8", VA = "0x5FD2F8", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001287")]
		[Address(RVA = "0x5FD300", Offset = "0x5FD300", VA = "0x5FD300")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x5FD3A8", Offset = "0x5FD3A8", VA = "0x5FD3A8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001289")]
		[Address(RVA = "0x5FD3B4", Offset = "0x5FD3B4", VA = "0x5FD3B4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x5FD45C", Offset = "0x5FD45C", VA = "0x5FD45C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600128B")]
		[Address(RVA = "0x5FD46C", Offset = "0x5FD46C", VA = "0x5FD46C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x5FD4FC", Offset = "0x5FD4FC", VA = "0x5FD4FC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x5FD508", Offset = "0x5FD508", VA = "0x5FD508")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000317")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001345")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001E7")]
		private IntPtr context
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0x5FADA4", Offset = "0x5FADA4", VA = "0x5FADA4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600128F")]
		[Address(RVA = "0x5FAE04", Offset = "0x5FAE04", VA = "0x5FAE04")]
		public static extern int ovrAudio_GetPluginContext([Out] IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001290")]
		[Address(RVA = "0x5FAE94", Offset = "0x5FAE94", VA = "0x5FAE94")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x5FAF24", Offset = "0x5FAF24", VA = "0x5FAF24", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001292")]
		[Address(RVA = "0x5FAF48", Offset = "0x5FAF48", VA = "0x5FAF48")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x5FAFD8", Offset = "0x5FAFD8", VA = "0x5FAFD8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001294")]
		[Address(RVA = "0x5FAFFC", Offset = "0x5FAFFC", VA = "0x5FAFFC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, [Out] IntPtr geometry);

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x5FB08C", Offset = "0x5FB08C", VA = "0x5FB08C", Slot = "6")]
		public int CreateAudioGeometry([Out] IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001296")]
		[Address(RVA = "0x5FB0B0", Offset = "0x5FB0B0", VA = "0x5FB0B0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x5FB130", Offset = "0x5FB130", VA = "0x5FB130", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001298")]
		[Address(RVA = "0x5FB138", Offset = "0x5FB138", VA = "0x5FB138")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x5FB258", Offset = "0x5FB258", VA = "0x5FB258", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600129A")]
		[Address(RVA = "0x5FB354", Offset = "0x5FB354", VA = "0x5FB354")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x5FB3EC", Offset = "0x5FB3EC", VA = "0x5FB3EC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600129C")]
		[Address(RVA = "0x5FB3F8", Offset = "0x5FB3F8", VA = "0x5FB3F8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x5FB520", Offset = "0x5FB520", VA = "0x5FB520", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600129E")]
		[Address(RVA = "0x5FB52C", Offset = "0x5FB52C", VA = "0x5FB52C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x5FB5D8", Offset = "0x5FB5D8", VA = "0x5FB5D8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x5FB5E4", Offset = "0x5FB5E4", VA = "0x5FB5E4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x5FB690", Offset = "0x5FB690", VA = "0x5FB690", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x5FB69C", Offset = "0x5FB69C", VA = "0x5FB69C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x5FB748", Offset = "0x5FB748", VA = "0x5FB748", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x5FB754", Offset = "0x5FB754", VA = "0x5FB754")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, [Out] IntPtr material);

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x5FB7E4", Offset = "0x5FB7E4", VA = "0x5FB7E4", Slot = "15")]
		public int CreateAudioMaterial([Out] IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x5FB808", Offset = "0x5FB808", VA = "0x5FB808")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x5FB888", Offset = "0x5FB888", VA = "0x5FB888", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x5FB890", Offset = "0x5FB890", VA = "0x5FB890")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x5FB938", Offset = "0x5FB938", VA = "0x5FB938", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x5FB944", Offset = "0x5FB944", VA = "0x5FB944")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x5FB9EC", Offset = "0x5FB9EC", VA = "0x5FB9EC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x5FB9FC", Offset = "0x5FB9FC", VA = "0x5FB9FC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x5FBA8C", Offset = "0x5FBA8C", VA = "0x5FBA8C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x5FBA98", Offset = "0x5FBA98", VA = "0x5FBA98")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000031")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0xDA2774", Offset = "0xDA2774", VA = "0xDA2774")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xDA27E0", Offset = "0xDA27E0", VA = "0xDA27E0")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xDA2A58", Offset = "0xDA2A58", VA = "0xDA2A58")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000AD")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000318")]
	public enum Preset
	{
		[Token(Token = "0x4001348")]
		Custom,
		[Token(Token = "0x4001349")]
		AcousticTile,
		[Token(Token = "0x400134A")]
		Brick,
		[Token(Token = "0x400134B")]
		BrickPainted,
		[Token(Token = "0x400134C")]
		Carpet,
		[Token(Token = "0x400134D")]
		CarpetHeavy,
		[Token(Token = "0x400134E")]
		CarpetHeavyPadded,
		[Token(Token = "0x400134F")]
		CeramicTile,
		[Token(Token = "0x4001350")]
		Concrete,
		[Token(Token = "0x4001351")]
		ConcreteRough,
		[Token(Token = "0x4001352")]
		ConcreteBlock,
		[Token(Token = "0x4001353")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001354")]
		Curtain,
		[Token(Token = "0x4001355")]
		Foliage,
		[Token(Token = "0x4001356")]
		Glass,
		[Token(Token = "0x4001357")]
		GlassHeavy,
		[Token(Token = "0x4001358")]
		Grass,
		[Token(Token = "0x4001359")]
		Gravel,
		[Token(Token = "0x400135A")]
		GypsumBoard,
		[Token(Token = "0x400135B")]
		PlasterOnBrick,
		[Token(Token = "0x400135C")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x400135D")]
		Soil,
		[Token(Token = "0x400135E")]
		SoundProof,
		[Token(Token = "0x400135F")]
		Snow,
		[Token(Token = "0x4001360")]
		Steel,
		[Token(Token = "0x4001361")]
		Water,
		[Token(Token = "0x4001362")]
		WoodThin,
		[Token(Token = "0x4001363")]
		WoodThick,
		[Token(Token = "0x4001364")]
		WoodFloor,
		[Token(Token = "0x4001365")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000319")]
	public sealed class Point
	{
		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x5FD550", Offset = "0x5FD550", VA = "0x5FD550")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x5FD588", Offset = "0x5FD588", VA = "0x5FD588")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x5FD5F4", Offset = "0x5FD5F4", VA = "0x5FD5F4")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x3B9084", Offset = "0x3B9084")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20003DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B97BC", Offset = "0x3B97BC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400167A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x8943E0", Offset = "0x8943E0", VA = "0x8943E0")]
			public <>c()
			{
			}

			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x8943E8", Offset = "0x8943E8", VA = "0x8943E8")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x894404", Offset = "0x894404", VA = "0x894404")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170001E8")]
		public float Item
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x5FD610", Offset = "0x5FD610", VA = "0x5FD610")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x5FDA6C", Offset = "0x5FDA6C", VA = "0x5FDA6C")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB0A4", Offset = "0x3BB0A4")]
	public Spectrum absorption;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB0DC", Offset = "0x3BB0DC")]
	public Spectrum transmission;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB114", Offset = "0x3BB114")]
	public Spectrum scattering;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000032")]
	public Preset preset
	{
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xDA6394", Offset = "0xDA6394", VA = "0xDA6394")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000363")]
		[Address(RVA = "0xDA639C", Offset = "0xDA639C", VA = "0xDA639C")]
		set
		{
		}
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xDA63C4", Offset = "0xDA63C4", VA = "0xDA63C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xDA5CA0", Offset = "0xDA5CA0", VA = "0xDA5CA0")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xDA69D8", Offset = "0xDA69D8", VA = "0xDA69D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xDA69DC", Offset = "0xDA69DC", VA = "0xDA69DC")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xDA63C8", Offset = "0xDA63C8", VA = "0xDA63C8")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xDA54E4", Offset = "0xDA54E4", VA = "0xDA54E4")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xDA6AC0", Offset = "0xDA6AC0", VA = "0xDA6AC0")]
	private static void AcousticTile(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xDA6F80", Offset = "0xDA6F80", VA = "0xDA6F80")]
	private static void Brick(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xDA744C", Offset = "0xDA744C", VA = "0xDA744C")]
	private static void BrickPainted(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xDA790C", Offset = "0xDA790C", VA = "0xDA790C")]
	private static void Carpet(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xDA7DE0", Offset = "0xDA7DE0", VA = "0xDA7DE0")]
	private static void CarpetHeavy(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xDA82A0", Offset = "0xDA82A0", VA = "0xDA82A0")]
	private static void CarpetHeavyPadded(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xDA8760", Offset = "0xDA8760", VA = "0xDA8760")]
	private static void CeramicTile(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xDA8C28", Offset = "0xDA8C28", VA = "0xDA8C28")]
	private static void Concrete(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xDA90F0", Offset = "0xDA90F0", VA = "0xDA90F0")]
	private static void ConcreteRough(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xDA95BC", Offset = "0xDA95BC", VA = "0xDA95BC")]
	private static void ConcreteBlock(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xDA9A84", Offset = "0xDA9A84", VA = "0xDA9A84")]
	private static void ConcreteBlockPainted(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xDA9F54", Offset = "0xDA9F54", VA = "0xDA9F54")]
	private static void Curtain(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xDAA414", Offset = "0xDAA414", VA = "0xDAA414")]
	private static void Foliage(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xDAA8E0", Offset = "0xDAA8E0", VA = "0xDAA8E0")]
	private static void Glass(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xDAAD90", Offset = "0xDAAD90", VA = "0xDAAD90")]
	private static void GlassHeavy(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xDAB24C", Offset = "0xDAB24C", VA = "0xDAB24C")]
	private static void Grass(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xDAB5DC", Offset = "0xDAB5DC", VA = "0xDAB5DC")]
	private static void Gravel(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xDAB964", Offset = "0xDAB964", VA = "0xDAB964")]
	private static void GypsumBoard(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xDABE34", Offset = "0xDABE34", VA = "0xDABE34")]
	private static void PlasterOnBrick(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xDAC300", Offset = "0xDAC300", VA = "0xDAC300")]
	private static void PlasterOnConcreteBlock(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xDAC7CC", Offset = "0xDAC7CC", VA = "0xDAC7CC")]
	private static void Soil(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xDACB60", Offset = "0xDACB60", VA = "0xDACB60")]
	private static void SoundProof(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xDACCDC", Offset = "0xDACCDC", VA = "0xDACCDC")]
	private static void Snow(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xDAD060", Offset = "0xDAD060", VA = "0xDAD060")]
	private static void Steel(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xDAD510", Offset = "0xDAD510", VA = "0xDAD510")]
	private static void Water(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xDAD9D0", Offset = "0xDAD9D0", VA = "0xDAD9D0")]
	private static void WoodThin(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xDADE88", Offset = "0xDADE88", VA = "0xDADE88")]
	private static void WoodThick(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xDAE348", Offset = "0xDAE348", VA = "0xDAE348")]
	private static void WoodFloor(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xDAE810", Offset = "0xDAE810", VA = "0xDAE810")]
	private static void WoodOnConcrete(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xDAECD4", Offset = "0xDAECD4", VA = "0xDAECD4")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000AE")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xDAED80", Offset = "0xDAED80", VA = "0xDAED80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xDAEE44", Offset = "0xDAEE44", VA = "0xDAEE44")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000AF")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000033")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0xDA1B00", Offset = "0xDA1B00", VA = "0xDA1B00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xDAF49C", Offset = "0xDAF49C", VA = "0xDAF49C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400041E")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x600038C")]
	[Address(RVA = "0xDAF4AC", Offset = "0xDAF4AC", VA = "0xDAF4AC")]
	private static extern void ONSP_GetVersion(int Major, int Minor, int Patch);

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xDAF544", Offset = "0xDAF544", VA = "0xDAF544")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xDAF668", Offset = "0xDAF668", VA = "0xDAF668")]
	private void Start()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xDAF66C", Offset = "0xDAF66C", VA = "0xDAF66C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xDAF670", Offset = "0xDAF670", VA = "0xDAF670")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000B1")]
public class positionHider : MonoBehaviour
{
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 myLocalPosition;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 myLocalPositionHidden;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas myCanvas;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CanvasScaler myCanvasScaler;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hidden;

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x5F2150", Offset = "0x5F2150", VA = "0x5F2150")]
	private void Start()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x5EF628", Offset = "0x5EF628", VA = "0x5EF628")]
	public void hideMe()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x5F2248", Offset = "0x5F2248", VA = "0x5F2248")]
	public void showMe()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x5F230C", Offset = "0x5F230C", VA = "0x5F230C")]
	public void toggleMe()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x5F231C", Offset = "0x5F231C", VA = "0x5F231C")]
	public positionHider()
	{
	}
}
[Token(Token = "0x20000B2")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x3B805C", Offset = "0x3B805C")]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x200031B")]
	public enum Mode
	{
		[Token(Token = "0x400136B")]
		OutlineAll,
		[Token(Token = "0x400136C")]
		OutlineVisible,
		[Token(Token = "0x400136D")]
		OutlineHidden,
		[Token(Token = "0x400136E")]
		OutlineAndSilhouette,
		[Token(Token = "0x400136F")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x200031C")]
	private class ListVector3
	{
		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x5FE2E0", Offset = "0x5FE2E0", VA = "0x5FE2E0")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B90BC", Offset = "0x3B90BC")]
	private sealed class <>c
	{
		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__30_0;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__30_1;

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x5FE1E0", Offset = "0x5FE1E0", VA = "0x5FE1E0")]
		public <>c()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x5FE1E8", Offset = "0x5FE1E8", VA = "0x5FE1E8")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__30_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x5FE27C", Offset = "0x5FE27C", VA = "0x5FE27C")]
		internal Vector3 <SmoothNormals>b__30_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BB18C", Offset = "0x3BB18C")]
	private float outlineWidth;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BB1CC", Offset = "0x3BB1CC")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB1CC", Offset = "0x3BB1CC")]
	private bool precomputeOutline;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BB23C", Offset = "0x3BB23C")]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BB274", Offset = "0x3BB274")]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x17000034")]
	public Mode OutlineMode
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0xFDFEAC", Offset = "0xFDFEAC", VA = "0xFDFEAC")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000397")]
		[Address(RVA = "0xFDFEB4", Offset = "0xFDFEB4", VA = "0xFDFEB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public Color OutlineColor
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0xFDFEC4", Offset = "0xFDFEC4", VA = "0xFDFEC4")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000399")]
		[Address(RVA = "0xFDFED0", Offset = "0xFDFED0", VA = "0xFDFED0")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public float OutlineWidth
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0xFDFEE4", Offset = "0xFDFEE4", VA = "0xFDFEE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600039B")]
		[Address(RVA = "0xFDFEEC", Offset = "0xFDFEEC", VA = "0xFDFEEC")]
		set
		{
		}
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xFDFEFC", Offset = "0xFDFEFC", VA = "0xFDFEFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xFE0368", Offset = "0xFE0368", VA = "0xFE0368")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xFE048C", Offset = "0xFE048C", VA = "0xFE048C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xFE0760", Offset = "0xFE0760", VA = "0xFE0760")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xFE0930", Offset = "0xFE0930", VA = "0xFE0930")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xFE0A54", Offset = "0xFE0A54", VA = "0xFE0A54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xFE0584", Offset = "0xFE0584", VA = "0xFE0584")]
	private void Bake()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xFE0080", Offset = "0xFE0080", VA = "0xFE0080")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xFE0AD0", Offset = "0xFE0AD0", VA = "0xFE0AD0")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xFE0774", Offset = "0xFE0774", VA = "0xFE0774")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xFE154C", Offset = "0xFE154C", VA = "0xFE154C")]
	public Outline()
	{
	}
}
[Token(Token = "0x20000B3")]
public class ScreensManager : MonoBehaviour
{
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B90CC", Offset = "0x3B90CC")]
	private sealed class <ShortQuizCoroutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreensManager <>4__this;

		[Token(Token = "0x170001E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x88C588", Offset = "0x88C588", VA = "0x88C588", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x88C5D0", Offset = "0x88C5D0", VA = "0x88C5D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x88BA60", Offset = "0x88BA60", VA = "0x88BA60")]
		[DebuggerHidden]
		public <ShortQuizCoroutine>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x88BA8C", Offset = "0x88BA8C", VA = "0x88BA8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x88BA90", Offset = "0x88BA90", VA = "0x88BA90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x88C590", Offset = "0x88C590", VA = "0x88C590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HeartController controller;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovementManager movementController;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BB2AC", Offset = "0x3BB2AC")]
	public positionHider quizesMain;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public positionHider heartsMain;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public positionHider quize1minStart;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public positionHider quize1minQuestion;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public positionHider quize1minEnd;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BB2E4", Offset = "0x3BB2E4")]
	public PlayableDirector playCorrect;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayableDirector playWrong;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text timerLabelShortQuiz;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text[] bestScoreLabel;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text[] yourScoreLabel;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text[] yourScoreLabelShort;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text maxDiagnosisTimeLabel;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text minDiagnosisTimeLabel;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text averageDiagnosisTimeLabel;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool shortQuizRunning;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float timeLimitShortQuiz;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float lastTimeOfDiagnosis;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float maxDiagnosisTime;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int maxDiagnosisHeart;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float minDiagnosisTime;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int minDiagnosisHeart;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float meanDiagnosisTime;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<float> diagnosisTimes;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int yourScoreShortQuiz;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int bestScoreShortQuiz;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int currentHeartIdAnswer;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float startTime;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float currentTime;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BB31C", Offset = "0x3BB31C")]
	public GameObject[] interfaceToHide;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject[] interfaceToShow;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip correct;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip wrong;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioClip finished;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip finishedTop;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioSource fxSource;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioSource tictoc;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xFA6410", Offset = "0xFA6410", VA = "0xFA6410")]
	public void ToggleMainHearts()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xFA647C", Offset = "0xFA647C", VA = "0xFA647C")]
	public void ToggleQuizes()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xFA64E8", Offset = "0xFA64E8", VA = "0xFA64E8")]
	public void Intro1MinuteQuiz()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xFA6554", Offset = "0xFA6554", VA = "0xFA6554")]
	public void Finish1MinuteQuiz()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xFA65C0", Offset = "0xFA65C0", VA = "0xFA65C0")]
	public void Start1MinuteQuiz()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xFA66C4", Offset = "0xFA66C4", VA = "0xFA66C4")]
	public void answerQuestion(int heartIDpressed)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xFA6960", Offset = "0xFA6960", VA = "0xFA6960")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xFA68E0", Offset = "0xFA68E0", VA = "0xFA68E0")]
	public void SelectRandomHeart()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xFA6AA0", Offset = "0xFA6AA0", VA = "0xFA6AA0")]
	public void CancelQuiz()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xFA6650", Offset = "0xFA6650", VA = "0xFA6650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5314", Offset = "0x3C5314")]
	private IEnumerator ShortQuizCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xFA6BA0", Offset = "0xFA6BA0", VA = "0xFA6BA0")]
	public ScreensManager()
	{
	}
}
[Token(Token = "0x20000B4")]
public class SoundFileOpener : MonoBehaviour
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputField pathBox;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xFB0FEC", Offset = "0xFB0FEC", VA = "0xFB0FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xFB0FF0", Offset = "0xFB0FF0", VA = "0xFB0FF0")]
	public void PlayFile()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xFB10F8", Offset = "0xFB10F8", VA = "0xFB10F8")]
	public SoundFileOpener()
	{
	}
}
[Token(Token = "0x20000B5")]
public class OutputVolume : MonoBehaviour
{
	[Token(Token = "0x200031F")]
	public enum SourceType
	{
		[Token(Token = "0x4001378")]
		AudioSource,
		[Token(Token = "0x4001379")]
		AudioListener,
		[Token(Token = "0x400137A")]
		Custom
	}

	[Token(Token = "0x2000320")]
	public enum OutputType
	{
		[Token(Token = "0x400137C")]
		PrefabBar,
		[Token(Token = "0x400137D")]
		ObjectPosition,
		[Token(Token = "0x400137E")]
		ObjectRotation,
		[Token(Token = "0x400137F")]
		ObjectScale
	}

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB354", Offset = "0x3BB354")]
	public bool isEnabled;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB38C", Offset = "0x3BB38C")]
	public SourceType sourceType;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB3C4", Offset = "0x3BB3C4")]
	public AudioSource audioSource;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB3FC", Offset = "0x3BB3FC")]
	public int sampleAmount;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB434", Offset = "0x3BB434")]
	public int channel;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BB46C", Offset = "0x3BB46C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB46C", Offset = "0x3BB46C")]
	public float attackDamp;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BB4C0", Offset = "0x3BB4C0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB4C0", Offset = "0x3BB4C0")]
	public float decayDamp;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB514", Offset = "0x3BB514")]
	public OutputType outputType;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB54C", Offset = "0x3BB54C")]
	public Vector3 valueMultiplier;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB584", Offset = "0x3BB584")]
	public float outputScaleMin;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB5BC", Offset = "0x3BB5BC")]
	public float outputScaleMax;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB5F4", Offset = "0x3BB5F4")]
	public GameObject prefab;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB62C", Offset = "0x3BB62C")]
	public bool scalePrefab;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB664", Offset = "0x3BB664")]
	public bool useColorGradient;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB69C", Offset = "0x3BB69C")]
	public Color MinColor;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB6D4", Offset = "0x3BB6D4")]
	public Color MaxColor;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB70C", Offset = "0x3BB70C")]
	public AnimationCurve colorCurve;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BB744", Offset = "0x3BB744")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB744", Offset = "0x3BB744")]
	public float colorAttackDamp;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BB798", Offset = "0x3BB798")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB798", Offset = "0x3BB798")]
	public float colorDecayDamp;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject bar;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform barT;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float newValue;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float oldScale;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float oldColorVal;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material mat;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int mat_ValId;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool materialColourCanBeUsed;

	[Token(Token = "0x17000037")]
	public float inputValue
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xFE3F44", Offset = "0xFE3F44", VA = "0xFE3F44")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public float outputValue
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xFE3FE8", Offset = "0xFE3FE8", VA = "0xFE3FE8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xFE3FF0", Offset = "0xFE3FF0", VA = "0xFE3FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xFE4304", Offset = "0xFE4304", VA = "0xFE4304")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xFE45EC", Offset = "0xFE45EC", VA = "0xFE45EC")]
	public static float GetRMS(AudioSource aSource, int sampleSize, int channelUsed = 0)
	{
		return default(float);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xFE4504", Offset = "0xFE4504", VA = "0xFE4504")]
	public static float GetRMS(int sampleSize, int channelUsed = 0)
	{
		return default(float);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xFE46EC", Offset = "0xFE46EC", VA = "0xFE46EC")]
	public OutputVolume()
	{
	}
}
[Token(Token = "0x20000B6")]
public class SimpleSpectrum : MonoBehaviour
{
	[Token(Token = "0x2000321")]
	public enum SourceType
	{
		[Token(Token = "0x4001381")]
		AudioSource,
		[Token(Token = "0x4001382")]
		AudioListener,
		[Token(Token = "0x4001383")]
		MicrophoneInput,
		[Token(Token = "0x4001384")]
		StereoMix,
		[Token(Token = "0x4001385")]
		Custom
	}

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AudioMixerGroup muteGroup;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB7FC", Offset = "0x3BB7FC")]
	public bool isEnabled;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB834", Offset = "0x3BB834")]
	public SourceType sourceType;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB86C", Offset = "0x3BB86C")]
	public AudioSource audioSource;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB8A4", Offset = "0x3BB8A4")]
	public int sampleChannel;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB8DC", Offset = "0x3BB8DC")]
	public int numSamples;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB914", Offset = "0x3BB914")]
	public FFTWindow windowUsed;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB94C", Offset = "0x3BB94C")]
	public bool useLogarithmicFrequency;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB984", Offset = "0x3BB984")]
	public bool multiplyByFrequency;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BB9BC", Offset = "0x3BB9BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BB9BC", Offset = "0x3BB9BC")]
	public float highFrequencyTrim;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBA10", Offset = "0x3BBA10")]
	public float linearSampleStretch;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBA48", Offset = "0x3BBA48")]
	public int barAmount;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBA80", Offset = "0x3BBA80")]
	public float barYScale;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBAB8", Offset = "0x3BBAB8")]
	public float barMinYScale;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBAF0", Offset = "0x3BBAF0")]
	public GameObject barPrefab;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBB28", Offset = "0x3BBB28")]
	public float barXScale;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBB60", Offset = "0x3BBB60")]
	public float barXSpacing;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BBB98", Offset = "0x3BBB98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBB98", Offset = "0x3BBB98")]
	public float barCurveAngle;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBBF0", Offset = "0x3BBBF0")]
	public float barXRotation;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BBC28", Offset = "0x3BBC28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBC28", Offset = "0x3BBC28")]
	public float attackDamp;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BBC7C", Offset = "0x3BBC7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBC7C", Offset = "0x3BBC7C")]
	public float decayDamp;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBCD0", Offset = "0x3BBCD0")]
	public bool useColorGradient;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBD08", Offset = "0x3BBD08")]
	public Color colorMin;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBD40", Offset = "0x3BBD40")]
	public Color colorMax;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBD78", Offset = "0x3BBD78")]
	public AnimationCurve colorValueCurve;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BBDB0", Offset = "0x3BBDB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBDB0", Offset = "0x3BBDB0")]
	public float colorAttackDamp;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BBE04", Offset = "0x3BBE04")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBE04", Offset = "0x3BBE04")]
	public float colorDecayDamp;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] spectrum;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform[] bars;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Material[] barMaterials;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float[] oldYScales;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float[] oldColorValues;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int materialValId;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool materialColourCanBeUsed;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float logFreqMultiplier;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float highestLogFreq;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string microphoneName;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float lastMicRestartTime;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float micRestartWait;

	[Token(Token = "0x17000039")]
	public float[] spectrumInputData
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xFA9088", Offset = "0xFA9088", VA = "0xFA9088")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xFA9090", Offset = "0xFA9090", VA = "0xFA9090")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public float[] spectrumOutputData
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xFA9134", Offset = "0xFA9134", VA = "0xFA9134")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xFA913C", Offset = "0xFA913C", VA = "0xFA913C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xFA9210", Offset = "0xFA9210", VA = "0xFA9210")]
	public void RebuildSpectrum()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xFA9998", Offset = "0xFA9998", VA = "0xFA9998")]
	public void RestartMicrophone()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xFA999C", Offset = "0xFA999C", VA = "0xFA999C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xFA9D44", Offset = "0xFA9D44", VA = "0xFA9D44")]
	public static float[] GetLogarithmicSpectrumData(AudioSource source, int spectrumSize, int sampleSize, FFTWindow windowUsed = FFTWindow.BlackmanHarris, int channelUsed = 0)
	{
		return null;
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xFA9F30", Offset = "0xFA9F30", VA = "0xFA9F30")]
	public SimpleSpectrum()
	{
	}
}
[Token(Token = "0x20000B7")]
public class smoothDampVerticalPosition : MonoBehaviour
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject camera;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float offsetFromHead;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 posTemp;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float smoothTime;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 velocity;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x5F26F4", Offset = "0x5F26F4", VA = "0x5F26F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x5F2774", Offset = "0x5F2774", VA = "0x5F2774")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x5F2804", Offset = "0x5F2804", VA = "0x5F2804")]
	public smoothDampVerticalPosition()
	{
	}
}
[Token(Token = "0x20000B8")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x8C58C0", Offset = "0x8C58C0", VA = "0x8C58C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x8C5984", Offset = "0x8C5984", VA = "0x8C5984")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x8C5A48", Offset = "0x8C5A48", VA = "0x8C5A48")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x8C5E24", Offset = "0x8C5E24", VA = "0x8C5E24")]
	public ChatController()
	{
	}
}
[Token(Token = "0x20000B9")]
public class DropdownSample : MonoBehaviour
{
	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Dropdown dropdownWithoutPlaceholder;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Dropdown dropdownWithPlaceholder;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x807618", Offset = "0x807618", VA = "0x807618")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x80772C", Offset = "0x80772C", VA = "0x80772C")]
	public DropdownSample()
	{
	}
}
[Token(Token = "0x20000BA")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B90DC", Offset = "0x3B90DC")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x170001EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012C2")]
			[Address(RVA = "0x5F5698", Offset = "0x5F5698", VA = "0x5F5698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0x5F56E0", Offset = "0x5F56E0", VA = "0x5F56E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x5F54BC", Offset = "0x5F54BC", VA = "0x5F54BC")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x5F54E8", Offset = "0x5F54E8", VA = "0x5F54E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x5F54EC", Offset = "0x5F54EC", VA = "0x5F54EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x5F56A0", Offset = "0x5F56A0", VA = "0x5F56A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x807904", Offset = "0x807904", VA = "0x807904")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x80797C", Offset = "0x80797C", VA = "0x80797C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C537C", Offset = "0x3C537C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x8079F0", Offset = "0x8079F0", VA = "0x8079F0")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x20000BB")]
public class Car : MonoBehaviour
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody body;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float hInput;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float vInput;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WheelCollider WheelFL;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WheelCollider WheelFR;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WheelCollider WheelRL;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WheelCollider WheelRR;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform centreOfMass;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxSteerAngle;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxTorque;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxBrakeTorque;

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x8C34A4", Offset = "0x8C34A4", VA = "0x8C34A4")]
	public void Start()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x8C3550", Offset = "0x8C3550", VA = "0x8C3550")]
	public void Update()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x8C35D0", Offset = "0x8C35D0", VA = "0x8C35D0")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x8C3754", Offset = "0x8C3754", VA = "0x8C3754")]
	private void SetWheelDriveTorque(float value)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x8C36E0", Offset = "0x8C36E0", VA = "0x8C36E0")]
	private void SetWheelBrakeTorque(float value)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x8C37A0", Offset = "0x8C37A0", VA = "0x8C37A0")]
	public Car()
	{
	}
}
[Token(Token = "0x20000BC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B806C", Offset = "0x3B806C")]
public class FPS_ : MonoBehaviour
{
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fps;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x80909C", Offset = "0x80909C", VA = "0x80909C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x8090F8", Offset = "0x8090F8", VA = "0x8090F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x8091E4", Offset = "0x8091E4", VA = "0x8091E4")]
	public FPS_()
	{
	}
}
[Token(Token = "0x20000BD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x3B80D4", Offset = "0x3B80D4")]
public class maxCamera : MonoBehaviour
{
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B90EC", Offset = "0x3B90EC")]
	private sealed class <DragTarget>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public maxCamera <>4__this;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 startingHit;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startTargetPos>5__2;

		[Token(Token = "0x170001ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x894330", Offset = "0x894330", VA = "0x894330", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x894378", Offset = "0x894378", VA = "0x894378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x894114", Offset = "0x894114", VA = "0x894114")]
		[DebuggerHidden]
		public <DragTarget>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x894140", Offset = "0x894140", VA = "0x894140", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x894144", Offset = "0x894144", VA = "0x894144", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x894338", Offset = "0x894338", VA = "0x894338", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int ignoreLayer;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BBE88", Offset = "0x3BBE88")]
	public float desiredDistance;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion currentRotation;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion desiredRotation;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion rotation;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 position;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool dragging;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float pinchdistance;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private EventSystem eventsystem;

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x5EF754", Offset = "0x5EF754", VA = "0x5EF754")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x5EFB14", Offset = "0x5EFB14", VA = "0x5EFB14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x5EF7DC", Offset = "0x5EF7DC", VA = "0x5EF7DC")]
	public void Init()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x5EFB18", Offset = "0x5EFB18", VA = "0x5EFB18")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x5F012C", Offset = "0x5F012C", VA = "0x5F012C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C53E4", Offset = "0x3C53E4")]
	private IEnumerator DragTarget(Vector3 startingHit)
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x5F00FC", Offset = "0x5F00FC", VA = "0x5F00FC")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x5F01C4", Offset = "0x5F01C4", VA = "0x5F01C4")]
	public maxCamera()
	{
	}
}
[Token(Token = "0x20000BE")]
public class MyCanvasSetting : MonoBehaviour
{
	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xD9F47C", Offset = "0xD9F47C", VA = "0xD9F47C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xD9F5B0", Offset = "0xD9F5B0", VA = "0xD9F5B0")]
	private void OnLevelFinishedLoading(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xD9F5B4", Offset = "0xD9F5B4", VA = "0xD9F5B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xD9F680", Offset = "0xD9F680", VA = "0xD9F680")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xD9F480", Offset = "0xD9F480", VA = "0xD9F480")]
	private void mySetting()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xD9F74C", Offset = "0xD9F74C", VA = "0xD9F74C")]
	public MyCanvasSetting()
	{
	}
}
[Token(Token = "0x20000BF")]
public class ReadOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xFD8428", Offset = "0xFD8428", VA = "0xFD8428")]
	public ReadOnlyAttribute()
	{
	}
}
[Token(Token = "0x20000C0")]
public class RenderingModeSwitch : MonoBehaviour
{
	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderingPath[] renderingOptions;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dropdown RenderingMode;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x77D824", Offset = "0x77D824", VA = "0x77D824")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x77DA64", Offset = "0x77DA64", VA = "0x77DA64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x77DB30", Offset = "0x77DB30", VA = "0x77DB30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x77DBFC", Offset = "0x77DBFC", VA = "0x77DBFC")]
	private void OnLevelFinishedLoading(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x77DC58", Offset = "0x77DC58", VA = "0x77DC58")]
	private void SetPath(int i)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x77DCB8", Offset = "0x77DCB8", VA = "0x77DCB8")]
	public RenderingModeSwitch()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x77DCC0", Offset = "0x77DCC0", VA = "0x77DCC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C544C", Offset = "0x3C544C")]
	private void <Start>b__3_0(int <p0>)
	{
	}
}
[Token(Token = "0x20000C1")]
public class SceneSwitch : MonoBehaviour
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SceneSwitch switchInstance;

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xFA5A44", Offset = "0xFA5A44", VA = "0xFA5A44")]
	public void SwitchScene(int val)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xFA5AF0", Offset = "0xFA5AF0", VA = "0xFA5AF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xFA5BE0", Offset = "0xFA5BE0", VA = "0xFA5BE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xFA5C40", Offset = "0xFA5C40", VA = "0xFA5C40")]
	public SceneSwitch()
	{
	}
}
[Token(Token = "0x20000C2")]
public class CappedSectionBox : MonoBehaviour
{
	[Token(Token = "0x2000324")]
	private enum GizmoAxis
	{
		[Token(Token = "0x4001390")]
		X,
		[Token(Token = "0x4001391")]
		Y,
		[Token(Token = "0x4001392")]
		Z,
		[Token(Token = "0x4001393")]
		Xneg,
		[Token(Token = "0x4001394")]
		Yneg,
		[Token(Token = "0x4001395")]
		Zneg,
		[Token(Token = "0x4001396")]
		XYRotate,
		[Token(Token = "0x4001397")]
		XZRotate,
		[Token(Token = "0x4001398")]
		YZRotate,
		[Token(Token = "0x4001399")]
		none
	}

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layer;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BBE98", Offset = "0x3BBE98")]
	public Collider xAxis;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider xAxisNeg;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BBEAC", Offset = "0x3BBEAC")]
	public Collider yAxis;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider yAxisNeg;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BBEC0", Offset = "0x3BBEC0")]
	public Collider zAxis;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider zAxisNeg;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GizmoAxis selectedAxis;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private RaycastHit hit;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Ray ray;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Ray ray1;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Plane dragplane;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float rayDistance;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float newRotY;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float rayDistancePrev;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float distance;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 lookCamera;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 startDrag;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 startPos;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 startDragRot;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 lookHitPoint;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 startScale;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool dragging;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x8C0C00", Offset = "0x8C0C00", VA = "0x8C0C00")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x8C0C14", Offset = "0x8C0C14", VA = "0x8C0C14")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x8C18EC", Offset = "0x8C18EC", VA = "0x8C18EC")]
	public void HideCage(bool val)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x8C19D0", Offset = "0x8C19D0", VA = "0x8C19D0")]
	public void HideCaps(bool val)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x8C1CF0", Offset = "0x8C1CF0", VA = "0x8C1CF0")]
	public void Size(Bounds b)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x8C1E3C", Offset = "0x8C1E3C", VA = "0x8C1E3C")]
	public CappedSectionBox()
	{
	}
}
[Token(Token = "0x20000C3")]
public class CappedSectionCorner : MonoBehaviour
{
	[Token(Token = "0x2000325")]
	private enum GizmoAxis
	{
		[Token(Token = "0x400139B")]
		X,
		[Token(Token = "0x400139C")]
		Y,
		[Token(Token = "0x400139D")]
		Z,
		[Token(Token = "0x400139E")]
		XYRotate,
		[Token(Token = "0x400139F")]
		XZRotate,
		[Token(Token = "0x40013A0")]
		YZRotate,
		[Token(Token = "0x40013A1")]
		none
	}

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layer;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BBED4", Offset = "0x3BBED4")]
	public Collider xAxis;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BBEE8", Offset = "0x3BBEE8")]
	public Collider yAxis;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BBEFC", Offset = "0x3BBEFC")]
	public Collider zAxis;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GizmoAxis selectedAxis;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private RaycastHit hit;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Ray ray;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Ray ray1;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Plane dragplane;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float rayDistance;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float newRotY;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float rayDistancePrev;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float distance;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 lookCamera;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 startDrag;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 startPos;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 startDragRot;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 lookHitPoint;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 startScale;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool dragging;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float scaleM;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x8C1E4C", Offset = "0x8C1E4C", VA = "0x8C1E4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x8C1F08", Offset = "0x8C1F08", VA = "0x8C1F08")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x8C2878", Offset = "0x8C2878", VA = "0x8C2878")]
	public void Size(Bounds b)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x8C29D4", Offset = "0x8C29D4", VA = "0x8C29D4")]
	public void HideCage(bool val)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x8C2AB8", Offset = "0x8C2AB8", VA = "0x8C2AB8")]
	public void HideCaps(bool val)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x8C2DD8", Offset = "0x8C2DD8", VA = "0x8C2DD8")]
	public CappedSectionCorner()
	{
	}
}
[Token(Token = "0x20000C4")]
public class CappedSectionFollow : MonoBehaviour
{
	[Token(Token = "0x2000326")]
	private enum Mode
	{
		[Token(Token = "0x40013A3")]
		box,
		[Token(Token = "0x40013A4")]
		corner
	}

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mode sectionMode;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 tempPos;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 tempScale;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion tempRot;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool followPosition;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x8C2DF0", Offset = "0x8C2DF0", VA = "0x8C2DF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x8C2F04", Offset = "0x8C2F04", VA = "0x8C2F04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x8C30F0", Offset = "0x8C30F0", VA = "0x8C30F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x8C332C", Offset = "0x8C332C", VA = "0x8C332C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x8C339C", Offset = "0x8C339C", VA = "0x8C339C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x8C3424", Offset = "0x8C3424", VA = "0x8C3424")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x8C302C", Offset = "0x8C302C", VA = "0x8C302C")]
	private void SetSection()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x8C3494", Offset = "0x8C3494", VA = "0x8C3494")]
	public CappedSectionFollow()
	{
	}
}
[Token(Token = "0x20000C5")]
public class PlaneHover : MonoBehaviour
{
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color hovercolor;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color original;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer rend;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool selected;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xFD0924", Offset = "0xFD0924", VA = "0xFD0924")]
	private void Start()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xFD09A8", Offset = "0xFD09A8", VA = "0xFD09A8")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xFD09EC", Offset = "0xFD09EC", VA = "0xFD09EC")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xFD09AC", Offset = "0xFD09AC", VA = "0xFD09AC")]
	private void SetHovered()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xFD09FC", Offset = "0xFD09FC", VA = "0xFD09FC")]
	private void SetOriginal()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xFD0A3C", Offset = "0xFD0A3C", VA = "0xFD0A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xFD0A7C", Offset = "0xFD0A7C", VA = "0xFD0A7C")]
	public PlaneHover()
	{
	}
}
[Token(Token = "0x20000C6")]
public class ScaleToColor : MonoBehaviour
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material m;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color emissionColor;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xFA58EC", Offset = "0xFA58EC", VA = "0xFA58EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xFA5958", Offset = "0xFA5958", VA = "0xFA5958")]
	public void SetColor(float sc)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xFA59E8", Offset = "0xFA59E8", VA = "0xFA59E8")]
	public ScaleToColor()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B810C", Offset = "0x3B810C")]
public class UVScaler : MonoBehaviour
{
	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh m;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2[] muv;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xFC3C54", Offset = "0xFC3C54", VA = "0xFC3C54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xFC3F98", Offset = "0xFC3F98", VA = "0xFC3F98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xFC3CD4", Offset = "0xFC3CD4", VA = "0xFC3CD4")]
	public void SetUV()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xFC3F9C", Offset = "0xFC3F9C", VA = "0xFC3F9C")]
	public UVScaler()
	{
	}
}
[Token(Token = "0x20000C8")]
public class BackfaceOffsetSettings : MonoBehaviour
{
	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.UI.Slider my_slider;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField my_field;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text MinTxt;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text MaxTxt;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float backfaceOffset;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x76D058", Offset = "0x76D058", VA = "0x76D058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x76D314", Offset = "0x76D314", VA = "0x76D314")]
	private void UpdateValueFromFloat(float value)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x76D490", Offset = "0x76D490", VA = "0x76D490")]
	private void UpdateValueFromString(string value)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x76D438", Offset = "0x76D438", VA = "0x76D438")]
	private void UpdateValue(float value)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x76D584", Offset = "0x76D584", VA = "0x76D584")]
	public BackfaceOffsetSettings()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x76D58C", Offset = "0x76D58C", VA = "0x76D58C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C545C", Offset = "0x3C545C")]
	private void <Start>b__5_0(float <p0>)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x76D5C8", Offset = "0x76D5C8", VA = "0x76D5C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C546C", Offset = "0x3C546C")]
	private void <Start>b__5_1(string <p0>)
	{
	}
}
[Token(Token = "0x20000C9")]
public class CubeSectionExample : MonoBehaviour
{
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B90FC", Offset = "0x3B90FC")]
	private sealed class <drag>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubeSectionExample <>4__this;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <cameraDistance>5__2;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startPoint>5__3;

		[Token(Token = "0x170001EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x5F4038", Offset = "0x5F4038", VA = "0x5F4038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x5F4080", Offset = "0x5F4080", VA = "0x5F4080", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x5F3DB8", Offset = "0x5F3DB8", VA = "0x5F3DB8")]
		[DebuggerHidden]
		public <drag>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x5F3DE4", Offset = "0x5F3DE4", VA = "0x5F3DE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x5F3DE8", Offset = "0x5F3DE8", VA = "0x5F3DE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x5F4040", Offset = "0x5F4040", VA = "0x5F4040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x8C917C", Offset = "0x8C917C", VA = "0x8C917C")]
	private void Start()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x8C9320", Offset = "0x8C9320", VA = "0x8C9320")]
	private void Update()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x8C9680", Offset = "0x8C9680", VA = "0x8C9680")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x8C96C8", Offset = "0x8C96C8", VA = "0x8C96C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x8C9710", Offset = "0x8C9710", VA = "0x8C9710")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x8C960C", Offset = "0x8C960C", VA = "0x8C960C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C547C", Offset = "0x3C547C")]
	private IEnumerator drag()
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x8C9758", Offset = "0x8C9758", VA = "0x8C9758")]
	public CubeSectionExample()
	{
	}
}
[Token(Token = "0x20000CA")]
public class CylinderSectionExample : MonoBehaviour
{
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B910C", Offset = "0x3B910C")]
	private sealed class <drag>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CylinderSectionExample <>4__this;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <cameraDistance>5__2;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startPoint>5__3;

		[Token(Token = "0x170001F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x5F4808", Offset = "0x5F4808", VA = "0x5F4808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x5F4850", Offset = "0x5F4850", VA = "0x5F4850", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x5F44E0", Offset = "0x5F44E0", VA = "0x5F44E0")]
		[DebuggerHidden]
		public <drag>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x5F450C", Offset = "0x5F450C", VA = "0x5F450C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x5F4510", Offset = "0x5F4510", VA = "0x5F4510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x5F4810", Offset = "0x5F4810", VA = "0x5F4810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] hitPoints;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] AxisDir;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] radiuses;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BBF10", Offset = "0x3BBF10")]
	public int n;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int i;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x8CA74C", Offset = "0x8CA74C", VA = "0x8CA74C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x8CA940", Offset = "0x8CA940", VA = "0x8CA940")]
	private void Update()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x8CAE58", Offset = "0x8CAE58", VA = "0x8CAE58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x8CAEA0", Offset = "0x8CAEA0", VA = "0x8CAEA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x8CAF14", Offset = "0x8CAF14", VA = "0x8CAF14")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x8CADE4", Offset = "0x8CADE4", VA = "0x8CADE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C54E4", Offset = "0x3C54E4")]
	private IEnumerator drag()
	{
		return null;
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x8CAF5C", Offset = "0x8CAF5C", VA = "0x8CAF5C")]
	public CylinderSectionExample()
	{
	}
}
[Token(Token = "0x20000CB")]
public class EnableShadersKeyword : MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string kwd;

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x8077E4", Offset = "0x8077E4", VA = "0x8077E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x8078A0", Offset = "0x8078A0", VA = "0x8078A0")]
	public EnableShadersKeyword()
	{
	}
}
[Token(Token = "0x20000CC")]
public class GridClone : MonoBehaviour
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int n;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dist;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool rand;

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x9A6750", Offset = "0x9A6750", VA = "0x9A6750")]
	private void Start()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x9A67C8", Offset = "0x9A67C8", VA = "0x9A67C8")]
	private void Clone(GameObject source)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x9A6A9C", Offset = "0x9A6A9C", VA = "0x9A6A9C")]
	public GridClone()
	{
	}
}
[Token(Token = "0x20000CD")]
public class PieSectionExample : MonoBehaviour
{
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B911C", Offset = "0x3B911C")]
	private sealed class <drag>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PieSectionExample <>4__this;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <cameraDistance>5__2;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startPoint>5__3;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startNormal>5__4;

		[Token(Token = "0x170001F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x8897A8", Offset = "0x8897A8", VA = "0x8897A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x8897F0", Offset = "0x8897F0", VA = "0x8897F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x88948C", Offset = "0x88948C", VA = "0x88948C")]
		[DebuggerHidden]
		public <drag>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x8894B8", Offset = "0x8894B8", VA = "0x8894B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x8894BC", Offset = "0x8894BC", VA = "0x8894BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x8897B0", Offset = "0x8897B0", VA = "0x8897B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 normal1;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 normal2;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float angle;

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xFCE388", Offset = "0xFCE388", VA = "0xFCE388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xFCE658", Offset = "0xFCE658", VA = "0xFCE658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xFCE914", Offset = "0xFCE914", VA = "0xFCE914")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xFCE95C", Offset = "0xFCE95C", VA = "0xFCE95C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xFCE9A4", Offset = "0xFCE9A4", VA = "0xFCE9A4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xFCE8A0", Offset = "0xFCE8A0", VA = "0xFCE8A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C554C", Offset = "0x3C554C")]
	private IEnumerator drag()
	{
		return null;
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xFCEA14", Offset = "0xFCEA14", VA = "0xFCEA14")]
	public PieSectionExample()
	{
	}
}
[Token(Token = "0x20000CE")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B811C", Offset = "0x3B811C")]
public class PlaneSectionEditor : MonoBehaviour
{
	[Token(Token = "0x6000437")]
	[Address(RVA = "0xFD0A84", Offset = "0xFD0A84", VA = "0xFD0A84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xFD0ACC", Offset = "0xFD0ACC", VA = "0xFD0ACC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xFD0B14", Offset = "0xFD0B14", VA = "0xFD0B14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xFD0B5C", Offset = "0xFD0B5C", VA = "0xFD0B5C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xFD0BA4", Offset = "0xFD0BA4", VA = "0xFD0BA4")]
	public PlaneSectionEditor()
	{
	}
}
[Token(Token = "0x20000CF")]
public static class SignificantDigits
{
	[Token(Token = "0x600043C")]
	[Address(RVA = "0xFA8220", Offset = "0xFA8220", VA = "0xFA8220")]
	public static decimal CeilingToSignificantFigures(decimal num, int n)
	{
		return default(decimal);
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xFA8414", Offset = "0xFA8414", VA = "0xFA8414")]
	public static decimal RoundToSignificantFigures(decimal num, int n)
	{
		return default(decimal);
	}
}
[Token(Token = "0x20000D0")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B812C", Offset = "0x3B812C")]
public class SetCustomDepthNormalsShader : MonoBehaviour
{
	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader customShader;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xFA7EE8", Offset = "0xFA7EE8", VA = "0xFA7EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xFA7F20", Offset = "0xFA7F20", VA = "0xFA7F20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xFA7F58", Offset = "0xFA7F58", VA = "0xFA7F58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xFA7F68", Offset = "0xFA7F68", VA = "0xFA7F68")]
	public SetCustomDepthNormalsShader()
	{
	}
}
[Token(Token = "0x20000D1")]
public class SphereSectionExample : MonoBehaviour
{
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B912C", Offset = "0x3B912C")]
	private sealed class <drag>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SphereSectionExample <>4__this;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <cameraDistance>5__2;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startPoint>5__3;

		[Token(Token = "0x170001F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x88D92C", Offset = "0x88D92C", VA = "0x88D92C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x88D974", Offset = "0x88D974", VA = "0x88D974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x88D684", Offset = "0x88D684", VA = "0x88D684")]
		[DebuggerHidden]
		public <drag>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x88D6B0", Offset = "0x88D6B0", VA = "0x88D6B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x88D6B4", Offset = "0x88D6B4", VA = "0x88D6B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x88D934", Offset = "0x88D934", VA = "0x88D934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inverse;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xFB1240", Offset = "0xFB1240", VA = "0xFB1240")]
	private void Start()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xFB13D8", Offset = "0xFB13D8", VA = "0xFB13D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xFB1660", Offset = "0xFB1660", VA = "0xFB1660")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xFB16A8", Offset = "0xFB16A8", VA = "0xFB16A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xFB16F0", Offset = "0xFB16F0", VA = "0xFB16F0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xFB15EC", Offset = "0xFB15EC", VA = "0xFB15EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C55B4", Offset = "0x3C55B4")]
	private IEnumerator drag()
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xFB1738", Offset = "0xFB1738", VA = "0xFB1738")]
	public SphereSectionExample()
	{
	}
}
[Token(Token = "0x20000D2")]
public class ToolTipManager : MonoBehaviour
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject currentObj;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tooltipPanel;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject ttPanel;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xFBD444", Offset = "0xFBD444", VA = "0xFBD444")]
	private void Start()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xFBD738", Offset = "0xFBD738", VA = "0xFBD738")]
	private void Update()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xFBD894", Offset = "0xFBD894", VA = "0xFBD894")]
	public static void SetCurrent(GameObject g)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xFBDA14", Offset = "0xFBDA14", VA = "0xFBDA14")]
	public ToolTipManager()
	{
	}
}
[Token(Token = "0x20000D3")]
public class TooltipObject : MonoBehaviour
{
	[Token(Token = "0x600044D")]
	[Address(RVA = "0xFBDE94", Offset = "0xFBDE94", VA = "0xFBDE94")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xFBDF24", Offset = "0xFBDF24", VA = "0xFBDF24")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xFBDF2C", Offset = "0xFBDF2C", VA = "0xFBDF2C")]
	public TooltipObject()
	{
	}
}
[Token(Token = "0x20000D4")]
public static class ArrayUtilities
{
	[Token(Token = "0x6000450")]
	public static T[] RangeSubset<T>(this T[] array, int startIndex, int length)
	{
		return null;
	}

	[Token(Token = "0x6000451")]
	public static T[] Subset<T>(this T[] array, params int[] indices)
	{
		return null;
	}
}
[Token(Token = "0x20000D5")]
public static class DebugLogExtended
{
	[Token(Token = "0x6000452")]
	[Address(RVA = "0x8CBE68", Offset = "0x8CBE68", VA = "0x8CBE68")]
	public static void LogGreen(string message)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x8CBE6C", Offset = "0x8CBE6C", VA = "0x8CBE6C")]
	public static void LogGreen(string message, UnityEngine.Object context)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x8CBE70", Offset = "0x8CBE70", VA = "0x8CBE70")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x8CBE74", Offset = "0x8CBE74", VA = "0x8CBE74")]
	public static void Log(string message, UnityEngine.Object context)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x8CBE78", Offset = "0x8CBE78", VA = "0x8CBE78")]
	public static void Error(string message)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x8CBE7C", Offset = "0x8CBE7C", VA = "0x8CBE7C")]
	public static void Error(string message, UnityEngine.Object context)
	{
	}
}
[Token(Token = "0x20000D6")]
public static class ListExtended
{
	[Token(Token = "0x6000458")]
	public static void AddIfNotNull<T>(this List<T> list, T obj)
	{
	}
}
[Token(Token = "0x20000D7")]
public static class MethodExtensionForMonoBehaviourTransform
{
	[Token(Token = "0x6000459")]
	public static T GetOrAddComponent<T>(this Component child) where T : Component
	{
		return null;
	}
}
[Token(Token = "0x20000D8")]
public static class StringExtended
{
	[Token(Token = "0x600045A")]
	[Address(RVA = "0xFB36F4", Offset = "0xFB36F4", VA = "0xFB36F4")]
	public static string GetLast(this string source, int tail_length)
	{
		return null;
	}
}
[Token(Token = "0x20000D9")]
public static class TransformExtended
{
	[Token(Token = "0x600045B")]
	[Address(RVA = "0xFC12CC", Offset = "0xFC12CC", VA = "0xFC12CC")]
	public static Transform ClearChildren(this Transform transform)
	{
		return null;
	}
}
[Token(Token = "0x20000DA")]
public class SceneSingletonMonoBehaviour<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object _lock;

	[Token(Token = "0x1700003B")]
	public static T Instance
	{
		[Token(Token = "0x600045C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600045D")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600045E")]
	public SceneSingletonMonoBehaviour()
	{
	}
}
[Token(Token = "0x20000DB")]
public class SingletonMonoBehaviour<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object _lock;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool applicationIsQuitting;

	[Token(Token = "0x1700003C")]
	public static T Instance
	{
		[Token(Token = "0x6000460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000461")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000462")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000463")]
	public SingletonMonoBehaviour()
	{
	}
}
[Token(Token = "0x20000DC")]
public class Toolbox : SingletonMonoBehaviour<Toolbox>
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Language language;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xFBDA1C", Offset = "0xFBDA1C", VA = "0xFBDA1C")]
	protected Toolbox()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xFBDAC8", Offset = "0xFBDAC8", VA = "0xFBDAC8")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000467")]
	public static T RegisterComponent<T>() where T : Component
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000DD")]
public class Language
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string current;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string lastLang;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x97EB98", Offset = "0x97EB98", VA = "0x97EB98")]
	public Language()
	{
	}
}
[Token(Token = "0x20000DE")]
public interface IFeedbackText
{
	[Token(Token = "0x6000469")]
	void AddTextFeedbackListener(UnityAction<string> feedbackTextboxListener);

	[Token(Token = "0x600046A")]
	void RemoveTextFeedbackListeners();
}
[Serializable]
[Token(Token = "0x20000DF")]
public class ProgressEvent : UnityEvent<float>
{
	[Token(Token = "0x600046B")]
	[Address(RVA = "0xFD4564", Offset = "0xFD4564", VA = "0xFD4564")]
	public ProgressEvent()
	{
	}
}
[Token(Token = "0x20000E0")]
public interface IProgressEvents
{
	[Token(Token = "0x600046C")]
	void AddProgressListener(UnityAction<float> progressListener);

	[Token(Token = "0x600046D")]
	void RemoveListeners();
}
[Token(Token = "0x20000E1")]
public class SerializableDictionaryExample : MonoBehaviour
{
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StringStringDictionary m_stringStringDictionary;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectColorDictionary m_objectColorDictionary;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StringColorArrayDictionary m_stringColorArrayDictionary;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StringHashSet m_stringHashSet;

	[Token(Token = "0x1700003D")]
	public IDictionary<string, string> StringStringDictionary
	{
		[Token(Token = "0x600046E")]
		[Address(RVA = "0xFA7998", Offset = "0xFA7998", VA = "0xFA7998")]
		get
		{
			return null;
		}
		[Token(Token = "0x600046F")]
		[Address(RVA = "0xFA79A0", Offset = "0xFA79A0", VA = "0xFA79A0")]
		set
		{
		}
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xFA7A04", Offset = "0xFA7A04", VA = "0xFA7A04")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xFA7BE8", Offset = "0xFA7BE8", VA = "0xFA7BE8")]
	public SerializableDictionaryExample()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E2")]
public class StringStringDictionary : SerializableDictionary<string, string>
{
	[Token(Token = "0x6000472")]
	[Address(RVA = "0xFB37CC", Offset = "0xFB37CC", VA = "0xFB37CC")]
	public StringStringDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E3")]
public class ObjectColorDictionary : SerializableDictionary<UnityEngine.Object, Color>
{
	[Token(Token = "0x6000473")]
	[Address(RVA = "0xFDDAA4", Offset = "0xFDDAA4", VA = "0xFDDAA4")]
	public ObjectColorDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E4")]
public class ColorArrayStorage : SerializableDictionary.Storage<Color[]>
{
	[Token(Token = "0x6000474")]
	[Address(RVA = "0x8C6684", Offset = "0x8C6684", VA = "0x8C6684")]
	public ColorArrayStorage()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E5")]
public class StringColorArrayDictionary : SerializableDictionary<string, Color[], ColorArrayStorage>
{
	[Token(Token = "0x6000475")]
	[Address(RVA = "0xFB364C", Offset = "0xFB364C", VA = "0xFB364C")]
	public StringColorArrayDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E6")]
public class MyClass
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int i;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string str;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xD9F754", Offset = "0xD9F754", VA = "0xD9F754")]
	public MyClass()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E7")]
public class QuaternionMyClassDictionary : SerializableDictionary<Quaternion, MyClass>
{
	[Token(Token = "0x6000477")]
	[Address(RVA = "0xFD50AC", Offset = "0xFD50AC", VA = "0xFD50AC")]
	public QuaternionMyClassDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E8")]
public class StringHashSet : SerializableHashSet<string>
{
	[Token(Token = "0x6000478")]
	[Address(RVA = "0xFB3778", Offset = "0xFB3778", VA = "0xFB3778")]
	public StringHashSet()
	{
	}
}
[Token(Token = "0x20000E9")]
public abstract class SerializableDictionaryBase
{
	[Token(Token = "0x200032B")]
	public abstract class Storage
	{
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x88C5E0", Offset = "0x88C5E0", VA = "0x88C5E0")]
		protected Storage()
		{
		}
	}

	[Token(Token = "0x200032C")]
	protected class Dictionary<TKey, TValue> : System.Collections.Generic.Dictionary<TKey, TValue>
	{
		[Token(Token = "0x60012E4")]
		public Dictionary()
		{
		}

		[Token(Token = "0x60012E5")]
		public Dictionary(IDictionary<TKey, TValue> dict)
		{
		}

		[Token(Token = "0x60012E6")]
		public Dictionary(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xFA7990", Offset = "0xFA7990", VA = "0xFA7990")]
	protected SerializableDictionaryBase()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EA")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x3B818C", Offset = "0x3B818C")]
public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : SerializableDictionaryBase, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, IDictionary, ICollection, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
{
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<TKey, TValue> m_dict;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TKey[] m_keys;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TValueStorage[] m_values;

	[Token(Token = "0x1700003E")]
	public ICollection<TKey> Keys
	{
		[Token(Token = "0x6000481")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public ICollection<TValue> Values
	{
		[Token(Token = "0x6000482")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public int Count
	{
		[Token(Token = "0x6000483")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000041")]
	public bool IsReadOnly
	{
		[Token(Token = "0x6000484")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000042")]
	public TValue Item
	{
		[Token(Token = "0x6000485")]
		get
		{
			return (TValue)null;
		}
		[Token(Token = "0x6000486")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public bool IsFixedSize
	{
		[Token(Token = "0x6000492")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000044")]
	private ICollection System.Collections.IDictionary.Keys
	{
		[Token(Token = "0x6000493")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000045")]
	private ICollection System.Collections.IDictionary.Values
	{
		[Token(Token = "0x6000494")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public bool IsSynchronized
	{
		[Token(Token = "0x6000495")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000047")]
	public object SyncRoot
	{
		[Token(Token = "0x6000496")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	public object Item
	{
		[Token(Token = "0x6000497")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000498")]
		set
		{
		}
	}

	[Token(Token = "0x600047A")]
	public SerializableDictionaryBase()
	{
	}

	[Token(Token = "0x600047B")]
	public SerializableDictionaryBase(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x600047C")]
	protected abstract void SetValue(TValueStorage[] storage, int i, TValue value);

	[Token(Token = "0x600047D")]
	protected abstract TValue GetValue(TValueStorage[] storage, int i);

	[Token(Token = "0x600047E")]
	public void CopyFrom(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x600047F")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000480")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000487")]
	public void Add(TKey key, TValue value)
	{
	}

	[Token(Token = "0x6000488")]
	public bool ContainsKey(TKey key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000489")]
	public bool Remove(TKey key)
	{
		return default(bool);
	}

	[Token(Token = "0x600048A")]
	public bool TryGetValue(TKey key, [Out] TValue value)
	{
		return default(bool);
	}

	[Token(Token = "0x600048B")]
	public void Add(KeyValuePair<TKey, TValue> item)
	{
	}

	[Token(Token = "0x600048C")]
	public void Clear()
	{
	}

	[Token(Token = "0x600048D")]
	public bool Contains(KeyValuePair<TKey, TValue> item)
	{
		return default(bool);
	}

	[Token(Token = "0x600048E")]
	public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
	{
	}

	[Token(Token = "0x600048F")]
	public bool Remove(KeyValuePair<TKey, TValue> item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000490")]
	public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000491")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000499")]
	public void Add(object key, object value)
	{
	}

	[Token(Token = "0x600049A")]
	public bool Contains(object key)
	{
		return default(bool);
	}

	[Token(Token = "0x600049B")]
	private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600049C")]
	public void Remove(object key)
	{
	}

	[Token(Token = "0x600049D")]
	public void CopyTo(Array array, int index)
	{
	}

	[Token(Token = "0x600049E")]
	public void OnDeserialization(object sender)
	{
	}

	[Token(Token = "0x600049F")]
	protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x60004A0")]
	public void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Token(Token = "0x20000EB")]
public static class SerializableDictionary
{
	[Token(Token = "0x200032D")]
	public class Storage<T> : SerializableDictionaryBase.Storage
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x60012E7")]
		public Storage()
		{
		}
	}
}
[Token(Token = "0x20000EC")]
public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>
{
	[Token(Token = "0x60004A1")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x60004A2")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x60004A3")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x60004A4")]
	protected override TValue GetValue(TValue[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x60004A5")]
	protected override void SetValue(TValue[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x20000ED")]
public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage> where TValueStorage : SerializableDictionary.Storage<TValue>, new()
{
	[Token(Token = "0x60004A6")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x60004A7")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x60004A8")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x60004A9")]
	protected override TValue GetValue(TValueStorage[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x60004AA")]
	protected override void SetValue(TValueStorage[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x20000EE")]
public abstract class SerializableHashSetBase
{
	[Token(Token = "0x200032E")]
	public abstract class Storage
	{
		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x88C5E8", Offset = "0x88C5E8", VA = "0x88C5E8")]
		protected Storage()
		{
		}
	}

	[Token(Token = "0x200032F")]
	protected class HashSet<TValue> : System.Collections.Generic.HashSet<TValue>
	{
		[Token(Token = "0x60012E9")]
		public HashSet()
		{
		}

		[Token(Token = "0x60012EA")]
		public HashSet(ISet<TValue> set)
		{
		}

		[Token(Token = "0x60012EB")]
		public HashSet(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xFA7BF0", Offset = "0xFA7BF0", VA = "0xFA7BF0")]
	protected SerializableHashSetBase()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EF")]
public abstract class SerializableHashSet<T> : SerializableHashSetBase, ISet<T>, ICollection<T>, IEnumerable<T>, IEnumerable, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private HashSet<T> m_hashSet;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private T[] m_keys;

	[Token(Token = "0x17000049")]
	public int Count
	{
		[Token(Token = "0x60004B1")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700004A")]
	public bool IsReadOnly
	{
		[Token(Token = "0x60004B2")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004AC")]
	public SerializableHashSet()
	{
	}

	[Token(Token = "0x60004AD")]
	public SerializableHashSet(ISet<T> set)
	{
	}

	[Token(Token = "0x60004AE")]
	public void CopyFrom(ISet<T> set)
	{
	}

	[Token(Token = "0x60004AF")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60004B0")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60004B3")]
	public bool Add(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B4")]
	public void ExceptWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x60004B5")]
	public void IntersectWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x60004B6")]
	public bool IsProperSubsetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B7")]
	public bool IsProperSupersetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B8")]
	public bool IsSubsetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B9")]
	public bool IsSupersetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BA")]
	public bool Overlaps(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BB")]
	public bool SetEquals(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BC")]
	public void SymmetricExceptWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x60004BD")]
	public void UnionWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x60004BE")]
	private void System.Collections.Generic.ICollection<T>.Add(T item)
	{
	}

	[Token(Token = "0x60004BF")]
	public void Clear()
	{
	}

	[Token(Token = "0x60004C0")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C1")]
	public void CopyTo(T[] array, int arrayIndex)
	{
	}

	[Token(Token = "0x60004C2")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C3")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60004C4")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60004C5")]
	public void OnDeserialization(object sender)
	{
	}

	[Token(Token = "0x60004C6")]
	protected SerializableHashSet(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x60004C7")]
	public void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Token(Token = "0x20000F0")]
public class DateControl : MonoBehaviour
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int expirationDay;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int expirationMonth;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int expirationYear;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject expired;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VrSceneLoader loader;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x8CBA6C", Offset = "0x8CBA6C", VA = "0x8CBA6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x8CBC68", Offset = "0x8CBC68", VA = "0x8CBC68")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x8CBC6C", Offset = "0x8CBC6C", VA = "0x8CBC6C")]
	public DateControl()
	{
	}
}
[Token(Token = "0x20000F1")]
public class DebugAnatomyMover : MonoBehaviour
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject anatomy;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject anatomyAnchor;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _angulation;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _rotation;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x8CBC88", Offset = "0x8CBC88", VA = "0x8CBC88")]
	public void Translate(float dist)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x8CBD24", Offset = "0x8CBD24", VA = "0x8CBD24")]
	public void Rotate(float ang)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x8CBD7C", Offset = "0x8CBD7C", VA = "0x8CBD7C")]
	public void Angulate(float ang)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x8CBDD4", Offset = "0x8CBDD4", VA = "0x8CBDD4")]
	public void ResetRotation()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x8CBE60", Offset = "0x8CBE60", VA = "0x8CBE60")]
	public DebugAnatomyMover()
	{
	}
}
[Token(Token = "0x20000F2")]
public class DopplerToggle : MonoBehaviour
{
	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> dopplerEmitters;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool show;

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x806F6C", Offset = "0x806F6C", VA = "0x806F6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x807090", Offset = "0x807090", VA = "0x807090")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x807094", Offset = "0x807094", VA = "0x807094")]
	public void ToggleDoppler()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x8071BC", Offset = "0x8071BC", VA = "0x8071BC")]
	public void ToggleDopplerOff()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x8072DC", Offset = "0x8072DC", VA = "0x8072DC")]
	public void ToggleDopplerOn()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x807400", Offset = "0x807400", VA = "0x807400")]
	public DopplerToggle()
	{
	}
}
[Token(Token = "0x20000F3")]
public class LabelToggle : MonoBehaviour
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> labelObjects;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool show;

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x97E6F4", Offset = "0x97E6F4", VA = "0x97E6F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x97E818", Offset = "0x97E818", VA = "0x97E818")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x97E81C", Offset = "0x97E81C", VA = "0x97E81C")]
	public void ToggleLabels()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x97E944", Offset = "0x97E944", VA = "0x97E944")]
	public void ToggleLabelsOff()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x97EA64", Offset = "0x97EA64", VA = "0x97EA64")]
	public void ToggleLabelsOn()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x97EB88", Offset = "0x97EB88", VA = "0x97EB88")]
	public LabelToggle()
	{
	}
}
[Token(Token = "0x20000F4")]
public class ObjectListToggle : MonoBehaviour
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> objects;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool show;

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xFDDAF8", Offset = "0xFDDAF8", VA = "0xFDDAF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xFDDC1C", Offset = "0xFDDC1C", VA = "0xFDDC1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xFDDC20", Offset = "0xFDDC20", VA = "0xFDDC20")]
	public void Toggle()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xFDDD48", Offset = "0xFDDD48", VA = "0xFDDD48")]
	public void ToggleOff()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xFDDE68", Offset = "0xFDDE68", VA = "0xFDDE68")]
	public void ToggleOn()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xFDDF8C", Offset = "0xFDDF8C", VA = "0xFDDF8C")]
	public ObjectListToggle()
	{
	}
}
[Token(Token = "0x20000F5")]
public class SetLabelFloat : MonoBehaviour
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text label;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool initializeFromSlider;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.UI.Slider sourceSlider;

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xFA7F70", Offset = "0xFA7F70", VA = "0xFA7F70")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xFA807C", Offset = "0xFA807C", VA = "0xFA807C")]
	public void UpdateLabel(float val)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xFA8100", Offset = "0xFA8100", VA = "0xFA8100")]
	public SetLabelFloat()
	{
	}
}
[Token(Token = "0x20000F6")]
public class StandardQueueHelper : MonoBehaviour
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int renderQueue;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer mr;

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xFB1740", Offset = "0xFB1740", VA = "0xFB1740")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xFB177C", Offset = "0xFB177C", VA = "0xFB177C")]
	public StandardQueueHelper()
	{
	}
}
[Token(Token = "0x20000F7")]
public class TimelineActivator : MonoBehaviour
{
	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnTimelineFinished;

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xFBD2F4", Offset = "0xFBD2F4", VA = "0xFBD2F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xFBD2F8", Offset = "0xFBD2F8", VA = "0xFBD2F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xFBD318", Offset = "0xFBD318", VA = "0xFBD318")]
	public TimelineActivator()
	{
	}
}
[Token(Token = "0x20000F8")]
public class ToggleRenderer : MonoBehaviour
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rendererToHide;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool show;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xFBD320", Offset = "0xFBD320", VA = "0xFBD320")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xFBD3F8", Offset = "0xFBD3F8", VA = "0xFBD3F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xFBD3FC", Offset = "0xFBD3FC", VA = "0xFBD3FC")]
	public void ToggleMeshRenderer()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xFBD434", Offset = "0xFBD434", VA = "0xFBD434")]
	public ToggleRenderer()
	{
	}
}
[Token(Token = "0x20000F9")]
public class ViewsToggle : MonoBehaviour
{
	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> viewObjects;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool show;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x5EC6AC", Offset = "0x5EC6AC", VA = "0x5EC6AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x5EC7D0", Offset = "0x5EC7D0", VA = "0x5EC7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x5EC7D4", Offset = "0x5EC7D4", VA = "0x5EC7D4")]
	public void ToggleLabels()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x5EC8FC", Offset = "0x5EC8FC", VA = "0x5EC8FC")]
	public void ToggleLabelsOff()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x5ECA1C", Offset = "0x5ECA1C", VA = "0x5ECA1C")]
	public void ToggleLabelsOn()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x5ECB40", Offset = "0x5ECB40", VA = "0x5ECB40")]
	public ViewsToggle()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FA")]
public class LocalizationData
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LocalizationItem[] items;

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x981C18", Offset = "0x981C18", VA = "0x981C18")]
	public LocalizationData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FB")]
public class LocalizationItem
{
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x981C20", Offset = "0x981C20", VA = "0x981C20")]
	public LocalizationItem()
	{
	}
}
[Token(Token = "0x20000FC")]
public class ButtonFromBelowHelperXH : MonoBehaviour
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool grabberFromBottom;

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x772E1C", Offset = "0x772E1C", VA = "0x772E1C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x772ED0", Offset = "0x772ED0", VA = "0x772ED0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x772F80", Offset = "0x772F80", VA = "0x772F80")]
	public ButtonFromBelowHelperXH()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FD")]
public class UnityFloatEvent : UnityEvent<float>
{
	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xFC4804", Offset = "0xFC4804", VA = "0xFC4804")]
	public UnityFloatEvent()
	{
	}
}
[Token(Token = "0x20000FE")]
public class ButtonHighlighterXH : MonoBehaviour
{
	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Grabber> grabbers;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BBF68", Offset = "0x3BBF68")]
	public ButtonFromBelowHelperXH bottomHelper;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool needsBeeingGrabbed;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isBeingGrabbed;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color hover;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color handsOn;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject grabbed;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color normal;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float outlineWidth;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent OnTriggerEnterOuter;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent OnTriggerExitOuter;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent OnTriggerEnterInner;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent OnTriggerExitInner;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Collider currentCollider;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isInInner;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool isInOuter;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityFloatEvent highlightingChanged;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool previousFrameGrabber;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float HighlightSpeed;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float highlightVal;

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x772F88", Offset = "0x772F88", VA = "0x772F88")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x773000", Offset = "0x773000", VA = "0x773000")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x77316C", Offset = "0x77316C", VA = "0x77316C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x773340", Offset = "0x773340", VA = "0x773340")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x773308", Offset = "0x773308", VA = "0x773308")]
	public void EnteredOuter()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x773470", Offset = "0x773470", VA = "0x773470")]
	public void ExitedOuter()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x7734A8", Offset = "0x7734A8", VA = "0x7734A8")]
	public void EnteredInner()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x7734F0", Offset = "0x7734F0", VA = "0x7734F0")]
	public void ExitedInner()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x773544", Offset = "0x773544", VA = "0x773544")]
	public void onGrabbed()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x7735EC", Offset = "0x7735EC", VA = "0x7735EC")]
	public void onGrabbedFinished()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x7736DC", Offset = "0x7736DC", VA = "0x7736DC")]
	public ButtonHighlighterXH()
	{
	}
}
[Token(Token = "0x20000FF")]
public class CanvasFaderXH : MonoBehaviour
{
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text2;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image panel;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pivot;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minRotation;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxRotation;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color textColor;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float InitialRotationY;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float InitialRotationZ;

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x8C0A28", Offset = "0x8C0A28", VA = "0x8C0A28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x8C0AA4", Offset = "0x8C0AA4", VA = "0x8C0AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x8C0AA8", Offset = "0x8C0AA8", VA = "0x8C0AA8")]
	public void updateFader(float val)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x8C0BF0", Offset = "0x8C0BF0", VA = "0x8C0BF0")]
	public CanvasFaderXH()
	{
	}
}
[Token(Token = "0x2000100")]
public class ConstrainLocalRotationXH : MonoBehaviour
{
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ConstrainLocalXaxis;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float LocalXMin;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LocalXMax;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ConstrainLocalYaxis;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float LocalYMin;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float LocalYMax;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ConstrainLocalZaxis;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float LocalZMin;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float LocalZMax;

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x8C7748", Offset = "0x8C7748", VA = "0x8C7748")]
	private void Update()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x8C774C", Offset = "0x8C774C", VA = "0x8C774C")]
	private void doConstrain()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x8C7860", Offset = "0x8C7860", VA = "0x8C7860")]
	private float getSmoothedValue(float val)
	{
		return default(float);
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x8C7884", Offset = "0x8C7884", VA = "0x8C7884")]
	public ConstrainLocalRotationXH()
	{
	}
}
[Token(Token = "0x2000101")]
public class JoystickHelperXH : MonoBehaviour
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxRange;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minRange;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deadZone;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityFloatEvent xDeviation;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityFloatEvent yDeviation;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _currentX;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _currentY;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x97D254", Offset = "0x97D254", VA = "0x97D254")]
	public void ProcessJoystick(float x, float y)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x97D33C", Offset = "0x97D33C", VA = "0x97D33C")]
	public JoystickHelperXH()
	{
	}
}
[Token(Token = "0x2000102")]
public class negateTracking : MonoBehaviour
{
	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig cameraRig;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cameraPos;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 defaultPos;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 position;

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x5F0200", Offset = "0x5F0200", VA = "0x5F0200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x5F0264", Offset = "0x5F0264", VA = "0x5F0264")]
	private void Update()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x5F0428", Offset = "0x5F0428", VA = "0x5F0428")]
	public negateTracking()
	{
	}
}
[Token(Token = "0x2000103")]
public class screenShotCapture : MonoBehaviour
{
	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode screenCaptureKey;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ScreenCapDirectory;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ScreenCapName;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string fileType;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int count;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int ScreenCaps;

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x5F232C", Offset = "0x5F232C", VA = "0x5F232C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x5F2358", Offset = "0x5F2358", VA = "0x5F2358")]
	private void Update()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x5F2594", Offset = "0x5F2594", VA = "0x5F2594")]
	private int FindScreenCaptures(string DirectoryPath, string FileName)
	{
		return default(int);
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x5F2650", Offset = "0x5F2650", VA = "0x5F2650")]
	public screenShotCapture()
	{
	}
}
[Token(Token = "0x2000104")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B81C4", Offset = "0x3B81C4")]
public class LineRendererConnector : MonoBehaviour
{
	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject from;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject to;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer line;

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x980AF4", Offset = "0x980AF4", VA = "0x980AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x980C44", Offset = "0x980C44", VA = "0x980C44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x980D68", Offset = "0x980D68", VA = "0x980D68")]
	public LineRendererConnector()
	{
	}
}
[Token(Token = "0x2000105")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x3B81D4", Offset = "0x3B81D4")]
public class ColorScheme : ScriptableObject
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BBFA0", Offset = "0x3BBFA0")]
	public bool screenOn;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool babyOn;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BBFD8", Offset = "0x3BBFD8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BBFD8", Offset = "0x3BBFD8")]
	public float NoiseScale;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BC030", Offset = "0x3BC030")]
	public float BlurScale;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC048", Offset = "0x3BC048")]
	public Color HeartSectionColor;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color OrgansSectionColor;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color BonesSectionColor;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color BabySectionColor;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color ExternalSectionColor;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC080", Offset = "0x3BC080")]
	public Color OrgansOutsideColorMain;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color OrgansOutsideColorBackground;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Color BonesOutsideColorMain;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Color BonesOutsideColorBackground;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Color LiverColorMain;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Color HeartOutsideColorMain;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Color InsideColor;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC0B8", Offset = "0x3BC0B8")]
	public NoiseParameters noiseParameters;

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x8C6C78", Offset = "0x8C6C78", VA = "0x8C6C78")]
	public ColorScheme()
	{
	}
}
[Token(Token = "0x2000106")]
public class CSEAnatomyMover : SingletonMonoBehaviour<CSEAnatomyMover>
{
	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC0F0", Offset = "0x3BC0F0")]
	public GameObject DefaultAnchor;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 defaultPosition;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Quaternion defaultRotation;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC128", Offset = "0x3BC128")]
	public GameObject UsgModeAnchor;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ZoomReference;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject DepthReference;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC160", Offset = "0x3BC160")]
	public GameObject AnatomyModeAnchor;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC198", Offset = "0x3BC198")]
	public GameObject AnatomyAnchor;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC1D0", Offset = "0x3BC1D0")]
	public GameObject BedObjectReferenceCallibration_NoProbe;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject BedObjectReferenceCallibration_WithProbe;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject BedObject;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BC208", Offset = "0x3BC208")]
	public bool ProbeAttached;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BC218", Offset = "0x3BC218")]
	public bool RightSide;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC228", Offset = "0x3BC228")]
	public GameObject RightTouch_WithProbe;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject LeftTouch_WithProbe;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject RightTouch_NoProbe;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject LeftTouch_NoProbe;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC260", Offset = "0x3BC260")]
	public GameObject ProbeAttachedIndicator;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SliderXH sliderXH;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC298", Offset = "0x3BC298")]
	public Grabbable GrabbableReference;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject USGContactPoint;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject CuttingPlaneIndicator_Depth;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject CuttingPlaneIndicator_Plane;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject GrabAngleCorrection;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC2D0", Offset = "0x3BC2D0")]
	public GameObject FetalReference;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject SmallBaby;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject LargeBaby;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float babiesRelativeScale;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC308", Offset = "0x3BC308")]
	public float tresholdRadius;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC340", Offset = "0x3BC340")]
	private float movementScale;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float minMovementScale;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float maxMovementScale;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC378", Offset = "0x3BC378")]
	public float movementOffset;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float minMovementOffset;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float maxMovementOffset;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC3B0", Offset = "0x3BC3B0")]
	public float grabAngle;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float minGrabAngle;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float maxGrabAngle;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC3E8", Offset = "0x3BC3E8")]
	public float zoom;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float minZoom;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float maxZoom;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC420", Offset = "0x3BC420")]
	public float depth;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float minDepth;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float maxDepth;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC458", Offset = "0x3BC458")]
	public Vector3 _updateVector;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Quaternion _updateRotation;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UnityEvent ProbeAddonOn;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UnityEvent ProbeAddonOff;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Grabber grabber;

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x8BEA24", Offset = "0x8BEA24", VA = "0x8BEA24")]
	private void Start()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x8BEAD4", Offset = "0x8BEAD4", VA = "0x8BEAD4")]
	private void LoadDefaultFromPrefs()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x8BEE34", Offset = "0x8BEE34", VA = "0x8BEE34")]
	private void Update()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x8BEE38", Offset = "0x8BEE38", VA = "0x8BEE38")]
	private void UpdateAnatomyPosRot()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x8BF4A0", Offset = "0x8BF4A0", VA = "0x8BF4A0")]
	public void SetCalibrationScale(float val)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x8BF4DC", Offset = "0x8BF4DC", VA = "0x8BF4DC")]
	public void SetCallibrationOffset(float val)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x8BF578", Offset = "0x8BF578", VA = "0x8BF578")]
	public void SetCallibrationAngle(float val)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x8BF5EC", Offset = "0x8BF5EC", VA = "0x8BF5EC")]
	public void SetDepth(float val)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x8BF664", Offset = "0x8BF664", VA = "0x8BF664")]
	public void SetZoom(float val)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x8BF718", Offset = "0x8BF718", VA = "0x8BF718")]
	public void SetBedPosition()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x8BF854", Offset = "0x8BF854", VA = "0x8BF854")]
	public void StopForcingDrop()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x8BF9F8", Offset = "0x8BF9F8", VA = "0x8BF9F8")]
	public void ToggleProbeAttached()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x8BEB80", Offset = "0x8BEB80", VA = "0x8BEB80")]
	public void ProbeAttachedOn()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x8BECDC", Offset = "0x8BECDC", VA = "0x8BECDC")]
	public void ProbeAttachedOff()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x8BFBA8", Offset = "0x8BFBA8", VA = "0x8BFBA8")]
	public void UpdateProbeIndicator()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x8BFCF0", Offset = "0x8BFCF0", VA = "0x8BFCF0")]
	public CSEAnatomyMover()
	{
	}
}
[Token(Token = "0x2000107")]
public class DopplerParticleEmitter : MonoBehaviour
{
	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC490", Offset = "0x3BC490")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BC490", Offset = "0x3BC490")]
	public GameObject ultrasoundProbe;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BC4F0", Offset = "0x3BC4F0")]
	public List<EmmisionPoint> flowArrows;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC528", Offset = "0x3BC528")]
	public int particlesCount;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float particleLifetime;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float zLeakWidth;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC560", Offset = "0x3BC560")]
	public float gain;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float frequencyScale;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float baseSize;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BC598", Offset = "0x3BC598")]
	private ParticleSystem dopplerParticleSystem;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystemRenderer particleRenderer;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.CustomDataModule customDataModule;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material ParticleMaterial;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector4> customDataFlowDirection;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x80671C", Offset = "0x80671C", VA = "0x80671C")]
	private void Start()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x806860", Offset = "0x806860", VA = "0x806860")]
	public void OnProbeRotationChanged()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x8068E0", Offset = "0x8068E0", VA = "0x8068E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x806E88", Offset = "0x806E88", VA = "0x806E88")]
	public void setParticleRateOverTime(float val)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x806ED0", Offset = "0x806ED0", VA = "0x806ED0")]
	public DopplerParticleEmitter()
	{
	}
}
[Token(Token = "0x2000108")]
public class EmmisionPoint : MonoBehaviour
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC5D0", Offset = "0x3BC5D0")]
	public Transform directionObject;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC608", Offset = "0x3BC608")]
	public float arrowRange;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float arrowRangeMultiplier;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float particleSizeMultiplier;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC640", Offset = "0x3BC640")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BC640", Offset = "0x3BC640")]
	public float flowStrength;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxRegionFlowStrength;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion directionRotation;

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x807734", Offset = "0x807734", VA = "0x807734")]
	public Quaternion CalculateRotationDirection()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x8077B4", Offset = "0x8077B4", VA = "0x8077B4")]
	public Quaternion GetRotationDirection()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x806D38", Offset = "0x806D38", VA = "0x806D38")]
	public Vector4 GetFlowVector()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x806DD0", Offset = "0x806DD0", VA = "0x806DD0")]
	public Vector4 GetPositionAndRange()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x8077C0", Offset = "0x8077C0", VA = "0x8077C0")]
	public float GetFlowStrength()
	{
		return default(float);
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x8077CC", Offset = "0x8077CC", VA = "0x8077CC")]
	public EmmisionPoint()
	{
	}
}
[Token(Token = "0x2000109")]
public class CuttingManager : MonoBehaviour
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC694", Offset = "0x3BC694")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BC694", Offset = "0x3BC694")]
	public NoiseManager noiseManager;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rotationReference;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Controller;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ControllerGO;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ultrasoundProbe;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject RawRaycasterLink;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject LaserIndicator;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC6F4", Offset = "0x3BC6F4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BC6F4", Offset = "0x3BC6F4")]
	public GameObject probeRotationAnchor;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BC754", Offset = "0x3BC754")]
	public GameObject probeOffsetAnchor;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC78C", Offset = "0x3BC78C")]
	public GameObject ProbeDummyOffsetAnchor;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ProbeDummyOffsetCenterLocation;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ProbeDummyRotationAnchor;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC7C4", Offset = "0x3BC7C4")]
	public float maxYRotation;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 deafultPosition;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 deafultRotation;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 deafultRotation_S1;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 deafultRotation_S2;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 deafultRotationOffset_S1;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 deafultRotationOffset_S2;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 deafultRotationOffset;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float strafeSpeed;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float probeRotation;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float probeRotationY;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool _interactive;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC7FC", Offset = "0x3BC7FC")]
	public OVRInput.Button triggerPressButton;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public OVRInput.Button touchpadPressButton;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public OVRInput.Touch touchpadTouch;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public OVRInput.Axis2D touchpadAxis;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool touchpadPressed;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool touchpadTouched;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	private bool touchpadTouchedFirst;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float maxPosition;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float minPosition;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool _cuttingOn;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	private bool _2dPlaneOn;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 _currentReferencePosition;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 _currentPosition;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC834", Offset = "0x3BC834")]
	public UnityEvent OnCuttingOn;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UnityEvent OnCuttingOff;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UnityEvent OnCuttingBlackPlaneOn;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public UnityEvent OnCuttingBlackPlaneOff;

	[Token(Token = "0x1700004B")]
	public bool Interactive
	{
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x8C9928", Offset = "0x8C9928", VA = "0x8C9928")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000536")]
		[Address(RVA = "0x8C9930", Offset = "0x8C9930", VA = "0x8C9930")]
		set
		{
		}
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x8C993C", Offset = "0x8C993C", VA = "0x8C993C")]
	public void SetProbeRotation()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x8C9940", Offset = "0x8C9940", VA = "0x8C9940")]
	public void ResetCuttingPositionRotation()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x8C9B88", Offset = "0x8C9B88", VA = "0x8C9B88")]
	public void ResetCuttingPositionRotationS1()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x8C9DD0", Offset = "0x8C9DD0", VA = "0x8C9DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x8C9DD4", Offset = "0x8C9DD4", VA = "0x8C9DD4")]
	public void ToggleCutting()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x8C9E70", Offset = "0x8C9E70", VA = "0x8C9E70")]
	public void ToggleUgBlackPlane()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x8C9EA8", Offset = "0x8C9EA8", VA = "0x8C9EA8")]
	public void TurnNoiseOn()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x8C9EAC", Offset = "0x8C9EAC", VA = "0x8C9EAC")]
	public void TurnNoiseOff()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x8C9EB0", Offset = "0x8C9EB0", VA = "0x8C9EB0")]
	public void ToggleNoise()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x8C9EB4", Offset = "0x8C9EB4", VA = "0x8C9EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x8CA6C0", Offset = "0x8CA6C0", VA = "0x8CA6C0")]
	public CuttingManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200010A")]
public class StringEvent : UnityEvent<string>
{
	[Token(Token = "0x6000542")]
	[Address(RVA = "0xFB36A0", Offset = "0xFB36A0", VA = "0xFB36A0")]
	public StringEvent()
	{
	}
}
[Token(Token = "0x200010B")]
public class HeartController : MonoBehaviour
{
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B913C", Offset = "0x3B913C")]
	private sealed class <SwithingHearts>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int heartID;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeartController <>4__this;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool silentMode;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool forceNoAudio;

		[Token(Token = "0x170001F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x5F8E44", Offset = "0x5F8E44", VA = "0x5F8E44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x5F8E8C", Offset = "0x5F8E8C", VA = "0x5F8E8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x5F86A4", Offset = "0x5F86A4", VA = "0x5F86A4")]
		[DebuggerHidden]
		public <SwithingHearts>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x5F86D0", Offset = "0x5F86D0", VA = "0x5F86D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x5F86D4", Offset = "0x5F86D4", VA = "0x5F86D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x5F8E4C", Offset = "0x5F8E4C", VA = "0x5F8E4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B914C", Offset = "0x3B914C")]
	private sealed class <DirectSpeedAdjustment>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeartController <>4__this;

		[Token(Token = "0x170001F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x5F8654", Offset = "0x5F8654", VA = "0x5F8654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x5F869C", Offset = "0x5F869C", VA = "0x5F869C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x5F8370", Offset = "0x5F8370", VA = "0x5F8370")]
		[DebuggerHidden]
		public <DirectSpeedAdjustment>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x5F839C", Offset = "0x5F839C", VA = "0x5F839C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x5F83A0", Offset = "0x5F83A0", VA = "0x5F83A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x5F865C", Offset = "0x5F865C", VA = "0x5F865C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC86C", Offset = "0x3BC86C")]
	public ReplayFreeze freezer;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC8A4", Offset = "0x3BC8A4")]
	public List<GameObject> hearts;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> heartLabels;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AudioSource> audioIntros;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<AudioSource> audioDescriptions;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> textDescriptions;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject heartFillLower;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject thymus;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject LabelScalingAnchor;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource heartBeat;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC8DC", Offset = "0x3BC8DC")]
	public float initialSpeedInBPM;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinBPM;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int MaxBPM;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BC914", Offset = "0x3BC914")]
	public float zeroValue;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BC924", Offset = "0x3BC924")]
	public float maxValue;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Animator currentHeartAnimator;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BC934", Offset = "0x3BC934")]
	public int currentHeartID;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float initialHeartbeatPitch;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float initialAnimationSpeed;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float animationCoefficient;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _targetHeartBeatSpeed;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float _currentHeartBeatSpeed;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int _currentHeartBeatSpeedInBPM;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RuntimeAnimatorController ac;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool adjustingSpeed;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool _dopplerOn;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool _labelsOn;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC944", Offset = "0x3BC944")]
	public StringEvent CurrentBpmEmit;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public StringEvent CurrentHeartEmit;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnLabelsOn;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnLabelsOff;

	[Token(Token = "0x1700004C")]
	public float HeartBeatSpeed
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x9AE624", Offset = "0x9AE624", VA = "0x9AE624")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x9AE62C", Offset = "0x9AE62C", VA = "0x9AE62C")]
		set
		{
		}
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x9AE710", Offset = "0x9AE710", VA = "0x9AE710")]
	public void SetHeartBeatSpeed01(float value)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x9AE724", Offset = "0x9AE724", VA = "0x9AE724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x9AE784", Offset = "0x9AE784", VA = "0x9AE784")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C567C", Offset = "0x3C567C")]
	public IEnumerator SwithingHearts(int heartID, bool silentMode = false, bool forceNoAudio = false)
	{
		return null;
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x9AE820", Offset = "0x9AE820", VA = "0x9AE820")]
	public void SetTrueHeartBeatSpeed()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x9AE828", Offset = "0x9AE828", VA = "0x9AE828")]
	public void TurnOffAllForQuiz()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x9AE91C", Offset = "0x9AE91C", VA = "0x9AE91C")]
	public void SwitchToHeart(int heartID)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x9AEA04", Offset = "0x9AEA04", VA = "0x9AEA04")]
	public void SwitchToHeart(int heartID, bool silentMode = false, bool forceNoAudio = false)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x9AEAFC", Offset = "0x9AEAFC", VA = "0x9AEAFC")]
	public void PlayCurrentHeartIntro()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x9AED24", Offset = "0x9AED24", VA = "0x9AED24")]
	private void PlayCurrentHeartIntroInvokable()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x9AED98", Offset = "0x9AED98", VA = "0x9AED98")]
	public void PlayCurrentHeartIDescription()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x9AEFDC", Offset = "0x9AEFDC", VA = "0x9AEFDC")]
	public void ToggleDoppler()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x9AF198", Offset = "0x9AF198", VA = "0x9AF198")]
	public void ToggleLabels()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x9AF3A4", Offset = "0x9AF3A4", VA = "0x9AF3A4")]
	public void fixGcCollect()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x9AF400", Offset = "0x9AF400", VA = "0x9AF400")]
	public void NextHeart()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x9AE69C", Offset = "0x9AE69C", VA = "0x9AE69C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C56E4", Offset = "0x3C56E4")]
	private IEnumerator DirectSpeedAdjustment()
	{
		return null;
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x9AF410", Offset = "0x9AF410", VA = "0x9AF410")]
	public void ChangeHeartbeatSpeed()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x9AF508", Offset = "0x9AF508", VA = "0x9AF508")]
	public HeartController()
	{
	}
}
[Serializable]
[Token(Token = "0x200010C")]
public class SectionSetncilChannels
{
	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int HeartChannel;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int OrgansSoftChannel;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int OrgansBonesChannel;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int BabyChannel;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int HeartInsideChannel;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int OrgansInsideChannel;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ExternalChannel;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xFA6F74", Offset = "0xFA6F74", VA = "0xFA6F74")]
	public SectionSetncilChannels()
	{
	}
}
[Token(Token = "0x200010D")]
public class MaterialManager : MonoBehaviour
{
	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NoiseManager noiseManager;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FilterTest blurEngine;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera vrCamera;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera noiseCamera;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC97C", Offset = "0x3BC97C")]
	public ColorScheme ColorScheme3d;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ColorScheme ColorSchemeNoise;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ColorScheme ColorScheme2dClean;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC9B4", Offset = "0x3BC9B4")]
	public Renderer HeartRenderer;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Renderer OrgansRenderer;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer[] usgScreenRenderers;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer[] usgConeFillRenderers;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BC9EC", Offset = "0x3BC9EC")]
	public SectionSetncilChannels stencilChannels;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCA24", Offset = "0x3BCA24")]
	public SectionShaderQueue shaderOrderNoise;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SectionShaderQueue shaderOrderClean;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _noiseOn;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool _3dOn;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool _blurOn;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _currentBlur;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int HeartOutsideOrder;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int HeartInsideOrder;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int OrganSoftOrder;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int OrganLiverOrder;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int OrganInsideOrder;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int OrganBoneOrder;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int HatchHeartOrder;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int HatchOrgansOrder;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int HatchBonesOrder;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int HatchBabyOrder;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int HatchExternalOrder;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Renderer[] screenSolidUSG;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Renderer[] screenTransparentUSG;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Renderer[] babyMeshes;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject noiseCamerObject;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int vrCameraMask;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int noiseCameraMask;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x987B0C", Offset = "0x987B0C", VA = "0x987B0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x987B70", Offset = "0x987B70", VA = "0x987B70")]
	private void SetMode(ColorScheme scheme)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x988170", Offset = "0x988170", VA = "0x988170")]
	public void SetNoise()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x9882D0", Offset = "0x9882D0", VA = "0x9882D0")]
	public void SetClean()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x98835C", Offset = "0x98835C", VA = "0x98835C")]
	public void ToggleBlur()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x988394", Offset = "0x988394", VA = "0x988394")]
	public void Set3d()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x9884F4", Offset = "0x9884F4", VA = "0x9884F4")]
	public MaterialManager()
	{
	}
}
[Token(Token = "0x200010E")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B8220", Offset = "0x3B8220")]
public class NoiseManager : MonoBehaviour
{
	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCA5C", Offset = "0x3BCA5C")]
	public Renderer HeartRendererForTransform;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] HeartRenderers;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer ScreenRendererForTransform;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve BackgroundNoiseCurve;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve BalanceNoiseCurve;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve GainNoiseCurve;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCA94", Offset = "0x3BCA94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCA94", Offset = "0x3BCA94")]
	public float NoiseScale;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCAEC", Offset = "0x3BCAEC")]
	public float BlurScale;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCB04", Offset = "0x3BCB04")]
	public float BackgroundNoise;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCB1C", Offset = "0x3BCB1C")]
	public float GainNoise;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCB34", Offset = "0x3BCB34")]
	public float BalanceNoise;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCB4C", Offset = "0x3BCB4C")]
	public float Gain;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCB64", Offset = "0x3BCB64")]
	public NoiseParameters parameters;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCB9C", Offset = "0x3BCB9C")]
	public Material Section_HeartNoise;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material Section_OrgansSoftNoise;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material Section_OrgansBonesNoise;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material Section_BabyNoise;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material Section_ExternalNoise;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material USG_ConeFillOrgans;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _currentNoiseScale;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float _currentBlurScale;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _currentNoiseGain;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _currentNoiseBackgounrd;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _currentNoiseBalance;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _currentGain;

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xDA0E90", Offset = "0xDA0E90", VA = "0xDA0E90")]
	public void SetGain(float val)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xDA131C", Offset = "0xDA131C", VA = "0xDA131C")]
	public void SetNoiseScale(float val)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xDA138C", Offset = "0xDA138C", VA = "0xDA138C")]
	public void SetNoiseBalance(float val)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xDA13B0", Offset = "0xDA13B0", VA = "0xDA13B0")]
	public void SetNoiseGain(float val)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xDA13D4", Offset = "0xDA13D4", VA = "0xDA13D4")]
	public void SetNoiseBackground(float val)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xDA13F8", Offset = "0xDA13F8", VA = "0xDA13F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xDA0FB0", Offset = "0xDA0FB0", VA = "0xDA0FB0")]
	public void UpdateAllNoiseParameters()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xDA143C", Offset = "0xDA143C", VA = "0xDA143C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xDA1518", Offset = "0xDA1518", VA = "0xDA1518")]
	public NoiseManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200010F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x3B8230", Offset = "0x3B8230")]
public class NoiseParameters : ScriptableObject
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string noiseSchemeFor;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCBD4", Offset = "0x3BCBD4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCBD4", Offset = "0x3BCBD4")]
	public float NoiseGain_main;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCC28", Offset = "0x3BCC28")]
	public float NoiseBalance_main;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCC40", Offset = "0x3BCC40")]
	public float NoiseBackground_main;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCC58", Offset = "0x3BCC58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCC58", Offset = "0x3BCC58")]
	public float NoiseGain_Heart;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCCAC", Offset = "0x3BCCAC")]
	public float NoiseGain_Organs;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCCC4", Offset = "0x3BCCC4")]
	public float NoiseGain_Bones;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCCDC", Offset = "0x3BCCDC")]
	public float NoiseGain_Baby;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCCF4", Offset = "0x3BCCF4")]
	public float NoiseGain_External;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCD0C", Offset = "0x3BCD0C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCD0C", Offset = "0x3BCD0C")]
	public float NoiseBalance_Heart;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCD60", Offset = "0x3BCD60")]
	public float NoiseBalance_Organs;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCD78", Offset = "0x3BCD78")]
	public float NoiseBalance_Bones;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCD90", Offset = "0x3BCD90")]
	public float NoiseBalance_Baby;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCDA8", Offset = "0x3BCDA8")]
	public float NoiseBalance_External;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCDC0", Offset = "0x3BCDC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCDC0", Offset = "0x3BCDC0")]
	public float NoiseBackground_Heart;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCE14", Offset = "0x3BCE14")]
	public float NoiseBackground_Organs;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCE2C", Offset = "0x3BCE2C")]
	public float NoiseBackground_Bones;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCE44", Offset = "0x3BCE44")]
	public float NoiseBackground_Baby;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCE5C", Offset = "0x3BCE5C")]
	public float NoiseBackground_External;

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xDA1538", Offset = "0xDA1538", VA = "0xDA1538")]
	public NoiseParameters()
	{
	}
}
[Token(Token = "0x2000110")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x3B827C", Offset = "0x3B827C")]
public class SectionShaderQueue : ScriptableObject
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCE74", Offset = "0x3BCE74")]
	public int OrgansSectionQueue;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int BonesSectionQueue;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int HeartSectionQueue;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int BabySectionQueue;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ExternalSectionQueue;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCEAC", Offset = "0x3BCEAC")]
	public int HeartMeshInsideQueue;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int HeartMeshQueue;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int OrgansMeshQueue;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int BonesMeshQueue;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int LiverMeshQueue;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int LiverMeshInsideQueue;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int BabyMeshQueue;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int BabyMeshInsideQueue;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int USGExternalQueue;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int USGConeQueue;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int ScreenRenderingQueue;

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xFA74A4", Offset = "0xFA74A4", VA = "0xFA74A4")]
	public SectionShaderQueue()
	{
	}
}
[Token(Token = "0x2000111")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B82C8", Offset = "0x3B82C8")]
public class FilterTest : MonoBehaviour
{
	[Token(Token = "0x2000332")]
	private enum DownSampleMode
	{
		[Token(Token = "0x40013C5")]
		Off,
		[Token(Token = "0x40013C6")]
		Half,
		[Token(Token = "0x40013C7")]
		Quarter
	}

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Shader _shader;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DownSampleMode _downSampleMode;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BCF04", Offset = "0x3BCF04")]
	private int _iteration;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _material;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x8091F4", Offset = "0x8091F4", VA = "0x8091F4")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x809594", Offset = "0x809594", VA = "0x809594")]
	public FilterTest()
	{
	}
}
[Token(Token = "0x2000112")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B82D8", Offset = "0x3B82D8")]
public class SimpleBlit : MonoBehaviour
{
	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Texture2D _baseTexture;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xFA8600", Offset = "0xFA8600", VA = "0xFA8600")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xFA8678", Offset = "0xFA8678", VA = "0xFA8678")]
	public SimpleBlit()
	{
	}
}
[Token(Token = "0x2000113")]
public class MovementManager : MonoBehaviour
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string still_str;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string small_str;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string medium_str;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string active_set;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StringEvent OnCurrentMovementSetChange;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PlayableDirector> tracks;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isRecording;

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x98A1D4", Offset = "0x98A1D4", VA = "0x98A1D4")]
	public void ChangeActiveTimelineSet(float val)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x98AA94", Offset = "0x98AA94", VA = "0x98AA94")]
	public void SetRandomMovement()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x98AB74", Offset = "0x98AB74", VA = "0x98AB74")]
	public void SetNoMovement()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x98AC14", Offset = "0x98AC14", VA = "0x98AC14")]
	public void PlayingTimelinesBack()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x98ADF8", Offset = "0x98ADF8", VA = "0x98ADF8")]
	public void NormalMode()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x98A52C", Offset = "0x98A52C", VA = "0x98A52C")]
	private void SwitchTimeline()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x98AFE8", Offset = "0x98AFE8", VA = "0x98AFE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x98AFF0", Offset = "0x98AFF0", VA = "0x98AFF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x98AFF4", Offset = "0x98AFF4", VA = "0x98AFF4")]
	public MovementManager()
	{
	}
}
[Token(Token = "0x2000114")]
public class IntroMenuManager : MonoBehaviour
{
	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LogoCanvas;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioIntroSource;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MainStartButton;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SmallTutorialButton;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject TutorialStartButton;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject SkipTutorialButton;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent GoToNextScene;

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x97B9B8", Offset = "0x97B9B8", VA = "0x97B9B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x97BAA4", Offset = "0x97BAA4", VA = "0x97BAA4")]
	public void ReadIntro()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x97BB00", Offset = "0x97BB00", VA = "0x97BB00")]
	private void ReadIntroInvokable()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x97BB94", Offset = "0x97BB94", VA = "0x97BB94")]
	public void StartWithTutorial()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x97BC30", Offset = "0x97BC30", VA = "0x97BC30")]
	public void StartWithoutTutorial()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x97BCCC", Offset = "0x97BCCC", VA = "0x97BCCC")]
	public IntroMenuManager()
	{
	}
}
[Token(Token = "0x2000115")]
public class UIElementHoverHighlight : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isOver;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isPressed;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<RectTransform> elementsToRaise;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> elementsToHide;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Image> highlightImage;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Text> highlightText;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Animator> animatorsToAnim;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource hoverSound;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip hoverClip;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip onClip;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip offClip;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string hoverEnterAnimName;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string hoverExitAnimName;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float raiseElementsUpBy;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool soundPlayed;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool isHovering;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UnityEngine.UI.Button thisButton;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xFC158C", Offset = "0xFC158C", VA = "0xFC158C")]
	private void Start()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xFC15F0", Offset = "0xFC15F0", VA = "0xFC15F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xFC15F4", Offset = "0xFC15F4", VA = "0xFC15F4")]
	public void HideTexts()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xFC1710", Offset = "0xFC1710", VA = "0xFC1710")]
	public void ResetPositions()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xFC1CE4", Offset = "0xFC1CE4", VA = "0xFC1CE4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xFC244C", Offset = "0xFC244C", VA = "0xFC244C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xFC2AC4", Offset = "0xFC2AC4", VA = "0xFC2AC4")]
	public void InvokeClick()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xFC2FB0", Offset = "0xFC2FB0", VA = "0xFC2FB0", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xFC3214", Offset = "0xFC3214", VA = "0xFC3214", Slot = "7")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xFC1CE8", Offset = "0xFC1CE8", VA = "0xFC1CE8")]
	public void HoverStart()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xFC2450", Offset = "0xFC2450", VA = "0xFC2450")]
	public void HoverEnd()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xFC2C5C", Offset = "0xFC2C5C", VA = "0xFC2C5C")]
	public void ClickEnd()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xFC3218", Offset = "0xFC3218", VA = "0xFC3218")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xFC37EC", Offset = "0xFC37EC", VA = "0xFC37EC")]
	public UIElementHoverHighlight()
	{
	}
}
[Token(Token = "0x2000116")]
public class ReplayTimelinesRecorder : ReplayRecordableBehaviour
{
	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayableDirector[] timelines;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 stateWriter;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int iHolder;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x95B93C", Offset = "0x95B93C", VA = "0x95B93C", Slot = "20")]
	public override void OnReplaySerialize(ReplayState state)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x95BA04", Offset = "0x95BA04", VA = "0x95BA04", Slot = "19")]
	public override void OnReplayDeserialize(ReplayState state)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x95BA88", Offset = "0x95BA88", VA = "0x95BA88")]
	public ReplayTimelinesRecorder()
	{
	}
}
[Token(Token = "0x2000117")]
public class Scripts : MonoBehaviour
{
	[Token(Token = "0x600058E")]
	[Address(RVA = "0xFA6BB8", Offset = "0xFA6BB8", VA = "0xFA6BB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xFA6BBC", Offset = "0xFA6BBC", VA = "0xFA6BBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xFA6BC0", Offset = "0xFA6BC0", VA = "0xFA6BC0")]
	public Scripts()
	{
	}
}
[Token(Token = "0x2000118")]
public class GeometrySettings : MonoBehaviour
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 UsgReferenceDefaultPosition;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PanelDefaultPositionRight;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PanelDefaultPositionLeft;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject BedDefaultPositionRight;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject BedDefaultPositionLeft;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Console;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Bed;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SnapZone probeSnapZone;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Grabbable usgProbe;

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x80B8A0", Offset = "0x80B8A0", VA = "0x80B8A0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x80B8A4", Offset = "0x80B8A4", VA = "0x80B8A4")]
	private void LoadDefaultFromPrefs()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x80BA94", Offset = "0x80BA94", VA = "0x80BA94")]
	public void SetDefaultLeft()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x80B954", Offset = "0x80B954", VA = "0x80B954")]
	public void SetDefaultRight()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x80BBD4", Offset = "0x80BBD4", VA = "0x80BBD4")]
	public GeometrySettings()
	{
	}
}
[Token(Token = "0x2000119")]
public enum UsgProbeOrientation
{
	[Token(Token = "0x40006BF")]
	Normal,
	[Token(Token = "0x40006C0")]
	Reverse
}
[Token(Token = "0x200011A")]
public enum UsgProbeAddonPresent
{
	[Token(Token = "0x40006C2")]
	Present,
	[Token(Token = "0x40006C3")]
	Bare
}
[Token(Token = "0x200011B")]
public enum BedOrientation
{
	[Token(Token = "0x40006C5")]
	Left,
	[Token(Token = "0x40006C6")]
	Right
}
[Token(Token = "0x200011C")]
public class PrefController : SingletonMonoBehaviour<PrefController>
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExperienceLanguage defaultLanguage;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UsgProbeAddonPresent defaultAddon;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BedOrientation defaultBed;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool defaultTutorialDone;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string addonKey;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string bedKey;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string languageKey;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string tutorialKey;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string shortQuizKey;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string quiz1minuteScoreKey;

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xFD38AC", Offset = "0xFD38AC", VA = "0xFD38AC")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xFD3900", Offset = "0xFD3900", VA = "0xFD3900")]
	private void Update()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xFD3904", Offset = "0xFD3904", VA = "0xFD3904")]
	public UsgProbeAddonPresent LoadUsgProbeAddon()
	{
		return default(UsgProbeAddonPresent);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xFD39F0", Offset = "0xFD39F0", VA = "0xFD39F0")]
	public void Set1minuteQuizeScoreToPlayerPrefs(int score)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xFD3A68", Offset = "0xFD3A68", VA = "0xFD3A68")]
	public int Load1minuteScore()
	{
		return default(int);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xFD3B40", Offset = "0xFD3B40", VA = "0xFD3B40")]
	public void SetBedToPlayerPrefs_Right()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xFD3BAC", Offset = "0xFD3BAC", VA = "0xFD3BAC")]
	public void SetBedToPlayerPrefs_Left()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xFD3C18", Offset = "0xFD3C18", VA = "0xFD3C18")]
	public BedOrientation LoadBedStatus()
	{
		return default(BedOrientation);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xFD3D04", Offset = "0xFD3D04", VA = "0xFD3D04")]
	public void SetAddonToPlayerPrefs_PRESENT()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xFD3D70", Offset = "0xFD3D70", VA = "0xFD3D70")]
	public void SetAddonToPlayerPrefs_BARE()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xFD3DDC", Offset = "0xFD3DDC", VA = "0xFD3DDC")]
	public UsgProbeAddonPresent LoadAddonStatus()
	{
		return default(UsgProbeAddonPresent);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xFD3EC8", Offset = "0xFD3EC8", VA = "0xFD3EC8")]
	public ExperienceLanguage LoadLanguage()
	{
		return default(ExperienceLanguage);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xFD401C", Offset = "0xFD401C", VA = "0xFD401C")]
	public void SetLanguageToPlayerPrefs_PL()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xFD4088", Offset = "0xFD4088", VA = "0xFD4088")]
	public void SetLanguageToPlayerPrefs_ENG()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xFD40F4", Offset = "0xFD40F4", VA = "0xFD40F4")]
	public void SetLanguageToPlayerPrefs_DE()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xFD4160", Offset = "0xFD4160", VA = "0xFD4160")]
	public void SetLanguageToPlayerPrefs_RO()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xFD41CC", Offset = "0xFD41CC", VA = "0xFD41CC")]
	public void SetTutorialDoneToPlayerPrefs()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xFD4238", Offset = "0xFD4238", VA = "0xFD4238")]
	public void SetTutorialNotDoneToPlayerPrefs()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xFD42A4", Offset = "0xFD42A4", VA = "0xFD42A4")]
	public bool LoadTutorialIsDone()
	{
		return default(bool);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xFD43BC", Offset = "0xFD43BC", VA = "0xFD43BC")]
	public PrefController()
	{
	}
}
[Token(Token = "0x200011D")]
public class distanceAdjuster : MonoBehaviour
{
	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float angulationCalibration;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxAngulationCalibration;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform probeDistancer;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform anatomyAnchor;

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x5EF4A4", Offset = "0x5EF4A4", VA = "0x5EF4A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x5EF4A8", Offset = "0x5EF4A8", VA = "0x5EF4A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x5EF4AC", Offset = "0x5EF4AC", VA = "0x5EF4AC")]
	public void setAngulationCalibrationPercentage(float val)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x5EF4C8", Offset = "0x5EF4C8", VA = "0x5EF4C8")]
	public distanceAdjuster()
	{
	}
}
[Token(Token = "0x200011E")]
public class HeartilyDefinitions : MonoBehaviour
{
	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float CASD;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x9AF528", Offset = "0x9AF528", VA = "0x9AF528")]
	public HeartilyDefinitions()
	{
	}
}
[Token(Token = "0x200011F")]
public class SingleHeartController : MonoBehaviour
{
	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _dopplerOn;

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xFAA100", Offset = "0xFAA100", VA = "0xFAA100")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xFAA104", Offset = "0xFAA104", VA = "0xFAA104")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xFAA108", Offset = "0xFAA108", VA = "0xFAA108")]
	public void ToogleColorDoppler()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xFAA10C", Offset = "0xFAA10C", VA = "0xFAA10C")]
	public void ToggleLabels()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xFAA110", Offset = "0xFAA110", VA = "0xFAA110")]
	public SingleHeartController()
	{
	}
}
namespace xHolobits
{
	[Serializable]
	[Token(Token = "0x2000120")]
	public enum ExperienceLanguage
	{
		[Token(Token = "0x40006D8")]
		ENG,
		[Token(Token = "0x40006D9")]
		PL,
		[Token(Token = "0x40006DA")]
		DE,
		[Token(Token = "0x40006DB")]
		RO,
		[Token(Token = "0x40006DC")]
		NULL
	}
	[Token(Token = "0x2000121")]
	public class LocalizationManager : SingletonMonoBehaviour<LocalizationManager>
	{
		[Token(Token = "0x2000333")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B915C", Offset = "0x3B915C")]
		private sealed class <LoadLocalizedTextOnAndroid>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizationManager <>4__this;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string fileName;

			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170001FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012FB")]
				[Address(RVA = "0x5F9C98", Offset = "0x5F9C98", VA = "0x5F9C98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012FD")]
				[Address(RVA = "0x5F9CE0", Offset = "0x5F9CE0", VA = "0x5F9CE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x5F98A4", Offset = "0x5F98A4", VA = "0x5F98A4")]
			[DebuggerHidden]
			public <LoadLocalizedTextOnAndroid>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x5F98D0", Offset = "0x5F98D0", VA = "0x5F98D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x5F98D4", Offset = "0x5F98D4", VA = "0x5F98D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x5F9CA0", Offset = "0x5F9CA0", VA = "0x5F9CA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ApplyLocalizationOnAwake;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ExperienceLanguage appLanguage;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCF54", Offset = "0x3BCF54")]
		private string localisationFileNameEng;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCFA0", Offset = "0x3BCFA0")]
		private string localisationFileNamePl;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BCFEC", Offset = "0x3BCFEC")]
		private string localisationFileNameRo;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD038", Offset = "0x3BD038")]
		private string localisationFileNameDe;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, string> _localizedText;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isReady;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string missingTextString;

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x981C28", Offset = "0x981C28", VA = "0x981C28")]
		private new void Awake()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x981CA4", Offset = "0x981CA4", VA = "0x981CA4")]
		public void ApplyLocalization()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x981CEC", Offset = "0x981CEC", VA = "0x981CEC")]
		public void SetLanguageFromFile(string fileName)
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x981DFC", Offset = "0x981DFC", VA = "0x981DFC")]
		public void LoadLocalizedText(string fileName)
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x982310", Offset = "0x982310", VA = "0x982310")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C574C", Offset = "0x3C574C")]
		private IEnumerator LoadLocalizedTextOnAndroid(string fileName)
		{
			return null;
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x9820D4", Offset = "0x9820D4", VA = "0x9820D4")]
		private void LocalizeApplicationElements()
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x982D44", Offset = "0x982D44", VA = "0x982D44")]
		public string GetLocalizedTextValue(string key)
		{
			return null;
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x982E0C", Offset = "0x982E0C", VA = "0x982E0C")]
		public bool GetLocalisationIsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x982E14", Offset = "0x982E14", VA = "0x982E14")]
		public LocalizationManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000122")]
	public class StringAudioDictionary : SerializableDictionary<string, AudioClip>
	{
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xFB35F8", Offset = "0xFB35F8", VA = "0xFB35F8")]
		public StringAudioDictionary()
		{
		}
	}
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B82E8", Offset = "0x3B82E8")]
	public class LocalizedAudio : MonoBehaviour
	{
		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD084", Offset = "0x3BD084")]
		public StringAudioDictionary languageKeyAudioDictionary;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource _AudioSource;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource temp;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioClip ac;

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x982F38", Offset = "0x982F38", VA = "0x982F38")]
		private void Start()
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x982950", Offset = "0x982950", VA = "0x982950")]
		public void SetAudio()
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x983000", Offset = "0x983000", VA = "0x983000")]
		public void PlayAudio()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x9830AC", Offset = "0x9830AC", VA = "0x9830AC")]
		public void StopAudio()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x983148", Offset = "0x983148", VA = "0x983148")]
		public LocalizedAudio()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000124")]
	public class StringGameObjectDictionary : SerializableDictionary<string, GameObject>
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xFB3724", Offset = "0xFB3724", VA = "0xFB3724")]
		public StringGameObjectDictionary()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class LocalizedOverlay : MonoBehaviour
	{
		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD0BC", Offset = "0x3BD0BC")]
		public StringGameObjectDictionary languageKeyTextureDictionary;

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x983150", Offset = "0x983150", VA = "0x983150")]
		private void Start()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x982390", Offset = "0x982390", VA = "0x982390")]
		public void SetTexture()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x9831F4", Offset = "0x9831F4", VA = "0x9831F4")]
		public LocalizedOverlay()
		{
		}
	}
	[Token(Token = "0x2000126")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B8350", Offset = "0x3B8350")]
	public class LocalizedText : MonoBehaviour
	{
		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD0F4", Offset = "0x3BD0F4")]
		public string key;

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x9831FC", Offset = "0x9831FC", VA = "0x9831FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x982388", Offset = "0x982388", VA = "0x982388")]
		public void SetText()
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x9832A4", Offset = "0x9832A4", VA = "0x9832A4")]
		public void SetTextThroughKey(string k)
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x9833F0", Offset = "0x9833F0", VA = "0x9833F0")]
		public LocalizedText()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class LocalizedTextLinked : MonoBehaviour
	{
		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD12C", Offset = "0x3BD12C")]
		public Text text;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD164", Offset = "0x3BD164")]
		public string key;

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x9833F8", Offset = "0x9833F8", VA = "0x9833F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x983504", Offset = "0x983504", VA = "0x983504")]
		public void SetText()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x98350C", Offset = "0x98350C", VA = "0x98350C")]
		public void SetTextThroughKey(string k)
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x98362C", Offset = "0x98362C", VA = "0x98362C")]
		public LocalizedTextLinked()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public static class hbMath
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x5EF4DC", Offset = "0x5EF4DC", VA = "0x5EF4DC")]
		public static Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x5EF544", Offset = "0x5EF544", VA = "0x5EF544")]
		public static float SignedDistancePlanePoint(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x5EF570", Offset = "0x5EF570", VA = "0x5EF570")]
		public static Vector3 SetVectorLength(Vector3 vector, float size)
		{
			return default(Vector3);
		}
	}
}
namespace xHolobits.VR
{
	[Token(Token = "0x2000129")]
	public class VRSceneFadeIn : MonoBehaviour
	{
		[Token(Token = "0x2000334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B916C", Offset = "0x3B916C")]
		private sealed class <FadeIn>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRSceneFadeIn <>4__this;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Color <col>5__3;

			[Token(Token = "0x170001FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001301")]
				[Address(RVA = "0x88FF08", Offset = "0x88FF08", VA = "0x88FF08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001303")]
				[Address(RVA = "0x88FF50", Offset = "0x88FF50", VA = "0x88FF50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x88FD38", Offset = "0x88FD38", VA = "0x88FD38")]
			[DebuggerHidden]
			public <FadeIn>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x88FD64", Offset = "0x88FD64", VA = "0x88FD64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001300")]
			[Address(RVA = "0x88FD68", Offset = "0x88FD68", VA = "0x88FD68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001302")]
			[Address(RVA = "0x88FF10", Offset = "0x88FF10", VA = "0x88FF10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DestroyOnFadeIn;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BD19C", Offset = "0x3BD19C")]
		public float FadeTime;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD1D4", Offset = "0x3BD1D4")]
		public Material fadeMaterial;

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x5E9240", Offset = "0x5E9240", VA = "0x5E9240")]
		private void Start()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x5E92F8", Offset = "0x5E92F8", VA = "0x5E92F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C57B4", Offset = "0x3C57B4")]
		private IEnumerator FadeIn()
		{
			return null;
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x5E936C", Offset = "0x5E936C", VA = "0x5E936C")]
		public VRSceneFadeIn()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012A")]
	public class SceneLoadingProgressEvent : UnityEvent<float>
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xFA59F0", Offset = "0xFA59F0", VA = "0xFA59F0")]
		public SceneLoadingProgressEvent()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class VrSceneLoader : MonoBehaviour
	{
		[Token(Token = "0x2000335")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B917C", Offset = "0x3B917C")]
		private sealed class <LoadNextScene>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VrSceneLoader <>4__this;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Color <col>5__3;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperation <async>5__4;

			[Token(Token = "0x170001FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001307")]
				[Address(RVA = "0x89354C", Offset = "0x89354C", VA = "0x89354C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000200")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001309")]
				[Address(RVA = "0x893594", Offset = "0x893594", VA = "0x893594", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001304")]
			[Address(RVA = "0x8930EC", Offset = "0x8930EC", VA = "0x8930EC")]
			[DebuggerHidden]
			public <LoadNextScene>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001305")]
			[Address(RVA = "0x893118", Offset = "0x893118", VA = "0x893118", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001306")]
			[Address(RVA = "0x89311C", Offset = "0x89311C", VA = "0x89311C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001308")]
			[Address(RVA = "0x893554", Offset = "0x893554", VA = "0x893554", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD20C", Offset = "0x3BD20C")]
		public bool recenterOnLoad;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BD244", Offset = "0x3BD244")]
		public string nextSceneName;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BD27C", Offset = "0x3BD27C")]
		public float nextSceneFadeTime;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD2B4", Offset = "0x3BD2B4")]
		public Material fadeMaterial;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject fadeOutSphereToInstantiate;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD2EC", Offset = "0x3BD2EC")]
		public OVROverlay compositorLayerOverlay;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD324", Offset = "0x3BD324")]
		public List<GameObject> objectsToHide;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SceneLoadingProgressEvent OnSceneLoadingProgress;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool firstRecenter;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isLoading;

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x5ED15C", Offset = "0x5ED15C", VA = "0x5ED15C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x5ED1FC", Offset = "0x5ED1FC", VA = "0x5ED1FC")]
		public void Start()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x5ED268", Offset = "0x5ED268", VA = "0x5ED268")]
		public void RecenterPose()
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x5ED310", Offset = "0x5ED310", VA = "0x5ED310")]
		public void InvokeLoadNextScene()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x5ED3EC", Offset = "0x5ED3EC", VA = "0x5ED3EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C581C", Offset = "0x3C581C")]
		private IEnumerator LoadNextScene()
		{
			return null;
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x5ED460", Offset = "0x5ED460", VA = "0x5ED460")]
		private void Update()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x5ED57C", Offset = "0x5ED57C", VA = "0x5ED57C")]
		public VrSceneLoader()
		{
		}
	}
}
namespace xHolobits.VR.Helpers
{
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B83B8", Offset = "0x3B83B8")]
	public class ViewImporter : MonoBehaviour
	{
		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GuideGroupManager guideManager;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject guidePlanesAnchor;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float guideThickness;

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x5EBC04", Offset = "0x5EBC04", VA = "0x5EBC04")]
		public void RebuildIndicatorList()
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x5EBE4C", Offset = "0x5EBE4C", VA = "0x5EBE4C")]
		public void ClearAllCollidersAndTrackers()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x5EBFE8", Offset = "0x5EBFE8", VA = "0x5EBFE8")]
		public void BuildAllColliderBalls()
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x5EC16C", Offset = "0x5EC16C", VA = "0x5EC16C")]
		public void BuildColliderBall(GameObject viewPlane)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x5EC698", Offset = "0x5EC698", VA = "0x5EC698")]
		public ViewImporter()
		{
		}
	}
}
namespace xHolobits.VR.UI
{
	[Token(Token = "0x200012D")]
	public class LabelColliderMechanics : MonoBehaviour
	{
		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LabelStaticController labelController;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider selfCollider;

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x97D35C", Offset = "0x97D35C", VA = "0x97D35C")]
		private void Start()
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x97D3B8", Offset = "0x97D3B8", VA = "0x97D3B8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x97D44C", Offset = "0x97D44C", VA = "0x97D44C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x97D56C", Offset = "0x97D56C", VA = "0x97D56C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x97D65C", Offset = "0x97D65C", VA = "0x97D65C")]
		public LabelColliderMechanics()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class LabelController : LabelStaticController
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD35C", Offset = "0x3BD35C")]
		public GameObject DescriptionAnchor;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject HeartMiddlePoint;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD394", Offset = "0x3BD394")]
		public float minPosOffset;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float offsetMagnification;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float z_offsetMagnification;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 arrowDirectionVector;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 initialDescriptionAnchor;

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x97D664", Offset = "0x97D664", VA = "0x97D664")]
		private void Start()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x97D774", Offset = "0x97D774", VA = "0x97D774", Slot = "4")]
		public override void UpdateLabel(GameObject currentCuttingPlane, Collider selfCollider)
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x97E15C", Offset = "0x97E15C", VA = "0x97E15C")]
		public LabelController()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class LabelStaticController : MonoBehaviour
	{
		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD3CC", Offset = "0x3BD3CC")]
		public int LabelsCollisionLayer;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD404", Offset = "0x3BD404")]
		public GameObject Label;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject LineLabelAnchor;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ParentForCanvases;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BD43C", Offset = "0x3BD43C")]
		public GameObject[] AreaCollider;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD474", Offset = "0x3BD474")]
		public Collider ActiveCollider;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD484", Offset = "0x3BD484")]
		public float colliderRadius;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float planeOffset;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float upScale;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minScale;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve ScalingBehaviourCurve;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3 cuttingPlaneNormal;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Vector3 temp;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float distanceTriggerToPoint;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool _isActive;

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x97E1A8", Offset = "0x97E1A8", VA = "0x97E1A8")]
		public void SetActive(bool val)
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x97E1B4", Offset = "0x97E1B4", VA = "0x97E1B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x97D3E0", Offset = "0x97D3E0", VA = "0x97D3E0")]
		public void OnColliderTriggerEnter(Collider selfCollider, Collider other)
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x97D474", Offset = "0x97D474", VA = "0x97D474")]
		public void OnColliderTriggerStay(Collider selfCollider, Collider other)
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x97D594", Offset = "0x97D594", VA = "0x97D594")]
		public void OnColliderTriggerExit(Collider selfCollider, Collider other)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x97E2FC", Offset = "0x97E2FC", VA = "0x97E2FC", Slot = "4")]
		public virtual void UpdateLabel(GameObject currentCuttingPlane, Collider selfCollider)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x97E2D0", Offset = "0x97E2D0", VA = "0x97E2D0")]
		public void HideLabel()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x97E5F0", Offset = "0x97E5F0", VA = "0x97E5F0")]
		public void HideAllLabelsInstance()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x97E5F4", Offset = "0x97E5F4", VA = "0x97E5F4")]
		public static void HideAllLabels()
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x97E18C", Offset = "0x97E18C", VA = "0x97E18C")]
		public LabelStaticController()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public enum GuideCollider
	{
		[Token(Token = "0x4000717")]
		LB,
		[Token(Token = "0x4000718")]
		RB,
		[Token(Token = "0x4000719")]
		LT,
		[Token(Token = "0x400071A")]
		RT,
		[Token(Token = "0x400071B")]
		C
	}
	[Token(Token = "0x2000131")]
	public class GuideColliderMechanics : MonoBehaviour
	{
		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GuidePlaneTracker guideTracker;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GuideCollider colliderSite;

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x9A6AB8", Offset = "0x9A6AB8", VA = "0x9A6AB8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x9A6BF8", Offset = "0x9A6BF8", VA = "0x9A6BF8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x9A6D24", Offset = "0x9A6D24", VA = "0x9A6D24")]
		public GuideColliderMechanics()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class GuideEvent : UnityEvent<GuideType>
	{
		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x9A6D2C", Offset = "0x9A6D2C", VA = "0x9A6D2C")]
		public GuideEvent()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public enum GuideType
	{
		[Token(Token = "0x400071F")]
		AIUM_4CV,
		[Token(Token = "0x4000720")]
		AIUM_LVOT,
		[Token(Token = "0x4000721")]
		AIUM_RVOT,
		[Token(Token = "0x4000722")]
		AIUM_3VTV,
		[Token(Token = "0x4000723")]
		AIUM_BICAVAL,
		[Token(Token = "0x4000724")]
		AIUM_AAV,
		[Token(Token = "0x4000725")]
		AIUM_DAV,
		[Token(Token = "0x4000726")]
		AIUM_HSA,
		[Token(Token = "0x4000727")]
		AIUM_LSA,
		[Token(Token = "0x4000728")]
		ISUOG_ABDOMNAL,
		[Token(Token = "0x4000729")]
		ISUOG_4CV,
		[Token(Token = "0x400072A")]
		ISUOG_LVOT,
		[Token(Token = "0x400072B")]
		ISUOG_RVOT,
		[Token(Token = "0x400072C")]
		ISUOG_3VTV,
		[Token(Token = "0x400072D")]
		ISUOG_3VV,
		[Token(Token = "0x400072E")]
		ASE_4CV,
		[Token(Token = "0x400072F")]
		ASE_BICAVAL,
		[Token(Token = "0x4000730")]
		ASE_HSA,
		[Token(Token = "0x4000731")]
		ASE_LSA,
		[Token(Token = "0x4000732")]
		ASE_LVOT,
		[Token(Token = "0x4000733")]
		ASE_LVOTLONG,
		[Token(Token = "0x4000734")]
		ASE_RVOTLONG,
		[Token(Token = "0x4000735")]
		ASE_AAV,
		[Token(Token = "0x4000736")]
		ASE_DAV
	}
	[Token(Token = "0x2000134")]
	public class GuideGroupManager : SceneSingletonMonoBehaviour<GuideGroupManager>
	{
		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string aium_str;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string isuog_str;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string ase_str;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string none_str;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HeartController heartController;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int GuidesCollisionLayer;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string active_set;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StringEvent OnCurrentViewSetChange;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<GuideType, GuidePlaneIndicator> guideMap;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<GuideType, GuidePlaneIndicator> guideMapScreen;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<GuidePlaneIndicator> indicators;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<GuidePlaneIndicator> indicatorsScreen;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GuidePlaneTracker currentTracker;

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x9A6D80", Offset = "0x9A6D80", VA = "0x9A6D80")]
		public static GuideType GetGuideByName(string str)
		{
			return default(GuideType);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x9A740C", Offset = "0x9A740C", VA = "0x9A740C")]
		public void ChangeActiveViewSet(float val)
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x9A7938", Offset = "0x9A7938", VA = "0x9A7938")]
		private void Start()
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x9A7C1C", Offset = "0x9A7C1C", VA = "0x9A7C1C")]
		public void SetActive(GuidePlaneTracker tracker)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x9A7D6C", Offset = "0x9A7D6C", VA = "0x9A7D6C")]
		public void HideGuide(GuideType type)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x9A7E1C", Offset = "0x9A7E1C", VA = "0x9A7E1C")]
		public void ShowGuide(GuideType type)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x9A7ECC", Offset = "0x9A7ECC", VA = "0x9A7ECC")]
		public GuideGroupManager()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class GuidePlaneIndicator : MonoBehaviour
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GuideType indicatorType;

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x9A8068", Offset = "0x9A8068", VA = "0x9A8068")]
		public GuidePlaneIndicator()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class GuidePlaneTracker : MonoBehaviour
	{
		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] trackers;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float guideThickness;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GuideType trackerType;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent guideIsVisible;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent guideIsHidden;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _guideVisible;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool colliderLB;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool colliderRB;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool colliderLT;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool colliderRT;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool colliderC;

		[Token(Token = "0x1700004D")]
		public bool GuideVisible
		{
			[Token(Token = "0x6000603")]
			[Address(RVA = "0x9A8070", Offset = "0x9A8070", VA = "0x9A8070")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000604")]
			[Address(RVA = "0x9A8078", Offset = "0x9A8078", VA = "0x9A8078")]
			set
			{
			}
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x9A8084", Offset = "0x9A8084", VA = "0x9A8084")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x9A8088", Offset = "0x9A8088", VA = "0x9A8088")]
		private void Update()
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x9A8194", Offset = "0x9A8194", VA = "0x9A8194")]
		public void SetGuideThickness(float val)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x9A6ADC", Offset = "0x9A6ADC", VA = "0x9A6ADC")]
		public void OnColliderTriggerEnter(Collider other, GuideCollider colliderSite)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x9A8230", Offset = "0x9A8230", VA = "0x9A8230")]
		public void OnColliderTriggerStay(Collider other, GuideCollider colliderSite)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x9A6C1C", Offset = "0x9A6C1C", VA = "0x9A6C1C")]
		public void OnColliderTriggerExit(Collider other, GuideCollider colliderSite)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x9A8234", Offset = "0x9A8234", VA = "0x9A8234")]
		public GuidePlaneTracker()
		{
		}
	}
}
namespace WorldSpaceTransitions
{
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B83C8", Offset = "0x3B83C8")]
	public class GizmoFollow : MonoBehaviour
	{
		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_referenceCount;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GizmoFollow m_instance;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 tempPos;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion tempRot;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool followPosition;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool followRotation;

		[Token(Token = "0x1700004E")]
		public static GizmoFollow Instance
		{
			[Token(Token = "0x600060C")]
			[Address(RVA = "0x80D304", Offset = "0x80D304", VA = "0x80D304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x80D368", Offset = "0x80D368", VA = "0x80D368")]
		private void Awake()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x80D46C", Offset = "0x80D46C", VA = "0x80D46C")]
		private void Update()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x80D68C", Offset = "0x80D68C", VA = "0x80D68C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x80D690", Offset = "0x80D690", VA = "0x80D690")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x80D580", Offset = "0x80D580", VA = "0x80D580")]
		private void SetSection()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x80D72C", Offset = "0x80D72C", VA = "0x80D72C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x80D924", Offset = "0x80D924", VA = "0x80D924")]
		public GizmoFollow()
		{
		}
	}
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B83D8", Offset = "0x3B83D8")]
	public class SectionPlaneHatched : MonoBehaviour
	{
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject toBeSectioned;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Bounds bounds;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform gizmo;

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xFA6BC8", Offset = "0xFA6BC8", VA = "0xFA6BC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xFA6D38", Offset = "0xFA6D38", VA = "0xFA6D38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xFA6F6C", Offset = "0xFA6F6C", VA = "0xFA6F6C")]
		public SectionPlaneHatched()
		{
		}
	}
	[Token(Token = "0x2000139")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B83E8", Offset = "0x3B83E8")]
	public class CrossSectionObjectSetup : MonoBehaviour
	{
		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color sectionColor;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject model;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Material> matList;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Material> clipMatList;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Renderer[] renderers;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<Renderer, int[]> matDict;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD4CC", Offset = "0x3BD4CC")]
		public Bounds bounds;

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x8C80C8", Offset = "0x8C80C8", VA = "0x8C80C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x8C80CC", Offset = "0x8C80CC", VA = "0x8C80CC")]
		private void makeSectionMaterials()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x8C8938", Offset = "0x8C8938", VA = "0x8C8938")]
		public static Bounds CalculateMeshBounds(GameObject g)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x8C8B1C", Offset = "0x8C8B1C", VA = "0x8C8B1C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x8C8B64", Offset = "0x8C8B64", VA = "0x8C8B64")]
		public Bounds GetBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x8C8B78", Offset = "0x8C8B78", VA = "0x8C8B78")]
		public CrossSectionObjectSetup()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class Planar_xyzClippingSection : MonoBehaviour
	{
		[Token(Token = "0x2000336")]
		public enum ConstrainedAxis
		{
			[Token(Token = "0x40013D9")]
			X,
			[Token(Token = "0x40013DA")]
			Y,
			[Token(Token = "0x40013DB")]
			Z
		}

		[Token(Token = "0x2000337")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B918C", Offset = "0x3B918C")]
		private sealed class <dragGizmo>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Planar_xyzClippingSection <>4__this;

			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <cameraDistance>5__2;

			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <startPoint>5__3;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <startPos>5__4;

			[Token(Token = "0x17000201")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600130D")]
				[Address(RVA = "0x889CEC", Offset = "0x889CEC", VA = "0x889CEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000202")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600130F")]
				[Address(RVA = "0x889D34", Offset = "0x889D34", VA = "0x889D34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600130A")]
			[Address(RVA = "0x8897F8", Offset = "0x8897F8", VA = "0x8897F8")]
			[DebuggerHidden]
			public <dragGizmo>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600130B")]
			[Address(RVA = "0x889824", Offset = "0x889824", VA = "0x889824", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600130C")]
			[Address(RVA = "0x889828", Offset = "0x889828", VA = "0x889828", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600130E")]
			[Address(RVA = "0x889CF4", Offset = "0x889CF4", VA = "0x889CF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrossSectionObjectSetup cs_setup;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject xyzSectionPanel;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text topSliderLabel;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Text middleSliderLabel;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text bottomSliderLabel;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityEngine.UI.Slider slider;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle xtoggle;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle ytoggle;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle ztoggle;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Toggle gizmotoggle;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 sectionplane;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject model;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform ZeroAlignment;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Bounds bounds;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ConstrainedAxis selectedAxis;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject rectGizmo;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 zeroAlignmentVector;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool gizmoOn;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 sliderRange;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float sectionX;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float sectionY;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float sectionZ;

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xFCED50", Offset = "0xFCED50", VA = "0xFCED50")]
		private void Awake()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xFCF1B0", Offset = "0xFCF1B0", VA = "0xFCF1B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xFCFF20", Offset = "0xFCFF20", VA = "0xFCFF20")]
		public void SliderListener(float value)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xFD01CC", Offset = "0xFD01CC", VA = "0xFD01CC")]
		public void SetAxis(bool b, ConstrainedAxis a)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xFCF9F0", Offset = "0xFCF9F0", VA = "0xFCF9F0")]
		private void setSection()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xFCF6E8", Offset = "0xFCF6E8", VA = "0xFCF6E8")]
		private void setupGizmo()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xFD0348", Offset = "0xFD0348", VA = "0xFD0348")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xFD0460", Offset = "0xFD0460", VA = "0xFD0460")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xFD050C", Offset = "0xFD050C", VA = "0xFD050C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xFD0554", Offset = "0xFD0554", VA = "0xFD0554")]
		private void Update()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xFD0728", Offset = "0xFD0728", VA = "0xFD0728")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5884", Offset = "0x3C5884")]
		private IEnumerator dragGizmo()
		{
			return null;
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xFD079C", Offset = "0xFD079C", VA = "0xFD079C")]
		public void GizmoOn(bool val)
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xFD0844", Offset = "0xFD0844", VA = "0xFD0844")]
		public void Size(Bounds b)
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xFD0858", Offset = "0xFD0858", VA = "0xFD0858")]
		public Planar_xyzClippingSection()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xFD08B8", Offset = "0xFD08B8", VA = "0xFD08B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C58EC", Offset = "0x3C58EC")]
		private void <Start>b__24_0(bool <p0>)
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xFD08DC", Offset = "0xFD08DC", VA = "0xFD08DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C58FC", Offset = "0x3C58FC")]
		private void <Start>b__24_1(bool <p0>)
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xFD0900", Offset = "0xFD0900", VA = "0xFD0900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C590C", Offset = "0x3C590C")]
		private void <Start>b__24_2(bool <p0>)
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class RectGizmo : MonoBehaviour
	{
		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _b;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _w;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _h;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Planar_xyzClippingSection.ConstrainedAxis _axis;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _m;

		[Token(Token = "0x1700004F")]
		public float Border
		{
			[Token(Token = "0x600062F")]
			[Address(RVA = "0xFD8430", Offset = "0xFD8430", VA = "0xFD8430")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000630")]
			[Address(RVA = "0xFD8438", Offset = "0xFD8438", VA = "0xFD8438")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public float Width
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0xFD8E30", Offset = "0xFD8E30", VA = "0xFD8E30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000632")]
			[Address(RVA = "0xFD8E38", Offset = "0xFD8E38", VA = "0xFD8E38")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public float Height
		{
			[Token(Token = "0x6000633")]
			[Address(RVA = "0xFD8E40", Offset = "0xFD8E40", VA = "0xFD8E40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000634")]
			[Address(RVA = "0xFD8E48", Offset = "0xFD8E48", VA = "0xFD8E48")]
			set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public Planar_xyzClippingSection.ConstrainedAxis Axis
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0xFD8E50", Offset = "0xFD8E50", VA = "0xFD8E50")]
			get
			{
				return default(Planar_xyzClippingSection.ConstrainedAxis);
			}
			[Token(Token = "0x6000636")]
			[Address(RVA = "0xFD8E58", Offset = "0xFD8E58", VA = "0xFD8E58")]
			set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public float Margin
		{
			[Token(Token = "0x6000637")]
			[Address(RVA = "0xFD8E60", Offset = "0xFD8E60", VA = "0xFD8E60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000638")]
			[Address(RVA = "0xFD8E68", Offset = "0xFD8E68", VA = "0xFD8E68")]
			set
			{
			}
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xFD02F4", Offset = "0xFD02F4", VA = "0xFD02F4")]
		public void SetSizedGizmo(Vector3 size, Planar_xyzClippingSection.ConstrainedAxis axis)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xFD8440", Offset = "0xFD8440", VA = "0xFD8440")]
		private void CreateSlicedMesh()
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xFD8E70", Offset = "0xFD8E70", VA = "0xFD8E70")]
		public RectGizmo()
		{
		}
	}
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B83F8", Offset = "0x3B83F8")]
	public class SectionSetup : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000338")]
		public struct ShaderSubstitute
		{
			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Shader original;

			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Shader substitute;

			[Token(Token = "0x6001310")]
			[Address(RVA = "0x88C5D8", Offset = "0x88C5D8", VA = "0x88C5D8")]
			public ShaderSubstitute(Shader orig, Shader subst)
			{
			}
		}

		[Token(Token = "0x2000339")]
		public enum BoundsMode
		{
			[Token(Token = "0x40013E5")]
			local,
			[Token(Token = "0x40013E6")]
			world
		}

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BD4DC", Offset = "0x3BD4DC")]
		public GameObject model;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoundsMode boundsMode;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BoundsMode bMode;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ShaderSubstitute> shaderSubstitutes;

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xFA6F9C", Offset = "0xFA6F9C", VA = "0xFA6F9C")]
		private Bounds GetBounds(GameObject go)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xFA72AC", Offset = "0xFA72AC", VA = "0xFA72AC")]
		private Shader getSubstitute(string shaderName, string familyName)
		{
			return null;
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xFA7494", Offset = "0xFA7494", VA = "0xFA7494")]
		public SectionSetup()
		{
		}
	}
	[Token(Token = "0x200013D")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B8408", Offset = "0x3B8408")]
	public class SinglePlaneSection : MonoBehaviour
	{
		[Token(Token = "0x600063F")]
		[Address(RVA = "0xFAA118", Offset = "0xFAA118", VA = "0xFAA118")]
		private void Start()
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xFAA160", Offset = "0xFAA160", VA = "0xFAA160")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xFAA1A8", Offset = "0xFAA1A8", VA = "0xFAA1A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xFAA1F0", Offset = "0xFAA1F0", VA = "0xFAA1F0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xFAA238", Offset = "0xFAA238", VA = "0xFAA238")]
		public SinglePlaneSection()
		{
		}
	}
}
namespace AdvancedGizmo
{
	[Token(Token = "0x200013E")]
	public class Gizmo : MonoBehaviour
	{
		[Token(Token = "0x200033A")]
		private enum GizmoAxis
		{
			[Token(Token = "0x40013E8")]
			X,
			[Token(Token = "0x40013E9")]
			Y,
			[Token(Token = "0x40013EA")]
			Z,
			[Token(Token = "0x40013EB")]
			XY,
			[Token(Token = "0x40013EC")]
			XZ,
			[Token(Token = "0x40013ED")]
			YZ,
			[Token(Token = "0x40013EE")]
			XYRotate,
			[Token(Token = "0x40013EF")]
			XZRotate,
			[Token(Token = "0x40013F0")]
			YZRotate,
			[Token(Token = "0x40013F1")]
			none
		}

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BD514", Offset = "0x3BD514")]
		public int layer;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BD528", Offset = "0x3BD528")]
		public Collider xAxis;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider yAxis;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider zAxis;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BD53C", Offset = "0x3BD53C")]
		public Collider xyPlane;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Collider xzPlane;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Collider yzPlane;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BD550", Offset = "0x3BD550")]
		public Collider xyRotate;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Collider xzRotate;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Collider yzRotate;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BD564", Offset = "0x3BD564")]
		public Collider sphereRotate;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x3BD578", Offset = "0x3BD578")]
		public float rotationSpeed;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private GizmoAxis selectedAxis;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RaycastHit hit;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Ray ray;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Ray ray1;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Plane dragplane;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float rayDistance;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float newRotY;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float rayDistancePrev;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float distance;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 hitvector;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 mousePos;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 lookCamera;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 startDrag;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 startPos;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 startDragRot;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 lookHitPoint;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool dragging;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		private bool rotating;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private EventSystem ES;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float sphereRadius;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private GameObject rotationParent;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 rotationAxis;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public int i;

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x80BC34", Offset = "0x80BC34", VA = "0x80BC34")]
		private void Start()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x80BE9C", Offset = "0x80BE9C", VA = "0x80BE9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x80BD08", Offset = "0x80BD08", VA = "0x80BD08")]
		public void ChangeMode()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x80CE80", Offset = "0x80CE80", VA = "0x80CE80")]
		private void SetFalse()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x80CF44", Offset = "0x80CF44", VA = "0x80CF44")]
		private void DrawPlane(Vector3 normal, Vector3 position, float t)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x80D2BC", Offset = "0x80D2BC", VA = "0x80D2BC")]
		public Gizmo()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class Hover : MonoBehaviour
	{
		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color hovercolor;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color original;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer rend;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool selected;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float t;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventSystem ES;

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x9B0530", Offset = "0x9B0530", VA = "0x9B0530")]
		private void Start()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x9B05F4", Offset = "0x9B05F4", VA = "0x9B05F4")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x9B0708", Offset = "0x9B0708", VA = "0x9B0708")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x9B06C8", Offset = "0x9B06C8", VA = "0x9B06C8")]
		private void SetHovered()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x9B07E4", Offset = "0x9B07E4", VA = "0x9B07E4")]
		private void SetOriginal()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x9B0824", Offset = "0x9B0824", VA = "0x9B0824")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x9B0944", Offset = "0x9B0944", VA = "0x9B0944")]
		private void Update()
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x9B0984", Offset = "0x9B0984", VA = "0x9B0984")]
		public Hover()
		{
		}
	}
}
namespace UltimateReplay
{
	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "ReplaySerializerAttribute", RVA = "0x3B8418", Offset = "0x3B8418")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x3B8418", Offset = "0x3B8418")]
	public class ReplayAnimator : ReplayRecordableBehaviour
	{
		[Token(Token = "0x200033B")]
		[Flags]
		public enum ReplayAnimatorFlags
		{
			[Token(Token = "0x40013F3")]
			MainState = 2,
			[Token(Token = "0x40013F4")]
			SubStates = 4,
			[Token(Token = "0x40013F5")]
			Parameters = 8,
			[Token(Token = "0x40013F6")]
			LowPrecision = 0x10,
			[Token(Token = "0x40013F7")]
			InterpolateStates = 0x20,
			[Token(Token = "0x40013F8")]
			InterpolateFloatParameters = 0x40,
			[Token(Token = "0x40013F9")]
			InterpolateIntParameters = 0x80
		}

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReplayAnimatorSerializer serializer;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float initialAnimatorSpeed;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReplayAnimatorSerializer.ReplayAnimatorState[] targetStates;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ReplayAnimatorSerializer.ReplayAnimatorState[] lastStates;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ReplayAnimatorSerializer.ReplayAnimatorParameter[] targetParameters;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ReplayAnimatorSerializer.ReplayAnimatorParameter[] lastParameters;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ReplayAnimatorSerializer.ReplayAnimatorSerializeFlags updateFlags;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Animator observedAnimator;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD58C", Offset = "0x3BD58C")]
		public ReplayAnimatorFlags recordFlags;

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x77DCE0", Offset = "0x77DCE0", VA = "0x77DCE0")]
		public void Start()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x77DE18", Offset = "0x77DE18", VA = "0x77DE18", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x77DEBC", Offset = "0x77DEBC", VA = "0x77DEBC", Slot = "12")]
		public override void OnReplayReset()
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x77DED0", Offset = "0x77DED0", VA = "0x77DED0", Slot = "9")]
		public override void OnReplayStart()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x77DF64", Offset = "0x77DF64", VA = "0x77DF64", Slot = "10")]
		public override void OnReplayEnd()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x77E004", Offset = "0x77E004", VA = "0x77E004", Slot = "11")]
		public override void OnReplayPlayPause(bool paused)
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x77E0AC", Offset = "0x77E0AC", VA = "0x77E0AC", Slot = "14")]
		public override void OnReplayUpdate(ReplayTime replayTime)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x77E42C", Offset = "0x77E42C", VA = "0x77E42C", Slot = "20")]
		public override void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x77ECBC", Offset = "0x77ECBC", VA = "0x77ECBC", Slot = "19")]
		public override void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x77E1D0", Offset = "0x77E1D0", VA = "0x77E1D0")]
		private void UpdateStates(ReplayTime time, ReplayAnimatorSerializer.ReplayAnimatorSerializeFlags flags, bool interpolate)
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x77E2A8", Offset = "0x77E2A8", VA = "0x77E2A8")]
		private void UpdateParameters(ReplayTime time, ReplayAnimatorSerializer.ReplayAnimatorSerializeFlags flags, bool interpolateIntegers, bool interpolateFloats)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x77EFB0", Offset = "0x77EFB0", VA = "0x77EFB0")]
		public ReplayAnimator()
		{
		}
	}
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "ReplaySerializerAttribute", RVA = "0x3B8490", Offset = "0x3B8490")]
	public class ReplayAudio : ReplayRecordableBehaviour
	{
		[Token(Token = "0x200033C")]
		[Flags]
		public enum ReplayAudioFlags
		{
			[Token(Token = "0x40013FB")]
			None = 0,
			[Token(Token = "0x40013FC")]
			Pitch = 2,
			[Token(Token = "0x40013FD")]
			Volume = 4,
			[Token(Token = "0x40013FE")]
			StereoPan = 8,
			[Token(Token = "0x40013FF")]
			SpatialBlend = 0x10,
			[Token(Token = "0x4001400")]
			ReverbZoneMix = 0x20,
			[Token(Token = "0x4001401")]
			LowPrecision = 0x40,
			[Token(Token = "0x4001402")]
			Interpolate = 0x80
		}

		[Token(Token = "0x200033D")]
		private struct ReplayAudioData
		{
			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool isPlaying;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int timeSample;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float pitch;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float volume;

			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stereoPan;

			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float spatialBlend;

			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float reverbZoneMix;
		}

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ushort audioEventIDForward;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ReplayAudioSerializer sharedSerializer;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ReplayAudioData lastAudio;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ReplayAudioData targetAudio;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool lastPlayState;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float lastPlayTime;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioSource observedAudio;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD59C", Offset = "0x3BD59C")]
		public ReplayAudioFlags recordFlags;

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x77F1A0", Offset = "0x77F1A0", VA = "0x77F1A0")]
		public void Start()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x77F2D8", Offset = "0x77F2D8", VA = "0x77F2D8")]
		public void Update()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x77F498", Offset = "0x77F498", VA = "0x77F498", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x77F538", Offset = "0x77F538", VA = "0x77F538", Slot = "12")]
		public override void OnReplayReset()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x77F554", Offset = "0x77F554", VA = "0x77F554", Slot = "15")]
		public override void OnReplayEvent(ushort eventID, ReplayState eventData)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x77F5F0", Offset = "0x77F5F0", VA = "0x77F5F0", Slot = "14")]
		public override void OnReplayUpdate(ReplayTime replayTime)
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x77F7D4", Offset = "0x77F7D4", VA = "0x77F7D4", Slot = "11")]
		public override void OnReplayPlayPause(bool paused)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x77F8C0", Offset = "0x77F8C0", VA = "0x77F8C0", Slot = "20")]
		public override void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x77FC40", Offset = "0x77FC40", VA = "0x77FC40", Slot = "19")]
		public override void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x77FEF0", Offset = "0x77FEF0", VA = "0x77FEF0")]
		public ReplayAudio()
		{
		}
	}
	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "ReplaySerializerAttribute", RVA = "0x3B84F8", Offset = "0x3B84F8")]
	public class ReplayComponentEnabledState : ReplayRecordableBehaviour
	{
		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ReplayEnabledStateSerializer sharedSerializer;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Behaviour observedComponent;

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x783660", Offset = "0x783660", VA = "0x783660")]
		public void Start()
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x783798", Offset = "0x783798", VA = "0x783798", Slot = "20")]
		public override void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x7838C0", Offset = "0x7838C0", VA = "0x7838C0", Slot = "19")]
		public override void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x783A50", Offset = "0x783A50", VA = "0x783A50")]
		public ReplayComponentEnabledState()
		{
		}
	}
	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "ReplaySerializerAttribute", RVA = "0x3B8560", Offset = "0x3B8560")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x3B8560", Offset = "0x3B8560")]
	public sealed class ReplayEnabledState : ReplayRecordableBehaviour
	{
		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReplayEnabledStateSerializer sharedSerializer;

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x787DB0", Offset = "0x787DB0", VA = "0x787DB0", Slot = "20")]
		public override void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x787E0C", Offset = "0x787E0C", VA = "0x787E0C", Slot = "19")]
		public override void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x787EAC", Offset = "0x787EAC", VA = "0x787EAC")]
		public ReplayEnabledState()
		{
		}
	}
	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "ReplaySerializerAttribute", RVA = "0x3B85D8", Offset = "0x3B85D8")]
	public class ReplayLineRenderer : ReplayRecordableBehaviour
	{
		[Token(Token = "0x200033E")]
		[Flags]
		public enum ReplayLineRendererFlags
		{
			[Token(Token = "0x400140B")]
			None = 0,
			[Token(Token = "0x400140C")]
			Interpolate = 2
		}

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReplayPointRendererSerializer sharedSerializer;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector3> lastPoints;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Vector3> targetPoints;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LineRenderer observedLineRenderer;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD5AC", Offset = "0x3BD5AC")]
		public ReplayLineRendererFlags updateFlags;

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x78DD10", Offset = "0x78DD10", VA = "0x78DD10")]
		public void Start()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x78DE48", Offset = "0x78DE48", VA = "0x78DE48", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x78DEE8", Offset = "0x78DEE8", VA = "0x78DEE8", Slot = "12")]
		public override void OnReplayReset()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x78DF64", Offset = "0x78DF64", VA = "0x78DF64", Slot = "14")]
		public override void OnReplayUpdate(ReplayTime replayTime)
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x78E14C", Offset = "0x78E14C", VA = "0x78E14C", Slot = "20")]
		public override void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x78E308", Offset = "0x78E308", VA = "0x78E308", Slot = "19")]
		public override void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x78E400", Offset = "0x78E400", VA = "0x78E400")]
		public ReplayLineRenderer()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class ReplayMaterial : ReplayRecordableBehaviour
	{
		[Token(Token = "0x200033F")]
		[Flags]
		public enum ReplayMaterialFlags
		{
			[Token(Token = "0x400140E")]
			None = 0,
			[Token(Token = "0x400140F")]
			SharedMaterial = 1,
			[Token(Token = "0x4001410")]
			Color = 2,
			[Token(Token = "0x4001411")]
			MainTextureOffset = 4,
			[Token(Token = "0x4001412")]
			MainTextureScale = 8,
			[Token(Token = "0x4001413")]
			DoubleSidedGlobalIllumination = 0x10,
			[Token(Token = "0x4001414")]
			GlobalIlluminationFlags = 0x20,
			[Token(Token = "0x4001415")]
			Interpolate = 0x40
		}

		[Token(Token = "0x2000340")]
		private struct ReplayMaterialData
		{
			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color color;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 mainTextureOffset;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 mainTextureScale;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool doubleSidedGlobalIllumination;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public MaterialGlobalIlluminationFlags globalIlluminationFlags;
		}

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ReplayMaterialSerializer sharedSerializer;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ReplayMaterialData lastMaterialData;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private ReplayMaterialData targetMaterialData;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private ReplayMaterialSerializer.ReplayMaterialSerializeFlags updateFlags;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Renderer observedRenderer;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD5BC", Offset = "0x3BD5BC")]
		public ReplayMaterialFlags recordFlags;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BD5CC", Offset = "0x3BD5CC")]
		public int materialIndex;

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x79204C", Offset = "0x79204C", VA = "0x79204C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x7920EC", Offset = "0x7920EC", VA = "0x7920EC", Slot = "12")]
		public override void OnReplayReset()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x792108", Offset = "0x792108", VA = "0x792108", Slot = "14")]
		public override void OnReplayUpdate(ReplayTime replayTime)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x792554", Offset = "0x792554", VA = "0x792554", Slot = "20")]
		public override void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x7928F0", Offset = "0x7928F0", VA = "0x7928F0", Slot = "19")]
		public override void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x792344", Offset = "0x792344", VA = "0x792344")]
		private Material GetTargetMaterial()
		{
			return null;
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x792444", Offset = "0x792444", VA = "0x792444")]
		private void ApplyTargetMaterial(Material material)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x792B1C", Offset = "0x792B1C", VA = "0x792B1C")]
		public ReplayMaterial()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class ReplayMaterialChange : ReplayRecordableBehaviour
	{
		[Token(Token = "0x2000341")]
		[Flags]
		public enum ReplayMaterialChangeFlags
		{
			[Token(Token = "0x400141C")]
			None = 0,
			[Token(Token = "0x400141D")]
			SharedMaterial = 1,
			[Token(Token = "0x400141E")]
			AllMaterials = 2
		}

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReplayMaterialChangeSerializer serializer;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material[] activeMaterials;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer observedRenderer;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material defaultMaterial;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Material> availableMaterials;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD604", Offset = "0x3BD604")]
		public ReplayMaterialChangeFlags recordFlags;

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x792BF4", Offset = "0x792BF4", VA = "0x792BF4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x792D28", Offset = "0x792D28", VA = "0x792D28")]
		public int GetAssignedMaterialIndex(int slot = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x792E88", Offset = "0x792E88", VA = "0x792E88", Slot = "20")]
		public override void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x793598", Offset = "0x793598", VA = "0x793598", Slot = "19")]
		public override void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x793D88", Offset = "0x793D88", VA = "0x793D88")]
		public ReplayMaterialChange()
		{
		}
	}
	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B8640", Offset = "0x3B8640")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x3B8640", Offset = "0x3B8640")]
	[AttributeAttribute(Name = "ReplaySerializerAttribute", RVA = "0x3B8640", Offset = "0x3B8640")]
	public sealed class ReplayObject : MonoBehaviour, IReplaySerialize, ISerializationCallbackReceiver
	{
		[Token(Token = "0x2000342")]
		private enum ReplayPrefabType
		{
			[Token(Token = "0x4001420")]
			Unknown,
			[Token(Token = "0x4001421")]
			Prefab,
			[Token(Token = "0x4001422")]
			Scene
		}

		[Serializable]
		[Token(Token = "0x2000343")]
		public struct ReplayObjectReference
		{
			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReplayObject reference;

			[Token(Token = "0x6001311")]
			[Address(RVA = "0x88AFD0", Offset = "0x88AFD0", VA = "0x88AFD0")]
			public ReplayObjectReference(ReplayObject obj)
			{
			}
		}

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<ReplayObject> allReplayObjects;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplayObjectSerializer serializer;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ReplayVariableData> waitingVariables;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ReplayEventData> waitingEvents;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ReplayMethodData> waitingMethods;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD614", Offset = "0x3BD614")]
		private ReplayIdentity replayIdentity;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD64C", Offset = "0x3BD64C")]
		private ReplayIdentity prefabIdentity;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD684", Offset = "0x3BD684")]
		private List<ReplayRecordableBehaviour> observedComponents;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD6BC", Offset = "0x3BD6BC")]
		private List<ReplayBehaviour> runtimeComponents;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD6F4", Offset = "0x3BD6F4")]
		private bool isPrefab;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD72C", Offset = "0x3BD72C")]
		private ReplayPrefabType prefabType;

		[Token(Token = "0x17000054")]
		public static IList<ReplayObject> AllReplayObjects
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x796168", Offset = "0x796168", VA = "0x796168")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		public ReplayIdentity ReplayIdentity
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0x7961CC", Offset = "0x7961CC", VA = "0x7961CC")]
			get
			{
				return default(ReplayIdentity);
			}
			[Token(Token = "0x6000688")]
			[Address(RVA = "0x7961D4", Offset = "0x7961D4", VA = "0x7961D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public ReplayIdentity PrefabIdentity
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0x7961DC", Offset = "0x7961DC", VA = "0x7961DC")]
			get
			{
				return default(ReplayIdentity);
			}
		}

		[Token(Token = "0x17000057")]
		public bool IsPrefab
		{
			[Token(Token = "0x600068A")]
			[Address(RVA = "0x7961E4", Offset = "0x7961E4", VA = "0x7961E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000058")]
		public IList<ReplayRecordableBehaviour> ObservedComponents
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0x7961EC", Offset = "0x7961EC", VA = "0x7961EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x7961F4", Offset = "0x7961F4", VA = "0x7961F4")]
		public void Awake()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x7964A0", Offset = "0x7964A0", VA = "0x7964A0")]
		public void Start()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x7964A4", Offset = "0x7964A4", VA = "0x7964A4")]
		public void Update()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x7967E8", Offset = "0x7967E8", VA = "0x7967E8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x79687C", Offset = "0x79687C", VA = "0x79687C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x79696C", Offset = "0x79696C", VA = "0x79696C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x796970", Offset = "0x796970", VA = "0x796970")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x796994", Offset = "0x796994", VA = "0x796994")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x796ACC", Offset = "0x796ACC", VA = "0x796ACC")]
		public void ForceRegenerateIdentity()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x796384", Offset = "0x796384", VA = "0x796384")]
		public void ForceRegenerateIdentityWithObservedComponents()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x796B38", Offset = "0x796B38", VA = "0x796B38", Slot = "6")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x796B3C", Offset = "0x796B3C", VA = "0x796B3C", Slot = "7")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x796B40", Offset = "0x796B40", VA = "0x796B40", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x79771C", Offset = "0x79771C", VA = "0x79771C", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x780D6C", Offset = "0x780D6C", VA = "0x780D6C")]
		public void RecordReplayVariable(ReplayIdentity senderIdentity, ReplayVariable replayVariable)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x780E00", Offset = "0x780E00", VA = "0x780E00")]
		public void RecordReplayEvent(ReplayIdentity senderIdentity, ushort eventID, [Optional] ReplayState eventData)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x780EC0", Offset = "0x780EC0", VA = "0x780EC0")]
		public void Call(ReplayIdentity senderIdentity, Action method)
		{
		}

		[Token(Token = "0x600069D")]
		public void Call<T>(ReplayIdentity senderIdentity, Action<T> method, T arg)
		{
		}

		[Token(Token = "0x600069E")]
		public void Call<T0, T1>(ReplayIdentity senderIdentity, Action<T0, T1> method, T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x600069F")]
		public void Call<T0, T1, T2>(ReplayIdentity senderIdentity, Action<T0, T1, T2> method, T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x60006A0")]
		public void Call<T0, T1, T2, T3>(ReplayIdentity senderIdentity, Action<T0, T1, T2, T3> method, T0 arg0, T1 arg1, T2 arg2, T3 arg3)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x7986E8", Offset = "0x7986E8", VA = "0x7986E8")]
		private bool CheckMethodRecordable(ReplayIdentity senderIdentity, MethodInfo targetMethod)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x798864", Offset = "0x798864", VA = "0x798864")]
		public bool IsComponentObserved(ReplayRecordableBehaviour component)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x78B9D4", Offset = "0x78B9D4", VA = "0x78B9D4")]
		public void RebuildComponentList()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x796574", Offset = "0x796574", VA = "0x796574")]
		public bool CheckComponentListIntegrity()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x7966D8", Offset = "0x7966D8", VA = "0x7966D8")]
		public void UpdatePrefabLinks()
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x7977BC", Offset = "0x7977BC", VA = "0x7977BC")]
		private void DeserializeReplayComponents(ReplayState state, IList<ReplayComponentData> components)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x797AD4", Offset = "0x797AD4", VA = "0x797AD4")]
		private void DeserializeReplayVariables(ReplayState state, IList<ReplayVariableData> variables)
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x797E20", Offset = "0x797E20", VA = "0x797E20")]
		private void DeserializeReplayEvents(ReplayState state, IList<ReplayEventData> events)
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x7982DC", Offset = "0x7982DC", VA = "0x7982DC")]
		private void DeserializeReplayMethods(ReplayState state, IList<ReplayMethodData> methods)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x780768", Offset = "0x780768", VA = "0x780768")]
		internal void RegisterRuntimeBehaviour(ReplayBehaviour behaviour)
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x780868", Offset = "0x780868", VA = "0x780868")]
		internal void UnregisterRuntimeBehaviour(ReplayBehaviour behaviour)
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x7988C8", Offset = "0x7988C8", VA = "0x7988C8")]
		public ReplayBehaviour GetReplayBehaviour(ReplayIdentity replayIdentity)
		{
			return null;
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x798A38", Offset = "0x798A38", VA = "0x798A38")]
		public static bool CloneReplayObjectIdentity(GameObject cloneFromObject, GameObject cloneToObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x7898A0", Offset = "0x7898A0", VA = "0x7898A0")]
		public static bool CloneReplayObjectIdentity(ReplayObject cloneFromObject, ReplayObject cloneToObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x798B88", Offset = "0x798B88", VA = "0x798B88")]
		public ReplayObject()
		{
		}
	}
	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "ReplaySerializerAttribute", RVA = "0x3B86C8", Offset = "0x3B86C8")]
	public class ReplayParticleSystem : ReplayRecordableBehaviour
	{
		[Token(Token = "0x2000344")]
		[Flags]
		public enum ReplayParticleSystemFlags
		{
			[Token(Token = "0x4001425")]
			None = 0,
			[Token(Token = "0x4001426")]
			Interpolate = 2
		}

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ReplayParticleSystemSerializer sharedSerializer;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float lastTime;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float targetTime;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private uint randomSeed;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ParticleSystem observedParticleSystem;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD764", Offset = "0x3BD764")]
		public ReplayParticleSystemFlags updateFlags;

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x945464", Offset = "0x945464", VA = "0x945464")]
		public void Start()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x94559C", Offset = "0x94559C", VA = "0x94559C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x945648", Offset = "0x945648", VA = "0x945648", Slot = "12")]
		public override void OnReplayReset()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x945654", Offset = "0x945654", VA = "0x945654", Slot = "14")]
		public override void OnReplayUpdate(ReplayTime replayTime)
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x945778", Offset = "0x945778", VA = "0x945778", Slot = "20")]
		public override void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x9458FC", Offset = "0x9458FC", VA = "0x9458FC", Slot = "19")]
		public override void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x945A70", Offset = "0x945A70", VA = "0x945A70")]
		public ReplayParticleSystem()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public abstract class ReplayRecordableBehaviour : ReplayBehaviour, IReplaySerialize
	{
		[Token(Token = "0x60006B9")]
		public abstract void OnReplayDeserialize(ReplayState state);

		[Token(Token = "0x60006BA")]
		public abstract void OnReplaySerialize(ReplayState state);

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x9490D4", Offset = "0x9490D4", VA = "0x9490D4", Slot = "6")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x945A7C", Offset = "0x945A7C", VA = "0x945A7C")]
		protected ReplayRecordableBehaviour()
		{
		}
	}
	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "ReplaySerializerAttribute", RVA = "0x3B8730", Offset = "0x3B8730")]
	public class ReplayTrailRenderer : ReplayRecordableBehaviour
	{
		[Token(Token = "0x2000345")]
		[Flags]
		public enum ReplayTrailRendererFlags
		{
			[Token(Token = "0x4001428")]
			None = 0,
			[Token(Token = "0x4001429")]
			Interpolate = 2
		}

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ReplayPointRendererSerializer sharedSerializer;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> lastPoints;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector3> targetPoints;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TrailRenderer observedTrailRenderer;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD774", Offset = "0x3BD774")]
		public ReplayTrailRendererFlags updateFlags;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool clearOnReplayEnd;

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x95BA8C", Offset = "0x95BA8C", VA = "0x95BA8C")]
		public void Start()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x95BBC4", Offset = "0x95BBC4", VA = "0x95BBC4", Slot = "12")]
		public override void OnReplayReset()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x95BC40", Offset = "0x95BC40", VA = "0x95BC40", Slot = "10")]
		public override void OnReplayEnd()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x95BC70", Offset = "0x95BC70", VA = "0x95BC70", Slot = "14")]
		public override void OnReplayUpdate(ReplayTime replayTime)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x95BE84", Offset = "0x95BE84", VA = "0x95BE84", Slot = "20")]
		public override void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x95C0B4", Offset = "0x95C0B4", VA = "0x95C0B4", Slot = "19")]
		public override void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x95C1F8", Offset = "0x95C1F8", VA = "0x95C1F8")]
		public ReplayTrailRenderer()
		{
		}
	}
	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x3B8798", Offset = "0x3B8798")]
	[AttributeAttribute(Name = "ReplaySerializerAttribute", RVA = "0x3B8798", Offset = "0x3B8798")]
	public class ReplayTransform : ReplayRecordableBehaviour
	{
		[Token(Token = "0x2000346")]
		[Flags]
		public enum ReplayTransformFlags
		{
			[Token(Token = "0x400142B")]
			None = 0,
			[Token(Token = "0x400142C")]
			X = 1,
			[Token(Token = "0x400142D")]
			Y = 2,
			[Token(Token = "0x400142E")]
			Z = 4,
			[Token(Token = "0x400142F")]
			Local = 8,
			[Token(Token = "0x4001430")]
			LowRes = 0x10,
			[Token(Token = "0x4001431")]
			Interoplate = 0x100,
			[Token(Token = "0x4001432")]
			XYZ_World = 0x107,
			[Token(Token = "0x4001433")]
			XYZ_Local = 0x10F
		}

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ReplayTransformSerializer sharedSerializer;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ReplayTransformSerializer.ReplayTransformSerializeFlags storageFlags;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		private ReplayTransformSerializer.ReplayTransformSerializeFlags updateFlags;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 targetPosition;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastPosition;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion targetRotation;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion lastRotation;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 targetScale;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 lastScale;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD784", Offset = "0x3BD784")]
		public ReplayTransformFlags positionFlags;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD794", Offset = "0x3BD794")]
		public ReplayTransformFlags rotationFlags;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD7A4", Offset = "0x3BD7A4")]
		public ReplayTransformFlags scaleFlags;

		[Token(Token = "0x17000059")]
		private ReplayTransformSerializer.ReplayTransformSerializeFlags StorageFlags
		{
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0x95C314", Offset = "0x95C314", VA = "0x95C314")]
			get
			{
				return default(ReplayTransformSerializer.ReplayTransformSerializeFlags);
			}
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x95C31C", Offset = "0x95C31C", VA = "0x95C31C", Slot = "5")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x95C3B0", Offset = "0x95C3B0", VA = "0x95C3B0", Slot = "16")]
		public override void OnReplaySpawned(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x95C458", Offset = "0x95C458", VA = "0x95C458", Slot = "12")]
		public override void OnReplayReset()
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x95C484", Offset = "0x95C484", VA = "0x95C484", Slot = "14")]
		public override void OnReplayUpdate(ReplayTime replayTime)
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x95CA5C", Offset = "0x95CA5C", VA = "0x95CA5C", Slot = "20")]
		public override void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x95CBD4", Offset = "0x95CBD4", VA = "0x95CBD4", Slot = "19")]
		public override void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x95C558", Offset = "0x95C558", VA = "0x95C558")]
		private void UpdatePosition(ReplayTime time, ReplayTransformSerializer.ReplayTransformSerializeFlags flags, bool interpolate)
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x95C72C", Offset = "0x95C72C", VA = "0x95C72C")]
		private void UpdateRotation(ReplayTime time, ReplayTransformSerializer.ReplayTransformSerializeFlags flags, bool interoplate)
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x95C940", Offset = "0x95C940", VA = "0x95C940")]
		private void UpdateScale(ReplayTime time, ReplayTransformSerializer.ReplayTransformSerializeFlags flags, bool interoplate)
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x95C358", Offset = "0x95C358", VA = "0x95C358")]
		private ReplayTransformSerializer.ReplayTransformSerializeFlags GetDataFlags()
		{
			return default(ReplayTransformSerializer.ReplayTransformSerializeFlags);
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x95CCD0", Offset = "0x95CCD0", VA = "0x95CCD0")]
		public ReplayTransform()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014C")]
	public sealed class ReplayablePrefabs
	{
		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B921C", Offset = "0x3B921C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string prefabName;

			[Token(Token = "0x6001312")]
			[Address(RVA = "0x88B840", Offset = "0x88B840", VA = "0x88B840")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001313")]
			[Address(RVA = "0x88B848", Offset = "0x88B848", VA = "0x88B848")]
			internal bool <GetReplayPrefabWithName>b__0(ReplayObject p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<ReplayIdentity, ReplayObject> runtimePrefabLookup;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<ReplayObject> prefabs;

		[Token(Token = "0x1700005A")]
		private Dictionary<ReplayIdentity, ReplayObject> PrefabLookup
		{
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0xFA1A7C", Offset = "0xFA1A7C", VA = "0xFA1A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		public ICollection<ReplayIdentity> PrefabIdentites
		{
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0xFA1C10", Offset = "0xFA1C10", VA = "0xFA1C10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		public IList<ReplayObject> Prefabs
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0xFA1C68", Offset = "0xFA1C68", VA = "0xFA1C68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xFA1C70", Offset = "0xFA1C70", VA = "0xFA1C70")]
		public void RegisterReplayablePrefab(ReplayObject replayPrefabObject)
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xFA1E0C", Offset = "0xFA1E0C", VA = "0xFA1E0C")]
		public bool HasReplayPrefab(ReplayIdentity replayPrefabIdentity)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xFA1E74", Offset = "0xFA1E74", VA = "0xFA1E74")]
		public ReplayObject GetReplayPrefab(ReplayIdentity replayPrefabIdentity)
		{
			return null;
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xFA1EEC", Offset = "0xFA1EEC", VA = "0xFA1EEC")]
		public ReplayObject GetReplayPrefabWithName(string prefabName)
		{
			return null;
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xFA1FDC", Offset = "0xFA1FDC", VA = "0xFA1FDC")]
		public ReplayablePrefabs()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public abstract class ReplayBehaviour : MonoBehaviour
	{
		[Token(Token = "0x2000348")]
		internal enum ReplayBehaviourState
		{
			[Token(Token = "0x4001436")]
			Idle,
			[Token(Token = "0x4001437")]
			Recording,
			[Token(Token = "0x4001438")]
			Replaying
		}

		[Serializable]
		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B922C", Offset = "0x3B922C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<ReplayBehaviour> <>9__51_0;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<ReplayBehaviour> <>9__52_0;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<ReplayBehaviour> <>9__54_0;

			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<ReplayBehaviour> <>9__55_0;

			[Token(Token = "0x6001315")]
			[Address(RVA = "0x88AC30", Offset = "0x88AC30", VA = "0x88AC30")]
			public <>c()
			{
			}

			[Token(Token = "0x6001316")]
			[Address(RVA = "0x88AC38", Offset = "0x88AC38", VA = "0x88AC38")]
			internal void <InvokeReplayStartEvent>b__51_0(ReplayBehaviour b)
			{
			}

			[Token(Token = "0x6001317")]
			[Address(RVA = "0x88AC5C", Offset = "0x88AC5C", VA = "0x88AC5C")]
			internal void <InvokeReplayEndEvent>b__52_0(ReplayBehaviour b)
			{
			}

			[Token(Token = "0x6001318")]
			[Address(RVA = "0x88AC80", Offset = "0x88AC80", VA = "0x88AC80")]
			internal void <InvokeReplayResetEvent>b__54_0(ReplayBehaviour b)
			{
			}

			[Token(Token = "0x6001319")]
			[Address(RVA = "0x88ACA4", Offset = "0x88ACA4", VA = "0x88ACA4")]
			internal void <InvokeReplayCaptureEvent>b__55_0(ReplayBehaviour b)
			{
			}
		}

		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B923C", Offset = "0x3B923C")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paused;

			[Token(Token = "0x600131A")]
			[Address(RVA = "0x88ACCC", Offset = "0x88ACCC", VA = "0x88ACCC")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x600131B")]
			[Address(RVA = "0x88ACD4", Offset = "0x88ACD4", VA = "0x88ACD4")]
			internal void <InvokeReplayPlayPauseEvent>b__0(ReplayBehaviour b)
			{
			}
		}

		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B924C", Offset = "0x3B924C")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReplayTime updateTime;

			[Token(Token = "0x600131C")]
			[Address(RVA = "0x88AD00", Offset = "0x88AD00", VA = "0x88AD00")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x600131D")]
			[Address(RVA = "0x88AD08", Offset = "0x88AD08", VA = "0x88AD08")]
			internal void <InvokeReplayUpdateEvent>b__0(ReplayBehaviour b)
			{
			}
		}

		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B925C", Offset = "0x3B925C")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion rotation;

			[Token(Token = "0x600131E")]
			[Address(RVA = "0x88AD3C", Offset = "0x88AD3C", VA = "0x88AD3C")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x600131F")]
			[Address(RVA = "0x88AD44", Offset = "0x88AD44", VA = "0x88AD44")]
			internal void <InvokeReplaySpawnedEvent>b__0(ReplayBehaviour b)
			{
			}
		}

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ReplayHandle behaviourHandle;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<ReplayBehaviour> allBehaviours;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ReplayIdentity replayIdentity;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ReplayObject.ReplayObjectReference replayObject;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ReplayVariable> variables;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int variablesCount;

		[Token(Token = "0x1700005D")]
		public ReplayIdentity ReplayIdentity
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x780018", Offset = "0x780018", VA = "0x780018")]
			get
			{
				return default(ReplayIdentity);
			}
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0x780020", Offset = "0x780020", VA = "0x780020")]
			set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public ReplayObject ReplayObject
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x780028", Offset = "0x780028", VA = "0x780028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		public IList<ReplayVariable> Variables
		{
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0x780030", Offset = "0x780030", VA = "0x780030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		public bool HasVariables
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x7802A8", Offset = "0x7802A8", VA = "0x7802A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000061")]
		public bool IsRecording
		{
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0x77F424", Offset = "0x77F424", VA = "0x77F424")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000062")]
		public bool IsReplaying
		{
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x78037C", Offset = "0x78037C", VA = "0x78037C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000063")]
		public ReplayTime PlaybackTime
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0x7803C4", Offset = "0x7803C4", VA = "0x7803C4")]
			get
			{
				return default(ReplayTime);
			}
		}

		[Token(Token = "0x17000064")]
		public ReplayManager.PlaybackDirection PlaybackDirection
		{
			[Token(Token = "0x60006E2")]
			[Address(RVA = "0x7805AC", Offset = "0x7805AC", VA = "0x7805AC")]
			get
			{
				return default(ReplayManager.PlaybackDirection);
			}
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x77DEB8", Offset = "0x77DEB8", VA = "0x77DEB8", Slot = "4")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x78064C", Offset = "0x78064C", VA = "0x78064C", Slot = "5")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x780848", Offset = "0x780848", VA = "0x780848", Slot = "6")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x780948", Offset = "0x780948", VA = "0x780948", Slot = "7")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x780A38", Offset = "0x780A38", VA = "0x780A38", Slot = "8")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x780B28", Offset = "0x780B28", VA = "0x780B28", Slot = "9")]
		public virtual void OnReplayStart()
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x780B2C", Offset = "0x780B2C", VA = "0x780B2C", Slot = "10")]
		public virtual void OnReplayEnd()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x780B30", Offset = "0x780B30", VA = "0x780B30", Slot = "11")]
		public virtual void OnReplayPlayPause(bool paused)
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x780B34", Offset = "0x780B34", VA = "0x780B34", Slot = "12")]
		public virtual void OnReplayReset()
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x780B38", Offset = "0x780B38", VA = "0x780B38", Slot = "13")]
		public virtual void OnReplayCapture()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x780B3C", Offset = "0x780B3C", VA = "0x780B3C", Slot = "14")]
		public virtual void OnReplayUpdate(ReplayTime replayTime)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x780B40", Offset = "0x780B40", VA = "0x780B40", Slot = "15")]
		public virtual void OnReplayEvent(ushort eventID, ReplayState eventData)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x780B44", Offset = "0x780B44", VA = "0x780B44", Slot = "16")]
		public virtual void OnReplaySpawned(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x780B48", Offset = "0x780B48", VA = "0x780B48")]
		public void ForceRegenerateIdentity()
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x780D44", Offset = "0x780D44", VA = "0x780D44")]
		public void RecordVariable(ReplayVariable variable)
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x77F46C", Offset = "0x77F46C", VA = "0x77F46C")]
		public void RecordEvent(ushort eventID, [Optional] ReplayState eventData)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x780E98", Offset = "0x780E98", VA = "0x780E98")]
		public void RecordMethodCall(Action method)
		{
		}

		[Token(Token = "0x60006F4")]
		public void RecordMethodCall<T>(Action<T> method, T arg)
		{
		}

		[Token(Token = "0x60006F5")]
		public void RecordMethodCall<T0, T1>(Action<T0, T1> method, T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x60006F6")]
		public void RecordMethodCall<T0, T1, T2>(Action<T0, T1, T2> method, T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x60006F7")]
		public void RecordMethodCall<T0, T1, T2, T3>(Action<T0, T1, T2, T3> method, T0 arg0, T1 arg1, T2 arg2, T3 arg3)
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x78100C", Offset = "0x78100C", VA = "0x78100C")]
		internal void SubmitReplayVariables()
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x7812B4", Offset = "0x7812B4", VA = "0x7812B4")]
		internal void UpdateReplayVariables()
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x78157C", Offset = "0x78157C", VA = "0x78157C")]
		internal ReplayVariable GetReplayVariable(int fieldOffset)
		{
			return null;
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x7806E0", Offset = "0x7806E0", VA = "0x7806E0")]
		internal void UpdateManagingObject()
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x781888", Offset = "0x781888", VA = "0x781888")]
		private ReplayObject GetManagingObject()
		{
			return null;
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x781A24", Offset = "0x781A24", VA = "0x781A24")]
		internal static void ApplyReplayHandle(IEnumerable<ReplayBehaviour> behaviours, ReplayHandle handle)
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x781CB8", Offset = "0x781CB8", VA = "0x781CB8")]
		internal static void InvokeReplayStartEvent(IEnumerable<ReplayBehaviour> behaviours)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x7821B8", Offset = "0x7821B8", VA = "0x7821B8")]
		internal static void InvokeReplayEndEvent(IEnumerable<ReplayBehaviour> behaviours)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x7822F4", Offset = "0x7822F4", VA = "0x7822F4")]
		internal static void InvokeReplayPlayPauseEvent(IEnumerable<ReplayBehaviour> behaviours, bool paused)
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x7823FC", Offset = "0x7823FC", VA = "0x7823FC")]
		internal static void InvokeReplayResetEvent(IEnumerable<ReplayBehaviour> behaviours)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x782538", Offset = "0x782538", VA = "0x782538")]
		internal static void InvokeReplayCaptureEvent(IEnumerable<ReplayBehaviour> behaviours)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x782674", Offset = "0x782674", VA = "0x782674")]
		internal static void InvokeReplayUpdateEvent(IEnumerable<ReplayBehaviour> behaviours, ReplayTime updateTime)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x782798", Offset = "0x782798", VA = "0x782798")]
		internal static void InvokeReplaySpawnedEvent(IEnumerable<ReplayBehaviour> behaviours, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x781DF4", Offset = "0x781DF4", VA = "0x781DF4")]
		private static void SafeInvokeReplayEvent(IEnumerable<ReplayBehaviour> behaviours, Action<ReplayBehaviour> callback)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x7828E0", Offset = "0x7828E0", VA = "0x7828E0")]
		protected ReplayBehaviour()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class ReplayControls : MonoBehaviour
	{
		[Token(Token = "0x40007F9")]
		private const float playPauseWidth = 24f;

		[Token(Token = "0x40007FA")]
		private const float playPauseHeight = 20f;

		[Token(Token = "0x40007FB")]
		private const float stateButtonWidth = 48f;

		[Token(Token = "0x40007FC")]
		private const float stateButtonHeight = 18f;

		[Token(Token = "0x40007FD")]
		private const float lookMultiplier = 300f;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color normal;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Color highlight;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplayStorageTarget storageTarget;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReplayHandle recordHandle;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReplayHandle playbackHandle;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera freeCam;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 startPosition;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion startRotation;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector2 camRotation;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool showSettings;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool reversePlay;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Texture2D playTexture;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Texture2D pauseTexture;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Texture2D settingsTexture;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Texture2D whitePixel;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D recordTexture;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D playbackTexture;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool recordOnStart;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool allowPlaybackFreeCam;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float flySpeed;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float lookSpeed;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public KeyCode liveModeShortcut;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public KeyCode recordModeShortcut;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public KeyCode playModeShortcut;

		[Token(Token = "0x17000065")]
		public ReplayHandle RecordHandle
		{
			[Token(Token = "0x6000708")]
			[Address(RVA = "0x783B18", Offset = "0x783B18", VA = "0x783B18")]
			get
			{
				return default(ReplayHandle);
			}
		}

		[Token(Token = "0x17000066")]
		public ReplayHandle PlaybackHandle
		{
			[Token(Token = "0x6000709")]
			[Address(RVA = "0x783B20", Offset = "0x783B20", VA = "0x783B20")]
			get
			{
				return default(ReplayHandle);
			}
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x783B28", Offset = "0x783B28", VA = "0x783B28")]
		public void Awake()
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x783E74", Offset = "0x783E74", VA = "0x783E74")]
		public void Start()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x7844AC", Offset = "0x7844AC", VA = "0x7844AC")]
		public void Update()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x7848E4", Offset = "0x7848E4", VA = "0x7848E4")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x7873F8", Offset = "0x7873F8", VA = "0x7873F8")]
		private void DrawGUISettings(Rect area)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x786214", Offset = "0x786214", VA = "0x786214")]
		private void ReplayGoLive()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x786688", Offset = "0x786688", VA = "0x786688")]
		private void EnterPlaybackFreeCam()
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x786134", Offset = "0x786134", VA = "0x786134")]
		private void ExitPlaybackFreeCam()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x786128", Offset = "0x786128", VA = "0x786128")]
		private bool IsReplayKeyPressed(KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x786C70", Offset = "0x786C70", VA = "0x786C70")]
		private void DrawGUILine(Vector2 start, Vector2 end)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x787B44", Offset = "0x787B44", VA = "0x787B44")]
		public ReplayControls()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public struct ReplayHandle : IDisposable
	{
		[Token(Token = "0x200034D")]
		public enum ReplayHandleType
		{
			[Token(Token = "0x4001443")]
			None,
			[Token(Token = "0x4001444")]
			Record,
			[Token(Token = "0x4001445")]
			Replay
		}

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random rand;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HashSet<int> handleIDs;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static HashSet<int> releasedHandleIDs;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int invalidHandleID;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int handleID;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private ReplayHandleType handleType;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly ReplayHandle invalid;

		[Token(Token = "0x17000067")]
		public bool IsDisposed
		{
			[Token(Token = "0x6000716")]
			[Address(RVA = "0x7802DC", Offset = "0x7802DC", VA = "0x7802DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000068")]
		internal ReplayHandleType ReplayType
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0x780358", Offset = "0x780358", VA = "0x780358")]
			get
			{
				return default(ReplayHandleType);
			}
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x789DF8", Offset = "0x789DF8", VA = "0x789DF8")]
		internal ReplayHandle(ReplayHandleType type)
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x789FD0", Offset = "0x789FD0", VA = "0x789FD0", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x78A048", Offset = "0x78A048", VA = "0x78A048", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x78A17C", Offset = "0x78A17C", VA = "0x78A17C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x789D34", Offset = "0x789D34", VA = "0x789D34")]
		private void CheckDisposed()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x789E68", Offset = "0x789E68", VA = "0x789E68")]
		private static int UniqueHandleID()
		{
			return default(int);
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x78A184", Offset = "0x78A184", VA = "0x78A184")]
		internal static void Release(ReplayHandle handle)
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class ReplayHumanoidConfigurator
	{
		[Token(Token = "0x200034E")]
		public sealed class ReplayTransformConfiguration
		{
			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool attachReplayTransformComponent;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ReplayTransform.ReplayTransformFlags boneTransformPositionFlags;

			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReplayTransform.ReplayTransformFlags boneTransformRotationFlags;

			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ReplayTransform.ReplayTransformFlags boneTransformScaleFlags;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly ReplayTransformConfiguration defaultRoot;

			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly ReplayTransformConfiguration defaultLocal;

			[Token(Token = "0x6001320")]
			[Address(RVA = "0x88AD80", Offset = "0x88AD80", VA = "0x88AD80")]
			public ReplayTransformConfiguration()
			{
			}

			[Token(Token = "0x6001321")]
			[Address(RVA = "0x88AD90", Offset = "0x88AD90", VA = "0x88AD90")]
			private ReplayTransformConfiguration(bool local)
			{
			}

			[Token(Token = "0x6001322")]
			[Address(RVA = "0x88ADD8", Offset = "0x88ADD8", VA = "0x88ADD8")]
			public static ReplayTransformConfiguration FromReplayTransform(ReplayTransform transform, bool attachReplayTransformComponent)
			{
				return null;
			}
		}

		[Token(Token = "0x200034F")]
		public struct ReplayHumanoidConfigurationResult
		{
			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform rootTransform;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ReplayObject rootReplayObject;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReplayTransform rootReplayTransform;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReplayBoneConfigurationResult[] configuredBones;
		}

		[Token(Token = "0x2000350")]
		public struct ReplayBoneConfigurationResult
		{
			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform boneTransform;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ReplayTransform boneReplayTransform;
		}

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly HumanBodyBones[] allBones;

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x78B2E4", Offset = "0x78B2E4", VA = "0x78B2E4")]
		public static ReplayHumanoidConfigurationResult ConfigureHumanoidObjectFromAnimator(GameObject objectRoot, [Optional] ReplayTransformConfiguration rootTransformConfiguration, [Optional] ReplayTransformConfiguration boneTransformConfiguration, [Optional] HumanBodyBones[] setupBones)
		{
			return default(ReplayHumanoidConfigurationResult);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x78B7F4", Offset = "0x78B7F4", VA = "0x78B7F4")]
		public static ReplayBoneConfigurationResult ConfigueHumanoidBoneObject(GameObject objectBone, [Optional] ReplayTransformConfiguration transformConfiguration)
		{
			return default(ReplayBoneConfigurationResult);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x78BE48", Offset = "0x78BE48", VA = "0x78BE48")]
		public ReplayHumanoidConfigurator()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public enum PlaybackOrigin
	{
		[Token(Token = "0x400081F")]
		Start,
		[Token(Token = "0x4000820")]
		Current,
		[Token(Token = "0x4000821")]
		End
	}
	[Token(Token = "0x2000152")]
	public enum PlaybackEndBehaviour
	{
		[Token(Token = "0x4000823")]
		EndPlayback,
		[Token(Token = "0x4000824")]
		StopPlayback,
		[Token(Token = "0x4000825")]
		LoopPlayback
	}
	[Token(Token = "0x2000153")]
	public sealed class ReplayManager : MonoBehaviour
	{
		[Token(Token = "0x2000351")]
		public enum PlaybackDirection
		{
			[Token(Token = "0x4001453")]
			Forward,
			[Token(Token = "0x4001454")]
			Backward
		}

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ArgumentException disposedHandleException;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly InvalidOperationException invalidHandleException;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly InvalidOperationException emptySceneException;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ReplayManager managerInstance;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ReplayStorageTarget defaultStorageTarget;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<ReplayHandle, ReplayServiceInstance> replayInstances;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Queue<Action> replayLateCall;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Queue<ReplayHandle> stopPlaybackQueue;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static bool manualStateUpdate;

		[Token(Token = "0x17000069")]
		public static ReplayStorageTarget DefaultStorageTarget
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0x78E638", Offset = "0x78E638", VA = "0x78E638")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000725")]
			[Address(RVA = "0x78E710", Offset = "0x78E710", VA = "0x78E710")]
			set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public static bool IsRecordingAny
		{
			[Token(Token = "0x6000726")]
			[Address(RVA = "0x78E780", Offset = "0x78E780", VA = "0x78E780")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006B")]
		public static bool IsReplayingAny
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0x78E918", Offset = "0x78E918", VA = "0x78E918")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x78EAB0", Offset = "0x78EAB0", VA = "0x78EAB0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x78EAB4", Offset = "0x78EAB4", VA = "0x78EAB4")]
		public void Start()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x78EAB8", Offset = "0x78EAB8", VA = "0x78EAB8")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x78EABC", Offset = "0x78EABC", VA = "0x78EABC")]
		public void Update()
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x78EF54", Offset = "0x78EF54", VA = "0x78EF54")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x78F000", Offset = "0x78F000", VA = "0x78F000")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x78F0AC", Offset = "0x78F0AC", VA = "0x78F0AC")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x78F0B0", Offset = "0x78F0B0", VA = "0x78F0B0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x78F1B4", Offset = "0x78F1B4", VA = "0x78F1B4")]
		internal static void ReplayLateCallEvent(Action action)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x78EB68", Offset = "0x78EB68", VA = "0x78EB68")]
		public static void UpdateState(UltimateReplay.UpdateMethod updateMethod, float deltaTime)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x78F248", Offset = "0x78F248", VA = "0x78F248")]
		public static void UpdateState(float deltaTime)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x78F62C", Offset = "0x78F62C", VA = "0x78F62C")]
		public static void UpdateState(ReplayHandle handle, float deltaTime)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x783FD8", Offset = "0x783FD8", VA = "0x783FD8")]
		public static ReplayHandle BeginRecording([Optional] ReplayStorageTarget recordTarget, [Optional] ReplayScene recordScene, bool cleanRecording = true, bool allowEmptyScene = false, [Optional] ReplayRecordOptions recordOptions)
		{
			return default(ReplayHandle);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x78F948", Offset = "0x78F948", VA = "0x78F948")]
		public static void PauseRecording(ReplayHandle handle)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x78FAC8", Offset = "0x78FAC8", VA = "0x78FAC8")]
		public static void ResumeRecording(ReplayHandle handle)
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x786068", Offset = "0x786068", VA = "0x786068")]
		public static bool IsRecording(ReplayHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x78FC44", Offset = "0x78FC44", VA = "0x78FC44")]
		public static bool IsRecordingPaused(ReplayHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x786874", Offset = "0x786874", VA = "0x786874")]
		public static void StopRecording(ReplayHandle handle)
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x78FDC0", Offset = "0x78FDC0", VA = "0x78FDC0")]
		public static void SetPlaybackTime(ReplayHandle handle, float playbackTimeOffset, PlaybackOrigin origin = PlaybackOrigin.Start)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x7872AC", Offset = "0x7872AC", VA = "0x7872AC")]
		public static void SetPlaybackTimeNormalized(ReplayHandle handle, float playbackNormalizedOffset, PlaybackOrigin origin = PlaybackOrigin.Start)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x7879F8", Offset = "0x7879F8", VA = "0x7879F8")]
		public static void SetPlaybackDirection(ReplayHandle handle, PlaybackDirection direction = PlaybackDirection.Forward)
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x7878E0", Offset = "0x7878E0", VA = "0x7878E0")]
		public static void SetPlaybackTimeScale(ReplayHandle handle, float timeScale = 1f)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x78044C", Offset = "0x78044C", VA = "0x78044C")]
		public static ReplayTime GetPlaybackTime(ReplayHandle handle)
		{
			return default(ReplayTime);
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x78FF0C", Offset = "0x78FF0C", VA = "0x78FF0C")]
		public static float GetPlaybackTimeNormalized(ReplayHandle handle)
		{
			return default(float);
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x78FF7C", Offset = "0x78FF7C", VA = "0x78FF7C")]
		public static float GetPlaybackTimeScale(ReplayHandle handle)
		{
			return default(float);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x78901C", Offset = "0x78901C", VA = "0x78901C")]
		public static PlaybackDirection GetPlaybackDirection(ReplayHandle handle)
		{
			return default(PlaybackDirection);
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x78FFEC", Offset = "0x78FFEC", VA = "0x78FFEC")]
		public static void SetPlaybackEndRestoreSceneMode(ReplayHandle handle, bool restoreReplaySceneOnEnd)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x7900F4", Offset = "0x7900F4", VA = "0x7900F4")]
		public static ReplayHandle BeginPlaybackFrame([Optional] ReplayStorageTarget replaySource, [Optional] ReplayScene playbackScene, bool allowEmptyScene = false, bool restoreReplayScene = true, [Optional] ReplayPlaybackOptions playbackOptions)
		{
			return default(ReplayHandle);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x786AD4", Offset = "0x786AD4", VA = "0x786AD4")]
		public static ReplayHandle BeginPlayback([Optional] ReplayStorageTarget replaySource, [Optional] ReplayScene playbackScene, bool allowEmptyScene = false, bool restoreReplayScene = true, [Optional] ReplayPlaybackOptions playbackOptions)
		{
			return default(ReplayHandle);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x790190", Offset = "0x790190", VA = "0x790190")]
		private static ReplayHandle BeginPlayback(ReplayStorageTarget replaySource, ReplayScene playbackScene, ReplayPlaybackOptions playbackOptions, bool allowEmptyScene, bool restoreReplayScene, bool fixedFrame)
		{
			return default(ReplayHandle);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x7870E0", Offset = "0x7870E0", VA = "0x7870E0")]
		public static void PausePlayback(ReplayHandle handle)
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x786F1C", Offset = "0x786F1C", VA = "0x786F1C")]
		public static void ResumePlayback(ReplayHandle handle)
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x784824", Offset = "0x784824", VA = "0x784824")]
		public static bool IsReplaying(ReplayHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x786DA0", Offset = "0x786DA0", VA = "0x786DA0")]
		public static bool IsPlaybackPaused(ReplayHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x790784", Offset = "0x790784", VA = "0x790784")]
		public static void AddPlaybackEndListener(ReplayHandle handle, Action playbackEndCallback)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x79089C", Offset = "0x79089C", VA = "0x79089C")]
		public static void RemovePlaybackEndListener(ReplayHandle handle, Action playbackEndCallback)
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x7909B4", Offset = "0x7909B4", VA = "0x7909B4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x3C591C", Offset = "0x3C591C")]
		public static void StopPlayback(ReplayHandle handle, bool restorePreviousSceneState = true)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x786300", Offset = "0x786300", VA = "0x786300")]
		public static void StopPlayback(ReplayHandle handle)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x790A1C", Offset = "0x790A1C", VA = "0x790A1C")]
		internal static void StopPlaybackDelayed(ReplayHandle handle)
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x786B70", Offset = "0x786B70", VA = "0x786B70")]
		public static ReplayStorageTarget GetReplayStorageTarget(ReplayHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x790AD0", Offset = "0x790AD0", VA = "0x790AD0")]
		public static ReplayScene GetReplayScene(ReplayHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x790BD0", Offset = "0x790BD0", VA = "0x790BD0")]
		public static void AddReplayObjectToRecordScenes(ReplayObject replayObject)
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x790E10", Offset = "0x790E10", VA = "0x790E10")]
		public static void AddReplayObjectToRecordScene(ReplayHandle recordHandle, ReplayObject replayObject)
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x790FA8", Offset = "0x790FA8", VA = "0x790FA8")]
		public static void AddReplayObjectToPlaybackScenes(ReplayObject playbackObject)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x7911E8", Offset = "0x7911E8", VA = "0x7911E8")]
		public static void AddReplayObjectToPlaybackScene(ReplayHandle playbackHandle, ReplayObject replayObject)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x791380", Offset = "0x791380", VA = "0x791380")]
		public static void RemoveReplayObjectFromRecordScenes(ReplayObject replayObject)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x7915D4", Offset = "0x7915D4", VA = "0x7915D4")]
		public static void RemoveReplayObjectFromRecordScene(ReplayHandle recordHandle, ReplayObject replayObject)
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x791780", Offset = "0x791780", VA = "0x791780")]
		public static void RemoveReplayObjectFromPlaybackScenes(ReplayObject playbackObject)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x7919D4", Offset = "0x7919D4", VA = "0x7919D4")]
		public static void RemoveReplayObjectFromPlaybackScene(ReplayHandle playbackHandle, ReplayObject replayObject)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x783D00", Offset = "0x783D00", VA = "0x783D00")]
		public static void ForceAwake()
		{
		}

		[Token(Token = "0x600075A")]
		private static T GetServiceInstance<T>(ReplayHandle handle) where T : ReplayServiceInstance
		{
			return null;
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x791B80", Offset = "0x791B80", VA = "0x791B80")]
		public static void RegisterReplayPrefab(GameObject prefab)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x791CF4", Offset = "0x791CF4", VA = "0x791CF4")]
		public static GameObject FindReplayPrefab(string prefabName)
		{
			return null;
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x791E24", Offset = "0x791E24", VA = "0x791E24")]
		public ReplayManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000154")]
	public class ReplayPlaybackOptions
	{
		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private PlaybackEndBehaviour playbackEndBehaviour;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int playbackFPS;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UltimateReplay.UpdateMethod playbackUpdateMethod;

		[Token(Token = "0x1700006C")]
		public PlaybackEndBehaviour PlaybackEndBehaviour
		{
			[Token(Token = "0x600075F")]
			[Address(RVA = "0x9467BC", Offset = "0x9467BC", VA = "0x9467BC")]
			get
			{
				return default(PlaybackEndBehaviour);
			}
			[Token(Token = "0x6000760")]
			[Address(RVA = "0x9467C4", Offset = "0x9467C4", VA = "0x9467C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public int PlaybackFPS
		{
			[Token(Token = "0x6000761")]
			[Address(RVA = "0x9467CC", Offset = "0x9467CC", VA = "0x9467CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000762")]
			[Address(RVA = "0x9467D4", Offset = "0x9467D4", VA = "0x9467D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public bool IsPlaybackFPSUnlimited
		{
			[Token(Token = "0x6000763")]
			[Address(RVA = "0x9467DC", Offset = "0x9467DC", VA = "0x9467DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006F")]
		public UltimateReplay.UpdateMethod PlaybackUpdateMethod
		{
			[Token(Token = "0x6000764")]
			[Address(RVA = "0x9467EC", Offset = "0x9467EC", VA = "0x9467EC")]
			get
			{
				return default(UltimateReplay.UpdateMethod);
			}
			[Token(Token = "0x6000765")]
			[Address(RVA = "0x9467F4", Offset = "0x9467F4", VA = "0x9467F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x9467FC", Offset = "0x9467FC", VA = "0x9467FC")]
		public ReplayPlaybackOptions()
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x94680C", Offset = "0x94680C", VA = "0x94680C")]
		public ReplayPlaybackOptions(PlaybackEndBehaviour endBehaviour, int playbackFPS = -1)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000155")]
	public sealed class ReplayRecordOptions
	{
		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BD814", Offset = "0x3BD814")]
		[SerializeField]
		private int recordFPS;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private UltimateReplay.UpdateMethod recordUpdateMethod;

		[Token(Token = "0x4000834")]
		public const int minRecordFPS = 1;

		[Token(Token = "0x4000835")]
		public const int maxRecordFPS = 48;

		[Token(Token = "0x17000070")]
		public int RecordFPS
		{
			[Token(Token = "0x6000768")]
			[Address(RVA = "0x9484E4", Offset = "0x9484E4", VA = "0x9484E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000769")]
			[Address(RVA = "0x9484EC", Offset = "0x9484EC", VA = "0x9484EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public UltimateReplay.UpdateMethod RecordUpdateMethod
		{
			[Token(Token = "0x600076A")]
			[Address(RVA = "0x9484F4", Offset = "0x9484F4", VA = "0x9484F4")]
			get
			{
				return default(UltimateReplay.UpdateMethod);
			}
			[Token(Token = "0x600076B")]
			[Address(RVA = "0x9484FC", Offset = "0x9484FC", VA = "0x9484FC")]
			set
			{
			}
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x948504", Offset = "0x948504", VA = "0x948504")]
		public ReplayRecordOptions()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public sealed class ReplayScene : ReplayLockable
	{
		[Token(Token = "0x2000352")]
		public enum ReplaySceneMode
		{
			[Token(Token = "0x4001456")]
			Live,
			[Token(Token = "0x4001457")]
			Playback,
			[Token(Token = "0x4001458")]
			Record
		}

		[Serializable]
		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B926C", Offset = "0x3B926C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ReplayObject> <>9__38_0;

			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<ReplayBehaviour> <>9__38_1;

			[Token(Token = "0x6001325")]
			[Address(RVA = "0x88B0F8", Offset = "0x88B0F8", VA = "0x88B0F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001326")]
			[Address(RVA = "0x88B100", Offset = "0x88B100", VA = "0x88B100")]
			internal void <.cctor>b__26_0(Scene scene, LoadSceneMode loadMode)
			{
			}

			[Token(Token = "0x6001327")]
			[Address(RVA = "0x88B164", Offset = "0x88B164", VA = "0x88B164")]
			internal void <.cctor>b__26_1(Scene scene0, Scene scene1)
			{
			}

			[Token(Token = "0x6001328")]
			[Address(RVA = "0x88B1C8", Offset = "0x88B1C8", VA = "0x88B1C8")]
			internal bool <CheckIntegrity>b__38_0(ReplayObject r)
			{
				return default(bool);
			}

			[Token(Token = "0x6001329")]
			[Address(RVA = "0x88B238", Offset = "0x88B238", VA = "0x88B238")]
			internal bool <CheckIntegrity>b__38_1(ReplayBehaviour b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B927C", Offset = "0x3B927C")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReplayIdentity replayIdentity;

			[Token(Token = "0x600132A")]
			[Address(RVA = "0x88B2A8", Offset = "0x88B2A8", VA = "0x88B2A8")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600132B")]
			[Address(RVA = "0x88B2B0", Offset = "0x88B2B0", VA = "0x88B2B0")]
			internal bool <HasReplayObject>b__0(ReplayObject o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B928C", Offset = "0x3B928C")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReplayIdentity replayIdentity;

			[Token(Token = "0x600132C")]
			[Address(RVA = "0x88B334", Offset = "0x88B334", VA = "0x88B334")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x600132D")]
			[Address(RVA = "0x88B33C", Offset = "0x88B33C", VA = "0x88B33C")]
			internal bool <GetReplayObject>b__0(ReplayObject o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IReplayPreparer defaultReplayPreparer;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ReplayScene currentScene;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IReplayPreparer replayPreparer;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ReplayObject> replayObjects;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ReplayBehaviour> replayBehaviours;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Queue<ReplayObject> dynamicReplayObjects;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReplaySnapshot prePlaybackState;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isPlayback;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool restorePreviousSceneState;

		[Token(Token = "0x17000072")]
		public static ReplayScene CurrentScene
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0x949D40", Offset = "0x949D40", VA = "0x949D40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		public bool ReplayEnabled
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0x949EA4", Offset = "0x949EA4", VA = "0x949EA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000074")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000773")]
			[Address(RVA = "0x949EAC", Offset = "0x949EAC", VA = "0x949EAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000075")]
		public IList<ReplayObject> ActiveReplayObjects
		{
			[Token(Token = "0x6000774")]
			[Address(RVA = "0x949F00", Offset = "0x949F00", VA = "0x949F00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		public IList<ReplayBehaviour> ActiveReplayBehaviours
		{
			[Token(Token = "0x6000775")]
			[Address(RVA = "0x949F08", Offset = "0x949F08", VA = "0x949F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ReplayObject> OnReplayObjectAdded
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0x949AC0", Offset = "0x949AC0", VA = "0x949AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C5954", Offset = "0x3C5954")]
			add
			{
			}
			[Token(Token = "0x600076E")]
			[Address(RVA = "0x949B60", Offset = "0x949B60", VA = "0x949B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C5964", Offset = "0x3C5964")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ReplayObject> OnReplayObjectRemoved
		{
			[Token(Token = "0x600076F")]
			[Address(RVA = "0x949C00", Offset = "0x949C00", VA = "0x949C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C5974", Offset = "0x3C5974")]
			add
			{
			}
			[Token(Token = "0x6000770")]
			[Address(RVA = "0x949CA0", Offset = "0x949CA0", VA = "0x949CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C5984", Offset = "0x3C5984")]
			remove
			{
			}
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x949F10", Offset = "0x949F10", VA = "0x949F10")]
		static ReplayScene()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x94A088", Offset = "0x94A088", VA = "0x94A088")]
		public ReplayScene([Optional] IReplayPreparer replayPreparer)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x94A290", Offset = "0x94A290", VA = "0x94A290")]
		public ReplayScene(ReplayObject replayObject, [Optional] IReplayPreparer replayPreparer)
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x94A77C", Offset = "0x94A77C", VA = "0x94A77C")]
		public ReplayScene(IEnumerable<ReplayObject> replayObjects, [Optional] IReplayPreparer replayPreparer)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x94A52C", Offset = "0x94A52C", VA = "0x94A52C")]
		public void AddReplayObject(ReplayObject replayObject)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x94AB8C", Offset = "0x94AB8C", VA = "0x94AB8C")]
		public void RemoveReplayObject(ReplayObject replayObject)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x94AD58", Offset = "0x94AD58", VA = "0x94AD58")]
		public void SetReplaySceneMode(ReplaySceneMode mode, ReplayInitialDataBuffer initialStateBuffer, ReplayHandle handle)
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x94AE70", Offset = "0x94AE70", VA = "0x94AE70")]
		private void PrepareForPlayback(ReplayInitialDataBuffer initialStateBuffer)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x94B00C", Offset = "0x94B00C", VA = "0x94B00C")]
		private void PrepareForGameplay(ReplayInitialDataBuffer initialStateBuffer)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x948744", Offset = "0x948744", VA = "0x948744")]
		public ReplaySnapshot CaptureSnapshot(float timeStamp, int sequenceID, ReplayInitialDataBuffer initialStateBuffer)
		{
			return null;
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x946E00", Offset = "0x946E00", VA = "0x946E00")]
		public void RestoreSnapshot(ReplaySnapshot snapshot, ReplayInitialDataBuffer initialStateBuffer)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x94C858", Offset = "0x94C858", VA = "0x94C858")]
		public bool HasReplayObject(ReplayIdentity replayIdentity)
		{
			return default(bool);
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x94C948", Offset = "0x94C948", VA = "0x94C948")]
		public bool CheckIntegrity(bool throwOnError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x94CC98", Offset = "0x94CC98", VA = "0x94CC98")]
		public ReplayObject GetReplayObject(ReplayIdentity replayIdentity)
		{
			return null;
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x949DFC", Offset = "0x949DFC", VA = "0x949DFC")]
		public static ReplayScene FromCurrentScene([Optional] IReplayPreparer preparer)
		{
			return null;
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x94CD88", Offset = "0x94CD88", VA = "0x94CD88")]
		public static ReplayScene FromScene(Scene scene, [Optional] IReplayPreparer preparer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000157")]
	public class ReplaySceneManager : MonoBehaviour
	{
		[Token(Token = "0x2000356")]
		public enum ReplayStorageMethod
		{
			[Token(Token = "0x400145F")]
			StoreInMemory,
			[Token(Token = "0x4001460")]
			StreamToFile
		}

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ReplaySceneManager instance;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplayScene currentScene;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReplayStorageTarget storageTarget;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReplayHandle recordHandle;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReplayHandle playbackHandle;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool recordOnStart;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ReplayStorageMethod recordStorageMethod;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string recordFileFolder;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ReplayFileTarget.ReplayFileFormat recordFileFormat;

		[Token(Token = "0x17000077")]
		public static ReplaySceneManager Instance
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0x94D184", Offset = "0x94D184", VA = "0x94D184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		public bool IsRecording
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x94D1E8", Offset = "0x94D1E8", VA = "0x94D1E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000079")]
		public bool IsRecordingPaused
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0x94D258", Offset = "0x94D258", VA = "0x94D258")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007A")]
		public ReplayTime PlaybackTime
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0x94D2C8", Offset = "0x94D2C8", VA = "0x94D2C8")]
			get
			{
				return default(ReplayTime);
			}
		}

		[Token(Token = "0x1700007B")]
		public bool IsReplaying
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0x94D338", Offset = "0x94D338", VA = "0x94D338")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007C")]
		public bool IsPlaybackPaused
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0x94D3A8", Offset = "0x94D3A8", VA = "0x94D3A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007D")]
		public ReplayStorageTarget ReplayStorageTarget
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0x94D418", Offset = "0x94D418", VA = "0x94D418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		public ReplayScene ReplayScene
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0x94D420", Offset = "0x94D420", VA = "0x94D420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x94D428", Offset = "0x94D428", VA = "0x94D428")]
		public void Awake()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x94D498", Offset = "0x94D498", VA = "0x94D498")]
		public void Start()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x94D5D4", Offset = "0x94D5D4", VA = "0x94D5D4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x94D530", Offset = "0x94D530", VA = "0x94D530")]
		public void BeginRecording(bool cleanRecording = true, bool allowEmptyScene = false, [Optional] ReplayRecordOptions recordOptions)
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x94D750", Offset = "0x94D750", VA = "0x94D750")]
		public void PauseRecording()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x94D7C0", Offset = "0x94D7C0", VA = "0x94D7C0")]
		public void ResumeRecording()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x94D830", Offset = "0x94D830", VA = "0x94D830")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x94D8A0", Offset = "0x94D8A0", VA = "0x94D8A0")]
		public void SetPlaybackTime(float playbackTimeOffset, PlaybackOrigin origin = PlaybackOrigin.Start)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x94D928", Offset = "0x94D928", VA = "0x94D928")]
		public void SetPlaybackTimeNormalized(float playbackTimeNormalizedOffset, PlaybackOrigin origin = PlaybackOrigin.Start)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x94D9B0", Offset = "0x94D9B0", VA = "0x94D9B0")]
		public void SetPlaybackDirection(ReplayManager.PlaybackDirection direction)
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x94DA28", Offset = "0x94DA28", VA = "0x94DA28")]
		public void SetPlaybackTimeScale(float timeScale = 1f)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x94DAA8", Offset = "0x94DAA8", VA = "0x94DAA8")]
		public void BeginPlaybackFrame(bool allowEmptyScene = false, [Optional] ReplayPlaybackOptions playbackOptions)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x94DB40", Offset = "0x94DB40", VA = "0x94DB40")]
		public void BeginPlayback(bool allowEmptyScene = false, [Optional] ReplayPlaybackOptions playbackOptions)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x94DBD8", Offset = "0x94DBD8", VA = "0x94DBD8")]
		public void PausePlayback()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x94DC48", Offset = "0x94DC48", VA = "0x94DC48")]
		public void ResumePlayback()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x94DCB8", Offset = "0x94DCB8", VA = "0x94DCB8")]
		public void AddPlaybackEndListener(Action playbackEndCallback)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x94DD30", Offset = "0x94DD30", VA = "0x94DD30")]
		public void RemovePlaybackEndListener(Action playbackEndCallback)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x94DDA8", Offset = "0x94DDA8", VA = "0x94DDA8")]
		public void StopPlayback(bool restorePreviousSceneState = true)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x94D6AC", Offset = "0x94D6AC", VA = "0x94D6AC")]
		private void CreateStorageTarget()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x94DE20", Offset = "0x94DE20", VA = "0x94DE20")]
		public ReplaySceneManager()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class ReplayStatistics : MonoBehaviour
	{
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x951AAC", Offset = "0x951AAC", VA = "0x951AAC")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x951FF4", Offset = "0x951FF4", VA = "0x951FF4")]
		public ReplayStatistics()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public struct ReplayTime
	{
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float time;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float normalizedTime;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float timeScale;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float delta;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ReplayTime startTime;

		[Token(Token = "0x1700007F")]
		public float Time
		{
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0x95B7C0", Offset = "0x95B7C0", VA = "0x95B7C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x95B7C8", Offset = "0x95B7C8", VA = "0x95B7C8")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public float NormalizedTime
		{
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0x95B7D0", Offset = "0x95B7D0", VA = "0x95B7D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x95B7D8", Offset = "0x95B7D8", VA = "0x95B7D8")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public float TimeScale
		{
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0x95B7E0", Offset = "0x95B7E0", VA = "0x95B7E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000082")]
		public float Delta
		{
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x95B7E8", Offset = "0x95B7E8", VA = "0x95B7E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x95B7F0", Offset = "0x95B7F0", VA = "0x95B7F0")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public ReplayManager.PlaybackDirection TimeScaleDirection
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x9474F0", Offset = "0x9474F0", VA = "0x9474F0")]
			get
			{
				return default(ReplayManager.PlaybackDirection);
			}
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x9468D0", Offset = "0x9468D0", VA = "0x9468D0")]
		internal ReplayTime(float time, float duration, float timeScale, float delta)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x95B7F8", Offset = "0x95B7F8", VA = "0x95B7F8")]
		public static string GetCorrectedTimeValueString(float timeValue)
		{
			return null;
		}
	}
	[Token(Token = "0x200015A")]
	public sealed class ReplayState : IDisposable, IReplayReusable, IReplaySerialize, IReplaySnapshotStorable, IReplayStreamSerialize
	{
		[Serializable]
		[Token(Token = "0x2000357")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B929C", Offset = "0x3B929C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x600132F")]
			[Address(RVA = "0x88B420", Offset = "0x88B420", VA = "0x88B420")]
			public <>c()
			{
			}

			[Token(Token = "0x6001330")]
			[Address(RVA = "0x88B428", Offset = "0x88B428", VA = "0x88B428")]
			internal ReplayState <.cctor>b__21_0()
			{
				return null;
			}
		}

		[Token(Token = "0x400084F")]
		private const int maxByteAllocation = 4;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Type, MethodInfo> serializeMethods;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<Type, MethodInfo> deserializeMethods;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly byte[] sharedBuffer;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly byte[] sharedDataBuffer;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<byte> bytes;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long dataHash;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int dataSize;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int readPointer;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool suppressDisposeCheck;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly ReplayInstancePool<ReplayState> pool;

		[Token(Token = "0x17000084")]
		public bool CanRead
		{
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x94F560", Offset = "0x94F560", VA = "0x94F560")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		public bool EndRead
		{
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x94F634", Offset = "0x94F634", VA = "0x94F634")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		public int Size
		{
			[Token(Token = "0x60007B2")]
			[Address(RVA = "0x949368", Offset = "0x949368", VA = "0x949368")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000087")]
		private ReplaySnapshotStorableType UltimateReplay.Storage.IReplaySnapshotStorable.StorageType
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x94F668", Offset = "0x94F668", VA = "0x94F668", Slot = "8")]
			get
			{
				return default(ReplaySnapshotStorableType);
			}
		}

		[Token(Token = "0x17000088")]
		public long DataHash
		{
			[Token(Token = "0x60007B4")]
			[Address(RVA = "0x94F680", Offset = "0x94F680", VA = "0x94F680")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x94F7C8", Offset = "0x94F7C8", VA = "0x94F7C8")]
		static ReplayState()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x94FC4C", Offset = "0x94FC4C", VA = "0x94FC4C")]
		private ReplayState()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x94FCD0", Offset = "0x94FCD0", VA = "0x94FCD0", Slot = "5")]
		private void UltimateReplay.Core.IReplayReusable.Initialize()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x94FCE0", Offset = "0x94FCE0", VA = "0x94FCE0")]
		public void InitializeFromData(byte[] stateData)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x9446B8", Offset = "0x9446B8", VA = "0x9446B8", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x94F03C", Offset = "0x94F03C", VA = "0x94F03C")]
		public void PrepareForRead()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x94FD58", Offset = "0x94FD58", VA = "0x94FD58")]
		public void Clear()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x94FDC0", Offset = "0x94FDC0", VA = "0x94FDC0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x94FF18", Offset = "0x94FF18", VA = "0x94FF18")]
		public byte[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x94FF74", Offset = "0x94FF74", VA = "0x94FF74")]
		public string ToHexString()
		{
			return null;
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x950154", Offset = "0x950154", VA = "0x950154")]
		public bool IsDataEqual(ReplayState other)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x9501C0", Offset = "0x9501C0", VA = "0x9501C0", Slot = "6")]
		private void UltimateReplay.Core.IReplaySerialize.OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x9502A0", Offset = "0x9502A0", VA = "0x9502A0", Slot = "7")]
		private void UltimateReplay.Core.IReplaySerialize.OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x95044C", Offset = "0x95044C", VA = "0x95044C", Slot = "9")]
		private void UltimateReplay.Storage.IReplayStreamSerialize.OnReplayStreamSerialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x9505AC", Offset = "0x9505AC", VA = "0x9505AC", Slot = "10")]
		private void UltimateReplay.Storage.IReplayStreamSerialize.OnReplayStreamDeserialize(BinaryReader reader)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x94F6B8", Offset = "0x94F6B8", VA = "0x94F6B8")]
		private long GetDataHash()
		{
			return default(long);
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x94F5BC", Offset = "0x94F5BC", VA = "0x94F5BC")]
		private void CheckDisposed()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x950664", Offset = "0x950664", VA = "0x950664")]
		public static bool IsTypeSerializable(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C7")]
		public static bool IsTypeSerializable<T>()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x9506F8", Offset = "0x9506F8", VA = "0x9506F8")]
		public static MethodInfo GetSerializeMethod(Type type)
		{
			return null;
		}

		[Token(Token = "0x60007C9")]
		public static MethodInfo GetSerializeMethod<T>()
		{
			return null;
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x95079C", Offset = "0x95079C", VA = "0x95079C")]
		public static MethodInfo GetDeserializeMethod(Type type)
		{
			return null;
		}

		[Token(Token = "0x60007CB")]
		public static MethodInfo GetDeserializeMethod<T>()
		{
			return null;
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x950840", Offset = "0x950840", VA = "0x950840")]
		public static ReplayState FromByteArray(byte[] rawStateData)
		{
			return null;
		}

		[Token(Token = "0x60007CD")]
		public T ReadSerializable<T>() where T : IReplaySerialize, new()
		{
			return (T)null;
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x9508E8", Offset = "0x9508E8", VA = "0x9508E8")]
		public bool ReadSerializable(IReplaySerialize replaySerializable)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CF")]
		public bool ReadSerializable<T>(T replaySerializable) where T : IReplaySerialize
		{
			return default(bool);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x9451B8", Offset = "0x9451B8", VA = "0x9451B8")]
		public byte ReadByte()
		{
			return default(byte);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x950378", Offset = "0x950378", VA = "0x950378")]
		public byte[] ReadBytes(int amount)
		{
			return null;
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x9509B8", Offset = "0x9509B8", VA = "0x9509B8")]
		public void ReadBytes(byte[] buffer, int offset, int amount)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x950A5C", Offset = "0x950A5C", VA = "0x950A5C")]
		public short ReadInt16()
		{
			return default(short);
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x945308", Offset = "0x945308", VA = "0x945308")]
		public ushort ReadUInt16()
		{
			return default(ushort);
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x950AEC", Offset = "0x950AEC", VA = "0x950AEC")]
		public int ReadInt32()
		{
			return default(int);
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x945C48", Offset = "0x945C48", VA = "0x945C48")]
		public uint ReadUInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x950B7C", Offset = "0x950B7C", VA = "0x950B7C")]
		public long ReadInt64()
		{
			return default(long);
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x950C0C", Offset = "0x950C0C", VA = "0x950C0C")]
		public ulong ReadUInt64()
		{
			return default(ulong);
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x945C74", Offset = "0x945C74", VA = "0x945C74")]
		public float ReadFloat()
		{
			return default(float);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x950C10", Offset = "0x950C10", VA = "0x950C10")]
		public double ReadDouble()
		{
			return default(double);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x950CA0", Offset = "0x950CA0", VA = "0x950CA0")]
		public bool ReadBool()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x950D30", Offset = "0x950D30", VA = "0x950D30")]
		public string ReadString()
		{
			return null;
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x950D80", Offset = "0x950D80", VA = "0x950D80")]
		public Vector2 ReadVec2()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x948418", Offset = "0x948418", VA = "0x948418")]
		public Vector3 ReadVec3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x950DBC", Offset = "0x950DBC", VA = "0x950DBC")]
		public Vector4 ReadVec4()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x950E40", Offset = "0x950E40", VA = "0x950E40")]
		public Quaternion ReadQuat()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x950EC4", Offset = "0x950EC4", VA = "0x950EC4")]
		public Color ReadColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x950F48", Offset = "0x950F48", VA = "0x950F48")]
		public Color32 ReadColor32()
		{
			return default(Color32);
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x945C4C", Offset = "0x945C4C", VA = "0x945C4C")]
		public float ReadFloatLowPrecision()
		{
			return default(float);
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x950FC0", Offset = "0x950FC0", VA = "0x950FC0")]
		public Vector2 ReadVec2LowPrecision()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x9483A4", Offset = "0x9483A4", VA = "0x9483A4")]
		public Vector3 ReadVec3LowPrecision()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x951014", Offset = "0x951014", VA = "0x951014")]
		public Vector4 ReadVec4LowPrecision()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x9510C0", Offset = "0x9510C0", VA = "0x9510C0")]
		public Quaternion ReadQuatLowPrecision()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x944E48", Offset = "0x944E48", VA = "0x944E48")]
		public void Write(IReplaySerialize replaySerializable)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x944D70", Offset = "0x944D70", VA = "0x944D70")]
		public void Write(byte value)
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x95116C", Offset = "0x95116C", VA = "0x95116C")]
		public void Write(sbyte value)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x951170", Offset = "0x951170", VA = "0x951170")]
		public void Write(byte[] bytes)
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x951204", Offset = "0x951204", VA = "0x951204")]
		public void Write(byte[] bytes, int offset, int length)
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x9512A8", Offset = "0x9512A8", VA = "0x9512A8")]
		public void Write(short value)
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x944F10", Offset = "0x944F10", VA = "0x944F10")]
		public void Write(ushort value)
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x951340", Offset = "0x951340", VA = "0x951340")]
		public void Write(int value)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x945B9C", Offset = "0x945B9C", VA = "0x945B9C")]
		public void Write(uint value)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x9513D8", Offset = "0x9513D8", VA = "0x9513D8")]
		public void Write(long value)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x951470", Offset = "0x951470", VA = "0x951470")]
		public void Write(ulong value)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x945BA8", Offset = "0x945BA8", VA = "0x945BA8")]
		public void Write(float value)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x951474", Offset = "0x951474", VA = "0x951474")]
		public void Write(double value)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x951514", Offset = "0x951514", VA = "0x951514")]
		public void Write(bool value)
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x9515AC", Offset = "0x9515AC", VA = "0x9515AC")]
		public void Write(string value)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x95160C", Offset = "0x95160C", VA = "0x95160C")]
		public void Write(Vector2 value)
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x948210", Offset = "0x948210", VA = "0x948210")]
		public void Write(Vector3 value)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x951660", Offset = "0x951660", VA = "0x951660")]
		public void Write(Vector4 value)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x9516DC", Offset = "0x9516DC", VA = "0x9516DC")]
		public void Write(Quaternion value)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x951758", Offset = "0x951758", VA = "0x951758")]
		public void Write(Color value)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x9517D4", Offset = "0x9517D4", VA = "0x9517D4")]
		public void Write(Color32 value)
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x945BA0", Offset = "0x945BA0", VA = "0x945BA0")]
		public void WriteLowPrecision(float value)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x951848", Offset = "0x951848", VA = "0x951848")]
		public void WriteLowPrecision(Vector2 value)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x9481A4", Offset = "0x9481A4", VA = "0x9481A4")]
		public void WriteLowPrecision(Vector3 value)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x95189C", Offset = "0x95189C", VA = "0x95189C")]
		public void WriteLowPrecision(Vector4 value)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x951918", Offset = "0x951918", VA = "0x951918")]
		public void WriteLowPrecision(Quaternion value)
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class UltimateReplay : ScriptableObject
	{
		[Token(Token = "0x2000358")]
		public enum UpdateMethod
		{
			[Token(Token = "0x4001463")]
			Update,
			[Token(Token = "0x4001464")]
			LateUpdate,
			[Token(Token = "0x4001465")]
			FixedUpdate
		}

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<GameObject, Vector3, Quaternion, GameObject> OnReplayInstantiate;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GameObject> OnReplayDestroy;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static UltimateReplay settingsInstance;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BD888", Offset = "0x3BD888")]
		public DefaultReplayPreparer defaultReplayPreparer;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReplayRecordOptions recordOptions;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ReplayPlaybackOptions playbackOptions;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ReplayablePrefabs prefabs;

		[Token(Token = "0x17000089")]
		public static UltimateReplay Settings
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0xFC3FA4", Offset = "0xFC3FA4", VA = "0xFC3FA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xFC4180", Offset = "0xFC4180", VA = "0xFC4180")]
		public static GameObject ReplayInstantiate(GameObject prefab, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xFC44CC", Offset = "0xFC44CC", VA = "0xFC44CC")]
		public static void ReplayDestroy(GameObject go)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xFC46E8", Offset = "0xFC46E8", VA = "0xFC46E8")]
		public DefaultReplayPreparer CreateDefaultPreparer()
		{
			return null;
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xFC4708", Offset = "0xFC4708", VA = "0xFC4708")]
		public UltimateReplay()
		{
		}
	}
	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x3B8810", Offset = "0x3B8810")]
	public sealed class ReplayComponentPreparerAttribute : Attribute
	{
		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type componentType;

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x783AEC", Offset = "0x783AEC", VA = "0x783AEC")]
		public ReplayComponentPreparerAttribute(Type componentType)
		{
		}
	}
	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x3B8844", Offset = "0x3B8844")]
	public sealed class ReplayIgnoreAttribute : Attribute
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x78C94C", Offset = "0x78C94C", VA = "0x78C94C")]
		public ReplayIgnoreAttribute()
		{
		}
	}
	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x3B8858", Offset = "0x3B8858")]
	public sealed class ReplayMethodAttribute : Attribute
	{
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x795348", Offset = "0x795348", VA = "0x795348")]
		public ReplayMethodAttribute()
		{
		}
	}
	[Token(Token = "0x200015F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x3B888C", Offset = "0x3B888C")]
	public sealed class ReplayTextSerializeAttribute : Attribute
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string overrideName;

		[Token(Token = "0x1700008A")]
		public string OverrideName
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0x95B77C", Offset = "0x95B77C", VA = "0x95B77C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x95B784", Offset = "0x95B784", VA = "0x95B784")]
		public ReplayTextSerializeAttribute([Optional] string overrideName)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x95B7B0", Offset = "0x95B7B0", VA = "0x95B7B0")]
		public string GetSerializeName(string fallback)
		{
			return null;
		}
	}
	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x3B88C0", Offset = "0x3B88C0")]
	public sealed class ReplayVarAttribute : Attribute
	{
		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool interpolate;

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xF9FB58", Offset = "0xF9FB58", VA = "0xF9FB58")]
		public ReplayVarAttribute(bool interpolated = true)
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class ReplayFreeze : MonoBehaviour
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplayStorageTarget storageTarget;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReplayHandle recordHandle;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReplayHandle playbackHandle;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReplayScene recordScene;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReplayScene playbackScene;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HeartController heartController;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD898", Offset = "0x3BD898")]
		public bool recordOnStart;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD8D0", Offset = "0x3BD8D0")]
		public float recordingLength;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD908", Offset = "0x3BD908")]
		public ReplayObject animatorHeartreplayObject;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Animator animatorFromReplayObj;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ReplayObject animatorBabyObject;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ReplayObject timelineObject;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ReplayObject bedObject;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ReplayObject[] doppler;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD940", Offset = "0x3BD940")]
		public MovementManager movmentManager;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD978", Offset = "0x3BD978")]
		public ReplayObject ghostUsg;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD9B0", Offset = "0x3BD9B0")]
		public ReplayObject probeUsg;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BD9E8", Offset = "0x3BD9E8")]
		public Transform referenceUsg;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BDA20", Offset = "0x3BDA20")]
		public GameObject indicator;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Image fillImage;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _isPaused;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BDA58", Offset = "0x3BDA58")]
		public float playbackTime;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BDA90", Offset = "0x3BDA90")]
		public GameObject RightTouch_WithProbe;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject LeftTouch_WithProbe;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject RightTouch_NoProbe;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject LeftTouch_NoProbe;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public UnityEvent isRecording;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public UnityEvent isFreeze;

		[Token(Token = "0x1700008B")]
		public ReplayHandle RecordHandle
		{
			[Token(Token = "0x600080F")]
			[Address(RVA = "0x788A08", Offset = "0x788A08", VA = "0x788A08")]
			get
			{
				return default(ReplayHandle);
			}
		}

		[Token(Token = "0x1700008C")]
		public ReplayHandle PlaybackHandle
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0x788A10", Offset = "0x788A10", VA = "0x788A10")]
			get
			{
				return default(ReplayHandle);
			}
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x788A18", Offset = "0x788A18", VA = "0x788A18")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x788A70", Offset = "0x788A70", VA = "0x788A70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x788A74", Offset = "0x788A74", VA = "0x788A74")]
		public void StartRecording()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x788E88", Offset = "0x788E88", VA = "0x788E88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x7890A8", Offset = "0x7890A8", VA = "0x7890A8")]
		public void ProcessJoystick(float value)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x789204", Offset = "0x789204", VA = "0x789204")]
		public void PausePlayback()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x7892A4", Offset = "0x7892A4", VA = "0x7892A4")]
		public void ResumePlayback()
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x789348", Offset = "0x789348", VA = "0x789348")]
		public void ToggleRecording()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x7893D4", Offset = "0x7893D4", VA = "0x7893D4")]
		public void SetPlaybackFreezeMode()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x789AA4", Offset = "0x789AA4", VA = "0x789AA4")]
		public void StopPlaybackAftFreezeStarted()
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x789B34", Offset = "0x789B34", VA = "0x789B34")]
		public void ResetStorage()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x788C08", Offset = "0x788C08", VA = "0x788C08")]
		public void SetRecordingMode()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x789BB0", Offset = "0x789BB0", VA = "0x789BB0")]
		private void SetNoRecording()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x7896B4", Offset = "0x7896B4", VA = "0x7896B4")]
		public void UpdateProbeIndicator()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x789C9C", Offset = "0x789C9C", VA = "0x789C9C")]
		public ReplayFreeze()
		{
		}
	}
}
namespace UltimateReplay.Util
{
	[StructLayout(2)]
	[Token(Token = "0x2000162")]
	internal struct Common32
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Common32 conversion;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float single;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int integer;

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x8C6C8C", Offset = "0x8C6C8C", VA = "0x8C6C8C")]
		public static float ToSingle(int value)
		{
			return default(float);
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x8C6D08", Offset = "0x8C6D08", VA = "0x8C6D08")]
		public static int ToInteger(float value)
		{
			return default(int);
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000163")]
	internal struct Common64
	{
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Common64 conversion;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double single;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long integer;

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x8C6D88", Offset = "0x8C6D88", VA = "0x8C6D88")]
		public static double ToDouble(long value)
		{
			return default(double);
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x8C6E04", Offset = "0x8C6E04", VA = "0x8C6E04")]
		public static long ToInteger(double value)
		{
			return default(long);
		}
	}
	[Token(Token = "0x2000164")]
	public static class BitConverterNonAlloc
	{
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x76ECCC", Offset = "0x76ECCC", VA = "0x76ECCC")]
		public static void GetBytes(byte[] buffer, short value)
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x76ED0C", Offset = "0x76ED0C", VA = "0x76ED0C")]
		public static void GetBytes(byte[] buffer, int value)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x76ED6C", Offset = "0x76ED6C", VA = "0x76ED6C")]
		public static void GetBytes(byte[] buffer, long value)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x76EE0C", Offset = "0x76EE0C", VA = "0x76EE0C")]
		public static void GetBytes(byte[] buffer, float value)
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x76EE90", Offset = "0x76EE90", VA = "0x76EE90")]
		public static void GetBytes(byte[] buffer, double value)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x76EF14", Offset = "0x76EF14", VA = "0x76EF14")]
		public static void GetBytes(byte[] buffer, bool value)
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x76EF48", Offset = "0x76EF48", VA = "0x76EF48")]
		public static short GetInt16(byte[] buffer)
		{
			return default(short);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x76EF88", Offset = "0x76EF88", VA = "0x76EF88")]
		public static int GetInt32(byte[] buffer)
		{
			return default(int);
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x76EFEC", Offset = "0x76EFEC", VA = "0x76EFEC")]
		public static long GetInt64(byte[] buffer)
		{
			return default(long);
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x76F094", Offset = "0x76F094", VA = "0x76F094")]
		public static float GetFloat(byte[] buffer)
		{
			return default(float);
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x76F110", Offset = "0x76F110", VA = "0x76F110")]
		public static double GetDouble(byte[] buffer)
		{
			return default(double);
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x76F18C", Offset = "0x76F18C", VA = "0x76F18C")]
		public static bool GetBool(byte[] buffer)
		{
			return default(bool);
		}
	}
}
namespace UltimateReplay.Storage
{
	[Token(Token = "0x2000165")]
	public class ReplayFileBinaryTarget : ReplayFileTarget
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReplayStreamBinaryTarget binaryStream;

		[Token(Token = "0x1700008D")]
		internal override ReplayManager.PlaybackDirection PlaybackDirection
		{
			[Token(Token = "0x6000832")]
			[Address(RVA = "0x788140", Offset = "0x788140", VA = "0x788140", Slot = "8")]
			get
			{
				return default(ReplayManager.PlaybackDirection);
			}
			[Token(Token = "0x6000833")]
			[Address(RVA = "0x7881CC", Offset = "0x7881CC", VA = "0x7881CC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public override float Duration
		{
			[Token(Token = "0x6000834")]
			[Address(RVA = "0x78820C", Offset = "0x78820C", VA = "0x78820C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008F")]
		public override int MemorySize
		{
			[Token(Token = "0x6000835")]
			[Address(RVA = "0x788240", Offset = "0x788240", VA = "0x788240", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000090")]
		public override ReplayInitialDataBuffer InitialStateBuffer
		{
			[Token(Token = "0x6000836")]
			[Address(RVA = "0x788274", Offset = "0x788274", VA = "0x788274", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x7882A8", Offset = "0x7882A8", VA = "0x7882A8")]
		public ReplayFileBinaryTarget(string filePath, ReplayStreamTarget.AccessMode accessMode = ReplayStreamTarget.AccessMode.Read, ReplayCompressionLevel compressionLevel = ReplayCompressionLevel.Optimal, int chunkSize = 24)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x7884F4", Offset = "0x7884F4", VA = "0x7884F4", Slot = "18")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x78857C", Offset = "0x78857C", VA = "0x78857C", Slot = "12")]
		public override ReplaySnapshot FetchSnapshot(float timeStamp)
		{
			return null;
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x7885A0", Offset = "0x7885A0", VA = "0x7885A0", Slot = "13")]
		public override ReplaySnapshot FetchSnapshot(int sequenceID)
		{
			return null;
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x7885E0", Offset = "0x7885E0", VA = "0x7885E0", Slot = "14")]
		public override void PrepareTarget(ReplayTargetTask mode)
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x788620", Offset = "0x788620", VA = "0x788620", Slot = "11")]
		public override void StoreSnapshot(ReplaySnapshot state)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x788164", Offset = "0x788164", VA = "0x788164")]
		private void CheckDisposed()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public abstract class ReplayFileTarget : ReplayStorageTarget, IReplayStreamProvider, IDisposable
	{
		[Token(Token = "0x2000359")]
		public enum ReplayFileFormat
		{
			[Token(Token = "0x4001467")]
			Binary,
			[Token(Token = "0x4001468")]
			Json
		}

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string filePath;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReplayStreamTarget.AccessMode accessMode;

		[Token(Token = "0x4000889")]
		public const string defaultExtension = ".replay";

		[Token(Token = "0x17000091")]
		public string FilePath
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0x78865C", Offset = "0x78865C", VA = "0x78865C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		public override bool CanWrite
		{
			[Token(Token = "0x600083F")]
			[Address(RVA = "0x788664", Offset = "0x788664", VA = "0x788664", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000093")]
		public override bool CanRead
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0x788678", Offset = "0x788678", VA = "0x788678", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x788380", Offset = "0x788380", VA = "0x788380")]
		public ReplayFileTarget(string filePath, ReplayStreamTarget.AccessMode accessMode = ReplayStreamTarget.AccessMode.Read, ReplayCompressionLevel compressionLevel = ReplayCompressionLevel.Optimal, int chunkSize = 24)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x788680", Offset = "0x788680", VA = "0x788680", Slot = "15")]
		public ReplayStreamSource OpenReplayStream(ReplayStreamMode mode)
		{
			return null;
		}

		[Token(Token = "0x6000843")]
		public abstract void Dispose();

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x78871C", Offset = "0x78871C", VA = "0x78871C", Slot = "16")]
		public void DiscardReplayStream()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x78875C", Offset = "0x78875C", VA = "0x78875C")]
		public static ReplayFileTarget CreateReplayFile(string filePath, bool overwriteExistingFile = true, ReplayFileFormat fileFormat = ReplayFileFormat.Binary, ReplayCompressionLevel compressionLevel = ReplayCompressionLevel.Optimal, int chunkSize = 24)
		{
			return null;
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x788810", Offset = "0x788810", VA = "0x788810")]
		public static ReplayFileTarget CreateUniqueReplayFile([Optional] string folderPath, [Optional] string extension, ReplayFileFormat fileFormat = ReplayFileFormat.Binary, ReplayCompressionLevel compressionLevel = ReplayCompressionLevel.Optimal, int chunkSize = 24)
		{
			return null;
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x788984", Offset = "0x788984", VA = "0x788984")]
		public static ReplayFileTarget ReadReplayFile(string filePath, ReplayFileFormat fileFormat = ReplayFileFormat.Binary)
		{
			return null;
		}
	}
	[Token(Token = "0x2000167")]
	public enum ReplaySnapshotStorableType
	{
		[Token(Token = "0x400088B")]
		StateStorage,
		[Token(Token = "0x400088C")]
		StatePointer
	}
	[Token(Token = "0x2000168")]
	public interface IReplaySnapshotStorable : IReplayStreamSerialize
	{
		[Token(Token = "0x17000094")]
		ReplaySnapshotStorableType StorageType
		{
			[Token(Token = "0x6000848")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x2000169")]
	public class ReplayMemoryTarget : ReplayStorageTarget
	{
		[Token(Token = "0x200035A")]
		public enum MemorySizeLimitReachedBehaviour
		{
			[Token(Token = "0x400146A")]
			PreventFurtherRecording,
			[Token(Token = "0x400146B")]
			ThrowMemoryException
		}

		[Token(Token = "0x400088D")]
		private const int unlimitedBufferValue = 0;

		[Token(Token = "0x400088E")]
		private const int unlimitedSizeValue = -1;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float recordSeconds;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int memorySizeLimit;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MemorySizeLimitReachedBehaviour memorySizeLimitBehaviour;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int maxCombineFrames;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ReplayStorageCombiner> storageChunks;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReplayInitialDataBuffer initialStateBuffer;

		[Token(Token = "0x17000095")]
		public override float Duration
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0x794250", Offset = "0x794250", VA = "0x794250", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000096")]
		public override int MemorySize
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x7942D8", Offset = "0x7942D8", VA = "0x7942D8", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000097")]
		public override ReplayInitialDataBuffer InitialStateBuffer
		{
			[Token(Token = "0x600084B")]
			[Address(RVA = "0x794404", Offset = "0x794404", VA = "0x794404", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		public override bool CanRead
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0x79440C", Offset = "0x79440C", VA = "0x79440C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000099")]
		public override bool CanWrite
		{
			[Token(Token = "0x600084D")]
			[Address(RVA = "0x794414", Offset = "0x794414", VA = "0x794414", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009A")]
		public float RollingBufferRecordSeconds
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x79441C", Offset = "0x79441C", VA = "0x79441C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700009B")]
		public bool IsRollingBuffer
		{
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x794424", Offset = "0x794424", VA = "0x794424")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009C")]
		public int MemorySizeLimit
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x794434", Offset = "0x794434", VA = "0x794434")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x79443C", Offset = "0x79443C", VA = "0x79443C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public bool IsMemorySizeLimited
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0x794444", Offset = "0x794444", VA = "0x794444")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009E")]
		public MemorySizeLimitReachedBehaviour MemorySizeLimitBehaviour
		{
			[Token(Token = "0x6000853")]
			[Address(RVA = "0x794454", Offset = "0x794454", VA = "0x794454")]
			get
			{
				return default(MemorySizeLimitReachedBehaviour);
			}
			[Token(Token = "0x6000854")]
			[Address(RVA = "0x79445C", Offset = "0x79445C", VA = "0x79445C")]
			set
			{
			}
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x787C30", Offset = "0x787C30", VA = "0x787C30")]
		public ReplayMemoryTarget(int memorySizeLimit = -1, int maxCompressionFrames = 30)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x794464", Offset = "0x794464", VA = "0x794464")]
		public ReplayMemoryTarget(float rollingBufferRecordSeconds, int memorySizeLimit = -1, int maxCompressionFrames = 30)
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x79455C", Offset = "0x79455C", VA = "0x79455C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x794570", Offset = "0x794570", VA = "0x794570", Slot = "11")]
		public override void StoreSnapshot(ReplaySnapshot state)
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x79485C", Offset = "0x79485C", VA = "0x79485C", Slot = "12")]
		public override ReplaySnapshot FetchSnapshot(float offset)
		{
			return null;
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x794B04", Offset = "0x794B04", VA = "0x794B04", Slot = "13")]
		public override ReplaySnapshot FetchSnapshot(int sequenceID)
		{
			return null;
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x794C88", Offset = "0x794C88", VA = "0x794C88", Slot = "14")]
		public override void PrepareTarget(ReplayTargetTask mode)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x794728", Offset = "0x794728", VA = "0x794728")]
		private void ConstrainBuffer()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x79520C", Offset = "0x79520C", VA = "0x79520C")]
		public static ReplayMemoryTarget CreateUnlimited()
		{
			return null;
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x788B9C", Offset = "0x788B9C", VA = "0x788B9C")]
		public static ReplayMemoryTarget CreateTimeLimitedRolling(float recordPreviousSeconds)
		{
			return null;
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x795268", Offset = "0x795268", VA = "0x795268")]
		public static ReplayMemoryTarget CreateTimeAndMemorySizeLimitedRolling(float recordPreviousSeconds, int maxMemoryUsage)
		{
			return null;
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x7952E0", Offset = "0x7952E0", VA = "0x7952E0")]
		public static ReplayMemoryTarget CreateMemorySizeLimited(int maxMemoryUsage)
		{
			return null;
		}
	}
	[Token(Token = "0x200016A")]
	public class ReplayHighlightReelStorage : ReplayStorageTarget
	{
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ReplayStorageTarget> sourceStorage;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReplayInitialDataBuffer initialDataBuffer;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int memorySize;

		[Token(Token = "0x1700009F")]
		public override bool CanRead
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0x78A3A8", Offset = "0x78A3A8", VA = "0x78A3A8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A0")]
		public override bool CanWrite
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x78A3B0", Offset = "0x78A3B0", VA = "0x78A3B0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A1")]
		public override float Duration
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0x78A3B8", Offset = "0x78A3B8", VA = "0x78A3B8", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A2")]
		public override int MemorySize
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0x78A3C0", Offset = "0x78A3C0", VA = "0x78A3C0", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A3")]
		public override ReplayInitialDataBuffer InitialStateBuffer
		{
			[Token(Token = "0x6000865")]
			[Address(RVA = "0x78A3C8", Offset = "0x78A3C8", VA = "0x78A3C8", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x78A3D0", Offset = "0x78A3D0", VA = "0x78A3D0")]
		public ReplayHighlightReelStorage(params ReplayStorageTarget[] storageTargets)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x78A3D4", Offset = "0x78A3D4", VA = "0x78A3D4")]
		public ReplayHighlightReelStorage(IEnumerable<ReplayStorageTarget> storageTargets)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x78ADCC", Offset = "0x78ADCC", VA = "0x78ADCC", Slot = "12")]
		public override ReplaySnapshot FetchSnapshot(float timeStamp)
		{
			return null;
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x78AF58", Offset = "0x78AF58", VA = "0x78AF58", Slot = "13")]
		public override ReplaySnapshot FetchSnapshot(int sequenceID)
		{
			return null;
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x78B0FC", Offset = "0x78B0FC", VA = "0x78B0FC", Slot = "14")]
		public override void PrepareTarget(ReplayTargetTask mode)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x78B290", Offset = "0x78B290", VA = "0x78B290", Slot = "11")]
		public override void StoreSnapshot(ReplaySnapshot state)
		{
		}
	}
	[Token(Token = "0x200016B")]
	public struct ReplayInitialData : IReplaySerialize
	{
		[Token(Token = "0x200035B")]
		[Flags]
		public enum ReplayInitialDataFlags : byte
		{
			[Token(Token = "0x400146D")]
			None = 0,
			[Token(Token = "0x400146E")]
			Position = 1,
			[Token(Token = "0x400146F")]
			Rotation = 2,
			[Token(Token = "0x4001470")]
			Scale = 4,
			[Token(Token = "0x4001471")]
			Parent = 8
		}

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDAC8", Offset = "0x3BDAC8")]
		public ReplayInitialDataFlags flags;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDB00", Offset = "0x3BDB00")]
		public ReplayIdentity objectIdentity;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDB38", Offset = "0x3BDB38")]
		public float timestamp;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDB70", Offset = "0x3BDB70")]
		public Vector3 position;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDBA8", Offset = "0x3BDBA8")]
		public Quaternion rotation;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDBE0", Offset = "0x3BDBE0")]
		public Vector3 scale;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDC18", Offset = "0x3BDC18")]
		public ReplayIdentity parentIdentity;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDC50", Offset = "0x3BDC50")]
		public ReplayIdentity[] observedComponentIdentities;

		[Token(Token = "0x170000A4")]
		public ReplayInitialDataFlags InitialFlags
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0x78C954", Offset = "0x78C954", VA = "0x78C954")]
			get
			{
				return default(ReplayInitialDataFlags);
			}
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x78C95C", Offset = "0x78C95C", VA = "0x78C95C")]
		public void GenerateDataFlags()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x78CAC0", Offset = "0x78CAC0", VA = "0x78CAC0", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x78CC9C", Offset = "0x78CC9C", VA = "0x78CC9C", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}
	}
	[Token(Token = "0x200016C")]
	public sealed class ReplayInitialDataBuffer : IReplaySerialize, IReplayStreamSerialize
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<ReplayIdentity, List<ReplayInitialData>> initialStates;

		[Token(Token = "0x170000A5")]
		public IEnumerable<ReplayIdentity> Identities
		{
			[Token(Token = "0x6000870")]
			[Address(RVA = "0x78ABD4", Offset = "0x78ABD4", VA = "0x78ABD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x78CE2C", Offset = "0x78CE2C", VA = "0x78CE2C", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x78D084", Offset = "0x78D084", VA = "0x78D084", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x78D29C", Offset = "0x78D29C", VA = "0x78D29C", Slot = "6")]
		private void UltimateReplay.Storage.IReplayStreamSerialize.OnReplayStreamSerialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x78D364", Offset = "0x78D364", VA = "0x78D364", Slot = "7")]
		private void UltimateReplay.Storage.IReplayStreamSerialize.OnReplayStreamDeserialize(BinaryReader reader)
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x78AC28", Offset = "0x78AC28", VA = "0x78AC28")]
		public IList<ReplayInitialData> GetInitialStates(ReplayIdentity id)
		{
			return null;
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x78AC9C", Offset = "0x78AC9C", VA = "0x78AC9C")]
		public void AppendInitialStates(ReplayIdentity id, IEnumerable<ReplayInitialData> states)
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x78D43C", Offset = "0x78D43C", VA = "0x78D43C")]
		public bool HasInitialReplayObjectData(ReplayIdentity identity)
		{
			return default(bool);
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x78D4A0", Offset = "0x78D4A0", VA = "0x78D4A0")]
		public void RecordInitialReplayObjectData(ReplayObject obj, float timestamp, Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x78DA88", Offset = "0x78DA88", VA = "0x78DA88")]
		public ReplayInitialData RestoreInitialReplayObjectData(ReplayIdentity identity, float timestamp)
		{
			return default(ReplayInitialData);
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x78AB54", Offset = "0x78AB54", VA = "0x78AB54")]
		public ReplayInitialDataBuffer()
		{
		}
	}
	[Token(Token = "0x200016D")]
	internal struct ReplayCreatedObject
	{
		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReplayObject replayObject;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ReplayInitialData replayInitialData;
	}
	[Serializable]
	[Token(Token = "0x200016E")]
	public sealed class ReplaySnapshot : IReplayStreamSerialize
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ReplayObjectSerializer sharedSerializer;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Queue<ReplayObject> sharedDestroyQueue;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float timeStamp;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int sequenceID;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int storageSize;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<ReplayIdentity, ReplayInitialData> newReplayObjectsThisFrame;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<ReplayIdentity, IReplaySnapshotStorable> states;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int startSequenceID;

		[Token(Token = "0x170000A6")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C976C", Offset = "0x3C976C")]
		public float TimeStamp
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x94E75C", Offset = "0x94E75C", VA = "0x94E75C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A7")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C97A4", Offset = "0x3C97A4")]
		public int SequenceID
		{
			[Token(Token = "0x600087C")]
			[Address(RVA = "0x94E764", Offset = "0x94E764", VA = "0x94E764")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A8")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C97DC", Offset = "0x3C97DC")]
		public int Size
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x94E76C", Offset = "0x94E76C", VA = "0x94E76C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A9")]
		public IEnumerable<ReplayIdentity> Identities
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x94E9A0", Offset = "0x94E9A0", VA = "0x94E9A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x94E9F4", Offset = "0x94E9F4", VA = "0x94E9F4")]
		internal ReplaySnapshot()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x94B1B4", Offset = "0x94B1B4", VA = "0x94B1B4")]
		public ReplaySnapshot(float timeStamp, int sequenceID)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x94EAC4", Offset = "0x94EAC4", VA = "0x94EAC4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x94EBB0", Offset = "0x94EBB0", VA = "0x94EBB0", Slot = "4")]
		public void OnReplayStreamSerialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x94EE48", Offset = "0x94EE48", VA = "0x94EE48", Slot = "5")]
		public void OnReplayStreamDeserialize(BinaryReader reader)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x948AB8", Offset = "0x948AB8", VA = "0x948AB8")]
		public bool VerifySnapshot(bool throwOnError = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x94B2A8", Offset = "0x94B2A8", VA = "0x94B2A8")]
		public void RecordSnapshot(ReplayIdentity identity, ReplayState state)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x94C774", Offset = "0x94C774", VA = "0x94C774")]
		public ReplayState RestoreSnapshot(ReplayIdentity identity)
		{
			return null;
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x94B350", Offset = "0x94B350", VA = "0x94B350")]
		public void RestoreReplayObjects(ReplayScene scene, ReplayInitialDataBuffer initialStateBuffer)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x94F098", Offset = "0x94F098", VA = "0x94F098")]
		internal void OverrideStateDataForReplayObject(ReplayIdentity identity, IReplaySnapshotStorable storable)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x94F140", Offset = "0x94F140", VA = "0x94F140")]
		public void Reset()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x94F1A0", Offset = "0x94F1A0", VA = "0x94F1A0")]
		public ReplayInitialData GetReplayObjectInitialState(ReplayIdentity identity)
		{
			return default(ReplayInitialData);
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x94F234", Offset = "0x94F234", VA = "0x94F234")]
		internal IReplaySnapshotStorable GetReplayObjectState(ReplayIdentity identity)
		{
			return null;
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x94F2A8", Offset = "0x94F2A8", VA = "0x94F2A8")]
		internal void CorrectTimestamp(float offset)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x94F2B8", Offset = "0x94F2B8", VA = "0x94F2B8")]
		internal void CorrectSequenceID(int offset)
		{
		}
	}
	[Token(Token = "0x200016F")]
	internal struct ReplayStatePointer : IReplaySnapshotStorable, IReplayStreamSerialize
	{
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal ushort snapshotSequenceID;

		[Token(Token = "0x170000AA")]
		public ushort SnapshotSequenceID
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x951994", Offset = "0x951994", VA = "0x951994")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x170000AB")]
		public ReplaySnapshotStorableType StorageType
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x95199C", Offset = "0x95199C", VA = "0x95199C", Slot = "4")]
			get
			{
				return default(ReplaySnapshotStorableType);
			}
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x9519A4", Offset = "0x9519A4", VA = "0x9519A4")]
		public ReplayStatePointer(ushort snapshotSequenceID)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x9519AC", Offset = "0x9519AC", VA = "0x9519AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x951A3C", Offset = "0x951A3C", VA = "0x951A3C", Slot = "5")]
		private void UltimateReplay.Storage.IReplayStreamSerialize.OnReplayStreamSerialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x951A6C", Offset = "0x951A6C", VA = "0x951A6C", Slot = "6")]
		private void UltimateReplay.Storage.IReplayStreamSerialize.OnReplayStreamDeserialize(BinaryReader reader)
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class ReplayStorageCombiner
	{
		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B92BC", Offset = "0x3B92BC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int sequenceID;

			[Token(Token = "0x6001331")]
			[Address(RVA = "0x88B480", Offset = "0x88B480", VA = "0x88B480")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001332")]
			[Address(RVA = "0x88B488", Offset = "0x88B488", VA = "0x88B488")]
			internal bool <FetchSnapshot>b__0(ReplaySnapshot s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B92CC", Offset = "0x3B92CC")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IReplaySnapshotStorable storable;

			[Token(Token = "0x6001333")]
			[Address(RVA = "0x88B4B0", Offset = "0x88B4B0", VA = "0x88B4B0")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001334")]
			[Address(RVA = "0x88B4B8", Offset = "0x88B4B8", VA = "0x88B4B8")]
			internal bool <ResolveSnapshot>b__0(ReplaySnapshot s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ReplayIdentity, IReplaySnapshotStorable> overridableStates;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int capacity;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<ReplaySnapshot> snapshotStorage;

		[Token(Token = "0x170000AC")]
		public ReplaySnapshot FirstSnapshot
		{
			[Token(Token = "0x6000895")]
			[Address(RVA = "0x95219C", Offset = "0x95219C", VA = "0x95219C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public ReplaySnapshot LastSnapshot
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0x95220C", Offset = "0x95220C", VA = "0x95220C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public int Size
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0x952280", Offset = "0x952280", VA = "0x952280")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AF")]
		public bool IsFull
		{
			[Token(Token = "0x6000898")]
			[Address(RVA = "0x9523A8", Offset = "0x9523A8", VA = "0x9523A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B0")]
		public int SnapshotCount
		{
			[Token(Token = "0x6000899")]
			[Address(RVA = "0x952400", Offset = "0x952400", VA = "0x952400")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B1")]
		public int SnapshotCapacity
		{
			[Token(Token = "0x600089A")]
			[Address(RVA = "0x95244C", Offset = "0x95244C", VA = "0x95244C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B2")]
		public IList<ReplaySnapshot> Snapshots
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0x952454", Offset = "0x952454", VA = "0x952454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x95245C", Offset = "0x95245C", VA = "0x95245C")]
		public ReplayStorageCombiner(int capacity)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x9524F4", Offset = "0x9524F4", VA = "0x9524F4")]
		public void AddAndCombineSnapshot(ReplaySnapshot newCombineSnapshot)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x9525CC", Offset = "0x9525CC", VA = "0x9525CC")]
		public void CombineSnapshot(ReplaySnapshot combineSnapshot)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x952C28", Offset = "0x952C28", VA = "0x952C28", Slot = "4")]
		public virtual ReplaySnapshot FetchSnapshot(float timeStamp, ReplayManager.PlaybackDirection direction)
		{
			return null;
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x9534CC", Offset = "0x9534CC", VA = "0x9534CC", Slot = "5")]
		public virtual ReplaySnapshot FetchSnapshot(int sequenceID)
		{
			return null;
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x952E80", Offset = "0x952E80", VA = "0x952E80")]
		public void ResolveSnapshot(ReplaySnapshot resolveSnapshot)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x952B88", Offset = "0x952B88", VA = "0x952B88")]
		private IReplaySnapshotStorable GetCombinedSnapshotDataForObject(ReplayIdentity identity, ReplayState stateData)
		{
			return null;
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x9535E0", Offset = "0x9535E0", VA = "0x9535E0")]
		private int GetLastStateWithMatchingDataForObject(ReplayIdentity identity, long replayStateHash)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000171")]
	public enum ReplayTargetTask
	{
		[Token(Token = "0x40008B0")]
		Commit,
		[Token(Token = "0x40008B1")]
		Discard,
		[Token(Token = "0x40008B2")]
		PrepareWrite,
		[Token(Token = "0x40008B3")]
		PrepareRead
	}
	[Serializable]
	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "ReplayIgnoreAttribute", RVA = "0x3B88D4", Offset = "0x3B88D4")]
	public abstract class ReplayStorageTarget : ReplayLockable
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReplayManager.PlaybackDirection playbackDirection;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float duration;

		[Token(Token = "0x170000B3")]
		public abstract bool CanRead
		{
			[Token(Token = "0x60008A5")]
			get;
		}

		[Token(Token = "0x170000B4")]
		public abstract bool CanWrite
		{
			[Token(Token = "0x60008A6")]
			get;
		}

		[Token(Token = "0x170000B5")]
		public abstract float Duration
		{
			[Token(Token = "0x60008A7")]
			get;
		}

		[Token(Token = "0x170000B6")]
		public abstract int MemorySize
		{
			[Token(Token = "0x60008A8")]
			get;
		}

		[Token(Token = "0x170000B7")]
		internal virtual ReplayManager.PlaybackDirection PlaybackDirection
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x95379C", Offset = "0x95379C", VA = "0x95379C", Slot = "8")]
			get
			{
				return default(ReplayManager.PlaybackDirection);
			}
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0x9537A4", Offset = "0x9537A4", VA = "0x9537A4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public abstract ReplayInitialDataBuffer InitialStateBuffer
		{
			[Token(Token = "0x60008AB")]
			get;
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x9537AC", Offset = "0x9537AC", VA = "0x9537AC")]
		protected ReplayStorageTarget()
		{
		}

		[Token(Token = "0x60008AD")]
		public abstract void StoreSnapshot(ReplaySnapshot state);

		[Token(Token = "0x60008AE")]
		public abstract ReplaySnapshot FetchSnapshot(float timeStamp);

		[Token(Token = "0x60008AF")]
		public abstract ReplaySnapshot FetchSnapshot(int sequenceID);

		[Token(Token = "0x60008B0")]
		public abstract void PrepareTarget(ReplayTargetTask mode);
	}
	[Token(Token = "0x2000173")]
	public class ReplayStreamBuffer
	{
		[Token(Token = "0x200035E")]
		public enum ReplayFileChunkReleaseMode
		{
			[Token(Token = "0x4001475")]
			ChunksBefore,
			[Token(Token = "0x4001476")]
			ChunksAfter
		}

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<ReplayStreamChunk> loadedChunks;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<ReplayStreamChunk> removeQueue;

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x9558FC", Offset = "0x9558FC", VA = "0x9558FC")]
		public void StoreChunk(ReplayStreamChunk chunk)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x95599C", Offset = "0x95599C", VA = "0x95599C")]
		public bool HasLoadedChunkWithID(int chunkID)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x955ADC", Offset = "0x955ADC", VA = "0x955ADC")]
		public bool HasLoadedChunk(float timeStamp)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x955C40", Offset = "0x955C40", VA = "0x955C40")]
		public bool HasLoadedChunk(int sequenceID)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x955D9C", Offset = "0x955D9C", VA = "0x955D9C")]
		public ReplayStreamChunk GetLoadedChunk(float timeStamp, ReplayManager.PlaybackDirection direction)
		{
			return null;
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x955EF4", Offset = "0x955EF4", VA = "0x955EF4")]
		public ReplayStreamChunk GetLoadedChunkWithID(int chunkID)
		{
			return null;
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x95602C", Offset = "0x95602C", VA = "0x95602C")]
		public ReplayStreamChunk GetLoadedChunk(int sequenceID)
		{
			return null;
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x956180", Offset = "0x956180", VA = "0x956180")]
		public void ReleaseAllChunks()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x9561F8", Offset = "0x9561F8", VA = "0x9561F8")]
		public void ReleaseOldChunks(float currentTimeStamp, ReplayFileChunkReleaseMode mode)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x95651C", Offset = "0x95651C", VA = "0x95651C")]
		public ReplayStreamBuffer()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class ReplayStreamChunk : ReplayStorageCombiner, IReplayStreamSerialize, IEquatable<ReplayStreamChunk>
	{
		[Token(Token = "0x200035F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B92DC", Offset = "0x3B92DC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int sequenceID;

			[Token(Token = "0x6001335")]
			[Address(RVA = "0x88B548", Offset = "0x88B548", VA = "0x88B548")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001336")]
			[Address(RVA = "0x88B550", Offset = "0x88B550", VA = "0x88B550")]
			internal bool <FetchBestMatchingSequenceSnapshot>b__0(ReplaySnapshot s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008B8")]
		public const float chunkOverlapThreshold = 1f;

		[Token(Token = "0x40008B9")]
		public const int startChunkID = 1;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDC88", Offset = "0x3BDC88")]
		public int chunkID;

		[Token(Token = "0x170000B9")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C9814", Offset = "0x3C9814")]
		public float ChunkStartTime
		{
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0x9541D0", Offset = "0x9541D0", VA = "0x9541D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BA")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C984C", Offset = "0x3C984C")]
		public int ChunkStartSequenceID
		{
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0x9542C0", Offset = "0x9542C0", VA = "0x9542C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000BB")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C9884", Offset = "0x3C9884")]
		public float ChunkEndTime
		{
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x954244", Offset = "0x954244", VA = "0x954244")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BC")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C98BC", Offset = "0x3C98BC")]
		public int ChunkEndSequenceID
		{
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0x954334", Offset = "0x954334", VA = "0x954334")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000BD")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C98F4", Offset = "0x3C98F4")]
		public float ChunkDuration
		{
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0x9565E4", Offset = "0x9565E4", VA = "0x9565E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x954C38", Offset = "0x954C38", VA = "0x954C38")]
		public ReplayStreamChunk(int chunkID, int chunkCapacity)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x95661C", Offset = "0x95661C", VA = "0x95661C", Slot = "8")]
		public bool Equals(ReplayStreamChunk other)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x956644", Offset = "0x956644", VA = "0x956644")]
		public ReplayStreamChunk Clone()
		{
			return null;
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x956770", Offset = "0x956770", VA = "0x956770", Slot = "4")]
		public override ReplaySnapshot FetchSnapshot(float timeStamp, ReplayManager.PlaybackDirection direction)
		{
			return null;
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x9567D8", Offset = "0x9567D8", VA = "0x9567D8")]
		public ReplaySnapshot FetchBestMatchingSnapshot(float timeStamp)
		{
			return null;
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x9567E0", Offset = "0x9567E0", VA = "0x9567E0", Slot = "6")]
		public void OnReplayStreamSerialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x956B0C", Offset = "0x956B0C", VA = "0x956B0C")]
		public ReplaySnapshot FetchBestMatchingSequenceSnapshot(int sequenceID, ReplayManager.PlaybackDirection direction)
		{
			return null;
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x956C64", Offset = "0x956C64", VA = "0x956C64", Slot = "7")]
		public void OnReplayStreamDeserialize(BinaryReader reader)
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class ReplayStreamChunkTable : HashSet<ReplayStreamChunkTable.ReplayStreamChunkTableEntry>, IReplayStreamSerialize
	{
		[Token(Token = "0x2000360")]
		public struct ReplayStreamChunkTableEntry
		{
			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C4400", Offset = "0x3C4400")]
			public int chunkID;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C4438", Offset = "0x3C4438")]
			public float startTimeStamp;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C4470", Offset = "0x3C4470")]
			public float endTimeStamp;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C44A8", Offset = "0x3C44A8")]
			public short startSequenceID;

			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C44E0", Offset = "0x3C44E0")]
			public short endSequenceID;

			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3C4518", Offset = "0x3C4518")]
			public int filePointer;
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x9543B0", Offset = "0x9543B0", VA = "0x9543B0")]
		public void CreateEntry(int chunkID, float startTimeStamp, float endTimeStamp, short startSequenceID, short endSequenceID, int filePointer)
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x9546AC", Offset = "0x9546AC", VA = "0x9546AC")]
		public int GetPointerForChunk(int chunkID)
		{
			return default(int);
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x95493C", Offset = "0x95493C", VA = "0x95493C")]
		public int GetPointerForTimeStamp(float timeStamp)
		{
			return default(int);
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x9547F0", Offset = "0x9547F0", VA = "0x9547F0")]
		public int GetPointerForSequenceID(int sequenceID)
		{
			return default(int);
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x956E14", Offset = "0x956E14", VA = "0x956E14", Slot = "29")]
		public void OnReplayStreamSerialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x957018", Offset = "0x957018", VA = "0x957018", Slot = "30")]
		public void OnReplayStreamDeserialize(BinaryReader reader)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x955418", Offset = "0x955418", VA = "0x955418")]
		public ReplayStreamChunkTable()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public enum ReplayCompressionLevel
	{
		[Token(Token = "0x40008BC")]
		None,
		[Token(Token = "0x40008BD")]
		Optimal
	}
	[Token(Token = "0x2000177")]
	public sealed class ReplayStreamCompression : IDisposable
	{
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int decompressBufferSize;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static byte[] decompressBuffer;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MemoryStream compressionStream;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BinaryWriter writer;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BinaryReader reader;

		[Token(Token = "0x170000BE")]
		public bool IsDisposed
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x957168", Offset = "0x957168", VA = "0x957168")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BF")]
		private BinaryWriter Writer
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0x957278", Offset = "0x957278", VA = "0x957278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private BinaryReader Reader
		{
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x9572E0", Offset = "0x9572E0", VA = "0x9572E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x957348", Offset = "0x957348", VA = "0x957348")]
		public ReplayStreamCompression(ReplayStreamMode streamMode)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x9555DC", Offset = "0x9555DC", VA = "0x9555DC")]
		public byte[] Encode(IReplayStreamSerialize serializable, ReplayCompressionLevel compressionLevel)
		{
			return null;
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x9557D0", Offset = "0x9557D0", VA = "0x9557D0")]
		public void Decode(IReplayStreamSerialize serializable, byte[] data, ReplayCompressionLevel compressionLevel)
		{
		}

		[Token(Token = "0x60008D5")]
		public T Decode<T>(byte[] data, ReplayCompressionLevel compressionLevel) where T : IReplayStreamSerialize, new()
		{
			return (T)null;
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x957B6C", Offset = "0x957B6C", VA = "0x957B6C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x957434", Offset = "0x957434", VA = "0x957434")]
		public static byte[] CompressData(byte[] data, int offset, int length, ReplayCompressionLevel level = ReplayCompressionLevel.Optimal)
		{
			return null;
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x9576EC", Offset = "0x9576EC", VA = "0x9576EC")]
		public static byte[] DecompressData(byte[] data, ReplayCompressionLevel level = ReplayCompressionLevel.Optimal)
		{
			return null;
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x9571FC", Offset = "0x9571FC", VA = "0x9571FC")]
		private void DisposeCheck()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public struct ReplayStreamHeader : IReplayStreamSerialize
	{
		[Token(Token = "0x40008C3")]
		public const int replayIdentifier = 808604245;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int headerSize;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDCC0", Offset = "0x3BDCC0")]
		public ushort identityByteSize;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDCF8", Offset = "0x3BDCF8")]
		public int memorySize;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDD30", Offset = "0x3BDD30")]
		public int dataOffset;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDD68", Offset = "0x3BDD68")]
		public int chunkCount;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDDA0", Offset = "0x3BDDA0")]
		public int chunkTableOffset;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDDD8", Offset = "0x3BDDD8")]
		public int stateBufferOffset;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDE10", Offset = "0x3BDE10")]
		public float duration;

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x957D30", Offset = "0x957D30", VA = "0x957D30", Slot = "4")]
		public void OnReplayStreamSerialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x957E68", Offset = "0x957E68", VA = "0x957E68", Slot = "5")]
		public void OnReplayStreamDeserialize(BinaryReader reader)
		{
		}
	}
	[Token(Token = "0x2000179")]
	public struct ReplayStreamDataHeader : IReplayStreamSerialize
	{
		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int headerSize;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReplayCompressionLevel compressionLevel;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint dataSize;

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x957C30", Offset = "0x957C30", VA = "0x957C30", Slot = "4")]
		public void OnReplayStreamSerialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x957C84", Offset = "0x957C84", VA = "0x957C84", Slot = "5")]
		public void OnReplayStreamDeserialize(BinaryReader reader)
		{
		}
	}
	[Token(Token = "0x200017A")]
	internal static class ReplayStreamSerializationUtility
	{
		[Token(Token = "0x60008E1")]
		public static void StreamSerialize<T>(T item, BinaryWriter writer) where T : IReplayStreamSerialize
		{
		}

		[Token(Token = "0x60008E2")]
		public static void StreamDeserialize<T>(T item, BinaryReader reader) where T : IReplayStreamSerialize
		{
		}
	}
	[Token(Token = "0x200017B")]
	public interface IReplayStreamProvider
	{
		[Token(Token = "0x60008E3")]
		ReplayStreamSource OpenReplayStream(ReplayStreamMode mode);

		[Token(Token = "0x60008E4")]
		void DiscardReplayStream();
	}
	[Token(Token = "0x200017C")]
	public interface IReplayStreamSerialize
	{
		[Token(Token = "0x60008E5")]
		void OnReplayStreamSerialize(BinaryWriter writer);

		[Token(Token = "0x60008E6")]
		void OnReplayStreamDeserialize(BinaryReader reader);
	}
	[Token(Token = "0x200017D")]
	public class ReplayStreamBinaryTarget : ReplayStreamTarget, IDisposable
	{
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x953BBC", Offset = "0x953BBC", VA = "0x953BBC")]
		public ReplayStreamBinaryTarget(IReplayStreamProvider streamProvider, ReplayCompressionLevel compressionLevel = ReplayCompressionLevel.Optimal, int chunkSize = 24)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x953D80", Offset = "0x953D80", VA = "0x953D80")]
		public ReplayStreamBinaryTarget(Stream targetStream, ReplayCompressionLevel compressionLevel = ReplayCompressionLevel.Optimal, int chunkSize = 24)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x953F8C", Offset = "0x953F8C", VA = "0x953F8C", Slot = "19")]
		protected override void ThreadWriteReplayChunk(ReplayStreamChunk chunk)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x954548", Offset = "0x954548", VA = "0x954548", Slot = "20")]
		protected override ReplayStreamChunk ThreadReadReplayChunk(ReplayFileChunkFetchRequest fetchData)
		{
			return null;
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x954DC0", Offset = "0x954DC0", VA = "0x954DC0", Slot = "21")]
		protected override void ThreadWriteReplayHeader()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x954F58", Offset = "0x954F58", VA = "0x954F58", Slot = "22")]
		protected override void ThreadWriteReplayChunkTable()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x955048", Offset = "0x955048", VA = "0x955048", Slot = "23")]
		protected override void ThreadWriteInitialStateBuffer()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x955138", Offset = "0x955138", VA = "0x955138", Slot = "24")]
		protected override void ThreadFetchReplayHeader()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x9552B0", Offset = "0x9552B0", VA = "0x9552B0", Slot = "25")]
		protected override void ThreadFetchReplayChunkTable()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x95546C", Offset = "0x95546C", VA = "0x95546C", Slot = "26")]
		protected override void ThreadFetchInitialStateBuffer()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x954458", Offset = "0x954458", VA = "0x954458")]
		private void EncodeReplayDataToStream(IReplayStreamSerialize serializable, ReplayCompressionLevel compressionLevel)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x954CC4", Offset = "0x954CC4", VA = "0x954CC4")]
		private void DecodeReplayDataFromStream(IReplayStreamSerialize serializable)
		{
		}

		[Token(Token = "0x60008F3")]
		private T DecodeReplayDataFromStream<T>() where T : IReplayStreamSerialize, new()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200017E")]
	public enum ReplayStreamMode
	{
		[Token(Token = "0x40008D0")]
		ReadOnly,
		[Token(Token = "0x40008D1")]
		WriteOnly
	}
	[Token(Token = "0x200017F")]
	public sealed class ReplayStreamSource : IDisposable
	{
		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stream stream;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool keepStreamOpen;

		[Token(Token = "0x170000C1")]
		public Stream BaseStream
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x957FF4", Offset = "0x957FF4", VA = "0x957FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public bool IsReading
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x957FFC", Offset = "0x957FFC", VA = "0x957FFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C3")]
		public bool IsWriting
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0x9580AC", Offset = "0x9580AC", VA = "0x9580AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C4")]
		public int Position
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x954198", Offset = "0x954198", VA = "0x954198")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C5")]
		public bool IsDisposed
		{
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0x9580E0", Offset = "0x9580E0", VA = "0x9580E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x958174", Offset = "0x958174", VA = "0x958174")]
		public ReplayStreamSource(string filepath, ReplayStreamMode mode, bool hiddenFile = false)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x958208", Offset = "0x958208", VA = "0x958208")]
		public ReplayStreamSource(Stream targetStream, ReplayStreamMode mode, bool keepStreamOpen)
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x9582F4", Offset = "0x9582F4", VA = "0x9582F4")]
		public void CopyTo(ReplayStreamSource other)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x9556E0", Offset = "0x9556E0", VA = "0x9556E0")]
		public void Write(byte[] bytes)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x95572C", Offset = "0x95572C", VA = "0x95572C")]
		public byte[] Read(int size)
		{
			return null;
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x954BE8", Offset = "0x954BE8", VA = "0x954BE8")]
		public void Seek(long offset, SeekOrigin origin)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x958410", Offset = "0x958410", VA = "0x958410")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x958464", Offset = "0x958464", VA = "0x958464", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x958030", Offset = "0x958030", VA = "0x958030")]
		private void DisposeCheck()
		{
		}
	}
	[Token(Token = "0x2000180")]
	internal enum ReplayStreamRequest
	{
		[Token(Token = "0x40008D5")]
		Idle,
		[Token(Token = "0x40008D6")]
		FetchChunk,
		[Token(Token = "0x40008D7")]
		FetchChunkBuffered,
		[Token(Token = "0x40008D8")]
		WriteChunk,
		[Token(Token = "0x40008D9")]
		Commit,
		[Token(Token = "0x40008DA")]
		Discard,
		[Token(Token = "0x40008DB")]
		FetchHeader,
		[Token(Token = "0x40008DC")]
		WriteHeader,
		[Token(Token = "0x40008DD")]
		FetchTable,
		[Token(Token = "0x40008DE")]
		FetchStateBuffer
	}
	[Token(Token = "0x2000181")]
	internal enum ReplayStreamTaskPriority
	{
		[Token(Token = "0x40008E0")]
		High,
		[Token(Token = "0x40008E1")]
		Normal
	}
	[Token(Token = "0x2000182")]
	internal struct ReplayStreamTaskRequest
	{
		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReplayStreamTaskID taskID;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ReplayStreamRequest task;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ReplayStreamTaskPriority priority;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public object data;
	}
	[Token(Token = "0x2000183")]
	internal struct ReplayStreamTaskID
	{
		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<int> usedTasks;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int id;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ReplayStreamTaskID empty;

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x95B6D4", Offset = "0x95B6D4", VA = "0x95B6D4")]
		private ReplayStreamTaskID(int id)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x95A504", Offset = "0x95A504", VA = "0x95A504")]
		public static ReplayStreamTaskID GenerateID()
		{
			return default(ReplayStreamTaskID);
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x95A694", Offset = "0x95A694", VA = "0x95A694")]
		public static void ReleaseID(ReplayStreamTaskID taskID)
		{
		}
	}
	[Token(Token = "0x2000184")]
	public abstract class ReplayStreamTarget : ReplayStorageTarget, IDisposable
	{
		[Token(Token = "0x2000361")]
		public enum ReplayStreamFormat
		{
			[Token(Token = "0x400147F")]
			Binary,
			[Token(Token = "0x4001480")]
			Json
		}

		[Token(Token = "0x2000362")]
		public enum AccessMode
		{
			[Token(Token = "0x4001482")]
			Read,
			[Token(Token = "0x4001483")]
			Write,
			[Token(Token = "0x4001484")]
			ReadWrite
		}

		[Token(Token = "0x2000363")]
		protected class ReplayStreamContext
		{
			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReplayStreamHeader header;

			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ReplayStreamChunkTable chunkTable;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ReplayStreamChunk chunk;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ReplayStreamBuffer buffer;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ReplayInitialDataBuffer initialStateBuffer;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public ReplayStreamSource sourceStream;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public ReplayStreamCompression compressionStream;

			[Token(Token = "0x6001337")]
			[Address(RVA = "0x88B6C0", Offset = "0x88B6C0", VA = "0x88B6C0")]
			public ReplayStreamContext(int chunkSize)
			{
			}

			[Token(Token = "0x6001338")]
			[Address(RVA = "0x88B7D0", Offset = "0x88B7D0", VA = "0x88B7D0")]
			public void DisposeStreams()
			{
			}
		}

		[Token(Token = "0x2000364")]
		public struct ReplayFileChunkFetchRequest
		{
			[Token(Token = "0x20003DF")]
			public enum FetchRequestType
			{
				[Token(Token = "0x400167D")]
				FetchByChunkID,
				[Token(Token = "0x400167E")]
				FetchByTimeStamp,
				[Token(Token = "0x400167F")]
				FetchBySequenceID
			}

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FetchRequestType requestType;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int idValue;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float timeStampValue;

			[Token(Token = "0x6001339")]
			[Address(RVA = "0x88B694", Offset = "0x88B694", VA = "0x88B694")]
			public static ReplayFileChunkFetchRequest FetchByChunkID(int chunkID)
			{
				return default(ReplayFileChunkFetchRequest);
			}

			[Token(Token = "0x600133A")]
			[Address(RVA = "0x88B6A0", Offset = "0x88B6A0", VA = "0x88B6A0")]
			public static ReplayFileChunkFetchRequest FetchByTimeStamp(float timeStamp)
			{
				return default(ReplayFileChunkFetchRequest);
			}

			[Token(Token = "0x600133B")]
			[Address(RVA = "0x88B6AC", Offset = "0x88B6AC", VA = "0x88B6AC")]
			public static ReplayFileChunkFetchRequest FetchBySequenceID(int sequenceID)
			{
				return default(ReplayFileChunkFetchRequest);
			}
		}

		[Serializable]
		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B92EC", Offset = "0x3B92EC")]
		private sealed class <>c
		{
			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<ReplayStreamTaskRequest> <>9__35_0;

			[Token(Token = "0x600133D")]
			[Address(RVA = "0x88B5D8", Offset = "0x88B5D8", VA = "0x88B5D8")]
			public <>c()
			{
			}

			[Token(Token = "0x600133E")]
			[Address(RVA = "0x88B5E0", Offset = "0x88B5E0", VA = "0x88B5E0")]
			internal int <CreateTaskAsync>b__35_0(ReplayStreamTaskRequest x, ReplayStreamTaskRequest y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40008E9")]
		protected const ReplayCompressionLevel headerCompression = ReplayCompressionLevel.None;

		[Token(Token = "0x40008EA")]
		protected const ReplayCompressionLevel initialStateBufferCompression = ReplayCompressionLevel.Optimal;

		[Token(Token = "0x40008EB")]
		protected const ReplayCompressionLevel chunkTableCompression = ReplayCompressionLevel.Optimal;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Stream targetStream;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IReplayStreamProvider targetStreamProvider;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected ReplayCompressionLevel compressionLevel;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected ReplayStreamContext context;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected HashSet<int> processingChunkRequests;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected int chunkSize;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected int chunkIdGenerator;

		[Token(Token = "0x40008F3")]
		public const int defaultChunkSize = 24;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<ReplayStreamTaskRequest> threadTasks;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Thread streamThread;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool threadRunning;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool threadStarted;

		[Token(Token = "0x170000C6")]
		public override float Duration
		{
			[Token(Token = "0x6000906")]
			[Address(RVA = "0x9584A8", Offset = "0x9584A8", VA = "0x9584A8", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C7")]
		public override int MemorySize
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0x958588", Offset = "0x958588", VA = "0x958588", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C8")]
		public override ReplayInitialDataBuffer InitialStateBuffer
		{
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x958660", Offset = "0x958660", VA = "0x958660", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		public override bool CanWrite
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0x958738", Offset = "0x958738", VA = "0x958738", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CA")]
		public override bool CanRead
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x95875C", Offset = "0x95875C", VA = "0x95875C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CB")]
		public bool IsDisposed
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x958780", Offset = "0x958780", VA = "0x958780")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x953BC0", Offset = "0x953BC0", VA = "0x953BC0")]
		public ReplayStreamTarget(IReplayStreamProvider streamProvider, ReplayCompressionLevel compressionLevel = ReplayCompressionLevel.Optimal, int chunkSize = 24)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x953D84", Offset = "0x953D84", VA = "0x953D84")]
		public ReplayStreamTarget(Stream targetStream, ReplayCompressionLevel compressionLevel = ReplayCompressionLevel.Optimal, int chunkSize = 24)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x958890", Offset = "0x958890", VA = "0x958890", Slot = "16")]
		protected virtual void OnDiscardRecording()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x958894", Offset = "0x958894", VA = "0x958894", Slot = "17")]
		protected virtual ReplayStreamSource OpenReplayStream(ReplayStreamMode mode)
		{
			return null;
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x9589D8", Offset = "0x9589D8", VA = "0x9589D8", Slot = "18")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x958AD0", Offset = "0x958AD0", VA = "0x958AD0", Slot = "11")]
		public override void StoreSnapshot(ReplaySnapshot state)
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x958FF0", Offset = "0x958FF0", VA = "0x958FF0", Slot = "12")]
		public override ReplaySnapshot FetchSnapshot(float offset)
		{
			return null;
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x959B6C", Offset = "0x959B6C", VA = "0x959B6C", Slot = "13")]
		public override ReplaySnapshot FetchSnapshot(int sequenceID)
		{
			return null;
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x95A114", Offset = "0x95A114", VA = "0x95A114", Slot = "14")]
		public override void PrepareTarget(ReplayTargetTask mode)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x958D98", Offset = "0x958D98", VA = "0x958D98")]
		private ReplayStreamTaskID CreateTaskAsync(ReplayStreamRequest task, ReplayStreamTaskPriority priority = ReplayStreamTaskPriority.Normal, [Optional] object data)
		{
			return default(ReplayStreamTaskID);
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x9597C4", Offset = "0x9597C4", VA = "0x9597C4")]
		private void WaitForSingleTask(ReplayStreamTaskID taskID)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x958D30", Offset = "0x958D30", VA = "0x958D30")]
		private void CheckDisposed()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x95A84C", Offset = "0x95A84C", VA = "0x95A84C")]
		public static ReplayStreamTarget CreateReplayStream(Stream stream, ReplayStreamFormat fileFormat = ReplayStreamFormat.Binary, ReplayCompressionLevel compressionLevel = ReplayCompressionLevel.Optimal, int chunkSize = 24)
		{
			return null;
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x958790", Offset = "0x958790", VA = "0x958790")]
		private void InitializeThreading()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x958A6C", Offset = "0x958A6C", VA = "0x958A6C")]
		private void ShutdownThreading()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x95A8D8", Offset = "0x95A8D8", VA = "0x95A8D8")]
		private void StreamThreadMain()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x95AA64", Offset = "0x95AA64", VA = "0x95AA64")]
		private bool StreamThreadHasTask()
		{
			return default(bool);
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x95B28C", Offset = "0x95B28C", VA = "0x95B28C")]
		private void StreamThreadProcessAllWaitingTasks()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x95AB64", Offset = "0x95AB64", VA = "0x95AB64")]
		private void StreamThreadProcessWaitingTask()
		{
		}

		[Token(Token = "0x600091F")]
		protected abstract void ThreadWriteReplayChunk(ReplayStreamChunk chunk);

		[Token(Token = "0x6000920")]
		protected abstract ReplayStreamChunk ThreadReadReplayChunk(ReplayFileChunkFetchRequest fetchData);

		[Token(Token = "0x6000921")]
		protected abstract void ThreadWriteReplayHeader();

		[Token(Token = "0x6000922")]
		protected abstract void ThreadWriteReplayChunkTable();

		[Token(Token = "0x6000923")]
		protected abstract void ThreadWriteInitialStateBuffer();

		[Token(Token = "0x6000924")]
		protected abstract void ThreadFetchReplayHeader();

		[Token(Token = "0x6000925")]
		protected abstract void ThreadFetchReplayChunkTable();

		[Token(Token = "0x6000926")]
		protected abstract void ThreadFetchInitialStateBuffer();

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x95B2C0", Offset = "0x95B2C0", VA = "0x95B2C0", Slot = "27")]
		protected virtual void ThreadCommitReplayStream()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x95B538", Offset = "0x95B538", VA = "0x95B538", Slot = "28")]
		protected virtual void ThreadDiscardReplayStream()
		{
		}
	}
}
namespace UltimateReplay.Statistics
{
	[Token(Token = "0x2000185")]
	public static class ReplayRecordableStatistics
	{
		[Token(Token = "0x2000366")]
		public struct ReplayObjectStatistics
		{
			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int byteSize;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int evaluatedComponents;

			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int supressedComponents;

			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool didSupressComponents;
		}

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool supressedStatistics;

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x949110", Offset = "0x949110", VA = "0x949110")]
		public static ReplayObjectStatistics CalculateReplayRecordStorageUsage(ReplayObject replayObject)
		{
			return default(ReplayObjectStatistics);
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x9493BC", Offset = "0x9493BC", VA = "0x9493BC")]
		public static ReplayObjectStatistics CalculateReplayRecordStorageUsage(params ReplayObject[] replayObjects)
		{
			return default(ReplayObjectStatistics);
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x949690", Offset = "0x949690", VA = "0x949690")]
		public static int CalculateReplayRecordStorageUsage(ReplayRecordableBehaviour replayBehaviour)
		{
			return default(int);
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x94984C", Offset = "0x94984C", VA = "0x94984C")]
		public static int CalculateReplayRecordStorageUsage(params ReplayRecordableBehaviour[] replayBehaviours)
		{
			return default(int);
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x949A54", Offset = "0x949A54", VA = "0x949A54")]
		public static void SupressStatisticsDuringEditMode()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public static class ReplayStatisticsUtil
	{
		[Token(Token = "0x40008F9")]
		private const long kiloByteUnit = 1024L;

		[Token(Token = "0x40008FA")]
		private const long megaByteUnit = 1048576L;

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x951DDC", Offset = "0x951DDC", VA = "0x951DDC")]
		public static decimal GetMemorySizeSmallestUnit(int amount)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x951F50", Offset = "0x951F50", VA = "0x951F50")]
		public static string GetMemoryUnitString(int amount)
		{
			return null;
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x951FFC", Offset = "0x951FFC", VA = "0x951FFC")]
		public static string GetByteSizeString(int bytes)
		{
			return null;
		}
	}
	[Token(Token = "0x2000187")]
	public static class ReplayStorageTargetStatistics
	{
		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<WeakReference> storageTargets;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Stack<int> deadStorageTargets;

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x953820", Offset = "0x953820", VA = "0x953820")]
		internal static void AddStorageTarget(ReplayStorageTarget target)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x951C18", Offset = "0x951C18", VA = "0x951C18")]
		public static int CalculateReplayMemoryUsage()
		{
			return default(int);
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x9538E4", Offset = "0x9538E4", VA = "0x9538E4")]
		private static void RemoveDeadReferences()
		{
		}
	}
}
namespace UltimateReplay.Serializers
{
	[Token(Token = "0x2000188")]
	public sealed class ReplayAnimatorSerializer : IReplaySerialize
	{
		[Token(Token = "0x2000367")]
		[Flags]
		public enum ReplayAnimatorSerializeFlags : ushort
		{
			[Token(Token = "0x4001496")]
			MainState = 2,
			[Token(Token = "0x4001497")]
			SubStates = 4,
			[Token(Token = "0x4001498")]
			Parameters = 8,
			[Token(Token = "0x4001499")]
			LowPrecision = 0x10
		}

		[Token(Token = "0x2000368")]
		public struct ReplayAnimatorState
		{
			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int stateHash;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float normalizedTime;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float speedMultiplier;
		}

		[Token(Token = "0x2000369")]
		public struct ReplayAnimatorParameter
		{
			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int nameHash;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public AnimatorControllerParameterType parameterType;

			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intValue;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float floatValue;

			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool boolValue;
		}

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ReplayAnimatorSerializeFlags serializeFlags;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplayAnimatorState[] states;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReplayAnimatorParameter[] parameters;

		[Token(Token = "0x170000CC")]
		public ReplayAnimatorSerializeFlags SerializeFlags
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x77F0A8", Offset = "0x77F0A8", VA = "0x77F0A8")]
			get
			{
				return default(ReplayAnimatorSerializeFlags);
			}
			[Token(Token = "0x6000937")]
			[Address(RVA = "0x77F0B0", Offset = "0x77F0B0", VA = "0x77F0B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public ReplayAnimatorState MainState
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x77F0B8", Offset = "0x77F0B8", VA = "0x77F0B8")]
			get
			{
				return default(ReplayAnimatorState);
			}
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x77F0FC", Offset = "0x77F0FC", VA = "0x77F0FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public ReplayAnimatorState[] States
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0x77F190", Offset = "0x77F190", VA = "0x77F190")]
			get
			{
				return null;
			}
			[Token(Token = "0x600093B")]
			[Address(RVA = "0x77E9B8", Offset = "0x77E9B8", VA = "0x77E9B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public ReplayAnimatorParameter[] Parameters
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0x77F198", Offset = "0x77F198", VA = "0x77F198")]
			get
			{
				return null;
			}
			[Token(Token = "0x600093D")]
			[Address(RVA = "0x77EA20", Offset = "0x77EA20", VA = "0x77EA20")]
			set
			{
			}
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x77EA88", Offset = "0x77EA88", VA = "0x77EA88", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x77ED94", Offset = "0x77ED94", VA = "0x77ED94", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x77F020", Offset = "0x77F020", VA = "0x77F020")]
		public ReplayAnimatorSerializer()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public sealed class ReplayAudioSerializer : IReplaySerialize
	{
		[Token(Token = "0x200036A")]
		[Flags]
		public enum ReplayAudioSerializeFlags : byte
		{
			[Token(Token = "0x40014A4")]
			None = 0,
			[Token(Token = "0x40014A5")]
			Pitch = 2,
			[Token(Token = "0x40014A6")]
			Volume = 4,
			[Token(Token = "0x40014A7")]
			StereoPan = 8,
			[Token(Token = "0x40014A8")]
			SpatialBlend = 0x10,
			[Token(Token = "0x40014A9")]
			ReverbZoneMix = 0x20,
			[Token(Token = "0x40014AA")]
			LowPrecision = 0x40
		}

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDE48", Offset = "0x3BDE48")]
		private ReplayAudioSerializeFlags serializeFlags;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDE80", Offset = "0x3BDE80")]
		private bool isPlaying;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDEB8", Offset = "0x3BDEB8")]
		private int timeSample;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDEF0", Offset = "0x3BDEF0")]
		private float pitch;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDF28", Offset = "0x3BDF28")]
		private float volume;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDF60", Offset = "0x3BDF60")]
		private float stereoPan;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDF98", Offset = "0x3BDF98")]
		private float spatialBlend;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BDFD0", Offset = "0x3BDFD0")]
		private float reverbZoneMix;

		[Token(Token = "0x170000D0")]
		public ReplayAudioSerializeFlags SerializeFlags
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x77FF94", Offset = "0x77FF94", VA = "0x77FF94")]
			get
			{
				return default(ReplayAudioSerializeFlags);
			}
			[Token(Token = "0x6000942")]
			[Address(RVA = "0x77FF9C", Offset = "0x77FF9C", VA = "0x77FF9C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public bool IsPlaying
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x77FFA4", Offset = "0x77FFA4", VA = "0x77FFA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000944")]
			[Address(RVA = "0x77FFAC", Offset = "0x77FFAC", VA = "0x77FFAC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public int TimeSample
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x77FFB8", Offset = "0x77FFB8", VA = "0x77FFB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000946")]
			[Address(RVA = "0x77FFC0", Offset = "0x77FFC0", VA = "0x77FFC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public float Pitch
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x77FFC8", Offset = "0x77FFC8", VA = "0x77FFC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000948")]
			[Address(RVA = "0x77FFD0", Offset = "0x77FFD0", VA = "0x77FFD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public float Volume
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x77FFD8", Offset = "0x77FFD8", VA = "0x77FFD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600094A")]
			[Address(RVA = "0x77FFE0", Offset = "0x77FFE0", VA = "0x77FFE0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public float StereoPan
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0x77FFE8", Offset = "0x77FFE8", VA = "0x77FFE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x77FFF0", Offset = "0x77FFF0", VA = "0x77FFF0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public float SpatialBlend
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x77FFF8", Offset = "0x77FFF8", VA = "0x77FFF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x780000", Offset = "0x780000", VA = "0x780000")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public float ReverbZoneMix
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x780008", Offset = "0x780008", VA = "0x780008")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x780010", Offset = "0x780010", VA = "0x780010")]
			set
			{
			}
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x77FAC0", Offset = "0x77FAC0", VA = "0x77FAC0", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x77FD7C", Offset = "0x77FD7C", VA = "0x77FD7C", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x77FF8C", Offset = "0x77FF8C", VA = "0x77FF8C")]
		public ReplayAudioSerializer()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public sealed class ReplayEnabledStateSerializer : IReplaySerialize
	{
		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE008", Offset = "0x3BE008")]
		private bool enabled;

		[Token(Token = "0x170000D8")]
		public bool Enabled
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x787F20", Offset = "0x787F20", VA = "0x787F20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x787F28", Offset = "0x787F28", VA = "0x787F28")]
			set
			{
			}
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x783898", Offset = "0x783898", VA = "0x783898", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x783A18", Offset = "0x783A18", VA = "0x783A18", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x783ADC", Offset = "0x783ADC", VA = "0x783ADC")]
		public ReplayEnabledStateSerializer()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public sealed class ReplayMaterialChangeSerializer : IReplaySerialize
	{
		[Token(Token = "0x200036B")]
		[Flags]
		public enum ReplayMaterialChangeSerializeFlags : ushort
		{
			[Token(Token = "0x40014AC")]
			SharedMaterial = 1,
			[Token(Token = "0x40014AD")]
			AllMaterials = 2,
			[Token(Token = "0x40014AE")]
			_8BitIndex = 4,
			[Token(Token = "0x40014AF")]
			_16BitIndex = 8,
			[Token(Token = "0x40014B0")]
			_32BitIndex = 0x10
		}

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE040", Offset = "0x3BE040")]
		private ReplayMaterialChangeSerializeFlags serializeFlags;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE078", Offset = "0x3BE078")]
		private int[] materialIndexes;

		[Token(Token = "0x170000D9")]
		public int MaterialIndex
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x793EA4", Offset = "0x793EA4", VA = "0x793EA4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DA")]
		public int[] MaterialIndexes
		{
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x793ED8", Offset = "0x793ED8", VA = "0x793ED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public ReplayMaterialChangeSerializeFlags SerializeFlags
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x793EE0", Offset = "0x793EE0", VA = "0x793EE0")]
			get
			{
				return default(ReplayMaterialChangeSerializeFlags);
			}
			[Token(Token = "0x600095C")]
			[Address(RVA = "0x793EE8", Offset = "0x793EE8", VA = "0x793EE8")]
			set
			{
			}
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x7934CC", Offset = "0x7934CC", VA = "0x7934CC", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x793858", Offset = "0x793858", VA = "0x793858", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x792FFC", Offset = "0x792FFC", VA = "0x792FFC")]
		public void SetActiveMaterial(IList<Material> possibleMaterials, Material activeMaterial)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x79323C", Offset = "0x79323C", VA = "0x79323C")]
		public void SetActiveMaterials(IList<Material> possibleMaterials, Material[] activeMaterials)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x7939AC", Offset = "0x7939AC", VA = "0x7939AC")]
		public Material GetActiveMaterial(IList<Material> possibleMaterials)
		{
			return null;
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x793B1C", Offset = "0x793B1C", VA = "0x793B1C")]
		public int GetActiveMaterials(IList<Material> possibleMaterials, Material[] results)
		{
			return default(int);
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x793EF0", Offset = "0x793EF0", VA = "0x793EF0")]
		private void WriteMaterialInteger(ReplayState state, int value)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x793F3C", Offset = "0x793F3C", VA = "0x793F3C")]
		private int ReadMaterialInteger(ReplayState state)
		{
			return default(int);
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x793F8C", Offset = "0x793F8C", VA = "0x793F8C")]
		private int GetMaterialIndex(IList<Material> possibleMaterials, Material activeMaterial)
		{
			return default(int);
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x794160", Offset = "0x794160", VA = "0x794160")]
		private void UpdateIndexSizeFlags(int arraySize)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x793E40", Offset = "0x793E40", VA = "0x793E40")]
		public ReplayMaterialChangeSerializer()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class ReplayMaterialSerializer : IReplaySerialize
	{
		[Token(Token = "0x200036C")]
		[Flags]
		public enum ReplayMaterialSerializeFlags : byte
		{
			[Token(Token = "0x40014B2")]
			None = 0,
			[Token(Token = "0x40014B3")]
			SharedMaterial = 1,
			[Token(Token = "0x40014B4")]
			Color = 2,
			[Token(Token = "0x40014B5")]
			MainTextureOffset = 4,
			[Token(Token = "0x40014B6")]
			MainTextureScale = 8,
			[Token(Token = "0x40014B7")]
			DoubleSidedGlobalIllumination = 0x10,
			[Token(Token = "0x40014B8")]
			GlobalIlluminationFlags = 0x20
		}

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE0B0", Offset = "0x3BE0B0")]
		private ReplayMaterialSerializeFlags serializeFlags;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE0E8", Offset = "0x3BE0E8")]
		private Color color;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE120", Offset = "0x3BE120")]
		private Vector2 mainTextureOffset;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE158", Offset = "0x3BE158")]
		private Vector2 mainTextureScale;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE190", Offset = "0x3BE190")]
		private bool doubleSidedGlobalIllumination;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE1C8", Offset = "0x3BE1C8")]
		private MaterialGlobalIlluminationFlags globalIlluminationFlags;

		[Token(Token = "0x170000DC")]
		public ReplayMaterialSerializeFlags SerializeFlags
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x794194", Offset = "0x794194", VA = "0x794194")]
			get
			{
				return default(ReplayMaterialSerializeFlags);
			}
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x79419C", Offset = "0x79419C", VA = "0x79419C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public Color Color
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x7941A4", Offset = "0x7941A4", VA = "0x7941A4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x7941B0", Offset = "0x7941B0", VA = "0x7941B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public Vector2 MainTextureOffset
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x7941BC", Offset = "0x7941BC", VA = "0x7941BC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600096D")]
			[Address(RVA = "0x7941C4", Offset = "0x7941C4", VA = "0x7941C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public Vector2 MainTextureScale
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x7941CC", Offset = "0x7941CC", VA = "0x7941CC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x7941D4", Offset = "0x7941D4", VA = "0x7941D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public bool DoubleSidedGlobalIllumination
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x7941DC", Offset = "0x7941DC", VA = "0x7941DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x7941E4", Offset = "0x7941E4", VA = "0x7941E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public MaterialGlobalIlluminationFlags GlobalIlluminationFlags
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x7941F0", Offset = "0x7941F0", VA = "0x7941F0")]
			get
			{
				return default(MaterialGlobalIlluminationFlags);
			}
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x7941F8", Offset = "0x7941F8", VA = "0x7941F8")]
			set
			{
			}
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x792818", Offset = "0x792818", VA = "0x792818", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x792A44", Offset = "0x792A44", VA = "0x792A44", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x794200", Offset = "0x794200", VA = "0x794200")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x792BA8", Offset = "0x792BA8", VA = "0x792BA8")]
		public ReplayMaterialSerializer()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public sealed class ReplayObjectSerializer : IReplaySerialize
	{
		[Token(Token = "0x200036D")]
		[Flags]
		public enum ReplayObjectSerializeFlags : byte
		{
			[Token(Token = "0x40014BA")]
			Components = 8,
			[Token(Token = "0x40014BB")]
			Variables = 0x10,
			[Token(Token = "0x40014BC")]
			Events = 0x20,
			[Token(Token = "0x40014BD")]
			Methods = 0x40
		}

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE200", Offset = "0x3BE200")]
		private ReplayObjectSerializeFlags serializeFlags;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE238", Offset = "0x3BE238")]
		private ReplayIdentity prefabIdentity;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ReplayComponentData> componentStates;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ReplayVariableData> variableStates;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ReplayEventData> eventStates;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ReplayMethodData> methodStates;

		[Token(Token = "0x170000E2")]
		public ReplayObjectSerializeFlags SerializeFlags
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x944440", Offset = "0x944440", VA = "0x944440")]
			get
			{
				return default(ReplayObjectSerializeFlags);
			}
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x944448", Offset = "0x944448", VA = "0x944448")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public ReplayIdentity PrefabIdentity
		{
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x944450", Offset = "0x944450", VA = "0x944450")]
			get
			{
				return default(ReplayIdentity);
			}
			[Token(Token = "0x600097B")]
			[Address(RVA = "0x944458", Offset = "0x944458", VA = "0x944458")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public IList<ReplayComponentData> ComponentStates
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x944460", Offset = "0x944460", VA = "0x944460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		public IList<ReplayVariableData> VariableStates
		{
			[Token(Token = "0x600097D")]
			[Address(RVA = "0x944468", Offset = "0x944468", VA = "0x944468")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public IList<ReplayEventData> EventStates
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0x944470", Offset = "0x944470", VA = "0x944470")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		public IList<ReplayMethodData> MethodStates
		{
			[Token(Token = "0x600097F")]
			[Address(RVA = "0x944478", Offset = "0x944478", VA = "0x944478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x944480", Offset = "0x944480", VA = "0x944480")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x944778", Offset = "0x944778", VA = "0x944778", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x944F14", Offset = "0x944F14", VA = "0x944F14", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x94530C", Offset = "0x94530C", VA = "0x94530C")]
		public ReplayObjectSerializer()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public sealed class ReplayParticleSystemSerializer : IReplaySerialize
	{
		[Token(Token = "0x200036E")]
		[Flags]
		public enum ReplayParticleSystemSerializeFlags : ushort
		{
			[Token(Token = "0x40014BF")]
			None = 0,
			[Token(Token = "0x40014C0")]
			LowPrecision = 2
		}

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ReplayParticleSystemSerializeFlags serializeFlags;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private uint randomSeed;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float simulationTime;

		[Token(Token = "0x170000E8")]
		public ReplayParticleSystemSerializeFlags SerializeFlags
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x945B6C", Offset = "0x945B6C", VA = "0x945B6C")]
			get
			{
				return default(ReplayParticleSystemSerializeFlags);
			}
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x945B74", Offset = "0x945B74", VA = "0x945B74")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public uint RandomSeed
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0x945B7C", Offset = "0x945B7C", VA = "0x945B7C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x945B84", Offset = "0x945B84", VA = "0x945B84")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public float SimulationTime
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0x945B8C", Offset = "0x945B8C", VA = "0x945B8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000989")]
			[Address(RVA = "0x945B94", Offset = "0x945B94", VA = "0x945B94")]
			set
			{
			}
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x945898", Offset = "0x945898", VA = "0x945898", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x945A00", Offset = "0x945A00", VA = "0x945A00", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x945B64", Offset = "0x945B64", VA = "0x945B64")]
		public ReplayParticleSystemSerializer()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public sealed class ReplayPointRendererSerializer : IReplaySerialize
	{
		[Token(Token = "0x200036F")]
		[Flags]
		public enum ReplayPointRendererSerializeFlags : byte
		{
			[Token(Token = "0x40014C2")]
			None = 0,
			[Token(Token = "0x40014C3")]
			LowPrecision = 2,
			[Token(Token = "0x40014C4")]
			HalfPrecisionCount = 4
		}

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ReplayPointRendererSerializeFlags serializeFlags;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3> points;

		[Token(Token = "0x170000EB")]
		public ReplayPointRendererSerializeFlags SerializeFlags
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x948090", Offset = "0x948090", VA = "0x948090")]
			get
			{
				return default(ReplayPointRendererSerializeFlags);
			}
			[Token(Token = "0x600098E")]
			[Address(RVA = "0x948098", Offset = "0x948098", VA = "0x948098")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public IList<Vector3> Points
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0x9480A0", Offset = "0x9480A0", VA = "0x9480A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x9480A8", Offset = "0x9480A8", VA = "0x9480A8", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x94827C", Offset = "0x94827C", VA = "0x94827C", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x948350", Offset = "0x948350", VA = "0x948350")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x948464", Offset = "0x948464", VA = "0x948464")]
		public ReplayPointRendererSerializer()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public static class ReplaySerializers
	{
		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, Type> serializers;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Type> serializerIDLookup;

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x94DFEC", Offset = "0x94DFEC", VA = "0x94DFEC")]
		static ReplaySerializers()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x94E40C", Offset = "0x94E40C", VA = "0x94E40C")]
		public static int GetSerializerIDFromType(Type serializerType)
		{
			return default(int);
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x94E4A0", Offset = "0x94E4A0", VA = "0x94E4A0")]
		public static Type GetSerializerTypeFromID(int serializerID)
		{
			return null;
		}
	}
	[Token(Token = "0x2000191")]
	public sealed class ReplayTransformSerializer : IReplaySerialize
	{
		[Token(Token = "0x2000370")]
		[Flags]
		public enum ReplayTransformSerializeFlags : ushort
		{
			[Token(Token = "0x40014C6")]
			PosX = 1,
			[Token(Token = "0x40014C7")]
			PosY = 2,
			[Token(Token = "0x40014C8")]
			PosZ = 4,
			[Token(Token = "0x40014C9")]
			LocalPos = 8,
			[Token(Token = "0x40014CA")]
			LowPrecisionPos = 0x10,
			[Token(Token = "0x40014CB")]
			RotX = 0x20,
			[Token(Token = "0x40014CC")]
			RotY = 0x40,
			[Token(Token = "0x40014CD")]
			RotZ = 0x80,
			[Token(Token = "0x40014CE")]
			LocalRot = 0x100,
			[Token(Token = "0x40014CF")]
			LowPrecisionRot = 0x200,
			[Token(Token = "0x40014D0")]
			ScaX = 0x400,
			[Token(Token = "0x40014D1")]
			ScaY = 0x800,
			[Token(Token = "0x40014D2")]
			ScaZ = 0x1000,
			[Token(Token = "0x40014D3")]
			LocalSca = 0x2000,
			[Token(Token = "0x40014D4")]
			LowPrecisionSca = 0x4000
		}

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE270", Offset = "0x3BE270")]
		private ReplayTransformSerializeFlags serializeFlags;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE2A8", Offset = "0x3BE2A8")]
		private Vector3 position;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE2E0", Offset = "0x3BE2E0")]
		private Quaternion rotation;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE318", Offset = "0x3BE318")]
		private Vector3 scale;

		[Token(Token = "0x170000ED")]
		public Vector3 Position
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0xF9F030", Offset = "0xF9F030", VA = "0xF9F030")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000998")]
			[Address(RVA = "0xF9F03C", Offset = "0xF9F03C", VA = "0xF9F03C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0xF9F048", Offset = "0xF9F048", VA = "0xF9F048")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600099A")]
			[Address(RVA = "0xF9F054", Offset = "0xF9F054", VA = "0xF9F054")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public Vector3 Scale
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0xF9F060", Offset = "0xF9F060", VA = "0xF9F060")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600099C")]
			[Address(RVA = "0xF9F06C", Offset = "0xF9F06C", VA = "0xF9F06C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public ReplayTransformSerializeFlags SerializeFlags
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0xF9F078", Offset = "0xF9F078", VA = "0xF9F078")]
			get
			{
				return default(ReplayTransformSerializeFlags);
			}
			[Token(Token = "0x600099E")]
			[Address(RVA = "0xF9F080", Offset = "0xF9F080", VA = "0xF9F080")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public bool IsWorldPosition
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0xF9F088", Offset = "0xF9F088", VA = "0xF9F088")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0xF9F098", Offset = "0xF9F098", VA = "0xF9F098")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public bool IsLocalPosition
		{
			[Token(Token = "0x60009A1")]
			[Address(RVA = "0xF9F0B4", Offset = "0xF9F0B4", VA = "0xF9F0B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0xF9F0C0", Offset = "0xF9F0C0", VA = "0xF9F0C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public bool IsFullPosition
		{
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0xF9F0DC", Offset = "0xF9F0DC", VA = "0xF9F0DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F4")]
		public bool IsLowPrecisionPosition
		{
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0xF9F0F0", Offset = "0xF9F0F0", VA = "0xF9F0F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0xF9F0FC", Offset = "0xF9F0FC", VA = "0xF9F0FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public bool IsWorldRotation
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0xF9F118", Offset = "0xF9F118", VA = "0xF9F118")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0xF9F128", Offset = "0xF9F128", VA = "0xF9F128")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public bool IsLocalRotation
		{
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0xF9F144", Offset = "0xF9F144", VA = "0xF9F144")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0xF9F150", Offset = "0xF9F150", VA = "0xF9F150")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public bool IsFullRotation
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0xF9F16C", Offset = "0xF9F16C", VA = "0xF9F16C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F8")]
		public bool IsLowPrecisionRotation
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0xF9F180", Offset = "0xF9F180", VA = "0xF9F180")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xF9F18C", Offset = "0xF9F18C", VA = "0xF9F18C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public bool IsFullScale
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0xF9F1A8", Offset = "0xF9F1A8", VA = "0xF9F1A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FA")]
		public bool IsLowPrecisionScale
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0xF9F1C8", Offset = "0xF9F1C8", VA = "0xF9F1C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0xF9F1D4", Offset = "0xF9F1D4", VA = "0xF9F1D4")]
			set
			{
			}
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xF9F1F0", Offset = "0xF9F1F0", VA = "0xF9F1F0")]
		public ReplayTransformSerializer()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xF9F244", Offset = "0xF9F244", VA = "0xF9F244")]
		public ReplayTransformSerializer(Vector3 position, Quaternion rotation, Vector3 scale, ReplayTransformSerializeFlags serializeFlags = (ReplayTransformSerializeFlags)0)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xF9F314", Offset = "0xF9F314", VA = "0xF9F314", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xF9F5FC", Offset = "0xF9F5FC", VA = "0xF9F5FC", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xF9F868", Offset = "0xF9F868", VA = "0xF9F868")]
		public void ApplyTo(Transform targetTransform)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xF9F8A0", Offset = "0xF9F8A0", VA = "0xF9F8A0")]
		public void ApplyPositionTo(Transform targetTransform)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xF9F93C", Offset = "0xF9F93C", VA = "0xF9F93C")]
		public void ApplyRotationTo(Transform targetTransform)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xF9FA80", Offset = "0xF9FA80", VA = "0xF9FA80")]
		public void ApplyScaleTo(Transform targetTransform)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xF9F5DC", Offset = "0xF9F5DC", VA = "0xF9F5DC")]
		public bool HasRecordableData()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xF9FAE4", Offset = "0xF9FAE4", VA = "0xF9FAE4")]
		public static ReplayTransformSerializer DeserializeReplayState(ReplayState state)
		{
			return null;
		}
	}
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x3B88E4", Offset = "0x3B88E4")]
	public class ReplaySerializerAttribute : Attribute
	{
		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Type serializerType;

		[Token(Token = "0x170000FB")]
		public Type SerializerType
		{
			[Token(Token = "0x60009BA")]
			[Address(RVA = "0x94DFB8", Offset = "0x94DFB8", VA = "0x94DFB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x94DFC0", Offset = "0x94DFC0", VA = "0x94DFC0")]
		public ReplaySerializerAttribute(Type serializerType)
		{
		}
	}
}
namespace UltimateReplay.Core
{
	[Serializable]
	[Token(Token = "0x2000193")]
	public class DefaultReplayPreparer : IReplayPreparer, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x2000371")]
		public class ComponentPreparerSettings
		{
			[Token(Token = "0x40014D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SerializableType componentPreparerType;

			[Token(Token = "0x40014D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool enabled;

			[Token(Token = "0x600133F")]
			[Address(RVA = "0x5F54AC", Offset = "0x5F54AC", VA = "0x5F54AC")]
			public ComponentPreparerSettings()
			{
			}
		}

		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B937C", Offset = "0x3B937C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40014D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ComponentPreparer preparer;

			[Token(Token = "0x6001340")]
			[Address(RVA = "0x5F5354", Offset = "0x5F5354", VA = "0x5F5354")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001341")]
			[Address(RVA = "0x5F535C", Offset = "0x5F535C", VA = "0x5F535C")]
			internal bool <OnBeforeSerialize>b__0(ComponentPreparerSettings p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000373")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B938C", Offset = "0x3B938C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ComponentPreparer preparer;

			[Token(Token = "0x6001342")]
			[Address(RVA = "0x5F5400", Offset = "0x5F5400", VA = "0x5F5400")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001343")]
			[Address(RVA = "0x5F5408", Offset = "0x5F5408", VA = "0x5F5408")]
			internal bool <OnAfterDeserialize>b__0(ComponentPreparerSettings p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<ComponentPreparer> preparers;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BE350", Offset = "0x3BE350")]
		private List<SerializableType> skipTypes;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BE388", Offset = "0x3BE388")]
		private List<ComponentPreparerSettings> preparerSettings;

		[Token(Token = "0x170000FC")]
		public IList<SerializableType> SkipTypes
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x8CE768", Offset = "0x8CE768", VA = "0x8CE768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public IList<ComponentPreparerSettings> PreparerSettings
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x8CE770", Offset = "0x8CE770", VA = "0x8CE770")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x8CE778", Offset = "0x8CE778", VA = "0x8CE778")]
		static DefaultReplayPreparer()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x8CEC00", Offset = "0x8CEC00", VA = "0x8CEC00", Slot = "8")]
		public virtual void PrepareForPlayback(ReplayObject replayObject)
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x8CF03C", Offset = "0x8CF03C", VA = "0x8CF03C", Slot = "9")]
		public virtual void PrepareForGameplay(ReplayObject replayObject)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x8CF2E0", Offset = "0x8CF2E0", VA = "0x8CF2E0")]
		public bool HasSkipType(Type systemType)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x8CF474", Offset = "0x8CF474", VA = "0x8CF474", Slot = "6")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x8CF758", Offset = "0x8CF758", VA = "0x8CF758", Slot = "7")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x8CF9A8", Offset = "0x8CF9A8", VA = "0x8CF9A8")]
		public DefaultReplayPreparer CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x8CEEA4", Offset = "0x8CEEA4", VA = "0x8CEEA4")]
		private ComponentPreparer FindPreparer(Type componentType)
		{
			return null;
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x8CFAA8", Offset = "0x8CFAA8", VA = "0x8CFAA8")]
		public DefaultReplayPreparer()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public interface IReplayPreparer
	{
		[Token(Token = "0x60009C7")]
		void PrepareForPlayback(ReplayObject replayObject);

		[Token(Token = "0x60009C8")]
		void PrepareForGameplay(ReplayObject replayObject);
	}
	[Token(Token = "0x2000195")]
	internal enum ReplayIdentifier : byte
	{
		[Token(Token = "0x4000927")]
		Identity,
		[Token(Token = "0x4000928")]
		Variable,
		[Token(Token = "0x4000929")]
		State,
		[Token(Token = "0x400092A")]
		Snapshot,
		[Token(Token = "0x400092B")]
		InitialData,
		[Token(Token = "0x400092C")]
		InitialDataBuffer,
		[Token(Token = "0x400092D")]
		ObjectRecorder,
		[Token(Token = "0x400092E")]
		EnabledStateRecorder,
		[Token(Token = "0x400092F")]
		TransformRecorder,
		[Token(Token = "0x4000930")]
		CustomRecorder
	}
	[Token(Token = "0x2000196")]
	public interface IReplaySerialize
	{
		[Token(Token = "0x60009C9")]
		void OnReplaySerialize(ReplayState state);

		[Token(Token = "0x60009CA")]
		void OnReplayDeserialize(ReplayState state);
	}
	[Token(Token = "0x2000197")]
	internal static class ReplayCleanupUtility
	{
		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<IDisposable> unreleasedResources;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool lockCollection;

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x7829F4", Offset = "0x7829F4", VA = "0x7829F4")]
		public static void RegisterUnreleasedResource(IDisposable resource)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x782B08", Offset = "0x782B08", VA = "0x782B08")]
		public static void UnregisterUnreleasedResource(IDisposable resource)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x782C1C", Offset = "0x782C1C", VA = "0x782C1C")]
		public static void CleanupUnreleasedResources()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public struct ReplayComponentData : IReplaySerialize, IDisposable
	{
		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE3C0", Offset = "0x3BE3C0")]
		private ReplayIdentity behaviourIdentity;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE3F8", Offset = "0x3BE3F8")]
		private string componentSerializerTypeString;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ReplayTextSerializeAttribute", RVA = "0x3BE430", Offset = "0x3BE430")]
		private int componentSerializerID;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplayState componentStateData;

		[Token(Token = "0x170000FE")]
		public ReplayIdentity BehaviourIdentity
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x7830B0", Offset = "0x7830B0", VA = "0x7830B0")]
			get
			{
				return default(ReplayIdentity);
			}
		}

		[Token(Token = "0x170000FF")]
		public int ComponentSerializerID
		{
			[Token(Token = "0x60009D0")]
			[Address(RVA = "0x7830B8", Offset = "0x7830B8", VA = "0x7830B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000100")]
		public ReplayState ComponentStateData
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x7830C0", Offset = "0x7830C0", VA = "0x7830C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x7830C8", Offset = "0x7830C8", VA = "0x7830C8")]
		public ReplayComponentData(ReplayIdentity behaviourIdentity, Type componentSerializerType, ReplayState componentStateData)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x783118", Offset = "0x783118", VA = "0x783118")]
		public ReplayComponentData(ReplayIdentity behaviourIdentity, int componentSerializerID, ReplayState componentStateData)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x78312C", Offset = "0x78312C", VA = "0x78312C", Slot = "6")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x7831C4", Offset = "0x7831C4", VA = "0x7831C4", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x783298", Offset = "0x783298", VA = "0x783298", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x7833AC", Offset = "0x7833AC", VA = "0x7833AC")]
		public Type ResolveSerializerType()
		{
			return null;
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x7834B0", Offset = "0x7834B0", VA = "0x7834B0")]
		public bool DeserializeComponent(IReplaySerialize componentSerializer)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000199")]
	public struct ReplayEventData : IReplaySerialize
	{
		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ReplayIdentity behaviourIdentity;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private ushort eventID;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ReplayState eventState;

		[Token(Token = "0x17000101")]
		public ReplayIdentity BehaviourIdentity
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x787F34", Offset = "0x787F34", VA = "0x787F34")]
			get
			{
				return default(ReplayIdentity);
			}
		}

		[Token(Token = "0x17000102")]
		public ushort EventID
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x787F3C", Offset = "0x787F3C", VA = "0x787F3C")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000103")]
		public ReplayState EventState
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x787F44", Offset = "0x787F44", VA = "0x787F44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		public bool HasEventState
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x787F4C", Offset = "0x787F4C", VA = "0x787F4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x787F5C", Offset = "0x787F5C", VA = "0x787F5C")]
		public ReplayEventData(ReplayIdentity behaviourIdentity, ushort eventID)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x787F6C", Offset = "0x787F6C", VA = "0x787F6C")]
		public ReplayEventData(ReplayIdentity behaviourIdentity, ushort eventID, ReplayState eventState)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x787F7C", Offset = "0x787F7C", VA = "0x787F7C", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x78803C", Offset = "0x78803C", VA = "0x78803C", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019A")]
	public struct ReplayIdentity : IEquatable<ReplayIdentity>, IReplaySerialize, IReplayStreamSerialize, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400093A")]
		internal const int maxGenerateAttempts = 512;

		[Token(Token = "0x400093B")]
		internal const int unassignedID = 0;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random rand;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<ReplayIdentity> usedIds;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private uint id;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly ReplayIdentity invalid;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly ushort byteSize;

		[Token(Token = "0x17000105")]
		public bool IsValid
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x78BF6C", Offset = "0x78BF6C", VA = "0x78BF6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public string IDString
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x78BF7C", Offset = "0x78BF7C", VA = "0x78BF7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		public int IDValue
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x78BF84", Offset = "0x78BF84", VA = "0x78BF84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x78BF8C", Offset = "0x78BF8C", VA = "0x78BF8C")]
		static ReplayIdentity()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x78C094", Offset = "0x78C094", VA = "0x78C094")]
		public ReplayIdentity(uint id)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x78C09C", Offset = "0x78C09C", VA = "0x78C09C")]
		public ReplayIdentity(ReplayIdentity other)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x78C0A4", Offset = "0x78C0A4", VA = "0x78C0A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x78C0AC", Offset = "0x78C0AC", VA = "0x78C0AC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x78C130", Offset = "0x78C130", VA = "0x78C130", Slot = "4")]
		public bool Equals(ReplayIdentity obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x78C140", Offset = "0x78C140", VA = "0x78C140", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x78C1D0", Offset = "0x78C1D0", VA = "0x78C1D0")]
		public static bool operator ==(ReplayIdentity a, ReplayIdentity b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x78C1DC", Offset = "0x78C1DC", VA = "0x78C1DC")]
		public static bool operator !=(ReplayIdentity a, ReplayIdentity b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x78C1E8", Offset = "0x78C1E8", VA = "0x78C1E8", Slot = "5")]
		private void UltimateReplay.Core.IReplaySerialize.OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x78C2E4", Offset = "0x78C2E4", VA = "0x78C2E4", Slot = "6")]
		private void UltimateReplay.Core.IReplaySerialize.OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x78C350", Offset = "0x78C350", VA = "0x78C350", Slot = "7")]
		private void UltimateReplay.Storage.IReplayStreamSerialize.OnReplayStreamSerialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x78C414", Offset = "0x78C414", VA = "0x78C414", Slot = "8")]
		private void UltimateReplay.Storage.IReplayStreamSerialize.OnReplayStreamDeserialize(BinaryReader reader)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x78C48C", Offset = "0x78C48C", VA = "0x78C48C", Slot = "9")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x78C500", Offset = "0x78C500", VA = "0x78C500", Slot = "10")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x78C56C", Offset = "0x78C56C", VA = "0x78C56C")]
		public static void RegisterIdentity(ReplayIdentity identity)
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x78C660", Offset = "0x78C660", VA = "0x78C660")]
		public static void UnregisterIdentity(ReplayIdentity identity)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x780BB4", Offset = "0x780BB4", VA = "0x780BB4")]
		internal static void Generate(ReplayIdentity identity)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x78C8DC", Offset = "0x78C8DC", VA = "0x78C8DC")]
		internal static bool IsUnique(ReplayIdentity identity, bool ignoreOneMatch)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x78C754", Offset = "0x78C754", VA = "0x78C754")]
		private static bool IsValueUnique(uint value, bool ignoreOneMatch)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019B")]
	public interface IReplayReusable
	{
		[Token(Token = "0x60009F8")]
		void Initialize();
	}
	[Token(Token = "0x200019C")]
	public sealed class ReplayInstancePool<T>
	{
		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Stack<T> waitingInstances;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<T> newT;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object sync;

		[Token(Token = "0x60009F9")]
		internal ReplayInstancePool(Func<T> newT)
		{
		}

		[Token(Token = "0x60009FA")]
		public T GetReusable()
		{
			return (T)null;
		}

		[Token(Token = "0x60009FB")]
		public void PushReusable(T reusableInstance)
		{
		}
	}
	[Token(Token = "0x200019D")]
	public abstract class ReplayLockable
	{
		[Token(Token = "0x2000374")]
		public struct LockableContext
		{
			[Token(Token = "0x40014D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public object lockOwner;

			[Token(Token = "0x40014DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ReplayHandle lockHandle;

			[Token(Token = "0x17000203")]
			public bool IsLocked
			{
				[Token(Token = "0x6001344")]
				[Address(RVA = "0x88AF28", Offset = "0x88AF28", VA = "0x88AF28")]
				get
				{
					return default(bool);
				}
			}
		}

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LockableContext context;

		[Token(Token = "0x17000108")]
		public LockableContext LockContext
		{
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x78E4D4", Offset = "0x78E4D4", VA = "0x78E4D4")]
			get
			{
				return default(LockableContext);
			}
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x78E4E0", Offset = "0x78E4E0", VA = "0x78E4E0")]
		public void Lock(object lockOwner, ReplayHandle lockHandle)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x78E59C", Offset = "0x78E59C", VA = "0x78E59C")]
		public void Unlock(object lockOwner, ReplayHandle lockHandle)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x78E630", Offset = "0x78E630", VA = "0x78E630")]
		protected ReplayLockable()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public struct ReplayMethodData : IReplaySerialize
	{
		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ReplayIdentity behaviourIdentity;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private MethodInfo targetMethod;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object[] methodArguments;

		[Token(Token = "0x17000109")]
		public ReplayIdentity BehaviourIdentity
		{
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x795350", Offset = "0x795350", VA = "0x795350")]
			get
			{
				return default(ReplayIdentity);
			}
		}

		[Token(Token = "0x1700010A")]
		public MethodInfo TargetMethod
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x795358", Offset = "0x795358", VA = "0x795358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public object[] MethodArguments
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x795360", Offset = "0x795360", VA = "0x795360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x795368", Offset = "0x795368", VA = "0x795368")]
		public ReplayMethodData(ReplayIdentity behaviourIdentity, MethodInfo targetMethod, params object[] methodArguments)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x795374", Offset = "0x795374", VA = "0x795374", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x795984", Offset = "0x795984", VA = "0x795984", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}
	}
	[Token(Token = "0x200019F")]
	internal class ReplayMethods
	{
		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly byte serializeMethodID;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HashSet<MethodInfo> replayMethods;

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x795E88", Offset = "0x795E88", VA = "0x795E88")]
		static ReplayMethods()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x795440", Offset = "0x795440", VA = "0x795440")]
		public static bool SerializeMethodInfo(MethodInfo method, ReplayState state)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x7957A8", Offset = "0x7957A8", VA = "0x7957A8")]
		public static bool SerializeMethodArguments(MethodInfo method, ReplayState state, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x795A30", Offset = "0x795A30", VA = "0x795A30")]
		public static MethodInfo DeserializeMethodInfo(ReplayState state)
		{
			return null;
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x795CD4", Offset = "0x795CD4", VA = "0x795CD4")]
		public static object[] DeserializeMethodArguments(MethodInfo method, ReplayState state)
		{
			return null;
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x796160", Offset = "0x796160", VA = "0x796160")]
		public ReplayMethods()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class ReplayPlaybackAccuracyReporter
	{
		[Token(Token = "0x2000375")]
		public enum PlaybackAccuracyError
		{
			[Token(Token = "0x40014DC")]
			DestroyNotARegisteredPrefab,
			[Token(Token = "0x40014DD")]
			InstantiateMissingObjectAndNotPrefab,
			[Token(Token = "0x40014DE")]
			InstantiatePrefabNotFound
		}

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<PlaybackAccuracyError, List<ReplayIdentity>> reportedErrors;

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x945D04", Offset = "0x945D04", VA = "0x945D04")]
		public static void RecordPlaybackAccuracyError(ReplayIdentity replayIdentity, PlaybackAccuracyError errorType)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x946020", Offset = "0x946020", VA = "0x946020")]
		public static void ReportAllPlaybackAccuracyErrors()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x946638", Offset = "0x946638", VA = "0x946638")]
		public static string GetPlaybackAccuracyErrorMessage(PlaybackAccuracyError errorType, int errorCount)
		{
			return null;
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x945F3C", Offset = "0x945F3C", VA = "0x945F3C")]
		public static string GetPlaybackAccuracyErrorMessage(ReplayIdentity replayIdentity, PlaybackAccuracyError errorType)
		{
			return null;
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x946724", Offset = "0x946724", VA = "0x946724")]
		public ReplayPlaybackAccuracyReporter()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	internal struct ReplayTimer
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float startTime;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float timer;

		[Token(Token = "0x1700010C")]
		public float ElapsedSeconds
		{
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x948E00", Offset = "0x948E00", VA = "0x948E00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x94723C", Offset = "0x94723C", VA = "0x94723C")]
		public void Tick(float deltaTime)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x94724C", Offset = "0x94724C", VA = "0x94724C")]
		public bool HasElapsed(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x947270", Offset = "0x947270", VA = "0x947270")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public sealed class ReplayVariable : IReplaySerialize
	{
		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Type, Func<object, object, float, object>> interpolators;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ReplayBehaviour owner;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplayVarAttribute attribute;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FieldInfo field;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MethodInfo serializeMethod;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MethodInfo deserializeMethod;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isInterpolationSupported;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private object last;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object next;

		[Token(Token = "0x1700010D")]
		public GameObject gameObject
		{
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0xF9FB90", Offset = "0xF9FB90", VA = "0xF9FB90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		public ReplayBehaviour Behaviour
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0xF9FBB0", Offset = "0xF9FBB0", VA = "0xF9FBB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		public int FieldOffset
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0xF9FBB8", Offset = "0xF9FBB8", VA = "0xF9FBB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000110")]
		public object Value
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0xF9FC40", Offset = "0xF9FC40", VA = "0xF9FC40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0xF9FC70", Offset = "0xF9FC70", VA = "0xF9FC70")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public ReplayVarAttribute Attribute
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0xF9FC9C", Offset = "0xF9FC9C", VA = "0xF9FC9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public string Name
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0xF9FCA4", Offset = "0xF9FCA4", VA = "0xF9FCA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public bool IsInterpolated
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0xF9FCC8", Offset = "0xF9FCC8", VA = "0xF9FCC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public bool IsInterpolationSupported
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0xF9FCE8", Offset = "0xF9FCE8", VA = "0xF9FCE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xF9FCF0", Offset = "0xF9FCF0", VA = "0xF9FCF0")]
		public ReplayVariable(ReplayBehaviour owner, FieldInfo field, ReplayVarAttribute attribute)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xF9FF30", Offset = "0xF9FF30", VA = "0xF9FF30", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xFA0098", Offset = "0xFA0098", VA = "0xFA0098", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xFA019C", Offset = "0xFA019C", VA = "0xFA019C")]
		public void UpdateValueRange(object last, object next)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xFA01A4", Offset = "0xFA01A4", VA = "0xFA01A4")]
		public void Interpolate(float delta)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xFA026C", Offset = "0xFA026C", VA = "0xFA026C")]
		public static object InterpolateValue(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xF9FE9C", Offset = "0xF9FE9C", VA = "0xF9FE9C")]
		public static bool CanInterpolate(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A26")]
		public static void RegisterCustomInterpolator<T>(Func<object, object, float, object> interpolatorFunc)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xFA04F4", Offset = "0xFA04F4", VA = "0xFA04F4")]
		public static object InterpolateByte(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xFA05E4", Offset = "0xFA05E4", VA = "0xFA05E4")]
		public static object InterpolateShort(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xFA06CC", Offset = "0xFA06CC", VA = "0xFA06CC")]
		public static object InterpolateInt(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xFA07B4", Offset = "0xFA07B4", VA = "0xFA07B4")]
		public static object InterpolateLong(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xFA089C", Offset = "0xFA089C", VA = "0xFA089C")]
		public static object InterpolateFloat(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xFA0978", Offset = "0xFA0978", VA = "0xFA0978")]
		public static object InterpolateDouble(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xFA0A6C", Offset = "0xFA0A6C", VA = "0xFA0A6C")]
		public static object InterpolateVec2(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xFA0B60", Offset = "0xFA0B60", VA = "0xFA0B60")]
		public static object InterpolateVec3(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xFA0C74", Offset = "0xFA0C74", VA = "0xFA0C74")]
		public static object InterpolateVec4(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xFA0D80", Offset = "0xFA0D80", VA = "0xFA0D80")]
		public static object InterpolateQuat(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xFA0E8C", Offset = "0xFA0E8C", VA = "0xFA0E8C")]
		public static object InterpolateColor(object last, object next, float delta)
		{
			return null;
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xFA0F98", Offset = "0xFA0F98", VA = "0xFA0F98")]
		public static object InterpolateColor32(object last, object next, float delta)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A3")]
	public struct ReplayVariableData : IReplaySerialize
	{
		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ReplayIdentity behaviourIdentity;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int variableFieldOffset;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ReplayState variableStateData;

		[Token(Token = "0x17000115")]
		public ReplayIdentity BehaviourIdentity
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0xFA16AC", Offset = "0xFA16AC", VA = "0xFA16AC")]
			get
			{
				return default(ReplayIdentity);
			}
		}

		[Token(Token = "0x17000116")]
		public int VariableFieldOffset
		{
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0xFA16B4", Offset = "0xFA16B4", VA = "0xFA16B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000117")]
		public ReplayState VariableStateData
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0xFA16BC", Offset = "0xFA16BC", VA = "0xFA16BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xFA16C4", Offset = "0xFA16C4", VA = "0xFA16C4")]
		public ReplayVariableData(ReplayIdentity behaviourIdentity, ReplayVariable variable)
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xFA1780", Offset = "0xFA1780", VA = "0xFA1780", Slot = "4")]
		public void OnReplaySerialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xFA1824", Offset = "0xFA1824", VA = "0xFA1824", Slot = "5")]
		public void OnReplayDeserialize(ReplayState state)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xFA1904", Offset = "0xFA1904", VA = "0xFA1904")]
		public bool ResolveAndDeserializeVariable(ReplayObject tagretObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xFA19CC", Offset = "0xFA19CC", VA = "0xFA19CC")]
		public bool IsMatchedToVariable(ReplayVariable variable)
		{
			return default(bool);
		}
	}
}
namespace UltimateReplay.Core.StatePreparer
{
	[Token(Token = "0x20001A4")]
	[AttributeAttribute(Name = "ReplayComponentPreparerAttribute", RVA = "0x3B8918", Offset = "0x3B8918")]
	internal sealed class AnimatorPreparer : ComponentPreparer<Animator>
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x763A7C", Offset = "0x763A7C", VA = "0x763A7C", Slot = "6")]
		public override void PrepareForPlayback(Animator component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x763AD0", Offset = "0x763AD0", VA = "0x763AD0", Slot = "7")]
		public override void PrepareForGameplay(Animator component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x763B10", Offset = "0x763B10", VA = "0x763B10")]
		public AnimatorPreparer()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	[AttributeAttribute(Name = "ReplayComponentPreparerAttribute", RVA = "0x3B8980", Offset = "0x3B8980")]
	internal sealed class BehaviourPreparer : ComponentPreparer<Behaviour>
	{
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x76D5E8", Offset = "0x76D5E8", VA = "0x76D5E8", Slot = "6")]
		public override void PrepareForPlayback(Behaviour component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x76D63C", Offset = "0x76D63C", VA = "0x76D63C", Slot = "7")]
		public override void PrepareForGameplay(Behaviour component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x76D67C", Offset = "0x76D67C", VA = "0x76D67C")]
		public BehaviourPreparer()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "ReplayComponentPreparerAttribute", RVA = "0x3B89E8", Offset = "0x3B89E8")]
	internal sealed class ColliderPreparer : ComponentPreparer<Collider>
	{
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x8C6038", Offset = "0x8C6038", VA = "0x8C6038", Slot = "6")]
		public override void PrepareForPlayback(Collider component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x8C608C", Offset = "0x8C608C", VA = "0x8C608C", Slot = "7")]
		public override void PrepareForGameplay(Collider component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x8C60CC", Offset = "0x8C60CC", VA = "0x8C60CC")]
		public ColliderPreparer()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "ReplayComponentPreparerAttribute", RVA = "0x3B8A50", Offset = "0x3B8A50")]
	internal sealed class Collider2DPreparer : ComponentPreparer<Collider2D>
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x8C5F50", Offset = "0x8C5F50", VA = "0x8C5F50", Slot = "6")]
		public override void PrepareForPlayback(Collider2D component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x8C5FA4", Offset = "0x8C5FA4", VA = "0x8C5FA4", Slot = "7")]
		public override void PrepareForGameplay(Collider2D component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x8C5FE4", Offset = "0x8C5FE4", VA = "0x8C5FE4")]
		public Collider2DPreparer()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	internal abstract class ComponentPreparer
	{
		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ReplayComponentPreparerAttribute attribute;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enabled;

		[Token(Token = "0x17000118")]
		internal ReplayComponentPreparerAttribute Attribute
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x8C7614", Offset = "0x8C7614", VA = "0x8C7614")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x8C761C", Offset = "0x8C761C", VA = "0x8C761C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A4A")]
		internal abstract void InvokePrepareForPlayback(Component component);

		[Token(Token = "0x6000A4B")]
		internal abstract void InvokePrepareForGameplay(Component component);

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x8C7624", Offset = "0x8C7624", VA = "0x8C7624")]
		protected ComponentPreparer()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	internal abstract class ComponentPreparer<T> : ComponentPreparer where T : Component
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, ReplayState> componentData;

		[Token(Token = "0x6000A4D")]
		public abstract void PrepareForPlayback(T component, ReplayState additionalData);

		[Token(Token = "0x6000A4E")]
		public abstract void PrepareForGameplay(T component, ReplayState additionalData);

		[Token(Token = "0x6000A4F")]
		internal override void InvokePrepareForPlayback(Component component)
		{
		}

		[Token(Token = "0x6000A50")]
		internal override void InvokePrepareForGameplay(Component component)
		{
		}

		[Token(Token = "0x6000A51")]
		protected ComponentPreparer()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "ReplayComponentPreparerAttribute", RVA = "0x3B8AB8", Offset = "0x3B8AB8")]
	internal sealed class RigidBodyPreparer : ComponentPreparer<Rigidbody>
	{
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xFA2A84", Offset = "0xFA2A84", VA = "0xFA2A84", Slot = "6")]
		public override void PrepareForPlayback(Rigidbody component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xFA2AD8", Offset = "0xFA2AD8", VA = "0xFA2AD8", Slot = "7")]
		public override void PrepareForGameplay(Rigidbody component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xFA2B18", Offset = "0xFA2B18", VA = "0xFA2B18")]
		public RigidBodyPreparer()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "ReplayComponentPreparerAttribute", RVA = "0x3B8B20", Offset = "0x3B8B20")]
	internal sealed class RigidBody2DPreparer : ComponentPreparer<Rigidbody2D>
	{
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xFA2940", Offset = "0xFA2940", VA = "0xFA2940", Slot = "6")]
		public override void PrepareForPlayback(Rigidbody2D component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xFA29C0", Offset = "0xFA29C0", VA = "0xFA29C0", Slot = "7")]
		public override void PrepareForGameplay(Rigidbody2D component, ReplayState additionalData)
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xFA2A30", Offset = "0xFA2A30", VA = "0xFA2A30")]
		public RigidBody2DPreparer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AC")]
	public class SerializableType
	{
		[Token(Token = "0x2000376")]
		private class SerializableTypeError
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0x88C5F0", Offset = "0x88C5F0", VA = "0x88C5F0")]
			public SerializableTypeError()
			{
			}
		}

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BE478", Offset = "0x3BE478")]
		private string assemblyQualifiedTypeName;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type systemTypeInstance;

		[Token(Token = "0x17000119")]
		public Type SystemType
		{
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0xFA7BF8", Offset = "0xFA7BF8", VA = "0xFA7BF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xFA7DA4", Offset = "0xFA7DA4", VA = "0xFA7DA4")]
		public SerializableType()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xFA7E00", Offset = "0xFA7E00", VA = "0xFA7E00")]
		public SerializableType(Type systemType)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xFA7C1C", Offset = "0xFA7C1C", VA = "0xFA7C1C")]
		public bool ResolveType()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xFA7E84", Offset = "0xFA7E84", VA = "0xFA7E84")]
		public static implicit operator SerializableType(Type systemType)
		{
			return null;
		}
	}
}
namespace UltimateReplay.Core.Services
{
	[Token(Token = "0x20001AD")]
	internal class ReplayPlaybackServiceInstance : ReplayServiceInstance
	{
		[Serializable]
		[Token(Token = "0x2000377")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B939C", Offset = "0x3B939C")]
		private sealed class <>c
		{
			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001347")]
			[Address(RVA = "0x88B038", Offset = "0x88B038", VA = "0x88B038")]
			public <>c()
			{
			}

			[Token(Token = "0x6001348")]
			[Address(RVA = "0x88B040", Offset = "0x88B040", VA = "0x88B040")]
			internal ReplayPlaybackServiceInstance <.cctor>b__32_0()
			{
				return null;
			}
		}

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Action> playbackEndListeners;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReplaySequencer sequencer;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReplayPlaybackOptions playbackOptions;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReplaySnapshot restoreFrame;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReplayTimer updateTimer;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ReplayTime playbackTime;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float deltaAccumulator;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool restoreReplaySceneOnEnd;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ReplayInstancePool<ReplayPlaybackServiceInstance> pool;

		[Token(Token = "0x1700011A")]
		public ReplaySequencer Sequencer
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x94684C", Offset = "0x94684C", VA = "0x94684C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		public ReplayTime PlaybackTime
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x946854", Offset = "0x946854", VA = "0x946854")]
			get
			{
				return default(ReplayTime);
			}
		}

		[Token(Token = "0x1700011C")]
		public float PlaybackTimesScale
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x946860", Offset = "0x946860", VA = "0x946860")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0x946868", Offset = "0x946868", VA = "0x946868")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public bool RestoreReplaySceneOnEnd
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x946918", Offset = "0x946918", VA = "0x946918")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x946920", Offset = "0x946920", VA = "0x946920")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public override UltimateReplay.UpdateMethod UpdateMethod
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x94692C", Offset = "0x94692C", VA = "0x94692C", Slot = "5")]
			get
			{
				return default(UltimateReplay.UpdateMethod);
			}
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x94694C", Offset = "0x94694C", VA = "0x94694C")]
		private ReplayPlaybackServiceInstance()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x946BC0", Offset = "0x946BC0", VA = "0x946BC0")]
		public void Initialize(ReplayHandle handle, ReplayServiceState state, ReplayScene scene, ReplayStorageTarget target, ReplayPlaybackOptions playbackOptions, bool fixedFrame)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x946C94", Offset = "0x946C94", VA = "0x946C94")]
		public void ReplayRestoreInitialFrame()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x946F50", Offset = "0x946F50", VA = "0x946F50", Slot = "6")]
		public override void ReplayUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x947500", Offset = "0x947500", VA = "0x947500")]
		public void ReplaySimulateMissedFrames(ReplaySnapshot lastSnapshot, ReplayTime lastTime, ReplaySnapshot currentSnapshot, ReplayTime currentTime)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x947778", Offset = "0x947778", VA = "0x947778")]
		public void ReplaySeekPlayback(PlaybackOrigin origin, float playbackTimeStamp)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x947AF0", Offset = "0x947AF0", VA = "0x947AF0")]
		public void ReplaySeekPlaybackNormalized(PlaybackOrigin origin, float normalizedPlaybackValue)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x947C0C", Offset = "0x947C0C", VA = "0x947C0C")]
		public void AddPlaybackEndListener(Action action)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x947CB0", Offset = "0x947CB0", VA = "0x947CB0")]
		public void RemovePlaybackEndListener(Action action)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x947D50", Offset = "0x947D50", VA = "0x947D50", Slot = "7")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x94801C", Offset = "0x94801C", VA = "0x94801C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C5994", Offset = "0x3C5994")]
		private void <.ctor>b__22_0()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	internal class ReplayRecordServiceInstance : ReplayServiceInstance
	{
		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<ReplayRecordServiceInstance> waitingServices;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReplayRecordOptions recordOptions;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReplayTimer recordTimer;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReplayTimer updateTimer;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int recordSnapshotSequence;

		[Token(Token = "0x1700011F")]
		public override UltimateReplay.UpdateMethod UpdateMethod
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0x948514", Offset = "0x948514", VA = "0x948514", Slot = "5")]
			get
			{
				return default(UltimateReplay.UpdateMethod);
			}
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x948534", Offset = "0x948534", VA = "0x948534")]
		public void Initialize(ReplayHandle handle, ReplayServiceState state, ReplayScene scene, ReplayStorageTarget target, ReplayRecordOptions recordOptions)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x9485EC", Offset = "0x9485EC", VA = "0x9485EC")]
		public void ReplayRecordInitialFrame()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x948CBC", Offset = "0x948CBC", VA = "0x948CBC", Slot = "6")]
		public override void ReplayUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x948E0C", Offset = "0x948E0C", VA = "0x948E0C", Slot = "7")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x948EEC", Offset = "0x948EEC", VA = "0x948EEC")]
		public static ReplayRecordServiceInstance GetPooledServiceInstance()
		{
			return null;
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x948FCC", Offset = "0x948FCC", VA = "0x948FCC")]
		public ReplayRecordServiceInstance()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	internal enum ReplaySequenceResult
	{
		[Token(Token = "0x400096E")]
		SequenceIdle,
		[Token(Token = "0x400096F")]
		SequenceAdvance,
		[Token(Token = "0x4000970")]
		SequenceEnd
	}
	[Token(Token = "0x20001B0")]
	internal sealed class ReplaySequencer
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplaySnapshot current;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReplaySnapshot last;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float playbackTimeStamp;

		[Token(Token = "0x14000012")]
		public event Action OnPlaybackLooped
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x946B20", Offset = "0x946B20", VA = "0x946B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C59A4", Offset = "0x3C59A4")]
			add
			{
			}
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x94DED0", Offset = "0x94DED0", VA = "0x94DED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C59B4", Offset = "0x3C59B4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x947894", Offset = "0x947894", VA = "0x947894")]
		public ReplaySnapshot SeekPlayback(ReplayStorageTarget target, float offset, PlaybackOrigin origin, ReplayTime playbackTime, bool normalized)
		{
			return null;
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x94727C", Offset = "0x94727C", VA = "0x94727C")]
		public ReplaySequenceResult UpdatePlayback(ReplayStorageTarget target, [Out] ReplaySnapshot frame, ReplayTime playbackTime, PlaybackEndBehaviour endBehaviour, float deltaTime)
		{
			return default(ReplaySequenceResult);
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x947EDC", Offset = "0x947EDC", VA = "0x947EDC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x94DF70", Offset = "0x94DF70", VA = "0x94DF70")]
		private float MapScale(float value, float min, float max, float newMin, float newMax)
		{
			return default(float);
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x946A9C", Offset = "0x946A9C", VA = "0x946A9C")]
		public ReplaySequencer()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	internal abstract class ReplayServiceInstance : IDisposable
	{
		[Token(Token = "0x2000378")]
		public enum ReplayServiceState
		{
			[Token(Token = "0x40014E1")]
			Active,
			[Token(Token = "0x40014E2")]
			Paused
		}

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ReplayHandle handle;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ReplayServiceState state;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ReplayScene scene;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ReplayStorageTarget target;

		[Token(Token = "0x17000120")]
		public ReplayHandle Handle
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x94E6E0", Offset = "0x94E6E0", VA = "0x94E6E0")]
			get
			{
				return default(ReplayHandle);
			}
		}

		[Token(Token = "0x17000121")]
		public ReplayServiceState State
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x94E6E8", Offset = "0x94E6E8", VA = "0x94E6E8")]
			get
			{
				return default(ReplayServiceState);
			}
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x94E6F0", Offset = "0x94E6F0", VA = "0x94E6F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public ReplayScene Scene
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x94E6F8", Offset = "0x94E6F8", VA = "0x94E6F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		public ReplayStorageTarget Target
		{
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x94E700", Offset = "0x94E700", VA = "0x94E700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		public abstract UltimateReplay.UpdateMethod UpdateMethod
		{
			[Token(Token = "0x6000A84")]
			get;
		}

		[Token(Token = "0x6000A85")]
		public abstract void ReplayUpdate(float deltaTime);

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x946C84", Offset = "0x946C84", VA = "0x946C84")]
		protected void Initialize(ReplayHandle handle, ReplayServiceState state, ReplayScene scene, ReplayStorageTarget target)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x947E64", Offset = "0x947E64", VA = "0x947E64", Slot = "7")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x94E708", Offset = "0x94E708", VA = "0x94E708")]
		public bool IsUpdateable(UltimateReplay.UpdateMethod updateMethod)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x94E74C", Offset = "0x94E74C", VA = "0x94E74C")]
		public bool IsUpdateable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x946AA4", Offset = "0x946AA4", VA = "0x946AA4")]
		protected ReplayServiceInstance()
		{
		}
	}
}
namespace UltimateReplay.Example
{
	[Token(Token = "0x20001B2")]
	public class Ex01_SimpleRecording : MonoBehaviour
	{
		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplayHandle recordHandle;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x8079F8", Offset = "0x8079F8", VA = "0x8079F8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x807AAC", Offset = "0x807AAC", VA = "0x807AAC")]
		public Ex01_SimpleRecording()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class Ex02_PauseRecording : MonoBehaviour
	{
		[Token(Token = "0x2000379")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B93AC", Offset = "0x3B93AC")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private ReplayHandle <handle>5__2;

			[Token(Token = "0x17000204")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600134C")]
				[Address(RVA = "0x5F5858", Offset = "0x5F5858", VA = "0x5F5858", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000205")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600134E")]
				[Address(RVA = "0x5F58A0", Offset = "0x5F58A0", VA = "0x5F58A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001349")]
			[Address(RVA = "0x5F56E8", Offset = "0x5F56E8", VA = "0x5F56E8")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600134A")]
			[Address(RVA = "0x5F5714", Offset = "0x5F5714", VA = "0x5F5714", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600134B")]
			[Address(RVA = "0x5F5718", Offset = "0x5F5718", VA = "0x5F5718", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600134D")]
			[Address(RVA = "0x5F5860", Offset = "0x5F5860", VA = "0x5F5860", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x807B28", Offset = "0x807B28", VA = "0x807B28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C59C4", Offset = "0x3C59C4")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x807B84", Offset = "0x807B84", VA = "0x807B84")]
		public Ex02_PauseRecording()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class Ex03_ResumeRecording : MonoBehaviour
	{
		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B93BC", Offset = "0x3B93BC")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private ReplayHandle <handle>5__2;

			[Token(Token = "0x17000206")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001352")]
				[Address(RVA = "0x5F5A7C", Offset = "0x5F5A7C", VA = "0x5F5A7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000207")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001354")]
				[Address(RVA = "0x5F5AC4", Offset = "0x5F5AC4", VA = "0x5F5AC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600134F")]
			[Address(RVA = "0x5F58A8", Offset = "0x5F58A8", VA = "0x5F58A8")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001350")]
			[Address(RVA = "0x5F58D4", Offset = "0x5F58D4", VA = "0x5F58D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001351")]
			[Address(RVA = "0x5F58D8", Offset = "0x5F58D8", VA = "0x5F58D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001353")]
			[Address(RVA = "0x5F5A84", Offset = "0x5F5A84", VA = "0x5F5A84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x807B8C", Offset = "0x807B8C", VA = "0x807B8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5A2C", Offset = "0x3C5A2C")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x807BE8", Offset = "0x807BE8", VA = "0x807BE8")]
		public Ex03_ResumeRecording()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class Ex04_EndRecording : MonoBehaviour
	{
		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B93CC", Offset = "0x3B93CC")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private ReplayHandle <handle>5__2;

			[Token(Token = "0x17000208")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001358")]
				[Address(RVA = "0x5F5C3C", Offset = "0x5F5C3C", VA = "0x5F5C3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000209")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600135A")]
				[Address(RVA = "0x5F5C84", Offset = "0x5F5C84", VA = "0x5F5C84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001355")]
			[Address(RVA = "0x5F5ACC", Offset = "0x5F5ACC", VA = "0x5F5ACC")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001356")]
			[Address(RVA = "0x5F5AF8", Offset = "0x5F5AF8", VA = "0x5F5AF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001357")]
			[Address(RVA = "0x5F5AFC", Offset = "0x5F5AFC", VA = "0x5F5AFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001359")]
			[Address(RVA = "0x5F5C44", Offset = "0x5F5C44", VA = "0x5F5C44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x807BF0", Offset = "0x807BF0", VA = "0x807BF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5A94", Offset = "0x3C5A94")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x807C4C", Offset = "0x807C4C", VA = "0x807C4C")]
		public Ex04_EndRecording()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class Ex05_SimplePlayback : MonoBehaviour
	{
		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B93DC", Offset = "0x3B93DC")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Ex05_SimplePlayback <>4__this;

			[Token(Token = "0x40014EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ReplayMemoryTarget <storage>5__2;

			[Token(Token = "0x40014F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ReplayHandle <handle>5__3;

			[Token(Token = "0x1700020A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600135E")]
				[Address(RVA = "0x5F5E34", Offset = "0x5F5E34", VA = "0x5F5E34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001360")]
				[Address(RVA = "0x5F5E7C", Offset = "0x5F5E7C", VA = "0x5F5E7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600135B")]
			[Address(RVA = "0x5F5C8C", Offset = "0x5F5C8C", VA = "0x5F5C8C")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600135C")]
			[Address(RVA = "0x5F5CB8", Offset = "0x5F5CB8", VA = "0x5F5CB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600135D")]
			[Address(RVA = "0x5F5CBC", Offset = "0x5F5CBC", VA = "0x5F5CBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600135F")]
			[Address(RVA = "0x5F5E3C", Offset = "0x5F5E3C", VA = "0x5F5E3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplayHandle playbackHandle;

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x807C54", Offset = "0x807C54", VA = "0x807C54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5AFC", Offset = "0x3C5AFC")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x807CC8", Offset = "0x807CC8", VA = "0x807CC8")]
		public Ex05_SimplePlayback()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class Ex_InstantiateDynamicObject : MonoBehaviour
	{
		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B93EC", Offset = "0x3B93EC")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Ex_InstantiateDynamicObject <>4__this;

			[Token(Token = "0x40014F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ReplayHandle <recordHandle>5__2;

			[Token(Token = "0x1700020C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001364")]
				[Address(RVA = "0x5F60E0", Offset = "0x5F60E0", VA = "0x5F60E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001366")]
				[Address(RVA = "0x5F6128", Offset = "0x5F6128", VA = "0x5F6128", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001361")]
			[Address(RVA = "0x5F5E84", Offset = "0x5F5E84", VA = "0x5F5E84")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001362")]
			[Address(RVA = "0x5F5EB0", Offset = "0x5F5EB0", VA = "0x5F5EB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001363")]
			[Address(RVA = "0x5F5EB4", Offset = "0x5F5EB4", VA = "0x5F5EB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001365")]
			[Address(RVA = "0x5F60E8", Offset = "0x5F60E8", VA = "0x5F60E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B93FC", Offset = "0x3B93FC")]
		private sealed class <StartAlternative>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Ex_InstantiateDynamicObject <>4__this;

			[Token(Token = "0x40014F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ReplayScene <recordScene>5__2;

			[Token(Token = "0x40014F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ReplayHandle <recordHandle>5__3;

			[Token(Token = "0x1700020E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600136A")]
				[Address(RVA = "0x5F6360", Offset = "0x5F6360", VA = "0x5F6360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600136C")]
				[Address(RVA = "0x5F63A8", Offset = "0x5F63A8", VA = "0x5F63A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001367")]
			[Address(RVA = "0x5F6130", Offset = "0x5F6130", VA = "0x5F6130")]
			[DebuggerHidden]
			public <StartAlternative>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001368")]
			[Address(RVA = "0x5F615C", Offset = "0x5F615C", VA = "0x5F615C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001369")]
			[Address(RVA = "0x5F6160", Offset = "0x5F6160", VA = "0x5F6160", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600136B")]
			[Address(RVA = "0x5F6368", Offset = "0x5F6368", VA = "0x5F6368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReplayObject instanitatePrefab;

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x807D44", Offset = "0x807D44", VA = "0x807D44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5B64", Offset = "0x3C5B64")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x807DB8", Offset = "0x807DB8", VA = "0x807DB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5BCC", Offset = "0x3C5BCC")]
		public IEnumerator StartAlternative()
		{
			return null;
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x807E2C", Offset = "0x807E2C", VA = "0x807E2C")]
		public Ex_InstantiateDynamicObject()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class Ex_RecordEvent : ReplayBehaviour
	{
		[Token(Token = "0x200037F")]
		private enum MyEventType : ushort
		{
			[Token(Token = "0x40014FB")]
			Event1,
			[Token(Token = "0x40014FC")]
			Event2,
			[Token(Token = "0x40014FD")]
			Event3
		}

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B940C", Offset = "0x3B940C")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Ex_RecordEvent <>4__this;

			[Token(Token = "0x4001501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ReplayState <eventData>5__2;

			[Token(Token = "0x17000210")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001370")]
				[Address(RVA = "0x5F65B0", Offset = "0x5F65B0", VA = "0x5F65B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000211")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001372")]
				[Address(RVA = "0x5F65F8", Offset = "0x5F65F8", VA = "0x5F65F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600136D")]
			[Address(RVA = "0x5F63B0", Offset = "0x5F63B0", VA = "0x5F63B0")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600136E")]
			[Address(RVA = "0x5F63DC", Offset = "0x5F63DC", VA = "0x5F63DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600136F")]
			[Address(RVA = "0x5F63E0", Offset = "0x5F63E0", VA = "0x5F63E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001371")]
			[Address(RVA = "0x5F65B8", Offset = "0x5F65B8", VA = "0x5F65B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x807E34", Offset = "0x807E34", VA = "0x807E34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5C34", Offset = "0x3C5C34")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x807EA8", Offset = "0x807EA8", VA = "0x807EA8", Slot = "15")]
		public override void OnReplayEvent(ushort eventID, ReplayState eventData)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x807FDC", Offset = "0x807FDC", VA = "0x807FDC")]
		public Ex_RecordEvent()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class Ex_RecordMethod : ReplayBehaviour
	{
		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B941C", Offset = "0x3B941C")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Ex_RecordMethod <>4__this;

			[Token(Token = "0x17000212")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001376")]
				[Address(RVA = "0x5F6784", Offset = "0x5F6784", VA = "0x5F6784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000213")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001378")]
				[Address(RVA = "0x5F67CC", Offset = "0x5F67CC", VA = "0x5F67CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001373")]
			[Address(RVA = "0x5F6600", Offset = "0x5F6600", VA = "0x5F6600")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001374")]
			[Address(RVA = "0x5F662C", Offset = "0x5F662C", VA = "0x5F662C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001375")]
			[Address(RVA = "0x5F6630", Offset = "0x5F6630", VA = "0x5F6630", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001377")]
			[Address(RVA = "0x5F678C", Offset = "0x5F678C", VA = "0x5F678C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x808048", Offset = "0x808048", VA = "0x808048")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5C9C", Offset = "0x3C5C9C")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x8080BC", Offset = "0x8080BC", VA = "0x8080BC")]
		[AttributeAttribute(Name = "ReplayMethodAttribute", RVA = "0x3C5D04", Offset = "0x3C5D04")]
		public void MyExampleMethod(string message)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x808154", Offset = "0x808154", VA = "0x808154")]
		public Ex_RecordMethod()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class Ex_RecordToFile : MonoBehaviour
	{
		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B942C", Offset = "0x3B942C")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private ReplayHandle <recordHandle>5__2;

			[Token(Token = "0x17000214")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600137C")]
				[Address(RVA = "0x5F694C", Offset = "0x5F694C", VA = "0x5F694C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000215")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600137E")]
				[Address(RVA = "0x5F6994", Offset = "0x5F6994", VA = "0x5F6994", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001379")]
			[Address(RVA = "0x5F67D4", Offset = "0x5F67D4", VA = "0x5F67D4")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600137A")]
			[Address(RVA = "0x5F6800", Offset = "0x5F6800", VA = "0x5F6800", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600137B")]
			[Address(RVA = "0x5F6804", Offset = "0x5F6804", VA = "0x5F6804", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600137D")]
			[Address(RVA = "0x5F6954", Offset = "0x5F6954", VA = "0x5F6954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x8081C0", Offset = "0x8081C0", VA = "0x8081C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5D14", Offset = "0x3C5D14")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x80821C", Offset = "0x80821C", VA = "0x80821C")]
		public Ex_RecordToFile()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class Ex_RecordToStream : MonoBehaviour
	{
		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B943C", Offset = "0x3B943C")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private ReplayHandle <recordHandle>5__2;

			[Token(Token = "0x17000216")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001382")]
				[Address(RVA = "0x5F6B2C", Offset = "0x5F6B2C", VA = "0x5F6B2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000217")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001384")]
				[Address(RVA = "0x5F6B74", Offset = "0x5F6B74", VA = "0x5F6B74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600137F")]
			[Address(RVA = "0x5F699C", Offset = "0x5F699C", VA = "0x5F699C")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001380")]
			[Address(RVA = "0x5F69C8", Offset = "0x5F69C8", VA = "0x5F69C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001381")]
			[Address(RVA = "0x5F69CC", Offset = "0x5F69CC", VA = "0x5F69CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001383")]
			[Address(RVA = "0x5F6B34", Offset = "0x5F6B34", VA = "0x5F6B34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x808224", Offset = "0x808224", VA = "0x808224")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5D7C", Offset = "0x3C5D7C")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x808280", Offset = "0x808280", VA = "0x808280")]
		public Ex_RecordToStream()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class Ex_RecordVariable : ReplayBehaviour
	{
		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "ReplayVarAttribute", RVA = "0x3BE4C0", Offset = "0x3BE4C0")]
		public int recordVariable;

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x808288", Offset = "0x808288", VA = "0x808288")]
		public void Update()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x80836C", Offset = "0x80836C", VA = "0x80836C")]
		public Ex_RecordVariable()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class Ex_ReplayFromFile : MonoBehaviour
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x8083E0", Offset = "0x8083E0", VA = "0x8083E0")]
		public void Start()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x808484", Offset = "0x808484", VA = "0x808484")]
		public Ex_ReplayFromFile()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class Ex_ReplayToStream : MonoBehaviour
	{
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x808C20", Offset = "0x808C20", VA = "0x808C20")]
		public void Start()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x808CE0", Offset = "0x808CE0", VA = "0x808CE0")]
		public Ex_ReplayToStream()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class Ex_ReplayHighlights : MonoBehaviour
	{
		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B944C", Offset = "0x3B944C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400150B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Ex_ReplayHighlights <>4__this;

			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x400150F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ReplayMemoryTarget <storage>5__3;

			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ReplayHandle <handle>5__4;

			[Token(Token = "0x17000218")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001388")]
				[Address(RVA = "0x5F6D44", Offset = "0x5F6D44", VA = "0x5F6D44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000219")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600138A")]
				[Address(RVA = "0x5F6D8C", Offset = "0x5F6D8C", VA = "0x5F6D8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001385")]
			[Address(RVA = "0x5F6B7C", Offset = "0x5F6B7C", VA = "0x5F6B7C")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001386")]
			[Address(RVA = "0x5F6BA8", Offset = "0x5F6BA8", VA = "0x5F6BA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001387")]
			[Address(RVA = "0x5F6BAC", Offset = "0x5F6BAC", VA = "0x5F6BAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001389")]
			[Address(RVA = "0x5F6D4C", Offset = "0x5F6D4C", VA = "0x5F6D4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ReplayStorageTarget> highlightsStorage;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isReplayingHighlights;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int replayHighlightIndex;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReplayHandle replayHighlightHandle;

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x80848C", Offset = "0x80848C", VA = "0x80848C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5DE4", Offset = "0x3C5DE4")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x808500", Offset = "0x808500", VA = "0x808500")]
		public void ReplayHighlights()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x808644", Offset = "0x808644", VA = "0x808644")]
		public float GetReplayHighlightsTimeNormalized()
		{
			return default(float);
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x8087B0", Offset = "0x8087B0", VA = "0x8087B0")]
		public void SeekReplayHighlightsNormalized(float normalizedOffset)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x8089D4", Offset = "0x8089D4", VA = "0x8089D4")]
		private void OnHighlightPlaybackFinished()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x808B5C", Offset = "0x808B5C", VA = "0x808B5C")]
		public Ex_ReplayHighlights()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class Ex_TransferReplayIdentity : MonoBehaviour
	{
		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B945C", Offset = "0x3B945C")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Ex_TransferReplayIdentity <>4__this;

			[Token(Token = "0x4001514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ReplayHandle <recordHandle>5__2;

			[Token(Token = "0x1700021A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600138E")]
				[Address(RVA = "0x5F6F9C", Offset = "0x5F6F9C", VA = "0x5F6F9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001390")]
				[Address(RVA = "0x5F6FE4", Offset = "0x5F6FE4", VA = "0x5F6FE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600138B")]
			[Address(RVA = "0x5F6D94", Offset = "0x5F6D94", VA = "0x5F6D94")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600138C")]
			[Address(RVA = "0x5F6DC0", Offset = "0x5F6DC0", VA = "0x5F6DC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600138D")]
			[Address(RVA = "0x5F6DC4", Offset = "0x5F6DC4", VA = "0x5F6DC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600138F")]
			[Address(RVA = "0x5F6FA4", Offset = "0x5F6FA4", VA = "0x5F6FA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReplayObject recordObject;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReplayObject replayObject;

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x808CE8", Offset = "0x808CE8", VA = "0x808CE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5E4C", Offset = "0x3C5E4C")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x808D5C", Offset = "0x808D5C", VA = "0x808D5C")]
		public Ex_TransferReplayIdentity()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class CarFollowCam : MonoBehaviour
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float height;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float distance;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lookHeight;

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x8C37BC", Offset = "0x8C37BC", VA = "0x8C37BC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x8C38D0", Offset = "0x8C38D0", VA = "0x8C38D0")]
		public CarFollowCam()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class StartFinishLine : MonoBehaviour
	{
		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReplayScene recordScene;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReplayScene playbackScene;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReplayStorageTarget recordStorage;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReplayStorageTarget playbackStorage;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReplayHandle recordHandle;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReplayHandle playbackHandle;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ReplayObject playerCar;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ReplayObject ghostCar;

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xFB178C", Offset = "0xFB178C", VA = "0xFB178C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xFB1820", Offset = "0xFB1820", VA = "0xFB1820")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xFB1B44", Offset = "0xFB1B44", VA = "0xFB1B44")]
		private void OnGhostVehiclePlaybackComplete()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xFB1BE0", Offset = "0xFB1BE0", VA = "0xFB1BE0")]
		public StartFinishLine()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class AudioPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource targetAudio;

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x76AD00", Offset = "0x76AD00", VA = "0x76AD00")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x76AE7C", Offset = "0x76AE7C", VA = "0x76AE7C")]
		public AudioPlayer()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class CubeSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B946C", Offset = "0x3B946C")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CubeSpawner <>4__this;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <setParent>5__2;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x1700021C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001394")]
				[Address(RVA = "0x5F4490", Offset = "0x5F4490", VA = "0x5F4490", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001396")]
				[Address(RVA = "0x5F44D8", Offset = "0x5F44D8", VA = "0x5F44D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001391")]
			[Address(RVA = "0x5F4088", Offset = "0x5F4088", VA = "0x5F4088")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001392")]
			[Address(RVA = "0x5F40B4", Offset = "0x5F40B4", VA = "0x5F40B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001393")]
			[Address(RVA = "0x5F40B8", Offset = "0x5F40B8", VA = "0x5F40B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001395")]
			[Address(RVA = "0x5F4498", Offset = "0x5F4498", VA = "0x5F4498", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnRange;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float spawnHeight;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int spawnAmount;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float explosiveForce;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform parent;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] spawnCubes;

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x8C9760", Offset = "0x8C9760", VA = "0x8C9760")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5EB4", Offset = "0x3C5EB4")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x8C97D4", Offset = "0x8C97D4", VA = "0x8C97D4")]
		private Vector3 randomPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x8C9828", Offset = "0x8C9828", VA = "0x8C9828")]
		private Quaternion randomRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x8C9890", Offset = "0x8C9890", VA = "0x8C9890")]
		public CubeSpawner()
		{
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x20001C5")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xFB3820", Offset = "0xFB3820", VA = "0xFB3820", Slot = "4")]
		public override char Validate(string text, int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xFB3898", Offset = "0xFB3898", VA = "0xFB3898")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C6")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xFB4120", Offset = "0xFB4120", VA = "0xFB4120", Slot = "4")]
		public override char Validate(string text, int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xFB4528", Offset = "0xFB4528", VA = "0xFB4528")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000387")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x88D9AC", Offset = "0x88D9AC", VA = "0x88D9AC")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000388")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x88DAA8", Offset = "0x88DAA8", VA = "0x88DAA8")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000389")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x88DAFC", Offset = "0x88DAFC", VA = "0x88DAFC")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200038A")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x88DA00", Offset = "0x88DA00", VA = "0x88DA00")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200038B")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x88DA54", Offset = "0x88DA54", VA = "0x88DA54")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x17000125")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0xFB5670", Offset = "0xFB5670", VA = "0xFB5670")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0xFB5678", Offset = "0xFB5678", VA = "0xFB5678")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0xFB5680", Offset = "0xFB5680", VA = "0xFB5680")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0xFB5688", Offset = "0xFB5688", VA = "0xFB5688")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0xFB5690", Offset = "0xFB5690", VA = "0xFB5690")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0xFB5698", Offset = "0xFB5698", VA = "0xFB5698")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0xFB56A0", Offset = "0xFB56A0", VA = "0xFB56A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0xFB56A8", Offset = "0xFB56A8", VA = "0xFB56A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0xFB56B0", Offset = "0xFB56B0", VA = "0xFB56B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0xFB56B8", Offset = "0xFB56B8", VA = "0xFB56B8")]
			set
			{
			}
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xFB56C0", Offset = "0xFB56C0", VA = "0xFB56C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xFB5854", Offset = "0xFB5854", VA = "0xFB5854")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xFB5F88", Offset = "0xFB5F88", VA = "0xFB5F88", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xFB5F8C", Offset = "0xFB5F8C", VA = "0xFB5F8C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xFB5CF4", Offset = "0xFB5CF4", VA = "0xFB5CF4")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xFB5D6C", Offset = "0xFB5D6C", VA = "0xFB5D6C")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xFB5DE4", Offset = "0xFB5DE4", VA = "0xFB5DE4")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xFB5E70", Offset = "0xFB5E70", VA = "0xFB5E70")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xFB5EFC", Offset = "0xFB5EFC", VA = "0xFB5EFC")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xFB5F90", Offset = "0xFB5F90", VA = "0xFB5F90")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x20001C8")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B947C", Offset = "0x3B947C")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700021E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600139F")]
				[Address(RVA = "0x5F3440", Offset = "0x5F3440", VA = "0x5F3440", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013A1")]
				[Address(RVA = "0x5F3488", Offset = "0x5F3488", VA = "0x5F3488", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600139C")]
			[Address(RVA = "0x5F2EA8", Offset = "0x5F2EA8", VA = "0x5F2EA8")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600139D")]
			[Address(RVA = "0x5F2ED4", Offset = "0x5F2ED4", VA = "0x5F2ED4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600139E")]
			[Address(RVA = "0x5F2ED8", Offset = "0x5F2ED8", VA = "0x5F2ED8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x5F3448", Offset = "0x5F3448", VA = "0x5F3448", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40009AA")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x40009AB")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x76D6D0", Offset = "0x76D6D0", VA = "0x76D6D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5F1C", Offset = "0x3C5F1C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x76D744", Offset = "0x76D744", VA = "0x76D744")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B948C", Offset = "0x3B948C")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000220")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013A5")]
				[Address(RVA = "0x5F3924", Offset = "0x5F3924", VA = "0x5F3924", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000221")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013A7")]
				[Address(RVA = "0x5F396C", Offset = "0x5F396C", VA = "0x5F396C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x5F3490", Offset = "0x5F3490", VA = "0x5F3490")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x5F34BC", Offset = "0x5F34BC", VA = "0x5F34BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x5F34C0", Offset = "0x5F34C0", VA = "0x5F34C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x5F392C", Offset = "0x5F392C", VA = "0x5F392C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x40009B4")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x40009B5")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x76D74C", Offset = "0x76D74C", VA = "0x76D74C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5F84", Offset = "0x3C5F84")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x76D7C0", Offset = "0x76D7C0", VA = "0x76D7C0")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x76D7C8", Offset = "0x76D7C8", VA = "0x76D7C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x76DDD0", Offset = "0x76DDD0", VA = "0x76DDD0")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x200038E")]
		public enum BenchmarkType
		{
			[Token(Token = "0x4001523")]
			TMP_SDF_MOBILE,
			[Token(Token = "0x4001524")]
			TMP_SDF__MOBILE_SSD,
			[Token(Token = "0x4001525")]
			TMP_SDF,
			[Token(Token = "0x4001526")]
			TMP_BITMAP_MOBILE,
			[Token(Token = "0x4001527")]
			TEXTMESH_BITMAP
		}

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int NumberOfSamples;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BenchmarkType Benchmark;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font SourceFontFile;

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x76DDE0", Offset = "0x76DDE0", VA = "0x76DDE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x76DDE4", Offset = "0x76DDE4", VA = "0x76DDE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x76E278", Offset = "0x76E278", VA = "0x76E278")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x76E288", Offset = "0x76E288", VA = "0x76E288")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x76E59C", Offset = "0x76E59C", VA = "0x76E59C")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x200038F")]
		public enum CameraModes
		{
			[Token(Token = "0x4001529")]
			Follow,
			[Token(Token = "0x400152A")]
			Isometric,
			[Token(Token = "0x400152B")]
			Free
		}

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x40009DA")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x40009DB")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x8BFDDC", Offset = "0x8BFDDC", VA = "0x8BFDDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x8BFE58", Offset = "0x8BFE58", VA = "0x8BFE58")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x8BFF2C", Offset = "0x8BFF2C", VA = "0x8BFF2C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x8C0244", Offset = "0x8C0244", VA = "0x8C0244")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x8C09C4", Offset = "0x8C09C4", VA = "0x8C09C4")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x2000390")]
		public enum MotionType
		{
			[Token(Token = "0x400152D")]
			Rotation,
			[Token(Token = "0x400152E")]
			BackAndForth,
			[Token(Token = "0x400152F")]
			Translation
		}

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xFDDF9C", Offset = "0xFDDF9C", VA = "0xFDDF9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xFDE0C4", Offset = "0xFDE0C4", VA = "0xFDE0C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xFDE210", Offset = "0xFDE210", VA = "0xFDE210")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B949C", Offset = "0x3B949C")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x17000222")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013AB")]
				[Address(RVA = "0x88C788", Offset = "0x88C788", VA = "0x88C788", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000223")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013AD")]
				[Address(RVA = "0x88C7D0", Offset = "0x88C7D0", VA = "0x88C7D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x88C5F8", Offset = "0x88C5F8", VA = "0x88C5F8")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x88C624", Offset = "0x88C624", VA = "0x88C624", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x88C628", Offset = "0x88C628", VA = "0x88C628", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x88C790", Offset = "0x88C790", VA = "0x88C790", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xFA8108", Offset = "0xFA8108", VA = "0xFA8108")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xFA8178", Offset = "0xFA8178", VA = "0xFA8178")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xFA81A4", Offset = "0xFA81A4", VA = "0xFA81A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C5FEC", Offset = "0x3C5FEC")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xFA8218", Offset = "0xFA8218", VA = "0xFA8218")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40009EB")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xFA8F30", Offset = "0xFA8F30", VA = "0xFA8F30")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xFA8FE8", Offset = "0xFA8FE8", VA = "0xFA8FE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xFA9080", Offset = "0xFA9080", VA = "0xFA9080")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B94AC", Offset = "0x3B94AC")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x17000224")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013B1")]
				[Address(RVA = "0x88D054", Offset = "0x88D054", VA = "0x88D054", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000225")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013B3")]
				[Address(RVA = "0x88D09C", Offset = "0x88D09C", VA = "0x88D09C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x88C7D8", Offset = "0x88C7D8", VA = "0x88C7D8")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x88C804", Offset = "0x88C804", VA = "0x88C804", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x88C808", Offset = "0x88C808", VA = "0x88C808", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x88D05C", Offset = "0x88D05C", VA = "0x88D05C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xFAA240", Offset = "0xFAA240", VA = "0xFAA240")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xFAA2A4", Offset = "0xFAA2A4", VA = "0xFAA2A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xFAA344", Offset = "0xFAA344", VA = "0xFAA344")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xFAA2D0", Offset = "0xFAA2D0", VA = "0xFAA2D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6054", Offset = "0x3C6054")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xFAA3D0", Offset = "0xFAA3D0", VA = "0xFAA3D0")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B94BC", Offset = "0x3B94BC")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x17000226")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013B7")]
				[Address(RVA = "0x88DD40", Offset = "0x88DD40", VA = "0x88DD40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000227")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013B9")]
				[Address(RVA = "0x88DD88", Offset = "0x88DD88", VA = "0x88DD88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x88DB50", Offset = "0x88DB50", VA = "0x88DB50")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x88DB7C", Offset = "0x88DB7C", VA = "0x88DB7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x88DB80", Offset = "0x88DB80", VA = "0x88DB80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013B8")]
			[Address(RVA = "0x88DD48", Offset = "0x88DD48", VA = "0x88DD48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xFB8C64", Offset = "0xFB8C64", VA = "0xFB8C64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xFB8D00", Offset = "0xFB8D00", VA = "0xFB8D00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C60BC", Offset = "0x3C60BC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xFB8D74", Offset = "0xFB8D74", VA = "0xFB8D74")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B94CC", Offset = "0x3B94CC")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4001544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x17000228")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013BD")]
				[Address(RVA = "0x88E880", Offset = "0x88E880", VA = "0x88E880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000229")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013BF")]
				[Address(RVA = "0x88E8C8", Offset = "0x88E8C8", VA = "0x88E8C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x88E700", Offset = "0x88E700", VA = "0x88E700")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x88E72C", Offset = "0x88E72C", VA = "0x88E72C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x88E730", Offset = "0x88E730", VA = "0x88E730", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x88E888", Offset = "0x88E888", VA = "0x88E888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B94DC", Offset = "0x3B94DC")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4001549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x400154A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x400154B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x1700022A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013C3")]
				[Address(RVA = "0x88EAD4", Offset = "0x88EAD4", VA = "0x88EAD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013C5")]
				[Address(RVA = "0x88EB1C", Offset = "0x88EB1C", VA = "0x88EB1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x88E8D0", Offset = "0x88E8D0", VA = "0x88E8D0")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x88E8FC", Offset = "0x88E8FC", VA = "0x88E8FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x88E900", Offset = "0x88E900", VA = "0x88E900", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x88EADC", Offset = "0x88EADC", VA = "0x88EADC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xFBC308", Offset = "0xFBC308", VA = "0xFBC308")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xFBC36C", Offset = "0xFBC36C", VA = "0xFBC36C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xFBC414", Offset = "0xFBC414", VA = "0xFBC414")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xFBC50C", Offset = "0xFBC50C", VA = "0xFBC50C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xFBC604", Offset = "0xFBC604", VA = "0xFBC604")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xFBC39C", Offset = "0xFBC39C", VA = "0xFBC39C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6124", Offset = "0x3C6124")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xFBC610", Offset = "0xFBC610", VA = "0xFBC610")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C618C", Offset = "0x3C618C")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xFBC684", Offset = "0xFBC684", VA = "0xFBC684")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B94EC", Offset = "0x3B94EC")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400154C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400154D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400154E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x400154F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4001552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4001553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4001554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4001555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x1700022C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013C9")]
				[Address(RVA = "0x88F3D4", Offset = "0x88F3D4", VA = "0x88F3D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013CB")]
				[Address(RVA = "0x88F41C", Offset = "0x88F41C", VA = "0x88F41C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x88EF98", Offset = "0x88EF98", VA = "0x88EF98")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x88EFC4", Offset = "0x88EFC4", VA = "0x88EFC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x88EFC8", Offset = "0x88EFC8", VA = "0x88EFC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013CA")]
			[Address(RVA = "0x88F3DC", Offset = "0x88F3DC", VA = "0x88F3DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000397")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B94FC", Offset = "0x3B94FC")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x400155A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x400155B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x400155C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x1700022E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013CF")]
				[Address(RVA = "0x88EF48", Offset = "0x88EF48", VA = "0x88EF48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013D1")]
				[Address(RVA = "0x88EF90", Offset = "0x88EF90", VA = "0x88EF90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x88EB24", Offset = "0x88EB24", VA = "0x88EB24")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x88EB50", Offset = "0x88EB50", VA = "0x88EB50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x88EB54", Offset = "0x88EB54", VA = "0x88EB54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013D0")]
			[Address(RVA = "0x88EF50", Offset = "0x88EF50", VA = "0x88EF50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xFBC68C", Offset = "0xFBC68C", VA = "0xFBC68C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xFBC754", Offset = "0xFBC754", VA = "0xFBC754")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xFBCB2C", Offset = "0xFBCB2C", VA = "0xFBCB2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C61F4", Offset = "0x3C61F4")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xFBCBA0", Offset = "0xFBCBA0", VA = "0xFBCBA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C625C", Offset = "0x3C625C")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xFBCC14", Offset = "0xFBCC14", VA = "0xFBCC14")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xFBCC58", Offset = "0xFBCC58", VA = "0xFBCC58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xFBCC5C", Offset = "0xFBCC5C", VA = "0xFBCC5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xFBCF70", Offset = "0xFBCF70", VA = "0xFBCF70")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x2000398")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001561")]
			TopLeft,
			[Token(Token = "0x4001562")]
			BottomLeft,
			[Token(Token = "0x4001563")]
			TopRight,
			[Token(Token = "0x4001564")]
			BottomRight
		}

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000A05")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xFB88D8", Offset = "0xFB88D8", VA = "0xFB88D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xFB8B30", Offset = "0xFB8B30", VA = "0xFB8B30")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xFB8C54", Offset = "0xFB8C54", VA = "0xFB8C54")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x2000399")]
		public enum objectType
		{
			[Token(Token = "0x4001566")]
			TextMeshPro,
			[Token(Token = "0x4001567")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x4000A0D")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xFB38A0", Offset = "0xFB38A0", VA = "0xFB38A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xFB3AC0", Offset = "0xFB3AC0", VA = "0xFB3AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xFB3B58", Offset = "0xFB3B58", VA = "0xFB3B58")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200039A")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001569")]
			TopLeft,
			[Token(Token = "0x400156A")]
			BottomLeft,
			[Token(Token = "0x400156B")]
			TopRight,
			[Token(Token = "0x400156C")]
			BottomRight
		}

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000A14")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xFB3B60", Offset = "0xFB3B60", VA = "0xFB3B60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xFB3F6C", Offset = "0xFB3F6C", VA = "0xFB3F6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xFB3F98", Offset = "0xFB3F98", VA = "0xFB3F98")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xFB3D68", Offset = "0xFB3D68", VA = "0xFB3D68")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xFB4108", Offset = "0xFB4108", VA = "0xFB4108")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xFB4530", Offset = "0xFB4530", VA = "0xFB4530")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xFB4834", Offset = "0xFB4834", VA = "0xFB4834")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xFB4B10", Offset = "0xFB4B10", VA = "0xFB4B10")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xFB4D04", Offset = "0xFB4D04", VA = "0xFB4D04")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xFB4EF8", Offset = "0xFB4EF8", VA = "0xFB4EF8")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xFB5154", Offset = "0xFB5154", VA = "0xFB5154")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xFB53B0", Offset = "0xFB53B0", VA = "0xFB53B0")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xFB5668", Offset = "0xFB5668", VA = "0xFB5668")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xFB60C4", Offset = "0xFB60C4", VA = "0xFB60C4")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xFB60CC", Offset = "0xFB60CC", VA = "0xFB60CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xFB615C", Offset = "0xFB615C", VA = "0xFB615C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xFB687C", Offset = "0xFB687C", VA = "0xFB687C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xFB6908", Offset = "0xFB6908", VA = "0xFB6908", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xFB6990", Offset = "0xFB6990", VA = "0xFB6990")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x4000A24")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4000A25")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xFB69A8", Offset = "0xFB69A8", VA = "0xFB69A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xFB6B3C", Offset = "0xFB6B3C", VA = "0xFB6B3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xFB6C34", Offset = "0xFB6C34", VA = "0xFB6C34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xFB6D2C", Offset = "0xFB6D2C", VA = "0xFB6D2C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xFB6DCC", Offset = "0xFB6DCC", VA = "0xFB6DCC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xFB82A0", Offset = "0xFB82A0", VA = "0xFB82A0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xFB82AC", Offset = "0xFB82AC", VA = "0xFB82AC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xFB82B4", Offset = "0xFB82B4", VA = "0xFB82B4", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xFB82B8", Offset = "0xFB82B8", VA = "0xFB82B8", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xFB7A10", Offset = "0xFB7A10", VA = "0xFB7A10")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xFB82BC", Offset = "0xFB82BC", VA = "0xFB82BC")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200039B")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x400156E")]
			TopLeft,
			[Token(Token = "0x400156F")]
			BottomLeft,
			[Token(Token = "0x4001570")]
			TopRight,
			[Token(Token = "0x4001571")]
			BottomRight
		}

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000A34")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xFB82D4", Offset = "0xFB82D4", VA = "0xFB82D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xFB8724", Offset = "0xFB8724", VA = "0xFB8724")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xFB8750", Offset = "0xFB8750", VA = "0xFB8750")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xFB84DC", Offset = "0xFB84DC", VA = "0xFB84DC")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xFB88C0", Offset = "0xFB88C0", VA = "0xFB88C0")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B950C", Offset = "0x3B950C")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x17000230")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013D5")]
				[Address(RVA = "0x890240", Offset = "0x890240", VA = "0x890240", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000231")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013D7")]
				[Address(RVA = "0x890288", Offset = "0x890288", VA = "0x890288", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D2")]
			[Address(RVA = "0x88FF58", Offset = "0x88FF58", VA = "0x88FF58")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60013D3")]
			[Address(RVA = "0x88FF84", Offset = "0x88FF84", VA = "0x88FF84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013D4")]
			[Address(RVA = "0x88FF88", Offset = "0x88FF88", VA = "0x88FF88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x890248", Offset = "0x890248", VA = "0x890248", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x5EACE8", Offset = "0x5EACE8", VA = "0x5EACE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x5EAD44", Offset = "0x5EAD44", VA = "0x5EAD44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x5EAD70", Offset = "0x5EAD70", VA = "0x5EAD70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C62C4", Offset = "0x3C62C4")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x5EADE4", Offset = "0x5EADE4", VA = "0x5EADE4")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x200039D")]
		private struct VertexAnim
		{
			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x4001578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B951C", Offset = "0x3B951C")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x17000232")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013DB")]
				[Address(RVA = "0x890AFC", Offset = "0x890AFC", VA = "0x890AFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000233")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013DD")]
				[Address(RVA = "0x890B44", Offset = "0x890B44", VA = "0x890B44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x890290", Offset = "0x890290", VA = "0x890290")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x8902BC", Offset = "0x8902BC", VA = "0x8902BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013DA")]
			[Address(RVA = "0x8902C0", Offset = "0x8902C0", VA = "0x8902C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x890B04", Offset = "0x890B04", VA = "0x890B04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x5EADEC", Offset = "0x5EADEC", VA = "0x5EADEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x5EAE48", Offset = "0x5EAE48", VA = "0x5EAE48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x5EAF40", Offset = "0x5EAF40", VA = "0x5EAF40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x5EB038", Offset = "0x5EB038", VA = "0x5EB038")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x5EB0D8", Offset = "0x5EB0D8", VA = "0x5EB0D8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x5EB064", Offset = "0x5EB064", VA = "0x5EB064")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C632C", Offset = "0x3C632C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x5EB160", Offset = "0x5EB160", VA = "0x5EB160")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B952C", Offset = "0x3B952C")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000234")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013E1")]
				[Address(RVA = "0x891540", Offset = "0x891540", VA = "0x891540", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000235")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013E3")]
				[Address(RVA = "0x891588", Offset = "0x891588", VA = "0x891588", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x890B4C", Offset = "0x890B4C", VA = "0x890B4C")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x890B78", Offset = "0x890B78", VA = "0x890B78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x890B7C", Offset = "0x890B7C", VA = "0x890B7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x891548", Offset = "0x891548", VA = "0x891548", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x5EB178", Offset = "0x5EB178", VA = "0x5EB178")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x5EB1D4", Offset = "0x5EB1D4", VA = "0x5EB1D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x5EB2CC", Offset = "0x5EB2CC", VA = "0x5EB2CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x5EB3C4", Offset = "0x5EB3C4", VA = "0x5EB3C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x5EB464", Offset = "0x5EB464", VA = "0x5EB464")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x5EB3F0", Offset = "0x5EB3F0", VA = "0x5EB3F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6394", Offset = "0x3C6394")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x5EB4E4", Offset = "0x5EB4E4", VA = "0x5EB4E4")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B953C", Offset = "0x3B953C")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000236")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013E7")]
				[Address(RVA = "0x892408", Offset = "0x892408", VA = "0x892408", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000237")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013E9")]
				[Address(RVA = "0x892450", Offset = "0x892450", VA = "0x892450", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x891590", Offset = "0x891590", VA = "0x891590")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x8915BC", Offset = "0x8915BC", VA = "0x8915BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x8915C0", Offset = "0x8915C0", VA = "0x8915C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x892410", Offset = "0x892410", VA = "0x892410", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x5EB4F4", Offset = "0x5EB4F4", VA = "0x5EB4F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x5EB550", Offset = "0x5EB550", VA = "0x5EB550")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x5EB648", Offset = "0x5EB648", VA = "0x5EB648")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x5EB740", Offset = "0x5EB740", VA = "0x5EB740")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x5EB7E0", Offset = "0x5EB7E0", VA = "0x5EB7E0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x5EB76C", Offset = "0x5EB76C", VA = "0x5EB76C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C63FC", Offset = "0x3C63FC")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x5EB860", Offset = "0x5EB860", VA = "0x5EB860")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B954C", Offset = "0x3B954C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x892458", Offset = "0x892458", VA = "0x892458")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x892460", Offset = "0x892460", VA = "0x892460")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20003A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B955C", Offset = "0x3B955C")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x17000238")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013EF")]
				[Address(RVA = "0x89309C", Offset = "0x89309C", VA = "0x89309C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000239")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F1")]
				[Address(RVA = "0x8930E4", Offset = "0x8930E4", VA = "0x8930E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x892520", Offset = "0x892520", VA = "0x892520")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60013ED")]
			[Address(RVA = "0x89254C", Offset = "0x89254C", VA = "0x89254C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x892550", Offset = "0x892550", VA = "0x892550", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x8930A4", Offset = "0x8930A4", VA = "0x8930A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x5EB878", Offset = "0x5EB878", VA = "0x5EB878")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x5EB8D4", Offset = "0x5EB8D4", VA = "0x5EB8D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x5EB9CC", Offset = "0x5EB9CC", VA = "0x5EB9CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x5EBAC4", Offset = "0x5EBAC4", VA = "0x5EBAC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x5EBB64", Offset = "0x5EBB64", VA = "0x5EBB64")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x5EBAF0", Offset = "0x5EBAF0", VA = "0x5EBAF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6464", Offset = "0x3C6464")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x5EBBEC", Offset = "0x5EBBEC", VA = "0x5EBBEC")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B956C", Offset = "0x3B956C")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x1700023A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013F5")]
				[Address(RVA = "0x893D80", Offset = "0x893D80", VA = "0x893D80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F7")]
				[Address(RVA = "0x893DC8", Offset = "0x893DC8", VA = "0x893DC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x89359C", Offset = "0x89359C", VA = "0x89359C")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x8935C8", Offset = "0x8935C8", VA = "0x8935C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x8935CC", Offset = "0x8935CC", VA = "0x8935CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F6")]
			[Address(RVA = "0x893D88", Offset = "0x893D88", VA = "0x893D88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x5ED594", Offset = "0x5ED594", VA = "0x5ED594")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x5ED5F8", Offset = "0x5ED5F8", VA = "0x5ED5F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x5ED698", Offset = "0x5ED698", VA = "0x5ED698")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x5ED624", Offset = "0x5ED624", VA = "0x5ED624")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C64CC", Offset = "0x3C64CC")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x5ED724", Offset = "0x5ED724", VA = "0x5ED724")]
		public WarpTextExample()
		{
		}
	}
}
namespace Shapes
{
	[Token(Token = "0x20001E4")]
	public class AmmoBar : MonoBehaviour
	{
		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int totalBullets;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int bullets;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BE524", Offset = "0x3BE524")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE524", Offset = "0x3BE524")]
		public float bulletThicknessScale;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE578", Offset = "0x3BE578")]
		public float bulletEjectScale;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BE590", Offset = "0x3BE590")]
		public float bulletDisappearTime;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE5C8", Offset = "0x3BE5C8")]
		public float bulletEjectAngSpeed;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE5E4", Offset = "0x3BE5E4")]
		public float ejectRotSpeedVariance;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve bulletEjectX;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve bulletEjectY;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] bulletFireTimes;

		[Token(Token = "0x1700012A")]
		public bool HasBulletsLeft
		{
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0x762E7C", Offset = "0x762E7C", VA = "0x762E7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x762E00", Offset = "0x762E00", VA = "0x762E00")]
		private Vector2 GetBulletEjectPos(Vector2 origin, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x762E8C", Offset = "0x762E8C", VA = "0x762E8C")]
		public void Fire()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x762EE4", Offset = "0x762EE4", VA = "0x762EE4")]
		public void Reload()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x762EF0", Offset = "0x762EF0", VA = "0x762EF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x762F4C", Offset = "0x762F4C", VA = "0x762F4C")]
		public void DrawBar(FpsController fpsController, float barRadius)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x76325C", Offset = "0x76325C", VA = "0x76325C")]
		public AmmoBar()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class ChargeBar : MonoBehaviour
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BE600", Offset = "0x3BE600")]
		[SerializeField]
		private float chargeSpeed;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float chargeDecaySpeed;

		[NonSerialized]
		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isCharging;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float charge;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BE65C", Offset = "0x3BE65C")]
		public Color tickColor;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Gradient chargeFillGradient;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE694", Offset = "0x3BE694")]
		public float tickSizeSmol;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE6B0", Offset = "0x3BE6B0")]
		public float tickSizeLorge;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE6CC", Offset = "0x3BE6CC")]
		public float tickTickness;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE6E8", Offset = "0x3BE6E8")]
		public float fontSize;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE700", Offset = "0x3BE700")]
		public float fontSizeLorge;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE718", Offset = "0x3BE718")]
		public float percentLabelOffset;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE734", Offset = "0x3BE734")]
		public float fontGrowRangePrev;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE750", Offset = "0x3BE750")]
		public float fontGrowRangeNext;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BE76C", Offset = "0x3BE76C")]
		public AnimationCurve chargeFillCurve;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve animChargeShakeMagnitude;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE7A4", Offset = "0x3BE7A4")]
		public float chargeShakeMagnitude;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float chargeShakeSpeed;

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x8C5194", Offset = "0x8C5194", VA = "0x8C5194")]
		public void UpdateCharge()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x8C5200", Offset = "0x8C5200", VA = "0x8C5200")]
		public void DrawBar(FpsController fpsController, float barRadius)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x8C5840", Offset = "0x8C5840", VA = "0x8C5840")]
		public ChargeBar()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class Compass : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20003A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B957C", Offset = "0x3B957C")]
		private struct <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angWorldMax;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angWorldMin;

			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float angUiMin;

			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float angUiMax;

			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 compArcOrigin;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Compass <>4__this;
		}

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 position;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float width;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE7C0", Offset = "0x3BE7C0")]
		public float lineThickness;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE7DC", Offset = "0x3BE7DC")]
		public float bendRadius;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE7F8", Offset = "0x3BE7F8")]
		public float fieldOfView;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BE818", Offset = "0x3BE818")]
		public int ticksPerQuarterTurn;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE850", Offset = "0x3BE850")]
		public float tickSize;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE86C", Offset = "0x3BE86C")]
		public float tickEdgeFadeFraction;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE884", Offset = "0x3BE884")]
		public float fontSizeTickLabel;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE8A4", Offset = "0x3BE8A4")]
		public float tickLabelOffset;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BE8C0", Offset = "0x3BE8C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE8C0", Offset = "0x3BE8C0")]
		public float fontSizeLookLabel;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 lookAngLabelOffset;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE91C", Offset = "0x3BE91C")]
		public float triangleNootSize;

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x8C6E84", Offset = "0x8C6E84", VA = "0x8C6E84")]
		public void DrawCompass(Vector3 worldDir)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x8C75D8", Offset = "0x8C75D8", VA = "0x8C75D8")]
		public Compass()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x8C7374", Offset = "0x8C7374", VA = "0x8C7374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6534", Offset = "0x3C6534")]
		private void <DrawCompass>g__CompassArcNoot|13_0(float worldAng, float size, string label, <>c__DisplayClass13_0 P_3)
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class Crosshair : MonoBehaviour
	{
		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BE938", Offset = "0x3BE938")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE938", Offset = "0x3BE938")]
		public float crosshairCrossInnerRad;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE990", Offset = "0x3BE990")]
		public float crosshairCrossOuterRad;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE9AC", Offset = "0x3BE9AC")]
		public float crosshairCrossThickness;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE9C8", Offset = "0x3BE9C8")]
		public float crosshairHitCrossInnerRad;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BE9E4", Offset = "0x3BE9E4")]
		public float crosshairHitCrossOuterRad;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BEA00", Offset = "0x3BEA00")]
		public float crosshairHitCrossThickness;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BEA1C", Offset = "0x3BEA1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BEA1C", Offset = "0x3BEA1C")]
		public float scaleFire;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Decayer fireDecayer;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Decayer hitDecayer;

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x8C8BAC", Offset = "0x8C8BAC", VA = "0x8C8BAC")]
		public void Fire()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x8C8BD0", Offset = "0x8C8BD0", VA = "0x8C8BD0")]
		public void FireHit()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x8C8BF4", Offset = "0x8C8BF4", VA = "0x8C8BF4")]
		public void UpdateCrosshairDecay()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x8C8CCC", Offset = "0x8C8CCC", VA = "0x8C8CCC")]
		public void DrawCrosshair()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x8C90C4", Offset = "0x8C90C4", VA = "0x8C90C4")]
		public Crosshair()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x8C8F78", Offset = "0x8C8F78", VA = "0x8C8F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6544", Offset = "0x3C6544")]
		internal static void <DrawCrosshair>g__DrawCross|12_0(Vector2[] dirs, float radInner, float radOuter, float thickness, float radialOffset, Color color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E8")]
	public class Decayer
	{
		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float decaySpeed;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float magnitude;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[NonSerialized]
		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float value;

		[NonSerialized]
		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float valueInv;

		[NonSerialized]
		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float t;

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x8CE760", Offset = "0x8CE760", VA = "0x8CE760")]
		public void SetT(float v)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x8C8C28", Offset = "0x8C8C28", VA = "0x8C8C28")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x8C9174", Offset = "0x8C9174", VA = "0x8C9174")]
		public Decayer()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "ExecuteAlways", RVA = "0x3B8B88", Offset = "0x3B8B88")]
	public class FpsController : MonoBehaviour
	{
		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B958C", Offset = "0x3B958C")]
		private sealed class <FixedSteps>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FpsController <>4__this;

			[Token(Token = "0x1700023C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013FB")]
				[Address(RVA = "0x5F7A38", Offset = "0x5F7A38", VA = "0x5F7A38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013FD")]
				[Address(RVA = "0x5F7A80", Offset = "0x5F7A80", VA = "0x5F7A80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x5F796C", Offset = "0x5F796C", VA = "0x5F796C")]
			[DebuggerHidden]
			public <FixedSteps>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x5F7998", Offset = "0x5F7998", VA = "0x5F7998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0x5F799C", Offset = "0x5F799C", VA = "0x5F799C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x5F7A40", Offset = "0x5F7A40", VA = "0x5F7A40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera cam;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Crosshair crosshair;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ChargeBar chargeBar;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AmmoBar ammoBar;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Compass compass;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform crosshairTransform;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BEA70", Offset = "0x3BEA70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BEA70", Offset = "0x3BEA70")]
		public float smoof;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float moveSpeed;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float lookSensitivity;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float yaw;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float pitch;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector2 moveInput;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 moveVel;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BEAC8", Offset = "0x3BEAC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BEAC8", Offset = "0x3BEAC8")]
		public float ammoBarAngularSpanRad;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BEB20", Offset = "0x3BEB20")]
		public float ammoBarOutlineThickness;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BEB3C", Offset = "0x3BEB3C")]
		public float ammoBarThickness;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BEB58", Offset = "0x3BEB58")]
		public float ammoBarRadius;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BEB74", Offset = "0x3BEB74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BEB74", Offset = "0x3BEB74")]
		public float fireSidebarRadiusPunchAmount;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationCurve shakeAnimX;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve shakeAnimY;

		[Token(Token = "0x1700012B")]
		private bool InputFocus
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x80A5EC", Offset = "0x80A5EC", VA = "0x80A5EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x80A60C", Offset = "0x80A60C", VA = "0x80A60C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x80A3BC", Offset = "0x80A3BC", VA = "0x80A3BC")]
		public static void DrawRoundedArcOutline(Vector2 origin, float radius, float thickness, float outlineThickness, float angStart, float angEnd)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x80A568", Offset = "0x80A568", VA = "0x80A568")]
		public Vector2 GetShake(float speed, float amp)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x80A640", Offset = "0x80A640", VA = "0x80A640")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x80A6A0", Offset = "0x80A6A0", VA = "0x80A6A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6554", Offset = "0x3C6554")]
		private IEnumerator FixedSteps()
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x80A714", Offset = "0x80A714", VA = "0x80A714")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x80A89C", Offset = "0x80A89C", VA = "0x80A89C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x80AA24", Offset = "0x80AA24", VA = "0x80AA24")]
		private void DrawShapesSRP(ScriptableRenderContext ctx, Camera cam)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x80A718", Offset = "0x80A718", VA = "0x80A718")]
		private void OnPostRenderSubscribe()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x80A8A0", Offset = "0x80A8A0", VA = "0x80A8A0")]
		private void OnPostRenderUnsubscribe()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x80AA2C", Offset = "0x80AA2C", VA = "0x80AA2C")]
		private void DrawShapes(Camera cam)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x80AC50", Offset = "0x80AC50", VA = "0x80AC50")]
		private void FixedUpdateManual()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x80ADAC", Offset = "0x80ADAC", VA = "0x80ADAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x80B194", Offset = "0x80B194", VA = "0x80B194")]
		public FpsController()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x80B144", Offset = "0x80B144", VA = "0x80B144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C65BC", Offset = "0x3C65BC")]
		private void <Update>g__DoInput|35_0(KeyCode key, Vector2 dir)
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20001EA")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700012C")]
		public bool Highlight
		{
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x8C66D8", Offset = "0x8C66D8", VA = "0x8C66D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x8C66E0", Offset = "0x8C66E0", VA = "0x8C66E0")]
			set
			{
			}
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x8C66EC", Offset = "0x8C66EC", VA = "0x8C66EC")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x8C68AC", Offset = "0x8C68AC", VA = "0x8C68AC", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x8C68D4", Offset = "0x8C68D4", VA = "0x8C68D4", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x8C68FC", Offset = "0x8C68FC", VA = "0x8C68FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x8C67AC", Offset = "0x8C67AC", VA = "0x8C67AC")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x8C6B90", Offset = "0x8C6B90", VA = "0x8C6B90")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700012D")]
		public bool InRange
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0x8041D0", Offset = "0x8041D0", VA = "0x8041D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0x8041D8", Offset = "0x8041D8", VA = "0x8041D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public bool Targeted
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0x80435C", Offset = "0x80435C", VA = "0x80435C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0x804364", Offset = "0x804364", VA = "0x804364")]
			set
			{
			}
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x804370", Offset = "0x804370", VA = "0x804370", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x8041E4", Offset = "0x8041E4", VA = "0x8041E4")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x804544", Offset = "0x804544", VA = "0x804544")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B8B98", Offset = "0x3B8B98")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700012F")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x80454C", Offset = "0x80454C", VA = "0x80454C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x804554", Offset = "0x804554", VA = "0x804554")]
			set
			{
			}
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x804570", Offset = "0x804570", VA = "0x804570", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x8047A0", Offset = "0x8047A0", VA = "0x8047A0", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x805064", Offset = "0x805064", VA = "0x805064", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x8054DC", Offset = "0x8054DC", VA = "0x8054DC", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x8057A0", Offset = "0x8057A0", VA = "0x8057A0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x8049F4", Offset = "0x8049F4", VA = "0x8049F4")]
		protected bool FindTarget([Out] DistanceGrabbable dgOut, [Out] Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x8058A4", Offset = "0x8058A4", VA = "0x8058A4")]
		protected bool FindTargetWithSpherecast([Out] DistanceGrabbable dgOut, [Out] Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x805C88", Offset = "0x805C88", VA = "0x805C88", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x805CA0", Offset = "0x805CA0", VA = "0x805CA0", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x805CA8", Offset = "0x805CA8", VA = "0x805CA8")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20003A6")]
		public enum CrosshairState
		{
			[Token(Token = "0x40015A3")]
			Disabled,
			[Token(Token = "0x40015A4")]
			Enabled,
			[Token(Token = "0x40015A5")]
			Targeted
		}

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x8140B8", Offset = "0x8140B8", VA = "0x8140B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x8044A8", Offset = "0x8044A8", VA = "0x8044A8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x814124", Offset = "0x814124", VA = "0x814124")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x81416C", Offset = "0x81416C", VA = "0x81416C")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x80DA98", Offset = "0x80DA98", VA = "0x80DA98")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x80DB50", Offset = "0x80DB50", VA = "0x80DB50")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x80DC04", Offset = "0x80DC04", VA = "0x80DC04")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xFCE274", Offset = "0xFCE274", VA = "0xFCE274")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xFCE368", Offset = "0xFCE368", VA = "0xFCE368")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xFCE374", Offset = "0xFCE374", VA = "0xFCE374")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xFCE380", Offset = "0xFCE380", VA = "0xFCE380")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x76F1C4", Offset = "0x76F1C4", VA = "0x76F1C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x76F218", Offset = "0x76F218", VA = "0x76F218")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x76F574", Offset = "0x76F574", VA = "0x76F574")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x76F678", Offset = "0x76F678", VA = "0x76F678")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x76F21C", Offset = "0x76F21C", VA = "0x76F21C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x76F77C", Offset = "0x76F77C", VA = "0x76F77C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20003A7")]
		public enum ContactTest
		{
			[Token(Token = "0x40015A7")]
			PerpenTest,
			[Token(Token = "0x40015A8")]
			BackwardsPress
		}

		[Token(Token = "0x4000AC4")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000AC5")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000130")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x772234", Offset = "0x772234", VA = "0x772234", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000131")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x77223C", Offset = "0x77223C", VA = "0x77223C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x772248", Offset = "0x772248", VA = "0x772248", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x772334", Offset = "0x772334", VA = "0x772334")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x772490", Offset = "0x772490", VA = "0x772490", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x772A20", Offset = "0x772A20", VA = "0x772A20")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x772938", Offset = "0x772938", VA = "0x772938")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x772AD0", Offset = "0x772AD0", VA = "0x772AD0")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x772B54", Offset = "0x772B54", VA = "0x772B54")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x772BE0", Offset = "0x772BE0", VA = "0x772BE0")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BECFC", Offset = "0x3BECFC")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BED0C", Offset = "0x3BED0C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000132")]
		public Collider Collider
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x7736EC", Offset = "0x7736EC", VA = "0x7736EC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C65CC", Offset = "0x3C65CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x7736F4", Offset = "0x7736F4", VA = "0x7736F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C65DC", Offset = "0x3C65DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x7736FC", Offset = "0x7736FC", VA = "0x7736FC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C65EC", Offset = "0x3C65EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x773704", Offset = "0x773704", VA = "0x773704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C65FC", Offset = "0x3C65FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x77370C", Offset = "0x77370C", VA = "0x77370C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x773760", Offset = "0x773760", VA = "0x773760")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x7737EC", Offset = "0x7737EC", VA = "0x7737EC")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000135")]
		Collider Collider
		{
			[Token(Token = "0x6000BB8")]
			get;
		}

		[Token(Token = "0x17000136")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000BB9")]
			get;
		}

		[Token(Token = "0x17000137")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000BBA")]
			get;
		}
	}
	[Token(Token = "0x20001F4")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x8C6120", Offset = "0x8C6120", VA = "0x8C6120")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public enum InteractionType
	{
		[Token(Token = "0x4000AD9")]
		Enter,
		[Token(Token = "0x4000ADA")]
		Stay,
		[Token(Token = "0x4000ADB")]
		Exit
	}
	[Token(Token = "0x20001F6")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20003A8")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40015AA")]
			Mesh,
			[Token(Token = "0x40015AB")]
			Skeleton,
			[Token(Token = "0x40015AC")]
			Both
		}

		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B959C", Offset = "0x3B959C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700023E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001401")]
				[Address(RVA = "0x5F8320", Offset = "0x5F8320", VA = "0x5F8320", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001403")]
				[Address(RVA = "0x5F8368", Offset = "0x5F8368", VA = "0x5F8368", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x5F80C0", Offset = "0x5F80C0", VA = "0x5F80C0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x5F80EC", Offset = "0x5F80EC", VA = "0x5F80EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001400")]
			[Address(RVA = "0x5F80F0", Offset = "0x5F80F0", VA = "0x5F80F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001402")]
			[Address(RVA = "0x5F8328", Offset = "0x5F8328", VA = "0x5F8328", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ADC")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BED3C", Offset = "0x3BED3C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000138")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x9ACD14", Offset = "0x9ACD14", VA = "0x9ACD14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0x9ACD4C", Offset = "0x9ACD4C", VA = "0x9ACD4C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x9ACDB0", Offset = "0x9ACDB0", VA = "0x9ACDB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x9ACDE8", Offset = "0x9ACDE8", VA = "0x9ACDE8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x9ACE4C", Offset = "0x9ACE4C", VA = "0x9ACE4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x9ACE84", Offset = "0x9ACE84", VA = "0x9ACE84")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x9ACEE8", Offset = "0x9ACEE8", VA = "0x9ACEE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x9ACF20", Offset = "0x9ACF20", VA = "0x9ACF20")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x9ACF84", Offset = "0x9ACF84", VA = "0x9ACF84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x9ACFBC", Offset = "0x9ACFBC", VA = "0x9ACFBC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x9AD020", Offset = "0x9AD020", VA = "0x9AD020")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0x9AD054", Offset = "0x9AD054", VA = "0x9AD054")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x9AD0B4", Offset = "0x9AD0B4", VA = "0x9AD0B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x9AD0E8", Offset = "0x9AD0E8", VA = "0x9AD0E8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x9AD148", Offset = "0x9AD148", VA = "0x9AD148")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0x9AD17C", Offset = "0x9AD17C", VA = "0x9AD17C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x9AD1DC", Offset = "0x9AD1DC", VA = "0x9AD1DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x9AD210", Offset = "0x9AD210", VA = "0x9AD210")]
			private set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0x9AD270", Offset = "0x9AD270", VA = "0x9AD270")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x9AD2A4", Offset = "0x9AD2A4", VA = "0x9AD2A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0x9AD304", Offset = "0x9AD304", VA = "0x9AD304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C660C", Offset = "0x3C660C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0x9AD350", Offset = "0x9AD350", VA = "0x9AD350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C661C", Offset = "0x3C661C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x9AD3A8", Offset = "0x9AD3A8", VA = "0x9AD3A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x9AD758", Offset = "0x9AD758", VA = "0x9AD758")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x9AD6E4", Offset = "0x9AD6E4", VA = "0x9AD6E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C662C", Offset = "0x3C662C")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x9AD7E0", Offset = "0x9AD7E0", VA = "0x9AD7E0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x9AD8C4", Offset = "0x9AD8C4", VA = "0x9AD8C4")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x9ADAA4", Offset = "0x9ADAA4", VA = "0x9ADAA4")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x9ADCC8", Offset = "0x9ADCC8", VA = "0x9ADCC8")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x9ADE54", Offset = "0x9ADE54", VA = "0x9ADE54")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003AA")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x5F9368", Offset = "0x5F9368", VA = "0x5F9368")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000143")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x9B2DF4", Offset = "0x9B2DF4", VA = "0x9B2DF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x9B2DFC", Offset = "0x9B2DFC", VA = "0x9B2DFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x9B2E04", Offset = "0x9B2E04", VA = "0x9B2E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x9B2E0C", Offset = "0x9B2E0C", VA = "0x9B2E0C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x9B2E14", Offset = "0x9B2E14", VA = "0x9B2E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6694", Offset = "0x3C6694")]
			add
			{
			}
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x9B2EB4", Offset = "0x9B2EB4", VA = "0x9B2EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C66A4", Offset = "0x3C66A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x9B2FC4", Offset = "0x9B2FC4", VA = "0x9B2FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C66B4", Offset = "0x3C66B4")]
			add
			{
			}
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x9B3064", Offset = "0x9B3064", VA = "0x9B3064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C66C4", Offset = "0x3C66C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x9B3174", Offset = "0x9B3174", VA = "0x9B3174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C66D4", Offset = "0x3C66D4")]
			add
			{
			}
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x9B3214", Offset = "0x9B3214", VA = "0x9B3214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C66E4", Offset = "0x3C66E4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x9B2F54", Offset = "0x9B2F54", VA = "0x9B2F54", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x9B3104", Offset = "0x9B3104", VA = "0x9B3104", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x9B32B4", Offset = "0x9B32B4", VA = "0x9B32B4", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000BE7")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x9B3324", Offset = "0x9B3324", VA = "0x9B3324", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x9B3458", Offset = "0x9B3458", VA = "0x9B3458", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x9B358C", Offset = "0x9B358C", VA = "0x9B358C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000AF4")]
		None,
		[Token(Token = "0x4000AF5")]
		Proximity,
		[Token(Token = "0x4000AF6")]
		Contact,
		[Token(Token = "0x4000AF7")]
		Action
	}
	[Token(Token = "0x20001F9")]
	public enum InteractableState
	{
		[Token(Token = "0x4000AF9")]
		Default,
		[Token(Token = "0x4000AFA")]
		ProximityState,
		[Token(Token = "0x4000AFB")]
		ContactState,
		[Token(Token = "0x4000AFC")]
		ActionState
	}
	[Token(Token = "0x20001FA")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x9B36D4", Offset = "0x9B36D4", VA = "0x9B36D4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000147")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x9B35D8", Offset = "0x9B35D8", VA = "0x9B35D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x9B338C", Offset = "0x9B338C", VA = "0x9B338C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x9B34C0", Offset = "0x9B34C0", VA = "0x9B34C0")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x9B363C", Offset = "0x9B363C", VA = "0x9B363C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20003AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B95AC", Offset = "0x3B95AC")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000240")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001409")]
				[Address(RVA = "0x5F9854", Offset = "0x5F9854", VA = "0x5F9854", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000241")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600140B")]
				[Address(RVA = "0x5F989C", Offset = "0x5F989C", VA = "0x5F989C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001405")]
			[Address(RVA = "0x5F93BC", Offset = "0x5F93BC", VA = "0x5F93BC")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001406")]
			[Address(RVA = "0x5F93E8", Offset = "0x5F93E8", VA = "0x5F93E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001407")]
			[Address(RVA = "0x5F9460", Offset = "0x5F9460", VA = "0x5F9460", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001408")]
			[Address(RVA = "0x5F9404", Offset = "0x5F9404", VA = "0x5F9404")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600140A")]
			[Address(RVA = "0x5F985C", Offset = "0x5F985C", VA = "0x5F985C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x97AD40", Offset = "0x97AD40", VA = "0x97AD40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x97ADBC", Offset = "0x97ADBC", VA = "0x97ADBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C66F4", Offset = "0x3C66F4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x97AE4C", Offset = "0x97AE4C", VA = "0x97AE4C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x97AF34", Offset = "0x97AF34", VA = "0x97AF34")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000148")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x97AF3C", Offset = "0x97AF3C", VA = "0x97AF3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x97B0B8", Offset = "0x97B0B8", VA = "0x97B0B8")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x97B160", Offset = "0x97B160", VA = "0x97B160")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x97B208", Offset = "0x97B208", VA = "0x97B208")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x97B4D0", Offset = "0x97B4D0", VA = "0x97B4D0")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x97B518", Offset = "0x97B518", VA = "0x97B518")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x97B7AC", Offset = "0x97B7AC", VA = "0x97B7AC")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x97B8F0", Offset = "0x97B8F0", VA = "0x97B8F0")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20003AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B95BC", Offset = "0x3B95BC")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000242")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600140F")]
				[Address(RVA = "0x5F791C", Offset = "0x5F791C", VA = "0x5F791C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000243")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001411")]
				[Address(RVA = "0x5F7964", Offset = "0x5F7964", VA = "0x5F7964", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600140C")]
			[Address(RVA = "0x5F7508", Offset = "0x5F7508", VA = "0x5F7508")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600140D")]
			[Address(RVA = "0x5F7534", Offset = "0x5F7534", VA = "0x5F7534", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600140E")]
			[Address(RVA = "0x5F7538", Offset = "0x5F7538", VA = "0x5F7538", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001410")]
			[Address(RVA = "0x5F7924", Offset = "0x5F7924", VA = "0x5F7924", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B0C")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000149")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x8095A8", Offset = "0x8095A8", VA = "0x8095A8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700014A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0x8095B0", Offset = "0x8095B0", VA = "0x8095B0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700014B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x8095B8", Offset = "0x8095B8", VA = "0x8095B8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014C")]
		public override bool EnableState
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x8095C0", Offset = "0x8095C0", VA = "0x8095C0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x8095EC", Offset = "0x8095EC", VA = "0x8095EC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x809628", Offset = "0x809628", VA = "0x809628", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x8096C8", Offset = "0x8096C8", VA = "0x8096C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C675C", Offset = "0x3C675C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x80973C", Offset = "0x80973C", VA = "0x80973C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x8099DC", Offset = "0x8099DC", VA = "0x8099DC")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x809B68", Offset = "0x809B68", VA = "0x809B68")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x809C60", Offset = "0x809C60", VA = "0x809C60", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x809F68", Offset = "0x809F68", VA = "0x809F68", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x809F6C", Offset = "0x809F6C", VA = "0x809F6C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x809F70", Offset = "0x809F70", VA = "0x809F70")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BEDCC", Offset = "0x3BEDCC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BEDDC", Offset = "0x3BEDDC")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BEDEC", Offset = "0x3BEDEC")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700014D")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x809F88", Offset = "0x809F88", VA = "0x809F88", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C67C4", Offset = "0x3C67C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x809F90", Offset = "0x809F90", VA = "0x809F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C67D4", Offset = "0x3C67D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public bool EnableState
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x809F98", Offset = "0x809F98", VA = "0x809F98", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x809FB8", Offset = "0x809FB8", VA = "0x809FB8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x809FDC", Offset = "0x809FDC", VA = "0x809FDC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C67E4", Offset = "0x3C67E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x809FE4", Offset = "0x809FE4", VA = "0x809FE4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C67F4", Offset = "0x3C67F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public float SphereRadius
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x809FF0", Offset = "0x809FF0", VA = "0x809FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6804", Offset = "0x3C6804")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x809FF8", Offset = "0x809FF8", VA = "0x809FF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6814", Offset = "0x3C6814")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x80A000", Offset = "0x80A000", VA = "0x80A000")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x80A048", Offset = "0x80A048", VA = "0x80A048", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x80A04C", Offset = "0x80A04C", VA = "0x80A04C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000200")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000B1C")]
		None = 0,
		[Token(Token = "0x4000B1D")]
		Ray = 1,
		[Token(Token = "0x4000B1E")]
		Poke = 4,
		[Token(Token = "0x4000B1F")]
		All = -1
	}
	[Token(Token = "0x2000201")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000B21")]
		Inactive,
		[Token(Token = "0x4000B22")]
		PrimaryInputDown,
		[Token(Token = "0x4000B23")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000B24")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000202")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x9B3594", Offset = "0x9B3594", VA = "0x9B3594")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000203")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BEDFC", Offset = "0x3BEDFC")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BEE0C", Offset = "0x3BEE0C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BEE1C", Offset = "0x3BEE1C")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000151")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x9B3774", Offset = "0x9B3774", VA = "0x9B3774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x9B377C", Offset = "0x9B377C", VA = "0x9B377C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6824", Offset = "0x3C6824")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x9B3784", Offset = "0x9B3784", VA = "0x9B3784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6834", Offset = "0x3C6834")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000C1A")]
			get;
		}

		[Token(Token = "0x17000154")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000C1B")]
			get;
		}

		[Token(Token = "0x17000155")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000C1C")]
			get;
		}

		[Token(Token = "0x17000156")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x9B3790", Offset = "0x9B3790", VA = "0x9B3790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6844", Offset = "0x3C6844")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0x9B379C", Offset = "0x9B379C", VA = "0x9B379C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6854", Offset = "0x3C6854")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x9B37A8", Offset = "0x9B37A8", VA = "0x9B37A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6864", Offset = "0x3C6864")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0x9B37B4", Offset = "0x9B37B4", VA = "0x9B37B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6874", Offset = "0x3C6874")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000C25")]
			get;
			[Token(Token = "0x6000C26")]
			set;
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x9B37C0", Offset = "0x9B37C0", VA = "0x9B37C0")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C22")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000C23")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000C24")]
		public abstract void DeFocus();

		[Token(Token = "0x6000C27")]
		public abstract void Initialize();

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x9B37C8", Offset = "0x9B37C8", VA = "0x9B37C8")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x9B381C", Offset = "0x9B381C", VA = "0x9B381C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x9B3870", Offset = "0x9B3870", VA = "0x9B3870", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x9B3AFC", Offset = "0x9B3AFC", VA = "0x9B3AFC", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x9B4268", Offset = "0x9B4268", VA = "0x9B4268")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000159")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000C2D")]
			get;
		}

		[Token(Token = "0x1700015A")]
		bool EnableState
		{
			[Token(Token = "0x6000C2F")]
			get;
			[Token(Token = "0x6000C30")]
			set;
		}

		[Token(Token = "0x1700015B")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000C31")]
			get;
			[Token(Token = "0x6000C32")]
			set;
		}

		[Token(Token = "0x6000C2E")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000205")]
	public class PinchStateModule
	{
		[Token(Token = "0x20003AD")]
		private enum PinchState
		{
			[Token(Token = "0x40015BD")]
			None,
			[Token(Token = "0x40015BE")]
			PinchDown,
			[Token(Token = "0x40015BF")]
			PinchStay,
			[Token(Token = "0x40015C0")]
			PinchUp
		}

		[Token(Token = "0x4000B31")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700015C")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xFCEA24", Offset = "0xFCEA24", VA = "0xFCEA24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015D")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0xFCEAAC", Offset = "0xFCEAAC", VA = "0xFCEAAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015E")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0xFCEB34", Offset = "0xFCEB34", VA = "0xFCEB34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xFCEBBC", Offset = "0xFCEBBC", VA = "0xFCEBBC")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xFCEBE8", Offset = "0xFCEBE8", VA = "0xFCEBE8")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000B34")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000B35")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000B36")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000B37")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000B38")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BEE3C", Offset = "0x3BEE3C")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700015F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0xFD52AC", Offset = "0xFD52AC", VA = "0xFD52AC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000160")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xFD52B4", Offset = "0xFD52B4", VA = "0xFD52B4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000161")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0xFD531C", Offset = "0xFD531C", VA = "0xFD531C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000162")]
		public override bool EnableState
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0xFD5324", Offset = "0xFD5324", VA = "0xFD5324", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0xFD536C", Offset = "0xFD536C", VA = "0xFD536C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xFD53E4", Offset = "0xFD53E4", VA = "0xFD53E4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xFD5444", Offset = "0xFD5444", VA = "0xFD5444")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xFD54F4", Offset = "0xFD54F4", VA = "0xFD54F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xFD57B0", Offset = "0xFD57B0", VA = "0xFD57B0")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xFD5838", Offset = "0xFD5838", VA = "0xFD5838", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xFD5BD0", Offset = "0xFD5BD0", VA = "0xFD5BD0")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xFD5CE0", Offset = "0xFD5CE0", VA = "0xFD5CE0")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xFD5E04", Offset = "0xFD5E04", VA = "0xFD5E04")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xFD60FC", Offset = "0xFD60FC", VA = "0xFD60FC")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xFD6484", Offset = "0xFD6484", VA = "0xFD6484", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xFD6554", Offset = "0xFD6554", VA = "0xFD6554", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xFD6588", Offset = "0xFD6588", VA = "0xFD6588")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000B44")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000B45")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BEEB0", Offset = "0x3BEEB0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000163")]
		public bool EnableState
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0xFD534C", Offset = "0xFD534C", VA = "0xFD534C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0xFD538C", Offset = "0xFD538C", VA = "0xFD538C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0xFD6668", Offset = "0xFD6668", VA = "0xFD6668", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0xFD5770", Offset = "0xFD5770", VA = "0xFD5770", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0xFD68AC", Offset = "0xFD68AC", VA = "0xFD68AC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6884", Offset = "0x3C6884")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0xFD68B4", Offset = "0xFD68B4", VA = "0xFD68B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6894", Offset = "0x3C6894")]
			set
			{
			}
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xFD6670", Offset = "0xFD6670", VA = "0xFD6670")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xFD64B8", Offset = "0xFD64B8", VA = "0xFD64B8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xFD68BC", Offset = "0xFD68BC", VA = "0xFD68BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xFD6B30", Offset = "0xFD6B30", VA = "0xFD6B30")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xFD6C20", Offset = "0xFD6C20", VA = "0xFD6C20")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000166")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x805CC8", Offset = "0x805CC8", VA = "0x805CC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x805CD0", Offset = "0x805CD0", VA = "0x805CD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x805D58", Offset = "0x805D58", VA = "0x805D58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x805D60", Offset = "0x805D60", VA = "0x805D60")]
			set
			{
			}
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x805DCC", Offset = "0x805DCC", VA = "0x805DCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x806088", Offset = "0x806088", VA = "0x806088")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x806098", Offset = "0x806098", VA = "0x806098")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x8060A8", Offset = "0x8060A8", VA = "0x8060A8")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x8C78A0", Offset = "0x8C78A0", VA = "0x8C78A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x8C78A4", Offset = "0x8C78A4", VA = "0x8C78A4")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x8C78DC", Offset = "0x8C78DC", VA = "0x8C78DC")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x8C7914", Offset = "0x8C7914", VA = "0x8C7914")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x8C794C", Offset = "0x8C794C", VA = "0x8C794C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x8C7984", Offset = "0x8C7984", VA = "0x8C7984")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x8C79BC", Offset = "0x8C79BC", VA = "0x8C79BC")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x8C79F4", Offset = "0x8C79F4", VA = "0x8C79F4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x8C7A68", Offset = "0x8C7A68", VA = "0x8C7A68")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x8C7AD8", Offset = "0x8C7AD8", VA = "0x8C7AD8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x8C807C", Offset = "0x8C807C", VA = "0x8C807C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x8C8080", Offset = "0x8C8080", VA = "0x8C8080")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x8C7A9C", Offset = "0x8C7A9C", VA = "0x8C7A9C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x8C80C0", Offset = "0x8C80C0", VA = "0x8C80C0")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B95CC", Offset = "0x3B95CC")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40015C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000244")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001415")]
				[Address(RVA = "0x88943C", Offset = "0x88943C", VA = "0x88943C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000245")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001417")]
				[Address(RVA = "0x889484", Offset = "0x889484", VA = "0x889484", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001412")]
			[Address(RVA = "0x88925C", Offset = "0x88925C", VA = "0x88925C")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001413")]
			[Address(RVA = "0x889288", Offset = "0x889288", VA = "0x889288", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001414")]
			[Address(RVA = "0x88928C", Offset = "0x88928C", VA = "0x88928C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001416")]
			[Address(RVA = "0x889444", Offset = "0x889444", VA = "0x889444", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B55")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000B56")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xFCDED8", Offset = "0xFCDED8", VA = "0xFCDED8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xFCDF80", Offset = "0xFCDF80", VA = "0xFCDF80")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xFCE1BC", Offset = "0xFCE1BC", VA = "0xFCE1BC")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xFCE148", Offset = "0xFCE148", VA = "0xFCE148")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C68A4", Offset = "0x3C68A4")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xFCE208", Offset = "0xFCE208", VA = "0xFCE208")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20003AF")]
		public enum SelectionState
		{
			[Token(Token = "0x40015C8")]
			Off,
			[Token(Token = "0x40015C9")]
			Selected,
			[Token(Token = "0x40015CA")]
			Highlighted
		}

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000168")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0xFA74DC", Offset = "0xFA74DC", VA = "0xFA74DC")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0xFA74E4", Offset = "0xFA74E4", VA = "0xFA74E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xFA7668", Offset = "0xFA7668", VA = "0xFA7668")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xFA7828", Offset = "0xFA7828", VA = "0xFA7828")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xFA756C", Offset = "0xFA756C", VA = "0xFA756C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xFA7914", Offset = "0xFA7914", VA = "0xFA7914")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20003B0")]
		public enum SegmentType
		{
			[Token(Token = "0x40015CC")]
			Straight,
			[Token(Token = "0x40015CD")]
			LeftTurn,
			[Token(Token = "0x40015CE")]
			RightTurn,
			[Token(Token = "0x40015CF")]
			Switch
		}

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000B6B")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000B6C")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BEF90", Offset = "0x3BEF90")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000169")]
		public float StartDistance
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xFBE2CC", Offset = "0xFBE2CC", VA = "0xFBE2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C690C", Offset = "0x3C690C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0xFBE2D4", Offset = "0xFBE2D4", VA = "0xFBE2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C691C", Offset = "0x3C691C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public float GridSize
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0xFBE2DC", Offset = "0xFBE2DC", VA = "0xFBE2DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0xFBE2E4", Offset = "0xFBE2E4", VA = "0xFBE2E4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public int SubDivCount
		{
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0xFBE2EC", Offset = "0xFBE2EC", VA = "0xFBE2EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0xFBE2F4", Offset = "0xFBE2F4", VA = "0xFBE2F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public SegmentType Type
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0xFBE2FC", Offset = "0xFBE2FC", VA = "0xFBE2FC")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700016D")]
		public Pose EndPose
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0xFBE304", Offset = "0xFBE304", VA = "0xFBE304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public float Radius
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0xFBE618", Offset = "0xFBE618", VA = "0xFBE618")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016F")]
		public float SegmentLength
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0xFBE36C", Offset = "0xFBE36C", VA = "0xFBE36C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xFBE628", Offset = "0xFBE628", VA = "0xFBE628")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xFBE640", Offset = "0xFBE640", VA = "0xFBE640")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xFBE3AC", Offset = "0xFBE3AC", VA = "0xFBE3AC")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xFBE644", Offset = "0xFBE644", VA = "0xFBE644")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xFBE648", Offset = "0xFBE648", VA = "0xFBE648")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xFBE6B8", Offset = "0xFBE6B8", VA = "0xFBE6B8")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xFBEF78", Offset = "0xFBEF78", VA = "0xFBEF78")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xFBF1FC", Offset = "0xFBF1FC", VA = "0xFBF1FC")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20003B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B95DC", Offset = "0x3B95DC")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000246")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600141B")]
				[Address(RVA = "0x88F7A8", Offset = "0x88F7A8", VA = "0x88F7A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000247")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600141D")]
				[Address(RVA = "0x88F7F0", Offset = "0x88F7F0", VA = "0x88F7F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001418")]
			[Address(RVA = "0x88F614", Offset = "0x88F614", VA = "0x88F614")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001419")]
			[Address(RVA = "0x88F640", Offset = "0x88F640", VA = "0x88F640", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600141A")]
			[Address(RVA = "0x88F644", Offset = "0x88F644", VA = "0x88F644", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600141C")]
			[Address(RVA = "0x88F7B0", Offset = "0x88F7B0", VA = "0x88F7B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B72")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000B73")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xFBF2A8", Offset = "0xFBF2A8", VA = "0xFBF2A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xFBF358", Offset = "0xFBF358", VA = "0xFBF358")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xFBF408", Offset = "0xFBF408", VA = "0xFBF408")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xFBF580", Offset = "0xFBF580", VA = "0xFBF580")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xFBF748", Offset = "0xFBF748", VA = "0xFBF748")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xFBF830", Offset = "0xFBF830", VA = "0xFBF830")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xFBFA34", Offset = "0xFBFA34", VA = "0xFBFA34")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xFBF944", Offset = "0xFBF944", VA = "0xFBF944")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xFBF958", Offset = "0xFBF958", VA = "0xFBF958")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xFBFA8C", Offset = "0xFBFA8C", VA = "0xFBFA8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C692C", Offset = "0x3C692C")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xFBFB00", Offset = "0xFBFB00", VA = "0xFBFB00")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000170")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0xFBFBB0", Offset = "0xFBFBB0", VA = "0xFBFBB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xFBFBC0", Offset = "0xFBFBC0", VA = "0xFBFBC0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xFBFBC8", Offset = "0xFBFBC8", VA = "0xFBFBC8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xFBFF08", Offset = "0xFBFF08", VA = "0xFBFF08")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000B86")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000B87")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BF090", Offset = "0x3BF090")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000171")]
		public float Distance
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0xFC0008", Offset = "0xFC0008", VA = "0xFC0008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6994", Offset = "0x3C6994")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C98")]
			[Address(RVA = "0xFC0010", Offset = "0xFC0010", VA = "0xFC0010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C69A4", Offset = "0x3C69A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public float Scale
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0xFC0018", Offset = "0xFC0018", VA = "0xFC0018")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0xFC0020", Offset = "0xFC0020", VA = "0xFC0020")]
			set
			{
			}
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xFBFBC4", Offset = "0xFBFBC4", VA = "0xFBFBC4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xFC0028", Offset = "0xFC0028", VA = "0xFC0028")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xFBFC10", Offset = "0xFBFC10", VA = "0xFBFC10")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xFBFE34", Offset = "0xFBFE34", VA = "0xFBFE34")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000C9F")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xFBFF7C", Offset = "0xFBFF7C", VA = "0xFBFF7C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B95EC", Offset = "0x3B95EC")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40015E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000248")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001421")]
				[Address(RVA = "0x88FA48", Offset = "0x88FA48", VA = "0x88FA48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000249")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001423")]
				[Address(RVA = "0x88FA90", Offset = "0x88FA90", VA = "0x88FA90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600141E")]
			[Address(RVA = "0x88F7F8", Offset = "0x88F7F8", VA = "0x88F7F8")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600141F")]
			[Address(RVA = "0x88F824", Offset = "0x88F824", VA = "0x88F824", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001420")]
			[Address(RVA = "0x88F828", Offset = "0x88F828", VA = "0x88F828", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001422")]
			[Address(RVA = "0x88FA50", Offset = "0x88FA50", VA = "0x88FA50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xFC01B4", Offset = "0xFC01B4", VA = "0xFC01B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xFC0200", Offset = "0xFC0200", VA = "0xFC0200")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xFC0308", Offset = "0xFC0308", VA = "0xFC0308")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xFC0450", Offset = "0xFC0450", VA = "0xFC0450")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xFC0364", Offset = "0xFC0364", VA = "0xFC0364")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xFC0530", Offset = "0xFC0530", VA = "0xFC0530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C69B4", Offset = "0x3C69B4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xFC05B4", Offset = "0xFC05B4", VA = "0xFC05B4")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xFC0660", Offset = "0xFC0660", VA = "0xFC0660")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xFC06C0", Offset = "0xFC06C0", VA = "0xFC06C0")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20003B3")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40015E2")]
			Start,
			[Token(Token = "0x40015E3")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40015E4")]
			Stop
		}

		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B95FC", Offset = "0x3B95FC")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700024A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001427")]
				[Address(RVA = "0x88FCE8", Offset = "0x88FCE8", VA = "0x88FCE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001429")]
				[Address(RVA = "0x88FD30", Offset = "0x88FD30", VA = "0x88FD30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001424")]
			[Address(RVA = "0x88FA98", Offset = "0x88FA98", VA = "0x88FA98")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001425")]
			[Address(RVA = "0x88FAC4", Offset = "0x88FAC4", VA = "0x88FAC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001426")]
			[Address(RVA = "0x88FAC8", Offset = "0x88FAC8", VA = "0x88FAC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001428")]
			[Address(RVA = "0x88FCF0", Offset = "0x88FCF0", VA = "0x88FCF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B9A")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000B9B")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000B9C")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000B9D")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BF0F0", Offset = "0x3BF0F0")]
		protected float _initialSpeed;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xFC0724", Offset = "0xFC0724", VA = "0xFC0724")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xFC0878", Offset = "0xFC0878", VA = "0xFC0878")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xFC0884", Offset = "0xFC0884", VA = "0xFC0884", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xFC09D4", Offset = "0xFC09D4", VA = "0xFC09D4")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xFC07F8", Offset = "0xFC07F8", VA = "0xFC07F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6A1C", Offset = "0x3C6A1C")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xFC0A1C", Offset = "0xFC0A1C", VA = "0xFC0A1C")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xFC0970", Offset = "0xFC0970", VA = "0xFC0970")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xFC0C20", Offset = "0xFC0C20", VA = "0xFC0C20")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xFC0D44", Offset = "0xFC0D44", VA = "0xFC0D44")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xFC0C8C", Offset = "0xFC0C8C", VA = "0xFC0C8C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xFC0DB0", Offset = "0xFC0DB0", VA = "0xFC0DB0")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xFC0DD0", Offset = "0xFC0DD0", VA = "0xFC0DD0")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xFC0E5C", Offset = "0xFC0E5C", VA = "0xFC0E5C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xFC0F20", Offset = "0xFC0F20", VA = "0xFC0F20")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xFC0F30", Offset = "0xFC0F30", VA = "0xFC0F30")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000173")]
		public float TrackLength
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0xFC0FA0", Offset = "0xFC0FA0", VA = "0xFC0FA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0xFC0FA8", Offset = "0xFC0FA8", VA = "0xFC0FA8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xFC0FB0", Offset = "0xFC0FB0", VA = "0xFC0FB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xFC0094", Offset = "0xFC0094", VA = "0xFC0094")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xFC0FB4", Offset = "0xFC0FB4", VA = "0xFC0FB4")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xFC11B4", Offset = "0xFC11B4", VA = "0xFC11B4")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xFC12B0", Offset = "0xFC12B0", VA = "0xFC12B0")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class Pose
	{
		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xFD35E8", Offset = "0xFD35E8", VA = "0xFD35E8")]
		public Pose()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xFD362C", Offset = "0xFD362C", VA = "0xFD362C")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B960C", Offset = "0x3B960C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700024C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600142D")]
				[Address(RVA = "0x893F78", Offset = "0x893F78", VA = "0x893F78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600142F")]
				[Address(RVA = "0x893FC0", Offset = "0x893FC0", VA = "0x893FC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600142A")]
			[Address(RVA = "0x893DD0", Offset = "0x893DD0", VA = "0x893DD0")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600142B")]
			[Address(RVA = "0x893DFC", Offset = "0x893DFC", VA = "0x893DFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600142C")]
			[Address(RVA = "0x893E00", Offset = "0x893E00", VA = "0x893E00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0x893F80", Offset = "0x893F80", VA = "0x893F80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B961C", Offset = "0x3B961C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40015F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40015F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700024E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001433")]
				[Address(RVA = "0x8940C4", Offset = "0x8940C4", VA = "0x8940C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001435")]
				[Address(RVA = "0x89410C", Offset = "0x89410C", VA = "0x89410C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0x893FC8", Offset = "0x893FC8", VA = "0x893FC8")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001431")]
			[Address(RVA = "0x893FF4", Offset = "0x893FF4", VA = "0x893FF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001432")]
			[Address(RVA = "0x893FF8", Offset = "0x893FF8", VA = "0x893FF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001434")]
			[Address(RVA = "0x8940CC", Offset = "0x8940CC", VA = "0x8940CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BC0")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BF2D8", Offset = "0x3BF2D8")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000174")]
		public bool IsMoving
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x5EE3A8", Offset = "0x5EE3A8", VA = "0x5EE3A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6A84", Offset = "0x3C6A84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x5EE3B0", Offset = "0x5EE3B0", VA = "0x5EE3B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6A94", Offset = "0x3C6A94")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x5EE3BC", Offset = "0x5EE3BC", VA = "0x5EE3BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x5EE3F8", Offset = "0x5EE3F8", VA = "0x5EE3F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x5EE4DC", Offset = "0x5EE4DC", VA = "0x5EE4DC")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x5EE544", Offset = "0x5EE544", VA = "0x5EE544")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6AA4", Offset = "0x3C6AA4")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x5EE5C8", Offset = "0x5EE5C8", VA = "0x5EE5C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6B0C", Offset = "0x3C6B0C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x5EE660", Offset = "0x5EE660", VA = "0x5EE660")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x5EE6CC", Offset = "0x5EE6CC", VA = "0x5EE6CC")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x5EE6D4", Offset = "0x5EE6D4", VA = "0x5EE6D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x5EE740", Offset = "0x5EE740", VA = "0x5EE740")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x5EE824", Offset = "0x5EE824", VA = "0x5EE824")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x5EE95C", Offset = "0x5EE95C", VA = "0x5EE95C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x5EE9D8", Offset = "0x5EE9D8", VA = "0x5EE9D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x5EEAB8", Offset = "0x5EEAB8", VA = "0x5EEAB8")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000BD1")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000BD2")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000BD3")]
		EUDT_None,
		[Token(Token = "0x4000BD4")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000218")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B962C", Offset = "0x3B962C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000250")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001439")]
				[Address(RVA = "0x5FDE84", Offset = "0x5FDE84", VA = "0x5FDE84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000251")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600143B")]
				[Address(RVA = "0x5FDECC", Offset = "0x5FDECC", VA = "0x5FDECC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001436")]
			[Address(RVA = "0x5FDC70", Offset = "0x5FDC70", VA = "0x5FDC70")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001437")]
			[Address(RVA = "0x5FDC9C", Offset = "0x5FDC9C", VA = "0x5FDC9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001438")]
			[Address(RVA = "0x5FDCA0", Offset = "0x5FDCA0", VA = "0x5FDCA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600143A")]
			[Address(RVA = "0x5FDE8C", Offset = "0x5FDE8C", VA = "0x5FDE8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000BD6")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000BD7")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000BD8")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BF318", Offset = "0x3BF318")]
		public GameObject mainCamera;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BF350", Offset = "0x3BF350")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xFDC040", Offset = "0xFDC040", VA = "0xFDC040")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xFDC854", Offset = "0xFDC854", VA = "0xFDC854")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xFDC9A8", Offset = "0xFDC9A8", VA = "0xFDC9A8")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xFDCAD4", Offset = "0xFDCAD4", VA = "0xFDCAD4")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xFDCC00", Offset = "0xFDCC00", VA = "0xFDCC00")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xFDC97C", Offset = "0xFDC97C", VA = "0xFDC97C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xFDCCE0", Offset = "0xFDCCE0", VA = "0xFDCCE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6B74", Offset = "0x3C6B74")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xFDCD54", Offset = "0xFDCD54", VA = "0xFDCD54")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xFDC480", Offset = "0xFDC480", VA = "0xFDC480")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xFDCEB0", Offset = "0xFDCEB0", VA = "0xFDCEB0")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xFDCD88", Offset = "0xFDCD88", VA = "0xFDCD88")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xFDD1C0", Offset = "0xFDD1C0", VA = "0xFDD1C0")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xFDD2B0", Offset = "0xFDD2B0", VA = "0xFDD2B0")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xFDD33C", Offset = "0xFDD33C", VA = "0xFDD33C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6BDC", Offset = "0x3C6BDC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xFDD39C", Offset = "0xFDD39C", VA = "0xFDD39C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6BEC", Offset = "0x3C6BEC")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xFDD3FC", Offset = "0xFDD3FC", VA = "0xFDD3FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6BFC", Offset = "0x3C6BFC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B8C10", Offset = "0x3B8C10")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B963C", Offset = "0x3B963C")]
		private sealed class <>c
		{
			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x600143D")]
			[Address(RVA = "0x5F7C84", Offset = "0x5F7C84", VA = "0x5F7C84")]
			public <>c()
			{
			}

			[Token(Token = "0x600143E")]
			[Address(RVA = "0x5F7C8C", Offset = "0x5F7C8C", VA = "0x5F7C8C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BED")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000BEE")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000BEF")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000BF0")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000BF1")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000BF2")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000BF3")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000BF4")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000BF5")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000BF6")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000BF7")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x9A8248", Offset = "0x9A8248", VA = "0x9A8248")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x9A82A4", Offset = "0x9A82A4", VA = "0x9A82A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x9A8728", Offset = "0x9A8728", VA = "0x9A8728")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x9A881C", Offset = "0x9A881C", VA = "0x9A881C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x9A8988", Offset = "0x9A8988", VA = "0x9A8988")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x9A8C98", Offset = "0x9A8C98", VA = "0x9A8C98")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x9A8D90", Offset = "0x9A8D90", VA = "0x9A8D90")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x9A8EF0", Offset = "0x9A8EF0", VA = "0x9A8EF0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x9A8A28", Offset = "0x9A8A28", VA = "0x9A8A28")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x9A8A7C", Offset = "0x9A8A7C", VA = "0x9A8A7C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x9A85CC", Offset = "0x9A85CC", VA = "0x9A85CC")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x9A902C", Offset = "0x9A902C", VA = "0x9A902C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000C0A")]
		Default,
		[Token(Token = "0x4000C0B")]
		Generic,
		[Token(Token = "0x4000C0C")]
		PingPongBall,
		[Token(Token = "0x4000C0D")]
		Controller
	}
	[Token(Token = "0x200021B")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000175")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x9AC00C", Offset = "0x9AC00C", VA = "0x9AC00C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000176")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x9AC014", Offset = "0x9AC014", VA = "0x9AC014")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x9AC01C", Offset = "0x9AC01C", VA = "0x9AC01C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x9AC024", Offset = "0x9AC024", VA = "0x9AC024")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xFBDF34", Offset = "0xFBDF34", VA = "0xFBDF34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xFBE224", Offset = "0xFBE224", VA = "0xFBE224")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xFBE280", Offset = "0xFBE280", VA = "0xFBE280")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xFBE2C4", Offset = "0xFBE2C4", VA = "0xFBE2C4")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200021D")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000C15")]
		TRIANGLES,
		[Token(Token = "0x4000C16")]
		QUADS
	}
	[Token(Token = "0x200021E")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000C18")]
		ABSORPTION,
		[Token(Token = "0x4000C19")]
		TRANSMISSION,
		[Token(Token = "0x4000C1A")]
		SCATTERING
	}
	[Token(Token = "0x200021F")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000220")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000C1F")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000C20")]
		public const string Tab = "    ";

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x76AE8C", Offset = "0x76AE8C", VA = "0x76AE8C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C6C0C", Offset = "0x3C6C0C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C6C0C", Offset = "0x3C6C0C")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x76AF24", Offset = "0x76AF24", VA = "0x76AF24")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C6C6C", Offset = "0x3C6C6C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C6C6C", Offset = "0x3C6C6C")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x76AFCC", Offset = "0x76AFCC", VA = "0x76AFCC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C6CCC", Offset = "0x3C6CCC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C6CCC", Offset = "0x3C6CCC")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x76B064", Offset = "0x76B064", VA = "0x76B064")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C6D2C", Offset = "0x3C6D2C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C6D2C", Offset = "0x3C6D2C")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x76B0FC", Offset = "0x76B0FC", VA = "0x76B0FC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C6D8C", Offset = "0x3C6D8C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x3C6D8C", Offset = "0x3C6D8C")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class CAPI
	{
		[Token(Token = "0x20003B9")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20003BA")]
		public enum Result
		{
			[Token(Token = "0x4001600")]
			Success = 0,
			[Token(Token = "0x4001601")]
			Failure = -1000,
			[Token(Token = "0x4001602")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001603")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001604")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001605")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001606")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001607")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001608")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20003BB")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001443")]
			[Address(RVA = "0x5F3AD4", Offset = "0x5F3AD4", VA = "0x5F3AD4")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000C21")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000C29")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x774A00", Offset = "0x774A00", VA = "0x774A00")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x774A90", Offset = "0x774A90", VA = "0x774A90")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x774CB8", Offset = "0x774CB8", VA = "0x774CB8")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x774DA0", Offset = "0x774DA0", VA = "0x774DA0")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x774E10", Offset = "0x774E10", VA = "0x774E10")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x774E84", Offset = "0x774E84", VA = "0x774E84")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x774F04", Offset = "0x774F04", VA = "0x774F04")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x775050", Offset = "0x775050", VA = "0x775050")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x7750D0", Offset = "0x7750D0", VA = "0x7750D0")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x77521C", Offset = "0x77521C", VA = "0x77521C")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x77529C", Offset = "0x77529C", VA = "0x77529C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x77531C", Offset = "0x77531C", VA = "0x77531C")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x77539C", Offset = "0x77539C", VA = "0x77539C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x77541C", Offset = "0x77541C", VA = "0x77541C")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x7754AC", Offset = "0x7754AC", VA = "0x7754AC")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x77553C", Offset = "0x77553C", VA = "0x77553C")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x7755CC", Offset = "0x7755CC", VA = "0x7755CC")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x77564C", Offset = "0x77564C", VA = "0x77564C")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x7756CC", Offset = "0x7756CC", VA = "0x7756CC")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x77575C", Offset = "0x77575C", VA = "0x77575C")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x7757EC", Offset = "0x7757EC", VA = "0x7757EC")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x77587C", Offset = "0x77587C", VA = "0x77587C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x7758FC", Offset = "0x7758FC", VA = "0x7758FC")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x77599C", Offset = "0x77599C", VA = "0x77599C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x775A18", Offset = "0x775A18", VA = "0x775A18")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x775AB8", Offset = "0x775AB8", VA = "0x775AB8")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x775B78", Offset = "0x775B78", VA = "0x775B78")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x775C40", Offset = "0x775C40", VA = "0x775C40")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x775CD0", Offset = "0x775CD0", VA = "0x775CD0")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x775D60", Offset = "0x775D60", VA = "0x775D60")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x775DF0", Offset = "0x775DF0", VA = "0x775DF0")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x775E80", Offset = "0x775E80", VA = "0x775E80")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x775F10", Offset = "0x775F10", VA = "0x775F10")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x775F90", Offset = "0x775F90", VA = "0x775F90")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x7760AC", Offset = "0x7760AC", VA = "0x7760AC")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x77601C", Offset = "0x77601C", VA = "0x77601C")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x7762C4", Offset = "0x7762C4", VA = "0x7762C4")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x77643C", Offset = "0x77643C", VA = "0x77643C")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D21")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x7764BC", Offset = "0x7764BC", VA = "0x7764BC")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x77676C", Offset = "0x77676C", VA = "0x77676C")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x7767EC", Offset = "0x7767EC", VA = "0x7767EC")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x776964", Offset = "0x776964", VA = "0x776964")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x7769E4", Offset = "0x7769E4", VA = "0x7769E4")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x776B5C", Offset = "0x776B5C", VA = "0x776B5C")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x776BDC", Offset = "0x776BDC", VA = "0x776BDC")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x776D54", Offset = "0x776D54", VA = "0x776D54")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x776DD4", Offset = "0x776DD4", VA = "0x776DD4")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x776F4C", Offset = "0x776F4C", VA = "0x776F4C")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x776FCC", Offset = "0x776FCC", VA = "0x776FCC")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x77704C", Offset = "0x77704C", VA = "0x77704C")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x7770E4", Offset = "0x7770E4", VA = "0x7770E4")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x777164", Offset = "0x777164", VA = "0x777164")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x777344", Offset = "0x777344", VA = "0x777344")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x7774A4", Offset = "0x7774A4", VA = "0x7774A4")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x7772C4", Offset = "0x7772C4", VA = "0x7772C4")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x777524", Offset = "0x777524", VA = "0x777524")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x7775A4", Offset = "0x7775A4", VA = "0x7775A4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x777634", Offset = "0x777634", VA = "0x777634")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x7776B4", Offset = "0x7776B4", VA = "0x7776B4")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x777744", Offset = "0x777744", VA = "0x777744")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x7777C4", Offset = "0x7777C4", VA = "0x7777C4")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x777844", Offset = "0x777844", VA = "0x777844")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x777AD0", Offset = "0x777AD0", VA = "0x777AD0")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x777B60", Offset = "0x777B60", VA = "0x777B60")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ulong textureID, Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x777D90", Offset = "0x777D90", VA = "0x777D90")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x777E28", Offset = "0x777E28", VA = "0x777E28")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x777F80", Offset = "0x777F80", VA = "0x777F80")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x778000", Offset = "0x778000", VA = "0x778000")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x778080", Offset = "0x778080", VA = "0x778080")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x7781DC", Offset = "0x7781DC", VA = "0x7781DC")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x77825C", Offset = "0x77825C", VA = "0x77825C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x7783B8", Offset = "0x7783B8", VA = "0x7783B8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x778438", Offset = "0x778438", VA = "0x778438")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x7784C8", Offset = "0x7784C8", VA = "0x7784C8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x778558", Offset = "0x778558", VA = "0x778558")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x7785E8", Offset = "0x7785E8", VA = "0x7785E8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x778668", Offset = "0x778668", VA = "0x778668")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x7786F0", Offset = "0x7786F0", VA = "0x7786F0")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x778778", Offset = "0x778778", VA = "0x778778")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x7787F8", Offset = "0x7787F8", VA = "0x7787F8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x778878", Offset = "0x778878", VA = "0x778878")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x77892C", Offset = "0x77892C", VA = "0x77892C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x7789BC", Offset = "0x7789BC", VA = "0x7789BC")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x778A4C", Offset = "0x778A4C", VA = "0x778A4C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x778ACC", Offset = "0x778ACC", VA = "0x778ACC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x778B4C", Offset = "0x778B4C", VA = "0x778B4C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x778BCC", Offset = "0x778BCC", VA = "0x778BCC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x778C64", Offset = "0x778C64", VA = "0x778C64")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x778CF4", Offset = "0x778CF4", VA = "0x778CF4")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x778D84", Offset = "0x778D84", VA = "0x778D84")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x778E14", Offset = "0x778E14", VA = "0x778E14")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x778EAC", Offset = "0x778EAC", VA = "0x778EAC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x778F44", Offset = "0x778F44", VA = "0x778F44")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x778FC4", Offset = "0x778FC4", VA = "0x778FC4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x779044", Offset = "0x779044", VA = "0x779044")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x7791A0", Offset = "0x7791A0", VA = "0x7791A0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x779220", Offset = "0x779220", VA = "0x779220")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x77937C", Offset = "0x77937C", VA = "0x77937C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x7793FC", Offset = "0x7793FC", VA = "0x7793FC")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x779538", Offset = "0x779538", VA = "0x779538")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x7795B8", Offset = "0x7795B8", VA = "0x7795B8")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x779794", Offset = "0x779794", VA = "0x779794")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x779A74", Offset = "0x779A74", VA = "0x779A74")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x779714", Offset = "0x779714", VA = "0x779714")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x779B04", Offset = "0x779B04", VA = "0x779B04")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x779B84", Offset = "0x779B84", VA = "0x779B84")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x779C14", Offset = "0x779C14", VA = "0x779C14")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x779CA4", Offset = "0x779CA4", VA = "0x779CA4")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x779D34", Offset = "0x779D34", VA = "0x779D34")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x779DD4", Offset = "0x779DD4", VA = "0x779DD4")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x779E74", Offset = "0x779E74", VA = "0x779E74")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x779F14", Offset = "0x779F14", VA = "0x779F14")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x779F94", Offset = "0x779F94", VA = "0x779F94")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x77A014", Offset = "0x77A014", VA = "0x77A014")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x77A094", Offset = "0x77A094", VA = "0x77A094")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x77A114", Offset = "0x77A114", VA = "0x77A114")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x77A194", Offset = "0x77A194", VA = "0x77A194")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x77A2BC", Offset = "0x77A2BC", VA = "0x77A2BC")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x77A354", Offset = "0x77A354", VA = "0x77A354")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x77A3D4", Offset = "0x77A3D4", VA = "0x77A3D4")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x77A43C", Offset = "0x77A43C", VA = "0x77A43C")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x77A594", Offset = "0x77A594", VA = "0x77A594")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x77A624", Offset = "0x77A624", VA = "0x77A624")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x77A77C", Offset = "0x77A77C", VA = "0x77A77C")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x77A80C", Offset = "0x77A80C", VA = "0x77A80C")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x77A8AC", Offset = "0x77A8AC", VA = "0x77A8AC")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x77AC7C", Offset = "0x77AC7C", VA = "0x77AC7C")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x77ACFC", Offset = "0x77ACFC", VA = "0x77ACFC")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x77AD94", Offset = "0x77AD94", VA = "0x77AD94")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x77B5F4", Offset = "0x77B5F4", VA = "0x77B5F4")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x77B674", Offset = "0x77B674", VA = "0x77B674")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x774994", Offset = "0x774994", VA = "0x774994")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x3C6DEC", Offset = "0x3C6DEC")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x77B70C", Offset = "0x77B70C", VA = "0x77B70C")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x77B790", Offset = "0x77B790", VA = "0x77B790")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x77B810", Offset = "0x77B810", VA = "0x77B810")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x77B890", Offset = "0x77B890", VA = "0x77B890")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x77B910", Offset = "0x77B910", VA = "0x77B910")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x77C2AC", Offset = "0x77C2AC", VA = "0x77C2AC")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x77C32C", Offset = "0x77C32C", VA = "0x77C32C")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x77C74C", Offset = "0x77C74C", VA = "0x77C74C")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x77C6B4", Offset = "0x77C6B4", VA = "0x77C6B4")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x77C7C0", Offset = "0x77C7C0", VA = "0x77C7C0")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000222")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x3BF408", Offset = "0x3BF408")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xFBC254", Offset = "0xFBC254", VA = "0xFBC254")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xFBC258", Offset = "0xFBC258", VA = "0xFBC258")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xFBC300", Offset = "0xFBC300", VA = "0xFBC300")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF454", Offset = "0x3BF454")]
		public bool autoRetrigger;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x3BF48C", Offset = "0x3BF48C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF4B0", Offset = "0x3BF4B0")]
		public Transform[] playPositions;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x762780", Offset = "0x762780", VA = "0x762780")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x762934", Offset = "0x762934", VA = "0x762934")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x762B10", Offset = "0x762B10", VA = "0x762B10")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x762994", Offset = "0x762994", VA = "0x762994")]
		public void Play()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x762BD8", Offset = "0x762BD8", VA = "0x762BD8")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x762D50", Offset = "0x762D50", VA = "0x762D50")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000C38")]
		Default,
		[Token(Token = "0x4000C39")]
		Preload,
		[Token(Token = "0x4000C3A")]
		ManualPreload
	}
	[Token(Token = "0x2000225")]
	public enum Fade
	{
		[Token(Token = "0x4000C3C")]
		In,
		[Token(Token = "0x4000C3D")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000226")]
	public class SoundGroup
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BF4E8", Offset = "0x3BF4E8")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF504", Offset = "0x3BF504")]
		public int playingSoundCount;

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xFB1100", Offset = "0xFB1100", VA = "0xFB1100")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xFB11A4", Offset = "0xFB11A4", VA = "0xFB11A4")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xFAF414", Offset = "0xFAF414", VA = "0xFAF414")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xFAF724", Offset = "0xFAF724", VA = "0xFAF724")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xFB05B4", Offset = "0xFB05B4", VA = "0xFB05B4")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000227")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20003BC")]
		public enum Fade
		{
			[Token(Token = "0x400160B")]
			In,
			[Token(Token = "0x400160C")]
			Out
		}

		[Token(Token = "0x20003BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B964C", Offset = "0x3B964C")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x400160D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001445")]
			[Address(RVA = "0x5F2E04", Offset = "0x5F2E04", VA = "0x5F2E04")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6001446")]
			[Address(RVA = "0x5F2E0C", Offset = "0x5F2E0C", VA = "0x5F2E0C")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B965C", Offset = "0x3B965C")]
		private sealed class <>c
		{
			[Token(Token = "0x400160E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400160F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6001448")]
			[Address(RVA = "0x5F2D68", Offset = "0x5F2D68", VA = "0x5F2D68")]
			public <>c()
			{
			}

			[Token(Token = "0x6001449")]
			[Address(RVA = "0x5F2D70", Offset = "0x5F2D70", VA = "0x5F2D70")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF514", Offset = "0x3BF514")]
		public bool makePersistent;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF54C", Offset = "0x3BF54C")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF584", Offset = "0x3BF584")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF5BC", Offset = "0x3BF5BC")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF5F4", Offset = "0x3BF5F4")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF62C", Offset = "0x3BF62C")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF664", Offset = "0x3BF664")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF69C", Offset = "0x3BF69C")]
		public bool verboseLogging;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF6D4", Offset = "0x3BF6D4")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF70C", Offset = "0x3BF70C")]
		public float volumeSoundFX;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF744", Offset = "0x3BF744")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000178")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x764F94", Offset = "0x764F94", VA = "0x764F94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000179")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x76507C", Offset = "0x76507C", VA = "0x76507C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x7650E0", Offset = "0x7650E0", VA = "0x7650E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017B")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x765150", Offset = "0x765150", VA = "0x765150")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017C")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x7651C0", Offset = "0x7651C0", VA = "0x7651C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x765230", Offset = "0x765230", VA = "0x765230")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x7652A0", Offset = "0x7652A0", VA = "0x7652A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x76711C", Offset = "0x76711C", VA = "0x76711C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x765310", Offset = "0x765310", VA = "0x765310")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x76554C", Offset = "0x76554C", VA = "0x76554C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x765314", Offset = "0x765314", VA = "0x765314")]
		private void Init()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x76617C", Offset = "0x76617C", VA = "0x76617C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x7656AC", Offset = "0x7656AC", VA = "0x7656AC")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x766818", Offset = "0x766818", VA = "0x766818")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x7669A4", Offset = "0x7669A4", VA = "0x7669A4")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x766B78", Offset = "0x766B78", VA = "0x766B78")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x766C80", Offset = "0x766C80", VA = "0x766C80")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x766D0C", Offset = "0x766D0C", VA = "0x766D0C")]
		public static string[] GetSoundFXNames(string currentValue, [Out] int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x765B5C", Offset = "0x765B5C", VA = "0x765B5C")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x766180", Offset = "0x766180", VA = "0x766180")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x767254", Offset = "0x767254", VA = "0x767254")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x767394", Offset = "0x767394", VA = "0x767394")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x7674D8", Offset = "0x7674D8", VA = "0x7674D8")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x767180", Offset = "0x767180", VA = "0x767180")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x767620", Offset = "0x767620", VA = "0x767620")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x7676E0", Offset = "0x7676E0", VA = "0x7676E0")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x7677FC", Offset = "0x7677FC", VA = "0x7677FC")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x762B20", Offset = "0x762B20", VA = "0x762B20")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x762C98", Offset = "0x762C98", VA = "0x762C98")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x7678BC", Offset = "0x7678BC", VA = "0x7678BC")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x767984", Offset = "0x767984", VA = "0x767984")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x767A18", Offset = "0x767A18", VA = "0x767A18")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x767ADC", Offset = "0x767ADC", VA = "0x767ADC")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x767B84", Offset = "0x767B84", VA = "0x767B84")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x767C44", Offset = "0x767C44", VA = "0x767C44")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x7686D0", Offset = "0x7686D0", VA = "0x7686D0")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x768DB8", Offset = "0x768DB8", VA = "0x768DB8")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x768F7C", Offset = "0x768F7C", VA = "0x768F7C")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x769A9C", Offset = "0x769A9C", VA = "0x769A9C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x767E30", Offset = "0x767E30", VA = "0x767E30")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x769BB8", Offset = "0x769BB8", VA = "0x769BB8")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x769C98", Offset = "0x769C98", VA = "0x769C98")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x769D94", Offset = "0x769D94", VA = "0x769D94")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x769FC4", Offset = "0x769FC4", VA = "0x769FC4")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x76A118", Offset = "0x76A118", VA = "0x76A118")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x76A23C", Offset = "0x76A23C", VA = "0x76A23C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x76A368", Offset = "0x76A368", VA = "0x76A368")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x76A448", Offset = "0x76A448", VA = "0x76A448")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x76A584", Offset = "0x76A584", VA = "0x76A584")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x76A984", Offset = "0x76A984", VA = "0x76A984")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000C65")]
		None = -1,
		[Token(Token = "0x4000C66")]
		Reserved,
		[Token(Token = "0x4000C67")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000229")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x989AC4", Offset = "0x989AC4", VA = "0x989AC4")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x989A68", Offset = "0x989A68", VA = "0x989A68")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20003BF")]
		public enum FadeState
		{
			[Token(Token = "0x4001611")]
			Null,
			[Token(Token = "0x4001612")]
			FadingIn,
			[Token(Token = "0x4001613")]
			FadingOut,
			[Token(Token = "0x4001614")]
			Ducking
		}

		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B966C", Offset = "0x3B966C")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400161A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000252")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600144D")]
				[Address(RVA = "0x88D1B8", Offset = "0x88D1B8", VA = "0x88D1B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000253")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600144F")]
				[Address(RVA = "0x88D200", Offset = "0x88D200", VA = "0x88D200", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600144A")]
			[Address(RVA = "0x88D0A4", Offset = "0x88D0A4", VA = "0x88D0A4")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600144B")]
			[Address(RVA = "0x88D0D0", Offset = "0x88D0D0", VA = "0x88D0D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600144C")]
			[Address(RVA = "0x88D0D4", Offset = "0x88D0D4", VA = "0x88D0D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600144E")]
			[Address(RVA = "0x88D1C0", Offset = "0x88D1C0", VA = "0x88D1C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B967C", Offset = "0x3B967C")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400161B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400161C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400161D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400161E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x400161F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000254")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001453")]
				[Address(RVA = "0x88D634", Offset = "0x88D634", VA = "0x88D634", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000255")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001455")]
				[Address(RVA = "0x88D67C", Offset = "0x88D67C", VA = "0x88D67C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001450")]
			[Address(RVA = "0x88D4D4", Offset = "0x88D4D4", VA = "0x88D4D4")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001451")]
			[Address(RVA = "0x88D500", Offset = "0x88D500", VA = "0x88D500", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001452")]
			[Address(RVA = "0x88D504", Offset = "0x88D504", VA = "0x88D504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001454")]
			[Address(RVA = "0x88D63C", Offset = "0x88D63C", VA = "0x88D63C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B968C", Offset = "0x3B968C")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x400162C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x400162D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x400162E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x400162F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000256")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001459")]
				[Address(RVA = "0x88D484", Offset = "0x88D484", VA = "0x88D484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000257")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600145B")]
				[Address(RVA = "0x88D4CC", Offset = "0x88D4CC", VA = "0x88D4CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001456")]
			[Address(RVA = "0x88D208", Offset = "0x88D208", VA = "0x88D208")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001457")]
			[Address(RVA = "0x88D234", Offset = "0x88D234", VA = "0x88D234", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001458")]
			[Address(RVA = "0x88D238", Offset = "0x88D238", VA = "0x88D238", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600145A")]
			[Address(RVA = "0x88D48C", Offset = "0x88D48C", VA = "0x88D48C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF77C", Offset = "0x3BF77C")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF78C", Offset = "0x3BF78C")]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF79C", Offset = "0x3BF79C")]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF7AC", Offset = "0x3BF7AC")]
		public float endPlayTime;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF7BC", Offset = "0x3BF7BC")]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF7CC", Offset = "0x3BF7CC")]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF7DC", Offset = "0x3BF7DC")]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF7EC", Offset = "0x3BF7EC")]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF7FC", Offset = "0x3BF7FC")]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF80C", Offset = "0x3BF80C")]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BF81C", Offset = "0x3BF81C")]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000180")]
		public float volume
		{
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0xFAEF7C", Offset = "0xFAEF7C", VA = "0xFAEF7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0xFAEF9C", Offset = "0xFAEF9C", VA = "0xFAEF9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public float pitch
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0xFAEFBC", Offset = "0xFAEFBC", VA = "0xFAEFBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0xFAEFDC", Offset = "0xFAEFDC", VA = "0xFAEFDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public AudioClip clip
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0xFAEFFC", Offset = "0xFAEFFC", VA = "0xFAEFFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xFAF01C", Offset = "0xFAF01C", VA = "0xFAF01C")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public float time
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0xFAF03C", Offset = "0xFAF03C", VA = "0xFAF03C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xFAF05C", Offset = "0xFAF05C", VA = "0xFAF05C")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public float length
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xFAF07C", Offset = "0xFAF07C", VA = "0xFAF07C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000185")]
		public bool loop
		{
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0xFAF130", Offset = "0xFAF130", VA = "0xFAF130")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0xFAF150", Offset = "0xFAF150", VA = "0xFAF150")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public bool mute
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0xFAF174", Offset = "0xFAF174", VA = "0xFAF174")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0xFAF194", Offset = "0xFAF194", VA = "0xFAF194")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0xFAF1B8", Offset = "0xFAF1B8", VA = "0xFAF1B8")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0xFAF1D8", Offset = "0xFAF1D8", VA = "0xFAF1D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public bool isPlaying
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xFAF1F8", Offset = "0xFAF1F8", VA = "0xFAF1F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xFAF218", Offset = "0xFAF218", VA = "0xFAF218")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xFAF3D0", Offset = "0xFAF3D0", VA = "0xFAF3D0")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xFAF450", Offset = "0xFAF450", VA = "0xFAF450")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xFAF458", Offset = "0xFAF458", VA = "0xFAF458")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xFAF460", Offset = "0xFAF460", VA = "0xFAF460")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xFAF468", Offset = "0xFAF468", VA = "0xFAF468")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xFAF470", Offset = "0xFAF470", VA = "0xFAF470")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xFAF514", Offset = "0xFAF514", VA = "0xFAF514")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xFAF580", Offset = "0xFAF580", VA = "0xFAF580")]
		public void Play()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xFAF5E0", Offset = "0xFAF5E0", VA = "0xFAF5E0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xFAF618", Offset = "0xFAF618", VA = "0xFAF618")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xFAF760", Offset = "0xFAF760", VA = "0xFAF760")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xFAF7B8", Offset = "0xFAF7B8", VA = "0xFAF7B8")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xFAF8C8", Offset = "0xFAF8C8", VA = "0xFAF8C8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xFAF988", Offset = "0xFAF988", VA = "0xFAF988")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xFAF9C8", Offset = "0xFAF9C8", VA = "0xFAF9C8")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xFAF9F4", Offset = "0xFAF9F4", VA = "0xFAF9F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6E54", Offset = "0x3C6E54")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xFAFA80", Offset = "0xFAFA80", VA = "0xFAFA80")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xFAFB7C", Offset = "0xFAFB7C", VA = "0xFAFB7C")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xFAFC9C", Offset = "0xFAFC9C", VA = "0xFAFC9C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xFAFD14", Offset = "0xFAFD14", VA = "0xFAFD14")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xFAFDAC", Offset = "0xFAFDAC", VA = "0xFAFDAC")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xFAFAF4", Offset = "0xFAFAF4", VA = "0xFAFAF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6EBC", Offset = "0x3C6EBC")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xFAFBF8", Offset = "0xFAFBF8", VA = "0xFAFBF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C6F24", Offset = "0x3C6F24")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xFAFE48", Offset = "0xFAFE48", VA = "0xFAFE48")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000C7E")]
		Random,
		[Token(Token = "0x4000C7F")]
		Sequential
	}
	[Token(Token = "0x200022D")]
	public enum FreqHint
	{
		[Token(Token = "0x4000C81")]
		None,
		[Token(Token = "0x4000C82")]
		Wide,
		[Token(Token = "0x4000C83")]
		Narrow
	}
	[Token(Token = "0x200022E")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000C85")]
		VeryLow = -2,
		[Token(Token = "0x4000C86")]
		Low,
		[Token(Token = "0x4000C87")]
		Default,
		[Token(Token = "0x4000C88")]
		High,
		[Token(Token = "0x4000C89")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200022F")]
	public class OSPProps
	{
		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF82C", Offset = "0x3BF82C")]
		public bool enableSpatialization;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF864", Offset = "0x3BF864")]
		public bool useFastOverride;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF89C", Offset = "0x3BF89C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BF89C", Offset = "0x3BF89C")]
		public float gain;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF8F0", Offset = "0x3BF8F0")]
		public bool enableInvSquare;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF928", Offset = "0x3BF928")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BF928", Offset = "0x3BF928")]
		public float volumetric;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF980", Offset = "0x3BF980")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x3BF980", Offset = "0x3BF980")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xDAF678", Offset = "0xDAF678", VA = "0xDAF678")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000230")]
	public class SoundFX
	{
		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BF9E0", Offset = "0x3BF9E0")]
		public string name;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFA18", Offset = "0x3BFA18")]
		public SoundFXNext playback;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFA50", Offset = "0x3BFA50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BFA50", Offset = "0x3BFA50")]
		public float volume;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFAA4", Offset = "0x3BFAA4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x3BFAA4", Offset = "0x3BFAA4")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFB00", Offset = "0x3BFB00")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x3BFB00", Offset = "0x3BFB00")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFB60", Offset = "0x3BFB60")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFB98", Offset = "0x3BFB98")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFBD0", Offset = "0x3BFBD0")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFC08", Offset = "0x3BFC08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BFC08", Offset = "0x3BFC08")]
		public float spread;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFC60", Offset = "0x3BFC60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BFC60", Offset = "0x3BFC60")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFCB4", Offset = "0x3BFCB4")]
		public SoundPriority priority;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFCEC", Offset = "0x3BFCEC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x3BFCEC", Offset = "0x3BFCEC")]
		public Vector2 delay;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFD48", Offset = "0x3BFD48")]
		public bool looping;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFD80", Offset = "0x3BFD80")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000189")]
		public int Length
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0xFB032C", Offset = "0xFB032C", VA = "0xFB032C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018A")]
		public bool IsValid
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0xFB034C", Offset = "0xFB034C", VA = "0xFB034C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018B")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0xFB03EC", Offset = "0xFB03EC", VA = "0xFB03EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xFB03F4", Offset = "0xFB03F4", VA = "0xFB03F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0xFB03FC", Offset = "0xFB03FC", VA = "0xFB03FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018D")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xFB0408", Offset = "0xFB0408", VA = "0xFB0408")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xFAFE60", Offset = "0xFAFE60", VA = "0xFAFE60")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xFB0420", Offset = "0xFB0420", VA = "0xFB0420")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xFB04F0", Offset = "0xFB04F0", VA = "0xFB04F0")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xFB058C", Offset = "0xFB058C", VA = "0xFB058C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xFB05D4", Offset = "0xFB05D4", VA = "0xFB05D4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xFB06CC", Offset = "0xFB06CC", VA = "0xFB06CC")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xFB06D8", Offset = "0xFB06D8", VA = "0xFB06D8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xFB07B4", Offset = "0xFB07B4", VA = "0xFB07B4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xFB08C8", Offset = "0xFB08C8", VA = "0xFB08C8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xFB0954", Offset = "0xFB0954", VA = "0xFB0954")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xFB09E8", Offset = "0xFB09E8", VA = "0xFB09E8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xFB0A74", Offset = "0xFB0A74", VA = "0xFB0A74")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xFB0B00", Offset = "0xFB0B00", VA = "0xFB0B00")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000231")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x1700018E")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xFB0B78", Offset = "0xFB0B78", VA = "0xFB0B78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		public string name
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xFB0C7C", Offset = "0xFB0C7C", VA = "0xFB0C7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xFB0C84", Offset = "0xFB0C84", VA = "0xFB0C84")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public int Length
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xFB0C8C", Offset = "0xFB0C8C", VA = "0xFB0C8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000191")]
		public bool IsValid
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xFB0CD0", Offset = "0xFB0CD0", VA = "0xFB0CD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xFB0BA8", Offset = "0xFB0BA8", VA = "0xFB0BA8")]
		private void Init()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xFB0D08", Offset = "0xFB0D08", VA = "0xFB0D08")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xFB0D40", Offset = "0xFB0D40", VA = "0xFB0D40")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xFB0D80", Offset = "0xFB0D80", VA = "0xFB0D80")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xFB0DC8", Offset = "0xFB0DC8", VA = "0xFB0DC8")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xFB0E48", Offset = "0xFB0E48", VA = "0xFB0E48")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xFB0E88", Offset = "0xFB0E88", VA = "0xFB0E88")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xFB0ED8", Offset = "0xFB0ED8", VA = "0xFB0ED8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xFB0F10", Offset = "0xFB0F10", VA = "0xFB0F10")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xFB0F50", Offset = "0xFB0F50", VA = "0xFB0F50")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xFB0F88", Offset = "0xFB0F88", VA = "0xFB0F88")]
		public SoundFXRef()
		{
		}
	}
}
namespace BNG
{
	[Token(Token = "0x2000232")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000CA7")]
		Default = 0,
		[Token(Token = "0x4000CA8")]
		Generic = 1,
		[Token(Token = "0x4000CA9")]
		PingPongBall = 2,
		[Token(Token = "0x4000CAA")]
		Controller = 3,
		[Token(Token = "0x4000CAB")]
		Rock = 4,
		[Token(Token = "0x4000CAC")]
		PistolGrip = 50
	}
	[Token(Token = "0x2000233")]
	public class HandPoseDefinitions : MonoBehaviour
	{
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x9AC02C", Offset = "0x9AC02C", VA = "0x9AC02C")]
		public HandPoseDefinitions()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class LinkedSet<T> : IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LinkedList<T> list;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<T, LinkedListNode<T>> dictionary;

		[Token(Token = "0x17000192")]
		public int Count
		{
			[Token(Token = "0x6000E22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E1C")]
		public LinkedSet()
		{
		}

		[Token(Token = "0x6000E1D")]
		public LinkedSet(IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x6000E1E")]
		public bool Add(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1F")]
		public bool Remove(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E20")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000E21")]
		public bool Contains(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E23")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E24")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B8C78", Offset = "0x3B8C78")]
	public class Outline : MonoBehaviour
	{
		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BFDB8", Offset = "0x3BFDB8")]
		private Renderer <Renderer>k__BackingField;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BFDC8", Offset = "0x3BFDC8")]
		private SkinnedMeshRenderer <SkinnedMeshRenderer>k__BackingField;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BFDD8", Offset = "0x3BFDD8")]
		private MeshFilter <MeshFilter>k__BackingField;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int color;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool eraseRenderer;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material[] _SharedMaterials;

		[Token(Token = "0x17000193")]
		public Renderer Renderer
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xFE16BC", Offset = "0xFE16BC", VA = "0xFE16BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6F8C", Offset = "0x3C6F8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0xFE16C4", Offset = "0xFE16C4", VA = "0xFE16C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6F9C", Offset = "0x3C6F9C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public SkinnedMeshRenderer SkinnedMeshRenderer
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0xFE16CC", Offset = "0xFE16CC", VA = "0xFE16CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6FAC", Offset = "0x3C6FAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0xFE16D4", Offset = "0xFE16D4", VA = "0xFE16D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6FBC", Offset = "0x3C6FBC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xFE16DC", Offset = "0xFE16DC", VA = "0xFE16DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6FCC", Offset = "0x3C6FCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0xFE16E4", Offset = "0xFE16E4", VA = "0xFE16E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6FDC", Offset = "0x3C6FDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public Material[] SharedMaterials
		{
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0xFE1928", Offset = "0xFE1928", VA = "0xFE1928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xFE16EC", Offset = "0xFE16EC", VA = "0xFE16EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xFE1798", Offset = "0xFE1798", VA = "0xFE1798")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xFE1860", Offset = "0xFE1860", VA = "0xFE1860")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xFE1964", Offset = "0xFE1964", VA = "0xFE1964")]
		public Outline()
		{
		}
	}
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x3B8CE0", Offset = "0x3B8CE0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B8CE0", Offset = "0x3B8CE0")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x3B8CE0", Offset = "0x3B8CE0")]
	public class OutlineEffect : MonoBehaviour
	{
		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3BFDE8", Offset = "0x3BFDE8")]
		private static OutlineEffect <Instance>k__BackingField;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly LinkedSet<Outline> outlines;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BFDF8", Offset = "0x3BFDF8")]
		public float lineThickness;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BFE10", Offset = "0x3BFE10")]
		public float lineIntensity;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BFE28", Offset = "0x3BFE28")]
		public float fillAmount;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color lineColor0;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color lineColor1;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color lineColor2;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color lineColor3;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool additiveRendering;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool backfaceCulling;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BFE40", Offset = "0x3BFE40")]
		public bool cornerOutlines;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool addLinesBetweenColors;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3BFE78", Offset = "0x3BFE78")]
		public bool scaleWithScreenSize;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3BFEB0", Offset = "0x3BFEB0")]
		public float alphaCutoff;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool flipY;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Camera sourceCamera;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool autoEnableOutlines;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BFED0", Offset = "0x3BFED0")]
		public Camera outlineCamera;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material outline1Material;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material outline2Material;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material outline3Material;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material outline4Material;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material outlineEraseMaterial;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Shader outlineShader;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Shader outlineBufferShader;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BFEE0", Offset = "0x3BFEE0")]
		public Material outlineShaderMaterial;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BFEF0", Offset = "0x3BFEF0")]
		public RenderTexture renderTexture;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3BFF00", Offset = "0x3BFF00")]
		public RenderTexture extraRenderTexture;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CommandBuffer commandBuffer;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<Material> materialBuffer;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool RenderTheNextFrame;

		[Token(Token = "0x17000197")]
		public static OutlineEffect Instance
		{
			[Token(Token = "0x6000E30")]
			[Address(RVA = "0xFE196C", Offset = "0xFE196C", VA = "0xFE196C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6FEC", Offset = "0x3C6FEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0xFE19B8", Offset = "0xFE19B8", VA = "0xFE19B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C6FFC", Offset = "0x3C6FFC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xFE1A10", Offset = "0xFE1A10", VA = "0xFE1A10")]
		private Material GetMaterialFromID(int ID)
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xFE1A58", Offset = "0xFE1A58", VA = "0xFE1A58")]
		private Material CreateMaterial(Color emissionColor)
		{
			return null;
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xFE1C24", Offset = "0xFE1C24", VA = "0xFE1C24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xFE1D20", Offset = "0xFE1D20", VA = "0xFE1D20")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xFE2A94", Offset = "0xFE2A94", VA = "0xFE2A94")]
		public void OnPreRender()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xFE38F8", Offset = "0xFE38F8", VA = "0xFE38F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xFE39EC", Offset = "0xFE39EC", VA = "0xFE39EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xFE3C94", Offset = "0xFE3C94", VA = "0xFE3C94")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xFE207C", Offset = "0xFE207C", VA = "0xFE207C")]
		private void CreateMaterialsIfNeeded()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xFE3AC0", Offset = "0xFE3AC0", VA = "0xFE3AC0")]
		private void DestroyMaterials()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xFE2404", Offset = "0xFE2404", VA = "0xFE2404")]
		public void UpdateMaterialsPublicProperties()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xFE2968", Offset = "0xFE2968", VA = "0xFE2968")]
		private void UpdateOutlineCameraFromSource()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xFE17FC", Offset = "0xFE17FC", VA = "0xFE17FC")]
		public void AddOutline(Outline outline)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xFE18C4", Offset = "0xFE18C4", VA = "0xFE18C4")]
		public void RemoveOutline(Outline outline)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xFE3E0C", Offset = "0xFE3E0C", VA = "0xFE3E0C")]
		public OutlineEffect()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class DemoScript : MonoBehaviour
	{
		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFF10", Offset = "0x3BFF10")]
		public bool ExitOnEscape;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject DebugMenu;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text LabelToUpdate;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ProjectileLauncher DemoLauncher;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int MaxLaunchedObjects;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> launchedObjects;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text JoystickText;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject AmmoObject;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform ItemsHolder;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Grabbable, PosRot> _initalGrabbables;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody cubeRigid;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigid1;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody cubeRigid2;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody cubeRigid3;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Grabbable> demoClips;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 rotateX;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 rotateY;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 rotateZ;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 rotateXYX;

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x80295C", Offset = "0x80295C", VA = "0x80295C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x802E18", Offset = "0x802E18", VA = "0x802E18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x8030B0", Offset = "0x8030B0", VA = "0x8030B0")]
		public void UpdateSliderText(float sliderValue)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x803210", Offset = "0x803210", VA = "0x803210")]
		public void UpdateJoystickText(float leverX, float leverY)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x80333C", Offset = "0x80333C", VA = "0x80333C")]
		public void ResetGrabbables()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x8035A0", Offset = "0x8035A0", VA = "0x8035A0")]
		public void GrabAmmo(Grabber grabber)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x803AEC", Offset = "0x803AEC", VA = "0x803AEC")]
		public void ShootLauncher()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x802BE8", Offset = "0x802BE8", VA = "0x802BE8")]
		private void initGravityCubes()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x802F44", Offset = "0x802F44", VA = "0x802F44")]
		private void rotateGravityCubes()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x803C64", Offset = "0x803C64", VA = "0x803C64")]
		public DemoScript()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class PosRot
	{
		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xFD35E0", Offset = "0xFD35E0", VA = "0xFD35E0")]
		public PosRot()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class CharacterConstraint : MonoBehaviour
	{
		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BNGPlayerController bngController;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterController character;

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x8C46C8", Offset = "0x8C46C8", VA = "0x8C46C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x8C4758", Offset = "0x8C4758", VA = "0x8C4758")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x8C4764", Offset = "0x8C4764", VA = "0x8C4764", Slot = "4")]
		public virtual void CheckCharacterCollisionMove()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x8C4884", Offset = "0x8C4884", VA = "0x8C4884")]
		public CharacterConstraint()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class CharacterIK : MonoBehaviour
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowLeftController;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform FollowRightController;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FollowLeftFoot;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform FollowRightFoot;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform FollowHead;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float FootYPosition;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IKActive;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool IKFeetActive;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool HideHead;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool HideLeftArm;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool HideRightArm;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool HideLeftHand;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool HideRightHand;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool HideLegs;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform HipsJoint;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CharacterController FollowPlayer;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform headBone;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform leftShoulderJoint;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform rightShoulderJoint;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform leftHandJoint;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform rightHandJoint;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator animator;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float HipOffset;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 hideBoneScale;

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x8C488C", Offset = "0x8C488C", VA = "0x8C488C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x8C4970", Offset = "0x8C4970", VA = "0x8C4970")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x8C4C14", Offset = "0x8C4C14", VA = "0x8C4C14")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x8C50B8", Offset = "0x8C50B8", VA = "0x8C50B8")]
		public CharacterIK()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class CharacterYOffset : MonoBehaviour
	{
		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x8C50E4", Offset = "0x8C50E4", VA = "0x8C50E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x8C518C", Offset = "0x8C518C", VA = "0x8C518C")]
		public CharacterYOffset()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class Climbable : Grabbable
	{
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x8C5E2C", Offset = "0x8C5E2C", VA = "0x8C5E2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x8C5E54", Offset = "0x8C5E54", VA = "0x8C5E54", Slot = "9")]
		public override void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x8C5EA0", Offset = "0x8C5EA0", VA = "0x8C5EA0", Slot = "16")]
		public override void DropItem(Grabber droppedBy)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x8C5F48", Offset = "0x8C5F48", VA = "0x8C5F48")]
		public Climbable()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class CollisionSound : MonoBehaviour
	{
		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip CollisionAudio;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audioSource;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float startTime;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider col;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Grabbable grab;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MinimumVolume;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MaximumVolume;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool RecentlyPlayedSound;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float lastPlayedSound;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float LastRelativeVelocity;

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x8C61C0", Offset = "0x8C61C0", VA = "0x8C61C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x8C62F8", Offset = "0x8C62F8", VA = "0x8C62F8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x8C6668", Offset = "0x8C6668", VA = "0x8C6668")]
		private void resetLastPlayedSound()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x8C6670", Offset = "0x8C6670", VA = "0x8C6670")]
		public CollisionSound()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class ConstrainLocalPosition : MonoBehaviour
	{
		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ConstrainLocalX;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LocalXMin;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LocalXMax;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool ConstrainLocalY;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LocalYMin;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LocalYMax;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ConstrainLocalZ;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LocalZMin;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float LocalZMax;

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x8C7634", Offset = "0x8C7634", VA = "0x8C7634")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x8C7638", Offset = "0x8C7638", VA = "0x8C7638")]
		private void doConstrain()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x8C772C", Offset = "0x8C772C", VA = "0x8C772C")]
		public ConstrainLocalPosition()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class Damageable : MonoBehaviour
	{
		[Token(Token = "0x20003C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B969C", Offset = "0x3B969C")]
		private sealed class <RespawnRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Damageable <>4__this;

			[Token(Token = "0x17000258")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600145F")]
				[Address(RVA = "0x5F4C90", Offset = "0x5F4C90", VA = "0x5F4C90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000259")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001461")]
				[Address(RVA = "0x5F4CD8", Offset = "0x5F4CD8", VA = "0x5F4CD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600145C")]
			[Address(RVA = "0x5F4858", Offset = "0x5F4858", VA = "0x5F4858")]
			[DebuggerHidden]
			public <RespawnRoutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600145D")]
			[Address(RVA = "0x5F4884", Offset = "0x5F4884", VA = "0x5F4884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600145E")]
			[Address(RVA = "0x5F4888", Offset = "0x5F4888", VA = "0x5F4888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001460")]
			[Address(RVA = "0x5F4C98", Offset = "0x5F4C98", VA = "0x5F4C98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Health;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _startingHealth;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFF48", Offset = "0x3BFF48")]
		public GameObject SpawnOnDeath;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFF80", Offset = "0x3BFF80")]
		public List<GameObject> ActivateGameObjectsOnDeath;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFFB8", Offset = "0x3BFFB8")]
		public List<GameObject> DeactivateGameObjectsOnDeath;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3BFFF0", Offset = "0x3BFFF0")]
		public List<Collider> DeactivateCollidersOnDeath;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0028", Offset = "0x3C0028")]
		public bool DestroyOnDeath;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0060", Offset = "0x3C0060")]
		public float DestroyDelay;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0098", Offset = "0x3C0098")]
		public bool Respawn;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C00D0", Offset = "0x3C00D0")]
		public float RespawnTime;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0108", Offset = "0x3C0108")]
		public bool RemoveBulletHolesOnDeath;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0140", Offset = "0x3C0140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0140", Offset = "0x3C0140")]
		public FloatEvent onDamaged;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C01A0", Offset = "0x3C01A0")]
		public UnityEvent onDestroyed;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C01D8", Offset = "0x3C01D8")]
		public UnityEvent onRespawn;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool destroyed;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody rigid;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool initialWasKinematic;

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x8CB21C", Offset = "0x8CB21C", VA = "0x8CB21C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x8CB2DC", Offset = "0x8CB2DC", VA = "0x8CB2DC", Slot = "4")]
		public virtual void DealDamage(float damageAmount)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x8CB37C", Offset = "0x8CB37C", VA = "0x8CB37C", Slot = "5")]
		public virtual void DestroyThis()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x8CB9C4", Offset = "0x8CB9C4", VA = "0x8CB9C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C700C", Offset = "0x3C700C")]
		private IEnumerator RespawnRoutine(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x8CBA48", Offset = "0x8CBA48", VA = "0x8CBA48")]
		public Damageable()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class DamageCollider : MonoBehaviour
	{
		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Damage;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody ColliderRigidbody;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinForce;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LastRelativeVelocity;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LastDamageForce;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool TakeCollisionDamage;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float CollisionDamage;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Damageable thisDamageable;

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x8CAF6C", Offset = "0x8CAF6C", VA = "0x8CAF6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x8CB030", Offset = "0x8CB030", VA = "0x8CB030")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x8CB078", Offset = "0x8CB078", VA = "0x8CB078", Slot = "4")]
		public virtual void OnCollisionEvent(Collision collision)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x8CB1F8", Offset = "0x8CB1F8", VA = "0x8CB1F8")]
		public DamageCollider()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class DestroyObjectWithDelay : MonoBehaviour
	{
		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DestroySeconds;

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x803D6C", Offset = "0x803D6C", VA = "0x803D6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x803DFC", Offset = "0x803DFC", VA = "0x803DFC")]
		public DestroyObjectWithDelay()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class FollowRigidbody : MonoBehaviour
	{
		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowTransform;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigid;

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x80A204", Offset = "0x80A204", VA = "0x80A204")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x80A260", Offset = "0x80A260", VA = "0x80A260")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x80A2AC", Offset = "0x80A2AC", VA = "0x80A2AC")]
		public FollowRigidbody()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class FollowTransform : MonoBehaviour
	{
		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowTarget;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool MatchRotation;

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x80A2B4", Offset = "0x80A2B4", VA = "0x80A2B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x80A3AC", Offset = "0x80A3AC", VA = "0x80A3AC")]
		public FollowTransform()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class GrabAction : GrabbableEvents
	{
		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabberEvent OnGrabEvent;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Grabbable g;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastGrabTime;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float minTimeBetweenGrabs;

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x80D938", Offset = "0x80D938", VA = "0x80D938", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x80DA84", Offset = "0x80DA84", VA = "0x80DA84")]
		public GrabAction()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class GrabbableHaptics : GrabbableEvents
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HapticsOnValidPickup;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HapticsOnValidRemotePickup;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool HapticsOnCollision;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool HapticsOnGrab;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float VibrateFrequency;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float VibrateAmplitude;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float VibrateDuration;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabber currentGrabber;

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x8142B0", Offset = "0x8142B0", VA = "0x8142B0", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x814388", Offset = "0x814388", VA = "0x814388", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x814390", Offset = "0x814390", VA = "0x814390", Slot = "6")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x8143A0", Offset = "0x8143A0", VA = "0x8143A0", Slot = "10")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x8142E0", Offset = "0x8142E0", VA = "0x8142E0")]
		private void doHaptics(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x8143B0", Offset = "0x8143B0", VA = "0x8143B0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x8144E0", Offset = "0x8144E0", VA = "0x8144E0")]
		public GrabbableHaptics()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class GrabbableHighlight : GrabbableEvents
	{
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Outline outline;

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x814508", Offset = "0x814508", VA = "0x814508")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x81477C", Offset = "0x81477C", VA = "0x81477C", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x814820", Offset = "0x814820", VA = "0x814820", Slot = "6")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x8148D0", Offset = "0x8148D0", VA = "0x8148D0", Slot = "8")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x8148E0", Offset = "0x8148E0", VA = "0x8148E0", Slot = "10")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x8148F0", Offset = "0x8148F0", VA = "0x8148F0", Slot = "12")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x814830", Offset = "0x814830", VA = "0x814830")]
		public void HighlightItem()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x814780", Offset = "0x814780", VA = "0x814780")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x814900", Offset = "0x814900", VA = "0x814900")]
		public GrabbableHighlight()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class GrabbableHighlightMaterial : GrabbableEvents
	{
		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0210", Offset = "0x3C0210")]
		public List<Material> StandardMaterials;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0248", Offset = "0x3C0248")]
		public List<Material> HighlightMaterials;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer Renderer;

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x814910", Offset = "0x814910", VA = "0x814910")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x814AC4", Offset = "0x814AC4", VA = "0x814AC4", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x814B90", Offset = "0x814B90", VA = "0x814B90", Slot = "6")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x814C68", Offset = "0x814C68", VA = "0x814C68", Slot = "8")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x814C78", Offset = "0x814C78", VA = "0x814C78", Slot = "10")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x814C88", Offset = "0x814C88", VA = "0x814C88", Slot = "12")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x814BA0", Offset = "0x814BA0", VA = "0x814BA0")]
		public void HighlightItem()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x814AC8", Offset = "0x814AC8", VA = "0x814AC8")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x814C98", Offset = "0x814C98", VA = "0x814C98")]
		public GrabbableHighlightMaterial()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class GrabbableRingHelper : GrabbableEvents
	{
		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool RingOnValidPickup;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool RingOnValidRemotePickup;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RingHelperScale;

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x9A12B8", Offset = "0x9A12B8", VA = "0x9A12B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x9A158C", Offset = "0x9A158C", VA = "0x9A158C")]
		public GrabbableRingHelper()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class LineToTransform : MonoBehaviour
	{
		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ConnectTo;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer line;

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x980D70", Offset = "0x980D70", VA = "0x980D70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x980E30", Offset = "0x980E30", VA = "0x980E30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x980EB8", Offset = "0x980EB8", VA = "0x980EB8")]
		public LineToTransform()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class LookAtTransform : MonoBehaviour
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LookAt;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UseLerp;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Speed;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UseUpdate;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseLateUpdate;

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x986140", Offset = "0x986140", VA = "0x986140")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x98635C", Offset = "0x98635C", VA = "0x98635C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x986150", Offset = "0x986150", VA = "0x986150")]
		private void lookAt()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x98636C", Offset = "0x98636C", VA = "0x98636C")]
		public LookAtTransform()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class PlaySoundOnGrab : GrabbableEvents
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip SoundToPlay;

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xFD0BAC", Offset = "0xFD0BAC", VA = "0xFD0BAC", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xFD0C8C", Offset = "0xFD0C8C", VA = "0xFD0C8C")]
		public PlaySoundOnGrab()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class ReturnToSnapZone : MonoBehaviour
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0280", Offset = "0x3C0280")]
		public SnapZone ReturnTo;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C02B8", Offset = "0x3C02B8")]
		public float LerpSpeed;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C02F0", Offset = "0x3C02F0")]
		public float ReturnDelay;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentDelay;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable grab;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody rigid;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool useGravityInitial;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0328", Offset = "0x3C0328")]
		public float SnapDistance;

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xFA205C", Offset = "0xFA205C", VA = "0xFA205C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xFA20F4", Offset = "0xFA20F4", VA = "0xFA20F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xFA2240", Offset = "0xFA2240", VA = "0xFA2240")]
		private void moveToSnapZone()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xFA2920", Offset = "0xFA2920", VA = "0xFA2920")]
		public ReturnToSnapZone()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class RotateTowards : MonoBehaviour
	{
		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TargetTransform;

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xFA5220", Offset = "0xFA5220", VA = "0xFA5220")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xFA530C", Offset = "0xFA530C", VA = "0xFA530C")]
		public RotateTowards()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class RotateWithHMD : MonoBehaviour
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterController Character;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Offset;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float RotateSpeed;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MoveSpeed;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform camTransform;

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xFA5314", Offset = "0xFA5314", VA = "0xFA5314")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xFA5318", Offset = "0xFA5318", VA = "0xFA5318")]
		private void updateBodyPosition()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xFA55E4", Offset = "0xFA55E4", VA = "0xFA55E4")]
		public RotateWithHMD()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class ScaleBetweenPoints : MonoBehaviour
	{
		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Begin;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform End;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DoUpdate;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool DoLateUpdate;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool LookAtTarget;

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xFA5600", Offset = "0xFA5600", VA = "0xFA5600")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xFA57C8", Offset = "0xFA57C8", VA = "0xFA57C8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xFA5610", Offset = "0xFA5610", VA = "0xFA5610")]
		private void doScale()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xFA57D8", Offset = "0xFA57D8", VA = "0xFA57D8")]
		public ScaleBetweenPoints()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class ScreenFader : MonoBehaviour
	{
		[Token(Token = "0x20003C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B96AC", Offset = "0x3B96AC")]
		private sealed class <doFade>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float alphaFrom;

			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenFader <>4__this;

			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float alphaTo;

			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <alpha>5__2;

			[Token(Token = "0x1700025A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001465")]
				[Address(RVA = "0x88BA10", Offset = "0x88BA10", VA = "0x88BA10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001467")]
				[Address(RVA = "0x88BA58", Offset = "0x88BA58", VA = "0x88BA58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001462")]
			[Address(RVA = "0x88B88C", Offset = "0x88B88C", VA = "0x88B88C")]
			[DebuggerHidden]
			public <doFade>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001463")]
			[Address(RVA = "0x88B8B8", Offset = "0x88B8B8", VA = "0x88B8B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001464")]
			[Address(RVA = "0x88B8BC", Offset = "0x88B8BC", VA = "0x88B8BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001466")]
			[Address(RVA = "0x88BA18", Offset = "0x88BA18", VA = "0x88BA18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0360", Offset = "0x3C0360")]
		public bool FadeOnSceneLoaded;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0398", Offset = "0x3C0398")]
		public Color FadeColor;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C03D0", Offset = "0x3C03D0")]
		public float FadeSpeed;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject fadeObject;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform fadeObjectRect;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas fadeCanvas;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Image fadeImage;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IEnumerator fadeRoutine;

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xFA5C48", Offset = "0xFA5C48", VA = "0xFA5C48", Slot = "4")]
		protected virtual void initialize()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xFA5EE8", Offset = "0xFA5EE8", VA = "0xFA5EE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xFA5FB4", Offset = "0xFA5FB4", VA = "0xFA5FB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xFA6080", Offset = "0xFA6080", VA = "0xFA6080")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xFA60DC", Offset = "0xFA60DC", VA = "0xFA60DC", Slot = "5")]
		public virtual void DoFadeIn()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xFA61C8", Offset = "0xFA61C8", VA = "0xFA61C8", Slot = "6")]
		public virtual void DoFadeOut()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xFA6228", Offset = "0xFA6228", VA = "0xFA6228", Slot = "7")]
		public virtual void SetFadeLevel(float fadeLevel)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xFA613C", Offset = "0xFA613C", VA = "0xFA613C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C7074", Offset = "0x3C7074")]
		private IEnumerator doFade(float alphaFrom, float alphaTo)
		{
			return null;
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xFA6294", Offset = "0xFA6294", VA = "0xFA6294", Slot = "8")]
		protected virtual void updateImageAlpha(float alphaValue)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xFA63CC", Offset = "0xFA63CC", VA = "0xFA63CC")]
		public ScreenFader()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class SnapZoneRingHelper : MonoBehaviour
	{
		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SnapZone Snap;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color RestingColor;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color ValidSnapColor;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RestingScale;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ValidSnapScale;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CanvasScaler ringCanvas;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text ringText;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabbablesInTrigger nearbyGrabbables;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool validSnap;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ScaleSpeed;

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xFAC8EC", Offset = "0xFAC8EC", VA = "0xFAC8EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xFAC99C", Offset = "0xFAC99C", VA = "0xFAC99C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xFACA64", Offset = "0xFACA64", VA = "0xFACA64")]
		private bool checkIsValidSnap()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xFACB60", Offset = "0xFACB60", VA = "0xFACB60")]
		public SnapZoneRingHelper()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class Tooltip : MonoBehaviour
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 TipOffset;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool UseWorldYAxis;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxViewDistance;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform childTransform;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform DrawLineTo;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineToTransform lineTo;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lookAt;

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xFBDACC", Offset = "0xFBDACC", VA = "0xFBDACC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xFBDBE0", Offset = "0xFBDBE0", VA = "0xFBDBE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xFBDE6C", Offset = "0xFBDE6C", VA = "0xFBDE6C")]
		public Tooltip()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public enum LocomotionType
	{
		[Token(Token = "0x4000D82")]
		Teleport,
		[Token(Token = "0x4000D83")]
		SmoothLocomotion,
		[Token(Token = "0x4000D84")]
		None
	}
	[Token(Token = "0x2000254")]
	public class BNGPlayerController : MonoBehaviour
	{
		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0408", Offset = "0x3C0408")]
		[SerializeField]
		private LocomotionType selectedLocomotion;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0454", Offset = "0x3C0454")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0454", Offset = "0x3C0454")]
		public bool MoveCharacterWithCamera;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C04B4", Offset = "0x3C04B4")]
		public bool RotateCharacterWithCamera;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C04EC", Offset = "0x3C04EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C04EC", Offset = "0x3C04EC")]
		public Transform TrackingSpace;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C054C", Offset = "0x3C054C")]
		public Transform CameraRig;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0584", Offset = "0x3C0584")]
		public Transform CenterEyeAnchor;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C05BC", Offset = "0x3C05BC")]
		public bool GravityEnabled;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float GravityAmount;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C05F4", Offset = "0x3C05F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C05F4", Offset = "0x3C05F4")]
		public LayerMask GroundedLayers;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 moveDirection;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C0654", Offset = "0x3C0654")]
		public float DistanceFromGround;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0664", Offset = "0x3C0664")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0664", Offset = "0x3C0664")]
		public float MinimumCapsuleHeight;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C06C4", Offset = "0x3C06C4")]
		public float MaximumCapsuleHeight;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C06FC", Offset = "0x3C06FC")]
		public float ClimbingCapsuleHeight;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0734", Offset = "0x3C0734")]
		public float ClimbingCapsuleCenter;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C076C", Offset = "0x3C076C")]
		public float LastTeleportTime;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C077C", Offset = "0x3C077C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C077C", Offset = "0x3C077C")]
		public float CharacterControllerYOffset;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C07DC", Offset = "0x3C07DC")]
		public float CameraHeight;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C07EC", Offset = "0x3C07EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C07EC", Offset = "0x3C07EC")]
		public bool ElevateCameraIfNoHMDPresent;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C084C", Offset = "0x3C084C")]
		public float ElevateCameraHeight;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0884", Offset = "0x3C0884")]
		public float MinElevation;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float MaxElevation;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C08BC", Offset = "0x3C08BC")]
		public bool GrippingClimbable;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C08F4", Offset = "0x3C08F4")]
		public float LastPlayerMoveTime;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Grabber> climbers;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CharacterController characterController;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private PlayerTeleport teleport;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PlayerRotation playerRotation;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RaycastHit groundHit;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform mainCamera;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 lastPlayerPosition;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion lastPlayerRotation;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float lastSnapTime;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float _initialGravityModifier;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 _initialPosition;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform _initialCharacterParent;

		[Token(Token = "0x17000198")]
		public LocomotionType SelectedLocomotion
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x76B1A4", Offset = "0x76B1A4", VA = "0x76B1A4")]
			get
			{
				return default(LocomotionType);
			}
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x76B1AC", Offset = "0x76B1AC", VA = "0x76B1AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x76B7A0", Offset = "0x76B7A0", VA = "0x76B7A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x76BCEC", Offset = "0x76BCEC", VA = "0x76BCEC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x76BE38", Offset = "0x76BE38", VA = "0x76BE38", Slot = "4")]
		public virtual void UpdateDistanceFromGround()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x76C094", Offset = "0x76C094", VA = "0x76C094", Slot = "5")]
		public virtual void RotateTrackingSpaceToCamera()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x76C1B4", Offset = "0x76C1B4", VA = "0x76C1B4", Slot = "6")]
		public virtual void UpdateLastSnapTime()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x76C1DC", Offset = "0x76C1DC", VA = "0x76C1DC", Slot = "7")]
		public virtual bool RecentlyMoved()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x76C37C", Offset = "0x76C37C", VA = "0x76C37C", Slot = "8")]
		public virtual void UpdateCameraRigPosition()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x76C640", Offset = "0x76C640", VA = "0x76C640", Slot = "9")]
		public virtual void UpdateCharacterHeight()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x76C76C", Offset = "0x76C76C", VA = "0x76C76C", Slot = "10")]
		public virtual void UpdateCameraHeight()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x76C7FC", Offset = "0x76C7FC", VA = "0x76C7FC", Slot = "11")]
		public virtual void CheckCharacterCollisionMove()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x76C4C4", Offset = "0x76C4C4", VA = "0x76C4C4")]
		private bool grippingAtLeastOneClimbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x76B9E4", Offset = "0x76B9E4", VA = "0x76B9E4")]
		private void checkClimbing()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x76C910", Offset = "0x76C910", VA = "0x76C910", Slot = "12")]
		public virtual void checkMovingPlatform()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x76B6D4", Offset = "0x76B6D4", VA = "0x76B6D4")]
		public void ChangeLocomotionType(LocomotionType loc)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x76CB00", Offset = "0x76CB00", VA = "0x76CB00")]
		private void toggleTeleport(bool enabled)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x76CB30", Offset = "0x76CB30", VA = "0x76CB30")]
		private void toggleSmoothLocomotion(bool enabled)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x76CBD0", Offset = "0x76CBD0", VA = "0x76CBD0")]
		public void ToggleLocomotionType()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x76CBE0", Offset = "0x76CBE0", VA = "0x76CBE0")]
		public bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x76CC90", Offset = "0x76CC90", VA = "0x76CC90")]
		public void ToggleGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x76CCB0", Offset = "0x76CCB0", VA = "0x76CCB0")]
		public void AddClimber(Climbable climbable, Grabber grab)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x76CEF0", Offset = "0x76CEF0", VA = "0x76CEF0")]
		public void RemoveClimber(Grabber grab)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x76CFD4", Offset = "0x76CFD4", VA = "0x76CFD4")]
		public BNGPlayerController()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class Button : MonoBehaviour
	{
		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0904", Offset = "0x3C0904")]
		public float MinLocalY;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C093C", Offset = "0x3C093C")]
		public float MaxLocalY;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0974", Offset = "0x3C0974")]
		public float ClickTolerance;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C09AC", Offset = "0x3C09AC")]
		public bool AllowPhysicsForces;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Grabber> grabbers;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpringJoint joint;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool clickingDown;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip ButtonClick;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ButtonClickUp;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onButtonDown;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onButtonUp;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigid;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float ButtonSpeed;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float SpringForce;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 buttonDownPosition;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 buttonUpPosition;

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x771690", Offset = "0x771690", VA = "0x771690")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x771800", Offset = "0x771800", VA = "0x771800")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x771B5C", Offset = "0x771B5C", VA = "0x771B5C", Slot = "4")]
		public virtual Vector3 GetButtonUpPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x771BC0", Offset = "0x771BC0", VA = "0x771BC0", Slot = "5")]
		public virtual Vector3 GetButtonDownPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x771C24", Offset = "0x771C24", VA = "0x771C24", Slot = "6")]
		public virtual void OnButtonDown()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x771D0C", Offset = "0x771D0C", VA = "0x771D0C", Slot = "7")]
		public virtual void OnButtonUp()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x771DF4", Offset = "0x771DF4", VA = "0x771DF4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x771F48", Offset = "0x771F48", VA = "0x771F48")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x772054", Offset = "0x772054", VA = "0x772054")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x772200", Offset = "0x772200", VA = "0x772200")]
		public Button()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public enum GrabType
	{
		[Token(Token = "0x4000DBC")]
		Snap,
		[Token(Token = "0x4000DBD")]
		Precise
	}
	[Token(Token = "0x2000257")]
	public enum GrabPhysics
	{
		[Token(Token = "0x4000DBF")]
		None = 2,
		[Token(Token = "0x4000DC0")]
		PhysicsJoint = 0,
		[Token(Token = "0x4000DC1")]
		FixedJoint = 3,
		[Token(Token = "0x4000DC2")]
		Velocity = 4,
		[Token(Token = "0x4000DC3")]
		Kinematic = 1
	}
	[Token(Token = "0x2000258")]
	public enum OtherGrabBehavior
	{
		[Token(Token = "0x4000DC5")]
		None,
		[Token(Token = "0x4000DC6")]
		SwapHands,
		[Token(Token = "0x4000DC7")]
		DualGrab
	}
	[Token(Token = "0x2000259")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x20003C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B96BC", Offset = "0x3B96BC")]
		private sealed class <Release>d__131 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable <>4__this;

			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 velocity;

			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 angularVelocity;

			[Token(Token = "0x1700025C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600146B")]
				[Address(RVA = "0x5F7BD4", Offset = "0x5F7BD4", VA = "0x5F7BD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600146D")]
				[Address(RVA = "0x5F7C1C", Offset = "0x5F7C1C", VA = "0x5F7C1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001468")]
			[Address(RVA = "0x5F7A88", Offset = "0x5F7A88", VA = "0x5F7A88")]
			[DebuggerHidden]
			public <Release>d__131(int <>1__state)
			{
			}

			[Token(Token = "0x6001469")]
			[Address(RVA = "0x5F7AB4", Offset = "0x5F7AB4", VA = "0x5F7AB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600146A")]
			[Address(RVA = "0x5F7AB8", Offset = "0x5F7AB8", VA = "0x5F7AB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600146C")]
			[Address(RVA = "0x5F7BDC", Offset = "0x5F7BDC", VA = "0x5F7BDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C09E4", Offset = "0x3C09E4")]
		public bool BeingHeld;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Grabber> validGrabbers;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected List<Grabber> heldByGrabbers;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool wasKinematic;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool usedGravity;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private CollisionDetectionMode initialCollisionMode;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RigidbodyInterpolation initialInterpolationMode;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool remoteGrabbing;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C09F4", Offset = "0x3C09F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C09F4", Offset = "0x3C09F4")]
		public GrabButton GrabButton;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0A54", Offset = "0x3C0A54")]
		public HoldType Grabtype;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0A8C", Offset = "0x3C0A8C")]
		public GrabPhysics GrabPhysics;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0AC4", Offset = "0x3C0AC4")]
		public GrabType GrabMechanic;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0AFC", Offset = "0x3C0AFC")]
		public float GrabSpeed;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0B34", Offset = "0x3C0B34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0B34", Offset = "0x3C0B34")]
		public bool RemoteGrabbable;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0B94", Offset = "0x3C0B94")]
		public float RemoteGrabDistance;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0BCC", Offset = "0x3C0BCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0BCC", Offset = "0x3C0BCC")]
		public float ThrowForceMultiplier;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0C2C", Offset = "0x3C0C2C")]
		public float ThrowForceMultiplierAngular;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0C64", Offset = "0x3C0C64")]
		public float BreakDistance;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0C9C", Offset = "0x3C0C9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0C9C", Offset = "0x3C0C9C")]
		public bool HideHandGraphics;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0CFC", Offset = "0x3C0CFC")]
		public bool ParentToHands;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0D34", Offset = "0x3C0D34")]
		public bool ParentHandModel;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0D6C", Offset = "0x3C0D6C")]
		public bool SnapHandModel;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0DA4", Offset = "0x3C0DA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0DA4", Offset = "0x3C0DA4")]
		public bool CanBeDropped;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0E04", Offset = "0x3C0E04")]
		public bool CanBeSnappedToSnapZone;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0E3C", Offset = "0x3C0E3C")]
		public bool ForceDisableKinematicOnDrop;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0E74", Offset = "0x3C0E74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0E74", Offset = "0x3C0E74")]
		public HandPoseId CustomHandPose;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private HandPoseId initialHandPoseId;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0ED4", Offset = "0x3C0ED4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0ED4", Offset = "0x3C0ED4")]
		public OtherGrabBehavior SecondaryGrabBehavior;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0F34", Offset = "0x3C0F34")]
		public Grabbable OtherGrabbableMustBeGrabbed;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C0F6C", Offset = "0x3C0F6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0F6C", Offset = "0x3C0F6C")]
		public Grabbable SecondaryGrabbable;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C0FCC", Offset = "0x3C0FCC")]
		public float SecondHandLookSpeed;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1004", Offset = "0x3C1004")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1004", Offset = "0x3C1004")]
		public float CollisionSpring;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1064", Offset = "0x3C1064")]
		public float CollisionSlerp;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C109C", Offset = "0x3C109C")]
		public ConfigurableJointMotion CollisionLinearMotionX;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C10D4", Offset = "0x3C10D4")]
		public ConfigurableJointMotion CollisionLinearMotionY;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C110C", Offset = "0x3C110C")]
		public ConfigurableJointMotion CollisionLinearMotionZ;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1144", Offset = "0x3C1144")]
		public ConfigurableJointMotion CollisionAngularMotionX;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C117C", Offset = "0x3C117C")]
		public ConfigurableJointMotion CollisionAngularMotionY;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C11B4", Offset = "0x3C11B4")]
		public ConfigurableJointMotion CollisionAngularMotionZ;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C11EC", Offset = "0x3C11EC")]
		public bool ApplyCorrectiveForce;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1224", Offset = "0x3C1224")]
		public float MoveVelocityForce;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float MoveAngularVelocityForce;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C125C", Offset = "0x3C125C")]
		public float LastGrabTime;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C126C", Offset = "0x3C126C")]
		public float LastDropTime;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C127C", Offset = "0x3C127C")]
		public bool AddControllerVelocityOnDrop;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float journeyLength;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C128C", Offset = "0x3C128C")]
		private float <OriginalScale>k__BackingField;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C129C", Offset = "0x3C129C")]
		[SerializeField]
		private List<Collider> collisions;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float lastCollisionSeconds;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float lastNoCollisionSeconds;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float requestSpringTime;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Transform primaryGrabOffset;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C12E8", Offset = "0x3C12E8")]
		public GrabPoint ActiveGrabPoint;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C12F8", Offset = "0x3C12F8")]
		public Vector3 SecondaryLookOffset;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C1308", Offset = "0x3C1308")]
		public Transform SecondaryLookAtTransform;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C1318", Offset = "0x3C1318")]
		public Transform LocalOffsetTransform;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Transform _grabTransform;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1328", Offset = "0x3C1328")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1328", Offset = "0x3C1328")]
		public List<Transform> GrabPoints;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool _canBeMoved;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Transform originalParent;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private InputBridge input;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private ConfigurableJoint connectedJoint;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 previousPosition;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float lastItemTeleportTime;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool recentlyTeleported;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C1388", Offset = "0x3C1388")]
		public bool UseCustomInspector;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private BNGPlayerController _player;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Collider col;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Rigidbody rigid;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Grabber flyingTo;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected List<GrabbableEvents> events;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool didParentHands;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		private bool quitting;

		[Token(Token = "0x17000199")]
		public float OriginalScale
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x80E05C", Offset = "0x80E05C", VA = "0x80E05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C70DC", Offset = "0x3C70DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x80E064", Offset = "0x80E064", VA = "0x80E064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C70EC", Offset = "0x3C70EC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		private bool grabbingTwoHands
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x80E06C", Offset = "0x80E06C", VA = "0x80E06C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019B")]
		private Vector3 grabPosition
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x80E108", Offset = "0x80E108", VA = "0x80E108")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700019C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C992C", Offset = "0x3C992C")]
		public Vector3 GrabPositionOffset
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x803A44", Offset = "0x803A44", VA = "0x803A44")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700019D")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C993C", Offset = "0x3C993C")]
		public Vector3 GrabRotationOffset
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x80E1A4", Offset = "0x80E1A4", VA = "0x80E1A4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700019E")]
		public Transform grabTransform
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x80E24C", Offset = "0x80E24C", VA = "0x80E24C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public bool CanBeMoved
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x80E388", Offset = "0x80E388", VA = "0x80E388")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		protected BNGPlayerController player
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x80E390", Offset = "0x80E390", VA = "0x80E390")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public bool DidParentHands
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x80E3A0", Offset = "0x80E3A0", VA = "0x80E3A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x80E3A8", Offset = "0x80E3A8", VA = "0x80E3A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x80E770", Offset = "0x80E770", VA = "0x80E770")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x81020C", Offset = "0x81020C", VA = "0x81020C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x80ED84", Offset = "0x80ED84", VA = "0x80ED84")]
		private Vector3 getGrabberWithOffsetWorldPosition(Grabber grabber)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x80FC1C", Offset = "0x80FC1C", VA = "0x80FC1C")]
		private void positionHandGraphics()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x810304", Offset = "0x810304", VA = "0x810304", Slot = "4")]
		public virtual bool IsGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x8103B8", Offset = "0x8103B8", VA = "0x8103B8", Slot = "5")]
		public virtual void UpdateFixedJoints()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x8105B4", Offset = "0x8105B4", VA = "0x8105B4", Slot = "6")]
		public virtual void UpdatePhysicsJoints()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x810B08", Offset = "0x810B08", VA = "0x810B08")]
		private void setPositionSpring(float spring, float damper)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x810C48", Offset = "0x810C48", VA = "0x810C48")]
		private void setSlerpDrive(float slerp, float damper)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x8104A8", Offset = "0x8104A8", VA = "0x8104A8")]
		private void moveWithVelocity()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x810CD8", Offset = "0x810CD8", VA = "0x810CD8")]
		private void rotateWithVelocity()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x810E6C", Offset = "0x810E6C", VA = "0x810E6C", Slot = "7")]
		public virtual void UpdateKinematicPhysics()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x811468", Offset = "0x811468", VA = "0x811468", Slot = "8")]
		public virtual void UpdateVelocityPhysics()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x80F92C", Offset = "0x80F92C", VA = "0x80F92C")]
		private void checkParentHands()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x80E6CC", Offset = "0x80E6CC", VA = "0x80E6CC")]
		private bool canBeMoved()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x80FCA4", Offset = "0x80FCA4", VA = "0x80FCA4")]
		private void checkSecondaryLook()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x8117F0", Offset = "0x8117F0", VA = "0x8117F0")]
		private void rotateGrabber(bool lerp = false)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x8119E0", Offset = "0x8119E0", VA = "0x8119E0")]
		public Transform GetGrabPoint()
		{
			return null;
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x8119E8", Offset = "0x8119E8", VA = "0x8119E8", Slot = "9")]
		public virtual void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x812144", Offset = "0x812144", VA = "0x812144", Slot = "10")]
		protected virtual void setupConfigJointGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x812338", Offset = "0x812338", VA = "0x812338", Slot = "11")]
		protected virtual void setupFixedJointGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x81242C", Offset = "0x81242C", VA = "0x81242C", Slot = "12")]
		protected virtual void setupKinematicGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x81250C", Offset = "0x81250C", VA = "0x81250C", Slot = "13")]
		protected virtual void setupVelocityGrab(Grabber grabbedBy, GrabType grabType)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x812628", Offset = "0x812628", VA = "0x812628", Slot = "14")]
		public virtual void GrabRemoteItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x811F84", Offset = "0x811F84", VA = "0x811F84")]
		public void ResetGrabbing()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x812784", Offset = "0x812784", VA = "0x812784", Slot = "15")]
		public virtual void DropItem(Grabber droppedBy, bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x811958", Offset = "0x811958", VA = "0x811958")]
		private Vector3 angleLerp(Vector3 startAngle, Vector3 finishAngle, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x8116F0", Offset = "0x8116F0", VA = "0x8116F0")]
		private void clearLookAtTransform()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x80F440", Offset = "0x80F440", VA = "0x80F440")]
		private void callEvents(Grabber g)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x812FA0", Offset = "0x812FA0", VA = "0x812FA0", Slot = "16")]
		public virtual void DropItem(Grabber droppedBy)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x812FB8", Offset = "0x812FB8", VA = "0x812FB8", Slot = "17")]
		public virtual void DropItem(bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x813014", Offset = "0x813014", VA = "0x813014")]
		public void ResetScale()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x812BE8", Offset = "0x812BE8", VA = "0x812BE8")]
		public void ResetParent()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x813050", Offset = "0x813050", VA = "0x813050")]
		public void UpdateOriginalParent(Transform newOriginalParent)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x80408C", Offset = "0x80408C", VA = "0x80408C")]
		public void UpdateOriginalParent()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x813058", Offset = "0x813058", VA = "0x813058")]
		public ControllerHand GetControllerHand(Grabber g)
		{
			return default(ControllerHand);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x8130E4", Offset = "0x8130E4", VA = "0x8130E4", Slot = "18")]
		public virtual Grabber GetPrimaryGrabber()
		{
			return null;
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x813200", Offset = "0x813200", VA = "0x813200", Slot = "19")]
		public virtual Grabber GetClosestGrabber()
		{
			return null;
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x813360", Offset = "0x813360", VA = "0x813360", Slot = "20")]
		public virtual Transform GetClosestGrabPoint(Grabber grabber)
		{
			return null;
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x812EF0", Offset = "0x812EF0", VA = "0x812EF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C70FC", Offset = "0x3C70FC")]
		private IEnumerator Release(Vector3 velocity, Vector3 angularVelocity)
		{
			return null;
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x813660", Offset = "0x813660", VA = "0x813660", Slot = "21")]
		public virtual bool IsValidCollision(Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x8136A4", Offset = "0x8136A4", VA = "0x8136A4", Slot = "22")]
		public virtual bool IsValidCollision(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x8115E8", Offset = "0x8115E8", VA = "0x8115E8")]
		private void parentHandGraphics(Grabber g)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x812260", Offset = "0x812260", VA = "0x812260")]
		private void setupConfigJoint(Grabber g)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x812C1C", Offset = "0x812C1C", VA = "0x812C1C")]
		private void removeConfigJoint()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x81205C", Offset = "0x81205C", VA = "0x81205C")]
		private void addGrabber(Grabber g)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x812CD8", Offset = "0x812CD8", VA = "0x812CD8")]
		private void removeGrabber(Grabber g)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x80F0BC", Offset = "0x80F0BC", VA = "0x80F0BC")]
		private void movePosition(Vector3 worldPosition)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x80F1A4", Offset = "0x80F1A4", VA = "0x80F1A4")]
		private void moveRotation(Quaternion worldRotation)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x811298", Offset = "0x811298", VA = "0x811298")]
		private Vector3 getRemotePosition(Grabber toGrabber)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x80EEBC", Offset = "0x80EEBC", VA = "0x80EEBC")]
		private Quaternion getRemoteRotation(Grabber grabber)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x80F298", Offset = "0x80F298", VA = "0x80F298")]
		private void filterCollisions()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x813858", Offset = "0x813858", VA = "0x813858", Slot = "23")]
		public virtual BNGPlayerController GetBNGPlayerController()
		{
			return null;
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x813998", Offset = "0x813998", VA = "0x813998", Slot = "24")]
		public virtual void RequestSpringTime(float seconds)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x8139DC", Offset = "0x8139DC", VA = "0x8139DC", Slot = "25")]
		public virtual void AddValidGrabber(Grabber grabber)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x813AC4", Offset = "0x813AC4", VA = "0x813AC4", Slot = "26")]
		public virtual void RemoveValidGrabber(Grabber grabber)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x813B64", Offset = "0x813B64", VA = "0x813B64")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x813CF4", Offset = "0x813CF4", VA = "0x813CF4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x813DDC", Offset = "0x813DDC", VA = "0x813DDC")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x813EA8", Offset = "0x813EA8", VA = "0x813EA8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x813EB4", Offset = "0x813EB4", VA = "0x813EB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x813EE0", Offset = "0x813EE0", VA = "0x813EE0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x814034", Offset = "0x814034", VA = "0x814034")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class GrabbableChild : MonoBehaviour
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1398", Offset = "0x3C1398")]
		public Grabbable ParentGrabbable;

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x8140B0", Offset = "0x8140B0", VA = "0x8140B0")]
		public GrabbableChild()
		{
		}
	}
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B8D68", Offset = "0x3B8D68")]
	public abstract class GrabbableEvents : MonoBehaviour
	{
		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Grabbable grab;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Grabber thisGrabber;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected InputBridge input;

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x8141C8", Offset = "0x8141C8", VA = "0x8141C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x81425C", Offset = "0x81425C", VA = "0x81425C", Slot = "4")]
		public virtual void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x814264", Offset = "0x814264", VA = "0x814264", Slot = "5")]
		public virtual void OnRelease()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x814268", Offset = "0x814268", VA = "0x814268", Slot = "6")]
		public virtual void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x81426C", Offset = "0x81426C", VA = "0x81426C", Slot = "7")]
		public virtual void OnBecomesClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x814270", Offset = "0x814270", VA = "0x814270", Slot = "8")]
		public virtual void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x814274", Offset = "0x814274", VA = "0x814274", Slot = "9")]
		public virtual void OnNoLongerClosestGrabbable(Grabber touchingGrabber)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x814278", Offset = "0x814278", VA = "0x814278", Slot = "10")]
		public virtual void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x81427C", Offset = "0x81427C", VA = "0x81427C", Slot = "11")]
		public virtual void OnBecomesClosestRemoteGrabbable(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x814280", Offset = "0x814280", VA = "0x814280", Slot = "12")]
		public virtual void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x814284", Offset = "0x814284", VA = "0x814284", Slot = "13")]
		public virtual void OnNoLongerClosestRemoteGrabbable(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x814288", Offset = "0x814288", VA = "0x814288", Slot = "14")]
		public virtual void OnGrip(float gripValue)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x80A0FC", Offset = "0x80A0FC", VA = "0x80A0FC", Slot = "15")]
		public virtual void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x81428C", Offset = "0x81428C", VA = "0x81428C", Slot = "16")]
		public virtual void OnTriggerDown()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x80A148", Offset = "0x80A148", VA = "0x80A148", Slot = "17")]
		public virtual void OnTriggerUp()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x814290", Offset = "0x814290", VA = "0x814290", Slot = "18")]
		public virtual void OnButton1()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x814294", Offset = "0x814294", VA = "0x814294", Slot = "19")]
		public virtual void OnButton1Down()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x814298", Offset = "0x814298", VA = "0x814298", Slot = "20")]
		public virtual void OnButton1Up()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x81429C", Offset = "0x81429C", VA = "0x81429C", Slot = "21")]
		public virtual void OnButton2()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x8142A0", Offset = "0x8142A0", VA = "0x8142A0", Slot = "22")]
		public virtual void OnButton2Down()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x8142A4", Offset = "0x8142A4", VA = "0x8142A4", Slot = "23")]
		public virtual void OnButton2Up()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x8142A8", Offset = "0x8142A8", VA = "0x8142A8", Slot = "24")]
		public virtual void OnSnapZoneEnter()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x8142AC", Offset = "0x8142AC", VA = "0x8142AC", Slot = "25")]
		public virtual void OnSnapZoneExit()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x80A154", Offset = "0x80A154", VA = "0x80A154")]
		protected GrabbableEvents()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025C")]
	public class FloatEvent : UnityEvent<float>
	{
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x80A15C", Offset = "0x80A15C", VA = "0x80A15C")]
		public FloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025D")]
	public class FloatFloatEvent : UnityEvent<float, float>
	{
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x80A1B0", Offset = "0x80A1B0", VA = "0x80A1B0")]
		public FloatFloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025E")]
	public class GrabberEvent : UnityEvent<Grabber>
	{
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x9A561C", Offset = "0x9A561C", VA = "0x9A561C")]
		public GrabberEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025F")]
	public class GrabbableEvent : UnityEvent<Grabbable>
	{
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x814174", Offset = "0x814174", VA = "0x814174")]
		public GrabbableEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000260")]
	public class RaycastHitEvent : UnityEvent<RaycastHit>
	{
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xFD6C84", Offset = "0xFD6C84", VA = "0xFD6C84")]
		public RaycastHitEvent()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class GrabbablesInTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Collider, Grabbable> NearbyGrabbables;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<Collider, Grabbable> ValidGrabbables;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable ClosestGrabbable;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<Collider, Grabbable> ValidRemoteGrabbables;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Grabbable ClosestRemoteGrabbable;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool FireGrabbableEvents;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable _closest;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _lastDistance;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _thisDistance;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Collider, Grabbable> _valids;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Collider, Grabbable> _filtered;

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x9A1AA8", Offset = "0x9A1AA8", VA = "0x9A1AA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x9A1B50", Offset = "0x9A1B50", VA = "0x9A1B50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x9A1B74", Offset = "0x9A1B74", VA = "0x9A1B74")]
		private void updateClosestGrabbable()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x9A1BC8", Offset = "0x9A1BC8", VA = "0x9A1BC8")]
		private void updateClosestRemoteGrabbables()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x9A216C", Offset = "0x9A216C", VA = "0x9A216C", Slot = "4")]
		public virtual Grabbable GetClosestGrabbable(Dictionary<Collider, Grabbable> grabbables, bool remoteOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x9A1F54", Offset = "0x9A1F54", VA = "0x9A1F54")]
		private Dictionary<Collider, Grabbable> getValidGrabbables(Dictionary<Collider, Grabbable> grabs)
		{
			return null;
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x9A2408", Offset = "0x9A2408", VA = "0x9A2408", Slot = "5")]
		protected virtual bool isValidGrabbale(Collider col, Grabbable grab)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x9A1C64", Offset = "0x9A1C64", VA = "0x9A1C64")]
		private Dictionary<Collider, Grabbable> sanitizeGrabbables(Dictionary<Collider, Grabbable> grabs)
		{
			return null;
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x9A2654", Offset = "0x9A2654", VA = "0x9A2654", Slot = "6")]
		public virtual void AddNearbyGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x9A2790", Offset = "0x9A2790", VA = "0x9A2790", Slot = "7")]
		public virtual void RemoveNearbyGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x9A2880", Offset = "0x9A2880", VA = "0x9A2880", Slot = "8")]
		public virtual void RemoveNearbyGrabbable(Grabbable grabObject)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x9A2A54", Offset = "0x9A2A54", VA = "0x9A2A54", Slot = "9")]
		public virtual void AddValidRemoteGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x9A2D18", Offset = "0x9A2D18", VA = "0x9A2D18", Slot = "10")]
		public virtual void RemoveValidRemoteGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x9A2E08", Offset = "0x9A2E08", VA = "0x9A2E08")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x9A2F74", Offset = "0x9A2F74", VA = "0x9A2F74")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x9A30B0", Offset = "0x9A30B0", VA = "0x9A30B0")]
		public GrabbablesInTrigger()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class GrabbableUnityEvents : GrabbableEvents
	{
		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabberEvent onGrab;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onRelease;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onBecomesClosestGrabbable;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onNoLongerClosestGrabbable;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onBecomesClosestRemoteGrabbable;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onNoLongerClosestRemoteGrabbable;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatEvent onGrip;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FloatEvent onTrigger;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onButton1;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onButton1Down;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent onButton1Up;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEvent onButton2;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent onButton2Down;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent onButton2Up;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent onSnapZoneEnter;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UnityEvent onSnapZoneExit;

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x9A15A8", Offset = "0x9A15A8", VA = "0x9A15A8", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x9A161C", Offset = "0x9A161C", VA = "0x9A161C", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x9A1658", Offset = "0x9A1658", VA = "0x9A1658", Slot = "6")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x9A1694", Offset = "0x9A1694", VA = "0x9A1694", Slot = "8")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x9A16D0", Offset = "0x9A16D0", VA = "0x9A16D0", Slot = "10")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x9A170C", Offset = "0x9A170C", VA = "0x9A170C", Slot = "12")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x9A1748", Offset = "0x9A1748", VA = "0x9A1748", Slot = "14")]
		public override void OnGrip(float gripValue)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x9A17C8", Offset = "0x9A17C8", VA = "0x9A17C8", Slot = "15")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x9A1848", Offset = "0x9A1848", VA = "0x9A1848", Slot = "16")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x9A1884", Offset = "0x9A1884", VA = "0x9A1884", Slot = "17")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x9A18C0", Offset = "0x9A18C0", VA = "0x9A18C0", Slot = "18")]
		public override void OnButton1()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x9A18FC", Offset = "0x9A18FC", VA = "0x9A18FC", Slot = "19")]
		public override void OnButton1Down()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x9A1938", Offset = "0x9A1938", VA = "0x9A1938", Slot = "20")]
		public override void OnButton1Up()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x9A1974", Offset = "0x9A1974", VA = "0x9A1974", Slot = "21")]
		public override void OnButton2()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x9A19B0", Offset = "0x9A19B0", VA = "0x9A19B0", Slot = "22")]
		public override void OnButton2Down()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x9A19EC", Offset = "0x9A19EC", VA = "0x9A19EC", Slot = "23")]
		public override void OnButton2Up()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x9A1A28", Offset = "0x9A1A28", VA = "0x9A1A28", Slot = "24")]
		public override void OnSnapZoneEnter()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x9A1A64", Offset = "0x9A1A64", VA = "0x9A1A64", Slot = "25")]
		public override void OnSnapZoneExit()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x9A1AA0", Offset = "0x9A1AA0", VA = "0x9A1AA0")]
		public GrabbableUnityEvents()
		{
		}
	}
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B8DD0", Offset = "0x3B8DD0")]
	public class Grabber : MonoBehaviour
	{
		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C13D0", Offset = "0x3C13D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C13D0", Offset = "0x3C13D0")]
		public ControllerHand HandSide;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1430", Offset = "0x3C1430")]
		public HoldType DefaultHoldType;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1468", Offset = "0x3C1468")]
		public GrabButton DefaultGrabButton;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C14A0", Offset = "0x3C14A0")]
		public float GripAmount;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C14D8", Offset = "0x3C14D8")]
		public float ReleaseGripAmount;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1510", Offset = "0x3C1510")]
		public float GrabCheckSeconds;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float currentGrabTime;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1548", Offset = "0x3C1548")]
		public Grabbable EquipGrabbableOnStart;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1580", Offset = "0x3C1580")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1580", Offset = "0x3C1580")]
		public Transform HandsGraphics;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform handsGraphicsParent;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 handsGraphicsPosition;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion handsGraphicsRotation;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C15E0", Offset = "0x3C15E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C15E0", Offset = "0x3C15E0")]
		public bool UseOVRControllerVelocity;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1640", Offset = "0x3C1640")]
		public bool UseOVRControllerAngularVelocity;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1678", Offset = "0x3C1678")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1678", Offset = "0x3C1678")]
		public Grabbable HeldGrabbable;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Grabbable previousClosest;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabbable previousClosestRemote;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float LastDropTime;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GrabbablesInTrigger grabsInTrigger;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Grabbable flyingGrabbable;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float flyingTime;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C16D8", Offset = "0x3C16D8")]
		private Vector3 <handsGraphicsGrabberOffset>k__BackingField;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C16E8", Offset = "0x3C16E8")]
		private Vector3 <handsGraphicsGrabberOffsetRotation>k__BackingField;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C16F8", Offset = "0x3C16F8")]
		public bool ForceGrab;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C1708", Offset = "0x3C1708")]
		public bool ForceRelease;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C1718", Offset = "0x3C1718")]
		public Vector3 PreviousPosition;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 previousPosition;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 velocity;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C1728", Offset = "0x3C1728")]
		public Transform DummyTransform;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float averageVelocityCount;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<Vector3> previousVelocities;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<Vector3> previousAngularVelocities;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion previousRotation;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 angularVelocity;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Rigidbody rb;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private InputBridge input;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private ConfigurableJoint joint;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C1738", Offset = "0x3C1738")]
		public bool FreshGrip;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject playSpace;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1748", Offset = "0x3C1748")]
		public GrabbableEvent onGrabEvent;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GrabbableEvent onReleaseEvent;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float angle;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 axis;

		[Token(Token = "0x170001A2")]
		public bool HoldingItem
		{
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x9A30C0", Offset = "0x9A30C0", VA = "0x9A30C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A3")]
		public bool RemoteGrabbingItem
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x9A3134", Offset = "0x9A3134", VA = "0x9A3134")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		public Vector3 handsGraphicsGrabberOffset
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x9A31A8", Offset = "0x9A31A8", VA = "0x9A31A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7164", Offset = "0x3C7164")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x9A31B4", Offset = "0x9A31B4", VA = "0x9A31B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7174", Offset = "0x3C7174")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public Vector3 handsGraphicsGrabberOffsetRotation
		{
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x9A31C0", Offset = "0x9A31C0", VA = "0x9A31C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7184", Offset = "0x3C7184")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x9A31CC", Offset = "0x9A31CC", VA = "0x9A31CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7194", Offset = "0x3C7194")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x9A31D8", Offset = "0x9A31D8", VA = "0x9A31D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x9A381C", Offset = "0x9A381C", VA = "0x9A381C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x9A39F8", Offset = "0x9A39F8", VA = "0x9A39F8")]
		private void updateFreshGrabStatus()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x9A3A78", Offset = "0x9A3A78", VA = "0x9A3A78")]
		private void checkGrabbableEvents()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x9A3F94", Offset = "0x9A3F94", VA = "0x9A3F94")]
		private void updateVelocities()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x9A43F4", Offset = "0x9A43F4", VA = "0x9A43F4", Slot = "4")]
		protected virtual bool inputCheckGrab()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x9A4600", Offset = "0x9A4600", VA = "0x9A4600")]
		private HoldType getHoldType(Grabbable grab)
		{
			return default(HoldType);
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x9A47A4", Offset = "0x9A47A4", VA = "0x9A47A4", Slot = "5")]
		public virtual GrabButton GetGrabButton(Grabbable grab)
		{
			return default(GrabButton);
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x9A4520", Offset = "0x9A4520", VA = "0x9A4520")]
		private Grabbable getClosestOrRemote()
		{
			return null;
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x9A4210", Offset = "0x9A4210", VA = "0x9A4210")]
		private bool inputCheckRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x9A4308", Offset = "0x9A4308", VA = "0x9A4308")]
		private float getGrabInput(GrabButton btn)
		{
			return default(float);
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x9A46AC", Offset = "0x9A46AC", VA = "0x9A46AC")]
		private bool getToggleInput(GrabButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x9A4850", Offset = "0x9A4850", VA = "0x9A4850", Slot = "6")]
		public virtual bool TryGrab()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x9A49BC", Offset = "0x9A49BC", VA = "0x9A49BC", Slot = "7")]
		public virtual void GrabGrabbable(Grabbable item)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x9A4B38", Offset = "0x9A4B38", VA = "0x9A4B38", Slot = "8")]
		public virtual void DidDrop()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x9A4C2C", Offset = "0x9A4C2C", VA = "0x9A4C2C", Slot = "9")]
		public virtual void HideHandGraphics()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x9A4CD8", Offset = "0x9A4CD8", VA = "0x9A4CD8", Slot = "10")]
		public virtual void ResetHandGraphics()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x9A4DEC", Offset = "0x9A4DEC", VA = "0x9A4DEC", Slot = "11")]
		public virtual void TryRelease()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x9A3960", Offset = "0x9A3960", VA = "0x9A3960")]
		private void resetFlyingGrabbable()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x9A4E94", Offset = "0x9A4E94", VA = "0x9A4E94", Slot = "12")]
		public virtual Vector3 GetGrabberVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x9A4EA0", Offset = "0x9A4EA0", VA = "0x9A4EA0", Slot = "13")]
		public virtual Vector3 GetGrabberAveragedVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x9A5098", Offset = "0x9A5098", VA = "0x9A5098", Slot = "14")]
		public virtual Vector3 GetGrabberAveragedAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x9A4F98", Offset = "0x9A4F98", VA = "0x9A4F98")]
		private Vector3 GetAveragedVector(List<Vector3> vectors)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x9A5208", Offset = "0x9A5208", VA = "0x9A5208", Slot = "15")]
		public virtual Vector3 GetGrabberAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x9A5218", Offset = "0x9A5218", VA = "0x9A5218")]
		public Grabber()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class GrabPoint : MonoBehaviour
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandPoseId HandPose;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1780", Offset = "0x3C1780")]
		public bool LeftHandIsValid;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C17B8", Offset = "0x3C17B8")]
		public bool RightHandIsValid;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C17F0", Offset = "0x3C17F0")]
		public Transform HandPosition;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1828", Offset = "0x3C1828")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3C1828", Offset = "0x3C1828")]
		public float MaxDegreeDifferenceAllowed;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1880", Offset = "0x3C1880")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3C1880", Offset = "0x3C1880")]
		public float IndexBlendMin;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C18D4", Offset = "0x3C18D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3C18D4", Offset = "0x3C18D4")]
		public float IndexBlendMax;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1928", Offset = "0x3C1928")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3C1928", Offset = "0x3C1928")]
		public float ThumbBlendMin;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C197C", Offset = "0x3C197C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x3C197C", Offset = "0x3C197C")]
		public float ThumbBlendMax;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 previewModelOffsetLeft;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 previewModelOffsetRight;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Grabber sceneLeftGrabber;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Grabber sceneRightGrabber;

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x80DC0C", Offset = "0x80DC0C", VA = "0x80DC0C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x80DCE8", Offset = "0x80DCE8", VA = "0x80DCE8")]
		public void UpdatePreviewTransforms()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x80DC30", Offset = "0x80DC30", VA = "0x80DC30")]
		private void updateChildAnimators()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x80E024", Offset = "0x80E024", VA = "0x80E024")]
		public GrabPoint()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class HandModelSelector : MonoBehaviour
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C19D0", Offset = "0x3C19D0")]
		public int DefaultHandsModel;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1A08", Offset = "0x3C1A08")]
		public bool LoadHandSelectionFromPrefs;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1A40", Offset = "0x3C1A40")]
		public bool RightThumbstickToggleHands;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1A78", Offset = "0x3C1A78")]
		public Transform LeftHandGFXHolder;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1AB0", Offset = "0x3C1AB0")]
		public Transform RightHandGFXHolder;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _selectedHandGFX;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1AE8", Offset = "0x3C1AE8")]
		public CharacterIK IKBody;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIPointer uiPoint;

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x9AA314", Offset = "0x9AA314", VA = "0x9AA314")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x9AA834", Offset = "0x9AA834", VA = "0x9AA834")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x9AA3A8", Offset = "0x9AA3A8", VA = "0x9AA3A8")]
		public void ChangeHandsModel(int childIndex, bool save = false)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x9AA8C8", Offset = "0x9AA8C8", VA = "0x9AA8C8")]
		public HandModelSelector()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class HeadCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScreenFader fader;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float FadeDistance;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float FadeOutDistance;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinFade;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxFade;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeSpeed;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1B20", Offset = "0x3C1B20")]
		public bool CheckOnlyIfHMDActive;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool IgnoreHeldGrabbables;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform DistanceTransform;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int cols;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float currentFade;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastFade;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Collider> collisions;

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x9ADF84", Offset = "0x9ADF84", VA = "0x9ADF84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x9ADFF0", Offset = "0x9ADFF0", VA = "0x9ADFF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x9AE28C", Offset = "0x9AE28C", VA = "0x9AE28C")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x9AE4F8", Offset = "0x9AE4F8", VA = "0x9AE4F8")]
		private void OnCollisionExit(Collision col)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x9AE600", Offset = "0x9AE600", VA = "0x9AE600")]
		public HeadCollisionFade()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class HingeHelper : GrabbableEvents
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1B58", Offset = "0x3C1B58")]
		public bool SnapToDegrees;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1B90", Offset = "0x3C1B90")]
		public float SnapDegrees;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1BC8", Offset = "0x3C1BC8")]
		public Transform SnapGraphics;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1C00", Offset = "0x3C1C00")]
		public AudioClip SnapSound;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1C38", Offset = "0x3C1C38")]
		public float RandomizePitch;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1C70", Offset = "0x3C1C70")]
		public float SnapHaptics;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text LabelToUpdate;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FloatEvent onHingeChange;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatEvent onHingeSnapChange;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigid;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _lastDegrees;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _lastSnapDegrees;

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x9AF888", Offset = "0x9AF888", VA = "0x9AF888")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x9AF8E4", Offset = "0x9AF8E4", VA = "0x9AF8E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x9AFB90", Offset = "0x9AFB90", VA = "0x9AFB90")]
		public void OnSnapChange(float yAngle)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x9AFD84", Offset = "0x9AFD84", VA = "0x9AFD84", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x9AFB20", Offset = "0x9AFB20", VA = "0x9AFB20")]
		public void OnHingeChange(float hingeAmount)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x9AFAFC", Offset = "0x9AFAFC", VA = "0x9AFAFC")]
		private float getSmoothedValue(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x9AFDE4", Offset = "0x9AFDE4", VA = "0x9AFDE4")]
		public HingeHelper()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public enum ControllerHand
	{
		[Token(Token = "0x4000E8C")]
		Left,
		[Token(Token = "0x4000E8D")]
		Right,
		[Token(Token = "0x4000E8E")]
		None
	}
	[Token(Token = "0x2000269")]
	public enum ControllerBinding
	{
		[Token(Token = "0x4000E90")]
		None,
		[Token(Token = "0x4000E91")]
		AButton,
		[Token(Token = "0x4000E92")]
		AButtonDown,
		[Token(Token = "0x4000E93")]
		BButton,
		[Token(Token = "0x4000E94")]
		BButtonDown,
		[Token(Token = "0x4000E95")]
		XButton,
		[Token(Token = "0x4000E96")]
		XButtonDown,
		[Token(Token = "0x4000E97")]
		YButton,
		[Token(Token = "0x4000E98")]
		YButtonDown,
		[Token(Token = "0x4000E99")]
		LeftTrigger,
		[Token(Token = "0x4000E9A")]
		LeftTriggerDown,
		[Token(Token = "0x4000E9B")]
		LeftGrip,
		[Token(Token = "0x4000E9C")]
		LeftGripDown,
		[Token(Token = "0x4000E9D")]
		LeftThumbstick,
		[Token(Token = "0x4000E9E")]
		LeftThumbstickDown,
		[Token(Token = "0x4000E9F")]
		RightTrigger,
		[Token(Token = "0x4000EA0")]
		RightTriggerDown,
		[Token(Token = "0x4000EA1")]
		RightGrip,
		[Token(Token = "0x4000EA2")]
		RightGripDown,
		[Token(Token = "0x4000EA3")]
		RightThumbstick,
		[Token(Token = "0x4000EA4")]
		RightThumbstickDown,
		[Token(Token = "0x4000EA5")]
		StartButton,
		[Token(Token = "0x4000EA6")]
		StartButtonDown,
		[Token(Token = "0x4000EA7")]
		BackButton,
		[Token(Token = "0x4000EA8")]
		BackButtonDown
	}
	[Token(Token = "0x200026A")]
	public enum InputAxis
	{
		[Token(Token = "0x4000EAA")]
		None,
		[Token(Token = "0x4000EAB")]
		LeftThumbStickAxis,
		[Token(Token = "0x4000EAC")]
		LeftTouchPadAxis,
		[Token(Token = "0x4000EAD")]
		RightThumbStickAxis,
		[Token(Token = "0x4000EAE")]
		RightTouchPadAxis
	}
	[Token(Token = "0x200026B")]
	public enum ControllerType
	{
		[Token(Token = "0x4000EB0")]
		None,
		[Token(Token = "0x4000EB1")]
		Unknown,
		[Token(Token = "0x4000EB2")]
		OculusTouch,
		[Token(Token = "0x4000EB3")]
		Wand,
		[Token(Token = "0x4000EB4")]
		Knuckles
	}
	[Token(Token = "0x200026C")]
	public enum HandControl
	{
		[Token(Token = "0x4000EB6")]
		LeftGrip,
		[Token(Token = "0x4000EB7")]
		RightGrip,
		[Token(Token = "0x4000EB8")]
		LeftTrigger,
		[Token(Token = "0x4000EB9")]
		RightTrigger,
		[Token(Token = "0x4000EBA")]
		None
	}
	[Token(Token = "0x200026D")]
	public enum GrabButton
	{
		[Token(Token = "0x4000EBC")]
		Grip,
		[Token(Token = "0x4000EBD")]
		Trigger,
		[Token(Token = "0x4000EBE")]
		Inherit
	}
	[Token(Token = "0x200026E")]
	public enum HoldType
	{
		[Token(Token = "0x4000EC0")]
		HoldDown,
		[Token(Token = "0x4000EC1")]
		Toggle,
		[Token(Token = "0x4000EC2")]
		Inherit
	}
	[Token(Token = "0x200026F")]
	public enum XRInputSource
	{
		[Token(Token = "0x4000EC4")]
		XRInput,
		[Token(Token = "0x4000EC5")]
		OVRInput,
		[Token(Token = "0x4000EC6")]
		SteamVR
	}
	[Token(Token = "0x2000270")]
	public enum SDKProvider
	{
		[Token(Token = "0x4000EC8")]
		Unknown,
		[Token(Token = "0x4000EC9")]
		OculusSDK,
		[Token(Token = "0x4000ECA")]
		OpenVR
	}
	[Token(Token = "0x2000271")]
	public class InputBridge : MonoBehaviour
	{
		[Token(Token = "0x20003C6")]
		public delegate void InputAction();

		[Token(Token = "0x20003C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B96CC", Offset = "0x3B96CC")]
		private sealed class <changeOriginModeRoutine>d__108 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrackingOriginModeFlags trackingOrigin;

			[Token(Token = "0x1700025E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001475")]
				[Address(RVA = "0x5F922C", Offset = "0x5F922C", VA = "0x5F922C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001477")]
				[Address(RVA = "0x5F9274", Offset = "0x5F9274", VA = "0x5F9274", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001472")]
			[Address(RVA = "0x5F8FB0", Offset = "0x5F8FB0", VA = "0x5F8FB0")]
			[DebuggerHidden]
			public <changeOriginModeRoutine>d__108(int <>1__state)
			{
			}

			[Token(Token = "0x6001473")]
			[Address(RVA = "0x5F8FDC", Offset = "0x5F8FDC", VA = "0x5F8FDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001474")]
			[Address(RVA = "0x5F8FE0", Offset = "0x5F8FE0", VA = "0x5F8FE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001476")]
			[Address(RVA = "0x5F9234", Offset = "0x5F9234", VA = "0x5F9234", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B96DC", Offset = "0x3B96DC")]
		private sealed class <Vibrate>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x17000260")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600147B")]
				[Address(RVA = "0x5F8F60", Offset = "0x5F8F60", VA = "0x5F8F60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000261")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600147D")]
				[Address(RVA = "0x5F8FA8", Offset = "0x5F8FA8", VA = "0x5F8FA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001478")]
			[Address(RVA = "0x5F8E94", Offset = "0x5F8E94", VA = "0x5F8E94")]
			[DebuggerHidden]
			public <Vibrate>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x6001479")]
			[Address(RVA = "0x5F8EC0", Offset = "0x5F8EC0", VA = "0x5F8EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600147A")]
			[Address(RVA = "0x5F8EC4", Offset = "0x5F8EC4", VA = "0x5F8EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600147C")]
			[Address(RVA = "0x5F8F68", Offset = "0x5F8F68", VA = "0x5F8F68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputBridge _instance;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public XRInputSource InputSource;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public TrackingOriginModeFlags TrackingOrigin;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1CC8", Offset = "0x3C1CC8")]
		public float LeftGrip;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool LeftGripDown;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float RightGrip;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool RightGripDown;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1D00", Offset = "0x3C1D00")]
		public float LeftTrigger;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool LeftTriggerNear;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool LeftTriggerUp;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool LeftTriggerDown;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float RightTrigger;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool RightTriggerUp;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool RightTriggerDown;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool RightTriggerNear;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool LeftThumbNear;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool RightThumbNear;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1D38", Offset = "0x3C1D38")]
		public bool LeftThumbstickDown;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool LeftThumbstickUp;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool RightThumbstickDown;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool RightThumbstickUp;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool LeftThumbstick;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool RightThumbstick;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1D70", Offset = "0x3C1D70")]
		public bool AButton;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1DA8", Offset = "0x3C1DA8")]
		public bool AButtonDown;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool AButtonUp;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool BButton;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1DE0", Offset = "0x3C1DE0")]
		public bool BButtonDown;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool BButtonUp;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool XButton;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1E18", Offset = "0x3C1E18")]
		public bool XButtonDown;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool XButtonUp;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool YButton;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool YButtonDown;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool YButtonUp;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool StartButton;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool StartButtonDown;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool BackButton;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool BackButtonDown;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1E50", Offset = "0x3C1E50")]
		public Vector2 LeftThumbstickAxis;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 RightThumbstickAxis;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2 LeftTouchPadAxis;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector2 RightTouchPadAxis;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1E88", Offset = "0x3C1E88")]
		public float ThumbstickDeadzoneX;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1EC0", Offset = "0x3C1EC0")]
		public float ThumbstickDeadzoneY;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<InputDevice> devices;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _downThreshold;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool XRInputSupported;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool SteamVRSupport;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C1EF8", Offset = "0x3C1EF8")]
		public ControllerType ConnectedControllerType;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1F30", Offset = "0x3C1F30")]
		public bool HMDActive;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C1F68", Offset = "0x3C1F68")]
		private SDKProvider <LoadedSDK>k__BackingField;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C1F78", Offset = "0x3C1F78")]
		private bool <IsOculusDevice>k__BackingField;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C1F88", Offset = "0x3C1F88")]
		private bool <IsOculusQuest>k__BackingField;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C1F98", Offset = "0x3C1F98")]
		private bool <IsHTCDevice>k__BackingField;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C1FA8", Offset = "0x3C1FA8")]
		private bool <IsValveIndexController>k__BackingField;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1FB8", Offset = "0x3C1FB8")]
		public bool SupportsBothTouchPadAndJoystick;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C1FF0", Offset = "0x3C1FF0")]
		public bool SupportsIndexTouch;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2028", Offset = "0x3C2028")]
		public bool SupportsThumbTouch;

		[Token(Token = "0x170001A6")]
		public static InputBridge Instance
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x9A3638", Offset = "0x9A3638", VA = "0x9A3638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		public SDKProvider LoadedSDK
		{
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x9B1128", Offset = "0x9B1128", VA = "0x9B1128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C71A4", Offset = "0x3C71A4")]
			get
			{
				return default(SDKProvider);
			}
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x9B1130", Offset = "0x9B1130", VA = "0x9B1130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C71B4", Offset = "0x3C71B4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public bool IsOculusDevice
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x9B1138", Offset = "0x9B1138", VA = "0x9B1138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C71C4", Offset = "0x3C71C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x9B1140", Offset = "0x9B1140", VA = "0x9B1140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C71D4", Offset = "0x3C71D4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public bool IsOculusQuest
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x9B114C", Offset = "0x9B114C", VA = "0x9B114C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C71E4", Offset = "0x3C71E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x9B1154", Offset = "0x9B1154", VA = "0x9B1154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C71F4", Offset = "0x3C71F4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public bool IsHTCDevice
		{
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x9B1160", Offset = "0x9B1160", VA = "0x9B1160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7204", Offset = "0x3C7204")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x9B1168", Offset = "0x9B1168", VA = "0x9B1168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7214", Offset = "0x3C7214")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public bool IsValveIndexController
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x9B1174", Offset = "0x9B1174", VA = "0x9B1174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7224", Offset = "0x3C7224")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x9B117C", Offset = "0x9B117C", VA = "0x9B117C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7234", Offset = "0x3C7234")]
			private set
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event InputAction OnInputsUpdated
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x9B1188", Offset = "0x9B1188", VA = "0x9B1188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7244", Offset = "0x3C7244")]
			add
			{
			}
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x9B1280", Offset = "0x9B1280", VA = "0x9B1280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7254", Offset = "0x3C7254")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x9B1378", Offset = "0x9B1378", VA = "0x9B1378")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x9B16CC", Offset = "0x9B16CC", VA = "0x9B16CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x9B1704", Offset = "0x9B1704", VA = "0x9B1704")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x9B1738", Offset = "0x9B1738", VA = "0x9B1738", Slot = "4")]
		public virtual void UpdateInputs()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x9B22D0", Offset = "0x9B22D0", VA = "0x9B22D0", Slot = "5")]
		public virtual void UpdateSteamInput()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x9B22D4", Offset = "0x9B22D4", VA = "0x9B22D4", Slot = "6")]
		public virtual void UpdateDeviceActive()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x9B21DC", Offset = "0x9B21DC", VA = "0x9B21DC")]
		private float correctValue(float inputValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x9B2470", Offset = "0x9B2470", VA = "0x9B2470")]
		public bool GetControllerBindingValue(ControllerBinding val)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x9B25B8", Offset = "0x9B25B8", VA = "0x9B25B8")]
		public Vector2 GetInputAxisValue(InputAxis val)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x9B217C", Offset = "0x9B217C", VA = "0x9B217C")]
		private Vector2 ApplyDeadZones(Vector2 pos, float deadZoneX, float deadZoneY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x9B2614", Offset = "0x9B2614", VA = "0x9B2614")]
		private void onDeviceChanged(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x9B15EC", Offset = "0x9B15EC", VA = "0x9B15EC")]
		private void setDeviceProperties()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x9B2618", Offset = "0x9B2618", VA = "0x9B2618", Slot = "7")]
		public virtual bool GetSupportsIndexTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x9B2638", Offset = "0x9B2638", VA = "0x9B2638", Slot = "8")]
		public virtual SDKProvider GetLoadedSDK()
		{
			return default(SDKProvider);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x9B26EC", Offset = "0x9B26EC", VA = "0x9B26EC", Slot = "9")]
		public virtual bool GetSupportsThumbTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x9B270C", Offset = "0x9B270C", VA = "0x9B270C", Slot = "10")]
		public virtual bool GetIsOculusDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x9B27CC", Offset = "0x9B27CC", VA = "0x9B27CC", Slot = "11")]
		public virtual bool GetIsOculusQuest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x9B2900", Offset = "0x9B2900", VA = "0x9B2900", Slot = "12")]
		public virtual bool GetIsHTCDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x9B2394", Offset = "0x9B2394", VA = "0x9B2394")]
		public InputDevice GetHMD()
		{
			return default(InputDevice);
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x9B1F54", Offset = "0x9B1F54", VA = "0x9B1F54")]
		public InputDevice GetLeftController()
		{
			return default(InputDevice);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x9B2030", Offset = "0x9B2030", VA = "0x9B2030")]
		public InputDevice GetRightController()
		{
			return default(InputDevice);
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x9B2994", Offset = "0x9B2994", VA = "0x9B2994", Slot = "13")]
		public virtual ControllerType GetControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x9B29C8", Offset = "0x9B29C8", VA = "0x9B29C8", Slot = "14")]
		public virtual string GetControllerName()
		{
			return null;
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x9B2ABC", Offset = "0x9B2ABC", VA = "0x9B2ABC", Slot = "15")]
		public virtual bool GetIsValveIndexController()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x9B219C", Offset = "0x9B219C", VA = "0x9B219C")]
		private float getFeatureUsage(InputDevice device, InputFeatureUsage<float> usage, bool clamp = true)
		{
			return default(float);
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x9B210C", Offset = "0x9B210C", VA = "0x9B210C")]
		private bool getFeatureUsage(InputDevice device, InputFeatureUsage<bool> usage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x9B2144", Offset = "0x9B2144", VA = "0x9B2144")]
		private Vector2 getFeatureUsage(InputDevice device, InputFeatureUsage<Vector2> usage)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x9B2BC0", Offset = "0x9B2BC0", VA = "0x9B2BC0", Slot = "16")]
		public virtual void SetTrackingOriginMode(TrackingOriginModeFlags trackingOrigin)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x9B2BEC", Offset = "0x9B2BEC", VA = "0x9B2BEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C7264", Offset = "0x3C7264")]
		private IEnumerator changeOriginModeRoutine(TrackingOriginModeFlags trackingOrigin)
		{
			return null;
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x9AA0BC", Offset = "0x9AA0BC", VA = "0x9AA0BC")]
		public void VibrateController(float frequency, float amplitude, float duration, ControllerHand hand)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x9B2C60", Offset = "0x9B2C60", VA = "0x9B2C60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C72CC", Offset = "0x3C72CC")]
		private IEnumerator Vibrate(float frequency, float amplitude, float duration, ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x9B2CD4", Offset = "0x9B2CD4", VA = "0x9B2CD4")]
		public InputBridge()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class JoystickControl : MonoBehaviour
	{
		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinDegrees;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxDegrees;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LeverPercentageX;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float LeverPercentageZ;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UseSmoothLook;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SmoothLookSpeed;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool KinematicWhileInactive;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FloatFloatEvent onJoystickChange;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabbable grab;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rb;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 currentRotation;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float angleX;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float angleY;

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x97C204", Offset = "0x97C204", VA = "0x97C204")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x97C284", Offset = "0x97C284", VA = "0x97C284")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x97C504", Offset = "0x97C504", VA = "0x97C504")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x97C508", Offset = "0x97C508", VA = "0x97C508")]
		private void doJoystickLook()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x97C8D0", Offset = "0x97C8D0", VA = "0x97C8D0", Slot = "4")]
		public virtual void OnJoystickChange(float leverX, float leverY)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x97C948", Offset = "0x97C948", VA = "0x97C948")]
		public JoystickControl()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class Lever : MonoBehaviour
	{
		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody ParentRigidbody;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip SwitchOnSound;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SwitchOffSound;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2070", Offset = "0x3C2070")]
		public float SwitchTolerance;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C20A8", Offset = "0x3C20A8")]
		public float LeverPercentage;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C20E0", Offset = "0x3C20E0")]
		public bool UseSmoothLook;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2118", Offset = "0x3C2118")]
		public float SmoothLookSpeed;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2150", Offset = "0x3C2150")]
		public bool AllowPhysicsForces;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2188", Offset = "0x3C2188")]
		public bool ReturnToCenter;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C21C0", Offset = "0x3C21C0")]
		public float ReturnLookSpeed;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C21F8", Offset = "0x3C21F8")]
		public bool SnapToGrabber;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2230", Offset = "0x3C2230")]
		public UnityEvent onLeverDown;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2268", Offset = "0x3C2268")]
		public UnityEvent onLeverUp;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C22A0", Offset = "0x3C22A0")]
		public FloatEvent onLeverChange;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Grabbable grab;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rb;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AudioSource audioSource;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool switchedOn;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ConfigurableJoint configJoint;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private HingeJoint hingeJoint;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion initialOffset;

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x97FED0", Offset = "0x97FED0", VA = "0x97FED0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x9800A4", Offset = "0x9800A4", VA = "0x9800A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x980258", Offset = "0x980258", VA = "0x980258", Slot = "4")]
		public virtual float GetAnglePercentage(float currentAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x980414", Offset = "0x980414", VA = "0x980414")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x980418", Offset = "0x980418", VA = "0x980418")]
		private void doLeverLook()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x9808B4", Offset = "0x9808B4", VA = "0x9808B4", Slot = "5")]
		public virtual void OnLeverChange(float percentage)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x980924", Offset = "0x980924", VA = "0x980924", Slot = "6")]
		public virtual void OnLeverDown()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x9809DC", Offset = "0x9809DC", VA = "0x9809DC", Slot = "7")]
		public virtual void OnLeverUp()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x980A98", Offset = "0x980A98", VA = "0x980A98")]
		public Lever()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class LocomotionManager : MonoBehaviour
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C22D8", Offset = "0x3C22D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C22D8", Offset = "0x3C22D8")]
		public LocomotionType DefaultLocomotion;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2338", Offset = "0x3C2338")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2338", Offset = "0x3C2338")]
		public bool LoadLocomotionFromPrefs;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2398", Offset = "0x3C2398")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2398", Offset = "0x3C2398")]
		public List<ControllerBinding> locomotionToggleInput;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C23F8", Offset = "0x3C23F8")]
		public bool LeftThumbstickToggleLocomotionOculus;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BNGPlayerController player;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerTeleport teleport;

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x9836F0", Offset = "0x9836F0", VA = "0x9836F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x98383C", Offset = "0x98383C", VA = "0x98383C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x983A18", Offset = "0x983A18", VA = "0x983A18")]
		public void UpdateTeleportStatus()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x9837B4", Offset = "0x9837B4", VA = "0x9837B4")]
		public void ChangeLocomotion(LocomotionType locomotionType, bool save)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x983918", Offset = "0x983918", VA = "0x983918")]
		public bool CheckLocomotionTypeInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x983A4C", Offset = "0x983A4C", VA = "0x983A4C")]
		public LocomotionManager()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public enum RotationMechanic
	{
		[Token(Token = "0x4000F30")]
		Snap,
		[Token(Token = "0x4000F31")]
		Smooth
	}
	[Token(Token = "0x2000276")]
	public class PlayerRotation : MonoBehaviour
	{
		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2430", Offset = "0x3C2430")]
		public bool AllowInput;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2468", Offset = "0x3C2468")]
		public List<InputAxis> inputAxis;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C24A0", Offset = "0x3C24A0")]
		public RotationMechanic RotationType;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C24D8", Offset = "0x3C24D8")]
		public float SnapRotationAmount;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2510", Offset = "0x3C2510")]
		public float SnapInputAmount;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2548", Offset = "0x3C2548")]
		public float SmoothTurnSpeed;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2580", Offset = "0x3C2580")]
		public float SmoothTurnMinInput;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C25B8", Offset = "0x3C25B8")]
		public bool AllowKeyboardInputs;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float recentSnapTurnTime;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationAmount;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float previousXInput;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BNGPlayerController player;

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xFD1020", Offset = "0xFD1020", VA = "0xFD1020")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xFD107C", Offset = "0xFD107C", VA = "0xFD107C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xFD10EC", Offset = "0xFD10EC", VA = "0xFD10EC", Slot = "4")]
		public virtual float GetAxisInput()
		{
			return default(float);
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xFD1208", Offset = "0xFD1208", VA = "0xFD1208", Slot = "5")]
		public virtual void DoSnapRotation(float xInput)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xFD1434", Offset = "0xFD1434", VA = "0xFD1434", Slot = "6")]
		public virtual bool RecentlySnapTurned()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xFD1470", Offset = "0xFD1470", VA = "0xFD1470", Slot = "7")]
		public virtual void DoSmoothRotation(float xInput)
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xFD1560", Offset = "0xFD1560", VA = "0xFD1560")]
		public PlayerRotation()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public enum TeleportControls
	{
		[Token(Token = "0x4000F3F")]
		ThumbstickRotate,
		[Token(Token = "0x4000F40")]
		ThumbstickDown,
		[Token(Token = "0x4000F41")]
		BButton
	}
	[Token(Token = "0x2000278")]
	public class PlayerTeleport : MonoBehaviour
	{
		[Token(Token = "0x20003C9")]
		public delegate void OnBeforeTeleportAction();

		[Token(Token = "0x20003CA")]
		public delegate void OnAfterTeleportAction();

		[Token(Token = "0x20003CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B96EC", Offset = "0x3B96EC")]
		private sealed class <doTeleport>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerTeleport <>4__this;

			[Token(Token = "0x4001648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 playerDestination;

			[Token(Token = "0x4001649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool rotatePlayer;

			[Token(Token = "0x400164A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion playerRotation;

			[Token(Token = "0x17000262")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001489")]
				[Address(RVA = "0x88A02C", Offset = "0x88A02C", VA = "0x88A02C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000263")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600148B")]
				[Address(RVA = "0x88A074", Offset = "0x88A074", VA = "0x88A074", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001486")]
			[Address(RVA = "0x889D3C", Offset = "0x889D3C", VA = "0x889D3C")]
			[DebuggerHidden]
			public <doTeleport>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6001487")]
			[Address(RVA = "0x889D68", Offset = "0x889D68", VA = "0x889D68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001488")]
			[Address(RVA = "0x889D6C", Offset = "0x889D6C", VA = "0x889D6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600148A")]
			[Address(RVA = "0x88A034", Offset = "0x88A034", VA = "0x88A034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color ValidTeleport;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color InvalidTeleport;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C25F0", Offset = "0x3C25F0")]
		public ControllerHand HandSide;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2628", Offset = "0x3C2628")]
		public Transform TeleportBeginTransform;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2660", Offset = "0x3C2660")]
		public Transform TeleportBeginTransformAlt;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform TeleportDestination;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject TeleportMarker;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform DirectionIndicator;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float MaxRange;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SegmentCount;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float simulationVelocity;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float segmentScale;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LayerMask CollisionLayers;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TeleportControls ControlType;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool AllowTeleportRotation;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool _reachThumbThreshold;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float MaxSlope;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LineRenderer TeleportLine;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CharacterController controller;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BNGPlayerController playerController;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InputBridge input;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform cameraRig;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool aimingTeleport;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool validTeleport;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		private bool teleportationEnabled;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		public bool ApplyGravity;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int _invalidFrames;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _initialLineWidth;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool setVariables;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Collider _hitObject;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 _hitVector;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float _hitAngle;

		[Token(Token = "0x170001AC")]
		private Transform teleportTransform
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0xFD1848", Offset = "0xFD1848", VA = "0xFD1848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private Vector2 handedThumbstickAxis
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0xFD1864", Offset = "0xFD1864", VA = "0xFD1864")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x14000017")]
		public static event OnBeforeTeleportAction OnBeforeTeleport
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0xFD18A8", Offset = "0xFD18A8", VA = "0xFD18A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7334", Offset = "0x3C7334")]
			add
			{
			}
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0xFD1964", Offset = "0xFD1964", VA = "0xFD1964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7344", Offset = "0x3C7344")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event OnAfterTeleportAction OnAfterTeleport
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0xFD1A20", Offset = "0xFD1A20", VA = "0xFD1A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7354", Offset = "0x3C7354")]
			add
			{
			}
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0xFD1AE0", Offset = "0xFD1AE0", VA = "0xFD1AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C7364", Offset = "0x3C7364")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xFD1BA0", Offset = "0xFD1BA0", VA = "0xFD1BA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xFD1BA4", Offset = "0xFD1BA4", VA = "0xFD1BA4")]
		private void setupVariables()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xFD1E0C", Offset = "0xFD1E0C", VA = "0xFD1E0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xFD21EC", Offset = "0xFD21EC", VA = "0xFD21EC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xFD2A2C", Offset = "0xFD2A2C", VA = "0xFD2A2C", Slot = "4")]
		public virtual void ApplyGravityToPlayer()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xFD2B3C", Offset = "0xFD2B3C", VA = "0xFD2B3C")]
		public void EnableTeleportation()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xFD2B48", Offset = "0xFD2B48", VA = "0xFD2B48")]
		public void DisableTeleportation()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xFD2238", Offset = "0xFD2238", VA = "0xFD2238")]
		private void calculateParabola()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xFD2B54", Offset = "0xFD2B54", VA = "0xFD2B54")]
		private bool teleportClear()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xFD2188", Offset = "0xFD2188", VA = "0xFD2188")]
		private void hideTeleport()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xFD1F70", Offset = "0xFD1F70", VA = "0xFD1F70")]
		private void updateTeleport()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xFD2D94", Offset = "0xFD2D94", VA = "0xFD2D94")]
		private void rotateMarker()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xFD1FC4", Offset = "0xFD1FC4", VA = "0xFD1FC4")]
		private void tryTeleport()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xFD2FBC", Offset = "0xFD2FBC", VA = "0xFD2FBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C7374", Offset = "0x3C7374")]
		private IEnumerator doTeleport(Vector3 playerDestination, Quaternion playerRotation, bool rotatePlayer)
		{
			return null;
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xFD3088", Offset = "0xFD3088", VA = "0xFD3088")]
		public void TeleportPlayer(Vector3 destination, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xFD30B8", Offset = "0xFD30B8", VA = "0xFD30B8")]
		public void TeleportPlayerToTransform(Transform destination)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xFD3158", Offset = "0xFD3158", VA = "0xFD3158", Slot = "5")]
		public virtual bool KeyDownForTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xFD3348", Offset = "0xFD3348", VA = "0xFD3348", Slot = "6")]
		public virtual bool KeyUpFromTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xFD344C", Offset = "0xFD344C", VA = "0xFD344C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xFD356C", Offset = "0xFD356C", VA = "0xFD356C")]
		public PlayerTeleport()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class RemoteGrabber : MonoBehaviour
	{
		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrabbablesInTrigger ParentGrabber;

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x77C890", Offset = "0x77C890", VA = "0x77C890")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x77CA90", Offset = "0x77CA90", VA = "0x77CA90")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x77CC40", Offset = "0x77CC40", VA = "0x77CC40")]
		public RemoteGrabber()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class Slider : MonoBehaviour
	{
		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _slidePercentage;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatEvent onSliderChange;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastSliderPercentage;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float slideRangeLow;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float slideRangeHigh;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float slideRange;

		[Token(Token = "0x170001AE")]
		public float SlidePercentage
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xFAA608", Offset = "0xFAA608", VA = "0xFAA608")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xFAA610", Offset = "0xFAA610", VA = "0xFAA610")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xFAA724", Offset = "0xFAA724", VA = "0xFAA724")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xFAA7B0", Offset = "0xFAA7B0", VA = "0xFAA7B0", Slot = "4")]
		public virtual void OnSliderChange(float percentage)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xFAA820", Offset = "0xFAA820", VA = "0xFAA820")]
		public Slider()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public enum MovementVector
	{
		[Token(Token = "0x4000F6D")]
		HMD,
		[Token(Token = "0x4000F6E")]
		Controller
	}
	[Token(Token = "0x200027C")]
	public class SmoothLocomotion : MonoBehaviour
	{
		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C26B8", Offset = "0x3C26B8")]
		public float MovementSpeed;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C26F0", Offset = "0x3C26F0")]
		public List<InputAxis> inputAxis;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2728", Offset = "0x3C2728")]
		public float SprintSpeed;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2760", Offset = "0x3C2760")]
		public List<ControllerBinding> SprintInput;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2798", Offset = "0x3C2798")]
		public float StrafeSpeed;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float StrafeSprintSpeed;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C27D0", Offset = "0x3C27D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C27D0", Offset = "0x3C27D0")]
		public bool ApplyGravity;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2830", Offset = "0x3C2830")]
		public float GravityModifier;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2868", Offset = "0x3C2868")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2868", Offset = "0x3C2868")]
		public float JumpForce;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C28C8", Offset = "0x3C28C8")]
		public List<ControllerBinding> JumpInput;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2900", Offset = "0x3C2900")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2900", Offset = "0x3C2900")]
		public bool AirControl;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2960", Offset = "0x3C2960")]
		public float AirControlSpeed;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2998", Offset = "0x3C2998")]
		public bool AllowKeyboardInputs;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BNGPlayerController playerController;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CharacterController characterController;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float movementX;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float movementY;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float movementZ;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool movementDisabled;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _verticalSpeed;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xFAAD1C", Offset = "0xFAAD1C", VA = "0xFAAD1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xFAAE0C", Offset = "0xFAAE0C", VA = "0xFAAE0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xFAAE30", Offset = "0xFAAE30", VA = "0xFAAE30")]
		private void updateInputs()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xFAB0AC", Offset = "0xFAB0AC", VA = "0xFAB0AC", Slot = "4")]
		public virtual Vector2 GetAxisInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xFAAF44", Offset = "0xFAAF44", VA = "0xFAAF44")]
		private void moveCharacter()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xFAB278", Offset = "0xFAB278", VA = "0xFAB278", Slot = "5")]
		public virtual void GetKeyBoardInputs()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xFAB354", Offset = "0xFAB354", VA = "0xFAB354", Slot = "6")]
		public virtual bool CheckJump()
		{
			return default(bool);
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xFAB480", Offset = "0xFAB480", VA = "0xFAB480", Slot = "7")]
		public virtual bool SprintKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xFAB5A8", Offset = "0xFAB5A8", VA = "0xFAB5A8", Slot = "8")]
		public virtual void EnableMovement()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xFAB5B0", Offset = "0xFAB5B0", VA = "0xFAB5B0", Slot = "9")]
		public virtual void DisableMovement()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xFAB5BC", Offset = "0xFAB5BC", VA = "0xFAB5BC")]
		public SmoothLocomotion()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class SnapZone : MonoBehaviour
	{
		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C29D0", Offset = "0x3C29D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C29D0", Offset = "0x3C29D0")]
		public Grabbable HeldItem;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2A30", Offset = "0x3C2A30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2A30", Offset = "0x3C2A30")]
		public bool CanDropItem;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2A90", Offset = "0x3C2A90")]
		public bool CanSwapItem;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2AC8", Offset = "0x3C2AC8")]
		public float ScaleItem;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _scaleTo;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool DisableColliders;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Collider> disabledColliders;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2B00", Offset = "0x3C2B00")]
		public bool DuplicateItemOnGrab;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2B38", Offset = "0x3C2B38")]
		public float MaxDropTime;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2B70", Offset = "0x3C2B70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2B70", Offset = "0x3C2B70")]
		public List<string> OnlyAllowNames;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2BD0", Offset = "0x3C2BD0")]
		public List<string> ExcludeTransformNames;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2C08", Offset = "0x3C2C08")]
		public AudioClip SoundOnSnap;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip SoundOnUnsnap;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2C40", Offset = "0x3C2C40")]
		public GrabbableEvent OnSnapEvent;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GrabbableEvent OnDetachEvent;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GrabbablesInTrigger gZone;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody heldItemRigid;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool heldItemWasKinematic;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Grabbable trackedItem;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x3C2C78", Offset = "0x3C2C78")]
		public Grabbable ClosestGrabbable;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SnapZoneOffset offset;

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xFAB748", Offset = "0xFAB748", VA = "0xFAB748")]
		private void Start()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xFAB808", Offset = "0xFAB808", VA = "0xFAB808")]
		private void Update()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xFABB90", Offset = "0xFABB90", VA = "0xFABB90")]
		private Grabbable getClosestGrabbable()
		{
			return null;
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xFA23CC", Offset = "0xFA23CC", VA = "0xFA23CC")]
		public void GrabGrabbable(Grabbable grab)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xFAC460", Offset = "0xFAC460", VA = "0xFAC460")]
		private void disableGrabbable(Grabbable grab)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xFAC56C", Offset = "0xFAC56C", VA = "0xFAC56C")]
		public void GrabEquipped(Grabber grabber)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xFAC080", Offset = "0xFAC080", VA = "0xFAC080")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xFAC840", Offset = "0xFAC840", VA = "0xFAC840")]
		public SnapZone()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class SnapZoneOffset : MonoBehaviour
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPositionOffset;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 LocalRotationOffset;

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xFAC8E4", Offset = "0xFAC8E4", VA = "0xFAC8E4")]
		public SnapZoneOffset()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class SnapZoneScale : MonoBehaviour
	{
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2C88", Offset = "0x3C2C88")]
		public float Scale;

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xFACBB8", Offset = "0xFACBB8", VA = "0xFACBB8")]
		public SnapZoneScale()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B96FC", Offset = "0x3B96FC")]
		private sealed class <QueueDestroy>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400164B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400164C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400164D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arrow <>4__this;

			[Token(Token = "0x17000264")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600148F")]
				[Address(RVA = "0x5F2B68", Offset = "0x5F2B68", VA = "0x5F2B68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000265")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001491")]
				[Address(RVA = "0x5F2BB0", Offset = "0x5F2BB0", VA = "0x5F2BB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600148C")]
			[Address(RVA = "0x5F29AC", Offset = "0x5F29AC", VA = "0x5F29AC")]
			[DebuggerHidden]
			public <QueueDestroy>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600148D")]
			[Address(RVA = "0x5F29D8", Offset = "0x5F29D8", VA = "0x5F29D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600148E")]
			[Address(RVA = "0x5F29DC", Offset = "0x5F29DC", VA = "0x5F29DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001490")]
			[Address(RVA = "0x5F2B70", Offset = "0x5F2B70", VA = "0x5F2B70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B970C", Offset = "0x3B970C")]
		private sealed class <ReEnableCollider>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arrow <>4__this;

			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <waitFrames>5__2;

			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <x>5__3;

			[Token(Token = "0x17000266")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001495")]
				[Address(RVA = "0x5F2CB8", Offset = "0x5F2CB8", VA = "0x5F2CB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000267")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001497")]
				[Address(RVA = "0x5F2D00", Offset = "0x5F2D00", VA = "0x5F2D00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001492")]
			[Address(RVA = "0x5F2BB8", Offset = "0x5F2BB8", VA = "0x5F2BB8")]
			[DebuggerHidden]
			public <ReEnableCollider>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001493")]
			[Address(RVA = "0x5F2BE4", Offset = "0x5F2BE4", VA = "0x5F2BE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001494")]
			[Address(RVA = "0x5F2BE8", Offset = "0x5F2BE8", VA = "0x5F2BE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001496")]
			[Address(RVA = "0x5F2CC0", Offset = "0x5F2CC0", VA = "0x5F2CC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Grabbable grab;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Flying;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ZVel;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider ShaftCollider;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource impactSound;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float flightTime;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float destroyTime;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine queueDestroy;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Projectile ProjectileObject;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float arrowDamage;

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x763B64", Offset = "0x763B64", VA = "0x763B64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x763CF4", Offset = "0x763CF4", VA = "0x763CF4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x763F14", Offset = "0x763F14", VA = "0x763F14")]
		public void ShootArrow(Vector3 shotForce)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x76408C", Offset = "0x76408C", VA = "0x76408C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C73DC", Offset = "0x3C73DC")]
		private IEnumerator QueueDestroy()
		{
			return null;
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x764018", Offset = "0x764018", VA = "0x764018")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C7444", Offset = "0x3C7444")]
		private IEnumerator ReEnableCollider()
		{
			return null;
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x764100", Offset = "0x764100", VA = "0x764100")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x764588", Offset = "0x764588", VA = "0x764588")]
		private void tryStickArrow(Collision collision)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x76493C", Offset = "0x76493C", VA = "0x76493C")]
		private void playSoundInterval(float fromSeconds, float toSeconds)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x764A64", Offset = "0x764A64", VA = "0x764A64")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class ArrowGrabArea : MonoBehaviour
	{
		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Bow theBow;

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x764A74", Offset = "0x764A74", VA = "0x764A74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x764AE4", Offset = "0x764AE4", VA = "0x764AE4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x764E5C", Offset = "0x764E5C", VA = "0x764E5C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x764F8C", Offset = "0x764F8C", VA = "0x764F8C")]
		public ArrowGrabArea()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class Bow : MonoBehaviour
	{
		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float BowForce;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2CC0", Offset = "0x3C2CC0")]
		public string ArrowPrefabName;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CanGrabArrowFromKnock;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2CF8", Offset = "0x3C2CF8")]
		public Transform ArrowRest;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2D30", Offset = "0x3C2D30")]
		public Transform ArrowRestLeftHanded;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform ArrowKnock;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IgnoreXPosition;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool IgnoreYPosition;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool AllowNegativeZ;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputBridge input;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool CanGrabArrow;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Grabber ClosestGrabber;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Arrow GrabbedArrow;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Grabbable arrowGrabbable;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Grabber arrowGrabber;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 LastValidPosition;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float MaxStringDistance;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float StringDistance;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C2D68", Offset = "0x3C2D68")]
		private float <DrawPercent>k__BackingField;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _lastDrawPercent;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _lastDrawHaptic;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastDrawHapticTime;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool playedDrawSound;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 initialKnockPosition;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool holdingArrow;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Grabbable bowGrabbable;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Text PercentageUI;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<DrawDefinition> drawDefs;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private AudioSource audioSource;

		[Token(Token = "0x170001AF")]
		public float DrawPercent
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x76F844", Offset = "0x76F844", VA = "0x76F844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C74AC", Offset = "0x3C74AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x76F84C", Offset = "0x76F84C", VA = "0x76F84C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C74BC", Offset = "0x3C74BC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x76F854", Offset = "0x76F854", VA = "0x76F854")]
		private void Start()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x76FB8C", Offset = "0x76FB8C", VA = "0x76FB8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x770494", Offset = "0x770494", VA = "0x770494")]
		private Transform getArrowRest()
		{
			return null;
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x770408", Offset = "0x770408", VA = "0x770408")]
		private bool canGrabArrowFromKnock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x770914", Offset = "0x770914", VA = "0x770914")]
		private float getGrabArrowInput()
		{
			return default(float);
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x770A70", Offset = "0x770A70", VA = "0x770A70")]
		private float getGripInput(ControllerHand handSide)
		{
			return default(float);
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x770A2C", Offset = "0x770A2C", VA = "0x770A2C")]
		private float getTriggerInput(ControllerHand handSide)
		{
			return default(float);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x770548", Offset = "0x770548", VA = "0x770548")]
		private void setKnockPosition()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x7708B4", Offset = "0x7708B4", VA = "0x7708B4")]
		private void checkDrawSound()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x76FF38", Offset = "0x76FF38", VA = "0x76FF38")]
		private void updateDrawDistance()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x770098", Offset = "0x770098", VA = "0x770098")]
		private void checkBowHaptics()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x770360", Offset = "0x770360", VA = "0x770360")]
		private void resetStringPosition()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x770788", Offset = "0x770788", VA = "0x770788")]
		private void alignArrow()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x764CAC", Offset = "0x764CAC", VA = "0x764CAC")]
		public void GrabArrow(Arrow arrow)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x770218", Offset = "0x770218", VA = "0x770218")]
		public void ReleaseArrow()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x770AE8", Offset = "0x770AE8", VA = "0x770AE8")]
		private void resetArrowValues()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x770AFC", Offset = "0x770AFC", VA = "0x770AFC")]
		private void playSoundInterval(float fromSeconds, float toSeconds, float volume)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x770AB4", Offset = "0x770AB4", VA = "0x770AB4")]
		private void playBowDraw()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x770ACC", Offset = "0x770ACC", VA = "0x770ACC")]
		private void playBowRelease()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x770C48", Offset = "0x770C48", VA = "0x770C48")]
		public Bow()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x770CC4", Offset = "0x770CC4", VA = "0x770CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C74CC", Offset = "0x3C74CC")]
		private bool <checkBowHaptics>b__42_0(DrawDefinition x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000283")]
	public class DrawDefinition
	{
		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C2D78", Offset = "0x3C2D78")]
		private float <DrawPercentage>k__BackingField;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C2D88", Offset = "0x3C2D88")]
		private float <HapticAmplitude>k__BackingField;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C2D98", Offset = "0x3C2D98")]
		private float <HapticFrequency>k__BackingField;

		[Token(Token = "0x170001B0")]
		public float DrawPercentage
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x807408", Offset = "0x807408", VA = "0x807408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C74DC", Offset = "0x3C74DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600103B")]
			[Address(RVA = "0x807410", Offset = "0x807410", VA = "0x807410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C74EC", Offset = "0x3C74EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public float HapticAmplitude
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x807418", Offset = "0x807418", VA = "0x807418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C74FC", Offset = "0x3C74FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x807420", Offset = "0x807420", VA = "0x807420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C750C", Offset = "0x3C750C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public float HapticFrequency
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x807428", Offset = "0x807428", VA = "0x807428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C751C", Offset = "0x3C751C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x807430", Offset = "0x807430", VA = "0x807430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C752C", Offset = "0x3C752C")]
			set
			{
			}
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x807438", Offset = "0x807438", VA = "0x807438")]
		public DrawDefinition()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class BowArm : MonoBehaviour
	{
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bow BowItem;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float BowPercentStart;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotateDegrees;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Speed;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion _startRotation;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion _endRotation;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool RotateX;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool RotateZ;

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x770D00", Offset = "0x770D00", VA = "0x770D00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x770E28", Offset = "0x770E28", VA = "0x770E28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x770F64", Offset = "0x770F64", VA = "0x770F64")]
		public BowArm()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class BulletHole : MonoBehaviour
	{
		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform BulletHoleDecal;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxScale;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MinScale;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RandomYRotation;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DestroyTime;

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x770F90", Offset = "0x770F90", VA = "0x770F90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x771144", Offset = "0x771144", VA = "0x771144")]
		public void TryAttachTo(Collider col)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x771284", Offset = "0x771284", VA = "0x771284")]
		private bool transformIsEqualScale(Transform theTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x771300", Offset = "0x771300", VA = "0x771300")]
		private void DestroySelf()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x771398", Offset = "0x771398", VA = "0x771398")]
		public BulletHole()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class DrawerSound : MonoBehaviour
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip DrawerOpenSound;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DrawerOpenValue;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip DrawerCloseSound;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float DrawerCloseValue;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool playedOpenSound;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool playedCloseSound;

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x807440", Offset = "0x807440", VA = "0x807440")]
		public void OnDrawerUpdate(float drawerValue)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x807600", Offset = "0x807600", VA = "0x807600")]
		public DrawerSound()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class Explosive : MonoBehaviour
	{
		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B971C", Offset = "0x3B971C")]
		private sealed class <explosionRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Explosive <>4__this;

			[Token(Token = "0x17000268")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600149B")]
				[Address(RVA = "0x5F74B8", Offset = "0x5F74B8", VA = "0x5F74B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000269")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600149D")]
				[Address(RVA = "0x5F7500", Offset = "0x5F7500", VA = "0x5F7500", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001498")]
			[Address(RVA = "0x5F712C", Offset = "0x5F712C", VA = "0x5F712C")]
			[DebuggerHidden]
			public <explosionRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001499")]
			[Address(RVA = "0x5F7158", Offset = "0x5F7158", VA = "0x5F7158", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600149A")]
			[Address(RVA = "0x5F715C", Offset = "0x5F715C", VA = "0x5F715C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600149C")]
			[Address(RVA = "0x5F74C0", Offset = "0x5F74C0", VA = "0x5F74C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B972C", Offset = "0x3B972C")]
		private sealed class <dealDelayedDamaged>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x4001659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Damageable damageable;

			[Token(Token = "0x400165A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Explosive <>4__this;

			[Token(Token = "0x1700026A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014A1")]
				[Address(RVA = "0x5F70DC", Offset = "0x5F70DC", VA = "0x5F70DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014A3")]
				[Address(RVA = "0x5F7124", Offset = "0x5F7124", VA = "0x5F7124", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600149E")]
			[Address(RVA = "0x5F6FEC", Offset = "0x5F6FEC", VA = "0x5F6FEC")]
			[DebuggerHidden]
			public <dealDelayedDamaged>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600149F")]
			[Address(RVA = "0x5F7018", Offset = "0x5F7018", VA = "0x5F7018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014A0")]
			[Address(RVA = "0x5F701C", Offset = "0x5F701C", VA = "0x5F701C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x5F70E4", Offset = "0x5F70E4", VA = "0x5F70E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2DA8", Offset = "0x3C2DA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2DA8", Offset = "0x3C2DA8")]
		public float ExplosionRadius;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2E08", Offset = "0x3C2E08")]
		public float ExplosionDamage;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2E40", Offset = "0x3C2E40")]
		public float ExplosionForce;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2E78", Offset = "0x3C2E78")]
		public float ExplosiveUpwardsModifier;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C2EB0", Offset = "0x3C2EB0")]
		public bool ShowExplosionRadius;

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x808D64", Offset = "0x808D64", VA = "0x808D64", Slot = "4")]
		public virtual void DoExplosion()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x808D90", Offset = "0x808D90", VA = "0x808D90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C753C", Offset = "0x3C753C")]
		private IEnumerator explosionRoutine()
		{
			return null;
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x808E04", Offset = "0x808E04", VA = "0x808E04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C75A4", Offset = "0x3C75A4")]
		private IEnumerator dealDelayedDamaged(Damageable damageable, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x808E8C", Offset = "0x808E8C", VA = "0x808E8C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x808EF0", Offset = "0x808EF0", VA = "0x808EF0")]
		public Explosive()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class Flashlight : GrabbableEvents
	{
		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light SpotLight;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LightSwitch;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 originalSwitchPosition;

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x80A054", Offset = "0x80A054", VA = "0x80A054")]
		private void Start()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x80A098", Offset = "0x80A098", VA = "0x80A098", Slot = "15")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x80A100", Offset = "0x80A100", VA = "0x80A100", Slot = "17")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x80A14C", Offset = "0x80A14C", VA = "0x80A14C")]
		public Flashlight()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class FPSText : MonoBehaviour
	{
		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text text;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float deltaTime;

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x808F0C", Offset = "0x808F0C", VA = "0x808F0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x808F68", Offset = "0x808F68", VA = "0x808F68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x808FB4", Offset = "0x808FB4", VA = "0x808FB4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x809094", Offset = "0x809094", VA = "0x809094")]
		public FPSText()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class GrappleShot : GrabbableEvents
	{
		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MaxRange;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float GrappleReelForce;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinReelDistance;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask GrappleLayers;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform MuzzleTransform;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform HitTargetPrefab;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LineRenderer GrappleLine;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LineRenderer HelperLine;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip GrappleShotSound;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool grappling;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool wasGrappling;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool gravityEnabled;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CharacterController characterController;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BNGPlayerController bngController;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource audioSource;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float currentGrappleDistance;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool validTargetFound;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool isDynamic;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Rigidbody grappleTargetRigid;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Collider grappleTargetCollider;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform grappleTargetParent;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool requireRelease;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool climbing;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Climbable ClimbHelper;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x9A5670", Offset = "0x9A5670", VA = "0x9A5670")]
		private void Start()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x9A5744", Offset = "0x9A5744", VA = "0x9A5744")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x9A5E38", Offset = "0x9A5E38", VA = "0x9A5E38", Slot = "15")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x9A5EC0", Offset = "0x9A5EC0", VA = "0x9A5EC0")]
		private void updateGrappleDistance()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x9A6510", Offset = "0x9A6510", VA = "0x9A6510", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x9A6518", Offset = "0x9A6518", VA = "0x9A6518", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x9A637C", Offset = "0x9A637C", VA = "0x9A637C")]
		private void onReleaseGrapple()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x9A57CC", Offset = "0x9A57CC", VA = "0x9A57CC")]
		private void drawGrappleHelper()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x9A5CE4", Offset = "0x9A5CE4", VA = "0x9A5CE4")]
		private void drawGrappleLine()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x9A5D70", Offset = "0x9A5D70", VA = "0x9A5D70")]
		private void hideGrappleLine()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x9A656C", Offset = "0x9A656C", VA = "0x9A656C")]
		private void showGrappleHelper(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x9A5BB0", Offset = "0x9A5BB0", VA = "0x9A5BB0")]
		private void hideGrappleHelper()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x9A5F50", Offset = "0x9A5F50", VA = "0x9A5F50")]
		private void reelInGrapple(float triggerValue)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x9A627C", Offset = "0x9A627C", VA = "0x9A627C")]
		private void shootGrapple()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x9A6720", Offset = "0x9A6720", VA = "0x9A6720")]
		private void dropGrapple()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x9A6540", Offset = "0x9A6540", VA = "0x9A6540")]
		private void changeGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x9A672C", Offset = "0x9A672C", VA = "0x9A672C")]
		public GrappleShot()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class HandJet : GrabbableEvents
	{
		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float JetForce;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem JetFX;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CharacterController characterController;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BNGPlayerController bngController;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource audioSource;

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x9A9C38", Offset = "0x9A9C38", VA = "0x9A9C38")]
		private void Start()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x9A9D0C", Offset = "0x9A9D0C", VA = "0x9A9D0C", Slot = "15")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x9AA040", Offset = "0x9AA040", VA = "0x9AA040", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x9AA064", Offset = "0x9AA064", VA = "0x9AA064")]
		public void ChangeGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x9AA088", Offset = "0x9AA088", VA = "0x9AA088", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x9A9D5C", Offset = "0x9A9D5C", VA = "0x9A9D5C")]
		private void doJet(float triggerValue)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x9A9F78", Offset = "0x9A9F78", VA = "0x9A9F78")]
		private void stopJet()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x9AA2DC", Offset = "0x9AA2DC", VA = "0x9AA2DC", Slot = "17")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x9AA304", Offset = "0x9AA304", VA = "0x9AA304")]
		public HandJet()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class IKDummy : MonoBehaviour
	{
		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform PlayerTransform;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HeadFollow;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform RightHandFollow;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform LeftHandFollow;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 HandRotationOffset;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform headBone;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform leftHandDummy;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform rightHandDummy;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lookatDummy;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 localPos;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion localRot;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform cam;

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x9B098C", Offset = "0x9B098C", VA = "0x9B098C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x9B0AA4", Offset = "0x9B0AA4", VA = "0x9B0AA4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x9B0DCC", Offset = "0x9B0DCC", VA = "0x9B0DCC")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x9B0F44", Offset = "0x9B0F44", VA = "0x9B0F44")]
		public IKDummy()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxRange;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform LaserEnd;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Active;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer line;

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x97F3F8", Offset = "0x97F3F8", VA = "0x97F3F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x97F454", Offset = "0x97F454", VA = "0x97F454")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x97F760", Offset = "0x97F760", VA = "0x97F760")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class LaserSword : GrabbableEvents
	{
		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable grabbable;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform BladeTransform;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform RaycastTransform;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LayerMask LaserCollision;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem CollisionParticle;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool BladeEnabled;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool SaberSwitchOn;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float LaserLength;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float LaserActivateSpeed;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource CollisionAudio;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool Colliding;

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x97F778", Offset = "0x97F778", VA = "0x97F778")]
		private void Start()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x97F838", Offset = "0x97F838", VA = "0x97F838")]
		private void Update()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x97FD68", Offset = "0x97FD68", VA = "0x97FD68", Slot = "15")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x97FA04", Offset = "0x97FA04", VA = "0x97FA04")]
		private void checkCollision()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x97FD84", Offset = "0x97FD84", VA = "0x97FD84")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x97FEBC", Offset = "0x97FEBC", VA = "0x97FEBC")]
		public LaserSword()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class LiquidWobble : MonoBehaviour
	{
		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer rend;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPos;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 velocity;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 lastRot;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 angularVelocity;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MaxWobble;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float WobbleSpeed;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Recovery;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float wobbleAmountX;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float wobbleAmountZ;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float wobbleAmountToAddX;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float wobbleAmountToAddZ;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pulse;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float time;

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x981904", Offset = "0x981904", VA = "0x981904")]
		private void Start()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x981960", Offset = "0x981960", VA = "0x981960")]
		private void Update()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x981BF4", Offset = "0x981BF4", VA = "0x981BF4")]
		public LiquidWobble()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class Marker : MonoBehaviour
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material DrawMaterial;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color DrawColor;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LineWidth;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform RaycastStart;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask DrawingLayers;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float RaycastLength;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MinDrawDistance;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform lastDrawPoint;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform root;

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x987320", Offset = "0x987320", VA = "0x987320")]
		private void Update()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x987540", Offset = "0x987540", VA = "0x987540", Slot = "4")]
		public virtual Transform InitDraw(Vector3 position, Quaternion rotation, float lineWidth, Color lineColor)
		{
			return null;
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x987704", Offset = "0x987704", VA = "0x987704", Slot = "5")]
		public virtual Transform DrawPoint(Transform lastDrawPoint, Vector3 endPosition, float lineWidth, Color lineColor)
		{
			return null;
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x987A04", Offset = "0x987A04", VA = "0x987A04")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x987AC0", Offset = "0x987AC0", VA = "0x987AC0")]
		public Marker()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class MoveToWaypoint : MonoBehaviour
	{
		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Waypoint Destination;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MovementSpeed;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ReachedDestination;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2EE8", Offset = "0x3C2EE8")]
		public float StartDelay;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool reachedDelay;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float delayedTime;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 previousPosition;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 PositionDifference;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool MoveInUpdate;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool MoveInFixedUpdate;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigid;

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x989D90", Offset = "0x989D90", VA = "0x989D90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x989DFC", Offset = "0x989DFC", VA = "0x989DFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x98A16C", Offset = "0x98A16C", VA = "0x98A16C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x989EC0", Offset = "0x989EC0", VA = "0x989EC0")]
		private void movePlatform(float timeDelta)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x98A1A8", Offset = "0x98A1A8", VA = "0x98A1A8")]
		private void resetDelayStatus()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x98A1B4", Offset = "0x98A1B4", VA = "0x98A1B4")]
		public MoveToWaypoint()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class MovingPlatform : MonoBehaviour
	{
		[Token(Token = "0x600108D")]
		[Address(RVA = "0xD9F474", Offset = "0xD9F474", VA = "0xD9F474")]
		public MovingPlatform()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class PlayerScaler : MonoBehaviour
	{
		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> ScaleObjects;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Scale;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float scaleSpeed;

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xFD1624", Offset = "0xFD1624", VA = "0xFD1624")]
		private void Update()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xFD1834", Offset = "0xFD1834", VA = "0xFD1834")]
		public PlayerScaler()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class ProjectileLauncher : MonoBehaviour
	{
		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ProjectileObject;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ProjectileForce;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip LaunchSound;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem LaunchParticles;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform MuzzleTransform;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _initialProjectileForce;

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xFD4D9C", Offset = "0xFD4D9C", VA = "0xFD4D9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xFD4DA8", Offset = "0xFD4DA8", VA = "0xFD4DA8")]
		public GameObject ShootProjectile(float projectileForce)
		{
			return null;
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xFD5084", Offset = "0xFD5084", VA = "0xFD5084")]
		public void ShootProjectile()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xFD508C", Offset = "0xFD508C", VA = "0xFD508C")]
		public void SetForce(float force)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xFD5094", Offset = "0xFD5094", VA = "0xFD5094")]
		public float GetInitialProjectileForce()
		{
			return default(float);
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xFD509C", Offset = "0xFD509C", VA = "0xFD509C")]
		public ProjectileLauncher()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class TimeController : MonoBehaviour
	{
		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B973C", Offset = "0x3B973C")]
		private sealed class <resumeTimeRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400165C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400165D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimeController <>4__this;

			[Token(Token = "0x1700026C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014A7")]
				[Address(RVA = "0x88F5C4", Offset = "0x88F5C4", VA = "0x88F5C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014A9")]
				[Address(RVA = "0x88F60C", Offset = "0x88F60C", VA = "0x88F60C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x88F424", Offset = "0x88F424", VA = "0x88F424")]
			[DebuggerHidden]
			public <resumeTimeRoutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60014A5")]
			[Address(RVA = "0x88F450", Offset = "0x88F450", VA = "0x88F450", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014A6")]
			[Address(RVA = "0x88F454", Offset = "0x88F454", VA = "0x88F454", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014A8")]
			[Address(RVA = "0x88F5CC", Offset = "0x88F5CC", VA = "0x88F5CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2F20", Offset = "0x3C2F20")]
		public float SlowTimeScale;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2F58", Offset = "0x3C2F58")]
		public bool YKeySlowsTime;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2F90", Offset = "0x3C2F90")]
		public AudioClip SlowTimeClip;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C2FC8", Offset = "0x3C2FC8")]
		public AudioClip SpeedupTimeClip;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3000", Offset = "0x3C3000")]
		public bool SetFixedDelta;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _slowingTime;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool routineRunning;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float originalFixedDelta;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool ForceTimeScale;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IEnumerator resumeRoutine;

		[Token(Token = "0x170001B3")]
		public bool TimeSlowing
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0xFBCF80", Offset = "0xFBCF80", VA = "0xFBCF80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xFBCF88", Offset = "0xFBCF88", VA = "0xFBCF88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xFBD04C", Offset = "0xFBD04C", VA = "0xFBD04C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xFBD0E4", Offset = "0xFBD0E4", VA = "0xFBD0E4")]
		public void SlowTime()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xFBD200", Offset = "0xFBD200", VA = "0xFBD200")]
		public void ResumeTime()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xFBD268", Offset = "0xFBD268", VA = "0xFBD268")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C760C", Offset = "0x3C760C")]
		private IEnumerator resumeTimeRoutine()
		{
			return null;
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xFBD2DC", Offset = "0xFBD2DC", VA = "0xFBD2DC")]
		public TimeController()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class VREmulator : MonoBehaviour
	{
		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3038", Offset = "0x3C3038")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3038", Offset = "0x3C3038")]
		public bool EmulatorEnabled;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3098", Offset = "0x3C3098")]
		public KeyCode PlayerUp;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode PlayerDown;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode RightTrigger;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode RightGrip;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode RightThumbNear;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode LeftTrigger;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode LeftGrip;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode LeftThumbNear;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float mouseRotationX;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float mouseRotationY;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C30D0", Offset = "0x3C30D0")]
		public float MouseSensitivityX;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MouseSensitivityY;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float MinimumCameraY;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MaximumCameraY;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform mainCameraTransform;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform leftControllerTranform;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform rightControllerTranform;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BNGPlayerController player;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool didFirstActivate;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabber grabberLeft;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Grabber grabberRight;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _originalPlayerYOffset;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3108", Offset = "0x3C3108")]
		public bool HMDIsActive;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool isQuitting;

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xFC48E0", Offset = "0xFC48E0", VA = "0xFC48E0")]
		private void Start()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xFC4A50", Offset = "0xFC4A50", VA = "0xFC4A50")]
		private void onFirstActivate()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xFC4ADC", Offset = "0xFC4ADC", VA = "0xFC4ADC")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xFC4BB8", Offset = "0xFC4BB8", VA = "0xFC4BB8")]
		public void CheckHeadControls()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xFC4D84", Offset = "0xFC4D84", VA = "0xFC4D84")]
		public void UpdateInputs()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xFC4CF0", Offset = "0xFC4CF0", VA = "0xFC4CF0")]
		public void CheckPlayerControls()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xFC4F80", Offset = "0xFC4F80", VA = "0xFC4F80")]
		private void checkGrabbers()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xFC521C", Offset = "0xFC521C", VA = "0xFC521C", Slot = "4")]
		public virtual void ResetHands()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xFC52E8", Offset = "0xFC52E8", VA = "0xFC52E8", Slot = "5")]
		public virtual void ResetAll()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xFC53A4", Offset = "0xFC53A4", VA = "0xFC53A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xFC545C", Offset = "0xFC545C", VA = "0xFC545C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xFC5534", Offset = "0xFC5534", VA = "0xFC5534")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xFC5540", Offset = "0xFC5540", VA = "0xFC5540")]
		public VREmulator()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class Waypoint : MonoBehaviour
	{
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Waypoint Destination;

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x5ED964", Offset = "0x5ED964", VA = "0x5ED964")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x5EDAC0", Offset = "0x5EDAC0", VA = "0x5EDAC0")]
		public Waypoint()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class Zipline : GrabbableEvents
	{
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ZiplineStart;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform ZiplineEnd;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ZiplineSpeed;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool UseLinearMovement;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastMoveTime;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool movingForward;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource audioSource;

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x5EEAC8", Offset = "0x5EEAC8", VA = "0x5EEAC8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x5EEBA0", Offset = "0x5EEBA0", VA = "0x5EEBA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x5EEC7C", Offset = "0x5EEC7C", VA = "0x5EEC7C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x5EEDAC", Offset = "0x5EEDAC", VA = "0x5EEDAC", Slot = "15")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x5EF060", Offset = "0x5EF060", VA = "0x5EF060", Slot = "18")]
		public override void OnButton1()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x5EF0A4", Offset = "0x5EF0A4", VA = "0x5EF0A4", Slot = "21")]
		public override void OnButton2()
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x5EEE0C", Offset = "0x5EEE0C", VA = "0x5EEE0C")]
		private void moveTowards(Vector3 pos, bool forwardDirection)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x5EF0E8", Offset = "0x5EF0E8", VA = "0x5EF0E8")]
		public Zipline()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class ControllerOffsetHelper : MonoBehaviour
	{
		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B974C", Offset = "0x3B974C")]
		private sealed class <checkForController>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400165E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400165F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerOffsetHelper <>4__this;

			[Token(Token = "0x1700026E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014AD")]
				[Address(RVA = "0x5F3D68", Offset = "0x5F3D68", VA = "0x5F3D68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014AF")]
				[Address(RVA = "0x5F3DB0", Offset = "0x5F3DB0", VA = "0x5F3DB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014AA")]
			[Address(RVA = "0x5F3C38", Offset = "0x5F3C38", VA = "0x5F3C38")]
			[DebuggerHidden]
			public <checkForController>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x5F3C64", Offset = "0x5F3C64", VA = "0x5F3C64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014AC")]
			[Address(RVA = "0x5F3C68", Offset = "0x5F3C68", VA = "0x5F3C68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014AE")]
			[Address(RVA = "0x5F3D70", Offset = "0x5F3D70", VA = "0x5F3D70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerHand ControllerHand;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3140", Offset = "0x3C3140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3140", Offset = "0x3C3140")]
		[SerializeField]
		private string thisControllerModel;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ControllerOffset thisOffset;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ControllerOffset> ControllerOffsets;

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x8C7B58", Offset = "0x8C7B58", VA = "0x8C7B58")]
		private void Start()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x8C7BE4", Offset = "0x8C7BE4", VA = "0x8C7BE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C7674", Offset = "0x3C7674")]
		private IEnumerator checkForController()
		{
			return null;
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x8C7C58", Offset = "0x8C7C58", VA = "0x8C7C58", Slot = "4")]
		public virtual void OnControllerFound()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x8C7DB4", Offset = "0x8C7DB4", VA = "0x8C7DB4", Slot = "5")]
		public virtual ControllerOffset GetControllerOffset(string controllerName)
		{
			return null;
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x8C7E70", Offset = "0x8C7E70", VA = "0x8C7E70", Slot = "6")]
		public virtual void DefineControllerOffsets()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x8C8044", Offset = "0x8C8044", VA = "0x8C8044")]
		public ControllerOffsetHelper()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x8C8054", Offset = "0x8C8054", VA = "0x8C8054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C76DC", Offset = "0x3C76DC")]
		private bool <GetControllerOffset>b__7_0(ControllerOffset x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200029A")]
	public class ControllerOffset
	{
		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C31C0", Offset = "0x3C31C0")]
		private string <ControllerName>k__BackingField;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C31D0", Offset = "0x3C31D0")]
		private Vector3 <LeftControllerPositionOffset>k__BackingField;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C31E0", Offset = "0x3C31E0")]
		private Vector3 <RightControllerPositionOffset>k__BackingField;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C31F0", Offset = "0x3C31F0")]
		private Vector3 <LeftControllerRotationOffset>k__BackingField;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C3200", Offset = "0x3C3200")]
		private Vector3 <RightControlleRotationOffset>k__BackingField;

		[Token(Token = "0x170001B4")]
		public string ControllerName
		{
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x8C7AE0", Offset = "0x8C7AE0", VA = "0x8C7AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C76EC", Offset = "0x3C76EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x8C7AE8", Offset = "0x8C7AE8", VA = "0x8C7AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C76FC", Offset = "0x3C76FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public Vector3 LeftControllerPositionOffset
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x8C7AF0", Offset = "0x8C7AF0", VA = "0x8C7AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C770C", Offset = "0x3C770C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x8C7AFC", Offset = "0x8C7AFC", VA = "0x8C7AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C771C", Offset = "0x3C771C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public Vector3 RightControllerPositionOffset
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x8C7B08", Offset = "0x8C7B08", VA = "0x8C7B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C772C", Offset = "0x3C772C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x8C7B14", Offset = "0x8C7B14", VA = "0x8C7B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C773C", Offset = "0x3C773C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public Vector3 LeftControllerRotationOffset
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x8C7B20", Offset = "0x8C7B20", VA = "0x8C7B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C774C", Offset = "0x3C774C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x8C7B2C", Offset = "0x8C7B2C", VA = "0x8C7B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C775C", Offset = "0x3C775C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public Vector3 RightControlleRotationOffset
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x8C7B38", Offset = "0x8C7B38", VA = "0x8C7B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C776C", Offset = "0x3C776C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x8C7B44", Offset = "0x8C7B44", VA = "0x8C7B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C777C", Offset = "0x3C777C")]
			set
			{
			}
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x8C7B50", Offset = "0x8C7B50", VA = "0x8C7B50")]
		public ControllerOffset()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class DetachableLimb : MonoBehaviour
	{
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ShrinkBone;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ReplaceGrabbableWith;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject EnableOnDetach;

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x803E04", Offset = "0x803E04", VA = "0x803E04")]
		public void DoDismemberment(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x8040C4", Offset = "0x8040C4", VA = "0x8040C4")]
		public void ReverseDismemberment()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x8041C8", Offset = "0x8041C8", VA = "0x8041C8")]
		public DetachableLimb()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class DoorHelper : MonoBehaviour
	{
		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip DoorOpenSound;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip DoorCloseSound;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3210", Offset = "0x3C3210")]
		public bool RequireHandleTurnToOpen;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform HandleFollower;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DegreesTurned;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float DegreesTurnToOpen;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform DoorLockTransform;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float initialLockPosition;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HingeJoint hinge;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigid;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool playedOpenSound;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool readyToPlayCloseSound;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float AngularVelocitySnapDoor;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float angle;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float AngularVelocity;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool doorLocked;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lockPos;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string DebugText;

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x8060B0", Offset = "0x8060B0", VA = "0x8060B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x80619C", Offset = "0x80619C", VA = "0x80619C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x8066FC", Offset = "0x8066FC", VA = "0x8066FC")]
		public DoorHelper()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class GrabberArea : MonoBehaviour
	{
		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber InArea;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Grabber> grabbersInArea;

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x9A5244", Offset = "0x9A5244", VA = "0x9A5244")]
		private void Update()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x9A5268", Offset = "0x9A5268", VA = "0x9A5268")]
		public Grabber GetOpenGrabber()
		{
			return null;
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x9A53B4", Offset = "0x9A53B4", VA = "0x9A53B4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x9A5508", Offset = "0x9A5508", VA = "0x9A5508")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x9A5614", Offset = "0x9A5614", VA = "0x9A5614")]
		public GrabberArea()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class HandCollision : MonoBehaviour
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandController HandControl;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber HandGrabber;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool EnableHandCollision;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool EnableCollisionOnPoint;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool EnableCollisionOnFist;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool EnableCollisionOnAllPoses;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool EnableCollisionDuringGrab;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PointAmount;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float GripAmount;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool MakingFist;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Collider> handColliders;

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x9A9044", Offset = "0x9A9044", VA = "0x9A9044")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x9A916C", Offset = "0x9A916C", VA = "0x9A916C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x9A9444", Offset = "0x9A9444", VA = "0x9A9444")]
		public HandCollision()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class HandController : MonoBehaviour
	{
		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3248", Offset = "0x3C3248")]
		public Transform HandAnchor;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ResetHandAnchorPosition;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator HandAnimator;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3280", Offset = "0x3C3280")]
		public Grabber grabber;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float GripAmount;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _prevGrip;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float PointAmount;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _prevPoint;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float ThumbAmount;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _prevThumb;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int PoseId;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float HandAnimationSpeed;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InputBridge input;

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x9A945C", Offset = "0x9A945C", VA = "0x9A945C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x9A95D4", Offset = "0x9A95D4", VA = "0x9A95D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x9A98A8", Offset = "0x9A98A8", VA = "0x9A98A8")]
		private void updateAnimimationStates()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x9A9C20", Offset = "0x9A9C20", VA = "0x9A9C20")]
		public HandController()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x9A9BF4", Offset = "0x9A9BF4", VA = "0x9A9BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C778C", Offset = "0x3C778C")]
		private void <updateAnimimationStates>g__setAnimatorBlend|15_0(float min, float max, float input, int animationLayer)
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class HandleGFXHelper : MonoBehaviour
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LookAt;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable HandleGrabbable;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Speed;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LocalYMin;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LocalYMax;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initialRot;

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x9AC29C", Offset = "0x9AC29C", VA = "0x9AC29C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x9AC2D8", Offset = "0x9AC2D8", VA = "0x9AC2D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x9AC574", Offset = "0x9AC574", VA = "0x9AC574")]
		public HandleGFXHelper()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class HandleHelper : MonoBehaviour
	{
		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B975C", Offset = "0x3B975C")]
		private sealed class <doRelease>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandleHelper <>4__this;

			[Token(Token = "0x17000270")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014B3")]
				[Address(RVA = "0x5F7ED8", Offset = "0x5F7ED8", VA = "0x5F7ED8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000271")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014B5")]
				[Address(RVA = "0x5F7F20", Offset = "0x5F7F20", VA = "0x5F7F20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014B0")]
			[Address(RVA = "0x5F7DF8", Offset = "0x5F7DF8", VA = "0x5F7DF8")]
			[DebuggerHidden]
			public <doRelease>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60014B1")]
			[Address(RVA = "0x5F7E24", Offset = "0x5F7E24", VA = "0x5F7E24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014B2")]
			[Address(RVA = "0x5F7E28", Offset = "0x5F7E28", VA = "0x5F7E28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014B4")]
			[Address(RVA = "0x5F7EE0", Offset = "0x5F7EE0", VA = "0x5F7EE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody ParentRigid;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HandleTransform;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Grabbable thisGrab;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool didRelease;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider col;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 lastAngularVelocity;

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x9AC590", Offset = "0x9AC590", VA = "0x9AC590")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x9AC724", Offset = "0x9AC724", VA = "0x9AC724")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x9AC9F4", Offset = "0x9AC9F4", VA = "0x9AC9F4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x9AC980", Offset = "0x9AC980", VA = "0x9AC980")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C779C", Offset = "0x3C779C")]
		private IEnumerator doRelease()
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x9ACA34", Offset = "0x9ACA34", VA = "0x9ACA34")]
		public HandleHelper()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class HandPhysics : MonoBehaviour
	{
		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B976C", Offset = "0x3B976C")]
		private sealed class <UnignoreAllCollisions>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandPhysics <>4__this;

			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Grabbable <thisGrabbable>5__2;

			[Token(Token = "0x17000272")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014B9")]
				[Address(RVA = "0x5F7DA8", Offset = "0x5F7DA8", VA = "0x5F7DA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000273")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014BB")]
				[Address(RVA = "0x5F7DF0", Offset = "0x5F7DF0", VA = "0x5F7DF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014B6")]
			[Address(RVA = "0x5F7CB8", Offset = "0x5F7CB8", VA = "0x5F7CB8")]
			[DebuggerHidden]
			public <UnignoreAllCollisions>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60014B7")]
			[Address(RVA = "0x5F7CE4", Offset = "0x5F7CE4", VA = "0x5F7CE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014B8")]
			[Address(RVA = "0x5F7CE8", Offset = "0x5F7CE8", VA = "0x5F7CE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014BA")]
			[Address(RVA = "0x5F7DB0", Offset = "0x5F7DB0", VA = "0x5F7DB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C32B8", Offset = "0x3C32B8")]
		public Transform AttachTo;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C32F0", Offset = "0x3C32F0")]
		public float HandVelocity;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3328", Offset = "0x3C3328")]
		public bool DisableHandCollidersOnGrab;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3360", Offset = "0x3C3360")]
		public bool ParentToAttachPoint;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3398", Offset = "0x3C3398")]
		public Grabber ThisGrabber;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C33D0", Offset = "0x3C33D0")]
		public Grabber DisableGrabber;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3408", Offset = "0x3C3408")]
		public RemoteGrabber ThisRemoteGrabber;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3440", Offset = "0x3C3440")]
		public RemoteGrabber DisableRemoteGrabber;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3478", Offset = "0x3C3478")]
		public PhysicMaterial ColliderMaterial;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform HandModel;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform HandModelOffset;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Collider> handColliders;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigid;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ConfigurableJoint configJoint;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Grabbable heldGrabbable;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Collider> collisions;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LineRenderer line;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 localHandOffset;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 localHandOffsetRotation;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool wasHoldingObject;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool MovePosition;

		[Token(Token = "0x170001B9")]
		public bool HoldingObject
		{
			[Token(Token = "0x60010E1")]
			[Address(RVA = "0x9AA8DC", Offset = "0x9AA8DC", VA = "0x9AA8DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x9AA9A0", Offset = "0x9AA9A0", VA = "0x9AA9A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x9AAEA4", Offset = "0x9AAEA4", VA = "0x9AAEA4")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x9AB454", Offset = "0x9AB454", VA = "0x9AB454")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x9AAC5C", Offset = "0x9AAC5C", VA = "0x9AAC5C")]
		private void initHandColliders()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x9AB2C4", Offset = "0x9AB2C4", VA = "0x9AB2C4")]
		private void drawDistanceLine()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x9AB114", Offset = "0x9AB114", VA = "0x9AB114")]
		private void updateHandGraphics()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x9AB6E0", Offset = "0x9AB6E0", VA = "0x9AB6E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C7804", Offset = "0x3C7804")]
		private IEnumerator UnignoreAllCollisions()
		{
			return null;
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x9AB754", Offset = "0x9AB754", VA = "0x9AB754")]
		public void IgnoreGrabbableCollisions(Grabbable grab, bool ignorePhysics)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x9AB888", Offset = "0x9AB888", VA = "0x9AB888")]
		public void DisableHandColliders()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x9AB9D0", Offset = "0x9AB9D0", VA = "0x9AB9D0")]
		public void EnableHandColliders()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x9ABB18", Offset = "0x9ABB18", VA = "0x9ABB18", Slot = "4")]
		public virtual void OnGrabbedObject(Grabbable grabbedObject)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x9ABB30", Offset = "0x9ABB30", VA = "0x9ABB30", Slot = "5")]
		public virtual void OnReleasedObject(Grabbable grabbedObject)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x9ABBDC", Offset = "0x9ABBDC", VA = "0x9ABBDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x9ABCA8", Offset = "0x9ABCA8", VA = "0x9ABCA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x9ABE04", Offset = "0x9ABE04", VA = "0x9ABE04")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x9ABF68", Offset = "0x9ABF68", VA = "0x9ABF68")]
		public bool IsValidCollision(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x9ABF70", Offset = "0x9ABF70", VA = "0x9ABF70")]
		public HandPhysics()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class HandRepresentationHelper : MonoBehaviour
	{
		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C34B0", Offset = "0x3C34B0")]
		public Transform HandToToggle;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C34E8", Offset = "0x3C34E8")]
		public Transform OtherHandTransform;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3520", Offset = "0x3C3520")]
		public float DistanceToShow;

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x9AC034", Offset = "0x9AC034", VA = "0x9AC034")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x9AC0D8", Offset = "0x9AC0D8", VA = "0x9AC0D8")]
		public HandRepresentationHelper()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class HandTracking : MonoBehaviour
	{
		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber LeftGrabber;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber RightGrabber;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform LeftModelHolder;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform RightModelHolder;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsHandTracking;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsLeftIndexPinching;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float LeftIndexPinchStrength;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool IsRightIndexPinching;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float RightIndexPinchStrength;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 RightIndexPosition;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 LeftIndexPosition;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool DoPinchToGrab;

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x9AC0EC", Offset = "0x9AC0EC", VA = "0x9AC0EC")]
		public HandTracking()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class IgnoreColliders : MonoBehaviour
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Collider> CollidersToIgnore;

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x9B0F78", Offset = "0x9B0F78", VA = "0x9B0F78")]
		private void Start()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x9B1120", Offset = "0x9B1120", VA = "0x9B1120")]
		public IgnoreColliders()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class InvalidTeleportArea : MonoBehaviour
	{
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x97BCD4", Offset = "0x97BCD4", VA = "0x97BCD4")]
		public InvalidTeleportArea()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class JointBreaker : MonoBehaviour
	{
		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float BreakDistance;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float JointDistance;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DestroyJointOnBreak;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrabberEvent OnBreakEvent;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Joint theJoint;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 startPos;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool brokeJoint;

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x97BCDC", Offset = "0x97BCDC", VA = "0x97BCDC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x97BD54", Offset = "0x97BD54", VA = "0x97BD54")]
		private void Update()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x97BDC0", Offset = "0x97BDC0", VA = "0x97BDC0")]
		public void BreakJoint()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x97BF60", Offset = "0x97BF60", VA = "0x97BF60")]
		public JointBreaker()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class JointHelper : MonoBehaviour
	{
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockXPosition;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool LockYPosition;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool LockZPosition;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool LockXScale;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool LockYScale;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool LockZScale;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool LockXRotation;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool LockYRotation;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool LockZRotation;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 initialPosition;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialRotation;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 initialScale;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 currentPosition;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 currentScale;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentRotation;

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x97BF78", Offset = "0x97BF78", VA = "0x97BF78")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x97BFF4", Offset = "0x97BFF4", VA = "0x97BFF4")]
		private void lockPosition()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x97C1E4", Offset = "0x97C1E4", VA = "0x97C1E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x97C1E8", Offset = "0x97C1E8", VA = "0x97C1E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x97C1EC", Offset = "0x97C1EC", VA = "0x97C1EC")]
		public JointHelper()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class RagdollHelper : MonoBehaviour
	{
		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform player;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Collider> colliders;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider playerCol;

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xFD5100", Offset = "0xFD5100", VA = "0xFD5100")]
		private void Start()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xFD52A4", Offset = "0xFD52A4", VA = "0xFD52A4")]
		public RagdollHelper()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class RingHelper : MonoBehaviour
	{
		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color RingColor;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color RingSelectedColor;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color RingSecondarySelectedColor;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float ringSizeInRange;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float ringSizeGrabbable;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool HideIfHandsAreFull;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float RingFadeSpeed;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Canvas canvas;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text text;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Grabbable grabbable;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CanvasScaler scaler;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Grabber leftGrabber;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabber rightGrabber;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool handsFull;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _initalOpacity;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _currentOpacity;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform mainCam;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Grabber closestGrabber;

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xFA2B6C", Offset = "0xFA2B6C", VA = "0xFA2B6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xFA2DD4", Offset = "0xFA2DD4", VA = "0xFA2DD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xFA31CC", Offset = "0xFA31CC", VA = "0xFA31CC")]
		private Color getSelectedColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xFA32DC", Offset = "0xFA32DC", VA = "0xFA32DC")]
		public RingHelper()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class ScaleMaterialHelper : MonoBehaviour
	{
		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer ren;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 Tiling;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 Offset;

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xFA57E8", Offset = "0xFA57E8", VA = "0xFA57E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xFA58A4", Offset = "0xFA58A4", VA = "0xFA58A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xFA5848", Offset = "0xFA5848", VA = "0xFA5848")]
		private void updateTexture()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xFA58DC", Offset = "0xFA58DC", VA = "0xFA58DC")]
		public ScaleMaterialHelper()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class StaticBatch : MonoBehaviour
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material CombineMaterial;

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xFB2F98", Offset = "0xFB2F98", VA = "0xFB2F98")]
		private void Start()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xFB35F0", Offset = "0xFB35F0", VA = "0xFB35F0")]
		public StaticBatch()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class TeleportDestination : MonoBehaviour
	{
		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform DestinationTransform;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ForcePlayerRotation;

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xFB9BDC", Offset = "0xFB9BDC", VA = "0xFB9BDC")]
		public TeleportDestination()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class TeleportPlayerOnEnter : MonoBehaviour
	{
		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TeleportDestination;

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xFBB1C8", Offset = "0xFBB1C8", VA = "0xFBB1C8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xFBB318", Offset = "0xFBB318", VA = "0xFBB318")]
		public TeleportPlayerOnEnter()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class UIPointer : MonoBehaviour
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3558", Offset = "0x3C3558")]
		public ControllerHand ControllerSide;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3590", Offset = "0x3C3590")]
		public bool AutoUpdateUITransforms;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cursor;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _cursor;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C35C8", Offset = "0x3C35C8")]
		public float LineDistanceModifier;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VRUISystem uiSystem;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3600", Offset = "0x3C3600")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xFC386C", Offset = "0xFC386C", VA = "0xFC386C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xFC39D4", Offset = "0xFC39D4", VA = "0xFC39D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xFC3A50", Offset = "0xFC3A50", VA = "0xFC3A50")]
		private void Update()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xFC3C34", Offset = "0xFC3C34", VA = "0xFC3C34")]
		public UIPointer()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B8E38", Offset = "0x3B8E38")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x3B8E38", Offset = "0x3B8E38")]
	public class VRCanvas : MonoBehaviour
	{
		[Token(Token = "0x6001115")]
		[Address(RVA = "0xFC4858", Offset = "0xFC4858", VA = "0xFC4858")]
		private void Start()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xFC48D8", Offset = "0xFC48D8", VA = "0xFC48D8")]
		public VRCanvas()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class VRUISystem : BaseInputModule
	{
		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3638", Offset = "0x3C3638")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3638", Offset = "0x3C3638")]
		public ControllerHand SelectedHand;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3698", Offset = "0x3C3698")]
		public Transform LeftPointerTransform;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C36D0", Offset = "0x3C36D0")]
		public Transform RightPointerTransform;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3708", Offset = "0x3C3708")]
		public List<ControllerBinding> ControllerInput;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3740", Offset = "0x3C3740")]
		public bool AllowMouseInput;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3778", Offset = "0x3C3778")]
		public GameObject PressingObject;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject DraggingObject;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject ReleasingObject;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C37B0", Offset = "0x3C37B0")]
		private PointerEventData <EventData>k__BackingField;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Camera cameraCaster;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject _initialPressObject;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _lastInputDown;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRUISystem _instance;

		[Token(Token = "0x170001BA")]
		public PointerEventData EventData
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x5E9384", Offset = "0x5E9384", VA = "0x5E9384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C786C", Offset = "0x3C786C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x5E938C", Offset = "0x5E938C", VA = "0x5E938C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3C787C", Offset = "0x3C787C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public static VRUISystem Instance
		{
			[Token(Token = "0x6001119")]
			[Address(RVA = "0x5E9394", Offset = "0x5E9394", VA = "0x5E9394")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x5E95A0", Offset = "0x5E95A0", VA = "0x5E95A0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x5E97E8", Offset = "0x5E97E8", VA = "0x5E97E8")]
		private void init()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x5E992C", Offset = "0x5E992C", VA = "0x5E992C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x5E9FE0", Offset = "0x5E9FE0", VA = "0x5E9FE0", Slot = "27")]
		public virtual bool InputReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x5EA0F8", Offset = "0x5EA0F8", VA = "0x5EA0F8", Slot = "28")]
		public virtual void PressDown()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x5E9B50", Offset = "0x5E9B50", VA = "0x5E9B50")]
		public void Press()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x5E9D40", Offset = "0x5E9D40", VA = "0x5E9D40")]
		public void Release()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x5EA334", Offset = "0x5EA334", VA = "0x5EA334", Slot = "29")]
		public virtual void ClearAll()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x5EA3BC", Offset = "0x5EA3BC", VA = "0x5EA3BC", Slot = "30")]
		public virtual void SetPressingObject(GameObject pressing)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x5EA3F4", Offset = "0x5EA3F4", VA = "0x5EA3F4", Slot = "31")]
		public virtual void SetDraggingObject(GameObject dragging)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x5EA418", Offset = "0x5EA418", VA = "0x5EA418", Slot = "32")]
		public virtual void SetReleasingObject(GameObject releasing)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x5EA420", Offset = "0x5EA420", VA = "0x5EA420", Slot = "33")]
		public virtual void AssignCameraToAllCanvases(Camera cam)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x5EA510", Offset = "0x5EA510", VA = "0x5EA510", Slot = "34")]
		public virtual void AddCanvas(Canvas canvas)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x5EA524", Offset = "0x5EA524", VA = "0x5EA524", Slot = "35")]
		public virtual void AddCanvasToCamera(Canvas canvas, Camera cam)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x5E9680", Offset = "0x5E9680", VA = "0x5E9680")]
		public void UpdateControllerHand(ControllerHand hand)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x5EA544", Offset = "0x5EA544", VA = "0x5EA544")]
		public VRUISystem()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class DestroyIfPlayMode : MonoBehaviour
	{
		[Token(Token = "0x600112A")]
		[Address(RVA = "0x803C98", Offset = "0x803C98", VA = "0x803C98")]
		private void Start()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x803D64", Offset = "0x803D64", VA = "0x803D64")]
		public DestroyIfPlayMode()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class VRUtils : MonoBehaviour
	{
		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRUtils Instance;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color DebugTextColor;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform DebugTextHolder;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float MaxTextEntries;

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x5EA5FC", Offset = "0x5EA5FC", VA = "0x5EA5FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x5EA654", Offset = "0x5EA654", VA = "0x5EA654")]
		public void Log(string msg)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x5EAA04", Offset = "0x5EAA04", VA = "0x5EAA04")]
		public AudioSource PlaySpatialClipAt(AudioClip clip, Vector3 pos, float volume, float spatialBlend = 1f, float randomizePitch = 0f)
		{
			return null;
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x5EABD0", Offset = "0x5EABD0", VA = "0x5EABD0")]
		private float getRandomizedPitch(float randomAmount)
		{
			return default(float);
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x5EAC18", Offset = "0x5EAC18", VA = "0x5EAC18")]
		public VRUtils()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class AmmoDispenser : MonoBehaviour
	{
		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber LeftGrabber;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber RightGrabber;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject AmmoDispenserObject;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject PistolClip;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ShotgunShell;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject RifleClip;

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x7632DC", Offset = "0x7632DC", VA = "0x7632DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x763354", Offset = "0x763354", VA = "0x763354")]
		private bool grabberHasWeapon(Grabber g)
		{
			return default(bool);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x7634B0", Offset = "0x7634B0", VA = "0x7634B0")]
		private GameObject getAmmo()
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x763710", Offset = "0x763710", VA = "0x763710")]
		public void GrabAmmo(Grabber grabber)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x763984", Offset = "0x763984", VA = "0x763984")]
		public AmmoDispenser()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class AmmoDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaycastWeapon Weapon;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text AmmoLabel;

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x76398C", Offset = "0x76398C", VA = "0x76398C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x763A74", Offset = "0x763A74", VA = "0x763A74")]
		public AmmoDisplay()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x6001138")]
		[Address(RVA = "0x770F88", Offset = "0x770F88", VA = "0x770F88")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class BulletInsert : MonoBehaviour
	{
		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaycastWeapon Weapon;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string AcceptBulletName;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip InsertSound;

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x7713BC", Offset = "0x7713BC", VA = "0x7713BC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x771634", Offset = "0x771634", VA = "0x771634")]
		public BulletInsert()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class MagazineSlide : MonoBehaviour
	{
		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B977C", Offset = "0x3B977C")]
		private sealed class <EjectMagRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400166A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable ejectedMag;

			[Token(Token = "0x400166B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagazineSlide <>4__this;

			[Token(Token = "0x17000274")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014BF")]
				[Address(RVA = "0x5FAA1C", Offset = "0x5FAA1C", VA = "0x5FAA1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000275")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014C1")]
				[Address(RVA = "0x5FAA64", Offset = "0x5FAA64", VA = "0x5FAA64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014BC")]
			[Address(RVA = "0x5FA76C", Offset = "0x5FA76C", VA = "0x5FA76C")]
			[DebuggerHidden]
			public <EjectMagRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60014BD")]
			[Address(RVA = "0x5FA798", Offset = "0x5FA798", VA = "0x5FA798", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014BE")]
			[Address(RVA = "0x5FA79C", Offset = "0x5FA79C", VA = "0x5FA79C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014C0")]
			[Address(RVA = "0x5FAA24", Offset = "0x5FAA24", VA = "0x5FAA24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AcceptableMagazineName;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable AttachedWeapon;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ClipSnapDistance;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ClipUnsnapDistance;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float EjectForce;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Grabbable HeldMagazine;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider HeldCollider;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MagazineDistance;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool magazineInPlace;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool lockedInPlace;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip ClipAttachSound;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip ClipDetachSound;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RaycastWeapon parentWeapon;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GrabberArea grabClipArea;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastEjectTime;

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x986388", Offset = "0x986388", VA = "0x986388")]
		private void Start()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x986484", Offset = "0x986484", VA = "0x986484")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x9869B8", Offset = "0x9869B8", VA = "0x9869B8")]
		private bool recentlyEjected()
		{
			return default(bool);
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x986964", Offset = "0x986964", VA = "0x986964")]
		private void moveMagazine(Vector3 localPosition)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x986760", Offset = "0x986760", VA = "0x986760")]
		private void checkGrabClipInput()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x9869F4", Offset = "0x9869F4", VA = "0x9869F4")]
		private void attachMagazine()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x986C70", Offset = "0x986C70", VA = "0x986C70")]
		private Grabbable detachMagazine()
		{
			return null;
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x987054", Offset = "0x987054", VA = "0x987054")]
		public void EjectMagazine()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x98709C", Offset = "0x98709C", VA = "0x98709C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C788C", Offset = "0x3C788C")]
		private IEnumerator EjectMagRoutine(Grabbable ejectedMag)
		{
			return null;
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x986F7C", Offset = "0x986F7C", VA = "0x986F7C")]
		public void OnGrabClipArea(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x987114", Offset = "0x987114", VA = "0x987114")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x9872B0", Offset = "0x9872B0", VA = "0x9872B0")]
		public MagazineSlide()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class Projectile : MonoBehaviour
	{
		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B978C", Offset = "0x3B978C")]
		private sealed class <CheckForRaycast>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400166C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400166D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400166E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Projectile <>4__this;

			[Token(Token = "0x17000276")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014C5")]
				[Address(RVA = "0x88A2BC", Offset = "0x88A2BC", VA = "0x88A2BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000277")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014C7")]
				[Address(RVA = "0x88A304", Offset = "0x88A304", VA = "0x88A304", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x88A1B0", Offset = "0x88A1B0", VA = "0x88A1B0")]
			[DebuggerHidden]
			public <CheckForRaycast>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x88A1DC", Offset = "0x88A1DC", VA = "0x88A1DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x88A1E0", Offset = "0x88A1E0", VA = "0x88A1E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x88A2C4", Offset = "0x88A2C4", VA = "0x88A2C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject HitFXPrefab;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _checkRaycast;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Damage;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AddRigidForce;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool StickToObject;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MinForceHit;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C37C0", Offset = "0x3C37C0")]
		public UnityEvent onDealtDamageEvent;

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xFD45B8", Offset = "0xFD45B8", VA = "0xFD45B8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xFD45C4", Offset = "0xFD45C4", VA = "0xFD45C4", Slot = "4")]
		public virtual void OnCollisionEvent(Collision collision)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xFD48E4", Offset = "0xFD48E4", VA = "0xFD48E4", Slot = "5")]
		public virtual void DoHitFX(Vector3 pos, Quaternion rot, Collider col)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xFD4AF0", Offset = "0xFD4AF0", VA = "0xFD4AF0", Slot = "6")]
		public virtual void MarkAsRaycastBullet()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xFD4B98", Offset = "0xFD4B98", VA = "0xFD4B98", Slot = "7")]
		public virtual void DoRayCastProjectile()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xFD4B24", Offset = "0xFD4B24", VA = "0xFD4B24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C78F4", Offset = "0x3C78F4")]
		private IEnumerator CheckForRaycast()
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xFD4D7C", Offset = "0xFD4D7C", VA = "0xFD4D7C")]
		public Projectile()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class RaycastWeapon : GrabbableEvents
	{
		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B979C", Offset = "0x3B979C")]
		private sealed class <doMuzzleFlash>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400166F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaycastWeapon <>4__this;

			[Token(Token = "0x17000278")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014CB")]
				[Address(RVA = "0x88A9A8", Offset = "0x88A9A8", VA = "0x88A9A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000279")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014CD")]
				[Address(RVA = "0x88A9F0", Offset = "0x88A9F0", VA = "0x88A9F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x88A854", Offset = "0x88A854", VA = "0x88A854")]
			[DebuggerHidden]
			public <doMuzzleFlash>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x88A880", Offset = "0x88A880", VA = "0x88A880", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x88A884", Offset = "0x88A884", VA = "0x88A884", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014CC")]
			[Address(RVA = "0x88A9B0", Offset = "0x88A9B0", VA = "0x88A9B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x3B97AC", Offset = "0x3B97AC")]
		private sealed class <animateSlideAndEject>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaycastWeapon <>4__this;

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <frames>5__2;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <slideEndReached>5__3;

			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <slideDestination>5__4;

			[Token(Token = "0x4001678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <slideBeginningReached>5__5;

			[Token(Token = "0x1700027A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014D1")]
				[Address(RVA = "0x88A804", Offset = "0x88A804", VA = "0x88A804", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014D3")]
				[Address(RVA = "0x88A84C", Offset = "0x88A84C", VA = "0x88A84C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x88A30C", Offset = "0x88A30C", VA = "0x88A30C")]
			[DebuggerHidden]
			public <animateSlideAndEject>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x88A338", Offset = "0x88A338", VA = "0x88A338", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x88A33C", Offset = "0x88A33C", VA = "0x88A33C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x88A80C", Offset = "0x88A80C", VA = "0x88A80C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C37F8", Offset = "0x3C37F8")]
		public float MaxRange;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Damage;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3830", Offset = "0x3C3830")]
		public FiringType FiringMethod;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ReloadType ReloadMethod;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3868", Offset = "0x3C3868")]
		public float FiringRate;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lastShotTime;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C38A0", Offset = "0x3C38A0")]
		public float BulletImpactForce;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C38D8", Offset = "0x3C38D8")]
		public float MaxInternalAmmo;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3910", Offset = "0x3C3910")]
		public bool AutoChamberRounds;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3948", Offset = "0x3C3948")]
		public bool MustChamberRounds;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3980", Offset = "0x3C3980")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3980", Offset = "0x3C3980")]
		public bool AlwaysFireProjectile;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C39E0", Offset = "0x3C39E0")]
		public bool FireProjectileInSlowMo;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3A18", Offset = "0x3C3A18")]
		public float SlowMoRateOfFire;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3A50", Offset = "0x3C3A50")]
		public float ShotForce;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3A88", Offset = "0x3C3A88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3A88", Offset = "0x3C3A88")]
		public Vector3 RecoilForce;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3AE8", Offset = "0x3C3AE8")]
		public float RecoilDuration;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody weaponRigid;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3B20", Offset = "0x3C3B20")]
		public LayerMask ValidLayers;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3B58", Offset = "0x3C3B58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3B58", Offset = "0x3C3B58")]
		public Transform TriggerTransform;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3BB8", Offset = "0x3C3BB8")]
		public Transform SlideTransform;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3BF0", Offset = "0x3C3BF0")]
		public Transform MuzzlePointTransform;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3C28", Offset = "0x3C3C28")]
		public Transform EjectPointTransform;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3C60", Offset = "0x3C3C60")]
		public Transform ChamberedBullet;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3C98", Offset = "0x3C3C98")]
		public GameObject MuzzleFlashObject;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3CD0", Offset = "0x3C3CD0")]
		public GameObject BulletCasingPrefab;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3D08", Offset = "0x3C3D08")]
		public GameObject ProjectilePrefab;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3D40", Offset = "0x3C3D40")]
		public GameObject HitFXPrefab;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3D78", Offset = "0x3C3D78")]
		public AudioClip GunShotSound;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3DB0", Offset = "0x3C3DB0")]
		public AudioClip EmptySound;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3DE8", Offset = "0x3C3DE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3DE8", Offset = "0x3C3DE8")]
		public float SlideDistance;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3E48", Offset = "0x3C3E48")]
		public bool ForceSlideBackOnLastShot;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3E80", Offset = "0x3C3E80")]
		public float slideSpeed;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float minSlideDistance;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3EB8", Offset = "0x3C3EB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3EB8", Offset = "0x3C3EB8")]
		public Grabbable SecondHandGrabbable;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3F18", Offset = "0x3C3F18")]
		public float SecondHandLookSpeed;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Rigidbody secondHandRigid;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3F50", Offset = "0x3C3F50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3F50", Offset = "0x3C3F50")]
		public bool BulletInChamber;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3FB0", Offset = "0x3C3FB0")]
		public bool EmptyBulletInChamber;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x3C3FE8", Offset = "0x3C3FE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C3FE8", Offset = "0x3C3FE8")]
		public UnityEvent onShootEvent;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C4048", Offset = "0x3C4048")]
		public UnityEvent onAttachedAmmoEvent;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C4080", Offset = "0x3C4080")]
		public UnityEvent onDetachedAmmoEvent;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C40B8", Offset = "0x3C40B8")]
		public UnityEvent onWeaponChargedEvent;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C40F0", Offset = "0x3C40F0")]
		public FloatEvent onDealtDamageEvent;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C4128", Offset = "0x3C4128")]
		public RaycastHitEvent onRaycastHitEvent;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool slideForcedBack;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private WeaponSlide ws;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool readyToShoot;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private IEnumerator shotRoutine;

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xFD6CD8", Offset = "0xFD6CD8", VA = "0xFD6CD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xFD6EB8", Offset = "0xFD6EB8", VA = "0xFD6EB8", Slot = "15")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xFD6FE0", Offset = "0xFD6FE0", VA = "0xFD6FE0", Slot = "19")]
		public override void OnButton1Down()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xFD7078", Offset = "0xFD7078", VA = "0xFD7078", Slot = "22")]
		public override void OnButton2Down()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xFD7134", Offset = "0xFD7134", VA = "0xFD7134", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xFD722C", Offset = "0xFD722C", VA = "0xFD722C", Slot = "26")]
		public virtual void Shoot()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xFD78E4", Offset = "0xFD78E4", VA = "0xFD78E4", Slot = "27")]
		public virtual void ApplyRecoil()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xFD7A84", Offset = "0xFD7A84", VA = "0xFD7A84", Slot = "28")]
		public virtual void OnRaycastHit(RaycastHit hit)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xFD7D2C", Offset = "0xFD7D2C", VA = "0xFD7D2C", Slot = "29")]
		public virtual void ApplyParticleFX(Vector3 position, Quaternion rotation, Collider attachTo)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xFD7EA0", Offset = "0xFD7EA0", VA = "0xFD7EA0", Slot = "30")]
		public virtual void OnAttachedAmmo()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xFD7ED8", Offset = "0xFD7ED8", VA = "0xFD7ED8", Slot = "31")]
		public virtual void OnDetachedAmmo()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xFD7F10", Offset = "0xFD7F10", VA = "0xFD7F10", Slot = "32")]
		public virtual int GetBulletCount()
		{
			return default(int);
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xFD7F80", Offset = "0xFD7F80", VA = "0xFD7F80")]
		private void removeBullet()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xFD6DF4", Offset = "0xFD6DF4", VA = "0xFD6DF4")]
		private void updateChamberedBullet()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xFD77B0", Offset = "0xFD77B0", VA = "0xFD77B0")]
		private void chamberRound()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xFD8080", Offset = "0xFD8080", VA = "0xFD8080")]
		private void randomizeMuzzleFlashScaleRotation()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xFD8148", Offset = "0xFD8148", VA = "0xFD8148", Slot = "33")]
		public virtual void OnWeaponCharged(bool allowCasingEject)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xFD81FC", Offset = "0xFD81FC", VA = "0xFD81FC", Slot = "34")]
		protected virtual void ejectCasing()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xFD7870", Offset = "0xFD7870", VA = "0xFD7870")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C795C", Offset = "0x3C795C")]
		private IEnumerator doMuzzleFlash()
		{
			return null;
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xFD77FC", Offset = "0xFD77FC", VA = "0xFD77FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x3C79C4", Offset = "0x3C79C4")]
		private IEnumerator animateSlideAndEject()
		{
			return null;
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xFD8384", Offset = "0xFD8384", VA = "0xFD8384")]
		public RaycastWeapon()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public enum FiringType
	{
		[Token(Token = "0x400117D")]
		Semi,
		[Token(Token = "0x400117E")]
		Automatic
	}
	[Token(Token = "0x20002BC")]
	public enum ReloadType
	{
		[Token(Token = "0x4001180")]
		InfiniteAmmo,
		[Token(Token = "0x4001181")]
		ManualClip
	}
	[Token(Token = "0x20002BD")]
	public class WeaponSlide : MonoBehaviour
	{
		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinLocalZ;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxLocalZ;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool slidingBack;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool LockedBack;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SlideReleaseSound;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip LockedBackSound;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ZeroMassWhenNotHeld;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RaycastWeapon parentWeapon;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable parentGrabbable;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 initialLocalPos;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Grabbable thisGrabbable;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audioSource;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float initialMass;

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x5EDAC8", Offset = "0x5EDAC8", VA = "0x5EDAC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x5EDC9C", Offset = "0x5EDC9C", VA = "0x5EDC9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x5EE078", Offset = "0x5EE078", VA = "0x5EE078")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x5EE174", Offset = "0x5EE174", VA = "0x5EE174")]
		public void LockBack()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x5EDE10", Offset = "0x5EDE10", VA = "0x5EDE10")]
		public void UnlockBack()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x5EDF40", Offset = "0x5EDF40", VA = "0x5EDF40")]
		private void onSlideBack()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x5EE014", Offset = "0x5EE014", VA = "0x5EE014")]
		private void onSlideForward()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x5EE23C", Offset = "0x5EE23C", VA = "0x5EE23C")]
		private void playSoundInterval(float fromSeconds, float toSeconds, float volume)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x5EE388", Offset = "0x5EE388", VA = "0x5EE388")]
		public WeaponSlide()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class ButtonXH : MonoBehaviour
	{
		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C4160", Offset = "0x3C4160")]
		public float MinLocalY;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C4198", Offset = "0x3C4198")]
		public float MaxLocalY;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C41D0", Offset = "0x3C41D0")]
		public float ClickTolerance;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject highlightObject;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C4208", Offset = "0x3C4208")]
		public ButtonFromBelowHelperXH bottomHelper;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Grabber> grabbers;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool clickingDown;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ButtonClick;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip ButtonClickUp;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onButtonDown;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onButtonUp;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent onButtonGoingDown;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onButtonReturning;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AudioSource audioSource;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody rigid;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool previousFrameGrabber;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float ButtonSpeed;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 buttonDownPosition;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 buttonUpPosition;

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x7737F4", Offset = "0x7737F4", VA = "0x7737F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x773938", Offset = "0x773938", VA = "0x773938")]
		private void Update()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x773C64", Offset = "0x773C64", VA = "0x773C64", Slot = "4")]
		public virtual Vector3 GetButtonUpPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x773CC8", Offset = "0x773CC8", VA = "0x773CC8", Slot = "5")]
		public virtual Vector3 GetButtonDownPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x773D2C", Offset = "0x773D2C", VA = "0x773D2C", Slot = "6")]
		public virtual void OnButtonDown()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x773E14", Offset = "0x773E14", VA = "0x773E14", Slot = "7")]
		public virtual void OnButtonUp()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x773EFC", Offset = "0x773EFC", VA = "0x773EFC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x774090", Offset = "0x774090", VA = "0x774090")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x77419C", Offset = "0x77419C", VA = "0x77419C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x774348", Offset = "0x774348", VA = "0x774348")]
		public ButtonXH()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class HingeHelperXH : GrabbableEvents
	{
		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C4240", Offset = "0x3C4240")]
		public bool SnapToDegrees;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C4278", Offset = "0x3C4278")]
		public float SnapDegrees;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C42B0", Offset = "0x3C42B0")]
		public Transform SnapGraphics;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C42E8", Offset = "0x3C42E8")]
		public AudioClip SnapSound;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C4320", Offset = "0x3C4320")]
		public float RandomizePitch;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x3C4358", Offset = "0x3C4358")]
		public float SnapHaptics;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text LabelToUpdate;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float minRange;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float maxRange;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatEvent onHingeChange;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FloatEvent onHingeSnapChange;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FloatEvent OnHingeSnapChangeDirection;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody rigid;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _lastDegrees;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _lastSnapDegrees;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float debugRotation;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float additiveDegrees;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float previousDegrees;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Quaternion previousRotation;

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x9AFE00", Offset = "0x9AFE00", VA = "0x9AFE00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x9AFE80", Offset = "0x9AFE80", VA = "0x9AFE80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x9B02D0", Offset = "0x9B02D0", VA = "0x9B02D0")]
		public void OnSnapChange(float yAngle)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x9B045C", Offset = "0x9B045C", VA = "0x9B045C", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x9B0260", Offset = "0x9B0260", VA = "0x9B0260")]
		public void OnHingeChange(float hingeAmount)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x9B04BC", Offset = "0x9B04BC", VA = "0x9B04BC")]
		private float getSmoothedValue(float val)
		{
			return default(float);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x9B04E0", Offset = "0x9B04E0", VA = "0x9B04E0")]
		public HingeHelperXH()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class JoystickControlXH : MonoBehaviour
	{
		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinDegrees;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxDegrees;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UseSmoothLook;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SmoothLookSpeed;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool KinematicWhileInactive;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float deadZone;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FloatFloatEvent onJoystickChange;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityFloatEvent xDeviation;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityFloatEvent yDeviation;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable grab;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rigidbody rb;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 currentRotation;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float angleX;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float angleY;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float _currentX;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float _currentY;

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x97C96C", Offset = "0x97C96C", VA = "0x97C96C")]
		private void Start()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x97C9EC", Offset = "0x97C9EC", VA = "0x97C9EC")]
		private void Update()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x97CDE0", Offset = "0x97CDE0", VA = "0x97CDE0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x97CDE4", Offset = "0x97CDE4", VA = "0x97CDE4")]
		private void doJoystickLook()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x97D1AC", Offset = "0x97D1AC", VA = "0x97D1AC", Slot = "4")]
		public virtual void OnJoystickChange(float leverX, float leverY)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x97D224", Offset = "0x97D224", VA = "0x97D224")]
		public JoystickControlXH()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class SliderXH : MonoBehaviour
	{
		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _slidePercentage;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatEvent onSliderChange;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastSliderPercentage;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float slideRangeLow;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float slideRangeHigh;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float slideRange;

		[Token(Token = "0x170001BC")]
		public float SlidePercentage
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0xFAAA60", Offset = "0xFAAA60", VA = "0xFAAA60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xFAAA68", Offset = "0xFAAA68", VA = "0xFAAA68")]
		private void Start()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xFAAB7C", Offset = "0xFAAB7C", VA = "0xFAAB7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xFAABF8", Offset = "0xFAABF8", VA = "0xFAABF8")]
		public void AdjustValue(float val)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xFAAC5C", Offset = "0xFAAC5C", VA = "0xFAAC5C")]
		public void SetValue(float val)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xFAAC98", Offset = "0xFAAC98", VA = "0xFAAC98", Slot = "4")]
		public virtual void OnSliderChange(float percentage)
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xFAAD08", Offset = "0xFAAD08", VA = "0xFAAD08")]
		public SliderXH()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class SliderController : MonoBehaviour
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool KinematicWhileInactive;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _slidePercentage;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatEvent onSliderChange;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastSliderPercentage;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float slideRangeLow;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float slideRangeHigh;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float slideRange;

		[Token(Token = "0x170001BD")]
		public float SlidePercentage
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xFAA834", Offset = "0xFAA834", VA = "0xFAA834")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xFAA83C", Offset = "0xFAA83C", VA = "0xFAA83C")]
		private void Start()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xFAA950", Offset = "0xFAA950", VA = "0xFAA950")]
		private void Update()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xFAA9DC", Offset = "0xFAA9DC", VA = "0xFAA9DC", Slot = "4")]
		public virtual void OnSliderChange(float percentage)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xFAAA4C", Offset = "0xFAAA4C", VA = "0xFAAA4C")]
		public SliderController()
		{
		}
	}
}
