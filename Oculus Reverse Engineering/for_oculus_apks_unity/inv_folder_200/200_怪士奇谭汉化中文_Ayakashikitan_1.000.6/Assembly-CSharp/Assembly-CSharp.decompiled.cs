using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net.Security;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.RegularExpressions;
using Il2CppDummyDll;
using NL.Common;
using Oculus.Spatializer.Propagation;
using RenderHeads.Media.AVProMovieCapture;
using RenderHeads.Media.AVProVideo;
using RootMotion.FinalIK;
using Tayx.Graphy.Advanced;
using Tayx.Graphy.Audio;
using Tayx.Graphy.Fps;
using Tayx.Graphy.Graph;
using Tayx.Graphy.Ram;
using Tayx.Graphy.UI;
using Tayx.Graphy.Utils;
using Unity.Burst;
using Unity.Collections;
using Unity.Jobs;
using Unity.Mathematics;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Jobs;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityStandardAssets.Characters.ThirdPerson;
using UnityStandardAssets.Effects;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ME_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Character;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Model;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Current;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light Sun;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light[] NightLights;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture HUETexture;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseMobileVersion;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MobileCharacter;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Target;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color guiColor;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentNomber;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject characterInstance;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject modelInstance;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float dpiScale;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isDay;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float colorHUE;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float startSunIntensity;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion startSunRotation;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color startAmbientLight;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float startAmbientIntencity;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float startReflectionIntencity;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private LightShadows startLightShadows;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool isButtonPressed;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject instanceShieldProjectile;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x827888", Offset = "0x827888", VA = "0x827888")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x827E3C", Offset = "0x827E3C", VA = "0x827E3C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x827A48", Offset = "0x827A48", VA = "0x827A48")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x82862C", Offset = "0x82862C", VA = "0x82862C")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x828758", Offset = "0x828758", VA = "0x828758")]
	private void ReactivateEffect()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x8287F0", Offset = "0x8287F0", VA = "0x8287F0")]
	public ME_DemoGUI()
	{
	}
}
[Token(Token = "0x2000003")]
public class ME_FPS : MonoBehaviour
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUIStyle guiStyleHeader;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeleft;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeleft2;

	[Token(Token = "0x4000020")]
	private const float updateTime = 0.5f;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fps;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int frames;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x829F58", Offset = "0x829F58", VA = "0x829F58")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x82A048", Offset = "0x82A048", VA = "0x82A048")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x82A0A8", Offset = "0x82A0A8", VA = "0x82A0A8")]
	public ME_FPS()
	{
	}
}
[Token(Token = "0x2000004")]
public class ME_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x82A2F8", Offset = "0x82A2F8", VA = "0x82A2F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x82A338", Offset = "0x82A338", VA = "0x82A338")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x82A8AC", Offset = "0x82A8AC", VA = "0x82A8AC")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x82A95C", Offset = "0x82A95C", VA = "0x82A95C")]
	public ME_MouseOrbit()
	{
	}
}
[Token(Token = "0x2000005")]
public class ME_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool CanUpdate;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x82C4F8", Offset = "0x82C4F8", VA = "0x82C4F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x82C574", Offset = "0x82C574", VA = "0x82C574")]
	private void Update()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x82C654", Offset = "0x82C654", VA = "0x82C654")]
	public ME_RealtimeReflection()
	{
	}
}
[Token(Token = "0x2000006")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6648C8", Offset = "0x6648C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6648C8", Offset = "0x6648C8")]
[ExecuteInEditMode]
public class ME_DistortionAndBloom : MonoBehaviour
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask CullingMask;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6678C0", Offset = "0x6678C0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6678C0", Offset = "0x6678C0")]
	public float RenderTextureResolutoinFactor;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseBloom;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667918", Offset = "0x667918")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667918", Offset = "0x667918")]
	public float Threshold;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667970", Offset = "0x667970")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667970", Offset = "0x667970")]
	public float SoftKnee;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6679D4", Offset = "0x6679D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6679D4", Offset = "0x6679D4")]
	public float Radius;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667A28", Offset = "0x667A28")]
	public float Intensity;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667A60", Offset = "0x667A60")]
	public bool HighQuality;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667A98", Offset = "0x667A98")]
	public bool AntiFlicker;

	[Token(Token = "0x4000038")]
	private const string shaderName = "Hidden/KriptoFX/PostEffects/ME_Bloom";

	[Token(Token = "0x4000039")]
	private const string shaderAdditiveName = "Hidden/KriptoFX/PostEffects/ME_BloomAdditive";

	[Token(Token = "0x400003A")]
	private const string cameraName = "MobileCamera(Distort_Bloom_Depth)";

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture source;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture depth;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture destination;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int previuosFrameWidth;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int previuosFrameHeight;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float previousScale;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera addCamera;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject tempGO;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool HDRSupported;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material m_Material;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material m_MaterialAdditive;

	[Token(Token = "0x4000046")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x17000001")]
	public Material mat
	{
		[Token(Token = "0x6000011")]
		[Address(RVA = "0x8288A0", Offset = "0x8288A0", VA = "0x8288A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	public Material matAdditive
	{
		[Token(Token = "0x6000012")]
		[Address(RVA = "0x828A14", Offset = "0x828A14", VA = "0x828A14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x82893C", Offset = "0x82893C", VA = "0x82893C")]
	public static Material CheckShaderAndCreateMaterial(Shader s)
	{
		return null;
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x828AC8", Offset = "0x828AC8", VA = "0x828AC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x828C4C", Offset = "0x828C4C", VA = "0x828C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x828E08", Offset = "0x828E08", VA = "0x828E08")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x829CF4", Offset = "0x829CF4", VA = "0x829CF4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x828C50", Offset = "0x828C50", VA = "0x828C50")]
	private void InitializeRenderTarget()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x829314", Offset = "0x829314", VA = "0x829314")]
	private void UpdateBloom()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x828FA4", Offset = "0x828FA4", VA = "0x828FA4")]
	private void GrabImage()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x829D78", Offset = "0x829D78", VA = "0x829D78")]
	public ME_DistortionAndBloom()
	{
	}
}
[Token(Token = "0x2000007")]
public class ME_AnimatorEvents : MonoBehaviour
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectPrefab;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SwordPrefab;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SwordPosition;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform StartSwordPosition;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject EffectInstance;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject SwordInstance;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x825788", Offset = "0x825788", VA = "0x825788")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x825948", Offset = "0x825948", VA = "0x825948")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x825C04", Offset = "0x825C04", VA = "0x825C04")]
	public void ActivateSword()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x825D70", Offset = "0x825D70", VA = "0x825D70")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x82634C", Offset = "0x82634C", VA = "0x82634C")]
	public ME_AnimatorEvents()
	{
	}
}
[Token(Token = "0x2000008")]
public static class ME_ColorHelper
{
	[Token(Token = "0x2000009")]
	public struct HSBColor
	{
		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x6000028")]
		[Address(RVA = "0x6FA170", Offset = "0x6FA170", VA = "0x6FA170")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x400004F")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x825EE4", Offset = "0x825EE4", VA = "0x825EE4")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x8260D8", Offset = "0x8260D8", VA = "0x8260D8")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x826360", Offset = "0x826360", VA = "0x826360")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x826480", Offset = "0x826480", VA = "0x826480")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x8272B4", Offset = "0x8272B4", VA = "0x8272B4")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x8273C0", Offset = "0x8273C0", VA = "0x8273C0")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x200000A")]
public class ME_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x829E1C", Offset = "0x829E1C", VA = "0x829E1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x829E20", Offset = "0x829E20", VA = "0x829E20")]
	private void Update()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x829E68", Offset = "0x829E68", VA = "0x829E68")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x829F24", Offset = "0x829F24", VA = "0x829F24")]
	public ME_EffectSettingColor()
	{
	}
}
[Token(Token = "0x200000B")]
[ExecuteInEditMode]
public class ME_CustomPostEffectIgnore : MonoBehaviour
{
	[Token(Token = "0x600002D")]
	[Address(RVA = "0x8277FC", Offset = "0x8277FC", VA = "0x8277FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x827880", Offset = "0x827880", VA = "0x827880")]
	public ME_CustomPostEffectIgnore()
	{
	}
}
[Token(Token = "0x200000C")]
public class ME_LightCurves : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x82A110", Offset = "0x82A110", VA = "0x82A110")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x82A1B8", Offset = "0x82A1B8", VA = "0x82A1B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x82A1E8", Offset = "0x82A1E8", VA = "0x82A1E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x82A2AC", Offset = "0x82A2AC", VA = "0x82A2AC")]
	public ME_LightCurves()
	{
	}
}
[Token(Token = "0x200000D")]
public class ME_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsFirstMaterial;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x82A2F0", Offset = "0x82A2F0", VA = "0x82A2F0")]
	public ME_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x200000E")]
[ExecuteInEditMode]
public class ME_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilboard;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x82A978", Offset = "0x82A978", VA = "0x82A978")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x82AA98", Offset = "0x82AA98", VA = "0x82AA98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x82AB00", Offset = "0x82AB00", VA = "0x82AB00")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x82AC54", Offset = "0x82AC54", VA = "0x82AC54")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x82B1D0", Offset = "0x82B1D0", VA = "0x82B1D0")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x82B2A0", Offset = "0x82B2A0", VA = "0x82B2A0")]
	public ME_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x200000F")]
[ExecuteInEditMode]
public class ME_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DistanceRelative;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 prevPos;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x82B354", Offset = "0x82B354", VA = "0x82B354")]
	private void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x82B3C8", Offset = "0x82B3C8", VA = "0x82B3C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x82B810", Offset = "0x82B810", VA = "0x82B810")]
	public ME_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x2000010")]
public class ME_ParticleTrails : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000011")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664990", Offset = "0x664990")]
	private sealed class <>c
	{
		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<uint, GameObject>, bool> <>9__9_0;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<uint, GameObject>, uint> <>9__9_1;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<uint, GameObject>, GameObject> <>9__9_2;

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x82C3A0", Offset = "0x82C3A0", VA = "0x82C3A0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000046")]
		[Address(RVA = "0x82C3A8", Offset = "0x82C3A8", VA = "0x82C3A8")]
		internal bool <ClearEmptyHashes>b__9_0(KeyValuePair<uint, GameObject> h)
		{
			return default(bool);
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0x82C440", Offset = "0x82C440", VA = "0x82C440")]
		internal uint <ClearEmptyHashes>b__9_1(KeyValuePair<uint, GameObject> h)
		{
			return default(uint);
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0x82C49C", Offset = "0x82C49C", VA = "0x82C49C")]
		internal GameObject <ClearEmptyHashes>b__9_2(KeyValuePair<uint, GameObject> h)
		{
			return null;
		}
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TrailPrefab;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<uint, GameObject> hashTrails;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x82B820", Offset = "0x82B820", VA = "0x82B820")]
	private void Start()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x82B8C8", Offset = "0x82B8C8", VA = "0x82B8C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x82B924", Offset = "0x82B924", VA = "0x82B924")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x82B978", Offset = "0x82B978", VA = "0x82B978")]
	private void Update()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x82B97C", Offset = "0x82B97C", VA = "0x82B97C")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x82C090", Offset = "0x82C090", VA = "0x82C090")]
	private void ClearEmptyHashes()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x82C2CC", Offset = "0x82C2CC", VA = "0x82C2CC")]
	public ME_ParticleTrails()
	{
	}
}
[Token(Token = "0x2000012")]
public class ME_TrailRendererNoise : MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667AD0", Offset = "0x667AD0")]
	public float MinVertexDistance;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VertexTime;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TotalLifeTime;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool SmoothCurves;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsRibbon;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667AEC", Offset = "0x667AEC")]
	public float Frequency;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667B08", Offset = "0x667B08")]
	public float TimeScale;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667B24", Offset = "0x667B24")]
	public float Amplitude;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Gravity;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool Autodestruct;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform t;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 prevPos;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> points;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<float> lifeTimes;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> velocities;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomOffset;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int curveCount;

	[Token(Token = "0x400008D")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x400008E")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x400008F")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x82C664", Offset = "0x82C664", VA = "0x82C664")]
	private void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x82C834", Offset = "0x82C834", VA = "0x82C834")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x82C948", Offset = "0x82C948", VA = "0x82C948")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x82C9E0", Offset = "0x82C9E0", VA = "0x82C9E0")]
	private void AddNewPoints()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x82CCFC", Offset = "0x82CCFC", VA = "0x82CCFC")]
	private void UpdatetPoints()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x82CF0C", Offset = "0x82CF0C", VA = "0x82CF0C")]
	private void UpdateLineRendererBezier()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x82D02C", Offset = "0x82D02C", VA = "0x82D02C")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x82D13C", Offset = "0x82D13C", VA = "0x82D13C")]
	private void CalculateTurbuelence(Vector3 position, float speed, float scale, float height, float gravity, int index)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x82D384", Offset = "0x82D384", VA = "0x82D384")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x82D9A4", Offset = "0x82D9A4", VA = "0x82D9A4")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x82DA98", Offset = "0x82DA98", VA = "0x82DA98")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x82DD44", Offset = "0x82DD44", VA = "0x82DD44")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x82DBF0", Offset = "0x82DBF0", VA = "0x82DBF0")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x82E018", Offset = "0x82E018", VA = "0x82E018")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x82E1E0", Offset = "0x82E1E0", VA = "0x82E1E0")]
	public ME_TrailRendererNoise()
	{
	}
}
[Token(Token = "0x2000013")]
[ExecuteInEditMode]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MeshObject;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color Color;

	[Token(Token = "0x4000092")]
	private const string materialName = "MeshEffect";

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Material[]> rendererMaterials;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material[]> skinnedMaterials;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color oldColor;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x8B6804", Offset = "0x8B6804", VA = "0x8B6804")]
	private void Update()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x8B686C", Offset = "0x8B686C", VA = "0x8B686C")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x8B6958", Offset = "0x8B6958", VA = "0x8B6958")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x8B6A1C", Offset = "0x8B6A1C", VA = "0x8B6A1C")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x8B7238", Offset = "0x8B7238", VA = "0x8B7238")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x8B6B00", Offset = "0x8B6B00", VA = "0x8B6B00")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x8B6FAC", Offset = "0x8B6FAC", VA = "0x8B6FAC")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x8B7350", Offset = "0x8B7350", VA = "0x8B7350")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, ME_MeshMaterialEffect meshMatEffect)
	{
		return null;
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x8B7574", Offset = "0x8B7574", VA = "0x8B7574")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x8B7B34", Offset = "0x8B7B34", VA = "0x8B7B34")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x2000014")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6649B0", Offset = "0x6649B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6649B0", Offset = "0x6649B0")]
public class RFX1_DistortionAndBloom : MonoBehaviour
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667B40", Offset = "0x667B40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667B40", Offset = "0x667B40")]
	public float RenderTextureResolutoinFactor;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool UseBloom;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667B98", Offset = "0x667B98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667B98", Offset = "0x667B98")]
	public float Threshold;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667BF0", Offset = "0x667BF0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667BF0", Offset = "0x667BF0")]
	public float SoftKnee;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667C54", Offset = "0x667C54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667C54", Offset = "0x667C54")]
	public float Radius;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667CA8", Offset = "0x667CA8")]
	public float Intensity;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667CE0", Offset = "0x667CE0")]
	public bool HighQuality;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667D18", Offset = "0x667D18")]
	public bool AntiFlicker;

	[Token(Token = "0x400009E")]
	private const string shaderName = "Hidden/KriptoFX/PostEffects/RFX1_Bloom";

	[Token(Token = "0x400009F")]
	private const string shaderAdditiveName = "Hidden/KriptoFX/PostEffects/RFX1_BloomAdditive";

	[Token(Token = "0x40000A0")]
	private const string cameraName = "MobileCamera(Distort_Bloom_Depth)";

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture source;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture depth;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture destination;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int previuosFrameWidth;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int previuosFrameHeight;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float previousScale;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera addCamera;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject tempGO;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool HDRSupported;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material m_Material;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material m_MaterialAdditive;

	[Token(Token = "0x40000AC")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GUIStyle guiStyleHeader;

	[Token(Token = "0x17000003")]
	public Material mat
	{
		[Token(Token = "0x6000062")]
		[Address(RVA = "0x8BF5F4", Offset = "0x8BF5F4", VA = "0x8BF5F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	public Material matAdditive
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x8BF768", Offset = "0x8BF768", VA = "0x8BF768")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x8BF690", Offset = "0x8BF690", VA = "0x8BF690")]
	public static Material CheckShaderAndCreateMaterial(Shader s)
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x8BF81C", Offset = "0x8BF81C", VA = "0x8BF81C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x8BF9A0", Offset = "0x8BF9A0", VA = "0x8BF9A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x8BFB5C", Offset = "0x8BFB5C", VA = "0x8BFB5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x8C0960", Offset = "0x8C0960", VA = "0x8C0960")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x8BF9A4", Offset = "0x8BF9A4", VA = "0x8BF9A4")]
	private void InitializeRenderTarget()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x8BFF80", Offset = "0x8BFF80", VA = "0x8BFF80")]
	private void UpdateBloom()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x8BFCC8", Offset = "0x8BFCC8", VA = "0x8BFCC8")]
	private void GrabImage()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x8C09E4", Offset = "0x8C09E4", VA = "0x8C09E4")]
	public RFX1_DistortionAndBloom()
	{
	}
}
[Token(Token = "0x2000015")]
public class RFX1_AudioPitchCurves : MonoBehaviour
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve AudioCurve;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphPitchMultiplier;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startPitch;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x8BDAA4", Offset = "0x8BDAA4", VA = "0x8BDAA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x8BDB6C", Offset = "0x8BDB6C", VA = "0x8BDB6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x8BDC60", Offset = "0x8BDC60", VA = "0x8BDC60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x8BDD2C", Offset = "0x8BDD2C", VA = "0x8BDD2C")]
	public RFX1_AudioPitchCurves()
	{
	}
}
[Token(Token = "0x2000016")]
public class RFX1_AudioVolumeCurves : MonoBehaviour
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve AudioCurve;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsLoop;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool canUpdate;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTime;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startVolume;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x8BDD70", Offset = "0x8BDD70", VA = "0x8BDD70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x8BDE34", Offset = "0x8BDE34", VA = "0x8BDE34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x8BDF18", Offset = "0x8BDF18", VA = "0x8BDF18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x8BDFDC", Offset = "0x8BDFDC", VA = "0x8BDFDC")]
	public RFX1_AudioVolumeCurves()
	{
	}
}
[Token(Token = "0x2000017")]
public class RFX1_LightCurves : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x8C0EC0", Offset = "0x8C0EC0", VA = "0x8C0EC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x8C0F6C", Offset = "0x8C0F6C", VA = "0x8C0F6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x8C1060", Offset = "0x8C1060", VA = "0x8C1060")]
	private void Update()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x8C1124", Offset = "0x8C1124", VA = "0x8C1124")]
	public RFX1_LightCurves()
	{
	}
}
[Token(Token = "0x2000018")]
public class RFX1_ProjectorSizeCurves : MonoBehaviour
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve ProjectorSize;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Projector projector;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x8C291C", Offset = "0x8C291C", VA = "0x8C291C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x8C29C4", Offset = "0x8C29C4", VA = "0x8C29C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x8C29F4", Offset = "0x8C29F4", VA = "0x8C29F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x8C2AB8", Offset = "0x8C2AB8", VA = "0x8C2AB8")]
	public RFX1_ProjectorSizeCurves()
	{
	}
}
[Token(Token = "0x2000019")]
public class RFX1_ScaleCurves : MonoBehaviour
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nameId;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Projector proj;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startScale;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x8C2F18", Offset = "0x8C2F18", VA = "0x8C2F18")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x8C3014", Offset = "0x8C3014", VA = "0x8C3014")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x8C30D0", Offset = "0x8C30D0", VA = "0x8C30D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x8C3274", Offset = "0x8C3274", VA = "0x8C3274")]
	public RFX1_ScaleCurves()
	{
	}
}
[Token(Token = "0x200001A")]
public class RFX1_ShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX1_ShaderProperties ShaderColorProperty;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient Color;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeMultiplier;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool UseSharedMaterial;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int propertyID;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startTime;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color startColor;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInitialized;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string shaderProperty;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xB60390", Offset = "0xB60390", VA = "0xB60390")]
	private void Start()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB60394", Offset = "0xB60394", VA = "0xB60394")]
	private void Init()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB607B8", Offset = "0xB607B8", VA = "0xB607B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB607F0", Offset = "0xB607F0", VA = "0xB607F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB6094C", Offset = "0xB6094C", VA = "0xB6094C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB60A70", Offset = "0xB60A70", VA = "0xB60A70")]
	public RFX1_ShaderColorGradient()
	{
	}
}
[Token(Token = "0x200001B")]
public class RFX1_ShaderFloatCurve : MonoBehaviour
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX1_ShaderProperties ShaderFloatProperty;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsLoop;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool UseSharedMaterial;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool canUpdate;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startFloat;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int propertyID;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string shaderProperty;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInitialized;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xB60AE8", Offset = "0xB60AE8", VA = "0xB60AE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xB60E5C", Offset = "0xB60E5C", VA = "0xB60E5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xB60EF8", Offset = "0xB60EF8", VA = "0xB60EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xB60FC4", Offset = "0xB60FC4", VA = "0xB60FC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xB61018", Offset = "0xB61018", VA = "0xB61018")]
	public RFX1_ShaderFloatCurve()
	{
	}
}
[Token(Token = "0x200001C")]
public enum RFX1_ShaderProperties
{
	[Token(Token = "0x40000F2")]
	_TintColor,
	[Token(Token = "0x40000F3")]
	_Cutoff,
	[Token(Token = "0x40000F4")]
	_Color,
	[Token(Token = "0x40000F5")]
	_EmissionColor,
	[Token(Token = "0x40000F6")]
	_MaskPow,
	[Token(Token = "0x40000F7")]
	_Cutout,
	[Token(Token = "0x40000F8")]
	_Speed,
	[Token(Token = "0x40000F9")]
	_BumpAmt,
	[Token(Token = "0x40000FA")]
	_AlphaPow,
	[Token(Token = "0x40000FB")]
	_Distortion,
	[Token(Token = "0x40000FC")]
	_MainColor
}
[Token(Token = "0x200001D")]
public class RFX1_WindCurves : MonoBehaviour
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve WindCurve;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WindZone windZone;

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xB64AFC", Offset = "0xB64AFC", VA = "0xB64AFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xB64BA4", Offset = "0xB64BA4", VA = "0xB64BA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xB64BD4", Offset = "0xB64BD4", VA = "0xB64BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xB64C98", Offset = "0xB64C98", VA = "0xB64C98")]
	public RFX1_WindCurves()
	{
	}
}
[Token(Token = "0x200001E")]
public class RFX1_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x8C0A98", Offset = "0x8C0A98", VA = "0x8C0A98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x8C0BBC", Offset = "0x8C0BBC", VA = "0x8C0BBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x8C0A9C", Offset = "0x8C0A9C", VA = "0x8C0A9C")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x8C0C04", Offset = "0x8C0C04", VA = "0x8C0C04")]
	public RFX1_EffectSettingColor()
	{
	}
}
[Token(Token = "0x200001F")]
public class RFX1_EffectSettingProjectile : MonoBehaviour
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FlyDistanceForProjectiles;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SpeedMultiplier;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask CollidesWith;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float startSpeed;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float oldSpeedMultiplier;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x8C0C38", Offset = "0x8C0C38", VA = "0x8C0C38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x8C0CE8", Offset = "0x8C0CE8", VA = "0x8C0CE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x8C0DE4", Offset = "0x8C0DE4", VA = "0x8C0DE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x8C0E80", Offset = "0x8C0E80", VA = "0x8C0E80")]
	public RFX1_EffectSettingProjectile()
	{
	}
}
[Token(Token = "0x2000020")]
public class RFX1_ShieldInteraction : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RFX1_TransformMotion transformMotion;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SphereCollider coll;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB61A90", Offset = "0xB61A90", VA = "0xB61A90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB61CF0", Offset = "0xB61CF0", VA = "0xB61CF0")]
	private void TransformMotion_CollisionEnter(object sender, RFX1_TransformMotion.RFX1_CollisionInfo e)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB61E34", Offset = "0xB61E34", VA = "0xB61E34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB61ED4", Offset = "0xB61ED4", VA = "0xB61ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xB61ED8", Offset = "0xB61ED8", VA = "0xB61ED8")]
	public RFX1_ShieldInteraction()
	{
	}
}
[Token(Token = "0x2000021")]
public class RFX1_Target : MonoBehaviour
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject currentTarget;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RFX1_TransformMotion transformMotion;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xB622AC", Offset = "0xB622AC", VA = "0xB622AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xB62448", Offset = "0xB62448", VA = "0xB62448")]
	private void Update()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB62308", Offset = "0xB62308", VA = "0xB62308")]
	private void UpdateTarget()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB6244C", Offset = "0xB6244C", VA = "0xB6244C")]
	public RFX1_Target()
	{
	}
}
[Token(Token = "0x2000022")]
public class RFX1_ActivateGravityAfterCollision : MonoBehaviour
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX1_TransformMotion TransformMotion;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 Gravity;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.MinMaxCurve startGravity;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInitialized;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x8BCC3C", Offset = "0x8BCC3C", VA = "0x8BCC3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x8BCD6C", Offset = "0x8BCD6C", VA = "0x8BCD6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x8BCE04", Offset = "0x8BCE04", VA = "0x8BCE04")]
	private void TransformMotion_CollisionEnter(object sender, RFX1_TransformMotion.RFX1_CollisionInfo e)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x8BCE84", Offset = "0x8BCE84", VA = "0x8BCE84")]
	public RFX1_ActivateGravityAfterCollision()
	{
	}
}
[Token(Token = "0x2000023")]
public class RFX1_AnimatorEvents : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000024")]
	public class RFX1_EffectAnimatorProperty
	{
		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Prefab;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform BonePosition;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform BoneRotation;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float DestroyTime;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject CurrentInstance;

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x8BDA94", Offset = "0x8BDA94", VA = "0x8BDA94")]
		public RFX1_EffectAnimatorProperty()
		{
		}
	}

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX1_EffectAnimatorProperty Effect1;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RFX1_EffectAnimatorProperty Effect2;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RFX1_EffectAnimatorProperty Effect3;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Target;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float Speed;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float oldHUE;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float oldSpeed;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x8BCECC", Offset = "0x8BCECC", VA = "0x8BCECC")]
	private void InstantiateEffect(RFX1_EffectAnimatorProperty effect)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x8BD3C8", Offset = "0x8BD3C8", VA = "0x8BD3C8")]
	public void ActivateEffect1()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x8BD3D0", Offset = "0x8BD3D0", VA = "0x8BD3D0")]
	public void ActivateEffect2()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x8BD3D8", Offset = "0x8BD3D8", VA = "0x8BD3D8")]
	public void ActivateEffect3()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x8BD3E0", Offset = "0x8BD3E0", VA = "0x8BD3E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x8BD418", Offset = "0x8BD418", VA = "0x8BD418")]
	private void UpdateInstance(RFX1_EffectAnimatorProperty effect)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x8BD2A8", Offset = "0x8BD2A8", VA = "0x8BD2A8")]
	private void UpdateSpeed(RFX1_EffectAnimatorProperty effect)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x8BD158", Offset = "0x8BD158", VA = "0x8BD158")]
	private void UpdateColor(RFX1_EffectAnimatorProperty effect)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x8BDA80", Offset = "0x8BDA80", VA = "0x8BDA80")]
	public RFX1_AnimatorEvents()
	{
	}
}
[Token(Token = "0x2000025")]
public static class RFX1_ColorHelper
{
	[Token(Token = "0x2000026")]
	public struct HSBColor
	{
		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x6FA794", Offset = "0x6FA794", VA = "0x6FA794")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x4000122")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x8BD618", Offset = "0x8BD618", VA = "0x8BD618")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x8BD80C", Offset = "0x8BD80C", VA = "0x8BD80C")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x8BE030", Offset = "0x8BE030", VA = "0x8BE030")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x8BE150", Offset = "0x8BE150", VA = "0x8BE150")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x8BEFB8", Offset = "0x8BEFB8", VA = "0x8BEFB8")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x8BF0C4", Offset = "0x8BF0C4", VA = "0x8BF0C4")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x2000027")]
public class RFX1_DeactivateByTime : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DeactivateTime;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x8BF500", Offset = "0x8BF500", VA = "0x8BF500")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x8BF558", Offset = "0x8BF558", VA = "0x8BF558")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x8BF5AC", Offset = "0x8BF5AC", VA = "0x8BF5AC")]
	private void DeactivateThis()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x8BF5E4", Offset = "0x8BF5E4", VA = "0x8BF5E4")]
	public RFX1_DeactivateByTime()
	{
	}
}
[Token(Token = "0x2000028")]
[ExecuteInEditMode]
public class RFX1_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilboard;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x8C1168", Offset = "0x8C1168", VA = "0x8C1168")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x8C1288", Offset = "0x8C1288", VA = "0x8C1288")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x8C12F0", Offset = "0x8C12F0", VA = "0x8C12F0")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x8C1444", Offset = "0x8C1444", VA = "0x8C1444")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x8C192C", Offset = "0x8C192C", VA = "0x8C192C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x8C19FC", Offset = "0x8C19FC", VA = "0x8C19FC")]
	public RFX1_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x2000029")]
public class RFX1_ParticleCollisionGameObject : MonoBehaviour
{
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject InstancedGO;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DestroyDelay;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x8C1AB0", Offset = "0x8C1AB0", VA = "0x8C1AB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x8C1B2C", Offset = "0x8C1B2C", VA = "0x8C1B2C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x8C1C90", Offset = "0x8C1C90", VA = "0x8C1C90")]
	public RFX1_ParticleCollisionGameObject()
	{
	}
}
[Token(Token = "0x200002A")]
[ExecuteInEditMode]
public class RFX1_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve ForceByTime;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ForceLifeTime;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem ps;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startTime;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x8C1D08", Offset = "0x8C1D08", VA = "0x8C1D08")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x8C1D7C", Offset = "0x8C1D7C", VA = "0x8C1D7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x8C1DA4", Offset = "0x8C1DA4", VA = "0x8C1DA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x8C2100", Offset = "0x8C2100", VA = "0x8C2100")]
	public RFX1_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x200002B")]
public class RFX1_ParticleInfinite : MonoBehaviour
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Delay;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.MainModule main;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float oldSimulation;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x8C214C", Offset = "0x8C214C", VA = "0x8C214C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x8C2248", Offset = "0x8C2248", VA = "0x8C2248")]
	private void UpdateParticles()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x8C2258", Offset = "0x8C2258", VA = "0x8C2258")]
	public RFX1_ParticleInfinite()
	{
	}
}
[Token(Token = "0x200002C")]
public class RFX1_ParticlePositionPoint : MonoBehaviour
{
	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 Position;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RFX1_ShieldCollisionTrigger ShieldCollisionTrigger;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Force;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve ForceByTime;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ForceLifeTime;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool canUpdate;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem ps;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float startTime;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x8C2268", Offset = "0x8C2268", VA = "0x8C2268")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x8C238C", Offset = "0x8C238C", VA = "0x8C238C")]
	private void ShieldCollisionTrigger_Detected(object sender, RFX1_ShieldDetectInfo e)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x8C2520", Offset = "0x8C2520", VA = "0x8C2520")]
	private void ShieldCollisionTrigger_CollisionEnter(object sender, RFX1_ShieldCollisionInfo e)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x8C24A4", Offset = "0x8C24A4", VA = "0x8C24A4")]
	public void ManualOnEnable()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x8C2564", Offset = "0x8C2564", VA = "0x8C2564")]
	private void ManualOnDisable()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x8C256C", Offset = "0x8C256C", VA = "0x8C256C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x8C28D0", Offset = "0x8C28D0", VA = "0x8C28D0")]
	public RFX1_ParticlePositionPoint()
	{
	}
}
[Token(Token = "0x200002D")]
public class RFX1_RandomRotate : MonoBehaviour
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int x;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int y;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int z;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rangeX;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rangeY;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rangeZ;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x8C2AFC", Offset = "0x8C2AFC", VA = "0x8C2AFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x8C2B7C", Offset = "0x8C2B7C", VA = "0x8C2B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x8C2CC0", Offset = "0x8C2CC0", VA = "0x8C2CC0")]
	public RFX1_RandomRotate()
	{
	}
}
[Token(Token = "0x200002E")]
public class RFX1_RotationFreeze : MonoBehaviour
{
	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LockX;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool LockY;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool LockZ;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startRotation;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x8C2CDC", Offset = "0x8C2CDC", VA = "0x8C2CDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x8C2D40", Offset = "0x8C2D40", VA = "0x8C2D40")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x8C2F00", Offset = "0x8C2F00", VA = "0x8C2F00")]
	public RFX1_RotationFreeze()
	{
	}
}
[Token(Token = "0x200002F")]
public class RFX1_ShieldCollisionTrigger : MonoBehaviour
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DetectRange;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] EffectOnCollision;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DestroyTimeDelay;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool CollisionEffectInWorldSpace;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float CollisionOffset;

	[Token(Token = "0x400015E")]
	private const string layerName = "Collision";

	[Token(Token = "0x14000001")]
	public event EventHandler<RFX1_ShieldCollisionInfo> CollisionEnter
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xB610CC", Offset = "0xB610CC", VA = "0xB610CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672AA8", Offset = "0x672AA8")]
		add
		{
		}
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xB611B8", Offset = "0xB611B8", VA = "0xB611B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672AB8", Offset = "0x672AB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event EventHandler<RFX1_ShieldDetectInfo> Detected
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xB612A4", Offset = "0xB612A4", VA = "0xB612A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672AC8", Offset = "0x672AC8")]
		add
		{
		}
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xB61390", Offset = "0xB61390", VA = "0xB61390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672AD8", Offset = "0x672AD8")]
		remove
		{
		}
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB6147C", Offset = "0xB6147C", VA = "0xB6147C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB61480", Offset = "0xB61480", VA = "0xB61480")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB61680", Offset = "0xB61680", VA = "0xB61680")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xB616F0", Offset = "0xB616F0", VA = "0xB616F0")]
	public void OnCollision(RaycastHit hit, [Optional] GameObject sender)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB61A78", Offset = "0xB61A78", VA = "0xB61A78")]
	public RFX1_ShieldCollisionTrigger()
	{
	}
}
[Token(Token = "0x2000030")]
public class RFX1_ShieldCollisionInfo : EventArgs
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RaycastHit Hit;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB61064", Offset = "0xB61064", VA = "0xB61064")]
	public RFX1_ShieldCollisionInfo()
	{
	}
}
[Token(Token = "0x2000031")]
public class RFX1_ShieldDetectInfo : EventArgs
{
	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject DetectedGameObject;

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB61618", Offset = "0xB61618", VA = "0xB61618")]
	public RFX1_ShieldDetectInfo()
	{
	}
}
[Token(Token = "0x2000032")]
public class RFX1_SimpleDecal : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Offset;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RaycastHit hit;

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xB61EE0", Offset = "0xB61EE0", VA = "0xB61EE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB61F08", Offset = "0xB61F08", VA = "0xB61F08")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB62188", Offset = "0xB62188", VA = "0xB62188")]
	public RFX1_SimpleDecal()
	{
	}
}
[Token(Token = "0x2000033")]
public class RFX1_StartDelay : MonoBehaviour
{
	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ActivatedGameObject;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Delay;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB6219C", Offset = "0xB6219C", VA = "0xB6219C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB62214", Offset = "0xB62214", VA = "0xB62214")]
	private void ActivateGO()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB62248", Offset = "0xB62248", VA = "0xB62248")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB6229C", Offset = "0xB6229C", VA = "0xB6229C")]
	public RFX1_StartDelay()
	{
	}
}
[Token(Token = "0x2000034")]
public enum RFX1_TextureShaderProperties
{
	[Token(Token = "0x4000167")]
	_MainTex,
	[Token(Token = "0x4000168")]
	_DistortTex,
	[Token(Token = "0x4000169")]
	_Mask,
	[Token(Token = "0x400016A")]
	_Cutout,
	[Token(Token = "0x400016B")]
	_CutoutTex,
	[Token(Token = "0x400016C")]
	_Bump,
	[Token(Token = "0x400016D")]
	_BumpTex,
	[Token(Token = "0x400016E")]
	_EmissionTex
}
[Token(Token = "0x2000035")]
public class RFX1_TransformMotion : MonoBehaviour
{
	[Token(Token = "0x2000036")]
	public enum RFX4_SimulationSpace
	{
		[Token(Token = "0x400018C")]
		Local,
		[Token(Token = "0x400018D")]
		World
	}

	[Token(Token = "0x2000037")]
	public class RFX1_CollisionInfo : EventArgs
	{
		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit Hit;

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xB63A64", Offset = "0xB63A64", VA = "0xB63A64")]
		public RFX1_CollisionInfo()
		{
		}
	}

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Distance;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Speed;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RandomMoveRadius;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RandomMoveSpeedScale;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Target;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask CollidesWith;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] EffectsOnCollision;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float CollisionOffset;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float DestroyTimeDelay;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool CollisionEffectInWorldSpace;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] DeactivatedObjectsOnCollision;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public List<GameObject> CollidedInstances;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 startPosition;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 startPositionLocal;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform t;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform targetT;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 oldPos;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isCollided;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool isOutDistance;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion startQuaternion;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float currentDelay;

	[Token(Token = "0x4000186")]
	private const float RayCastTolerance = 0.15f;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isInitialized;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool dropFirstFrameForFixUnityBugWithParticles;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 randomTimeOffset;

	[Token(Token = "0x14000003")]
	public event EventHandler<RFX1_CollisionInfo> CollisionEnter
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xB61C04", Offset = "0xB61C04", VA = "0xB61C04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672AE8", Offset = "0x672AE8")]
		add
		{
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xB62454", Offset = "0xB62454", VA = "0xB62454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672AF8", Offset = "0x672AF8")]
		remove
		{
		}
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB62540", Offset = "0xB62540", VA = "0xB62540")]
	private void Start()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xB627F8", Offset = "0xB627F8", VA = "0xB627F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xB62808", Offset = "0xB62808", VA = "0xB62808")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xB626AC", Offset = "0xB626AC", VA = "0xB626AC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xB6290C", Offset = "0xB6290C", VA = "0xB6290C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xB62920", Offset = "0xB62920", VA = "0xB62920")]
	private void UpdateWorldPosition()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xB633F0", Offset = "0xB633F0", VA = "0xB633F0")]
	private Vector3 GetRadiusRandomVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB6359C", Offset = "0xB6359C", VA = "0xB6359C")]
	private void OnCollisionBehaviour(RaycastHit hit)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB62818", Offset = "0xB62818", VA = "0xB62818")]
	private void OnCollisionDeactivateBehaviour(bool active)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB63ACC", Offset = "0xB63ACC", VA = "0xB63ACC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB63C68", Offset = "0xB63C68", VA = "0xB63C68")]
	public RFX1_TransformMotion()
	{
	}
}
[Token(Token = "0x2000038")]
public class RFX1_UVAnimation : MonoBehaviour
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TilesX;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TilesY;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FPS;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StartDelay;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool IsReverse;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool IsParticleSystemTrail;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RFX1_TextureShaderProperties[] TextureNames;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer currentRenderer;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Projector projector;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material instanceMaterial;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float animationStartTime;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool canUpdate;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previousIndex;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int totalFrames;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentInterpolatedTime;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentIndex;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 size;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isInitialized;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool startDelayIsBroken;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystemRenderer pr;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB63CC0", Offset = "0xB63CC0", VA = "0xB63CC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB63FC8", Offset = "0xB63FC8", VA = "0xB63FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB63FF0", Offset = "0xB63FF0", VA = "0xB63FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB64000", Offset = "0xB64000", VA = "0xB64000")]
	private void ManualUpdate()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB646AC", Offset = "0xB646AC", VA = "0xB646AC")]
	private void StartDelayFunc()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB63CD0", Offset = "0xB63CD0", VA = "0xB63CD0")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB646DC", Offset = "0xB646DC", VA = "0xB646DC")]
	private void InitializeMaterial()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xB6404C", Offset = "0xB6404C", VA = "0xB6404C")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xB64268", Offset = "0xB64268", VA = "0xB64268")]
	private void SetSpriteAnimation()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB64500", Offset = "0xB64500", VA = "0xB64500")]
	private void SetSpriteAnimationIterpolated()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB64A68", Offset = "0xB64A68", VA = "0xB64A68")]
	public RFX1_UVAnimation()
	{
	}
}
[Token(Token = "0x2000039")]
[ExecuteInEditMode]
public class RFX4_LocalSpaceFix : MonoBehaviour
{
	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB6BFB4", Offset = "0xB6BFB4", VA = "0xB6BFB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB6C158", Offset = "0xB6C158", VA = "0xB6C158")]
	public RFX4_LocalSpaceFix()
	{
	}
}
[Token(Token = "0x200003A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x664A78", Offset = "0x664A78")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x664A78", Offset = "0x664A78")]
[ExecuteInEditMode]
public class RFX4_DistortionAndBloom : MonoBehaviour
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667E10", Offset = "0x667E10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667E10", Offset = "0x667E10")]
	public float RenderTextureResolutoinFactor;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool UseBloom;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667E68", Offset = "0x667E68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667E68", Offset = "0x667E68")]
	public float Threshold;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667EC0", Offset = "0x667EC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667EC0", Offset = "0x667EC0")]
	public float SoftKnee;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x667F24", Offset = "0x667F24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667F24", Offset = "0x667F24")]
	public float Radius;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667F78", Offset = "0x667F78")]
	public float Intensity;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667FB0", Offset = "0x667FB0")]
	public bool HighQuality;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x667FE8", Offset = "0x667FE8")]
	public bool AntiFlicker;

	[Token(Token = "0x40001AE")]
	private const string shaderName = "Hidden/KriptoFX/PostEffects/RFX4_Bloom";

	[Token(Token = "0x40001AF")]
	private const string shaderAdditiveName = "Hidden/KriptoFX/PostEffects/RFX4_BloomAdditive";

	[Token(Token = "0x40001B0")]
	private const string cameraName = "MobileCamera(Distort_Bloom_Depth)";

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture source;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture depth;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture destination;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int previuosFrameWidth;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int previuosFrameHeight;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float previousScale;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera addCamera;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject tempGO;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool HDRSupported;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material m_Material;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material m_MaterialAdditive;

	[Token(Token = "0x40001BC")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x17000005")]
	public Material mat
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0xB6852C", Offset = "0xB6852C", VA = "0xB6852C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000006")]
	public Material matAdditive
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xB686A0", Offset = "0xB686A0", VA = "0xB686A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB685C8", Offset = "0xB685C8", VA = "0xB685C8")]
	public static Material CheckShaderAndCreateMaterial(Shader s)
	{
		return null;
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB68754", Offset = "0xB68754", VA = "0xB68754")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xB688D8", Offset = "0xB688D8", VA = "0xB688D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xB68A94", Offset = "0xB68A94", VA = "0xB68A94")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xB698C8", Offset = "0xB698C8", VA = "0xB698C8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB688DC", Offset = "0xB688DC", VA = "0xB688DC")]
	private void InitializeRenderTarget()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB68EE8", Offset = "0xB68EE8", VA = "0xB68EE8")]
	private void UpdateBloom()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB68C30", Offset = "0xB68C30", VA = "0xB68C30")]
	private void GrabImage()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB6994C", Offset = "0xB6994C", VA = "0xB6994C")]
	public RFX4_DistortionAndBloom()
	{
	}
}
[Token(Token = "0x200003B")]
public class RFX4_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] ReactivationTimes;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Sun;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light[] NightLights;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture HUETexture;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseMobileVersion;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RFX4_DistortionAndBloom RFX4_DistortionAndBloom;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int currentNomber;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject currentInstance;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GUIStyle guiStyleHeader;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float dpiScale;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isDay;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float colorHUE;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float startSunIntensity;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion startSunRotation;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color startAmbientLight;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float startAmbientIntencity;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float startReflectionIntencity;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LightShadows startLightShadows;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool isButtonPressed;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool isUsedMobileBloom;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB671CC", Offset = "0xB671CC", VA = "0xB671CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB675D0", Offset = "0xB675D0", VA = "0xB675D0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB67338", Offset = "0xB67338", VA = "0xB67338")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB6823C", Offset = "0xB6823C", VA = "0xB6823C")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB68368", Offset = "0xB68368", VA = "0xB68368")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB683C0", Offset = "0xB683C0", VA = "0xB683C0")]
	public RFX4_DemoGUI()
	{
	}
}
[Token(Token = "0x200003C")]
public class RFX4_FPS : MonoBehaviour
{
	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly GUIStyle guiStyleHeader;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeleft;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fps;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB6BB84", Offset = "0xB6BB84", VA = "0xB6BB84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xB6BC24", Offset = "0xB6BC24", VA = "0xB6BC24")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB6BD0C", Offset = "0xB6BD0C", VA = "0xB6BD0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB6BD6C", Offset = "0xB6BD6C", VA = "0xB6BD6C")]
	public RFX4_FPS()
	{
	}
}
[Token(Token = "0x200003D")]
public class RFX4_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xB6C3C4", Offset = "0xB6C3C4", VA = "0xB6C3C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xB6C404", Offset = "0xB6C404", VA = "0xB6C404")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB6C978", Offset = "0xB6C978", VA = "0xB6C978")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB6CA28", Offset = "0xB6CA28", VA = "0xB6CA28")]
	public RFX4_MouseOrbit()
	{
	}
}
[Token(Token = "0x200003E")]
public class RFX4_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xB70430", Offset = "0xB70430", VA = "0xB70430")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xB704AC", Offset = "0xB704AC", VA = "0xB704AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xB70584", Offset = "0xB70584", VA = "0xB70584")]
	public RFX4_RealtimeReflection()
	{
	}
}
[Token(Token = "0x200003F")]
public class RFX4_AudioCurves : MonoBehaviour
{
	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve AudioCurve;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsLoop;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool canUpdate;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTime;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startVolume;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xB64CDC", Offset = "0xB64CDC", VA = "0xB64CDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xB64DA0", Offset = "0xB64DA0", VA = "0xB64DA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB64DD0", Offset = "0xB64DD0", VA = "0xB64DD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB64E94", Offset = "0xB64E94", VA = "0xB64E94")]
	public RFX4_AudioCurves()
	{
	}
}
[Token(Token = "0x2000040")]
public class RFX4_LightCurves : MonoBehaviour
{
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB6BDD4", Offset = "0xB6BDD4", VA = "0xB6BDD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB6BE7C", Offset = "0xB6BE7C", VA = "0xB6BE7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xB6BEAC", Offset = "0xB6BEAC", VA = "0xB6BEAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xB6BF70", Offset = "0xB6BF70", VA = "0xB6BF70")]
	public RFX4_LightCurves()
	{
	}
}
[Token(Token = "0x2000041")]
public class RFX4_PhysicsForceCurves : MonoBehaviour
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ForceRadius;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ForceMultiplier;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve ForceCurve;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ForceMode ForceMode;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool IsLoop;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DestoryDistance;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool UseDistanceScale;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve DistanceScaleCurve;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseUPVector;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve DragCurve;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float DragGraphTimeMultiplier;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float DragGraphIntensityMultiplier;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string AffectedName;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float forceAdditionalMultiplier;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool canUpdate;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startTime;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform t;

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB6F090", Offset = "0xB6F090", VA = "0xB6F090")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xB6F0B8", Offset = "0xB6F0B8", VA = "0xB6F0B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xB6F0F0", Offset = "0xB6F0F0", VA = "0xB6F0F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xB6F80C", Offset = "0xB6F80C", VA = "0xB6F80C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xB6F864", Offset = "0xB6F864", VA = "0xB6F864")]
	public RFX4_PhysicsForceCurves()
	{
	}
}
[Token(Token = "0x2000042")]
public class RFX4_ScaleCurves : MonoBehaviour
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nameId;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Projector proj;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startScale;

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xB70C30", Offset = "0xB70C30", VA = "0xB70C30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xB70D2C", Offset = "0xB70D2C", VA = "0xB70D2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xB70DE8", Offset = "0xB70DE8", VA = "0xB70DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xB70F8C", Offset = "0xB70F8C", VA = "0xB70F8C")]
	public RFX4_ScaleCurves()
	{
	}
}
[Token(Token = "0x2000043")]
public class RFX4_ShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX4_ShaderProperties ShaderColorProperty;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient Color;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeMultiplier;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool UseSharedMaterial;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int propertyID;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startTime;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color startColor;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInitialized;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string shaderProperty;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xB70FD0", Offset = "0xB70FD0", VA = "0xB70FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xB70FD4", Offset = "0xB70FD4", VA = "0xB70FD4")]
	private void Init()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xB713F8", Offset = "0xB713F8", VA = "0xB713F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xB71430", Offset = "0xB71430", VA = "0xB71430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB71638", Offset = "0xB71638", VA = "0xB71638")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xB7175C", Offset = "0xB7175C", VA = "0xB7175C")]
	public RFX4_ShaderColorGradient()
	{
	}
}
[Token(Token = "0x2000044")]
public class RFX4_ShaderFloatCurve : MonoBehaviour
{
	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX4_ShaderProperties ShaderFloatProperty;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsLoop;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool UseSharedMaterial;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool canUpdate;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startFloat;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int propertyID;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string shaderProperty;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInitialized;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xB717D4", Offset = "0xB717D4", VA = "0xB717D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xB71B48", Offset = "0xB71B48", VA = "0xB71B48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xB71BE4", Offset = "0xB71BE4", VA = "0xB71BE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xB71CB0", Offset = "0xB71CB0", VA = "0xB71CB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xB71D04", Offset = "0xB71D04", VA = "0xB71D04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xB71DB8", Offset = "0xB71DB8", VA = "0xB71DB8")]
	public RFX4_ShaderFloatCurve()
	{
	}
}
[Token(Token = "0x2000045")]
public enum RFX4_ShaderProperties
{
	[Token(Token = "0x400022B")]
	_TintColor,
	[Token(Token = "0x400022C")]
	_Cutoff,
	[Token(Token = "0x400022D")]
	_Color,
	[Token(Token = "0x400022E")]
	_EmissionColor,
	[Token(Token = "0x400022F")]
	_MaskPow,
	[Token(Token = "0x4000230")]
	_Cutout,
	[Token(Token = "0x4000231")]
	_Speed,
	[Token(Token = "0x4000232")]
	_BumpAmt
}
[Token(Token = "0x2000046")]
public class RFX4_WindCurves : MonoBehaviour
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve WindCurve;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WindZone windZone;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xB77F34", Offset = "0xB77F34", VA = "0xB77F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xB77FDC", Offset = "0xB77FDC", VA = "0xB77FDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xB7800C", Offset = "0xB7800C", VA = "0xB7800C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xB780D0", Offset = "0xB780D0", VA = "0xB780D0")]
	public RFX4_WindCurves()
	{
	}
}
[Token(Token = "0x2000047")]
public class RFX4_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xB6A1A8", Offset = "0xB6A1A8", VA = "0xB6A1A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xB6A32C", Offset = "0xB6A32C", VA = "0xB6A32C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xB6A1AC", Offset = "0xB6A1AC", VA = "0xB6A1AC")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xB6A374", Offset = "0xB6A374", VA = "0xB6A374")]
	public RFX4_EffectSettingColor()
	{
	}
}
[Token(Token = "0x2000048")]
public class RFX4_EffectSettingPhysxForce : MonoBehaviour
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ForceMultiplier;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xB6A3A8", Offset = "0xB6A3A8", VA = "0xB6A3A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xB6A3AC", Offset = "0xB6A3AC", VA = "0xB6A3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xB6A654", Offset = "0xB6A654", VA = "0xB6A654")]
	public RFX4_EffectSettingPhysxForce()
	{
	}
}
[Token(Token = "0x2000049")]
public class RFX4_EffectSettingProjectile : MonoBehaviour
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FlyDistanceForProjectiles;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SpeedMultiplier;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask CollidesWith;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float startSpeed;

	[Token(Token = "0x4000241")]
	private const string particlesAdditionalName = "Distance";

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xB6A664", Offset = "0xB6A664", VA = "0xB6A664")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xB6A70C", Offset = "0xB6A70C", VA = "0xB6A70C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xB6A9B4", Offset = "0xB6A9B4", VA = "0xB6A9B4")]
	public RFX4_EffectSettingProjectile()
	{
	}
}
[Token(Token = "0x200004A")]
public class RFX4_EffectSettingsTimeScale : MonoBehaviour
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Time;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float prevTime;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] particles;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xB6B658", Offset = "0xB6B658", VA = "0xB6B658")]
	private void Start()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xB6B6B0", Offset = "0xB6B6B0", VA = "0xB6B6B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xB6B750", Offset = "0xB6B750", VA = "0xB6B750")]
	private void UpdateTime()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xB6BB74", Offset = "0xB6BB74", VA = "0xB6BB74")]
	public RFX4_EffectSettingsTimeScale()
	{
	}
}
[Token(Token = "0x200004B")]
public class RFX4_EffectSettingVisible : MonoBehaviour
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float FadeOutTime;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool previousActiveStatus;

	[Token(Token = "0x4000248")]
	private const string rendererAdditionalName = "Loop";

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] colorProperties;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float alpha;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xB6A9F4", Offset = "0xB6A9F4", VA = "0xB6A9F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xB6A9F8", Offset = "0xB6A9F8", VA = "0xB6A9F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xB6B338", Offset = "0xB6B338", VA = "0xB6B338")]
	public RFX4_EffectSettingVisible()
	{
	}
}
[Token(Token = "0x200004C")]
public class RFX4_CollisionPropertyDeactiavtion : MonoBehaviour
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DeactivateTimeDelay;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WindZone windZone;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.CollisionModule collisionModule;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xB6592C", Offset = "0xB6592C", VA = "0xB6592C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xB659A0", Offset = "0xB659A0", VA = "0xB659A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xB659D4", Offset = "0xB659D4", VA = "0xB659D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xB65A20", Offset = "0xB65A20", VA = "0xB65A20")]
	public RFX4_CollisionPropertyDeactiavtion()
	{
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x664B10", Offset = "0x664B10")]
public class RFX4_ParticleCollisionHandler : MonoBehaviour
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] EffectsOnCollision;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Offset;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DestroyTimeDelay;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseWorldSpacePosition;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem part;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem ps;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xB6CCFC", Offset = "0xB6CCFC", VA = "0xB6CCFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xB6CD54", Offset = "0xB6CD54", VA = "0xB6CD54")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xB6D13C", Offset = "0xB6D13C", VA = "0xB6D13C")]
	public RFX4_ParticleCollisionHandler()
	{
	}
}
[Token(Token = "0x200004E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x664B74", Offset = "0x664B74")]
public class RFX4_ParticleLight : MonoBehaviour
{
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LightIntencityMultiplayer;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LightShadows Shadows;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light[] lights;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lightLimit;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xB6D1B4", Offset = "0xB6D1B4", VA = "0xB6D1B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xB6D4AC", Offset = "0xB6D4AC", VA = "0xB6D4AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xB6D8E8", Offset = "0xB6D8E8", VA = "0xB6D8E8")]
	public RFX4_ParticleLight()
	{
	}
}
[Token(Token = "0x200004F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x664BD8", Offset = "0x664BD8")]
public class RFX4_ParticleTrail : MonoBehaviour
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 DefaultSizeMultiplayer;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float VertexLifeTime;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TrailLifeTime;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseShaderMaterial;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material TrailMaterial;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool UseColorOverLifeTime;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient ColorOverLifeTime;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ColorLifeTime;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool UseUvAnimation;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int TilesX;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int TilesY;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int FPS;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool IsLoop;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x668060", Offset = "0x668060")]
	public float MinVertexDistance;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool GetVelocityFromParticleSystem;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float Gravity;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 Force;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float InheritVelocity;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float Drag;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66807C", Offset = "0x66807C")]
	public float Frequency;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x668098", Offset = "0x668098")]
	public float OffsetSpeed;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool RandomTurbulenceOffset;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6680B4", Offset = "0x6680B4")]
	public float Amplitude;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool SmoothCurves;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, LineRenderer> dict;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ParticleSystem ps;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TrailRenderer[] trails;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color psColor;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform targetT;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int layer;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool isLocalSpace;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform t;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xB6D900", Offset = "0xB6D900", VA = "0xB6D900")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xB6E5F0", Offset = "0xB6E5F0", VA = "0xB6E5F0")]
	private void ClearTrails()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xB6DB0C", Offset = "0xB6DB0C", VA = "0xB6DB0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xB6E85C", Offset = "0xB6E85C", VA = "0xB6E85C")]
	private void InitTrailRenderer(GameObject go)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xB6E708", Offset = "0xB6E708", VA = "0xB6E708")]
	private void RemoveEmptyTrails()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xB6EA60", Offset = "0xB6EA60", VA = "0xB6EA60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xB6EC54", Offset = "0xB6EC54", VA = "0xB6EC54")]
	public RFX4_ParticleTrail()
	{
	}
}
[Token(Token = "0x2000050")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x664C3C", Offset = "0x664C3C")]
public class RFX4_Turbulence : MonoBehaviour
{
	[Token(Token = "0x2000051")]
	public enum MoveMethodEnum
	{
		[Token(Token = "0x40002A0")]
		Position,
		[Token(Token = "0x40002A1")]
		Velocity,
		[Token(Token = "0x40002A2")]
		RelativePosition
	}

	[Token(Token = "0x2000052")]
	public enum PerfomanceEnum
	{
		[Token(Token = "0x40002A4")]
		High,
		[Token(Token = "0x40002A5")]
		Low
	}

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TurbulenceStrenght;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool TurbulenceByTime;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve TurbulenceStrengthByTime;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 Frequency;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 OffsetSpeed;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 Amplitude;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 GlobalForce;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool UseGlobalOffset;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public MoveMethodEnum MoveMethod;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PerfomanceEnum Perfomance;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ThreshholdSpeed;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float lastStopTime;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 currentOffset;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float deltaTime;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float deltaTimeLastUpdateOffset;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ParticleSystem particleSys;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float time;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int currentSplit;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float fpsTime;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int FPS;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int splitUpdate;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private PerfomanceEnum perfomanceOldSettings;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool skipFrame;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform t;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float currentDelay;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xB76064", Offset = "0xB76064", VA = "0xB76064")]
	private void Start()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xB76200", Offset = "0xB76200", VA = "0xB76200")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xB76208", Offset = "0xB76208", VA = "0xB76208")]
	private void Update()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xB761B4", Offset = "0xB761B4", VA = "0xB761B4")]
	private void UpdatePerfomanceSettings()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xB764D4", Offset = "0xB764D4", VA = "0xB764D4")]
	private void UpdateTurbulence()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xB76D2C", Offset = "0xB76D2C", VA = "0xB76D2C")]
	public RFX4_Turbulence()
	{
	}
}
[Token(Token = "0x2000053")]
public class RFX4_CameraShake : MonoBehaviour
{
	[Token(Token = "0x2000054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664CB0", Offset = "0x664CB0")]
	private sealed class <Shake>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RFX4_CameraShake <>4__this;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsed>5__2;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <camT>5__3;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <originalCamRotation>5__4;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <direction>5__5;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <time>5__6;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <randomStart>5__7;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <distanceDamper>5__8;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 <oldRotation>5__9;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000172")]
			[Address(RVA = "0xB658B4", Offset = "0xB658B4", VA = "0xB658B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000174")]
			[Address(RVA = "0xB65924", Offset = "0xB65924", VA = "0xB65924", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xB650D4", Offset = "0xB650D4", VA = "0xB650D4")]
		[DebuggerHidden]
		public <Shake>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0xB6515C", Offset = "0xB6515C", VA = "0xB6515C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0xB65160", Offset = "0xB65160", VA = "0xB65160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0xB658BC", Offset = "0xB658BC", VA = "0xB658BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve ShakeCurve;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Duration;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Speed;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Magnitude;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DistanceForce;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RotationDamper;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool IsEnabled;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isPlaying;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xB64EDC", Offset = "0xB64EDC", VA = "0xB64EDC")]
	private void PlayShake()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xB64F88", Offset = "0xB64F88", VA = "0xB64F88")]
	private void Update()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xB64FA4", Offset = "0xB64FA4", VA = "0xB64FA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xB64F14", Offset = "0xB64F14", VA = "0xB64F14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x672B08", Offset = "0x672B08")]
	private IEnumerator Shake()
	{
		return null;
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xB65100", Offset = "0xB65100", VA = "0xB65100")]
	public RFX4_CameraShake()
	{
	}
}
[Token(Token = "0x2000055")]
public static class RFX4_ColorHelper
{
	[Token(Token = "0x2000056")]
	public struct HSBColor
	{
		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x600017C")]
		[Address(RVA = "0x705558", Offset = "0x705558", VA = "0x705558")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x40002BA")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xB65A30", Offset = "0xB65A30", VA = "0xB65A30")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xB65C30", Offset = "0xB65C30", VA = "0xB65C30")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xB65EA4", Offset = "0xB65EA4", VA = "0xB65EA4")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xB65FC4", Offset = "0xB65FC4", VA = "0xB65FC4")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xB66A6C", Offset = "0xB66A6C", VA = "0xB66A6C")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xB66B78", Offset = "0xB66B78", VA = "0xB66B78")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x2000057")]
public class RFX4_CopyPosition : MonoBehaviour
{
	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CopiedTransform;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xB66F0C", Offset = "0xB66F0C", VA = "0xB66F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xB66F34", Offset = "0xB66F34", VA = "0xB66F34")]
	private void Update()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xB66FA4", Offset = "0xB66FA4", VA = "0xB66FA4")]
	public RFX4_CopyPosition()
	{
	}
}
[Token(Token = "0x2000058")]
public class RFX4_DeactivateByTime : MonoBehaviour
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DeactivateTime;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool canUpdateState;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xB66FAC", Offset = "0xB66FAC", VA = "0xB66FAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xB66FB8", Offset = "0xB66FB8", VA = "0xB66FB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xB67028", Offset = "0xB67028", VA = "0xB67028")]
	private void DeactivateThis()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xB67060", Offset = "0xB67060", VA = "0xB67060")]
	public RFX4_DeactivateByTime()
	{
	}
}
[Token(Token = "0x2000059")]
public class RFX4_DeactivateRigidbodyByTime : MonoBehaviour
{
	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelayToDeactivate;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xB67070", Offset = "0xB67070", VA = "0xB67070")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xB67124", Offset = "0xB67124", VA = "0xB67124")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xB671BC", Offset = "0xB671BC", VA = "0xB671BC")]
	public RFX4_DeactivateRigidbodyByTime()
	{
	}
}
[Token(Token = "0x200005A")]
public class RFX4_DemoReactivation : MonoBehaviour
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ReactivationTime;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Effect;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xB68468", Offset = "0xB68468", VA = "0xB68468")]
	private void Start()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xB684C4", Offset = "0xB684C4", VA = "0xB684C4")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xB6851C", Offset = "0xB6851C", VA = "0xB6851C")]
	public RFX4_DemoReactivation()
	{
	}
}
[Token(Token = "0x200005B")]
public class RFX4_EffectEvent : MonoBehaviour
{
	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CharacterEffect;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform CharacterAttachPoint;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CharacterEffect2;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform CharacterAttachPoint2;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Effect;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform AttachPoint;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject AdditionalEffect;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform AdditionalEffectAttachPoint;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xB699E0", Offset = "0xB699E0", VA = "0xB699E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xB69B7C", Offset = "0xB69B7C", VA = "0xB69B7C")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xB69C1C", Offset = "0xB69C1C", VA = "0xB69C1C")]
	public void ActivateAdditionalEffect()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xB69CBC", Offset = "0xB69CBC", VA = "0xB69CBC")]
	public void ActivateCharacterEffect()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xB69D5C", Offset = "0xB69D5C", VA = "0xB69D5C")]
	public void ActivateCharacterEffect2()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xB69DFC", Offset = "0xB69DFC", VA = "0xB69DFC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xB6A1A0", Offset = "0xB6A1A0", VA = "0xB6A1A0")]
	public RFX4_EffectEvent()
	{
	}
}
[Token(Token = "0x200005C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x664CC0", Offset = "0x664CC0")]
[ExecuteInEditMode]
public class RFX4_MaterialQueue : MonoBehaviour
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6680E0", Offset = "0x6680E0")]
	public int queue;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] queues;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xB6C160", Offset = "0xB6C160", VA = "0xB6C160")]
	private void Start()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xB6C378", Offset = "0xB6C378", VA = "0xB6C378")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xB6C37C", Offset = "0xB6C37C", VA = "0xB6C37C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xB6C3B4", Offset = "0xB6C3B4", VA = "0xB6C3B4")]
	public RFX4_MaterialQueue()
	{
	}
}
[Token(Token = "0x200005D")]
public class RFX4_OnEnableResetTransform : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform t;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startPosition;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion startRotation;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startScale;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xB6CA44", Offset = "0xB6CA44", VA = "0xB6CA44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xB6CB9C", Offset = "0xB6CB9C", VA = "0xB6CB9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xB6CCF4", Offset = "0xB6CCF4", VA = "0xB6CCF4")]
	public RFX4_OnEnableResetTransform()
	{
	}
}
[Token(Token = "0x200005E")]
public class RFX4_PhysXSetImpulse : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Force;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ForceMode ForceMode;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rig;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform t;

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xB6EDE4", Offset = "0xB6EDE4", VA = "0xB6EDE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xB6EE4C", Offset = "0xB6EE4C", VA = "0xB6EE4C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xB6EF8C", Offset = "0xB6EF8C", VA = "0xB6EF8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xB6F080", Offset = "0xB6F080", VA = "0xB6F080")]
	public RFX4_PhysXSetImpulse()
	{
	}
}
[Token(Token = "0x200005F")]
public class RFX4_RaycastCollision : MonoBehaviour
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RaycastDistance;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] Effects;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Offset;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TimeDelay;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DestroyTime;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool UsePivotPosition;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseNormalRotation;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool IsWorldSpace;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool RealTimeUpdateRaycast;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool DestroyAfterDisabling;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<GameObject> CollidedInstances;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool canUpdate;

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xB6F914", Offset = "0xB6F914", VA = "0xB6F914")]
	private void Start()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xB70020", Offset = "0xB70020", VA = "0xB70020")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xB700D0", Offset = "0xB700D0", VA = "0xB700D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xB70214", Offset = "0xB70214", VA = "0xB70214")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xB70224", Offset = "0xB70224", VA = "0xB70224")]
	private void LateEnable()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xB6F994", Offset = "0xB6F994", VA = "0xB6F994")]
	private void UpdateRaycast()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xB70228", Offset = "0xB70228", VA = "0xB70228")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xB703A0", Offset = "0xB703A0", VA = "0xB703A0")]
	public RFX4_RaycastCollision()
	{
	}
}
[Token(Token = "0x2000060")]
public class RFX4_ReplaceMaterialByTime : MonoBehaviour
{
	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material ReplacementMaterial;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ChangeShadow;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool isInitialized;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer mshRend;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xB7058C", Offset = "0xB7058C", VA = "0xB7058C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xB70620", Offset = "0xB70620", VA = "0xB70620")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xB706B8", Offset = "0xB706B8", VA = "0xB706B8")]
	private void ReplaceObject()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xB706F0", Offset = "0xB706F0", VA = "0xB706F0")]
	public RFX4_ReplaceMaterialByTime()
	{
	}
}
[Token(Token = "0x2000061")]
public class RFX4_ReplaceModelOnCollision : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PhysicsObjects;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isCollided;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform t;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xB70708", Offset = "0xB70708", VA = "0xB70708")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xB70848", Offset = "0xB70848", VA = "0xB70848")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xB70970", Offset = "0xB70970", VA = "0xB70970")]
	public RFX4_ReplaceModelOnCollision()
	{
	}
}
[Token(Token = "0x2000062")]
public class RFX4_RotateAround : MonoBehaviour
{
	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Offset;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 RotateVector;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float LifeTime;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform t;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentTime;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion rotation;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xB70978", Offset = "0xB70978", VA = "0xB70978")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xB709C0", Offset = "0xB709C0", VA = "0xB709C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xB70A90", Offset = "0xB70A90", VA = "0xB70A90")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xB70BA0", Offset = "0xB70BA0", VA = "0xB70BA0")]
	public RFX4_RotateAround()
	{
	}
}
[Token(Token = "0x2000063")]
public class RFX4_SimpleDecal : MonoBehaviour
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Offset;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool UseNormalRotation;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RaycastHit hit;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xB71E04", Offset = "0xB71E04", VA = "0xB71E04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xB720B0", Offset = "0xB720B0", VA = "0xB720B0")]
	public RFX4_SimpleDecal()
	{
	}
}
[Token(Token = "0x2000064")]
public class RFX4_StartDelay : MonoBehaviour
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ActivatedGameObject;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Delay;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xB720C4", Offset = "0xB720C4", VA = "0xB720C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xB7213C", Offset = "0xB7213C", VA = "0xB7213C")]
	private void ActivateGO()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xB72170", Offset = "0xB72170", VA = "0xB72170")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xB721C4", Offset = "0xB721C4", VA = "0xB721C4")]
	public RFX4_StartDelay()
	{
	}
}
[Token(Token = "0x2000065")]
public enum RFX4_TextureShaderProperties
{
	[Token(Token = "0x40002FE")]
	_MainTex,
	[Token(Token = "0x40002FF")]
	_DistortTex,
	[Token(Token = "0x4000300")]
	_Mask,
	[Token(Token = "0x4000301")]
	_Cutout,
	[Token(Token = "0x4000302")]
	_CutoutTex,
	[Token(Token = "0x4000303")]
	_Bump,
	[Token(Token = "0x4000304")]
	_BumpTex,
	[Token(Token = "0x4000305")]
	_EmissionTex
}
[Token(Token = "0x2000066")]
public class RFX4_TornadoParticles : MonoBehaviour
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material TornadoMaterial;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem particleSys;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light myLight;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector4 _twistScale;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int materialID;

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xB721D4", Offset = "0xB721D4", VA = "0xB721D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xB723AC", Offset = "0xB723AC", VA = "0xB723AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xB72730", Offset = "0xB72730", VA = "0xB72730")]
	public RFX4_TornadoParticles()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x664D34", Offset = "0x664D34")]
public class RFX4_TrailRenderer : MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float VertexLifeTime;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TrailLifeTime;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x668138", Offset = "0x668138")]
	public float MinVertexDistance;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Gravity;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 Force;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float InheritVelocity;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Drag;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x668154", Offset = "0x668154")]
	public float Frequency;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x668170", Offset = "0x668170")]
	public float OffsetSpeed;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool RandomTurbulenceOffset;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66818C", Offset = "0x66818C")]
	public float Amplitude;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool SmoothCurves;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> positions;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<float> currentTimes;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Vector3> velocities;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public float currentLifeTime;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform t;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 prevPosition;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 startPosition;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int curveCount;

	[Token(Token = "0x4000325")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x4000326")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x4000327")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float currentVelocity;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float turbulenceRandomOffset;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isInitialized;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xB72740", Offset = "0xB72740", VA = "0xB72740")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xB72A54", Offset = "0xB72A54", VA = "0xB72A54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xB72768", Offset = "0xB72768", VA = "0xB72768")]
	private void Init()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xB72A64", Offset = "0xB72A64", VA = "0xB72A64")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xB73ADC", Offset = "0xB73ADC", VA = "0xB73ADC")]
	private int GetLastDeletedIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xB72BF4", Offset = "0xB72BF4", VA = "0xB72BF4")]
	private void UpdatePositionsCount()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xB74494", Offset = "0xB74494", VA = "0xB74494")]
	private void AddInterpolatedPositions(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xB73C14", Offset = "0xB73C14", VA = "0xB73C14")]
	private void RemovePositionsBeforeIndex(int lastDeletedIndex)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xB72E58", Offset = "0xB72E58", VA = "0xB72E58")]
	private void UpdateForce()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xB73494", Offset = "0xB73494", VA = "0xB73494")]
	private void UpdateImpulse()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xB73740", Offset = "0xB73740", VA = "0xB73740")]
	private void UpdateVelocity()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xB73D80", Offset = "0xB73D80", VA = "0xB73D80")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xB743A0", Offset = "0xB743A0", VA = "0xB743A0")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xB746E4", Offset = "0xB746E4", VA = "0xB746E4")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xB74990", Offset = "0xB74990", VA = "0xB74990")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xB7483C", Offset = "0xB7483C", VA = "0xB7483C")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xB74C64", Offset = "0xB74C64", VA = "0xB74C64")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xB74E2C", Offset = "0xB74E2C", VA = "0xB74E2C")]
	public RFX4_TrailRenderer()
	{
	}
}
[Token(Token = "0x2000068")]
public class RFX4_TransformMotion : MonoBehaviour
{
	[Token(Token = "0x2000069")]
	public enum RFX4_SimulationSpace
	{
		[Token(Token = "0x4000345")]
		Local,
		[Token(Token = "0x4000346")]
		World
	}

	[Token(Token = "0x200006A")]
	public class RFX4_CollisionInfo : EventArgs
	{
		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit Hit;

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xB75E00", Offset = "0xB75E00", VA = "0xB75E00")]
		public RFX4_CollisionInfo()
		{
		}
	}

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Distance;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Speed;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Dampeen;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MinSpeed;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeDelay;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask CollidesWith;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] EffectsOnCollision;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float CollisionOffset;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DestroyTimeDelay;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool CollisionEffectInWorldSpace;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] DeactivatedObjectsOnCollision;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<GameObject> CollidedInstances;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 startPositionLocal;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform t;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 oldPos;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isCollided;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool isOutDistance;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion startQuaternion;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float currentSpeed;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float currentDelay;

	[Token(Token = "0x4000340")]
	private const float RayCastTolerance = 0.3f;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isInitialized;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool dropFirstFrameForFixUnityBugWithParticles;

	[Token(Token = "0x14000004")]
	public event EventHandler<RFX4_CollisionInfo> CollisionEnter
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xB74F30", Offset = "0xB74F30", VA = "0xB74F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672BBC", Offset = "0x672BBC")]
		add
		{
		}
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xB7501C", Offset = "0xB7501C", VA = "0xB7501C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672BCC", Offset = "0x672BCC")]
		remove
		{
		}
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB75108", Offset = "0xB75108", VA = "0xB75108")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB752A8", Offset = "0xB752A8", VA = "0xB752A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB752B8", Offset = "0xB752B8", VA = "0xB752B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB751D0", Offset = "0xB751D0", VA = "0xB751D0")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB75354", Offset = "0xB75354", VA = "0xB75354")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xB75368", Offset = "0xB75368", VA = "0xB75368")]
	private void UpdateWorldPosition()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xB75994", Offset = "0xB75994", VA = "0xB75994")]
	private void OnCollisionBehaviour(RaycastHit hit)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xB752C8", Offset = "0xB752C8", VA = "0xB752C8")]
	private void OnCollisionDeactivateBehaviour(bool active)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xB75E68", Offset = "0xB75E68", VA = "0xB75E68")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xB76004", Offset = "0xB76004", VA = "0xB76004")]
	public RFX4_TransformMotion()
	{
	}
}
[Token(Token = "0x200006B")]
public class RFX4_UVAnimation : MonoBehaviour
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TilesX;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TilesY;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FPS;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int StartFrameOffset;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartDelay;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsReverse;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RFX4_TextureShaderProperties[] TextureNames;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int count;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer currentRenderer;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Projector projector;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMaterial;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float animationStartTime;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool canUpdate;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int previousIndex;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int totalFrames;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float currentInterpolatedTime;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int currentIndex;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2 size;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isInitialized;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xB76E50", Offset = "0xB76E50", VA = "0xB76E50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xB77130", Offset = "0xB77130", VA = "0xB77130")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xB77158", Offset = "0xB77158", VA = "0xB77158")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xB76E60", Offset = "0xB76E60", VA = "0xB76E60")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xB777FC", Offset = "0xB777FC", VA = "0xB777FC")]
	private void InitializeMaterial()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xB771A4", Offset = "0xB771A4", VA = "0xB771A4")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xB773B8", Offset = "0xB773B8", VA = "0xB773B8")]
	private void SetSpriteAnimation()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xB77650", Offset = "0xB77650", VA = "0xB77650")]
	private void SetSpriteAnimationIterpolated()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xB77A40", Offset = "0xB77A40", VA = "0xB77A40")]
	public RFX4_UVAnimation()
	{
	}
}
[Token(Token = "0x200006C")]
public class RFX4_UVScroll : MonoBehaviour
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 UvScrollMultiplier;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RFX4_TextureShaderProperties TextureName;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 uvOffset;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xB77AD4", Offset = "0xB77AD4", VA = "0xB77AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xB77D04", Offset = "0xB77D04", VA = "0xB77D04")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB77E94", Offset = "0xB77E94", VA = "0xB77E94")]
	public RFX4_UVScroll()
	{
	}
}
[Token(Token = "0x200006D")]
public class OnlyQuitByFinishCommand : MonoBehaviour
{
	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isQuest;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x8B66C8", Offset = "0x8B66C8", VA = "0x8B66C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x8B6788", Offset = "0x8B6788", VA = "0x8B6788")]
	public void QuitApplication()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x8B67FC", Offset = "0x8B67FC", VA = "0x8B67FC")]
	public OnlyQuitByFinishCommand()
	{
	}
}
[Token(Token = "0x200006E")]
public class WaitFinishCommand : MonoBehaviour
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string WINDOWS_PATH;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string ANDROID_PATH;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string QUIT_FILENAME;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEvent quitEvent;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int eventCount;

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x85E154", Offset = "0x85E154", VA = "0x85E154")]
	public static void AddFinishCommand(GameObject target, UnityAction _quitEvent, bool isQuest)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x85E370", Offset = "0x85E370", VA = "0x85E370")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x85E438", Offset = "0x85E438", VA = "0x85E438")]
	private void SetPackageName()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x85E4F0", Offset = "0x85E4F0", VA = "0x85E4F0")]
	private void FinishCheck(string path)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x85E2D0", Offset = "0x85E2D0", VA = "0x85E2D0")]
	public void AddQuitEvent(UnityAction call)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x85E6D0", Offset = "0x85E6D0", VA = "0x85E6D0")]
	private void DoQuitEvent()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x85E2B0", Offset = "0x85E2B0", VA = "0x85E2B0")]
	public static bool IsRunningOnSmartphone()
	{
		return default(bool);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x85E5D4", Offset = "0x85E5D4", VA = "0x85E5D4")]
	private bool IsExistFile(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x85E64C", Offset = "0x85E64C", VA = "0x85E64C")]
	private void WriteBlankFile(string path)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x85E714", Offset = "0x85E714", VA = "0x85E714")]
	private bool WriteBinaryFile(string path, byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x85E9A0", Offset = "0x85E9A0", VA = "0x85E9A0")]
	public WaitFinishCommand()
	{
	}
}
[Token(Token = "0x200006F")]
public class Avatar_SyncAnimClient : NetworkBehaviour
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Avatar_SyncAnimManager ASyncManager;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string SyncAnimManager_ObjName_P1;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string SyncAnimManager_ObjName_P2;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string SyncAnimManager_ObjName_P3;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string SyncAnimManager_ObjName_P4;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Animator AvatarBodyObject;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animator AvatarChageObject;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ShootChecker_V02 AvatarShotObject;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject DifficultManager;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string difficultManager_ObjName;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private DifficultManager difficultManager;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int ShotFlag;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int Max_HP;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool readComplete;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kCmdCmd_nowHP;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kCmdCmd_NowChage;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int kCmdCmd_NowShot;

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x83B294", Offset = "0x83B294", VA = "0x83B294")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x83B308", Offset = "0x83B308", VA = "0x83B308")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x83B36C", Offset = "0x83B36C", VA = "0x83B36C")]
	private void MyNameSet()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x83B4C0", Offset = "0x83B4C0", VA = "0x83B4C0")]
	public void ASA_nowHP(int TempHP)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x83B720", Offset = "0x83B720", VA = "0x83B720")]
	[Command]
	private void Cmd_nowHP(int TempHP)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x83B83C", Offset = "0x83B83C", VA = "0x83B83C")]
	public void ASA_NowChage(int TempChage)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x83BA60", Offset = "0x83BA60", VA = "0x83BA60")]
	[Command]
	private void Cmd_NowChage(int TempChage)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x83BB7C", Offset = "0x83BB7C", VA = "0x83BB7C")]
	public void ASA_NowShot()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x83BD6C", Offset = "0x83BD6C", VA = "0x83BD6C")]
	[Command]
	private void Cmd_NowShot()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x83BE9C", Offset = "0x83BE9C", VA = "0x83BE9C")]
	public void AnimSet_BodyColler(int TempState)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x83BFF4", Offset = "0x83BFF4", VA = "0x83BFF4")]
	public void AnimSet_ChageLevel(int TempState)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x83C090", Offset = "0x83C090", VA = "0x83C090")]
	public void AnimSet_Shot()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x83B318", Offset = "0x83B318", VA = "0x83B318")]
	private void ReadDifficultValue()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x83C0E4", Offset = "0x83C0E4", VA = "0x83C0E4")]
	public Avatar_SyncAnimClient()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x83C14C", Offset = "0x83C14C", VA = "0x83C14C")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x83C150", Offset = "0x83C150", VA = "0x83C150")]
	protected static void InvokeCmdCmd_nowHP(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x83C330", Offset = "0x83C330", VA = "0x83C330")]
	protected static void InvokeCmdCmd_NowChage(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x83C510", Offset = "0x83C510", VA = "0x83C510")]
	protected static void InvokeCmdCmd_NowShot(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x83B500", Offset = "0x83B500", VA = "0x83B500")]
	public void CallCmd_nowHP(int TempHP)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x83B840", Offset = "0x83B840", VA = "0x83B840")]
	public void CallCmd_NowChage(int TempChage)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x83BB80", Offset = "0x83BB80", VA = "0x83BB80")]
	public void CallCmd_NowShot()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x83C6CC", Offset = "0x83C6CC", VA = "0x83C6CC")]
	static Avatar_SyncAnimClient()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x83C8CC", Offset = "0x83C8CC", VA = "0x83C8CC", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x83C8D4", Offset = "0x83C8D4", VA = "0x83C8D4", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000070")]
public class Avatar_SyncAnimManager : NetworkBehaviour
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int PlayerIndex;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SyncVar]
	public int PlayerStatus_HP;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int PlayerStatus_HP_buff;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SyncVar]
	public int PlayerStatus_Chage;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SyncVar]
	public int PlayerStatus_Shot;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Avatar_SyncAnimClient AvatarObj;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string TargetPlayer;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ChangeTargetManager2 changeTargetManager2;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private DifficultManager difficultManager;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool readComplete;

	[Token(Token = "0x17000009")]
	public int NetworkPlayerStatus_HP
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0x83CDE4", Offset = "0x83CDE4", VA = "0x83CDE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x83B75C", Offset = "0x83B75C", VA = "0x83B75C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public int NetworkPlayerStatus_Chage
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0x83CDEC", Offset = "0x83CDEC", VA = "0x83CDEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x83BA9C", Offset = "0x83BA9C", VA = "0x83BA9C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public int NetworkPlayerStatus_Shot
	{
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x83CDF4", Offset = "0x83CDF4", VA = "0x83CDF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000217")]
		[Address(RVA = "0x83BDBC", Offset = "0x83BDBC", VA = "0x83BDBC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x83C8D8", Offset = "0x83C8D8", VA = "0x83C8D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x83C96C", Offset = "0x83C96C", VA = "0x83C96C")]
	private void Update()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x83C9BC", Offset = "0x83C9BC", VA = "0x83C9BC")]
	private void ReadDifficultValue()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x83CA80", Offset = "0x83CA80", VA = "0x83CA80")]
	private void SyncAnim_HP(int tempHP)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x83CBB4", Offset = "0x83CBB4", VA = "0x83CBB4")]
	private void SyncAnim_Chage(int tempChage)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x83CC98", Offset = "0x83CC98", VA = "0x83CC98")]
	private void SyncAnim_Shot(int tempShot)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x83CD78", Offset = "0x83CD78", VA = "0x83CD78")]
	public Avatar_SyncAnimManager()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x83CDE0", Offset = "0x83CDE0", VA = "0x83CDE0")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x83CDFC", Offset = "0x83CDFC", VA = "0x83CDFC", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x83D010", Offset = "0x83D010", VA = "0x83D010", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000071")]
public class BattleSys_VisibleChecker : NetworkBehaviour
{
	[Token(Token = "0x600021A")]
	[Address(RVA = "0x83DFF4", Offset = "0x83DFF4", VA = "0x83DFF4")]
	public void Enemy_Visible(bool Invade)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x83E0F8", Offset = "0x83E0F8", VA = "0x83E0F8")]
	public BattleSys_VisibleChecker()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x83E160", Offset = "0x83E160", VA = "0x83E160")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x83E164", Offset = "0x83E164", VA = "0x83E164", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x83E16C", Offset = "0x83E16C", VA = "0x83E16C", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000072")]
public class Enemy_AtackEF_mananger_Boss_V02 : MonoBehaviour
{
	[Token(Token = "0x2000073")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664D98", Offset = "0x664D98")]
	private sealed class <wallEndTime>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy_AtackEF_mananger_Boss_V02 <>4__this;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000231")]
			[Address(RVA = "0x81BC00", Offset = "0x81BC00", VA = "0x81BC00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000233")]
			[Address(RVA = "0x81BC70", Offset = "0x81BC70", VA = "0x81BC70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0x81B014", Offset = "0x81B014", VA = "0x81B014")]
		[DebuggerHidden]
		public <wallEndTime>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0x81BB38", Offset = "0x81BB38", VA = "0x81BB38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0x81BB3C", Offset = "0x81BB3C", VA = "0x81BB3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0x81BC08", Offset = "0x81BC08", VA = "0x81BC08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000074")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DA8", Offset = "0x664DA8")]
	private sealed class <Arm_R_guide_EndTime>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy_AtackEF_mananger_Boss_V02 <>4__this;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000237")]
			[Address(RVA = "0x81B840", Offset = "0x81B840", VA = "0x81B840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000239")]
			[Address(RVA = "0x81B8B0", Offset = "0x81B8B0", VA = "0x81B8B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0x81B104", Offset = "0x81B104", VA = "0x81B104")]
		[DebuggerHidden]
		public <Arm_R_guide_EndTime>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0x81B778", Offset = "0x81B778", VA = "0x81B778", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000236")]
		[Address(RVA = "0x81B77C", Offset = "0x81B77C", VA = "0x81B77C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x81B848", Offset = "0x81B848", VA = "0x81B848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000075")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DB8", Offset = "0x664DB8")]
	private sealed class <Arm_R_hit_EndTime>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy_AtackEF_mananger_Boss_V02 <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600023D")]
			[Address(RVA = "0x81B980", Offset = "0x81B980", VA = "0x81B980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600023F")]
			[Address(RVA = "0x81B9F0", Offset = "0x81B9F0", VA = "0x81B9F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x81B1F4", Offset = "0x81B1F4", VA = "0x81B1F4")]
		[DebuggerHidden]
		public <Arm_R_hit_EndTime>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0x81B8B8", Offset = "0x81B8B8", VA = "0x81B8B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x81B8BC", Offset = "0x81B8BC", VA = "0x81B8BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x81B988", Offset = "0x81B988", VA = "0x81B988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000076")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DC8", Offset = "0x664DC8")]
	private sealed class <Arm_L_guide_EndTime>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy_AtackEF_mananger_Boss_V02 <>4__this;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000243")]
			[Address(RVA = "0x81B5C0", Offset = "0x81B5C0", VA = "0x81B5C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000245")]
			[Address(RVA = "0x81B630", Offset = "0x81B630", VA = "0x81B630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0x81B2E4", Offset = "0x81B2E4", VA = "0x81B2E4")]
		[DebuggerHidden]
		public <Arm_L_guide_EndTime>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0x81B4F8", Offset = "0x81B4F8", VA = "0x81B4F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x81B4FC", Offset = "0x81B4FC", VA = "0x81B4FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x81B5C8", Offset = "0x81B5C8", VA = "0x81B5C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000077")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DD8", Offset = "0x664DD8")]
	private sealed class <Arm_L_hit_EndTime>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy_AtackEF_mananger_Boss_V02 <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000249")]
			[Address(RVA = "0x81B700", Offset = "0x81B700", VA = "0x81B700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600024B")]
			[Address(RVA = "0x81B770", Offset = "0x81B770", VA = "0x81B770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x81B3D4", Offset = "0x81B3D4", VA = "0x81B3D4")]
		[DebuggerHidden]
		public <Arm_L_hit_EndTime>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x81B638", Offset = "0x81B638", VA = "0x81B638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x81B63C", Offset = "0x81B63C", VA = "0x81B63C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x81B708", Offset = "0x81B708", VA = "0x81B708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000078")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DE8", Offset = "0x664DE8")]
	private sealed class <sweepEndTime>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy_AtackEF_mananger_Boss_V02 <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600024F")]
			[Address(RVA = "0x81BAC0", Offset = "0x81BAC0", VA = "0x81BAC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000251")]
			[Address(RVA = "0x81BB30", Offset = "0x81BB30", VA = "0x81BB30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600024C")]
		[Address(RVA = "0x81B4C4", Offset = "0x81B4C4", VA = "0x81B4C4")]
		[DebuggerHidden]
		public <sweepEndTime>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x81B9F8", Offset = "0x81B9F8", VA = "0x81B9F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x81B9FC", Offset = "0x81B9FC", VA = "0x81B9FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x81BAC8", Offset = "0x81BAC8", VA = "0x81BAC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject EF_Wall;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject EF_Arm_R_Guide;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject EF_Arm_R_Hit;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject EF_Arm_L_Guide;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject EF_Arm_L_Hit;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject EF_Sweep;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject EF_root;

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x81AE24", Offset = "0x81AE24", VA = "0x81AE24")]
	private void AtackEF_Boss_CancelALL()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x81AF1C", Offset = "0x81AF1C", VA = "0x81AF1C")]
	private void AtackEF_Boss_ReStartAll()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x81AF50", Offset = "0x81AF50", VA = "0x81AF50")]
	private void AtackEF_Boss_wall()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x81AFA0", Offset = "0x81AFA0", VA = "0x81AFA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x672C0C", Offset = "0x672C0C")]
	private IEnumerator wallEndTime()
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x81B040", Offset = "0x81B040", VA = "0x81B040")]
	private void AttackEF_Boss_Arm_R_guide()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x81B090", Offset = "0x81B090", VA = "0x81B090")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x672C70", Offset = "0x672C70")]
	private IEnumerator Arm_R_guide_EndTime()
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x81B130", Offset = "0x81B130", VA = "0x81B130")]
	private void AttackEF_Boss_Arm_R_hit()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x81B180", Offset = "0x81B180", VA = "0x81B180")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x672CD4", Offset = "0x672CD4")]
	private IEnumerator Arm_R_hit_EndTime()
	{
		return null;
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x81B220", Offset = "0x81B220", VA = "0x81B220")]
	private void AttackEF_Boss_Arm_L_guide()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x81B270", Offset = "0x81B270", VA = "0x81B270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x672D38", Offset = "0x672D38")]
	private IEnumerator Arm_L_guide_EndTime()
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x81B310", Offset = "0x81B310", VA = "0x81B310")]
	private void AttackEF_Boss_Arm_L_hit()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x81B360", Offset = "0x81B360", VA = "0x81B360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x672D9C", Offset = "0x672D9C")]
	private IEnumerator Arm_L_hit_EndTime()
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x81B400", Offset = "0x81B400", VA = "0x81B400")]
	private void AtackEF_Boss_sweep()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x81B450", Offset = "0x81B450", VA = "0x81B450")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x672E00", Offset = "0x672E00")]
	private IEnumerator sweepEndTime()
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x81B4F0", Offset = "0x81B4F0", VA = "0x81B4F0")]
	public Enemy_AtackEF_mananger_Boss_V02()
	{
	}
}
[Token(Token = "0x2000079")]
public class Enemy_Voice_mananger_Boss_V02 : MonoBehaviour
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] VoiceObj;

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x81C728", Offset = "0x81C728", VA = "0x81C728")]
	private void VoiceCall(int a)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x81C794", Offset = "0x81C794", VA = "0x81C794")]
	public Enemy_Voice_mananger_Boss_V02()
	{
	}
}
[Token(Token = "0x200007A")]
public class EnemyAnimator_Boss_V02 : MonoBehaviour
{
	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator chr_Animator;

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x9C1D2C", Offset = "0x9C1D2C", VA = "0x9C1D2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x9C1D84", Offset = "0x9C1D84", VA = "0x9C1D84")]
	public void CheckBossAction(int Temp_State)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x9C1E40", Offset = "0x9C1E40", VA = "0x9C1E40")]
	private void A_FlagCler()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x9C1EA8", Offset = "0x9C1EA8", VA = "0x9C1EA8")]
	public EnemyAnimator_Boss_V02()
	{
	}
}
[Token(Token = "0x200007B")]
public class EnemyCheckGiveUP_Boss_V02 : MonoBehaviour
{
	[Token(Token = "0x6000258")]
	[Address(RVA = "0x9C3EA0", Offset = "0x9C3EA0", VA = "0x9C3EA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x9C4060", Offset = "0x9C4060", VA = "0x9C4060")]
	public EnemyCheckGiveUP_Boss_V02()
	{
	}
}
[Token(Token = "0x200007C")]
public class EnemyController_Boss_V02 : MonoBehaviour
{
	[Token(Token = "0x200007D")]
	public enum EnemyBossState
	{
		[Token(Token = "0x40003AB")]
		unhurt = 0,
		[Token(Token = "0x40003AC")]
		Minor = 1,
		[Token(Token = "0x40003AD")]
		Serious = 2,
		[Token(Token = "0x40003AE")]
		End = 6,
		[Token(Token = "0x40003AF")]
		WakeUP = 10,
		[Token(Token = "0x40003B0")]
		Continue = 20
	}

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject syncVarManager_obj;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NetSyncValue_SA NetSyncVObj;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int MaxHP_vs1;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int MaxHP_vs2;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int MaxHP_vs3;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private int MaxHP_vs4;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int MaxHP;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public EnemyBossState BossState;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private EnemyAnimator_Boss_V02 E_Anim;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int HP;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool stateChange;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[SerializeField]
	private bool Debug_WakeUp;

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x9C4068", Offset = "0x9C4068", VA = "0x9C4068")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x9C41EC", Offset = "0x9C41EC", VA = "0x9C41EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x9C42E8", Offset = "0x9C42E8", VA = "0x9C42E8")]
	public void SetState(EnemyBossState tempState)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x9C4338", Offset = "0x9C4338", VA = "0x9C4338")]
	public void Boss_Damage()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x9C41F0", Offset = "0x9C41F0", VA = "0x9C41F0")]
	public void Boss_Damage_sub()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x9C43EC", Offset = "0x9C43EC", VA = "0x9C43EC")]
	public void BattleEnd()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x9C43F4", Offset = "0x9C43F4", VA = "0x9C43F4")]
	public void BattleContinue()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x9C4430", Offset = "0x9C4430", VA = "0x9C4430")]
	public void BattleBossHP_MAX()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x9C44BC", Offset = "0x9C44BC", VA = "0x9C44BC")]
	public EnemyController_Boss_V02()
	{
	}
}
[Token(Token = "0x200007E")]
public class EnemyDamage_Boss_V02 : MonoBehaviour
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject E_ContObj;

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x81832C", Offset = "0x81832C", VA = "0x81832C")]
	public void E_Boss_damage(Transform ShooterPos)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x8183A4", Offset = "0x8183A4", VA = "0x8183A4")]
	public EnemyDamage_Boss_V02()
	{
	}
}
[Token(Token = "0x200007F")]
public class EnemySound_manager_Boss_V02 : MonoBehaviour
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemySound_Player_V02 E_Audio_AT01_Head;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemySound_Player_V02 E_Audio_AT01_ArmR;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemySound_Player_V02 E_Audio_AT01_ArmL;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemySound_Player_V02 E_Audio_AT03_ArmR;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemySound_Player_V02 E_Audio_AT03_Head;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private EnemySound_Player_V02 E_Audio_AT04_Head;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private EnemySound_Player_V02 E_Audio_END_Head;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private EnemySound_Player_V02 E_Audio_Minor_Head;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject object_BossDead;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private EnemySound_Player_V02 E_Audio_Continue_Head;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private EnemySound_Player_V02 E_Audio_WakeUP_Head;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x818A6C", Offset = "0x818A6C", VA = "0x818A6C")]
	private void Audio_M1Bs_AT01_Head()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x818A98", Offset = "0x818A98", VA = "0x818A98")]
	private void Audio_M1Bs_AT01_ArmR()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x818AC4", Offset = "0x818AC4", VA = "0x818AC4")]
	private void Audio_M1Bs_AT01_ArmL()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x818AF0", Offset = "0x818AF0", VA = "0x818AF0")]
	private void Audio_M1Bs_AT03_ArmR()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x818B1C", Offset = "0x818B1C", VA = "0x818B1C")]
	private void Audio_M1Bs_AT03_Head()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x818B48", Offset = "0x818B48", VA = "0x818B48")]
	private void Audio_M1Bs_AT04_Head()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x818B74", Offset = "0x818B74", VA = "0x818B74")]
	private void Audio_M1Bs_END_Head()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x818BDC", Offset = "0x818BDC", VA = "0x818BDC")]
	private void Audio_M1Bs_Minor_Head()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x818C08", Offset = "0x818C08", VA = "0x818C08")]
	private void Audio_M1Bs_Continue_Head()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x818C34", Offset = "0x818C34", VA = "0x818C34")]
	private void Audio_M1Bs_WakeUP_Head()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x818C60", Offset = "0x818C60", VA = "0x818C60")]
	public EnemySound_manager_Boss_V02()
	{
	}
}
[Token(Token = "0x2000080")]
public class EnemySound_Player_V02 : MonoBehaviour
{
	[Token(Token = "0x2000081")]
	private enum AudioPlayMode
	{
		[Token(Token = "0x40003C1")]
		OverRride,
		[Token(Token = "0x40003C2")]
		Cancel,
		[Token(Token = "0x40003C3")]
		Double
	}

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource _Audio;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioPlayMode PlayMode;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip[] clips;

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x81842C", Offset = "0x81842C", VA = "0x81842C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x818484", Offset = "0x818484", VA = "0x818484")]
	public void Audio_M1_Play()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x8185F8", Offset = "0x8185F8", VA = "0x8185F8")]
	public EnemySound_Player_V02()
	{
	}
}
[Token(Token = "0x2000082")]
public class EnenyObjChenger_Boss_V02 : MonoBehaviour
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] Swich_Obj;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x81C79C", Offset = "0x81C79C", VA = "0x81C79C")]
	public void SwichActiveObject(int ObjNum)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x81C888", Offset = "0x81C888", VA = "0x81C888")]
	public EnenyObjChenger_Boss_V02()
	{
	}
}
[Token(Token = "0x2000083")]
public class Player_BossSealChecker2Fade : MonoBehaviour
{
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SyncVarManager_SA syncVarManager_obj;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int LastState;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator Anim;

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x8BBDFC", Offset = "0x8BBDFC", VA = "0x8BBDFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x8BBE6C", Offset = "0x8BBE6C", VA = "0x8BBE6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x8BBFA4", Offset = "0x8BBFA4", VA = "0x8BBFA4")]
	public Player_BossSealChecker2Fade()
	{
	}
}
[Token(Token = "0x2000084")]
public class BulletCollision_V02 : MonoBehaviour
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform ShooterPos;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ShootChecker_V02_SA RootObj;

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x83E5A4", Offset = "0x83E5A4", VA = "0x83E5A4")]
	public void SetShooterPos(Transform transform)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x83E5AC", Offset = "0x83E5AC", VA = "0x83E5AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x83E804", Offset = "0x83E804", VA = "0x83E804")]
	public BulletCollision_V02()
	{
	}
}
[Token(Token = "0x2000085")]
public class BulletRoot_V02 : MonoBehaviour
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Bullet_Main;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject Energy_Ball;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject MuzzleFlash;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject HitEffect_Normal;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject HitEffect_Boss;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject HitEffect_Wall;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform ShotPos;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float B_Power;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x83EA74", Offset = "0x83EA74", VA = "0x83EA74")]
	public void SetFire(Transform Temp_Pos, float Temp_pow)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x83ED50", Offset = "0x83ED50", VA = "0x83ED50")]
	public void HitEffect(int HitType)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x83EE44", Offset = "0x83EE44", VA = "0x83EE44")]
	public BulletRoot_V02()
	{
	}
}
[Token(Token = "0x2000086")]
public class Debug_CamFollow : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject TargetObject;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform myTransform;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform targetTransform;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 targetPos;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 worldAngle;

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x9AFBEC", Offset = "0x9AFBEC", VA = "0x9AFBEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x9AFC14", Offset = "0x9AFC14", VA = "0x9AFC14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x9AFD48", Offset = "0x9AFD48", VA = "0x9AFD48")]
	public Debug_CamFollow()
	{
	}
}
[Token(Token = "0x2000087")]
public class Debug_GerEnemyState : MonoBehaviour
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject E_ContObj;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMesh StateText;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x9B0068", Offset = "0x9B0068", VA = "0x9B0068")]
	private void Update()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x9B0168", Offset = "0x9B0168", VA = "0x9B0168")]
	public Debug_GerEnemyState()
	{
	}
}
[Token(Token = "0x2000088")]
public class Debug_TransformTarget : MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TargetObject;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x9B2C74", Offset = "0x9B2C74", VA = "0x9B2C74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x9B2DB0", Offset = "0x9B2DB0", VA = "0x9B2DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x9B2CFC", Offset = "0x9B2CFC", VA = "0x9B2CFC")]
	private void TransformTarget()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x9B2E38", Offset = "0x9B2E38", VA = "0x9B2E38")]
	public Debug_TransformTarget()
	{
	}
}
[Token(Token = "0x2000089")]
public class Enemy_EF_mananger_V02 : MonoBehaviour
{
	[Token(Token = "0x200008A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664DF8", Offset = "0x664DF8")]
	private sealed class <EscapeEndTime>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy_EF_mananger_V02 <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028E")]
			[Address(RVA = "0x81BF78", Offset = "0x81BF78", VA = "0x81BF78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000290")]
			[Address(RVA = "0x81BFE8", Offset = "0x81BFE8", VA = "0x81BFE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0x81BD3C", Offset = "0x81BD3C", VA = "0x81BD3C")]
		[DebuggerHidden]
		public <EscapeEndTime>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0x81BEB0", Offset = "0x81BEB0", VA = "0x81BEB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0x81BEB4", Offset = "0x81BEB4", VA = "0x81BEB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0x81BF80", Offset = "0x81BF80", VA = "0x81BF80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject EF_Escape;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyController_V02 enemyController_V02;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x81BC78", Offset = "0x81BC78", VA = "0x81BC78")]
	private void EneEF_Escape()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x81BCC8", Offset = "0x81BCC8", VA = "0x81BCC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673044", Offset = "0x673044")]
	private IEnumerator EscapeEndTime()
	{
		return null;
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x81BD68", Offset = "0x81BD68", VA = "0x81BD68")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x81BEA8", Offset = "0x81BEA8", VA = "0x81BEA8")]
	public Enemy_EF_mananger_V02()
	{
	}
}
[Token(Token = "0x200008B")]
public class Enemy_LinkAnim_Boss2KM_V02 : MonoBehaviour
{
	[Token(Token = "0x200008C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E08", Offset = "0x664E08")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startTime;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Enemy_LinkAnim_Boss2KM_V02 <>4__this;

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x81C4C8", Offset = "0x81C4C8", VA = "0x81C4C8")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0x81C4D0", Offset = "0x81C4D0", VA = "0x81C4D0")]
		internal bool <DelayAction>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200008D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E18", Offset = "0x664E18")]
	private sealed class <DelayAction>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy_LinkAnim_Boss2KM_V02 <>4__this;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int TempState;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029A")]
			[Address(RVA = "0x81C6B0", Offset = "0x81C6B0", VA = "0x81C6B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0x81C720", Offset = "0x81C720", VA = "0x81C720", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0x81C494", Offset = "0x81C494", VA = "0x81C494")]
		[DebuggerHidden]
		public <DelayAction>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x81C524", Offset = "0x81C524", VA = "0x81C524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x81C528", Offset = "0x81C528", VA = "0x81C528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x81C6B8", Offset = "0x81C6B8", VA = "0x81C6B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator KM_AnimObj;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int AnimState_Act;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int AnimState_Minor;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int AnimState_End;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float LastSealWaitTime;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x81C228", Offset = "0x81C228", VA = "0x81C228")]
	private void Start()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x81C2B0", Offset = "0x81C2B0", VA = "0x81C2B0")]
	private void Link2KM_Action(int TempState)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x81C3FC", Offset = "0x81C3FC", VA = "0x81C3FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6730F8", Offset = "0x6730F8")]
	private IEnumerator DelayAction(int TempState)
	{
		return null;
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x81C4C0", Offset = "0x81C4C0", VA = "0x81C4C0")]
	public Enemy_LinkAnim_Boss2KM_V02()
	{
	}
}
[Token(Token = "0x200008E")]
public class EnemyAnimationEventListener : MonoBehaviour
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyAnimator_V02 animator;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyAttackCollision_Set_V02 attack;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyController_V02 controller;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x9C16FC", Offset = "0x9C16FC", VA = "0x9C16FC")]
	private void E_trans_OFF()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x9C1734", Offset = "0x9C1734", VA = "0x9C1734")]
	private void A_FlagCler()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x9C17C8", Offset = "0x9C17C8", VA = "0x9C17C8")]
	private void EnemyAttack_Collision_ON(int a)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x9C1868", Offset = "0x9C1868", VA = "0x9C1868")]
	private void EnemyAttack_Collision_OFF(int a)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x9C1908", Offset = "0x9C1908", VA = "0x9C1908")]
	private void CheckEscape()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x9C1AF4", Offset = "0x9C1AF4", VA = "0x9C1AF4")]
	public EnemyAnimationEventListener()
	{
	}
}
[Token(Token = "0x200008F")]
public class EnemyAnimator_Sub : NetworkBehaviour
{
	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SyncVar]
	public int E_tramce_Action;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int E_tramce_LastUpdate;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int P_InCircle;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int P_InCircle_LastUpdate;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SyncVar]
	public int TranceState_SV;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int TranceState_SV_LastUpdate;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnemyTrans_V02 E_trance;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject targetObj;

	[Token(Token = "0x1700001C")]
	public int NetworkE_tramce_Action
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x9C2118", Offset = "0x9C2118", VA = "0x9C2118")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x9C2120", Offset = "0x9C2120", VA = "0x9C2120")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public int NetworkTranceState_SV
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x9C2188", Offset = "0x9C2188", VA = "0x9C2188")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x9C2008", Offset = "0x9C2008", VA = "0x9C2008")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x9C1EB0", Offset = "0x9C1EB0", VA = "0x9C1EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x9C1F18", Offset = "0x9C1F18", VA = "0x9C1F18")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x9C20A4", Offset = "0x9C20A4", VA = "0x9C20A4")]
	public void WalkFast_SV()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x9C2070", Offset = "0x9C2070", VA = "0x9C2070")]
	private void Trance_Action_OFF()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x9C1FD4", Offset = "0x9C1FD4", VA = "0x9C1FD4")]
	private void Trace_Action_ON()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x9C20AC", Offset = "0x9C20AC", VA = "0x9C20AC")]
	public EnemyAnimator_Sub()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x9C2114", Offset = "0x9C2114", VA = "0x9C2114")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x9C2190", Offset = "0x9C2190", VA = "0x9C2190", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x9C2314", Offset = "0x9C2314", VA = "0x9C2314", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000090")]
public class EnemyAnimator_V02 : NetworkBehaviour
{
	[Token(Token = "0x2000091")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E28", Offset = "0x664E28")]
	private sealed class <A_FlagCler_cor>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyAnimator_V02 <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0x9C3550", Offset = "0x9C3550", VA = "0x9C3550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x9C35C0", Offset = "0x9C35C0", VA = "0x9C35C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x9C2AEC", Offset = "0x9C2AEC", VA = "0x9C2AEC")]
		[DebuggerHidden]
		public <A_FlagCler_cor>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x9C34A4", Offset = "0x9C34A4", VA = "0x9C34A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x9C34A8", Offset = "0x9C34A8", VA = "0x9C34A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x9C3558", Offset = "0x9C3558", VA = "0x9C3558", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator chr_Animator;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyDamageCollision E_damcol;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private EnemyAttackCollision_Set_V02 E_atkcol;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private EnemyTrans_V02 E_trance;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Collider E_rangecol;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private EnemyAnimator_Sub enemyAnimator_Sub;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool E_trance_state;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool walkFast;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool InCircle;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int Anim_State;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kRpcRpc_SetEnemyAttackCollision_AllOFF;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kRpcRpc_SetEnemyAttack_Collision_ON;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x9C2544", Offset = "0x9C2544", VA = "0x9C2544")]
	public void CheckAction(int Temp_State)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x9C27C0", Offset = "0x9C27C0", VA = "0x9C27C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6731AC", Offset = "0x6731AC")]
	private IEnumerator A_FlagCler_cor()
	{
		return null;
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x9C1760", Offset = "0x9C1760", VA = "0x9C1760")]
	public void A_FlagCler()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x9C172C", Offset = "0x9C172C", VA = "0x9C172C")]
	public void E_trans_OFF()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x9C2A2C", Offset = "0x9C2A2C", VA = "0x9C2A2C")]
	private void CheckWalkFast()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x9C2A70", Offset = "0x9C2A70", VA = "0x9C2A70")]
	public void Set_Trance(bool tranceFlag)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x9C2B18", Offset = "0x9C2B18", VA = "0x9C2B18")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x9C2BFC", Offset = "0x9C2BFC", VA = "0x9C2BFC")]
	public void CircleAccess(bool Invade)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x9C2C30", Offset = "0x9C2C30", VA = "0x9C2C30")]
	[ClientRpc]
	private void Rpc_SetEnemyAttackCollision_AllOFF()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x9C2770", Offset = "0x9C2770", VA = "0x9C2770")]
	private void SetEnemyAttackCollision_AllOFF()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x9C2EC8", Offset = "0x9C2EC8", VA = "0x9C2EC8")]
	[ClientRpc]
	private void Rpc_SetEnemyAttack_Collision_ON(int a)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x9C2EFC", Offset = "0x9C2EFC", VA = "0x9C2EFC")]
	public EnemyAnimator_V02()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x9C2F64", Offset = "0x9C2F64", VA = "0x9C2F64")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x9C2F68", Offset = "0x9C2F68", VA = "0x9C2F68")]
	protected static void InvokeRpcRpc_SetEnemyAttackCollision_AllOFF(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x9C3124", Offset = "0x9C3124", VA = "0x9C3124")]
	protected static void InvokeRpcRpc_SetEnemyAttack_Collision_ON(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x9C2D00", Offset = "0x9C2D00", VA = "0x9C2D00")]
	public void CallRpc_SetEnemyAttackCollision_AllOFF()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x9C2834", Offset = "0x9C2834", VA = "0x9C2834")]
	public void CallRpc_SetEnemyAttack_Collision_ON(int a)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x9C3304", Offset = "0x9C3304", VA = "0x9C3304")]
	static EnemyAnimator_V02()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x9C3498", Offset = "0x9C3498", VA = "0x9C3498", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x9C34A0", Offset = "0x9C34A0", VA = "0x9C34A0", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000092")]
public class EnemyAttackCollision_OFF_V02 : MonoBehaviour
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyController_V02 controller;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyTrans_V02 trans;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6686DC", Offset = "0x6686DC")]
	[SerializeField]
	private bool KeepActive;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool HitProofFlag;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[SerializeField]
	private bool Visible;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x9C3C08", Offset = "0x9C3C08", VA = "0x9C3C08")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x9C3D38", Offset = "0x9C3D38", VA = "0x9C3D38")]
	public EnemyAttackCollision_OFF_V02()
	{
	}
}
[Token(Token = "0x2000093")]
public class EnemyAttackCollision_Set_V02 : MonoBehaviour
{
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] E_AttackCol;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x9C17FC", Offset = "0x9C17FC", VA = "0x9C17FC")]
	public void EnemyAttack_Collision_ON(int a)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x9C189C", Offset = "0x9C189C", VA = "0x9C189C")]
	public void EnemyAttack_Collision_OFF(int a)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x9C2C5C", Offset = "0x9C2C5C", VA = "0x9C2C5C")]
	public void EnemyAttack_Collision_OFF_ALL()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x9C3E98", Offset = "0x9C3E98", VA = "0x9C3E98")]
	public EnemyAttackCollision_Set_V02()
	{
	}
}
[Token(Token = "0x2000094")]
public class EnemyController_V02 : NetworkBehaviour
{
	[Token(Token = "0x2000095")]
	public enum EnemyState
	{
		[Token(Token = "0x400041C")]
		wait,
		[Token(Token = "0x400041D")]
		walk,
		[Token(Token = "0x400041E")]
		Attack,
		[Token(Token = "0x400041F")]
		Damage,
		[Token(Token = "0x4000420")]
		Escape,
		[Token(Token = "0x4000421")]
		Start,
		[Token(Token = "0x4000422")]
		End,
		[Token(Token = "0x4000423")]
		Dead
	}

	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E38", Offset = "0x664E38")]
	private sealed class <CheckNull>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyController_V02 <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E7")]
			[Address(RVA = "0x9C59A8", Offset = "0x9C59A8", VA = "0x9C59A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E9")]
			[Address(RVA = "0x9C5A18", Offset = "0x9C5A18", VA = "0x9C5A18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x9C53DC", Offset = "0x9C53DC", VA = "0x9C53DC")]
		[DebuggerHidden]
		public <CheckNull>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x9C5810", Offset = "0x9C5810", VA = "0x9C5810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x9C5814", Offset = "0x9C5814", VA = "0x9C5814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x9C59B0", Offset = "0x9C59B0", VA = "0x9C59B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000097")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E48", Offset = "0x664E48")]
	private sealed class <SubAction_Escape>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyController_V02 <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0x9C5B1C", Offset = "0x9C5B1C", VA = "0x9C5B1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002EF")]
			[Address(RVA = "0x9C5B8C", Offset = "0x9C5B8C", VA = "0x9C5B8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x9C5408", Offset = "0x9C5408", VA = "0x9C5408")]
		[DebuggerHidden]
		public <SubAction_Escape>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x9C5A20", Offset = "0x9C5A20", VA = "0x9C5A20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x9C5A24", Offset = "0x9C5A24", VA = "0x9C5A24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x9C5B24", Offset = "0x9C5B24", VA = "0x9C5B24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int MaxHP;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float EnemySpeed;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float AttackRange;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float rotateSpeed;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform target;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform targetOrigin;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Transform> SpawnObj;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public bool hit_proof;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public EnemyState State;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int HP;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private NavMeshAgent agent;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private EnemyAnimator_V02 E_Anim;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform M01_ENE_Mov_obj;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private EnemySpawner_V02 Spawner;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isBattleActive;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool FreezcoRutine;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool WaitcoRutine;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x9C44D8", Offset = "0x9C44D8", VA = "0x9C44D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x9C4520", Offset = "0x9C4520", VA = "0x9C4520")]
	public void SetTarget(Transform newTarget, EnemySpawner_V02 newSpawner)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x9C452C", Offset = "0x9C452C", VA = "0x9C452C")]
	public void SetInitialization(Transform newTarget, EnemySpawner_V02 newSpawner, int newMaxHP, float newSpeed)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x9C4540", Offset = "0x9C4540", VA = "0x9C4540")]
	[Server]
	public void SetReSpawn(List<Transform> newSpawnPos, int SPWnumber)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x9C49EC", Offset = "0x9C49EC", VA = "0x9C49EC")]
	[Server]
	public void SetState(EnemyState tempState)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x9C4B4C", Offset = "0x9C4B4C", VA = "0x9C4B4C")]
	[ServerCallback]
	private void Update()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x9C4BD0", Offset = "0x9C4BD0", VA = "0x9C4BD0")]
	[Server]
	private void StateAction()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x9C52FC", Offset = "0x9C52FC", VA = "0x9C52FC")]
	[Server]
	public void Attack_Passing_Player(Transform PlayerPos)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x9C4DCC", Offset = "0x9C4DCC", VA = "0x9C4DCC")]
	[Server]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x9C4FEC", Offset = "0x9C4FEC", VA = "0x9C4FEC")]
	private void SubAction_Attack()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x9C5288", Offset = "0x9C5288", VA = "0x9C5288")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6732E0", Offset = "0x6732E0")]
	private IEnumerator CheckNull()
	{
		return null;
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x9C5214", Offset = "0x9C5214", VA = "0x9C5214")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673344", Offset = "0x673344")]
	private IEnumerator SubAction_Escape()
	{
		return null;
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x9C5434", Offset = "0x9C5434", VA = "0x9C5434")]
	[Server]
	public void E_Damage(Transform ShooterPos)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x9C1994", Offset = "0x9C1994", VA = "0x9C1994")]
	[Server]
	public void CheckEscape()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x9C465C", Offset = "0x9C465C", VA = "0x9C465C")]
	[Server]
	private void EnemyRestart(int SPWnumber = 99)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x9C5698", Offset = "0x9C5698", VA = "0x9C5698")]
	[Server]
	public void BattleEnd()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x9C574C", Offset = "0x9C574C", VA = "0x9C574C")]
	public EnemyController_V02()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x9C5800", Offset = "0x9C5800", VA = "0x9C5800")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x9C5804", Offset = "0x9C5804", VA = "0x9C5804", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x9C580C", Offset = "0x9C580C", VA = "0x9C580C", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000098")]
public class EnemyDamage_V02 : MonoBehaviour
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyController_V02 controller;

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x8183AC", Offset = "0x8183AC", VA = "0x8183AC")]
	public void E_damage(Transform ShooterPos)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x8183E4", Offset = "0x8183E4", VA = "0x8183E4")]
	public EnemyDamage_V02()
	{
	}
}
[Token(Token = "0x2000099")]
public class EnemyDamageCollision : MonoBehaviour
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] E_DamageCol;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x818128", Offset = "0x818128", VA = "0x818128")]
	public void EnemyDamage_col(bool a)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x8181DC", Offset = "0x8181DC", VA = "0x8181DC")]
	public void EnemyDamage_colON()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x818280", Offset = "0x818280", VA = "0x818280")]
	public void EnemyDamage_colOFF()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x818324", Offset = "0x818324", VA = "0x818324")]
	public EnemyDamageCollision()
	{
	}
}
[Token(Token = "0x200009A")]
public class EnemySound_V02 : MonoBehaviour
{
	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource foot;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource shaut;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource attack;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource Escape;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource Repel;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource Damage;

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x818608", Offset = "0x818608", VA = "0x818608")]
	private void sam_M1E1_foot()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x8186B8", Offset = "0x8186B8", VA = "0x8186B8")]
	private void sam_M1E1_shaut()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x8187AC", Offset = "0x8187AC", VA = "0x8187AC")]
	private void sam_M1E1_attack()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x81880C", Offset = "0x81880C", VA = "0x81880C")]
	private void sam_M1E1_end()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x8188E8", Offset = "0x8188E8", VA = "0x8188E8")]
	private void sam_M1E1_Repel()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x8189C4", Offset = "0x8189C4", VA = "0x8189C4")]
	private void sam_M1E1_StopFoot()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x818A64", Offset = "0x818A64", VA = "0x818A64")]
	public EnemySound_V02()
	{
	}
}
[Token(Token = "0x200009B")]
public class EnemySpawner_V02 : NetworkBehaviour
{
	[Token(Token = "0x200009C")]
	public enum EnemyName
	{
		[Token(Token = "0x4000459")]
		Enemy_A1,
		[Token(Token = "0x400045A")]
		Enemy_A2,
		[Token(Token = "0x400045B")]
		Enemy_B,
		[Token(Token = "0x400045C")]
		Enemy_Tutorial
	}

	[Token(Token = "0x200009D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E58", Offset = "0x664E58")]
	private sealed class <EnemySpawn>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySpawner_V02 <>4__this;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600030B")]
			[Address(RVA = "0x819EEC", Offset = "0x819EEC", VA = "0x819EEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600030D")]
			[Address(RVA = "0x819F5C", Offset = "0x819F5C", VA = "0x819F5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x81957C", Offset = "0x81957C", VA = "0x81957C")]
		[DebuggerHidden]
		public <EnemySpawn>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0x819C24", Offset = "0x819C24", VA = "0x819C24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x819C28", Offset = "0x819C28", VA = "0x819C28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x819EF4", Offset = "0x819EF4", VA = "0x819EF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E68", Offset = "0x664E68")]
	private sealed class <EnemyDestroyWait>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySpawner_V02 <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000311")]
			[Address(RVA = "0x819BAC", Offset = "0x819BAC", VA = "0x819BAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000313")]
			[Address(RVA = "0x819C1C", Offset = "0x819C1C", VA = "0x819C1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x8198D4", Offset = "0x8198D4", VA = "0x8198D4")]
		[DebuggerHidden]
		public <EnemyDestroyWait>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x819A5C", Offset = "0x819A5C", VA = "0x819A5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0x819A60", Offset = "0x819A60", VA = "0x819A60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x819BB4", Offset = "0x819BB4", VA = "0x819BB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyName enemyName;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject prefab;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform[] target;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int MaxHP;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] Level_MaxHP_A1;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] Level_MaxHP_A2;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int[] Level_MaxHP_B;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int Level_MaxHP_Tutorial;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float EnemySpeed;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] Level_EnemySpeed_A1;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] Level_EnemySpeed_A2;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float Level_EnemySpeed_B;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float Level_EnemySpeed_Tutorial;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform ParentObj;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform[] SpawnPosObj;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int SpawnCount;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool Flag_EndAction;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float DestroyTime;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isRunning;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject TargetObject;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float SpawnInterval;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] Level_SpawnInterval_A1;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] Level_SpawnInterval_A2;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float[] Level_SpawnInterval_B;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float Level_SpawnInterval_Tutorial;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private bool DelayedStart;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool SpawnFlag;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float IntervalTime;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float StartTime;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int Waiting;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<GameObject> EnemyObjList;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject syncVarManager_obj;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int nowState;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private DifficultManager difficultManager;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private DifficultManager2 difficultManager2;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int[] int_buff;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float[] float_buff;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x818C68", Offset = "0x818C68", VA = "0x818C68")]
	[ServerCallback]
	private void Start()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x819508", Offset = "0x819508", VA = "0x819508")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673498", Offset = "0x673498")]
	private IEnumerator EnemySpawn()
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x8195A8", Offset = "0x8195A8", VA = "0x8195A8")]
	public float SpawnCheck()
	{
		return default(float);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x819618", Offset = "0x819618", VA = "0x819618")]
	private void SetSpawnFlag()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x81965C", Offset = "0x81965C", VA = "0x81965C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x819750", Offset = "0x819750", VA = "0x819750")]
	private void BattleEndAction()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x819860", Offset = "0x819860", VA = "0x819860")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6734FC", Offset = "0x6734FC")]
	private IEnumerator EnemyDestroyWait()
	{
		return null;
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x819900", Offset = "0x819900", VA = "0x819900")]
	public EnemySpawner_V02()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x819A4C", Offset = "0x819A4C", VA = "0x819A4C")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x819A50", Offset = "0x819A50", VA = "0x819A50", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x819A58", Offset = "0x819A58", VA = "0x819A58", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200009F")]
public class EnemyTrans_V02 : MonoBehaviour
{
	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator[] renderObjects;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator Rend_Animator;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int R_objCount;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool GiveUP;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x81AA18", Offset = "0x81AA18", VA = "0x81AA18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x81AA4C", Offset = "0x81AA4C", VA = "0x81AA4C")]
	public void E_trans_Switch(bool E_visible)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x81AB2C", Offset = "0x81AB2C", VA = "0x81AB2C")]
	private void E_trans_ON()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x81AB34", Offset = "0x81AB34", VA = "0x81AB34")]
	public void GiveUP_onBattle_EnemyTrance()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x81AB60", Offset = "0x81AB60", VA = "0x81AB60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x81ACF8", Offset = "0x81ACF8", VA = "0x81ACF8")]
	public EnemyTrans_V02()
	{
	}
}
[Token(Token = "0x20000A0")]
public class Fix_Transform : MonoBehaviour
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform Trans;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x81D384", Offset = "0x81D384", VA = "0x81D384")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x81D3AC", Offset = "0x81D3AC", VA = "0x81D3AC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x81D4C4", Offset = "0x81D4C4", VA = "0x81D4C4")]
	public Fix_Transform()
	{
	}
}
[Token(Token = "0x20000A1")]
public class OB_Destroy : MonoBehaviour
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DestroyCount;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x950B24", Offset = "0x950B24", VA = "0x950B24")]
	private void Update()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x950BB0", Offset = "0x950BB0", VA = "0x950BB0")]
	public OB_Destroy()
	{
	}
}
[Token(Token = "0x20000A2")]
public class OB_inActive : MonoBehaviour
{
	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E78", Offset = "0x664E78")]
	private sealed class <InActive>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OB_inActive <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000325")]
			[Address(RVA = "0x950E44", Offset = "0x950E44", VA = "0x950E44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000327")]
			[Address(RVA = "0x950EB4", Offset = "0x950EB4", VA = "0x950EB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x950CF8", Offset = "0x950CF8", VA = "0x950CF8")]
		[DebuggerHidden]
		public <InActive>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x950D34", Offset = "0x950D34", VA = "0x950D34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x950D38", Offset = "0x950D38", VA = "0x950D38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x950E4C", Offset = "0x950E4C", VA = "0x950E4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float inActiveCount;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool Action_Active;

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x950C58", Offset = "0x950C58", VA = "0x950C58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x950C84", Offset = "0x950C84", VA = "0x950C84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673600", Offset = "0x673600")]
	private IEnumerator InActive()
	{
		return null;
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x950D24", Offset = "0x950D24", VA = "0x950D24")]
	public OB_inActive()
	{
	}
}
[Token(Token = "0x20000A4")]
public class Player_SetState_onEnable : MonoBehaviour
{
	[Token(Token = "0x6000328")]
	[Address(RVA = "0x8BBFAC", Offset = "0x8BBFAC", VA = "0x8BBFAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x8BC084", Offset = "0x8BC084", VA = "0x8BC084")]
	public Player_SetState_onEnable()
	{
	}
}
[Token(Token = "0x20000A5")]
public class PlayerCheck_V02 : MonoBehaviour
{
	[Token(Token = "0x20000A6")]
	public enum PlayerState
	{
		[Token(Token = "0x400049C")]
		Shooter,
		[Token(Token = "0x400049D")]
		OnCiecre,
		[Token(Token = "0x400049E")]
		inactive,
		[Token(Token = "0x400049F")]
		Walaker,
		[Token(Token = "0x40004A0")]
		GiveUP
	}

	[Token(Token = "0x20000A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E88", Offset = "0x664E88")]
	private sealed class <InvincibleTime>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerCheck_V02 <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0x8B9014", Offset = "0x8B9014", VA = "0x8B9014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000344")]
			[Address(RVA = "0x8B9084", Offset = "0x8B9084", VA = "0x8B9084", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x8B8CC0", Offset = "0x8B8CC0", VA = "0x8B8CC0")]
		[DebuggerHidden]
		public <InvincibleTime>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x8B8F10", Offset = "0x8B8F10", VA = "0x8B8F10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x8B8F14", Offset = "0x8B8F14", VA = "0x8B8F14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x8B901C", Offset = "0x8B901C", VA = "0x8B901C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664E98", Offset = "0x664E98")]
	private sealed class <Inactive_Freez>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerCheck_V02 <>4__this;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000348")]
			[Address(RVA = "0x8B8E98", Offset = "0x8B8E98", VA = "0x8B8E98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600034A")]
			[Address(RVA = "0x8B8F08", Offset = "0x8B8F08", VA = "0x8B8F08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x8B8CEC", Offset = "0x8B8CEC", VA = "0x8B8CEC")]
		[DebuggerHidden]
		public <Inactive_Freez>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x8B8D3C", Offset = "0x8B8D3C", VA = "0x8B8D3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x8B8D40", Offset = "0x8B8D40", VA = "0x8B8D40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x8B8EA0", Offset = "0x8B8EA0", VA = "0x8B8EA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int Max_HP;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float RecoverTime;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject DamageCollsion;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float InbincibleTime;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator DamagePlane;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator GhostVisionPlane;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BattleSys_VisibleChecker V_Checker;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerState P_State;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ShootChecker_V02 ShootChecker;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerDamageCollision_V02 P_Damage_col;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NavMeshObstacle MM_Obstacle;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool UniqueCoToutineFlag;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int HP;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool InCircle;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool NowBattle;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject shootChecker_obj;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject getPlayerInfo_obj;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool CheckLocalPlayer;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject SyncVarManager;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string SyncVarManager_ObjName;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject Server_Init;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string Server_Init_ObjName;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Server_Init server_Init;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject DifficultManager;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string difficultManager_ObjName;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private DifficultManager difficultManager;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Animator chr_Animator;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject chr_Animator_obj;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Animator chr_Animator2;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject chr_Animator_obj2;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Avatar_SyncAnimClient AvatarSyncAnimObject;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private CmdManager cmdManager;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject Speaker_PlayerDead;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject Speaker_PlayerDamage;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject PointerManager;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string PointerManager_ObjName;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private PointerManager pointerManager;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int LastBattleState;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool setFlag;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
	private bool setFlag2;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
	private bool setFlag3;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
	private bool setFlag4;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool readComplete;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x8B7ED8", Offset = "0x8B7ED8", VA = "0x8B7ED8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x8B8094", Offset = "0x8B8094", VA = "0x8B8094")]
	private void Start()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x8B8178", Offset = "0x8B8178", VA = "0x8B8178")]
	private void Update()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x8B8200", Offset = "0x8B8200", VA = "0x8B8200")]
	private void ReadDifficultValue()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x8B86B4", Offset = "0x8B86B4", VA = "0x8B86B4")]
	public void AvatarColorChanger()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x8B850C", Offset = "0x8B850C", VA = "0x8B850C")]
	public void BattleStateCheck()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x8B85B8", Offset = "0x8B85B8", VA = "0x8B85B8")]
	public void DeadEffectOff_Check()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x8B825C", Offset = "0x8B825C", VA = "0x8B825C")]
	public void SetState(PlayerState tempState)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x8B8A6C", Offset = "0x8B8A6C", VA = "0x8B8A6C")]
	public void PlayerGiveUP()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x8B8A74", Offset = "0x8B8A74", VA = "0x8B8A74")]
	public void Not_Battle()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x8B8818", Offset = "0x8B8818", VA = "0x8B8818")]
	public void Battle_Start()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x8B8810", Offset = "0x8B8810", VA = "0x8B8810")]
	public void Battle_End()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x8B8A7C", Offset = "0x8B8A7C", VA = "0x8B8A7C")]
	public void ReceiveDamage()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x8B8060", Offset = "0x8B8060", VA = "0x8B8060")]
	public void SetPlayerHP(int TempHP)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x8B8C74", Offset = "0x8B8C74", VA = "0x8B8C74")]
	public void CircleEntrance_Player(bool Invade)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x8B8904", Offset = "0x8B8904", VA = "0x8B8904")]
	private void CiecleEntry_Enemy()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x8B8B44", Offset = "0x8B8B44", VA = "0x8B8B44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6736B4", Offset = "0x6736B4")]
	private IEnumerator InvincibleTime()
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x8B89F8", Offset = "0x8B89F8", VA = "0x8B89F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673718", Offset = "0x673718")]
	private IEnumerator Inactive_Freez()
	{
		return null;
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x8B8820", Offset = "0x8B8820", VA = "0x8B8820")]
	private void DamageEffect_camera(bool P_DamageEF_ON)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x8B8964", Offset = "0x8B8964", VA = "0x8B8964")]
	private void GhostVisionEffect_camera()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x8B8D18", Offset = "0x8B8D18", VA = "0x8B8D18")]
	public PlayerCheck_V02()
	{
	}
}
[Token(Token = "0x20000A9")]
public class PlayerDamageCollision_V02 : MonoBehaviour
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject P_ContObj;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform TargetHMD;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float CrouchVorder;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 OriLocalScale;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isCrauch;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x8B9F44", Offset = "0x8B9F44", VA = "0x8B9F44")]
	private void Start()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x8B9F88", Offset = "0x8B9F88", VA = "0x8B9F88")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x8BA0C0", Offset = "0x8BA0C0", VA = "0x8BA0C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x8BA118", Offset = "0x8BA118", VA = "0x8BA118")]
	private void SetLocalScale(bool TempCrouch)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x8BA1F4", Offset = "0x8BA1F4", VA = "0x8BA1F4")]
	public PlayerDamageCollision_V02()
	{
	}
}
[Token(Token = "0x20000AA")]
public class PlayerGiveUP_onBattle : MonoBehaviour
{
	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject BossBattle;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x8BA4B4", Offset = "0x8BA4B4", VA = "0x8BA4B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x8BA5AC", Offset = "0x8BA5AC", VA = "0x8BA5AC")]
	public PlayerGiveUP_onBattle()
	{
	}
}
[Token(Token = "0x20000AB")]
public class ShootChecker_V02 : NetworkBehaviour
{
	[Token(Token = "0x20000AC")]
	private enum P_BattleAudio
	{
		[Token(Token = "0x40004C6")]
		Chage,
		[Token(Token = "0x40004C7")]
		C_Full
	}

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject SyncVarManager;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string SyncVarManager_ObjName;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject NetSyncValue;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string NetSyncValue_ObjName;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform AvatarPos;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private BulletRoot_V02 bulletObj;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float B_Power;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int Max_chage;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int Chage_Level;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Animator chageObj_All;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject shotReaction_Obj;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x668A08", Offset = "0x668A08")]
	private AudioSource SpeakerObj;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip Clip_chage;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip Clip_c_Full;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Avatar_SyncAnimClient AvatarSyncAnimObject;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private UnityEvent shootAction;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool Safety_Tutorial;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int Chage_Count;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<GameObject> ChageObjList;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool Shooting;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool ControlTrigger;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kCmdCmd_Shot;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kRpcRpc_HitEffect;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xA27B3C", Offset = "0xA27B3C", VA = "0xA27B3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xA27BC4", Offset = "0xA27BC4", VA = "0xA27BC4")]
	[ClientCallback]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xA27E28", Offset = "0xA27E28", VA = "0xA27E28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xA27F78", Offset = "0xA27F78", VA = "0xA27F78")]
	public void SetShootingFlag(bool a)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xA27C58", Offset = "0xA27C58", VA = "0xA27C58")]
	private void DeviceCheck()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xA27D38", Offset = "0xA27D38", VA = "0xA27D38")]
	private void Shot_Fire()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xA27E60", Offset = "0xA27E60", VA = "0xA27E60")]
	private void Shot_Charge()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xA28188", Offset = "0xA28188", VA = "0xA28188")]
	private void Shot()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xA286E8", Offset = "0xA286E8", VA = "0xA286E8")]
	[Command]
	private void Cmd_Shot()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xA28754", Offset = "0xA28754", VA = "0xA28754")]
	public void ShotSync()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xA28758", Offset = "0xA28758", VA = "0xA28758")]
	public void HitBullet(int HitType)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xA289C0", Offset = "0xA289C0", VA = "0xA289C0")]
	[ClientRpc]
	private void Rpc_HitEffect(int HitType)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xA27FE4", Offset = "0xA27FE4", VA = "0xA27FE4")]
	private void Chage(int a, bool reset)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xA2861C", Offset = "0xA2861C", VA = "0xA2861C")]
	private void P_AudioPlay(P_BattleAudio Tempclip)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xA285AC", Offset = "0xA285AC", VA = "0xA285AC")]
	private void P_AudioPause()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xA28118", Offset = "0xA28118", VA = "0xA28118")]
	private void P_AudioStop()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xA289F8", Offset = "0xA289F8", VA = "0xA289F8")]
	public ShootChecker_V02()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xA28A94", Offset = "0xA28A94", VA = "0xA28A94")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xA28A98", Offset = "0xA28A98", VA = "0xA28A98")]
	protected static void InvokeCmdCmd_Shot(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xA281CC", Offset = "0xA281CC", VA = "0xA281CC")]
	public void CallCmd_Shot()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xA28C54", Offset = "0xA28C54", VA = "0xA28C54")]
	protected static void InvokeRpcRpc_HitEffect(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xA287C8", Offset = "0xA287C8", VA = "0xA287C8")]
	public void CallRpc_HitEffect(int HitType)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xA28E34", Offset = "0xA28E34", VA = "0xA28E34")]
	static ShootChecker_V02()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xA28FC8", Offset = "0xA28FC8", VA = "0xA28FC8", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xA28FD0", Offset = "0xA28FD0", VA = "0xA28FD0", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000AD")]
public class Debug_TextCall : MonoBehaviour
{
	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Debug_TextImport SetSubtitle;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int Text_Number;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x9B0F6C", Offset = "0x9B0F6C", VA = "0x9B0F6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x9B1018", Offset = "0x9B1018", VA = "0x9B1018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x9B10A8", Offset = "0x9B10A8", VA = "0x9B10A8")]
	public Debug_TextCall()
	{
	}
}
[Token(Token = "0x20000AE")]
public class Debug_TextImport : MonoBehaviour
{
	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664EA8", Offset = "0x664EA8")]
	private sealed class <EraseWait>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waittime;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Debug_TextImport <>4__this;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000377")]
			[Address(RVA = "0x9B13D8", Offset = "0x9B13D8", VA = "0x9B13D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000379")]
			[Address(RVA = "0x9B1448", Offset = "0x9B1448", VA = "0x9B1448", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x9B12E8", Offset = "0x9B12E8", VA = "0x9B12E8")]
		[DebuggerHidden]
		public <EraseWait>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x9B131C", Offset = "0x9B131C", VA = "0x9B131C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x9B1320", Offset = "0x9B1320", VA = "0x9B1320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x9B13E0", Offset = "0x9B13E0", VA = "0x9B13E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMesh dataText;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextAsset textAsset;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string loadText;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string[] splitText;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x9B10B0", Offset = "0x9B10B0", VA = "0x9B10B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x9B11B8", Offset = "0x9B11B8", VA = "0x9B11B8")]
	private void ViewSubtitle(int textNum)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x9B0FA0", Offset = "0x9B0FA0", VA = "0x9B0FA0")]
	public void ViewSubtitle_Event(int textNum)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x9B1044", Offset = "0x9B1044", VA = "0x9B1044")]
	public void EraseSubtitle()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x9B1250", Offset = "0x9B1250", VA = "0x9B1250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x67384C", Offset = "0x67384C")]
	private IEnumerator EraseWait(float waittime)
	{
		return null;
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x9B1314", Offset = "0x9B1314", VA = "0x9B1314")]
	public Debug_TextImport()
	{
	}
}
[Token(Token = "0x20000B0")]
public class TransformTargetObjectAlways_V02 : MonoBehaviour
{
	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject TargetObject;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool FollowPosition_Y;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool FollowAngle_X;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[SerializeField]
	private bool FollowAngle_Y;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[SerializeField]
	private bool FollowAngle_Z;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x858478", Offset = "0x858478", VA = "0x858478")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x8585D8", Offset = "0x8585D8", VA = "0x8585D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x85847C", Offset = "0x85847C", VA = "0x85847C")]
	private void TransformTarget()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x8585DC", Offset = "0x8585DC", VA = "0x8585DC")]
	public TransformTargetObjectAlways_V02()
	{
	}
}
[Token(Token = "0x20000B1")]
public class TransformTargetObjectOnEnable_V02 : MonoBehaviour
{
	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject TargetObject;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x8585EC", Offset = "0x8585EC", VA = "0x8585EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x8585F0", Offset = "0x8585F0", VA = "0x8585F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x8585F4", Offset = "0x8585F4", VA = "0x8585F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x8585F8", Offset = "0x8585F8", VA = "0x8585F8")]
	private void TransformTarget()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x8586D8", Offset = "0x8586D8", VA = "0x8586D8")]
	public TransformTargetObjectOnEnable_V02()
	{
	}
}
[Token(Token = "0x20000B2")]
public class TransformWarld_V02 : MonoBehaviour
{
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool FollowPosition_Y;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool FollowAngle_X;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool FollowAngle_Y;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool FollowAngle_Z;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x858B24", Offset = "0x858B24", VA = "0x858B24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x858C28", Offset = "0x858C28", VA = "0x858C28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x858B28", Offset = "0x858B28", VA = "0x858B28")]
	private void TransformTarget()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x858C2C", Offset = "0x858C2C", VA = "0x858C2C")]
	public TransformWarld_V02()
	{
	}
}
[Token(Token = "0x20000B3")]
public class Display_Controller : MonoBehaviour
{
	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera Operator_Cam;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject CameraRig;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x668B94", Offset = "0x668B94")]
	private int m_useDisplayCount;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject Demo_Cam;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Debug_ClientPlay debug_ClientPlay;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x9B8A64", Offset = "0x9B8A64", VA = "0x9B8A64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x9B8AD4", Offset = "0x9B8AD4", VA = "0x9B8AD4")]
	public Display_Controller()
	{
	}
}
[Token(Token = "0x20000B4")]
public class DynamicBoneDemo1 : MonoBehaviour
{
	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_Player;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x9BCF20", Offset = "0x9BCF20", VA = "0x9BCF20")]
	private void Update()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x9BD110", Offset = "0x9BD110", VA = "0x9BD110")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x9BD4A8", Offset = "0x9BD4A8", VA = "0x9BD4A8")]
	public DynamicBoneDemo1()
	{
	}
}
[Token(Token = "0x20000B5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x664EB8", Offset = "0x664EB8")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x20000B6")]
	public enum UpdateMode
	{
		[Token(Token = "0x4000503")]
		Normal,
		[Token(Token = "0x4000504")]
		AnimatePhysics,
		[Token(Token = "0x4000505")]
		UnscaledTime
	}

	[Token(Token = "0x20000B7")]
	public enum FreezeAxis
	{
		[Token(Token = "0x4000507")]
		None,
		[Token(Token = "0x4000508")]
		X,
		[Token(Token = "0x4000509")]
		Y,
		[Token(Token = "0x400050A")]
		Z
	}

	[Token(Token = "0x20000B8")]
	private class Particle
	{
		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Damping;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Elasticity;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Stiffness;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Inert;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Radius;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_BoneLength;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_Position;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x9BBB4C", Offset = "0x9BBB4C", VA = "0x9BBB4C")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_Root;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_UpdateRate;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x668BF4", Offset = "0x668BF4")]
	public float m_Damping;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x668C0C", Offset = "0x668C0C")]
	public float m_Elasticity;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x668C24", Offset = "0x668C24")]
	public float m_Stiffness;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x668C3C", Offset = "0x668C3C")]
	public float m_Inert;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_Radius;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_EndLength;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 m_Gravity;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 m_Force;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool m_DistantDisable;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_DistanceToObject;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float m_BoneTotalLength;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float m_ObjectScale;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float m_Time;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float m_Weight;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool m_DistantDisabled;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<Particle> m_Particles;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x9B8AE4", Offset = "0x9B8AE4", VA = "0x9B8AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x9B8CA8", Offset = "0x9B8CA8", VA = "0x9B8CA8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x9B8CFC", Offset = "0x9B8CFC", VA = "0x9B8CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x9B8D2C", Offset = "0x9B8D2C", VA = "0x9B8D2C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x9B8CD8", Offset = "0x9B8CD8", VA = "0x9B8CD8")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x9B8D8C", Offset = "0x9B8D8C", VA = "0x9B8D8C")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x9B9550", Offset = "0x9B9550", VA = "0x9B9550")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x9B9554", Offset = "0x9B9554", VA = "0x9B9554")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x9B9558", Offset = "0x9B9558", VA = "0x9B9558")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x9B9674", Offset = "0x9B9674", VA = "0x9B9674")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x9B986C", Offset = "0x9B986C", VA = "0x9B986C")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x9B98C8", Offset = "0x9B98C8", VA = "0x9B98C8")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x9B8FAC", Offset = "0x9B8FAC", VA = "0x9B8FAC")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x9B8AE8", Offset = "0x9B8AE8", VA = "0x9B8AE8")]
	private void SetupParticles()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x9BAF68", Offset = "0x9BAF68", VA = "0x9BAF68")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x9BB750", Offset = "0x9BB750", VA = "0x9BB750")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x9B921C", Offset = "0x9B921C", VA = "0x9B921C")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x9B938C", Offset = "0x9B938C", VA = "0x9B938C")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x9B98D0", Offset = "0x9B98D0", VA = "0x9B98D0")]
	private void UpdateParticles1()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x9B9C68", Offset = "0x9B9C68", VA = "0x9B9C68")]
	private void UpdateParticles2()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x9BA4F4", Offset = "0x9BA4F4", VA = "0x9BA4F4")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x9BBC2C", Offset = "0x9BBC2C", VA = "0x9BBC2C")]
	private static Vector3 MirrorVector(Vector3 v, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x9BABF4", Offset = "0x9BABF4", VA = "0x9BABF4")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x9BBD0C", Offset = "0x9BBD0C", VA = "0x9BBD0C")]
	public DynamicBone()
	{
	}
}
[Token(Token = "0x20000B9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x664EF0", Offset = "0x664EF0")]
public class DynamicBoneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_Radius;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_Height;

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x9BBE2C", Offset = "0x9BBE2C", VA = "0x9BBE2C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x9BBEC4", Offset = "0x9BBEC4", VA = "0x9BBEC4", Slot = "4")]
	public override void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x9BC120", Offset = "0x9BC120", VA = "0x9BC120")]
	private static void OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x9BC2B4", Offset = "0x9BC2B4", VA = "0x9BC2B4")]
	private static void InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x9BC458", Offset = "0x9BC458", VA = "0x9BC458")]
	private static void OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x9BC894", Offset = "0x9BC894", VA = "0x9BC894")]
	private static void InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x9BCCA4", Offset = "0x9BCCA4", VA = "0x9BCCA4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x9BCE90", Offset = "0x9BCE90", VA = "0x9BCE90")]
	public DynamicBoneCollider()
	{
	}
}
[Token(Token = "0x20000BA")]
public class DynamicBoneColliderBase : MonoBehaviour
{
	[Token(Token = "0x20000BB")]
	public enum Direction
	{
		[Token(Token = "0x400051E")]
		X,
		[Token(Token = "0x400051F")]
		Y,
		[Token(Token = "0x4000520")]
		Z
	}

	[Token(Token = "0x20000BC")]
	public enum Bound
	{
		[Token(Token = "0x4000522")]
		Outside,
		[Token(Token = "0x4000523")]
		Inside
	}

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Direction m_Direction;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_Center;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Bound m_Bound;

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x9BCF1C", Offset = "0x9BCF1C", VA = "0x9BCF1C", Slot = "4")]
	public virtual void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x9BCE9C", Offset = "0x9BCE9C", VA = "0x9BCE9C")]
	public DynamicBoneColliderBase()
	{
	}
}
[Token(Token = "0x20000BD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x664F28", Offset = "0x664F28")]
public class DynamicBonePlaneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x9BD4B0", Offset = "0x9BD4B0", VA = "0x9BD4B0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x9BD4B4", Offset = "0x9BD4B4", VA = "0x9BD4B4", Slot = "4")]
	public override void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x9BD6E4", Offset = "0x9BD6E4", VA = "0x9BD6E4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x9BD8F8", Offset = "0x9BD8F8", VA = "0x9BD8F8")]
	public DynamicBonePlaneCollider()
	{
	}
}
[Token(Token = "0x20000BE")]
public class AnimationTrigger_EventClear : MonoBehaviour
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Server_Init;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Server_Init_SA server_Init;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string Server_Init_ObjName;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x836630", Offset = "0x836630", VA = "0x836630")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x836728", Offset = "0x836728", VA = "0x836728")]
	public AnimationTrigger_EventClear()
	{
	}
}
[Token(Token = "0x20000BF")]
public class AnimationTrigger_MapClear : MonoBehaviour
{
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject SyncVarManager;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string SyncVarManager_ObjName;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject Server_Init;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Server_Init_SA server_Init;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string Server_Init_ObjName;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x836780", Offset = "0x836780", VA = "0x836780")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x8368B4", Offset = "0x8368B4", VA = "0x8368B4")]
	public AnimationTrigger_MapClear()
	{
	}
}
[Token(Token = "0x20000C0")]
public class AnimationTriggerOn_Kiminomiya : MonoBehaviour
{
	[Token(Token = "0x20000C1")]
	public enum TagName
	{
		[Token(Token = "0x4000533")]
		Player_Head,
		[Token(Token = "0x4000534")]
		Player_Arms
	}

	[Token(Token = "0x20000C2")]
	public enum TriggerName
	{
		[Token(Token = "0x4000536")]
		OnTriggerEnter,
		[Token(Token = "0x4000537")]
		OnTriggerStay,
		[Token(Token = "0x4000538")]
		OnTriggerExit
	}

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TagName tagName;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private TriggerName triggerName;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string tagNameStr;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] On_GameObject;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] Off_GameObject;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x832924", Offset = "0x832924", VA = "0x832924")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x8329C0", Offset = "0x8329C0", VA = "0x8329C0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x832BC4", Offset = "0x832BC4", VA = "0x832BC4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x832DCC", Offset = "0x832DCC", VA = "0x832DCC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x832FD4", Offset = "0x832FD4", VA = "0x832FD4")]
	public AnimationTriggerOn_Kiminomiya()
	{
	}
}
[Token(Token = "0x20000C3")]
public class AnimationTriggerOn_Server : MonoBehaviour
{
	[Token(Token = "0x20000C4")]
	public enum TagName
	{
		[Token(Token = "0x400055E")]
		HMD,
		[Token(Token = "0x400055F")]
		Controller,
		[Token(Token = "0x4000560")]
		PlayerBody,
		[Token(Token = "0x4000561")]
		OnlyMyself,
		[Token(Token = "0x4000562")]
		OnlyMyself2,
		[Token(Token = "0x4000563")]
		OnlyMyself3
	}

	[Token(Token = "0x20000C5")]
	public enum EventTriggerType
	{
		[Token(Token = "0x4000565")]
		TRG_Anyone,
		[Token(Token = "0x4000566")]
		TRG_1stPerson,
		[Token(Token = "0x4000567")]
		TRG_2ndPerson,
		[Token(Token = "0x4000568")]
		TRG_3rdPerson,
		[Token(Token = "0x4000569")]
		TRG_LastPerson,
		[Token(Token = "0x400056A")]
		TRG_Map,
		[Token(Token = "0x400056B")]
		TRG_Clear_Map,
		[Token(Token = "0x400056C")]
		TRG_Clear_Person
	}

	[Token(Token = "0x20000C6")]
	public enum TriggerName
	{
		[Token(Token = "0x400056E")]
		OnTriggerEnter,
		[Token(Token = "0x400056F")]
		OnTriggerStay,
		[Token(Token = "0x4000570")]
		OnTriggerExit
	}

	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664F60", Offset = "0x664F60")]
	private sealed class <TriggerAction>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationTriggerOn_Server <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003CF")]
			[Address(RVA = "0x834614", Offset = "0x834614", VA = "0x834614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D1")]
			[Address(RVA = "0x834684", Offset = "0x834684", VA = "0x834684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x833B14", Offset = "0x833B14", VA = "0x833B14")]
		[DebuggerHidden]
		public <TriggerAction>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x833F48", Offset = "0x833F48", VA = "0x833F48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x833F4C", Offset = "0x833F4C", VA = "0x833F4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x83461C", Offset = "0x83461C", VA = "0x83461C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TagName tagName;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string tagNameStr;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EventTriggerType TriggerType;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private TriggerName triggerName;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float DelayTime;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject AnimateObject;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string conditionName;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public GameObject[] AudioObject;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float AfterDelayTime;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public GameObject[] EnableGameObject;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public GameObject[] AudioObject_Delay;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public GameObject[] DestroyGameObject;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool disableCollider;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[SerializeField]
	private bool destroyMyself;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	[SerializeField]
	private bool valueReset;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	private bool isRunning;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject Server_Init;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Server_Init_SA server_Init;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string Server_Init_ObjName;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject SyncVarManager;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string SyncVarManager_ObjName;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] MapNum;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int[] RetireCheck;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int[] MapCheck;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int TrgCounter_Result;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int TrgCounter_Move;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool giveUpFlag;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool setFlag;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int giveUpFlag01;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int giveUpFlag02;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int giveUpFlag03;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int giveUpFlag04;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private bool EventCount;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private string EventTitle;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x83304C", Offset = "0x83304C", VA = "0x83304C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x8330E8", Offset = "0x8330E8", VA = "0x8330E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x8332C4", Offset = "0x8332C4", VA = "0x8332C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x8337B0", Offset = "0x8337B0", VA = "0x8337B0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x8339C0", Offset = "0x8339C0", VA = "0x8339C0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x833414", Offset = "0x833414", VA = "0x833414")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673900", Offset = "0x673900")]
	private IEnumerator TriggerAction()
	{
		return null;
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x8334F0", Offset = "0x8334F0", VA = "0x8334F0")]
	public void EventTrigger_FlexiblePlayerCount(Collider other)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x833B48", Offset = "0x833B48", VA = "0x833B48")]
	private void GiveUpCheck_Triger()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x8330EC", Offset = "0x8330EC", VA = "0x8330EC")]
	public void RerunCheck_FlexiblePlayerCount()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x833488", Offset = "0x833488", VA = "0x833488")]
	public void EventTrigger_Clear_Map()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x8334BC", Offset = "0x8334BC", VA = "0x8334BC")]
	public void EventTrigger_Clear_Person()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x833DAC", Offset = "0x833DAC", VA = "0x833DAC")]
	public void EventTrigger_Clear_Map_sub()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x833CD8", Offset = "0x833CD8", VA = "0x833CD8")]
	public void EventTrigger_Clear_Person_sub()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x833900", Offset = "0x833900", VA = "0x833900")]
	public void EventTrigger_MapCheck()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x833B40", Offset = "0x833B40", VA = "0x833B40")]
	public int SetPlayerStatus()
	{
		return default(int);
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x833E30", Offset = "0x833E30", VA = "0x833E30")]
	public AnimationTriggerOn_Server()
	{
	}
}
[Token(Token = "0x20000C8")]
public class AnimationTriggerOn_Server_BU : MonoBehaviour
{
	[Token(Token = "0x20000C9")]
	public enum TagName
	{
		[Token(Token = "0x4000597")]
		HMD,
		[Token(Token = "0x4000598")]
		Controller,
		[Token(Token = "0x4000599")]
		PlayerBody,
		[Token(Token = "0x400059A")]
		OnlyMyself,
		[Token(Token = "0x400059B")]
		OnlyMyself2,
		[Token(Token = "0x400059C")]
		OnlyMyself3
	}

	[Token(Token = "0x20000CA")]
	public enum EventTriggerType
	{
		[Token(Token = "0x400059E")]
		TRG_Anyone,
		[Token(Token = "0x400059F")]
		TRG_1stPerson,
		[Token(Token = "0x40005A0")]
		TRG_2ndPerson,
		[Token(Token = "0x40005A1")]
		TRG_3rdPerson,
		[Token(Token = "0x40005A2")]
		TRG_LastPerson,
		[Token(Token = "0x40005A3")]
		TRG_Map,
		[Token(Token = "0x40005A4")]
		TRG_Clear_Map,
		[Token(Token = "0x40005A5")]
		TRG_Clear_Person
	}

	[Token(Token = "0x20000CB")]
	public enum TriggerName
	{
		[Token(Token = "0x40005A7")]
		OnTriggerEnter,
		[Token(Token = "0x40005A8")]
		OnTriggerStay,
		[Token(Token = "0x40005A9")]
		OnTriggerExit
	}

	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664F70", Offset = "0x664F70")]
	private sealed class <TriggerAction>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationTriggerOn_Server_BU <>4__this;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0x8361D0", Offset = "0x8361D0", VA = "0x8361D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E7")]
			[Address(RVA = "0x836240", Offset = "0x836240", VA = "0x836240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x8353DC", Offset = "0x8353DC", VA = "0x8353DC")]
		[DebuggerHidden]
		public <TriggerAction>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x835B68", Offset = "0x835B68", VA = "0x835B68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x835B6C", Offset = "0x835B6C", VA = "0x835B6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x8361D8", Offset = "0x8361D8", VA = "0x8361D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TagName tagName;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string tagNameStr;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EventTriggerType TriggerType;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private TriggerName triggerName;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float DelayTime;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject AnimateObject;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string conditionName;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public GameObject[] AudioObject;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float AfterDelayTime;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public GameObject[] EnableGameObject;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public GameObject[] AudioObject_Delay;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public GameObject[] DestroyGameObject;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool disableCollider;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[SerializeField]
	private bool destroyMyself;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	[SerializeField]
	private bool valueReset;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	private bool isRunning;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject Server_Init;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Server_Init server_Init;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string Server_Init_ObjName;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject SyncVarManager;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string SyncVarManager_ObjName;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] MapNum;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int[] RetireCheck;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int[] MapCheck;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int TrgCounter_Result;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int TrgCounter_Move;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool giveUpFlag;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool setFlag;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int giveUpFlag01;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int giveUpFlag02;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int giveUpFlag03;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int giveUpFlag04;

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x83468C", Offset = "0x83468C", VA = "0x83468C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x834728", Offset = "0x834728", VA = "0x834728")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x834904", Offset = "0x834904", VA = "0x834904")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x834DF4", Offset = "0x834DF4", VA = "0x834DF4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x835288", Offset = "0x835288", VA = "0x835288")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x834A54", Offset = "0x834A54", VA = "0x834A54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6739B4", Offset = "0x6739B4")]
	private IEnumerator TriggerAction()
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x834B30", Offset = "0x834B30", VA = "0x834B30")]
	public void EventTrigger_FlexiblePlayerCount(Collider other)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x83576C", Offset = "0x83576C", VA = "0x83576C")]
	private void GiveUpCheck_Triger()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x83472C", Offset = "0x83472C", VA = "0x83472C")]
	public void RerunCheck_FlexiblePlayerCount()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x834AC8", Offset = "0x834AC8", VA = "0x834AC8")]
	public void EventTrigger_Clear_Map()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x834AFC", Offset = "0x834AFC", VA = "0x834AFC")]
	public void EventTrigger_Clear_Person()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x8359D0", Offset = "0x8359D0", VA = "0x8359D0")]
	public void EventTrigger_Clear_Map_sub()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x8358FC", Offset = "0x8358FC", VA = "0x8358FC")]
	public void EventTrigger_Clear_Person_sub()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x834F44", Offset = "0x834F44", VA = "0x834F44")]
	public void EventTrigger_MapCheck()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x835408", Offset = "0x835408", VA = "0x835408")]
	public int SetPlayerStatus()
	{
		return default(int);
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x835A54", Offset = "0x835A54", VA = "0x835A54")]
	public AnimationTriggerOn_Server_BU()
	{
	}
}
[Token(Token = "0x20000CD")]
public class AnimationTriggerOn_Server_Tiny : MonoBehaviour
{
	[Token(Token = "0x20000CE")]
	public enum TagName
	{
		[Token(Token = "0x40005B3")]
		OnlyMyself,
		[Token(Token = "0x40005B4")]
		OnlyMyself2,
		[Token(Token = "0x40005B5")]
		OnlyMyself3
	}

	[Token(Token = "0x20000CF")]
	public enum TriggerName
	{
		[Token(Token = "0x40005B7")]
		OnTriggerEnter,
		[Token(Token = "0x40005B8")]
		OnTriggerExit
	}

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TagName tagName;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private TriggerName triggerName;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string tagNameStr;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] On_GiveUpGameObject;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] Off_GiveUpGameObject;

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x836248", Offset = "0x836248", VA = "0x836248")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x8362E4", Offset = "0x8362E4", VA = "0x8362E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x83644C", Offset = "0x83644C", VA = "0x83644C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x8365B8", Offset = "0x8365B8", VA = "0x8365B8")]
	public AnimationTriggerOn_Server_Tiny()
	{
	}
}
[Token(Token = "0x20000D0")]
public class AudioMixerController : MonoBehaviour
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixer mixer;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float volume;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x836A7C", Offset = "0x836A7C", VA = "0x836A7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x836AE8", Offset = "0x836AE8", VA = "0x836AE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x836B8C", Offset = "0x836B8C", VA = "0x836B8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x836C00", Offset = "0x836C00", VA = "0x836C00")]
	public AudioMixerController()
	{
	}
}
[Token(Token = "0x20000D1")]
public class AutoRestart : MonoBehaviour
{
	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x836C08", Offset = "0x836C08", VA = "0x836C08")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x836C88", Offset = "0x836C88", VA = "0x836C88")]
	public AutoRestart()
	{
	}
}
[Token(Token = "0x20000D2")]
public class AnimSetActive : MonoBehaviour
{
	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x832898", Offset = "0x832898", VA = "0x832898")]
	public void AnimatorWakeUP()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x83291C", Offset = "0x83291C", VA = "0x83291C")]
	public AnimSetActive()
	{
	}
}
[Token(Token = "0x20000D3")]
public class Avatar_TimeCount_AnimStart : MonoBehaviour
{
	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject MapBobj;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x83D138", Offset = "0x83D138", VA = "0x83D138")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x83D248", Offset = "0x83D248", VA = "0x83D248")]
	public Avatar_TimeCount_AnimStart()
	{
	}
}
[Token(Token = "0x20000D4")]
public class AvatarOnOffManager : NetworkBehaviour
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject NetSyncValue;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public string netSyncValue_ObjName;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject SyncVarManager;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public string syncVarManager_ObjName;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject Server_Init;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public string server_Init_ObjName;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Server_Init server_Init;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public GameObject[] OnOffGameObject;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public GameObject TimerRing_obj;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public GameObject playerCollider_obj;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public GameObject HmdCollider_obj;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public GameObject ArmLCollider_obj;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public GameObject ArmRCollider_obj;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int Init_GameStatusFlag_buff;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int Init_GameStatusFlag_buff2;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int Init_GameStatusFlag_buff3;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject parent;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject OnOffavatar_start;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x837408", Offset = "0x837408", VA = "0x837408")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x83752C", Offset = "0x83752C", VA = "0x83752C")]
	[ClientCallback]
	private void Update()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x8378F8", Offset = "0x8378F8", VA = "0x8378F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x837730", Offset = "0x837730", VA = "0x837730")]
	public void ObjectOff()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x837814", Offset = "0x837814", VA = "0x837814")]
	public void ObjectOn()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x837940", Offset = "0x837940", VA = "0x837940")]
	public void NoJoin_AvatarOff()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x837D98", Offset = "0x837D98", VA = "0x837D98")]
	public void NoJoin_AvatarOff_sub()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x837FEC", Offset = "0x837FEC", VA = "0x837FEC")]
	public AvatarOnOffManager()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x83806C", Offset = "0x83806C", VA = "0x83806C")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x838070", Offset = "0x838070", VA = "0x838070", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x838078", Offset = "0x838078", VA = "0x838078", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000D5")]
public class AvatarResizeChecker : NetworkBehaviour
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject Server_Init;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public string Server_Init_ObjName;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Server_Init server_Init;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject NetSyncValue;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public string NetSyncValue_ObjName;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject NetSyncValue2;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public string NetSyncValue2_ObjName;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NetSyncValue2 netSyncValue2;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x668FB4", Offset = "0x668FB4")]
	[SerializeField]
	public GameObject[] OnOffGameObject;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669000", Offset = "0x669000")]
	public GameObject[] OnOffGameObject2;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public GameObject OnSpeaker1;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public GameObject OnSpeaker2;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public GameObject OnSpeaker3;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public GameObject OnSpeaker4;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool setFlag00;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool setFlag01;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kCmdCmd_PlayerReSize;

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x83807C", Offset = "0x83807C", VA = "0x83807C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x838160", Offset = "0x838160", VA = "0x838160")]
	private void Update()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x83831C", Offset = "0x83831C", VA = "0x83831C")]
	public int CheckJoin()
	{
		return default(int);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x838764", Offset = "0x838764", VA = "0x838764")]
	public void ObjectOff()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x838680", Offset = "0x838680", VA = "0x838680")]
	public void ObjectOff2()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x838848", Offset = "0x838848", VA = "0x838848")]
	public void ObjectOn()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x83892C", Offset = "0x83892C", VA = "0x83892C")]
	[Command]
	public void Cmd_PlayerReSize(int playerNum)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x838B68", Offset = "0x838B68", VA = "0x838B68")]
	public AvatarResizeChecker()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x838BF8", Offset = "0x838BF8", VA = "0x838BF8")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x838BFC", Offset = "0x838BFC", VA = "0x838BFC")]
	protected static void InvokeCmdCmd_PlayerReSize(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x838460", Offset = "0x838460", VA = "0x838460")]
	public void CallCmd_PlayerReSize(int playerNum)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x838DDC", Offset = "0x838DDC", VA = "0x838DDC")]
	static AvatarResizeChecker()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x838EFC", Offset = "0x838EFC", VA = "0x838EFC", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x838F04", Offset = "0x838F04", VA = "0x838F04", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000D6")]
public class AvatarResizeManager : NetworkBehaviour
{
	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664F80", Offset = "0x664F80")]
	private sealed class <GameStart>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarResizeManager <>4__this;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000424")]
			[Address(RVA = "0x83AB04", Offset = "0x83AB04", VA = "0x83AB04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000426")]
			[Address(RVA = "0x83AB74", Offset = "0x83AB74", VA = "0x83AB74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x839E68", Offset = "0x839E68", VA = "0x839E68")]
		[DebuggerHidden]
		public <GameStart>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x83A948", Offset = "0x83A948", VA = "0x83A948", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x83A94C", Offset = "0x83A94C", VA = "0x83A94C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x83AB0C", Offset = "0x83AB0C", VA = "0x83AB0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject server_Init_obj;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Server_Init server_Init;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject NetSyncValue_obj;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject NetSyncValue2_obj;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NetSyncValue2 netSyncValue2;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66908C", Offset = "0x66908C")]
	public GameObject[] EnableGameObject_Status00_Player1;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public GameObject[] EnableGameObject_Status00_Player2;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public GameObject[] EnableGameObject_Status00_Player3;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public GameObject[] EnableGameObject_Status00_Player4;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669108", Offset = "0x669108")]
	public GameObject Object_Status01_Player1;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public GameObject Object_Status01_Player1B;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public GameObject Object_Status01_Player2;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public GameObject Object_Status01_Player2B;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public GameObject Object_Status01_Player3;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	public GameObject Object_Status01_Player3B;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	public GameObject Object_Status01_Player4;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	public GameObject Object_Status01_Player4B;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6691C4", Offset = "0x6691C4")]
	[SerializeField]
	public GameObject[] EnableGameObject_Status02_Player1;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	public GameObject[] DisableGameObject_Status02_Player1;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	public GameObject[] EnableGameObject_Status02_Player2;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	public GameObject[] DisableGameObject_Status02_Player2;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	public GameObject[] EnableGameObject_Status03_Player3;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	public GameObject[] DisableGameObject_Status03_Player3;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	public GameObject[] EnableGameObject_Status04_Player4;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	public GameObject[] DisableGameObject_Status04_Player4;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	public GameObject FadeStartObject;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	public GameObject CenterMarkerObj;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int WaitTime;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int WaitTime2;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool setFlag02;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool setFlag03;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	private bool isRunning;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kRpcRpc_FadeStart;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kRpcRpc_CenterMarkerOnOff;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x838F08", Offset = "0x838F08", VA = "0x838F08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x838FC0", Offset = "0x838FC0", VA = "0x838FC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x839C58", Offset = "0x839C58", VA = "0x839C58")]
	public void ReziseCompleteCheck()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x839DF4", Offset = "0x839DF4", VA = "0x839DF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673A88", Offset = "0x673A88")]
	private IEnumerator GameStart()
	{
		return null;
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x839E94", Offset = "0x839E94", VA = "0x839E94")]
	[ClientRpc]
	public void Rpc_FadeStart()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x839EC8", Offset = "0x839EC8", VA = "0x839EC8")]
	[ClientRpc]
	public void Rpc_CenterMarkerOnOff(bool OnOff)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x839120", Offset = "0x839120", VA = "0x839120")]
	public void ObjectOnOff_Status00(int PlayerMyNumber)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x839504", Offset = "0x839504", VA = "0x839504")]
	public void ObjectOnOff_Status01(int PlayerMyNumber)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x839718", Offset = "0x839718", VA = "0x839718")]
	public void ObjectOnOff_Status02(int PlayerMyNumber)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x839F18", Offset = "0x839F18", VA = "0x839F18")]
	public AvatarResizeManager()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x83A048", Offset = "0x83A048", VA = "0x83A048")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x83A04C", Offset = "0x83A04C", VA = "0x83A04C")]
	protected static void InvokeRpcRpc_FadeStart(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x83A208", Offset = "0x83A208", VA = "0x83A208")]
	protected static void InvokeRpcRpc_CenterMarkerOnOff(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x83A3E8", Offset = "0x83A3E8", VA = "0x83A3E8")]
	public void CallRpc_FadeStart()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x83A5B0", Offset = "0x83A5B0", VA = "0x83A5B0")]
	public void CallRpc_CenterMarkerOnOff(bool OnOff)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x83A7A8", Offset = "0x83A7A8", VA = "0x83A7A8")]
	static AvatarResizeManager()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x83A93C", Offset = "0x83A93C", VA = "0x83A93C", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x83A944", Offset = "0x83A944", VA = "0x83A944", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000D8")]
public class AvatarResizeManager_Avatar : MonoBehaviour
{
	[Token(Token = "0x20000D9")]
	public enum HandName
	{
		[Token(Token = "0x4000614")]
		RightHand,
		[Token(Token = "0x4000615")]
		LeftHand
	}

	[Token(Token = "0x20000DA")]
	public enum RayType
	{
		[Token(Token = "0x4000617")]
		RayHit,
		[Token(Token = "0x4000618")]
		RayMiss
	}

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Server_Init;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string Server_Init_ObjName;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Server_Init server_Init;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HandName handName;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private RayType rayType;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public LayerMask mask;

	[Token(Token = "0x400060E")]
	private const string LayerName = "HitRaycast";

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private RaycastHit hit1;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastHit hitHead;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject objname_get;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float maxDistance;

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x83AB7C", Offset = "0x83AB7C", VA = "0x83AB7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x83AC90", Offset = "0x83AC90", VA = "0x83AC90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x83AEC8", Offset = "0x83AEC8", VA = "0x83AEC8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x83AFF0", Offset = "0x83AFF0", VA = "0x83AFF0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x83AC94", Offset = "0x83AC94", VA = "0x83AC94")]
	public void RayTriggerCheck()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x83B110", Offset = "0x83B110", VA = "0x83B110")]
	public AvatarResizeManager_Avatar()
	{
	}
}
[Token(Token = "0x20000DB")]
public class AvatarResizeStatusChanger : MonoBehaviour
{
	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Server_Init;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string Server_Init_ObjName;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Server_Init server_Init;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int status;

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x83B120", Offset = "0x83B120", VA = "0x83B120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x83B1B0", Offset = "0x83B1B0", VA = "0x83B1B0")]
	public AvatarResizeStatusChanger()
	{
	}
}
[Token(Token = "0x20000DC")]
public class AvatarSync_Downboss : MonoBehaviour
{
	[Token(Token = "0x600042F")]
	[Address(RVA = "0x83B1B8", Offset = "0x83B1B8", VA = "0x83B1B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x83B28C", Offset = "0x83B28C", VA = "0x83B28C")]
	public AvatarSync_Downboss()
	{
	}
}
[Token(Token = "0x20000DD")]
public class avatConScale : NetworkBehaviour
{
	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x664F90", Offset = "0x664F90")]
	private sealed class <coroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public avatConScale <>4__this;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600044D")]
			[Address(RVA = "0x8622F4", Offset = "0x8622F4", VA = "0x8622F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600044F")]
			[Address(RVA = "0x862364", Offset = "0x862364", VA = "0x862364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x861124", Offset = "0x861124", VA = "0x861124")]
		[DebuggerHidden]
		public <coroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x862240", Offset = "0x862240", VA = "0x862240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x862244", Offset = "0x862244", VA = "0x862244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x8622FC", Offset = "0x8622FC", VA = "0x8622FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject NetSyncValue;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public string NetSyncValue_ObjName;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject moveObj;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform moveTrm;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 latestMovePos;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float moveRatio;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float latestMoveRatio;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float ratio;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator m_Animator;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform ScaleDummyTrm;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform HeadDumTrm;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform HandLDumTrm;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform HandRDumTrm;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform[] dum;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 initializePos;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float armLength;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SyncVar]
	private bool isCalibrate;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SyncVar]
	private float syncScaleAvatar;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float scaleHMD;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float scaleController;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private VRIK vrik;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float IKPosWeight;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float latestIKPosWeight;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Transform HMDTrm;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Transform controllerLTrm;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Transform controllerRTrm;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform[] tracker;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Transform targetTrm;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 myPos;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Quaternion myRot;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 targetOffset;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float iniHeight;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 previousVec;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float threshold;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 threPos;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float threDis;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float threshold0;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float speedRot;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[SerializeField]
	private float thresholdRot;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float threDisRotY;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float distance;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool isMove;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool isRotate;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	private bool isForward;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
	private bool isCrouch;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float crouchThreshold;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float dotProduct;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float Forward;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float latestForward;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float Turn;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float latestTurn;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Vector3 Move;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float forwardVelocity;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float turnVelocity;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Quaternion latestRotation;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 angularSpeed;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float t1;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float bodyRotMult;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float turnSpeedMlt;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float forwardSpeedMlt;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float crouchSpeedMlt;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private Quaternion latestHMDRotation;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Transform[] dumChild;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kCmdCmdCalibrate;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int kCmdCmdScaleAvatar;

	[Token(Token = "0x17000036")]
	public bool NetworkisCalibrate
	{
		[Token(Token = "0x6000440")]
		[Address(RVA = "0x8619DC", Offset = "0x8619DC", VA = "0x8619DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000441")]
		[Address(RVA = "0x8611DC", Offset = "0x8611DC", VA = "0x8611DC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public float NetworksyncScaleAvatar
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x8619E4", Offset = "0x8619E4", VA = "0x8619E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x86153C", Offset = "0x86153C", VA = "0x86153C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x85EA30", Offset = "0x85EA30", VA = "0x85EA30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x85EC7C", Offset = "0x85EC7C", VA = "0x85EC7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x85F62C", Offset = "0x85F62C", VA = "0x85F62C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x85F630", Offset = "0x85F630", VA = "0x85F630")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x860DDC", Offset = "0x860DDC", VA = "0x860DDC")]
	private void GetTurn()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x860B28", Offset = "0x860B28", VA = "0x860B28")]
	private float GetHMDAngSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x85F5B8", Offset = "0x85F5B8", VA = "0x85F5B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673B5C", Offset = "0x673B5C")]
	private IEnumerator coroutine()
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x861150", Offset = "0x861150", VA = "0x861150")]
	public void CalibrateAvatar()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x861014", Offset = "0x861014", VA = "0x861014")]
	private void UpdateAnimator(Vector3 move)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x861474", Offset = "0x861474", VA = "0x861474")]
	[Command]
	private void CmdCalibrate(bool NewBool)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x86147C", Offset = "0x86147C", VA = "0x86147C")]
	[Command]
	private void CmdScaleAvatar(float scaleX)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x86161C", Offset = "0x86161C", VA = "0x86161C")]
	private void HookScaleAvatar(float NewScale)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x8616DC", Offset = "0x8616DC", VA = "0x8616DC")]
	public avatConScale()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x861844", Offset = "0x861844", VA = "0x861844")]
	static avatConScale()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x8619D8", Offset = "0x8619D8", VA = "0x8619D8")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x8619EC", Offset = "0x8619EC", VA = "0x8619EC")]
	protected static void InvokeCmdCmdCalibrate(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x861BCC", Offset = "0x861BCC", VA = "0x861BCC")]
	protected static void InvokeCmdCmdScaleAvatar(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x861DC4", Offset = "0x861DC4", VA = "0x861DC4")]
	public void CallCmdCalibrate(bool NewBool)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x861244", Offset = "0x861244", VA = "0x861244")]
	public void CallCmdScaleAvatar(float scaleX)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x861FE4", Offset = "0x861FE4", VA = "0x861FE4", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x862168", Offset = "0x862168", VA = "0x862168", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000DF")]
public class CalibrateAvatar : NetworkBehaviour
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject localplayer;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kTargetRpcTargetCalibrateAvatar;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kRpcRpcCalibrateAvatar;

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x83F040", Offset = "0x83F040", VA = "0x83F040")]
	public void GetLocalPlayer()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x83F188", Offset = "0x83F188", VA = "0x83F188")]
	[TargetRpc]
	public void TargetCalibrateAvatar(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x83F200", Offset = "0x83F200", VA = "0x83F200")]
	[ClientRpc]
	public void RpcCalibrateAvatar()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x83F278", Offset = "0x83F278", VA = "0x83F278")]
	public CalibrateAvatar()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x83F2E0", Offset = "0x83F2E0", VA = "0x83F2E0")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x83F2E4", Offset = "0x83F2E4", VA = "0x83F2E4")]
	protected static void InvokeRpcRpcCalibrateAvatar(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x83F4A0", Offset = "0x83F4A0", VA = "0x83F4A0")]
	protected static void InvokeRpcTargetCalibrateAvatar(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x83F684", Offset = "0x83F684", VA = "0x83F684")]
	public void CallRpcCalibrateAvatar()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x83F84C", Offset = "0x83F84C", VA = "0x83F84C")]
	public void CallTargetCalibrateAvatar(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x83FA80", Offset = "0x83FA80", VA = "0x83FA80")]
	static CalibrateAvatar()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x83FC14", Offset = "0x83FC14", VA = "0x83FC14", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x83FC1C", Offset = "0x83FC1C", VA = "0x83FC1C", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000E0")]
public class MoveAvatarChild : MonoBehaviour
{
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject parent;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject TargetPlayerObject;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject TargetRaycastObject;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject TargetAvatarObject;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string TargetObjectName1;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string TargetObjectName2;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string TargetObjectName3;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string TargetObjectName4;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool avatarMove_player1;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool avatarMove_player2;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool avatarMove_player3;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool avatarMove_player4;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string TargetObjectName1B;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string TargetObjectName2B;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string TargetObjectName3B;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TargetObjectName4B;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject Rename_obj;

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x93CF1C", Offset = "0x93CF1C", VA = "0x93CF1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x93CFB4", Offset = "0x93CFB4", VA = "0x93CFB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x93D2D8", Offset = "0x93D2D8", VA = "0x93D2D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x93CFB8", Offset = "0x93CFB8", VA = "0x93CFB8")]
	public void MoveAvatarChild_sub()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x93D930", Offset = "0x93D930", VA = "0x93D930")]
	public void ResetObjectTransform(GameObject playerObj)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x93D2DC", Offset = "0x93D2DC", VA = "0x93D2DC")]
	public void DestroyAvatarChild_sub()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x93DAF0", Offset = "0x93DAF0", VA = "0x93DAF0")]
	public MoveAvatarChild()
	{
	}
}
[Token(Token = "0x20000E1")]
public class MoveHead : NetworkBehaviour
{
	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject server_Init_obj;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Server_Init server_Init;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject objname_get;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject TargetPlayerObject;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool rayMove_player1;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool rayMove_player2;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool rayMove_player3;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool rayMove_player4;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x93DE20", Offset = "0x93DE20", VA = "0x93DE20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x93DE88", Offset = "0x93DE88", VA = "0x93DE88")]
	[ClientCallback]
	private void Update()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x93DEE8", Offset = "0x93DEE8", VA = "0x93DEE8")]
	public void MoveHead_sub()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x93E118", Offset = "0x93E118", VA = "0x93E118")]
	public void ResetObjectTransform(GameObject playerObj)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x93E35C", Offset = "0x93E35C", VA = "0x93E35C")]
	public MoveHead()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x93E3C4", Offset = "0x93E3C4", VA = "0x93E3C4")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x93E3C8", Offset = "0x93E3C8", VA = "0x93E3C8", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x93E3D0", Offset = "0x93E3D0", VA = "0x93E3D0", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000E2")]
public class RCFilterTarget : MonoBehaviour
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6693FC", Offset = "0x6693FC")]
	private float FilterRatio;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 latestPos;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion latestRot;

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x8BC9D8", Offset = "0x8BC9D8", VA = "0x8BC9D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x8BCC2C", Offset = "0x8BCC2C", VA = "0x8BCC2C")]
	public RCFilterTarget()
	{
	}
}
[Token(Token = "0x20000E3")]
public class ShotReaction : NetworkBehaviour
{
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator handReactionAnim;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kCmdCmdShotMotion;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kRpcRpcShotMotion;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xA29C28", Offset = "0xA29C28", VA = "0xA29C28")]
	public void ShotMotion()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xA29CAC", Offset = "0xA29CAC", VA = "0xA29CAC")]
	[Command]
	public void CmdShotMotion()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xA29E98", Offset = "0xA29E98", VA = "0xA29E98")]
	[ClientRpc]
	public void RpcShotMotion()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xA29E9C", Offset = "0xA29E9C", VA = "0xA29E9C")]
	public ShotReaction()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xA29F04", Offset = "0xA29F04", VA = "0xA29F04")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xA29F08", Offset = "0xA29F08", VA = "0xA29F08")]
	protected static void InvokeCmdCmdShotMotion(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xA283B8", Offset = "0xA283B8", VA = "0xA283B8")]
	public void CallCmdShotMotion()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xA2A0CC", Offset = "0xA2A0CC", VA = "0xA2A0CC")]
	protected static void InvokeRpcRpcShotMotion(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xA29CD0", Offset = "0xA29CD0", VA = "0xA29CD0")]
	public void CallRpcShotMotion()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xA2A288", Offset = "0xA2A288", VA = "0xA2A288")]
	static ShotReaction()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xA2A41C", Offset = "0xA2A41C", VA = "0xA2A41C", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xA2A424", Offset = "0xA2A424", VA = "0xA2A424", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000E4")]
public abstract class SingletonMonoBehaviour<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x1700003A")]
	public static T Instance
	{
		[Token(Token = "0x6000479")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600047A")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600047B")]
	protected bool CheckInstance()
	{
		return default(bool);
	}

	[Token(Token = "0x600047C")]
	protected SingletonMonoBehaviour()
	{
	}
}
[Token(Token = "0x20000E5")]
public class TrackingManager : SingletonMonoBehaviour<TrackingManager>
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HMD;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject HandL;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject HandR;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject HMD_PC;

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x857138", Offset = "0x857138", VA = "0x857138")]
	private void Start()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x85713C", Offset = "0x85713C", VA = "0x85713C")]
	public TrackingManager()
	{
	}
}
[Token(Token = "0x20000E6")]
public class TrackingTransform : NetworkBehaviour
{
	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform HMD;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform HandL;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform HandR;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ObjectName objectName;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int playerNo;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x8571DC", Offset = "0x8571DC", VA = "0x8571DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x85774C", Offset = "0x85774C", VA = "0x85774C")]
	public TrackingTransform()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x8577B4", Offset = "0x8577B4", VA = "0x8577B4")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x8577B8", Offset = "0x8577B8", VA = "0x8577B8", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x8577C0", Offset = "0x8577C0", VA = "0x8577C0", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000E7")]
public class TwistController : MonoBehaviour
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform child;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6694A0", Offset = "0x6694A0")]
	private float twistRatio;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float diffRot;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float latestRot;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float count;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 myAngle;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x859414", Offset = "0x859414", VA = "0x859414")]
	private void Update()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x859560", Offset = "0x859560", VA = "0x859560")]
	public TwistController()
	{
	}
}
[Token(Token = "0x20000E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x664FA0", Offset = "0x664FA0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x664FA0", Offset = "0x664FA0")]
public class AvatarController : MonoBehaviour
{
	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform T_LookAt;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 T_LookAtPos;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _TurnSpeed;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject P_Damage;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshAgent agent;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ThirdPersonCharacter character;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _Crouch;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float chr_Turn;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float chr_Forward;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator chr_Animator;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool chr_rotat;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject targetObj;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject T_LockAtObj;

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x836CA4", Offset = "0x836CA4", VA = "0x836CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x836D7C", Offset = "0x836D7C", VA = "0x836D7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x8372D8", Offset = "0x8372D8", VA = "0x8372D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x8373F8", Offset = "0x8373F8", VA = "0x8373F8")]
	public AvatarController()
	{
	}
}
[Token(Token = "0x20000E9")]
public class AnimetionStateManager : StateMachineBehaviour
{
	[Token(Token = "0x20000EA")]
	public enum AnimeStateName
	{
		[Token(Token = "0x40006A7")]
		SealdEnd,
		[Token(Token = "0x40006A8")]
		SealdVanish,
		[Token(Token = "0x40006A9")]
		CurseEnd,
		[Token(Token = "0x40006AA")]
		addValue
	}

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimeStateName stateName;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetSyncValue syncValue;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x836910", Offset = "0x836910", VA = "0x836910")]
	public void OnStateEnter()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x836A74", Offset = "0x836A74", VA = "0x836A74")]
	public AnimetionStateManager()
	{
	}
}
[Token(Token = "0x20000EB")]
public class Battle_Countdown : MonoBehaviour
{
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66602C", Offset = "0x66602C")]
	private sealed class <TimeUP>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Battle_Countdown <>4__this;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000492")]
			[Address(RVA = "0x83E464", Offset = "0x83E464", VA = "0x83E464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000494")]
			[Address(RVA = "0x83E4D4", Offset = "0x83E4D4", VA = "0x83E4D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x83E2D8", Offset = "0x83E2D8", VA = "0x83E2D8")]
		[DebuggerHidden]
		public <TimeUP>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x83E30C", Offset = "0x83E30C", VA = "0x83E30C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x83E310", Offset = "0x83E310", VA = "0x83E310", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x83E46C", Offset = "0x83E46C", VA = "0x83E46C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Battle_CountDownStart;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float BattleTime;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isRunning;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int nowState;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject syncVarManager_obj;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject debugBattleEnd_obj;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x83E170", Offset = "0x83E170", VA = "0x83E170")]
	private void Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x83E264", Offset = "0x83E264", VA = "0x83E264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673C80", Offset = "0x673C80")]
	private IEnumerator TimeUP()
	{
		return null;
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x83E304", Offset = "0x83E304", VA = "0x83E304")]
	public Battle_Countdown()
	{
	}
}
[Token(Token = "0x20000ED")]
public class BattleSequenceChanger : MonoBehaviour
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669540", Offset = "0x669540")]
	public int ChangeState_Battle;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669578", Offset = "0x669578")]
	public int ChangeState_Scene;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x83D3E8", Offset = "0x83D3E8", VA = "0x83D3E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x83D43C", Offset = "0x83D43C", VA = "0x83D43C")]
	public BattleSequenceChanger()
	{
	}
}
[Token(Token = "0x20000EE")]
public class BattleSequenceManager : NetworkBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int nowState;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int lastState;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6695D0", Offset = "0x6695D0")]
	public GameObject[] EnableGameObjectStart2;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public GameObject[] EnableGameObjectStart2_Player;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public GameObject[] EnableGameObjectEnd2;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66963C", Offset = "0x66963C")]
	public GameObject[] EnableGameObjectStart3;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public GameObject[] EnableGameObjectStart3_Player;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public GameObject[] EnableGameObjectEnd3;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6696A8", Offset = "0x6696A8")]
	[SerializeField]
	public GameObject[] EnableGameObjectStart4;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public GameObject[] DisableGameObjectStart4;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public GameObject[] EnableGameObjectEnd4;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669714", Offset = "0x669714")]
	public GameObject[] EnableGameObjectStart5;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669760", Offset = "0x669760")]
	[SerializeField]
	public GameObject[] EnableGameObjectStart6;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public GameObject[] DisableGameObjectStart6;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private ChangeTargetManager2 changeTargetManager2;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool setFlag;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool setFlag2;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool setFlag3;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	private bool setFlag4;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool setFlag5;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x83D444", Offset = "0x83D444", VA = "0x83D444")]
	private void Update()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x83D448", Offset = "0x83D448", VA = "0x83D448")]
	public void ObjectOnOff_Check()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x83D910", Offset = "0x83D910", VA = "0x83D910")]
	public BattleSequenceManager()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x83DA50", Offset = "0x83DA50", VA = "0x83DA50")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x83DA54", Offset = "0x83DA54", VA = "0x83DA54", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x83DA5C", Offset = "0x83DA5C", VA = "0x83DA5C", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000EF")]
public class ChangeTargetManager2 : MonoBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TargetObject;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rayCasterPlayer1;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rayCasterPlayer2;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rayCasterPlayer3;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rayCasterPlayer4;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool moveCheck;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x8408D8", Offset = "0x8408D8", VA = "0x8408D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x840AEC", Offset = "0x840AEC", VA = "0x840AEC")]
	public void ResetObjectTransform(GameObject playerObj)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x840CF4", Offset = "0x840CF4", VA = "0x840CF4")]
	public ChangeTargetManager2()
	{
	}
}
[Token(Token = "0x20000F0")]
public class CurseAnimeManager : MonoBehaviour
{
	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NetSyncValue_SA netSyncValue;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x9AC080", Offset = "0x9AC080", VA = "0x9AC080")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x9AC0D8", Offset = "0x9AC0D8", VA = "0x9AC0D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x9AC1E8", Offset = "0x9AC1E8", VA = "0x9AC1E8")]
	public CurseAnimeManager()
	{
	}
}
[Token(Token = "0x20000F1")]
public class EndingController : MonoBehaviour
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public GameObject[] EnableGameObject_BadEnd;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public GameObject[] EnableGameObject_GoodEnd;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public GameObject[] EnableGameObject_ExcellentEnd;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public float Check_FastClearTime;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool FlagEndingSet;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x9C12FC", Offset = "0x9C12FC", VA = "0x9C12FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x9C13E0", Offset = "0x9C13E0", VA = "0x9C13E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x9C1300", Offset = "0x9C1300", VA = "0x9C1300")]
	public void SelectEnding()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x9C142C", Offset = "0x9C142C", VA = "0x9C142C")]
	public void SetEnding()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x9C167C", Offset = "0x9C167C", VA = "0x9C167C")]
	public EndingController()
	{
	}
}
[Token(Token = "0x20000F2")]
public class LoadBattleScene : MonoBehaviour
{
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66603C", Offset = "0x66603C")]
	private sealed class <AddScene>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadBattleScene <>4__this;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Scene <scene>5__2;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004AF")]
			[Address(RVA = "0x8213D8", Offset = "0x8213D8", VA = "0x8213D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B1")]
			[Address(RVA = "0x821448", Offset = "0x821448", VA = "0x821448", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x8210B4", Offset = "0x8210B4", VA = "0x8210B4")]
		[DebuggerHidden]
		public <AddScene>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x821314", Offset = "0x821314", VA = "0x821314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x821318", Offset = "0x821318", VA = "0x821318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x8213E0", Offset = "0x8213E0", VA = "0x8213E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject netSyncValue_obj;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string LoadSceneName;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] EnableGameObject;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x821014", Offset = "0x821014", VA = "0x821014")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x821040", Offset = "0x821040", VA = "0x821040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673D34", Offset = "0x673D34")]
	private IEnumerator AddScene()
	{
		return null;
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x8210E0", Offset = "0x8210E0", VA = "0x8210E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x8212A4", Offset = "0x8212A4", VA = "0x8212A4")]
	public LoadBattleScene()
	{
	}
}
[Token(Token = "0x20000F4")]
public class PlayerCheck : MonoBehaviour
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject P_Damage;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x8B7DAC", Offset = "0x8B7DAC", VA = "0x8B7DAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x8B7ED0", Offset = "0x8B7ED0", VA = "0x8B7ED0")]
	public PlayerCheck()
	{
	}
}
[Token(Token = "0x20000F5")]
public class SceneSyncChanger : MonoBehaviour
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject[] EnableGameObject;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xA248FC", Offset = "0xA248FC", VA = "0xA248FC")]
	public void ObjectOn()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xA24900", Offset = "0xA24900", VA = "0xA24900")]
	public void ObjectOn_Sub()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xA249E4", Offset = "0xA249E4", VA = "0xA249E4")]
	public SceneSyncChanger()
	{
	}
}
[Token(Token = "0x20000F6")]
public class SceneSyncChanger_Bridge : MonoBehaviour
{
	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneSyncChanger sceneSyncChanger;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xA24A44", Offset = "0xA24A44", VA = "0xA24A44")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xA24A70", Offset = "0xA24A70", VA = "0xA24A70")]
	public SceneSyncChanger_Bridge()
	{
	}
}
[Token(Token = "0x20000F7")]
public class SealAreaAnimator : MonoBehaviour
{
	[Token(Token = "0x20000F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66604C", Offset = "0x66604C")]
	private sealed class <ReactiveWait>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SealAreaAnimator <>4__this;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004C1")]
			[Address(RVA = "0xA25208", Offset = "0xA25208", VA = "0xA25208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004C3")]
			[Address(RVA = "0xA25278", Offset = "0xA25278", VA = "0xA25278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xA24FEC", Offset = "0xA24FEC", VA = "0xA24FEC")]
		[DebuggerHidden]
		public <ReactiveWait>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xA25028", Offset = "0xA25028", VA = "0xA25028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xA2502C", Offset = "0xA2502C", VA = "0xA2502C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xA25210", Offset = "0xA25210", VA = "0xA25210", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SyncVarManager_ObjName;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Server_Init_ObjName;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Server_Init_SA server_Init;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject AllAreaDamage_obj;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ReactiveTime;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isRunning;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xA24B98", Offset = "0xA24B98", VA = "0xA24B98")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xA24B9C", Offset = "0xA24B9C", VA = "0xA24B9C")]
	public void AnimeTriggerChangeSub()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xA24E88", Offset = "0xA24E88", VA = "0xA24E88")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xA24F78", Offset = "0xA24F78", VA = "0xA24F78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673DE8", Offset = "0x673DE8")]
	private IEnumerator ReactiveWait()
	{
		return null;
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xA25018", Offset = "0xA25018", VA = "0xA25018")]
	public SealAreaAnimator()
	{
	}
}
[Token(Token = "0x20000F9")]
public class SealAreaAnimator_Sub : MonoBehaviour
{
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Server_Init_SA server_Init;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject animation_obj;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool setFlag;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xA25280", Offset = "0xA25280", VA = "0xA25280")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xA25308", Offset = "0xA25308", VA = "0xA25308")]
	public SealAreaAnimator_Sub()
	{
	}
}
[Token(Token = "0x20000FA")]
public class SealAreaController : MonoBehaviour
{
	[Token(Token = "0x20000FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66605C", Offset = "0x66605C")]
	private sealed class <SealAreaDestroy>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SealAreaController <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0xA269D8", Offset = "0xA269D8", VA = "0xA269D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0xA26A48", Offset = "0xA26A48", VA = "0xA26A48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xA26694", Offset = "0xA26694", VA = "0xA26694")]
		[DebuggerHidden]
		public <SealAreaDestroy>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xA26770", Offset = "0xA26770", VA = "0xA26770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xA26774", Offset = "0xA26774", VA = "0xA26774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xA269E0", Offset = "0xA269E0", VA = "0xA269E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab_Curse;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Prefab_Seal;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Prefab_Curse_Boss;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Prefab_Seal_Boss;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SpawnPosition01;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject SpawnPosition02;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject SpawnPosition03;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject SpawnPosition04;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject SpawnPosition01B;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject SpawnPosition02B;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject SpawnPosition03B;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject SpawnPosition04B;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject SpawnPosition01C;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject SpawnPosition02C;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject SpawnPosition03C;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject SpawnPosition01D;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject SpawnPosition01E;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool flag_spawn;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject TargetObject;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject syncVarManager_obj;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject netSyncValue_obj;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private NetSyncValue_SA netSyncValue;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int SealCount_Max_Tutorial;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int SealCount_Max_Boss;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int[] Level_SealCount_Max;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int[] Level_SealCount_Max_2nd;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int[] int_buff;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool readComplete;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int SealCount_Max_buff;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int SealCount_buff;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool flag_Destroy;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float SealAreaDestroyTime;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool isRunning;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int state_buff;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject TargetObject_Enemy;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xA25310", Offset = "0xA25310", VA = "0xA25310")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xA253A8", Offset = "0xA253A8", VA = "0xA253A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xA253AC", Offset = "0xA253AC", VA = "0xA253AC")]
	public void SealStatesSelector()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xA255E4", Offset = "0xA255E4", VA = "0xA255E4")]
	public void SealAreaSpawner(int states)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xA25654", Offset = "0xA25654", VA = "0xA25654")]
	public void SealAreaSpawner_Sub(int states)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xA25628", Offset = "0xA25628", VA = "0xA25628")]
	public void SealAreaDestroyer()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xA26620", Offset = "0xA26620", VA = "0xA26620")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673E9C", Offset = "0x673E9C")]
	private IEnumerator SealAreaDestroy()
	{
		return null;
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xA266C0", Offset = "0xA266C0", VA = "0xA266C0")]
	public SealAreaController()
	{
	}
}
[Token(Token = "0x20000FC")]
public class SealAreaManager_Server : MonoBehaviour
{
	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Server_Init_SA server_Init;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NetSyncValue_SA netSyncValue;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sealTime_buff;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] Level_sealTime;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float[] Level_sealTime2;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] Level_sealTime3;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] Level_sealTime4;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float startTime;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float intervalTime;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float intervalTime_buff;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool intervalFlag;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int SealCount_Max_Tutorial;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int SealCount_Max_Boss;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int SealCount_Max_buff;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int[] Level_SealCount_Max;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int[] Level_SealCount_Max_2nd;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int[] int_buff;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool readComplete;

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xA26A50", Offset = "0xA26A50", VA = "0xA26A50")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xA26A60", Offset = "0xA26A60", VA = "0xA26A60")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xA26AB4", Offset = "0xA26AB4", VA = "0xA26AB4")]
	public void StartTimeCount()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xA26B2C", Offset = "0xA26B2C", VA = "0xA26B2C")]
	public void SealTimeCount()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xA26BB8", Offset = "0xA26BB8", VA = "0xA26BB8")]
	public void IntervalTimeCount()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xA26C14", Offset = "0xA26C14", VA = "0xA26C14")]
	public void AnimeTriggerChangeSub()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xA27008", Offset = "0xA27008", VA = "0xA27008")]
	public SealAreaManager_Server()
	{
	}
}
[Token(Token = "0x20000FD")]
public class Billboard : MonoBehaviour
{
	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x83E4DC", Offset = "0x83E4DC", VA = "0x83E4DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x83E59C", Offset = "0x83E59C", VA = "0x83E59C")]
	public Billboard()
	{
	}
}
[Token(Token = "0x20000FE")]
public class CharaMove : MonoBehaviour
{
	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_WalkSpeed;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_RotateSpeed;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x840CFC", Offset = "0x840CFC", VA = "0x840CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x840E14", Offset = "0x840E14", VA = "0x840E14")]
	public CharaMove()
	{
	}
}
[Token(Token = "0x20000FF")]
public class ClientController : MonoBehaviour
{
	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NetSyncValue_SA netSyncValue;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NetSyncValue2_SA netSyncValue2;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject canvasHMD_Main_obj;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject canvasHMD_Wait_obj;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject controller_obj;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject controller_obj2;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject controllerPointer_obj;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int stateBuff;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int flgBuff;

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x845714", Offset = "0x845714", VA = "0x845714")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x845AA4", Offset = "0x845AA4", VA = "0x845AA4")]
	public ClientController()
	{
	}
}
[Token(Token = "0x2000100")]
public class CmdManager : NetworkBehaviour
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject SyncVarManager;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string SyncVarManager_ObjName;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject NetSyncValue;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string NetSyncValue_ObjName;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject NetSyncValue2;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string NetSyncValue2_ObjName;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NetSyncValue2 netSyncValue2;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject Server_Init;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string Server_Init_ObjName;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Server_Init server_Init;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float HMD;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float HMD_buff;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public byte LTouch;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public byte LTouch_buff;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public byte RTouch;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	public byte RTouch_buff;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kCmdCmd_PlayerDeadFlagChange;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kCmdCmd_PlayerStateChange;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int kCmdCmd_SetBatteryLevel;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int kCmdCmd_TrackingLost;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int kCmdCmd_TrackingAcquiered;

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x845AB8", Offset = "0x845AB8", VA = "0x845AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x845BD4", Offset = "0x845BD4", VA = "0x845BD4")]
	[Command]
	public void Cmd_PlayerDeadFlagChange(int PlayerNumber)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x845CAC", Offset = "0x845CAC", VA = "0x845CAC")]
	[Command]
	public void Cmd_PlayerStateChange(int PlayerNumber, int state)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x845D88", Offset = "0x845D88", VA = "0x845D88")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x845DC0", Offset = "0x845DC0", VA = "0x845DC0")]
	public void CheckBattery()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x8461F8", Offset = "0x8461F8", VA = "0x8461F8")]
	[Command]
	private void Cmd_SetBatteryLevel(int playerNo, float HMD, byte LTouch, byte RTouch)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x846450", Offset = "0x846450", VA = "0x846450")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x84651C", Offset = "0x84651C", VA = "0x84651C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x8465E8", Offset = "0x8465E8", VA = "0x8465E8")]
	private void SendTrackingLost()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x846854", Offset = "0x846854", VA = "0x846854")]
	private void SendTrackingAcquired()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x846AC0", Offset = "0x846AC0", VA = "0x846AC0")]
	[Command]
	private void Cmd_TrackingLost(int playerNo)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x846B3C", Offset = "0x846B3C", VA = "0x846B3C")]
	[Command]
	private void Cmd_TrackingAcquiered(int playerNo)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x846BB8", Offset = "0x846BB8", VA = "0x846BB8")]
	public CmdManager()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x846C20", Offset = "0x846C20", VA = "0x846C20")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x846C24", Offset = "0x846C24", VA = "0x846C24")]
	protected static void InvokeCmdCmd_PlayerDeadFlagChange(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x846E04", Offset = "0x846E04", VA = "0x846E04")]
	protected static void InvokeCmdCmd_PlayerStateChange(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x847020", Offset = "0x847020", VA = "0x847020")]
	protected static void InvokeCmdCmd_SetBatteryLevel(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x8472AC", Offset = "0x8472AC", VA = "0x8472AC")]
	protected static void InvokeCmdCmd_TrackingLost(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x84748C", Offset = "0x84748C", VA = "0x84748C")]
	protected static void InvokeCmdCmd_TrackingAcquiered(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x84766C", Offset = "0x84766C", VA = "0x84766C")]
	public void CallCmd_PlayerDeadFlagChange(int PlayerNumber)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x84788C", Offset = "0x84788C", VA = "0x84788C")]
	public void CallCmd_PlayerStateChange(int PlayerNumber, int state)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x845F28", Offset = "0x845F28", VA = "0x845F28")]
	public void CallCmd_SetBatteryLevel(int playerNo, float HMD, byte LTouch, byte RTouch)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x846634", Offset = "0x846634", VA = "0x846634")]
	public void CallCmd_TrackingLost(int playerNo)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x8468A0", Offset = "0x8468A0", VA = "0x8468A0")]
	public void CallCmd_TrackingAcquiered(int playerNo)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x847AEC", Offset = "0x847AEC", VA = "0x847AEC")]
	static CmdManager()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x847DC4", Offset = "0x847DC4", VA = "0x847DC4", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x847DCC", Offset = "0x847DCC", VA = "0x847DCC", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000101")]
public class Debug_ClientPlay : MonoBehaviour
{
	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clientFlag;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x9AFD50", Offset = "0x9AFD50", VA = "0x9AFD50")]
	public Debug_ClientPlay()
	{
	}
}
[Token(Token = "0x2000102")]
public class OVRCameraDebugMove : MonoBehaviour
{
	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform cameraRig;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xFD8CD0", Offset = "0xFD8CD0", VA = "0xFD8CD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xFD8CDC", Offset = "0xFD8CDC", VA = "0xFD8CDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xFD8FA8", Offset = "0xFD8FA8", VA = "0xFD8FA8")]
	public OVRCameraDebugMove()
	{
	}
}
[Token(Token = "0x2000103")]
public class RuntimeLogger
{
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly StringBuilder builder;

	[Token(Token = "0x17000043")]
	private static string SavePath
	{
		[Token(Token = "0x6000501")]
		[Address(RVA = "0xA23B38", Offset = "0xA23B38", VA = "0xA23B38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xA23834", Offset = "0xA23834", VA = "0xA23834")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x673FA0", Offset = "0x673FA0")]
	private static void Init()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xA23BB8", Offset = "0xA23BB8", VA = "0xA23BB8")]
	private static void OnLogReceived(string condition, string trace, LogType logType)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xA23D68", Offset = "0xA23D68", VA = "0xA23D68")]
	public RuntimeLogger()
	{
	}
}
[Token(Token = "0x2000104")]
public class DebugLogOnOff : MonoBehaviour
{
	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool logOnOff_PC;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool logOnOff_HMD;

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x9AC1F0", Offset = "0x9AC1F0", VA = "0x9AC1F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x9AC364", Offset = "0x9AC364", VA = "0x9AC364")]
	public DebugLogOnOff()
	{
	}
}
[Token(Token = "0x2000105")]
public class DestroyActivity : MonoBehaviour
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float life;

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x9B2F48", Offset = "0x9B2F48", VA = "0x9B2F48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x9B2FF8", Offset = "0x9B2FF8", VA = "0x9B2FF8")]
	public DestroyActivity()
	{
	}
}
[Token(Token = "0x2000106")]
public class DifficultManager : NetworkBehaviour
{
	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject server_Init_obj;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Server_Init server_Init;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6698FC", Offset = "0x6698FC")]
	[SyncVar]
	public int Level_SealCount_Max_1;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SyncVar]
	public int Level_SealCount_Max_2;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public int Level_SealCount_Max_3;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SyncVar]
	public int Level_SealCount_Max_4;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	public int Level_SealCount_Max_2nd_1;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SyncVar]
	public int Level_SealCount_Max_2nd_2;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	public int Level_SealCount_Max_2nd_3;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SyncVar]
	public int Level_SealCount_Max_2nd_4;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6699B8", Offset = "0x6699B8")]
	[SyncVar]
	public float Level_sealTime_1;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SyncVar]
	public float Level_sealTime_2;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar]
	public float Level_sealTime_3;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SyncVar]
	public float Level_sealTime_4;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669A34", Offset = "0x669A34")]
	public int Level_MaxHP_Player;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669A6C", Offset = "0x669A6C")]
	[SyncVar]
	public int ReadComplete;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool setFlag;

	[Token(Token = "0x17000044")]
	public int NetworkLevel_SealCount_Max_1
	{
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x9B3FC0", Offset = "0x9B3FC0", VA = "0x9B3FC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x9B3900", Offset = "0x9B3900", VA = "0x9B3900")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public int NetworkLevel_SealCount_Max_2
	{
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x9B3FC8", Offset = "0x9B3FC8", VA = "0x9B3FC8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x9B3968", Offset = "0x9B3968", VA = "0x9B3968")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public int NetworkLevel_SealCount_Max_3
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x9B3FD0", Offset = "0x9B3FD0", VA = "0x9B3FD0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x9B39D0", Offset = "0x9B39D0", VA = "0x9B39D0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public int NetworkLevel_SealCount_Max_4
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x9B3FD8", Offset = "0x9B3FD8", VA = "0x9B3FD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x9B3A38", Offset = "0x9B3A38", VA = "0x9B3A38")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public int NetworkLevel_SealCount_Max_2nd_1
	{
		[Token(Token = "0x6000519")]
		[Address(RVA = "0x9B3FE0", Offset = "0x9B3FE0", VA = "0x9B3FE0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600051A")]
		[Address(RVA = "0x9B3AA0", Offset = "0x9B3AA0", VA = "0x9B3AA0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public int NetworkLevel_SealCount_Max_2nd_2
	{
		[Token(Token = "0x600051B")]
		[Address(RVA = "0x9B3FE8", Offset = "0x9B3FE8", VA = "0x9B3FE8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600051C")]
		[Address(RVA = "0x9B3B08", Offset = "0x9B3B08", VA = "0x9B3B08")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public int NetworkLevel_SealCount_Max_2nd_3
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0x9B3FF0", Offset = "0x9B3FF0", VA = "0x9B3FF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x9B3B70", Offset = "0x9B3B70", VA = "0x9B3B70")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public int NetworkLevel_SealCount_Max_2nd_4
	{
		[Token(Token = "0x600051F")]
		[Address(RVA = "0x9B3FF8", Offset = "0x9B3FF8", VA = "0x9B3FF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000520")]
		[Address(RVA = "0x9B3BD8", Offset = "0x9B3BD8", VA = "0x9B3BD8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public float NetworkLevel_sealTime_1
	{
		[Token(Token = "0x6000521")]
		[Address(RVA = "0x9B4000", Offset = "0x9B4000", VA = "0x9B4000")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000522")]
		[Address(RVA = "0x9B3C40", Offset = "0x9B3C40", VA = "0x9B3C40")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public float NetworkLevel_sealTime_2
	{
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x9B4008", Offset = "0x9B4008", VA = "0x9B4008")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x9B3CA8", Offset = "0x9B3CA8", VA = "0x9B3CA8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public float NetworkLevel_sealTime_3
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x9B4010", Offset = "0x9B4010", VA = "0x9B4010")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x9B3D10", Offset = "0x9B3D10", VA = "0x9B3D10")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float NetworkLevel_sealTime_4
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x9B4018", Offset = "0x9B4018", VA = "0x9B4018")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000528")]
		[Address(RVA = "0x9B3D78", Offset = "0x9B3D78", VA = "0x9B3D78")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public int NetworkReadComplete
	{
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x9B4020", Offset = "0x9B4020", VA = "0x9B4020")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x9B3190", Offset = "0x9B3190", VA = "0x9B3190")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x9B3008", Offset = "0x9B3008", VA = "0x9B3008")]
	private void Start()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x9B3070", Offset = "0x9B3070", VA = "0x9B3070")]
	[ServerCallback]
	private void Update()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x9B31F8", Offset = "0x9B31F8", VA = "0x9B31F8")]
	public void ReadDifficultValue_Easy()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x9B3450", Offset = "0x9B3450", VA = "0x9B3450")]
	public void ReadDifficultValue_Normal()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x9B36A8", Offset = "0x9B36A8", VA = "0x9B36A8")]
	public void ReadDifficultValue_Hard()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x9B3DE0", Offset = "0x9B3DE0", VA = "0x9B3DE0")]
	public void ReloadRequest_DifficultValue()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x9B3F34", Offset = "0x9B3F34", VA = "0x9B3F34")]
	public DifficultManager()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x9B3FBC", Offset = "0x9B3FBC", VA = "0x9B3FBC")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x9B4028", Offset = "0x9B4028", VA = "0x9B4028", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x9B47E4", Offset = "0x9B47E4", VA = "0x9B47E4", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000107")]
public class DifficultManager2 : NetworkBehaviour
{
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject server_Init_obj;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Server_Init server_Init;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SyncVar]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669AB8", Offset = "0x669AB8")]
	public int Level_MaxHP_A1_1;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SyncVar]
	public int Level_MaxHP_A1_2;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public int Level_MaxHP_A1_3;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SyncVar]
	public int Level_MaxHP_A1_4;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	public int Level_MaxHP_A2_1;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SyncVar]
	public int Level_MaxHP_A2_2;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	public int Level_MaxHP_A2_3;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SyncVar]
	public int Level_MaxHP_A2_4;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SyncVar]
	public int Level_MaxHP_B_1;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SyncVar]
	public int Level_MaxHP_B_2;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar]
	public int Level_MaxHP_B_3;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SyncVar]
	public int Level_MaxHP_B_4;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SyncVar]
	public int Level_MaxHP_Boss_1;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SyncVar]
	public int Level_MaxHP_Boss_2;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SyncVar]
	public int Level_MaxHP_Boss_3;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SyncVar]
	public int Level_MaxHP_Boss_4;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669BF4", Offset = "0x669BF4")]
	[SyncVar]
	public float Level_SpawnInterval_A1_1;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SyncVar]
	public float Level_SpawnInterval_A1_2;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SyncVar]
	public float Level_SpawnInterval_A1_3;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SyncVar]
	public float Level_SpawnInterval_A1_4;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SyncVar]
	public float Level_SpawnInterval_A2_1;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SyncVar]
	public float Level_SpawnInterval_A2_2;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SyncVar]
	public float Level_SpawnInterval_A2_3;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SyncVar]
	public float Level_SpawnInterval_A2_4;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SyncVar]
	public float Level_SpawnInterval_B_1;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SyncVar]
	public float Level_SpawnInterval_B_2;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SyncVar]
	public float Level_SpawnInterval_B_3;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SyncVar]
	public float Level_SpawnInterval_B_4;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SyncVar]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x669CF0", Offset = "0x669CF0")]
	public int ReadComplete2;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool setFlag2;

	[Token(Token = "0x17000051")]
	public int NetworkLevel_MaxHP_A1_1
	{
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x9B69D8", Offset = "0x9B69D8", VA = "0x9B69D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x9B5DCC", Offset = "0x9B5DCC", VA = "0x9B5DCC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public int NetworkLevel_MaxHP_A1_2
	{
		[Token(Token = "0x6000536")]
		[Address(RVA = "0x9B69E0", Offset = "0x9B69E0", VA = "0x9B69E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000537")]
		[Address(RVA = "0x9B5E34", Offset = "0x9B5E34", VA = "0x9B5E34")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public int NetworkLevel_MaxHP_A1_3
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x9B69E8", Offset = "0x9B69E8", VA = "0x9B69E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x9B5E9C", Offset = "0x9B5E9C", VA = "0x9B5E9C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public int NetworkLevel_MaxHP_A1_4
	{
		[Token(Token = "0x600053A")]
		[Address(RVA = "0x9B69F0", Offset = "0x9B69F0", VA = "0x9B69F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x9B5F04", Offset = "0x9B5F04", VA = "0x9B5F04")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public int NetworkLevel_MaxHP_A2_1
	{
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x9B69F8", Offset = "0x9B69F8", VA = "0x9B69F8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x9B5F6C", Offset = "0x9B5F6C", VA = "0x9B5F6C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public int NetworkLevel_MaxHP_A2_2
	{
		[Token(Token = "0x600053E")]
		[Address(RVA = "0x9B6A00", Offset = "0x9B6A00", VA = "0x9B6A00")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x9B5FD4", Offset = "0x9B5FD4", VA = "0x9B5FD4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public int NetworkLevel_MaxHP_A2_3
	{
		[Token(Token = "0x6000540")]
		[Address(RVA = "0x9B6A08", Offset = "0x9B6A08", VA = "0x9B6A08")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000541")]
		[Address(RVA = "0x9B603C", Offset = "0x9B603C", VA = "0x9B603C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public int NetworkLevel_MaxHP_A2_4
	{
		[Token(Token = "0x6000542")]
		[Address(RVA = "0x9B6A10", Offset = "0x9B6A10", VA = "0x9B6A10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x9B60A4", Offset = "0x9B60A4", VA = "0x9B60A4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public int NetworkLevel_MaxHP_B_1
	{
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x9B6A18", Offset = "0x9B6A18", VA = "0x9B6A18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x9B610C", Offset = "0x9B610C", VA = "0x9B610C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public int NetworkLevel_MaxHP_B_2
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0x9B6A20", Offset = "0x9B6A20", VA = "0x9B6A20")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x9B6174", Offset = "0x9B6174", VA = "0x9B6174")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public int NetworkLevel_MaxHP_B_3
	{
		[Token(Token = "0x6000548")]
		[Address(RVA = "0x9B6A28", Offset = "0x9B6A28", VA = "0x9B6A28")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000549")]
		[Address(RVA = "0x9B61DC", Offset = "0x9B61DC", VA = "0x9B61DC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public int NetworkLevel_MaxHP_B_4
	{
		[Token(Token = "0x600054A")]
		[Address(RVA = "0x9B6A30", Offset = "0x9B6A30", VA = "0x9B6A30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x9B6244", Offset = "0x9B6244", VA = "0x9B6244")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public int NetworkLevel_MaxHP_Boss_1
	{
		[Token(Token = "0x600054C")]
		[Address(RVA = "0x9B6A38", Offset = "0x9B6A38", VA = "0x9B6A38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x9B62AC", Offset = "0x9B62AC", VA = "0x9B62AC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public int NetworkLevel_MaxHP_Boss_2
	{
		[Token(Token = "0x600054E")]
		[Address(RVA = "0x9B6A40", Offset = "0x9B6A40", VA = "0x9B6A40")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600054F")]
		[Address(RVA = "0x9B6314", Offset = "0x9B6314", VA = "0x9B6314")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public int NetworkLevel_MaxHP_Boss_3
	{
		[Token(Token = "0x6000550")]
		[Address(RVA = "0x9B6A48", Offset = "0x9B6A48", VA = "0x9B6A48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000551")]
		[Address(RVA = "0x9B637C", Offset = "0x9B637C", VA = "0x9B637C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public int NetworkLevel_MaxHP_Boss_4
	{
		[Token(Token = "0x6000552")]
		[Address(RVA = "0x9B6A50", Offset = "0x9B6A50", VA = "0x9B6A50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000553")]
		[Address(RVA = "0x9B63E4", Offset = "0x9B63E4", VA = "0x9B63E4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public float NetworkLevel_SpawnInterval_A1_1
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x9B6A58", Offset = "0x9B6A58", VA = "0x9B6A58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000555")]
		[Address(RVA = "0x9B644C", Offset = "0x9B644C", VA = "0x9B644C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public float NetworkLevel_SpawnInterval_A1_2
	{
		[Token(Token = "0x6000556")]
		[Address(RVA = "0x9B6A60", Offset = "0x9B6A60", VA = "0x9B6A60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000557")]
		[Address(RVA = "0x9B64B4", Offset = "0x9B64B4", VA = "0x9B64B4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public float NetworkLevel_SpawnInterval_A1_3
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x9B6A68", Offset = "0x9B6A68", VA = "0x9B6A68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000559")]
		[Address(RVA = "0x9B651C", Offset = "0x9B651C", VA = "0x9B651C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public float NetworkLevel_SpawnInterval_A1_4
	{
		[Token(Token = "0x600055A")]
		[Address(RVA = "0x9B6A70", Offset = "0x9B6A70", VA = "0x9B6A70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x9B6584", Offset = "0x9B6584", VA = "0x9B6584")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public float NetworkLevel_SpawnInterval_A2_1
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x9B6A78", Offset = "0x9B6A78", VA = "0x9B6A78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055D")]
		[Address(RVA = "0x9B65EC", Offset = "0x9B65EC", VA = "0x9B65EC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public float NetworkLevel_SpawnInterval_A2_2
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x9B6A80", Offset = "0x9B6A80", VA = "0x9B6A80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x9B6654", Offset = "0x9B6654", VA = "0x9B6654")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public float NetworkLevel_SpawnInterval_A2_3
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x9B6A88", Offset = "0x9B6A88", VA = "0x9B6A88")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x9B66BC", Offset = "0x9B66BC", VA = "0x9B66BC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public float NetworkLevel_SpawnInterval_A2_4
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x9B6A90", Offset = "0x9B6A90", VA = "0x9B6A90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x9B6724", Offset = "0x9B6724", VA = "0x9B6724")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public float NetworkLevel_SpawnInterval_B_1
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x9B6A98", Offset = "0x9B6A98", VA = "0x9B6A98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x9B678C", Offset = "0x9B678C", VA = "0x9B678C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public float NetworkLevel_SpawnInterval_B_2
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x9B6AA0", Offset = "0x9B6AA0", VA = "0x9B6AA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x9B67F4", Offset = "0x9B67F4", VA = "0x9B67F4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public float NetworkLevel_SpawnInterval_B_3
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x9B6AA8", Offset = "0x9B6AA8", VA = "0x9B6AA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x9B685C", Offset = "0x9B685C", VA = "0x9B685C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public float NetworkLevel_SpawnInterval_B_4
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x9B6AB0", Offset = "0x9B6AB0", VA = "0x9B6AB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x9B68C4", Offset = "0x9B68C4", VA = "0x9B68C4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public int NetworkReadComplete2
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x9B6AB8", Offset = "0x9B6AB8", VA = "0x9B6AB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600056D")]
		[Address(RVA = "0x9B4D5C", Offset = "0x9B4D5C", VA = "0x9B4D5C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x9B4BD4", Offset = "0x9B4BD4", VA = "0x9B4BD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x9B4C3C", Offset = "0x9B4C3C", VA = "0x9B4C3C")]
	[ServerCallback]
	private void Update()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x9B4DC4", Offset = "0x9B4DC4", VA = "0x9B4DC4")]
	public void ReadDifficultValue_Easy2()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x9B531C", Offset = "0x9B531C", VA = "0x9B531C")]
	public void ReadDifficultValue_Normal2()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x9B5874", Offset = "0x9B5874", VA = "0x9B5874")]
	public void ReadDifficultValue_Hard2()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x9B692C", Offset = "0x9B692C", VA = "0x9B692C")]
	public DifficultManager2()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x9B69D4", Offset = "0x9B69D4", VA = "0x9B69D4")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x9B6AC0", Offset = "0x9B6AC0", VA = "0x9B6AC0", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x9B7B7C", Offset = "0x9B7B7C", VA = "0x9B7B7C", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000108")]
public class DisableLocalPlayerObjects : NetworkBehaviour
{
	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GameObject> disableObject;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x9B842C", Offset = "0x9B842C", VA = "0x9B842C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x9B8574", Offset = "0x9B8574", VA = "0x9B8574")]
	public DisableLocalPlayerObjects()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x9B85DC", Offset = "0x9B85DC", VA = "0x9B85DC")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x9B85E0", Offset = "0x9B85E0", VA = "0x9B85E0", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x9B85E8", Offset = "0x9B85E8", VA = "0x9B85E8", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000109")]
public class DisableTimer : MonoBehaviour
{
	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66606C", Offset = "0x66606C")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisableTimer <>4__this;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0x9B8788", Offset = "0x9B8788", VA = "0x9B8788", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0x9B87F8", Offset = "0x9B87F8", VA = "0x9B87F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x9B8660", Offset = "0x9B8660", VA = "0x9B8660")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x9B86A0", Offset = "0x9B86A0", VA = "0x9B86A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x9B86A4", Offset = "0x9B86A4", VA = "0x9B86A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x9B8790", Offset = "0x9B8790", VA = "0x9B8790", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float DisableTime;

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x9B85EC", Offset = "0x9B85EC", VA = "0x9B85EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x673FD4", Offset = "0x673FD4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x9B868C", Offset = "0x9B868C", VA = "0x9B868C")]
	public DisableTimer()
	{
	}
}
[Token(Token = "0x200010B")]
public class DisableTimer2 : MonoBehaviour
{
	[Token(Token = "0x200010C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66607C", Offset = "0x66607C")]
	private sealed class <WaitDisable>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisableTimer2 <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000583")]
			[Address(RVA = "0x9B89EC", Offset = "0x9B89EC", VA = "0x9B89EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000585")]
			[Address(RVA = "0x9B8A5C", Offset = "0x9B8A5C", VA = "0x9B8A5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x9B88A0", Offset = "0x9B88A0", VA = "0x9B88A0")]
		[DebuggerHidden]
		public <WaitDisable>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x9B88D4", Offset = "0x9B88D4", VA = "0x9B88D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x9B88D8", Offset = "0x9B88D8", VA = "0x9B88D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x9B89F4", Offset = "0x9B89F4", VA = "0x9B89F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float DisableTime;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isRunning;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x9B8800", Offset = "0x9B8800", VA = "0x9B8800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x9B882C", Offset = "0x9B882C", VA = "0x9B882C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674088", Offset = "0x674088")]
	private IEnumerator WaitDisable()
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x9B88CC", Offset = "0x9B88CC", VA = "0x9B88CC")]
	public DisableTimer2()
	{
	}
}
[Token(Token = "0x200010D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x66608C", Offset = "0x66608C")]
public class DynamicBone_M01custom : MonoBehaviour
{
	[Token(Token = "0x200010E")]
	public enum UpdateMode
	{
		[Token(Token = "0x40007B5")]
		Normal,
		[Token(Token = "0x40007B6")]
		AnimatePhysics,
		[Token(Token = "0x40007B7")]
		UnscaledTime
	}

	[Token(Token = "0x200010F")]
	public enum FreezeAxis
	{
		[Token(Token = "0x40007B9")]
		None,
		[Token(Token = "0x40007BA")]
		X,
		[Token(Token = "0x40007BB")]
		Y,
		[Token(Token = "0x40007BC")]
		Z
	}

	[Token(Token = "0x2000110")]
	private class Particle
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Damping;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Elasticity;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Stiffness;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Inert;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Radius;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_BoneLength;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_Position;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x9C0964", Offset = "0x9C0964", VA = "0x9C0964")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_Root;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_UpdateRate;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x669D6C", Offset = "0x669D6C")]
	public float m_Damping;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x669D84", Offset = "0x669D84")]
	public float m_Elasticity;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x669D9C", Offset = "0x669D9C")]
	public float m_Stiffness;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x669DB4", Offset = "0x669DB4")]
	public float m_Inert;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_Radius;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_EndLength;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 m_Gravity;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 m_Force;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool m_DistantDisable;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_DistanceToObject;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float m_BoneTotalLength;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float m_ObjectScale;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float m_Time;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float m_Weight;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool m_DistantDisabled;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<Particle> m_Particles;

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x9BD8FC", Offset = "0x9BD8FC", VA = "0x9BD8FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x9BDAC0", Offset = "0x9BDAC0", VA = "0x9BDAC0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x9BDB14", Offset = "0x9BDB14", VA = "0x9BDB14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x9BDB44", Offset = "0x9BDB44", VA = "0x9BDB44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x9BDAF0", Offset = "0x9BDAF0", VA = "0x9BDAF0")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x9BDBA4", Offset = "0x9BDBA4", VA = "0x9BDBA4")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x9BE368", Offset = "0x9BE368", VA = "0x9BE368")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x9BE36C", Offset = "0x9BE36C", VA = "0x9BE36C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x9BE370", Offset = "0x9BE370", VA = "0x9BE370")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x9BE48C", Offset = "0x9BE48C", VA = "0x9BE48C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x9BE684", Offset = "0x9BE684", VA = "0x9BE684")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x9BE6E0", Offset = "0x9BE6E0", VA = "0x9BE6E0")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x9BDDC4", Offset = "0x9BDDC4", VA = "0x9BDDC4")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x9BD900", Offset = "0x9BD900", VA = "0x9BD900")]
	private void SetupParticles()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x9BFD80", Offset = "0x9BFD80", VA = "0x9BFD80")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x9C0568", Offset = "0x9C0568", VA = "0x9C0568")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x9BE034", Offset = "0x9BE034", VA = "0x9BE034")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x9BE1A4", Offset = "0x9BE1A4", VA = "0x9BE1A4")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x9BE6E8", Offset = "0x9BE6E8", VA = "0x9BE6E8")]
	private void UpdateParticles1()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x9BEA80", Offset = "0x9BEA80", VA = "0x9BEA80")]
	private void UpdateParticles2()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x9BF30C", Offset = "0x9BF30C", VA = "0x9BF30C")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x9C0A44", Offset = "0x9C0A44", VA = "0x9C0A44")]
	private static Vector3 MirrorVector(Vector3 v, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x9BFA0C", Offset = "0x9BFA0C", VA = "0x9BFA0C")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x9C0B24", Offset = "0x9C0B24", VA = "0x9C0B24")]
	public DynamicBone_M01custom()
	{
	}
}
[Token(Token = "0x2000111")]
public class EnableLocalPlayerObjects : NetworkBehaviour
{
	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GameObject> enableObject;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x9C0C44", Offset = "0x9C0C44", VA = "0x9C0C44")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x9C0D8C", Offset = "0x9C0D8C", VA = "0x9C0D8C")]
	public EnableLocalPlayerObjects()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x9C0DF4", Offset = "0x9C0DF4", VA = "0x9C0DF4")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x9C0DF8", Offset = "0x9C0DF8", VA = "0x9C0DF8", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x9C0E00", Offset = "0x9C0E00", VA = "0x9C0E00", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000112")]
public class EyeController : MonoBehaviour
{
	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform eyeCenter;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform eyeTarget;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SkinnedMeshRenderer[] eyeMeshRender;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 targetLocalVec;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 targetLocalVec2;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2[] uvOffset;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material[] eyeMat;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float multiply;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xMin;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float xMax;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float yMin;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float yMax;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 latestTargetVec;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Matrix4x4 mx4;

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x81CBF4", Offset = "0x81CBF4", VA = "0x81CBF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x81CCE0", Offset = "0x81CCE0", VA = "0x81CCE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x81D0E8", Offset = "0x81D0E8", VA = "0x81D0E8")]
	public EyeController()
	{
	}
}
[Token(Token = "0x2000113")]
public class FFR : MonoBehaviour
{
	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x81D190", Offset = "0x81D190", VA = "0x81D190")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x81D204", Offset = "0x81D204", VA = "0x81D204")]
	public void SetResoulutionScale(float tempRes)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x81D20C", Offset = "0x81D20C", VA = "0x81D20C")]
	public FFR()
	{
	}
}
[Token(Token = "0x2000114")]
public class FixedAudioVolume : MonoBehaviour
{
	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Server_Init server_Init;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int volume;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int STREAM_MUSIC;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string InvokingMethodName;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AndroidJavaObject audioManager;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int maxVolume;

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x81D4CC", Offset = "0x81D4CC", VA = "0x81D4CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x81D780", Offset = "0x81D780", VA = "0x81D780")]
	private void KeepVolumeInvoke()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x81D890", Offset = "0x81D890", VA = "0x81D890")]
	public int GetVolume()
	{
		return default(int);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x81D9C8", Offset = "0x81D9C8", VA = "0x81D9C8")]
	public void SetFixedVolume()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x81D550", Offset = "0x81D550", VA = "0x81D550")]
	private bool Setup()
	{
		return default(bool);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x81DC00", Offset = "0x81DC00", VA = "0x81DC00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x81DC3C", Offset = "0x81DC3C", VA = "0x81DC3C")]
	public FixedAudioVolume()
	{
	}
}
[Token(Token = "0x2000115")]
public class FPS_Manager : MonoBehaviour
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject FpsView_Obj;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool OnOffFlag;

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x81D250", Offset = "0x81D250", VA = "0x81D250")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x81D37C", Offset = "0x81D37C", VA = "0x81D37C")]
	public FPS_Manager()
	{
	}
}
[Token(Token = "0x2000116")]
public class GameStatusFlagChanger : MonoBehaviour
{
	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int status;

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x81DCB8", Offset = "0x81DCB8", VA = "0x81DCB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x81DCF0", Offset = "0x81DCF0", VA = "0x81DCF0")]
	public GameStatusFlagChanger()
	{
	}
}
[Token(Token = "0x2000117")]
public class GetPlayerInfo : NetworkBehaviour
{
	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject server_Init;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string server_Init_ObjName;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject NetSyncValue;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public string netSyncValue_ObjName;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject NetSyncValue2;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public string netSyncValue2_ObjName;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private NetSyncValue2 netSyncValue2;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject SyncVarManager;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public string syncVarManager_ObjName;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int startCheck;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool CheckLocalPlayer;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject magatama01;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject magatama02;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject magatama03;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject magatama04;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool setFlag;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool setFlag2;

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x81DCF8", Offset = "0x81DCF8", VA = "0x81DCF8", Slot = "14")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x81DD04", Offset = "0x81DD04", VA = "0x81DD04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x81DDFC", Offset = "0x81DDFC", VA = "0x81DDFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x81DE8C", Offset = "0x81DE8C", VA = "0x81DE8C")]
	public void getPlayerInfo_sub()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x81E040", Offset = "0x81E040", VA = "0x81E040")]
	public void MagatamaOn()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x81E19C", Offset = "0x81E19C", VA = "0x81E19C")]
	public void MagatamaOn_ALL()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x81E36C", Offset = "0x81E36C", VA = "0x81E36C")]
	public GetPlayerInfo()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x81E3D4", Offset = "0x81E3D4", VA = "0x81E3D4")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x81E3D8", Offset = "0x81E3D8", VA = "0x81E3D8", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x81E3E0", Offset = "0x81E3E0", VA = "0x81E3E0", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000118")]
public class GiveUpManager : MonoBehaviour
{
	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject server_Init_obj;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Server_Init server_Init;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject syncVarManager_obj;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] EnableGameObject;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ChangeTargetManager2 changeTargetManager2;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool allGiveUp;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool setFlag1;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool setFlag2;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool setFlag3;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool setFlag4;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x81E3E4", Offset = "0x81E3E4", VA = "0x81E3E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x81E624", Offset = "0x81E624", VA = "0x81E624")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x81E4A4", Offset = "0x81E4A4", VA = "0x81E4A4")]
	public void objectOnOff()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x81E7B8", Offset = "0x81E7B8", VA = "0x81E7B8")]
	public GiveUpManager()
	{
	}
}
[Token(Token = "0x2000119")]
public class GiveUpManager_Avatar : NetworkBehaviour
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject SyncVarManager;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public string SyncVarManager_ObjName;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject Server_Init;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public string Server_Init_ObjName;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Server_Init server_Init;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public GameObject playerCollider_obj;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int PlayerMyNumber;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool setFlag;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool setFlag2;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool setFlag3;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	private bool setFlag4;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] EnableGameObject;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] EnableGameObject2;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] DisableGameObject2;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] DisableGameObject3;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kCmdCmd_GiveUpSet;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x81E828", Offset = "0x81E828", VA = "0x81E828")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x81E8D4", Offset = "0x81E8D4", VA = "0x81E8D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x81F1D4", Offset = "0x81F1D4", VA = "0x81F1D4")]
	[ClientCallback]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x81F2FC", Offset = "0x81F2FC", VA = "0x81F2FC")]
	[Command]
	public void Cmd_GiveUpSet(int PlayerMyNumber, int status)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x81ECB8", Offset = "0x81ECB8", VA = "0x81ECB8")]
	public void objectOnOff(int state)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x81EF98", Offset = "0x81EF98", VA = "0x81EF98")]
	public void AvatarInvisible()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x81F3D8", Offset = "0x81F3D8", VA = "0x81F3D8")]
	public void ChangeTag_sub()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x81F548", Offset = "0x81F548", VA = "0x81F548")]
	public GiveUpManager_Avatar()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x81F608", Offset = "0x81F608", VA = "0x81F608")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x81F60C", Offset = "0x81F60C", VA = "0x81F60C")]
	protected static void InvokeCmdCmd_GiveUpSet(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x81EA58", Offset = "0x81EA58", VA = "0x81EA58")]
	public void CallCmd_GiveUpSet(int PlayerMyNumber, int status)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x81F828", Offset = "0x81F828", VA = "0x81F828")]
	static GiveUpManager_Avatar()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x81F948", Offset = "0x81F948", VA = "0x81F948", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x81F950", Offset = "0x81F950", VA = "0x81F950", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200011A")]
public class LipSyncVoiceSetter : MonoBehaviour
{
	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource LipSyncAudioSource;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip LipSyncAudioClip;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x820FB0", Offset = "0x820FB0", VA = "0x820FB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x82100C", Offset = "0x82100C", VA = "0x82100C")]
	public LipSyncVoiceSetter()
	{
	}
}
[Token(Token = "0x200011B")]
public class Log_Output : MonoBehaviour
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string fileName_origin;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string fileName;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Avatar_SyncAnimManager avatar_SyncAnimManager_01;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Avatar_SyncAnimManager avatar_SyncAnimManager_02;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Avatar_SyncAnimManager avatar_SyncAnimManager_03;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Avatar_SyncAnimManager avatar_SyncAnimManager_04;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int OpEd_judge;

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x824D18", Offset = "0x824D18", VA = "0x824D18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x825184", Offset = "0x825184", VA = "0x825184")]
	public Log_Output()
	{
	}
}
[Token(Token = "0x200011C")]
public class M01A_onCurrentMapl2Active_children : MonoBehaviour
{
	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Server_Init;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Server_Init_SA server_Init;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string Server_Init_ObjName;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject SyncVarManager;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string SyncVarManager_ObjName;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int TargetMapNumber;

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x825578", Offset = "0x825578", VA = "0x825578")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x82572C", Offset = "0x82572C", VA = "0x82572C")]
	public M01A_onCurrentMapl2Active_children()
	{
	}
}
[Token(Token = "0x200011D")]
public class MapSpawner : NetworkBehaviour
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject mapPrefab01;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject mapPrefab02;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kRpcRpc_SpawnMap;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kRpcRpc_ClearMap;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x88225C", Offset = "0x88225C", VA = "0x88225C")]
	public void SpawnMap(GameObject mapPrefab)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x882290", Offset = "0x882290", VA = "0x882290")]
	public void SpawnMap_Server(string mapPrefab)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x882354", Offset = "0x882354", VA = "0x882354")]
	[ClientRpc]
	public void Rpc_SpawnMap(string mapPrefab)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x882294", Offset = "0x882294", VA = "0x882294")]
	public void SpawnMapSub(string mapPrefab)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x882358", Offset = "0x882358", VA = "0x882358")]
	public void ClearMap_Server()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x8823D8", Offset = "0x8823D8", VA = "0x8823D8")]
	[ClientRpc]
	public void Rpc_ClearMap()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x882458", Offset = "0x882458", VA = "0x882458")]
	public MapSpawner()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x8824C0", Offset = "0x8824C0", VA = "0x8824C0")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x8824C4", Offset = "0x8824C4", VA = "0x8824C4")]
	protected static void InvokeRpcRpc_SpawnMap(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x8826A4", Offset = "0x8826A4", VA = "0x8826A4")]
	protected static void InvokeRpcRpc_ClearMap(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x882858", Offset = "0x882858", VA = "0x882858")]
	public void CallRpc_SpawnMap(string mapPrefab)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x882A50", Offset = "0x882A50", VA = "0x882A50")]
	public void CallRpc_ClearMap()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x882C18", Offset = "0x882C18", VA = "0x882C18")]
	static MapSpawner()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x882DAC", Offset = "0x882DAC", VA = "0x882DAC", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x882DB4", Offset = "0x882DB4", VA = "0x882DB4", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200011E")]
public class LogDisplay3 : MonoBehaviour
{
	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Text m_textUI;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public ScrollRect ScrollRect;

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x824A20", Offset = "0x824A20", VA = "0x824A20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x824A94", Offset = "0x824A94", VA = "0x824A94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x824B08", Offset = "0x824B08", VA = "0x824B08")]
	private void OnLogMessage(string i_logText, string i_stackTrace, LogType i_type)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x824D10", Offset = "0x824D10", VA = "0x824D10")]
	public LogDisplay3()
	{
	}
}
[Token(Token = "0x200011F")]
public class MenuButtonManager : MonoBehaviour
{
	[Token(Token = "0x2000120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6660C4", Offset = "0x6660C4")]
	private sealed class <HMDdropdownlist>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuButtonManager <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000618")]
			[Address(RVA = "0x887940", Offset = "0x887940", VA = "0x887940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061A")]
			[Address(RVA = "0x8879B0", Offset = "0x8879B0", VA = "0x8879B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x887540", Offset = "0x887540", VA = "0x887540")]
		[DebuggerHidden]
		public <HMDdropdownlist>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x887694", Offset = "0x887694", VA = "0x887694", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x887698", Offset = "0x887698", VA = "0x887698", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x887948", Offset = "0x887948", VA = "0x887948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Server_Init server_Init;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NetSyncValue server_Init_Net;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NetSyncValue2 server_Init_Net2;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private DifficultManager difficultManager;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private DifficultManager2 difficultManager2;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Canvas canvasPC_Main;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Canvas canvasPC_Game;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Canvas canvasPC_Setting;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Canvas canvasPC_Debug;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Canvas canvasPC_JumpStart;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CanvasGroup getCanvasGroup_Main;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CanvasGroup getCanvasGroup_Game;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CanvasGroup getCanvasGroup_Setting;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CanvasGroup getCanvasGroup_Debug;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CanvasGroup getCanvasGroup_JumpStart;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject objPC_Check_GameStart;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject objPC_Check_Check_End;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject objPC_Check_Player01ReCenter;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject objPC_Check_Player02ReCenter;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject objPC_Check_Player03ReCenter;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject objPC_Check_Player04ReCenter;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject objPC_Check_AllReCenter;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject objPC_Check_Player01Stop;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject objPC_Check_Player02Stop;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject objPC_Check_Player03Stop;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject objPC_Check_Player04Stop;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject objPC_Check_AllStop;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject objPC_Check_GoTitle;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject objPC_Check_Player01ReSize;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject objPC_Check_Player02ReSize;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject objPC_Check_Player03ReSize;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject objPC_Check_Player04ReSize;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject objPC_Check_AllReSize;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject objPC_Check_ServerStop;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject objPC_Check_TrackingLostPlayer;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject playerSetting_obj;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject jumpStart_obj;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject clientStart_obj;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject mapPrefab01;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject mapPrefab02;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject mapspawner_obj;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private MapSpawner mapSpawner;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int checkWondowOn_flag;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private ShutdownPlayer shutdownPlayer;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool CenterMarkerOnOff;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private AvatarResizeManager avatarResizeManager;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	public GameObject CenterMarkerObj;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private Toggle toggleTimeLimit;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private Toggle toggleVolumeLock;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private Dropdown dropdownDifficult;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private Text textDifficult;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private string textDifficult1;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private string textDifficult2;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private string textDifficult3;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool setFlag;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	private bool setFlag2;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private Dropdown dropdownHMD1;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private Dropdown dropdownHMD2;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private Dropdown dropdownHMD3;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private Dropdown dropdownHMD4;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private Toggle HMDsetingsToggle;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private string textStopPlayer;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	private Text textStopPlayer1;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private Text textStopPlayer2;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	private Text textStopPlayer3;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private Text textStopPlayer4;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	private Text textStopPlayerAll;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	private GameObject StopBotton1;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	private GameObject StopBotton2;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	private GameObject StopBotton3;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[SerializeField]
	private GameObject StopBotton4;

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x884728", Offset = "0x884728", VA = "0x884728")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x884BFC", Offset = "0x884BFC", VA = "0x884BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x884C98", Offset = "0x884C98", VA = "0x884C98")]
	public void SetDifficultText()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x884E64", Offset = "0x884E64", VA = "0x884E64")]
	public void OnMenuGameStartButtonClicked()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x885010", Offset = "0x885010", VA = "0x885010")]
	public void OnMenuEndButtonClicked()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x885068", Offset = "0x885068", VA = "0x885068")]
	public void OnMenuServerStopButtonClicked()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x8850C0", Offset = "0x8850C0", VA = "0x8850C0")]
	public void OnMenuPlayerSettingButtonClicked()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x885104", Offset = "0x885104", VA = "0x885104")]
	public void OnMenuJumpStartButtonClicked()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x885138", Offset = "0x885138", VA = "0x885138")]
	public void OnMenuClientStartButtonClicked()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x88516C", Offset = "0x88516C", VA = "0x88516C")]
	public void OnMenuCloseButtonClicked()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x885224", Offset = "0x885224", VA = "0x885224")]
	public void OnMenuCloseButtonClicked_JumpStart()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x885258", Offset = "0x885258", VA = "0x885258")]
	public void OnMenuCloseButtonClicked_ClientStart()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x88528C", Offset = "0x88528C", VA = "0x88528C")]
	public void OnMenuJumpStartButtonSubClicked(int num)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x8853E4", Offset = "0x8853E4", VA = "0x8853E4")]
	public void OnMenuPlayerReCenterButtonClicked(int num)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x88548C", Offset = "0x88548C", VA = "0x88548C")]
	public void OnMenuPlayerReSizeButtonClicked(int num)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x885534", Offset = "0x885534", VA = "0x885534")]
	public void OnMenuJoinPlayerButtonClicked(int num)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x8856BC", Offset = "0x8856BC", VA = "0x8856BC")]
	public void OnMenuNoJoinPlayerButtonClicked(int num)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x885844", Offset = "0x885844", VA = "0x885844")]
	public void OnMenuStopPlayerButtonClicked(int num)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x8858EC", Offset = "0x8858EC", VA = "0x8858EC")]
	public void OnMenuGoTitleButtonClicked()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x885AC4", Offset = "0x885AC4", VA = "0x885AC4")]
	public void OnMenuYesClicked(int button_number)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x886F14", Offset = "0x886F14", VA = "0x886F14")]
	public void OnMenuNoClicked()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x885BD0", Offset = "0x885BD0", VA = "0x885BD0")]
	public void MenuGameStartYesButtonClicked()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x885D78", Offset = "0x885D78", VA = "0x885D78")]
	public void MenuEndYesButtonClicked()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x885E3C", Offset = "0x885E3C", VA = "0x885E3C")]
	public void MenuPlayerReCenterYesButtonClicked(int playerNum)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x886D1C", Offset = "0x886D1C", VA = "0x886D1C")]
	public void MenuPlayerReSizeYesButtonClicked(int playerNum)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x886154", Offset = "0x886154", VA = "0x886154")]
	public void MenuPlayer01StopYesButtonClicked()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x88632C", Offset = "0x88632C", VA = "0x88632C")]
	public void MenuPlayer02StopYesButtonClicked()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x886504", Offset = "0x886504", VA = "0x886504")]
	public void MenuPlayer03StopYesButtonClicked()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x8866DC", Offset = "0x8866DC", VA = "0x8866DC")]
	public void MenuPlayer04StopYesButtonClicked()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x8868B4", Offset = "0x8868B4", VA = "0x8868B4")]
	public void MenuAllStopYesButtonClicked()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x886C9C", Offset = "0x886C9C", VA = "0x886C9C")]
	public void MenuGoTitleYesButtonClicked()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x886F40", Offset = "0x886F40", VA = "0x886F40")]
	public void OnMenuPlayerSettingCenterMarkerOnOff()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x886FF8", Offset = "0x886FF8", VA = "0x886FF8")]
	public void OnToggleTimeLimit()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x88707C", Offset = "0x88707C", VA = "0x88707C")]
	public void OnToggleVolumeLock()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x88711C", Offset = "0x88711C", VA = "0x88711C")]
	public void OnDropdownDifficult()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x887240", Offset = "0x887240", VA = "0x887240")]
	public void OnDropdownHMD(int num)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x884B88", Offset = "0x884B88", VA = "0x884B88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x67417C", Offset = "0x67417C")]
	private IEnumerator HMDdropdownlist()
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x88756C", Offset = "0x88756C", VA = "0x88756C")]
	public void OnSetigFix()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x884EBC", Offset = "0x884EBC", VA = "0x884EBC")]
	public void CanvasGroupOff(int num)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x884D80", Offset = "0x884D80", VA = "0x884D80")]
	public void CanvasGroupOn()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x8848F0", Offset = "0x8848F0", VA = "0x8848F0")]
	public void CloseWindow()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x88760C", Offset = "0x88760C", VA = "0x88760C")]
	public MenuButtonManager()
	{
	}
}
[Token(Token = "0x2000121")]
public class MenuButtonManager_HMD : MonoBehaviour
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas canvasHMD_Main;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas canvasHMD_Check_Start;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Canvas canvasHMD_Check_Start_PL1;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Canvas canvasHMD_Check_Start_PL2;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Canvas canvasHMD_Check_Start_PL3;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas canvasHMD_Check_Start_PL4;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject canvasHMD_Login_obj;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject canvasHMD_Check_Start_obj;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject canvasHMD_Check_End_obj;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject canvasHMD_Check_Disconnect_obj;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject canvasHMD_LoginTimeout_obj;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject canvasHMD_Check_Start_PL1_obj;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject canvasHMD_Check_Start_PL2_obj;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject canvasHMD_Check_Start_PL3_obj;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject canvasHMD_Check_Start_PL4_obj;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CanvasGroup getCanvasGroup_Main;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CanvasGroup getCanvasGroup_Check_Start;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CanvasGroup getCanvasGroup_Check_Start_PL1;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CanvasGroup getCanvasGroup_Check_Start_PL2;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CanvasGroup getCanvasGroup_Check_Start_PL3;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CanvasGroup getCanvasGroup_Check_Start_PL4;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Canvas canvasname;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject canvasObjectname;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject server_Init_obj;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Server_Init_SA server_Init;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int PlayerNo_buff;

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x8879B8", Offset = "0x8879B8", VA = "0x8879B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x887B18", Offset = "0x887B18", VA = "0x887B18")]
	public void OnMenuGameStartButtonClicked()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x887BC8", Offset = "0x887BC8", VA = "0x887BC8")]
	public void OnMenuPL1_GameStartButtonClicked()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x887C20", Offset = "0x887C20", VA = "0x887C20")]
	public void OnMenuPL2_GameStartButtonClicked()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x887C78", Offset = "0x887C78", VA = "0x887C78")]
	public void OnMenuPL3_GameStartButtonClicked()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x887CD0", Offset = "0x887CD0", VA = "0x887CD0")]
	public void OnMenuPL4_GameStartButtonClicked()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x887D28", Offset = "0x887D28", VA = "0x887D28")]
	public void OnMenuEndButtonClicked()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x887D80", Offset = "0x887D80", VA = "0x887D80")]
	public void OnMenuDisconnectButtonClicked()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x887B70", Offset = "0x887B70", VA = "0x887B70")]
	public void CanvasGroupOff()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x887DD8", Offset = "0x887DD8", VA = "0x887DD8")]
	public void OnMenuNoClicked(int button_number)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x887F74", Offset = "0x887F74", VA = "0x887F74")]
	public void OnMenuYesClicked(int button_number)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x888058", Offset = "0x888058", VA = "0x888058")]
	public void MenuGameStartYesButtonClicked(int PlayerNo)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x888368", Offset = "0x888368", VA = "0x888368")]
	public void MenuEndYesButtonClicked()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x8883F0", Offset = "0x8883F0", VA = "0x8883F0")]
	public void MenuDisconnectYesButtonClicked()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x888450", Offset = "0x888450", VA = "0x888450")]
	public void OnClientButtonClicked_01()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x88878C", Offset = "0x88878C", VA = "0x88878C")]
	public void OnClientButtonClicked_02()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x888938", Offset = "0x888938", VA = "0x888938")]
	public void OnClientButtonClicked_03()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x888AE4", Offset = "0x888AE4", VA = "0x888AE4")]
	public void OnClientButtonClicked_04()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x888C90", Offset = "0x888C90", VA = "0x888C90")]
	public void OnClientButtonCansel()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x888C94", Offset = "0x888C94", VA = "0x888C94")]
	public void OnTimeoutButton()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x887F1C", Offset = "0x887F1C", VA = "0x887F1C")]
	public void CanvasGroupOn()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x8885FC", Offset = "0x8885FC", VA = "0x8885FC")]
	public void CloseServerNameWindow()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x888D54", Offset = "0x888D54", VA = "0x888D54")]
	public void ConnectWindowOnOff(int OnOff)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x888DEC", Offset = "0x888DEC", VA = "0x888DEC")]
	public MenuButtonManager_HMD()
	{
	}
}
[Token(Token = "0x2000122")]
public class MenuDropDownHide : MonoBehaviour
{
	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Dropdown dropdownHMD1;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Dropdown dropdownHMD2;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Dropdown dropdownHMD3;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Dropdown dropdownHMD4;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int SelectNo;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject item;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x9368A8", Offset = "0x9368A8", VA = "0x9368A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x936934", Offset = "0x936934", VA = "0x936934")]
	private void Update()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x936E00", Offset = "0x936E00", VA = "0x936E00")]
	public MenuDropDownHide()
	{
	}
}
[Token(Token = "0x2000123")]
public class MenuJumpStartClient : NetworkBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objPC_JumpStart_Tutorial;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objPC_JumpStart_MapB;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject objPC_JumpStart_Battle_1;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject objPC_JumpStart_MapD02;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject objPC_JumpStart_Battle_2;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject objPC_JumpStart_Battle_Boss;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject objPC_JumpStart_Ending_1;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject objPC_JumpStart_Ending_2;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject objPC_JumpStart_Ending_3;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kRpcRpc_JumpStart;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x936E08", Offset = "0x936E08", VA = "0x936E08")]
	[ClientRpc]
	public void Rpc_JumpStart(int num)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x936E0C", Offset = "0x936E0C", VA = "0x936E0C")]
	public void JumpStartObjectOn(int num)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x936ECC", Offset = "0x936ECC", VA = "0x936ECC")]
	public MenuJumpStartClient()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x936F34", Offset = "0x936F34", VA = "0x936F34")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x936F38", Offset = "0x936F38", VA = "0x936F38")]
	protected static void InvokeRpcRpc_JumpStart(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x937118", Offset = "0x937118", VA = "0x937118")]
	public void CallRpc_JumpStart(int num)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x937310", Offset = "0x937310", VA = "0x937310")]
	static MenuJumpStartClient()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x937430", Offset = "0x937430", VA = "0x937430", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x937438", Offset = "0x937438", VA = "0x937438", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000124")]
public class MenuSetPlayerInfo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000125")]
	public class TrackingInformationObjects
	{
		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x93BF9C", Offset = "0x93BF9C", VA = "0x93BF9C")]
		public TrackingInformationObjects()
		{
		}
	}

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject server_Init_obj;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Server_Init server_Init;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject syncVarManager_obj;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject NetSyncValue_obj;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject NetSyncValue2_obj;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NetSyncValue2 netSyncValue2;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Debug_ClientPlay debug_ClientPlay;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Avatar_SyncAnimManager Avatar_SyncAnimManager_P1;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Avatar_SyncAnimManager Avatar_SyncAnimManager_P2;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Avatar_SyncAnimManager Avatar_SyncAnimManager_P3;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Avatar_SyncAnimManager Avatar_SyncAnimManager_P4;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject settingPlayerMenu_obj;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject settingPlayer01_obj;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject settingPlayer02_obj;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject settingPlayer03_obj;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject settingPlayer04_obj;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject settingPlayerAllRecenter_obj;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject settingPlayerAllReSize_obj;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject noPlayer_obj;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject ButtonOpeningStart_obj;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject ButtonJumpStart_obj;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject ButtonClientStart_obj;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject ButtonReStart_obj;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject ButtonServerStart_obj;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject ButtonServerStop_obj;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject ButtonSetting_obj;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject ButtonAllStop_obj;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject ButtonDebug_obj;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Toggle HMDsetigs;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Dropdown playerHMD1;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Dropdown playerHMD2;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Dropdown playerHMD3;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Dropdown playerHMD4;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text textTitle;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string textTitle_Client;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private Text[] textPlayer_State;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Text[] textPlayer_MapName;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private Text[] textPlayer_HP;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string textBuff;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string textBuff2;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private Sprite sprite_HMD_Green;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private Sprite sprite_HMD_Gray;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private Sprite sprite_HMD_Yellow;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private Sprite sprite_HMD_Red;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private Sprite sprite_Ctr_Green;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private Sprite sprite_Ctr_Gray;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private Sprite sprite_Ctr_Yellow;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private Sprite sprite_Ctr_Red;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private Sprite sprite_Bat_Green;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private Sprite sprite_Bat_Gray;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private Sprite sprite_Bat_Yellow;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private Sprite sprite_Bat_Red;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject sprite_HMD_P1;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Image m_Image_HMD_P1;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private GameObject sprite_HMD_P2;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Image m_Image_HMD_P2;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private GameObject sprite_HMD_P3;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Image m_Image_HMD_P3;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private GameObject sprite_HMD_P4;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Image m_Image_HMD_P4;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	private GameObject sprite_CtrL_P1;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Image m_Image_CtrL_P1;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	private GameObject sprite_CtrL_P2;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private Image m_Image_CtrL_P2;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	private GameObject sprite_CtrL_P3;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Image m_Image_CtrL_P3;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	private GameObject sprite_CtrL_P4;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Image m_Image_CtrL_P4;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[SerializeField]
	private GameObject sprite_CtrR_P1;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Image m_Image_CtrR_P1;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	private GameObject sprite_CtrR_P2;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Image m_Image_CtrR_P2;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	private GameObject sprite_CtrR_P3;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Image m_Image_CtrR_P3;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[SerializeField]
	private GameObject sprite_CtrR_P4;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Image m_Image_CtrR_P4;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	private GameObject sprite_HMD_P1_Bat;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private Image m_Image_HMD_P1_Bat;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private GameObject sprite_HMD_P2_Bat;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Image m_Image_HMD_P2_Bat;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[SerializeField]
	private GameObject sprite_HMD_P3_Bat;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Image m_Image_HMD_P3_Bat;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[SerializeField]
	private GameObject sprite_HMD_P4_Bat;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Image m_Image_HMD_P4_Bat;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[SerializeField]
	private GameObject sprite_CtrL_P1_Bat;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private Image m_Image_CtrL_P1_Bat;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[SerializeField]
	private GameObject sprite_CtrL_P2_Bat;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private Image m_Image_CtrL_P2_Bat;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[SerializeField]
	private GameObject sprite_CtrL_P3_Bat;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Image m_Image_CtrL_P3_Bat;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[SerializeField]
	private GameObject sprite_CtrL_P4_Bat;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private Image m_Image_CtrL_P4_Bat;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[SerializeField]
	private GameObject sprite_CtrR_P1_Bat;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private Image m_Image_CtrR_P1_Bat;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[SerializeField]
	private GameObject sprite_CtrR_P2_Bat;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private Image m_Image_CtrR_P2_Bat;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[SerializeField]
	private GameObject sprite_CtrR_P3_Bat;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private Image m_Image_CtrR_P3_Bat;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[SerializeField]
	private GameObject sprite_CtrR_P4_Bat;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private Image m_Image_CtrR_P4_Bat;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	[SerializeField]
	private Button button_PL1_Join;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	[SerializeField]
	private Button button_PL1_NoJoin;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[SerializeField]
	private Button button_PL1_Stop;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[SerializeField]
	private Button button_PL2_Join;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	[SerializeField]
	private Button button_PL2_NoJoin;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	[SerializeField]
	private Button button_PL2_Stop;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	[SerializeField]
	private Button button_PL3_Join;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	[SerializeField]
	private Button button_PL3_NoJoin;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	[SerializeField]
	private Button button_PL3_Stop;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	[SerializeField]
	private Button button_PL4_Join;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	[SerializeField]
	private Button button_PL4_NoJoin;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	[SerializeField]
	private Button button_PL4_Stop;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	[SerializeField]
	private Text[] text_Battery_PL1;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	[SerializeField]
	private Text[] text_Battery_PL2;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	[SerializeField]
	private Text[] text_Battery_PL3;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	[SerializeField]
	private Text[] text_Battery_PL4;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public TrackingInformationObjects[] trackingInformationObjects;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	[SerializeField]
	private Text[] hmdHeightText;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuSetPlayerInfo menuSetPlayerInfo;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private string HP_Text;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	private string Resize_Text1;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	private string Resize_Text2;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	private string Null_Text;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	private string Null_Text2;

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x9374F8", Offset = "0x9374F8", VA = "0x9374F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x937564", Offset = "0x937564", VA = "0x937564")]
	private void Start()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x937D24", Offset = "0x937D24", VA = "0x937D24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x93BCAC", Offset = "0x93BCAC", VA = "0x93BCAC")]
	public void SetPlayerStatusText(int status)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x93BD54", Offset = "0x93BD54", VA = "0x93BD54")]
	public void SetMapText(int MapNumber)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x937D60", Offset = "0x937D60", VA = "0x937D60")]
	public void InfoView()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x9389C8", Offset = "0x9389C8", VA = "0x9389C8")]
	public void SettingMenuView()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x938FC4", Offset = "0x938FC4", VA = "0x938FC4")]
	public void JoinButtonOnOff()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x93A004", Offset = "0x93A004", VA = "0x93A004")]
	public void Set_HMD_Info()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x939AA8", Offset = "0x939AA8", VA = "0x939AA8")]
	public void StartButtonOnOff()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x93BE68", Offset = "0x93BE68", VA = "0x93BE68")]
	public MenuSetPlayerInfo()
	{
	}
}
[Token(Token = "0x2000126")]
public class MenuTextManager : MonoBehaviour
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject server_Init_obj;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Server_Init server_Init;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject server_Init_Net_obj;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NetSyncValue server_Init_Net;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text main_ServerNameText;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject main_ServerNameObj;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text main_PlayerNameText;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject main_PlayerNameObj;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text login_MessageText;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text login_MessageButtonText;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string Name_Player01_Wait;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string Name_Player02_Wait;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string Name_Player03_Wait;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string Name_Player04_Wait;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool setFlag;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string serverIP_buff;

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x93BFA4", Offset = "0x93BFA4", VA = "0x93BFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x93C034", Offset = "0x93C034", VA = "0x93C034")]
	private void Update()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x93C4F8", Offset = "0x93C4F8", VA = "0x93C4F8")]
	public void ServerNameSelect_MainMenu()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x93C0A4", Offset = "0x93C0A4", VA = "0x93C0A4")]
	public void ServerNameSelect()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x93C268", Offset = "0x93C268", VA = "0x93C268")]
	public void PlayerNameSelect()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x93C32C", Offset = "0x93C32C", VA = "0x93C32C")]
	public void TryLoginWindowText()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x93C548", Offset = "0x93C548", VA = "0x93C548")]
	public MenuTextManager()
	{
	}
}
[Token(Token = "0x2000127")]
public class Object_OnOff : MonoBehaviour
{
	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject netSyncValue_obj;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] EnableGameObject;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xFDA704", Offset = "0xFDA704", VA = "0xFDA704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xFDA8C8", Offset = "0xFDA8C8", VA = "0xFDA8C8")]
	public Object_OnOff()
	{
	}
}
[Token(Token = "0x2000128")]
public class OculusReCenter : NetworkBehaviour
{
	[Token(Token = "0x2000129")]
	public class RecenterInformation
	{
		[Serializable]
		[Token(Token = "0x200012A")]
		public class Information
		{
			[Token(Token = "0x400094F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4000950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotation;

			[Token(Token = "0x600066D")]
			[Address(RVA = "0x8A7AC0", Offset = "0x8A7AC0", VA = "0x8A7AC0")]
			public Information()
			{
			}
		}

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Information info;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string SavePath;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string SaveFileName;

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x8A7980", Offset = "0x8A7980", VA = "0x8A7980")]
		public RecenterInformation()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x8A7AC8", Offset = "0x8A7AC8", VA = "0x8A7AC8")]
		public void SetRotation(float x, float y, float z)
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x8A7B1C", Offset = "0x8A7B1C", VA = "0x8A7B1C")]
		public void SetPosition(float x, float y, float z)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x8A7B70", Offset = "0x8A7B70", VA = "0x8A7B70")]
		public void Save()
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x8A7C3C", Offset = "0x8A7C3C", VA = "0x8A7C3C")]
		public void Load()
		{
		}
	}

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform rootTrm;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 myPos;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 iniPos;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 latestPos;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 angle;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 setPos;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject OVRCameraRig_Obj;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject camObj;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject server_Init_obj;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Server_Init server_Init;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject server_Init_Net_obj2;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private NetSyncValue2 server_Init_Net2;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float HMD_Move_PosX;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float HMD_Move_PosZ;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float HMD_Move_RotY;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector3 camRigScale;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Matrix4x4 mx4;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RecenterInformation recenterInformation;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kTargetRpcTarget_SaveRecenterFlag;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kTargetRpcTargetSendReCenterCommand;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int kRpcRpcSendReCenterCommand;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int kTargetRpcTarget_AutoReCenter;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xFDA938", Offset = "0xFDA938", VA = "0xFDA938")]
	private void Start()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xFDA9D4", Offset = "0xFDA9D4", VA = "0xFDA9D4")]
	[TargetRpc]
	public void Target_SaveRecenterFlag(NetworkConnection target)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xFDAA2C", Offset = "0xFDAA2C", VA = "0xFDAA2C")]
	[TargetRpc]
	public void TargetSendReCenterCommand(NetworkConnection target)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xFDB1F8", Offset = "0xFDB1F8", VA = "0xFDB1F8")]
	[ClientRpc]
	public void RpcSendReCenterCommand()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xFDAD58", Offset = "0xFDAD58", VA = "0xFDAD58")]
	public void Recenter(float HMD_Move_PosX, float HMD_Move_PosZ, float HMD_Move_RotY)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xFDB1FC", Offset = "0xFDB1FC", VA = "0xFDB1FC")]
	[TargetRpc]
	public void Target_AutoReCenter(NetworkConnection target)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xFDB4E4", Offset = "0xFDB4E4", VA = "0xFDB4E4")]
	public OculusReCenter()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xFDB5BC", Offset = "0xFDB5BC", VA = "0xFDB5BC")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xFDB5C0", Offset = "0xFDB5C0", VA = "0xFDB5C0")]
	protected static void InvokeRpcRpcSendReCenterCommand(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xFDB770", Offset = "0xFDB770", VA = "0xFDB770")]
	protected static void InvokeRpcTarget_SaveRecenterFlag(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xFDB94C", Offset = "0xFDB94C", VA = "0xFDB94C")]
	protected static void InvokeRpcTargetSendReCenterCommand(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xFDBB30", Offset = "0xFDBB30", VA = "0xFDBB30")]
	protected static void InvokeRpcTarget_AutoReCenter(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xFDBD14", Offset = "0xFDBD14", VA = "0xFDBD14")]
	public void CallRpcSendReCenterCommand()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xFDBEDC", Offset = "0xFDBEDC", VA = "0xFDBEDC")]
	public void CallTarget_SaveRecenterFlag(NetworkConnection target)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xFDC110", Offset = "0xFDC110", VA = "0xFDC110")]
	public void CallTargetSendReCenterCommand(NetworkConnection target)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xFDC344", Offset = "0xFDC344", VA = "0xFDC344")]
	public void CallTarget_AutoReCenter(NetworkConnection target)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xFDC578", Offset = "0xFDC578", VA = "0xFDC578")]
	static OculusReCenter()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xFDC7E4", Offset = "0xFDC7E4", VA = "0xFDC7E4", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xFDC7EC", Offset = "0xFDC7EC", VA = "0xFDC7EC", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200012B")]
public class PointerManager : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip hapticsAudioClip;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRHapticsClip hapticsClip;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip hapticsAudioClip2;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRHapticsClip hapticsClip2;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip hapticsAudioClip3;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVRHapticsClip hapticsClip3;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject AudioObject01;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject AudioObject02;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject AudioObject03;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject AudioObject04;

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x8BC08C", Offset = "0x8BC08C", VA = "0x8BC08C")]
	private void Start()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x8BC148", Offset = "0x8BC148", VA = "0x8BC148")]
	private void Update()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x8BC1B0", Offset = "0x8BC1B0", VA = "0x8BC1B0")]
	public void OnPointerEnter()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x8BC27C", Offset = "0x8BC27C", VA = "0x8BC27C")]
	public void PlayButtonSound_Select()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x8BC348", Offset = "0x8BC348", VA = "0x8BC348")]
	public void PlayButtonSound_Yes()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x8BC414", Offset = "0x8BC414", VA = "0x8BC414")]
	public void PlayButtonSound_No()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x8BC4E0", Offset = "0x8BC4E0", VA = "0x8BC4E0")]
	public void Haptics_MagatamaSet()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x8B8BB8", Offset = "0x8B8BB8", VA = "0x8B8BB8")]
	public void Haptics_Damage()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x8BC568", Offset = "0x8BC568", VA = "0x8BC568")]
	public PointerManager()
	{
	}
}
[Token(Token = "0x200012C")]
public class IPManager
{
	[Token(Token = "0x6000677")]
	[Address(RVA = "0x81FAD4", Offset = "0x81FAD4", VA = "0x81FAD4")]
	public static string GetIP(ADDRESSFAM Addfam)
	{
		return null;
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x81FF18", Offset = "0x81FF18", VA = "0x81FF18")]
	public static string GetMac(ADDRESSFAM Addfam)
	{
		return null;
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x820530", Offset = "0x820530", VA = "0x820530")]
	public IPManager()
	{
	}
}
[Token(Token = "0x200012D")]
public enum ADDRESSFAM
{
	[Token(Token = "0x400095C")]
	IPv4,
	[Token(Token = "0x400095D")]
	IPv6
}
[Token(Token = "0x200012E")]
internal class PlayerInfoMessage : MessageBase
{
	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int type;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x8BA5B4", Offset = "0x8BA5B4", VA = "0x8BA5B4")]
	public PlayerInfoMessage()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x8BA5BC", Offset = "0x8BA5BC", VA = "0x8BA5BC", Slot = "5")]
	public override void Serialize(NetworkWriter writer)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x8BA5F4", Offset = "0x8BA5F4", VA = "0x8BA5F4", Slot = "4")]
	public override void Deserialize(NetworkReader reader)
	{
	}
}
[Token(Token = "0x200012F")]
public class MyNetworkManager3 : NetworkManager
{
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6660D4", Offset = "0x6660D4")]
	private sealed class <SetingWait>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyNetworkManager3 <>4__this;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string clientMAC;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NetworkConnection conn;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0x943DE8", Offset = "0x943DE8", VA = "0x943DE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0x943E58", Offset = "0x943E58", VA = "0x943E58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x942128", Offset = "0x942128", VA = "0x942128")]
		[DebuggerHidden]
		public <SetingWait>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x943B4C", Offset = "0x943B4C", VA = "0x943B4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x943B50", Offset = "0x943B50", VA = "0x943B50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x943DF0", Offset = "0x943DF0", VA = "0x943DF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6660E4", Offset = "0x6660E4")]
	private sealed class <RecenterWait>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int playerNum;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000696")]
			[Address(RVA = "0x943AD4", Offset = "0x943AD4", VA = "0x943AD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000698")]
			[Address(RVA = "0x943B44", Offset = "0x943B44", VA = "0x943B44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x942C34", Offset = "0x942C34", VA = "0x942C34")]
		[DebuggerHidden]
		public <RecenterWait>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x943924", Offset = "0x943924", VA = "0x943924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x943928", Offset = "0x943928", VA = "0x943928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x943ADC", Offset = "0x943ADC", VA = "0x943ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6660F4", Offset = "0x6660F4")]
	private sealed class <ClientLogoutWait>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyNetworkManager3 <>4__this;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600069C")]
			[Address(RVA = "0x9438AC", Offset = "0x9438AC", VA = "0x9438AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0x94391C", Offset = "0x94391C", VA = "0x94391C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x943600", Offset = "0x943600", VA = "0x943600")]
		[DebuggerHidden]
		public <ClientLogoutWait>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x943744", Offset = "0x943744", VA = "0x943744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x943748", Offset = "0x943748", VA = "0x943748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x9438B4", Offset = "0x9438B4", VA = "0x9438B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666104", Offset = "0x666104")]
	private sealed class <Wait>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyNetworkManager3 <>4__this;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A2")]
			[Address(RVA = "0x943F2C", Offset = "0x943F2C", VA = "0x943F2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A4")]
			[Address(RVA = "0x943F9C", Offset = "0x943F9C", VA = "0x943F9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x9436A0", Offset = "0x9436A0", VA = "0x9436A0")]
		[DebuggerHidden]
		public <Wait>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x943E60", Offset = "0x943E60", VA = "0x943E60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x943E64", Offset = "0x943E64", VA = "0x943E64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x943F34", Offset = "0x943F34", VA = "0x943F34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject server_Init_obj;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Server_Init server_Init;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject server_Init_Net_obj;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private NetSyncValue server_Init_Net;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject server_Init_Net_obj2;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private NetSyncValue2 server_Init_Net2;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private GameObject m_PlayerPrefab01;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject m_PlayerPrefab02;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private GameObject m_PlayerPrefab03;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject m_PlayerPrefab04;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject DestroyObj;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject changeTargetManager_obj;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int flag_restart;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private string PLAYERNUMBER_FILE;

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x941EA4", Offset = "0x941EA4", VA = "0x941EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x942024", Offset = "0x942024", VA = "0x942024", Slot = "23")]
	public override void OnStartClient(NetworkClient client)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x94202C", Offset = "0x94202C", VA = "0x94202C", Slot = "16")]
	public override void OnClientConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x94207C", Offset = "0x94207C", VA = "0x94207C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674280", Offset = "0x674280")]
	private IEnumerator SetingWait(string clientMAC, NetworkConnection conn)
	{
		return null;
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x942154", Offset = "0x942154", VA = "0x942154", Slot = "22")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x942368", Offset = "0x942368", VA = "0x942368", Slot = "19")]
	public override void OnClientNotReady(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x942220", Offset = "0x942220", VA = "0x942220")]
	public void ServerNameSelect()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x94236C", Offset = "0x94236C", VA = "0x94236C", Slot = "11")]
	public override void OnServerAddPlayer(NetworkConnection conn, short playerControllerId, NetworkReader extraMessageReader)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x942A88", Offset = "0x942A88", VA = "0x942A88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6742E4", Offset = "0x6742E4")]
	private IEnumerator RecenterWait(int playerNum)
	{
		return null;
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x942C60", Offset = "0x942C60", VA = "0x942C60", Slot = "17")]
	public override void OnClientDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x942E0C", Offset = "0x942E0C", VA = "0x942E0C", Slot = "9")]
	public override void OnServerDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x943558", Offset = "0x943558", VA = "0x943558")]
	public void sceneReload()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x94358C", Offset = "0x94358C", VA = "0x94358C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674348", Offset = "0x674348")]
	private IEnumerator ClientLogoutWait()
	{
		return null;
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x942D64", Offset = "0x942D64", VA = "0x942D64")]
	public void ResetServer()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x94362C", Offset = "0x94362C", VA = "0x94362C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6743AC", Offset = "0x6743AC")]
	private IEnumerator Wait()
	{
		return null;
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x9436CC", Offset = "0x9436CC", VA = "0x9436CC")]
	public MyNetworkManager3()
	{
	}
}
[Token(Token = "0x2000134")]
public class MyNetworkManagerHUD3 : MonoBehaviour
{
	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666114", Offset = "0x666114")]
	private sealed class <StartServerWait>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyNetworkManagerHUD3 <>4__this;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0x945CC8", Offset = "0x945CC8", VA = "0x945CC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006CA")]
			[Address(RVA = "0x945D38", Offset = "0x945D38", VA = "0x945D38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x944248", Offset = "0x944248", VA = "0x944248")]
		[DebuggerHidden]
		public <StartServerWait>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x945B74", Offset = "0x945B74", VA = "0x945B74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x945B78", Offset = "0x945B78", VA = "0x945B78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x945CD0", Offset = "0x945CD0", VA = "0x945CD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666124", Offset = "0x666124")]
	private sealed class <StartCliantWait>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyNetworkManagerHUD3 <>4__this;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0x945AFC", Offset = "0x945AFC", VA = "0x945AFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0x945B6C", Offset = "0x945B6C", VA = "0x945B6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x944274", Offset = "0x944274", VA = "0x944274")]
		[DebuggerHidden]
		public <StartCliantWait>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x9458A8", Offset = "0x9458A8", VA = "0x9458A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x9458AC", Offset = "0x9458AC", VA = "0x9458AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x945B04", Offset = "0x945B04", VA = "0x945B04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666134", Offset = "0x666134")]
	private sealed class <PlayerLoginWait>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyNetworkManagerHUD3 <>4__this;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <PlayerNo>5__2;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0x9456E8", Offset = "0x9456E8", VA = "0x9456E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0x945758", Offset = "0x945758", VA = "0x945758", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x944314", Offset = "0x944314", VA = "0x944314")]
		[DebuggerHidden]
		public <PlayerLoginWait>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x9455D4", Offset = "0x9455D4", VA = "0x9455D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x9455D8", Offset = "0x9455D8", VA = "0x9455D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x9456F0", Offset = "0x9456F0", VA = "0x9456F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666144", Offset = "0x666144")]
	private sealed class <ConnectCliantWait>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyNetworkManagerHUD3 <>4__this;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x94555C", Offset = "0x94555C", VA = "0x94555C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x9455CC", Offset = "0x9455CC", VA = "0x9455CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x944748", Offset = "0x944748", VA = "0x944748")]
		[DebuggerHidden]
		public <ConnectCliantWait>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x945294", Offset = "0x945294", VA = "0x945294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x945298", Offset = "0x945298", VA = "0x945298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x945564", Offset = "0x945564", VA = "0x945564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000139")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666154", Offset = "0x666154")]
	private sealed class <ConnectCliantWait2>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyNetworkManagerHUD3 <>4__this;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x94521C", Offset = "0x94521C", VA = "0x94521C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E2")]
			[Address(RVA = "0x94528C", Offset = "0x94528C", VA = "0x94528C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x944F8C", Offset = "0x944F8C", VA = "0x944F8C")]
		[DebuggerHidden]
		public <ConnectCliantWait2>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x9450C8", Offset = "0x9450C8", VA = "0x9450C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x9450CC", Offset = "0x9450CC", VA = "0x9450CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x945224", Offset = "0x945224", VA = "0x945224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666164", Offset = "0x666164")]
	private sealed class <RestartWait>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyNetworkManagerHUD3 <>4__this;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E6")]
			[Address(RVA = "0x945830", Offset = "0x945830", VA = "0x945830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E8")]
			[Address(RVA = "0x9458A0", Offset = "0x9458A0", VA = "0x9458A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x94502C", Offset = "0x94502C", VA = "0x94502C")]
		[DebuggerHidden]
		public <RestartWait>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x945760", Offset = "0x945760", VA = "0x945760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x945764", Offset = "0x945764", VA = "0x945764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x945838", Offset = "0x945838", VA = "0x945838", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject server_Init_obj;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Server_Init server_Init;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject server_Init_Net_obj;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NetSyncValue server_Init_Net;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject server_Init_Net_obj2;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NetSyncValue2 server_Init_Net2;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string Save_BoothIP_text;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject oculusReCenter_obj;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OculusReCenter oculusReCenter;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CalibrateAvatar calibrateAvatar;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject HMD_Menu_obj;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject canvasHMD_Login_obj;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public MenuButtonManager_HMD menuButtonManager_HMD;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public MenuButtonManager menuButtonManager;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float waitTime;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Debug_ClientPlay debug_ClientPlay;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string ACCESSIP_FILE;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float passTime;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x943FA4", Offset = "0x943FA4", VA = "0x943FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x944134", Offset = "0x944134", VA = "0x944134")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x9441D4", Offset = "0x9441D4", VA = "0x9441D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674550", Offset = "0x674550")]
	private IEnumerator StartServerWait()
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x9440C0", Offset = "0x9440C0", VA = "0x9440C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6745B4", Offset = "0x6745B4")]
	private IEnumerator StartCliantWait()
	{
		return null;
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x9442A0", Offset = "0x9442A0", VA = "0x9442A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674618", Offset = "0x674618")]
	private IEnumerator PlayerLoginWait()
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x944340", Offset = "0x944340", VA = "0x944340")]
	public void OnServerButtonClicked()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x94448C", Offset = "0x94448C", VA = "0x94448C")]
	public void OnHostButtonClicked()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x944554", Offset = "0x944554", VA = "0x944554")]
	public void OnStopServerButtonClicked()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x9446A8", Offset = "0x9446A8", VA = "0x9446A8")]
	public void ServerConnect_Sub(int PlayerNo)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x9446D4", Offset = "0x9446D4", VA = "0x9446D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x67467C", Offset = "0x67467C")]
	private IEnumerator ConnectCliantWait(int PlayerNo)
	{
		return null;
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x944774", Offset = "0x944774", VA = "0x944774")]
	public void OnDisconnectButtonClicked()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x9447F0", Offset = "0x9447F0", VA = "0x9447F0")]
	public void ServerConnect(string iptext)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x9448C0", Offset = "0x9448C0", VA = "0x9448C0")]
	public void OnReconnectButtonClicked()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x94499C", Offset = "0x94499C", VA = "0x94499C")]
	public void OnSendReCenterClicked_01()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x944AD8", Offset = "0x944AD8", VA = "0x944AD8")]
	public void OnSendReCenterClicked_02()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x944B4C", Offset = "0x944B4C", VA = "0x944B4C")]
	public void OnSendReCenterClicked_03()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x944BC0", Offset = "0x944BC0", VA = "0x944BC0")]
	public void OnSendReCenterClicked_04()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x943A08", Offset = "0x943A08", VA = "0x943A08")]
	public void SendAutoReCenter(int connectListNum)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x944A0C", Offset = "0x944A0C", VA = "0x944A0C")]
	public void SendReCenterCommand(int connectListNum)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x944CD0", Offset = "0x944CD0", VA = "0x944CD0")]
	public void OnSendReCenterClicked_ALL()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x944D04", Offset = "0x944D04", VA = "0x944D04")]
	public void SendSaveRecenterFlag(int connectListNum)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x944DD0", Offset = "0x944DD0", VA = "0x944DD0")]
	public void OnSendReSizeClicked_01()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x944EA4", Offset = "0x944EA4", VA = "0x944EA4")]
	public void OnSendReSizeClicked_02()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x944EAC", Offset = "0x944EAC", VA = "0x944EAC")]
	public void OnSendReSizeClicked_03()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x944EB4", Offset = "0x944EB4", VA = "0x944EB4")]
	public void OnSendReSizeClicked_04()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x944DD8", Offset = "0x944DD8", VA = "0x944DD8")]
	public void SendReSizeCommand(int connectListNum)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x944EBC", Offset = "0x944EBC", VA = "0x944EBC")]
	public void OnSendReSizeClicked_ALL()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x944EEC", Offset = "0x944EEC", VA = "0x944EEC")]
	public void OnStartClient_01_debug(int PlayerNo)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x944F18", Offset = "0x944F18", VA = "0x944F18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6746E0", Offset = "0x6746E0")]
	private IEnumerator ConnectCliantWait2(int PlayerNo)
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x944C34", Offset = "0x944C34", VA = "0x944C34")]
	private int PlayerOrder(int connectListNum)
	{
		return default(int);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x944FB8", Offset = "0x944FB8", VA = "0x944FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674744", Offset = "0x674744")]
	private IEnumerator RestartWait()
	{
		return null;
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x945058", Offset = "0x945058", VA = "0x945058")]
	public MyNetworkManagerHUD3()
	{
	}
}
[Token(Token = "0x200013B")]
public class NetSyncValue : NetworkBehaviour
{
	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Server_Init server_Init;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SyncVar]
	public int Init_GameStatusFlag;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SyncVar]
	public int Init_CurseAnimeFlag;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SyncVar]
	public int Init_SealedAnimeFlag;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SyncVar]
	public int Init_Player_Number;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public int Init_Player_Total;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SyncVar]
	public int Init_Player_RenameNumber;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	public int rename_player1;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SyncVar]
	public int rename_player2;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	public int rename_player3;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SyncVar]
	public int rename_player4;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SyncVar]
	public int login_player1;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SyncVar]
	public int login_player2;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar]
	public int login_player3;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SyncVar]
	public int login_player4;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SyncVar]
	public float battery_HMD_PL1;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SyncVar]
	public float battery_Controller_L_PL1;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SyncVar]
	public float battery_Controller_R_PL1;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SyncVar]
	public float battery_HMD_PL2;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SyncVar]
	public float battery_Controller_L_PL2;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SyncVar]
	public float battery_Controller_R_PL2;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SyncVar]
	public float battery_HMD_PL3;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SyncVar]
	public float battery_Controller_L_PL3;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SyncVar]
	public float battery_Controller_R_PL3;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SyncVar]
	public float battery_HMD_PL4;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SyncVar]
	public float battery_Controller_L_PL4;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SyncVar]
	public float battery_Controller_R_PL4;

	[Token(Token = "0x17000088")]
	public int NetworkInit_GameStatusFlag
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x94C144", Offset = "0x94C144", VA = "0x94C144")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x94C070", Offset = "0x94C070", VA = "0x94C070")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public int NetworkInit_CurseAnimeFlag
	{
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x94C14C", Offset = "0x94C14C", VA = "0x94C14C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x94C154", Offset = "0x94C154", VA = "0x94C154")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public int NetworkInit_SealedAnimeFlag
	{
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x94C1BC", Offset = "0x94C1BC", VA = "0x94C1BC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x94C1C4", Offset = "0x94C1C4", VA = "0x94C1C4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public int NetworkInit_Player_Number
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x94C22C", Offset = "0x94C22C", VA = "0x94C22C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x9429B8", Offset = "0x9429B8", VA = "0x9429B8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public int NetworkInit_Player_Total
	{
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x94C234", Offset = "0x94C234", VA = "0x94C234")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x943350", Offset = "0x943350", VA = "0x943350")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public int NetworkInit_Player_RenameNumber
	{
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x94C23C", Offset = "0x94C23C", VA = "0x94C23C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x942950", Offset = "0x942950", VA = "0x942950")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public int Networkrename_player1
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x94C244", Offset = "0x94C244", VA = "0x94C244")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x94C24C", Offset = "0x94C24C", VA = "0x94C24C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public int Networkrename_player2
	{
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x94C2B4", Offset = "0x94C2B4", VA = "0x94C2B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x94C2BC", Offset = "0x94C2BC", VA = "0x94C2BC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public int Networkrename_player3
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x94C324", Offset = "0x94C324", VA = "0x94C324")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x94C32C", Offset = "0x94C32C", VA = "0x94C32C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public int Networkrename_player4
	{
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x94C394", Offset = "0x94C394", VA = "0x94C394")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x94C39C", Offset = "0x94C39C", VA = "0x94C39C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public int Networklogin_player1
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x94C404", Offset = "0x94C404", VA = "0x94C404")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x9433B8", Offset = "0x9433B8", VA = "0x9433B8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public int Networklogin_player2
	{
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x94C40C", Offset = "0x94C40C", VA = "0x94C40C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000703")]
		[Address(RVA = "0x943420", Offset = "0x943420", VA = "0x943420")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public int Networklogin_player3
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0x94C414", Offset = "0x94C414", VA = "0x94C414")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x943488", Offset = "0x943488", VA = "0x943488")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public int Networklogin_player4
	{
		[Token(Token = "0x6000706")]
		[Address(RVA = "0x94C41C", Offset = "0x94C41C", VA = "0x94C41C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x9434F0", Offset = "0x9434F0", VA = "0x9434F0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float Networkbattery_HMD_PL1
	{
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x94C424", Offset = "0x94C424", VA = "0x94C424")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000709")]
		[Address(RVA = "0x94C42C", Offset = "0x94C42C", VA = "0x94C42C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float Networkbattery_Controller_L_PL1
	{
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x94C494", Offset = "0x94C494", VA = "0x94C494")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600070B")]
		[Address(RVA = "0x94C49C", Offset = "0x94C49C", VA = "0x94C49C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public float Networkbattery_Controller_R_PL1
	{
		[Token(Token = "0x600070C")]
		[Address(RVA = "0x94C504", Offset = "0x94C504", VA = "0x94C504")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x94C50C", Offset = "0x94C50C", VA = "0x94C50C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public float Networkbattery_HMD_PL2
	{
		[Token(Token = "0x600070E")]
		[Address(RVA = "0x94C574", Offset = "0x94C574", VA = "0x94C574")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600070F")]
		[Address(RVA = "0x94C57C", Offset = "0x94C57C", VA = "0x94C57C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public float Networkbattery_Controller_L_PL2
	{
		[Token(Token = "0x6000710")]
		[Address(RVA = "0x94C5E4", Offset = "0x94C5E4", VA = "0x94C5E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x94C5EC", Offset = "0x94C5EC", VA = "0x94C5EC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public float Networkbattery_Controller_R_PL2
	{
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x94C654", Offset = "0x94C654", VA = "0x94C654")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x94C65C", Offset = "0x94C65C", VA = "0x94C65C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public float Networkbattery_HMD_PL3
	{
		[Token(Token = "0x6000714")]
		[Address(RVA = "0x94C6C4", Offset = "0x94C6C4", VA = "0x94C6C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000715")]
		[Address(RVA = "0x94C6CC", Offset = "0x94C6CC", VA = "0x94C6CC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public float Networkbattery_Controller_L_PL3
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x94C734", Offset = "0x94C734", VA = "0x94C734")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x94C73C", Offset = "0x94C73C", VA = "0x94C73C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public float Networkbattery_Controller_R_PL3
	{
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x94C7A4", Offset = "0x94C7A4", VA = "0x94C7A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x94C7AC", Offset = "0x94C7AC", VA = "0x94C7AC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public float Networkbattery_HMD_PL4
	{
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x94C814", Offset = "0x94C814", VA = "0x94C814")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x94C81C", Offset = "0x94C81C", VA = "0x94C81C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public float Networkbattery_Controller_L_PL4
	{
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x94C884", Offset = "0x94C884", VA = "0x94C884")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x94C88C", Offset = "0x94C88C", VA = "0x94C88C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public float Networkbattery_Controller_R_PL4
	{
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x94C8F4", Offset = "0x94C8F4", VA = "0x94C8F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x94C8FC", Offset = "0x94C8FC", VA = "0x94C8FC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x94C06C", Offset = "0x94C06C", VA = "0x94C06C")]
	public void GameStatusFlagChange(int states)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x94C0D8", Offset = "0x94C0D8", VA = "0x94C0D8")]
	public NetSyncValue()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x94C140", Offset = "0x94C140", VA = "0x94C140")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x94C964", Offset = "0x94C964", VA = "0x94C964", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x94D870", Offset = "0x94D870", VA = "0x94D870", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200013C")]
public class NetSyncValue2 : NetworkBehaviour
{
	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject server_Init_obj;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Server_Init server_Init;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SyncVar]
	public float Player1_HMD_Move_PosX;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SyncVar]
	public float Player1_HMD_Move_PosZ;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public float Player1_HMD_Move_RotY;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SyncVar]
	public float Player2_HMD_Move_PosX;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	public float Player2_HMD_Move_PosZ;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SyncVar]
	public float Player2_HMD_Move_RotY;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	public float Player3_HMD_Move_PosX;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SyncVar]
	public float Player3_HMD_Move_PosZ;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SyncVar]
	public float Player3_HMD_Move_RotY;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SyncVar]
	public float Player4_HMD_Move_PosX;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar]
	public float Player4_HMD_Move_PosZ;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SyncVar]
	public float Player4_HMD_Move_RotY;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SyncVar]
	public int AvatarResizeStatus_Player1;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SyncVar]
	public int AvatarResizeStatus_Player2;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SyncVar]
	public int AvatarResizeStatus_Player3;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SyncVar]
	public int AvatarResizeStatus_Player4;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SyncVar]
	public int MagatamaOnFlag;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SyncVar]
	public int Player01_Status;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SyncVar]
	public int Player02_Status;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SyncVar]
	public int Player03_Status;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SyncVar]
	public int Player04_Status;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SyncVar]
	public string ClientMacAddress1;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SyncVar]
	public string ClientMacAddress2;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SyncVar]
	public string ClientMacAddress3;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SyncVar]
	public string ClientMacAddress4;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SyncVar]
	public int LoginOrder1;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SyncVar]
	public int LoginOrder2;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SyncVar]
	public int LoginOrder3;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SyncVar]
	public int LoginOrder4;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SyncVar]
	public int SetingOK;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int[] DefaultPlayerNo;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string[] MacAddreslist;

	[Token(Token = "0x170000A2")]
	public float NetworkPlayer1_HMD_Move_PosX
	{
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x94E780", Offset = "0x94E780", VA = "0x94E780")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x94E21C", Offset = "0x94E21C", VA = "0x94E21C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public float NetworkPlayer1_HMD_Move_PosZ
	{
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x94E788", Offset = "0x94E788", VA = "0x94E788")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x94E284", Offset = "0x94E284", VA = "0x94E284")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public float NetworkPlayer1_HMD_Move_RotY
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x94E790", Offset = "0x94E790", VA = "0x94E790")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x94E2EC", Offset = "0x94E2EC", VA = "0x94E2EC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public float NetworkPlayer2_HMD_Move_PosX
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x94E798", Offset = "0x94E798", VA = "0x94E798")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x94E354", Offset = "0x94E354", VA = "0x94E354")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public float NetworkPlayer2_HMD_Move_PosZ
	{
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x94E7A0", Offset = "0x94E7A0", VA = "0x94E7A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x94E3BC", Offset = "0x94E3BC", VA = "0x94E3BC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public float NetworkPlayer2_HMD_Move_RotY
	{
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x94E7A8", Offset = "0x94E7A8", VA = "0x94E7A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x94E424", Offset = "0x94E424", VA = "0x94E424")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public float NetworkPlayer3_HMD_Move_PosX
	{
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x94E7B0", Offset = "0x94E7B0", VA = "0x94E7B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x94E48C", Offset = "0x94E48C", VA = "0x94E48C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public float NetworkPlayer3_HMD_Move_PosZ
	{
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x94E7B8", Offset = "0x94E7B8", VA = "0x94E7B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x94E4F4", Offset = "0x94E4F4", VA = "0x94E4F4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public float NetworkPlayer3_HMD_Move_RotY
	{
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x94E7C0", Offset = "0x94E7C0", VA = "0x94E7C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x94E55C", Offset = "0x94E55C", VA = "0x94E55C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public float NetworkPlayer4_HMD_Move_PosX
	{
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x94E7C8", Offset = "0x94E7C8", VA = "0x94E7C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x94E5C4", Offset = "0x94E5C4", VA = "0x94E5C4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public float NetworkPlayer4_HMD_Move_PosZ
	{
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x94E7D0", Offset = "0x94E7D0", VA = "0x94E7D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x94E62C", Offset = "0x94E62C", VA = "0x94E62C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public float NetworkPlayer4_HMD_Move_RotY
	{
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x94E7D8", Offset = "0x94E7D8", VA = "0x94E7D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x94E694", Offset = "0x94E694", VA = "0x94E694")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public int NetworkAvatarResizeStatus_Player1
	{
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x94E7E0", Offset = "0x94E7E0", VA = "0x94E7E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x94E7E8", Offset = "0x94E7E8", VA = "0x94E7E8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public int NetworkAvatarResizeStatus_Player2
	{
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x94E850", Offset = "0x94E850", VA = "0x94E850")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x94E858", Offset = "0x94E858", VA = "0x94E858")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public int NetworkAvatarResizeStatus_Player3
	{
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x94E8C0", Offset = "0x94E8C0", VA = "0x94E8C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x94E8C8", Offset = "0x94E8C8", VA = "0x94E8C8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public int NetworkAvatarResizeStatus_Player4
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0x94E930", Offset = "0x94E930", VA = "0x94E930")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000744")]
		[Address(RVA = "0x94E938", Offset = "0x94E938", VA = "0x94E938")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public int NetworkMagatamaOnFlag
	{
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x94E9A0", Offset = "0x94E9A0", VA = "0x94E9A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x94E9A8", Offset = "0x94E9A8", VA = "0x94E9A8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public int NetworkPlayer01_Status
	{
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x94EA10", Offset = "0x94EA10", VA = "0x94EA10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x94EA18", Offset = "0x94EA18", VA = "0x94EA18")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public int NetworkPlayer02_Status
	{
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x94EA80", Offset = "0x94EA80", VA = "0x94EA80")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600074A")]
		[Address(RVA = "0x94EA88", Offset = "0x94EA88", VA = "0x94EA88")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public int NetworkPlayer03_Status
	{
		[Token(Token = "0x600074B")]
		[Address(RVA = "0x94EAF0", Offset = "0x94EAF0", VA = "0x94EAF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600074C")]
		[Address(RVA = "0x94EAF8", Offset = "0x94EAF8", VA = "0x94EAF8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public int NetworkPlayer04_Status
	{
		[Token(Token = "0x600074D")]
		[Address(RVA = "0x94EB60", Offset = "0x94EB60", VA = "0x94EB60")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x94EB68", Offset = "0x94EB68", VA = "0x94EB68")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public string NetworkClientMacAddress1
	{
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x94EBD0", Offset = "0x94EBD0", VA = "0x94EBD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x94EBD8", Offset = "0x94EBD8", VA = "0x94EBD8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public string NetworkClientMacAddress2
	{
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x94EC40", Offset = "0x94EC40", VA = "0x94EC40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000752")]
		[Address(RVA = "0x94EC48", Offset = "0x94EC48", VA = "0x94EC48")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public string NetworkClientMacAddress3
	{
		[Token(Token = "0x6000753")]
		[Address(RVA = "0x94ECB0", Offset = "0x94ECB0", VA = "0x94ECB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000754")]
		[Address(RVA = "0x94ECB8", Offset = "0x94ECB8", VA = "0x94ECB8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public string NetworkClientMacAddress4
	{
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x94ED20", Offset = "0x94ED20", VA = "0x94ED20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000756")]
		[Address(RVA = "0x94ED28", Offset = "0x94ED28", VA = "0x94ED28")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public int NetworkLoginOrder1
	{
		[Token(Token = "0x6000757")]
		[Address(RVA = "0x94ED90", Offset = "0x94ED90", VA = "0x94ED90")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000758")]
		[Address(RVA = "0x942A20", Offset = "0x942A20", VA = "0x942A20")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public int NetworkLoginOrder2
	{
		[Token(Token = "0x6000759")]
		[Address(RVA = "0x94ED98", Offset = "0x94ED98", VA = "0x94ED98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600075A")]
		[Address(RVA = "0x942AFC", Offset = "0x942AFC", VA = "0x942AFC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public int NetworkLoginOrder3
	{
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x94EDA0", Offset = "0x94EDA0", VA = "0x94EDA0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600075C")]
		[Address(RVA = "0x942B64", Offset = "0x942B64", VA = "0x942B64")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public int NetworkLoginOrder4
	{
		[Token(Token = "0x600075D")]
		[Address(RVA = "0x94EDA8", Offset = "0x94EDA8", VA = "0x94EDA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600075E")]
		[Address(RVA = "0x942BCC", Offset = "0x942BCC", VA = "0x942BCC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public int NetworkSetingOK
	{
		[Token(Token = "0x600075F")]
		[Address(RVA = "0x94EDB0", Offset = "0x94EDB0", VA = "0x94EDB0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000760")]
		[Address(RVA = "0x94EDB8", Offset = "0x94EDB8", VA = "0x94EDB8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x94E034", Offset = "0x94E034", VA = "0x94E034")]
	[ServerCallback]
	private void Start()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x94E6FC", Offset = "0x94E6FC", VA = "0x94E6FC")]
	public NetSyncValue2()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x94E77C", Offset = "0x94E77C", VA = "0x94E77C")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x94EE20", Offset = "0x94EE20", VA = "0x94EE20", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x94FF6C", Offset = "0x94FF6C", VA = "0x94FF6C", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200013D")]
public class ObjectInitOff : MonoBehaviour
{
	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xFDA388", Offset = "0xFDA388", VA = "0xFDA388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xFDA410", Offset = "0xFDA410", VA = "0xFDA410")]
	public ObjectInitOff()
	{
	}
}
[Token(Token = "0x200013E")]
public class ObjectInitOff_Net : MonoBehaviour
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xFDA470", Offset = "0xFDA470", VA = "0xFDA470")]
	public void ObjectOff_Net()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xFDA4F8", Offset = "0xFDA4F8", VA = "0xFDA4F8")]
	public ObjectInitOff_Net()
	{
	}
}
[Token(Token = "0x200013F")]
public class ObjectName : MonoBehaviour
{
	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _name;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string _tag;

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xFDA558", Offset = "0xFDA558", VA = "0xFDA558")]
	public static ObjectName AddObjectName(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xFDA694", Offset = "0xFDA694", VA = "0xFDA694")]
	private void Start()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xFDA6FC", Offset = "0xFDA6FC", VA = "0xFDA6FC")]
	public ObjectName()
	{
	}
}
[Token(Token = "0x2000140")]
public class PlatformSwitch : MonoBehaviour
{
	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PC_Build;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Android_Build;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x8B7D70", Offset = "0x8B7D70", VA = "0x8B7D70")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x8B7DA4", Offset = "0x8B7DA4", VA = "0x8B7DA4")]
	public PlatformSwitch()
	{
	}
}
[Token(Token = "0x2000141")]
public class PlayerLocationChecker : NetworkBehaviour
{
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject SyncVarManager;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string SyncVarManager_ObjName;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int LastMap;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int NewMap;

	[Token(Token = "0x40009E8")]
	private const string MapName01 = "MapJudge_MapA";

	[Token(Token = "0x40009E9")]
	private const string MapName02 = "MapJudge_MapB";

	[Token(Token = "0x40009EA")]
	private const string MapName03 = "MapJudge_MapC";

	[Token(Token = "0x40009EB")]
	private const string MapName04 = "MapJudge_MapD01";

	[Token(Token = "0x40009EC")]
	private const string MapName05 = "MapJudge_MapD02";

	[Token(Token = "0x40009ED")]
	private const string MapName06 = "MapJudge_MapE";

	[Token(Token = "0x40009EE")]
	private const string MapName07 = "MapJudge_MapF01";

	[Token(Token = "0x40009EF")]
	private const string MapName08 = "MapJudge_MapF02";

	[Token(Token = "0x40009F0")]
	private const string MapName09 = "MapJudge_MapG";

	[Token(Token = "0x40009F1")]
	private const string MapName10 = "MapJudge_MapH";

	[Token(Token = "0x40009F2")]
	private const string MapName11 = "MapJudge_MapI";

	[Token(Token = "0x40009F3")]
	private const string MapName12 = "MapJudge_MapJ";

	[Token(Token = "0x40009F4")]
	private const string MapName13 = "MapJudge_Opening";

	[Token(Token = "0x40009F5")]
	private const string MapName14 = "MapJudge_Battle01";

	[Token(Token = "0x40009F6")]
	private const string MapName15 = "MapJudge_Battle02";

	[Token(Token = "0x40009F7")]
	private const string MapName16 = "MapJudge_MapH02";

	[Token(Token = "0x40009F8")]
	private const string MapName00 = "MapJudge_Clear";

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject parent;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kCmdCmd_MapNumberSet;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x8BA630", Offset = "0x8BA630", VA = "0x8BA630")]
	private void Start()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x8BA688", Offset = "0x8BA688", VA = "0x8BA688")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x8BA9F0", Offset = "0x8BA9F0", VA = "0x8BA9F0")]
	private void MapNumberSet_Sub(int newMap_buff)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x8BAD3C", Offset = "0x8BAD3C", VA = "0x8BAD3C")]
	[Command]
	private void Cmd_MapNumberSet(string playerName, int mapNum)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x8BAF3C", Offset = "0x8BAF3C", VA = "0x8BAF3C")]
	public PlayerLocationChecker()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x8BAFB0", Offset = "0x8BAFB0", VA = "0x8BAFB0")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x8BAFB4", Offset = "0x8BAFB4", VA = "0x8BAFB4")]
	protected static void InvokeCmdCmd_MapNumberSet(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x8BAADC", Offset = "0x8BAADC", VA = "0x8BAADC")]
	public void CallCmd_MapNumberSet(string playerName, int mapNum)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x8BB1D0", Offset = "0x8BB1D0", VA = "0x8BB1D0")]
	static PlayerLocationChecker()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x8BB2F0", Offset = "0x8BB2F0", VA = "0x8BB2F0", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x8BB2F8", Offset = "0x8BB2F8", VA = "0x8BB2F8", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000142")]
public class PlayerRename_Client2 : NetworkBehaviour
{
	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject TargetObject1;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject TargetObject2;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject TargetObject3;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject TargetObject4;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string avatarObjName1;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string avatarObjName2;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string avatarObjName3;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string avatarObjName4;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool rename_player1;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool rename_player2;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool rename_player3;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	public bool rename_player4;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private NetworkInstanceId playerNetID;

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x8BB2FC", Offset = "0x8BB2FC", VA = "0x8BB2FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x8BB3FC", Offset = "0x8BB3FC", VA = "0x8BB3FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x8BB6B4", Offset = "0x8BB6B4", VA = "0x8BB6B4")]
	private void getNetID(GameObject target)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x8BB758", Offset = "0x8BB758", VA = "0x8BB758")]
	public PlayerRename_Client2()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x8BB7C0", Offset = "0x8BB7C0", VA = "0x8BB7C0")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x8BB7C4", Offset = "0x8BB7C4", VA = "0x8BB7C4", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x8BB7CC", Offset = "0x8BB7CC", VA = "0x8BB7CC", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000143")]
public class PlayerRename_Server : NetworkBehaviour
{
	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject server_Init_Net_obj;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NetSyncValue server_Init_Net;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject TargetObject1;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string avatarObjName1;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject TargetObject2;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string avatarObjName2;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject TargetObject3;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string avatarObjName3;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject TargetObject4;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string avatarObjName4;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject Raycast_Palyer1;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject Raycast_Palyer2;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject Raycast_Palyer3;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject Raycast_Palyer4;

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x8BB7D0", Offset = "0x8BB7D0", VA = "0x8BB7D0")]
	[ServerCallback]
	private void Start()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x8BB924", Offset = "0x8BB924", VA = "0x8BB924")]
	[ServerCallback]
	private void Update()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x8BBCF8", Offset = "0x8BBCF8", VA = "0x8BBCF8")]
	public PlayerRename_Server()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x8BBD60", Offset = "0x8BBD60", VA = "0x8BBD60")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x8BBD64", Offset = "0x8BBD64", VA = "0x8BBD64", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x8BBD6C", Offset = "0x8BBD6C", VA = "0x8BBD6C", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000144")]
public class PlayerTotalChecker : MonoBehaviour
{
	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject Player1_2;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject Player3_4;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x8BBD70", Offset = "0x8BBD70", VA = "0x8BBD70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x8BBDF4", Offset = "0x8BBDF4", VA = "0x8BBDF4")]
	public PlayerTotalChecker()
	{
	}
}
[Token(Token = "0x2000145")]
public class PreLoadedScene : MonoBehaviour
{
	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isPreLoaded;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<string> PreLoadSceneName;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> isLoadedScene;

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x8BC570", Offset = "0x8BC570", VA = "0x8BC570")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x8BC6F4", Offset = "0x8BC6F4", VA = "0x8BC6F4")]
	public static bool getIsPreLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x8BC75C", Offset = "0x8BC75C", VA = "0x8BC75C")]
	private void SceneUnLoad(Scene loadedScene, LoadSceneMode loadedMode)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x8BC93C", Offset = "0x8BC93C", VA = "0x8BC93C")]
	public PreLoadedScene()
	{
	}
}
[Token(Token = "0x2000146")]
public class RayGizmo : MonoBehaviour
{
	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject laser;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hit_radius;

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xB786D8", Offset = "0xB786D8", VA = "0xB786D8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xB7896C", Offset = "0xB7896C", VA = "0xB7896C")]
	public RayGizmo()
	{
	}
}
[Token(Token = "0x2000147")]
public class RayTriggerOn_Server : MonoBehaviour
{
	[Token(Token = "0x2000148")]
	public enum EventTriggerType
	{
		[Token(Token = "0x4000A38")]
		TRG_Anyone,
		[Token(Token = "0x4000A39")]
		TRG_OnlyMyself
	}

	[Token(Token = "0x2000149")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666174", Offset = "0x666174")]
	private sealed class <startAnime>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RayTriggerOn_Server <>4__this;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0xB79914", Offset = "0xB79914", VA = "0xB79914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0xB79984", Offset = "0xB79984", VA = "0xB79984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xB790A0", Offset = "0xB790A0", VA = "0xB790A0")]
		[DebuggerHidden]
		public <startAnime>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xB791AC", Offset = "0xB791AC", VA = "0xB791AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xB791B0", Offset = "0xB791B0", VA = "0xB791B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xB7991C", Offset = "0xB7991C", VA = "0xB7991C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public LayerMask mask;

	[Token(Token = "0x4000A1F")]
	private const string LayerName = "HitRaycast";

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private EventTriggerType TriggerType;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float DelayTime;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject AnimateObject;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string conditionName;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public GameObject[] AudioObject;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float AfterDelayTime;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public GameObject[] EnableGameObject;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public GameObject[] AudioObject_Delay;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public GameObject[] DestroyGameObject;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool disableCollider;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	private bool destroyMyself;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RaycastHit hit1;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hitHead;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject objname_get;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float maxDistance;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool isRunning;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool triggerOn;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private string EventTitle;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private bool EventCount;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject SyncVarManager;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string SyncVarManager_ObjName;

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xB7897C", Offset = "0xB7897C", VA = "0xB7897C")]
	private void Start()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xB78A5C", Offset = "0xB78A5C", VA = "0xB78A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xB78A6C", Offset = "0xB78A6C", VA = "0xB78A6C")]
	public void RayTriggerCheck()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xB7902C", Offset = "0xB7902C", VA = "0xB7902C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6749C8", Offset = "0x6749C8")]
	private IEnumerator startAnime()
	{
		return null;
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xB790CC", Offset = "0xB790CC", VA = "0xB790CC")]
	public RayTriggerOn_Server()
	{
	}
}
[Token(Token = "0x200014A")]
public class RayTriggerOn_Server_BU : MonoBehaviour
{
	[Token(Token = "0x200014B")]
	public enum EventTriggerType
	{
		[Token(Token = "0x4000A52")]
		TRG_Anyone,
		[Token(Token = "0x4000A53")]
		TRG_OnlyMyself
	}

	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666184", Offset = "0x666184")]
	private sealed class <startAnime>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RayTriggerOn_Server_BU <>4__this;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0xB7A82C", Offset = "0xB7A82C", VA = "0xB7A82C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0xB7A89C", Offset = "0xB7A89C", VA = "0xB7A89C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xB7A0B0", Offset = "0xB7A0B0", VA = "0xB7A0B0")]
		[DebuggerHidden]
		public <startAnime>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xB7A19C", Offset = "0xB7A19C", VA = "0xB7A19C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xB7A1A0", Offset = "0xB7A1A0", VA = "0xB7A1A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xB7A834", Offset = "0xB7A834", VA = "0xB7A834", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public LayerMask mask;

	[Token(Token = "0x4000A3E")]
	private const string LayerName = "HitRaycast";

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private EventTriggerType TriggerType;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float DelayTime;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject AnimateObject;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string conditionName;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public GameObject[] AudioObject;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float AfterDelayTime;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public GameObject[] EnableGameObject;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public GameObject[] AudioObject_Delay;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public GameObject[] DestroyGameObject;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool disableCollider;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	private bool destroyMyself;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RaycastHit hit1;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hitHead;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject objname_get;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float maxDistance;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool isRunning;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool triggerOn;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xB7998C", Offset = "0xB7998C", VA = "0xB7998C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xB79A6C", Offset = "0xB79A6C", VA = "0xB79A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xB79A7C", Offset = "0xB79A7C", VA = "0xB79A7C")]
	public void RayTriggerCheck()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xB7A03C", Offset = "0xB7A03C", VA = "0xB7A03C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674A7C", Offset = "0x674A7C")]
	private IEnumerator startAnime()
	{
		return null;
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xB7A0DC", Offset = "0xB7A0DC", VA = "0xB7A0DC")]
	public RayTriggerOn_Server_BU()
	{
	}
}
[Token(Token = "0x200014D")]
public class ReadConfigFile : MonoBehaviour
{
	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666194", Offset = "0x666194")]
	private sealed class <LoadText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReadConfigFile <>4__this;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0xB7B374", Offset = "0xB7B374", VA = "0xB7B374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0xB7B3E4", Offset = "0xB7B3E4", VA = "0xB7B3E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xB7A944", Offset = "0xB7A944", VA = "0xB7A944")]
		[DebuggerHidden]
		public <LoadText>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xB7A978", Offset = "0xB7A978", VA = "0xB7A978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xB7A97C", Offset = "0xB7A97C", VA = "0xB7A97C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xB7B37C", Offset = "0xB7B37C", VA = "0xB7B37C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject server_Init_obj;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Server_Init server_Init;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject server_Init_obj2;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NetSyncValue2 server_Init2;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextReader txtReader;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string textBuff;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xB7A8A4", Offset = "0xB7A8A4", VA = "0xB7A8A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xB7A8D0", Offset = "0xB7A8D0", VA = "0xB7A8D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674B30", Offset = "0x674B30")]
	private IEnumerator LoadText()
	{
		return null;
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xB7A970", Offset = "0xB7A970", VA = "0xB7A970")]
	public ReadConfigFile()
	{
	}
}
[Token(Token = "0x200014F")]
public class SaveObjName : MonoBehaviour
{
	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Raycast_Palyer1;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Raycast_Palyer2;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Raycast_Palyer3;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Raycast_Palyer4;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Raycast_head;

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xA24570", Offset = "0xA24570", VA = "0xA24570")]
	public SaveObjName()
	{
	}
}
[Token(Token = "0x2000150")]
public class SceneLoader : MonoBehaviour
{
	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<string> LoadSceneName;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ActivateSceneName;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<string> UnloadSceneName;

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xA2468C", Offset = "0xA2468C", VA = "0xA2468C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xA24820", Offset = "0xA24820", VA = "0xA24820")]
	private void LoadedSceneSetActive(Scene loadedScene, LoadSceneMode loadedMode)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xA2486C", Offset = "0xA2486C", VA = "0xA2486C")]
	public SceneLoader()
	{
	}
}
[Token(Token = "0x2000151")]
public class ScrollUv : MonoBehaviour
{
	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeed;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xA24A78", Offset = "0xA24A78", VA = "0xA24A78")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xA24AD0", Offset = "0xA24AD0", VA = "0xA24AD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xA24B88", Offset = "0xA24B88", VA = "0xA24B88")]
	public ScrollUv()
	{
	}
}
[Token(Token = "0x2000152")]
public class Server_Init : MonoBehaviour
{
	[Token(Token = "0x2000153")]
	public class TrackingInformation
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isTrackingEnable;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float lostTime;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isNeedAction;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isNeedClose;

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xA272EC", Offset = "0xA272EC", VA = "0xA272EC")]
		public TrackingInformation()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xA27400", Offset = "0xA27400", VA = "0xA27400")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xA27414", Offset = "0xA27414", VA = "0xA27414")]
		public void TrackingLost()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xA2742C", Offset = "0xA2742C", VA = "0xA2742C")]
		public void TrackingAcquired()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xA2745C", Offset = "0xA2745C", VA = "0xA2745C")]
		public void Update()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xA274A4", Offset = "0xA274A4", VA = "0xA274A4")]
		public bool IsLost()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xA274B4", Offset = "0xA274B4", VA = "0xA274B4")]
		public bool IsNeedAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xA274BC", Offset = "0xA274BC", VA = "0xA274BC")]
		public bool IsNeedClose()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xA274C4", Offset = "0xA274C4", VA = "0xA274C4")]
		public void Closed()
		{
		}
	}

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Init_Booth01IP_text;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Init_Booth02IP_text;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Init_Booth03IP_text;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Init_Booth04IP_text;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Init_ConfigfileEnd;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Init_ConfigfileEnd2;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string Init_thisServer_Name;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string Init_Server01_Name;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string Init_Server02_Name;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string Init_Server03_Name;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string Init_Server04_Name;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int PlayerMyNumber;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int PlayerRetire_buff;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int Int_CustomTimeoutFlag;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int Init_SameMapFlag;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Init_TrgCounter;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int Init_PlayerStatus01_TrgCount;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int Init_PlayerStatus02_TrgCount;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int Init_PlayerStatus03_TrgCount;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int Init_PlayerStatus04_TrgCount;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int LimitTimeFix;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int LimitTimeOnOff;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int TimeStartFlag_Global;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float Player1_HMD_Move_PosX;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float Player1_HMD_Move_PosZ;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float Player1_HMD_Move_RotY;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float Player2_HMD_Move_PosX;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float Player2_HMD_Move_PosZ;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float Player2_HMD_Move_RotY;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float Player3_HMD_Move_PosX;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float Player3_HMD_Move_PosZ;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float Player3_HMD_Move_RotY;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float Player4_HMD_Move_PosX;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float Player4_HMD_Move_PosZ;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float Player4_HMD_Move_RotY;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int AvatarResizeStatus;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int ResizePoseStatus_HandR;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int ResizePoseStatus_HandL;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int ResizePoseStatus_Head;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int Flag_BossSealStart;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int Init_Difficult;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int Init_Debug;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int[] ServerConnectPlayerFlag;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Server_Init server_init;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TrackingInformation[] trackingInformation;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float[] hmdHeight;

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xA27158", Offset = "0xA27158", VA = "0xA27158")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xA27320", Offset = "0xA27320", VA = "0xA27320")]
	public Server_Init()
	{
	}
}
[Token(Token = "0x2000154")]
public class SetMagatamaOn : MonoBehaviour
{
	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject NetSyncValue2_obj;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetSyncValue2_SA netSyncValue2;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PointerManager pointerManager;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject MagatamaObj;

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xA27840", Offset = "0xA27840", VA = "0xA27840")]
	public void MagatamaOn(int setState, bool HapticsOn)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xA27924", Offset = "0xA27924", VA = "0xA27924")]
	public void Rpc_HapticsController()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xA27954", Offset = "0xA27954", VA = "0xA27954")]
	public SetMagatamaOn()
	{
	}
}
[Token(Token = "0x2000155")]
public class SetMagatamaOn_Bridge : MonoBehaviour
{
	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetMagatamaOn setMagatamaOn;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int setState;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public bool HapticsOn;

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xA2795C", Offset = "0xA2795C", VA = "0xA2795C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xA279A4", Offset = "0xA279A4", VA = "0xA279A4")]
	public SetMagatamaOn_Bridge()
	{
	}
}
[Token(Token = "0x2000156")]
public class SetMoviePlane : MonoBehaviour
{
	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject server_Init_obj;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Server_Init server_Init;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MoviePlane1;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MoviePlane2;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject MoviePlane3;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject MoviePlane4;

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xA279AC", Offset = "0xA279AC", VA = "0xA279AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xA27A90", Offset = "0xA27A90", VA = "0xA27A90")]
	public SetMoviePlane()
	{
	}
}
[Token(Token = "0x2000157")]
public class SetWarningWall : MonoBehaviour
{
	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Server_Init server_Init;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject WarningWall01;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject WarningWall02;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject WarningWall03;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject WarningWall04;

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xA27A98", Offset = "0xA27A98", VA = "0xA27A98")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xA27B34", Offset = "0xA27B34", VA = "0xA27B34")]
	public SetWarningWall()
	{
	}
}
[Token(Token = "0x2000158")]
public class ShutdownPlayer : NetworkBehaviour
{
	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject EnableGameobject;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kTargetRpcTarget_Shutdown_TargetPlayer;

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xA2A428", Offset = "0xA2A428", VA = "0xA2A428")]
	[TargetRpc]
	public void Target_Shutdown_TargetPlayer(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xA2A45C", Offset = "0xA2A45C", VA = "0xA2A45C")]
	public ShutdownPlayer()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xA2A4C4", Offset = "0xA2A4C4", VA = "0xA2A4C4")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xA2A4C8", Offset = "0xA2A4C8", VA = "0xA2A4C8")]
	protected static void InvokeRpcTarget_Shutdown_TargetPlayer(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xA2A6AC", Offset = "0xA2A6AC", VA = "0xA2A6AC")]
	public void CallTarget_Shutdown_TargetPlayer(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xA2A8E0", Offset = "0xA2A8E0", VA = "0xA2A8E0")]
	static ShutdownPlayer()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xA2AA00", Offset = "0xA2AA00", VA = "0xA2AA00", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xA2AA08", Offset = "0xA2AA08", VA = "0xA2AA08", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000159")]
public class StopClient : NetworkBehaviour
{
	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kRpcRpcSendStopHost;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xA2B874", Offset = "0xA2B874", VA = "0xA2B874")]
	[ClientRpc]
	public void RpcSendStopHost()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xA2B960", Offset = "0xA2B960", VA = "0xA2B960")]
	public StopClient()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xA2B9C8", Offset = "0xA2B9C8", VA = "0xA2B9C8")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xA2B9CC", Offset = "0xA2B9CC", VA = "0xA2B9CC")]
	protected static void InvokeRpcRpcSendStopHost(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xA2BB80", Offset = "0xA2BB80", VA = "0xA2BB80")]
	public void CallRpcSendStopHost()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xA2BD48", Offset = "0xA2BD48", VA = "0xA2BD48")]
	static StopClient()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xA2BE68", Offset = "0xA2BE68", VA = "0xA2BE68", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xA2BE70", Offset = "0xA2BE70", VA = "0xA2BE70", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200015A")]
public class SyncVarManager : NetworkBehaviour
{
	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SyncVar]
	public int Init_BattleStatusFlag;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SyncVar]
	public int Init_SealedCount;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SyncVar]
	public int Init_BattleSceneFlag;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SyncVar]
	public int PlayerStatus01_MapNumber;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SyncVar]
	public int PlayerStatus02_MapNumber;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SyncVar]
	public int PlayerStatus03_MapNumber;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public int PlayerStatus04_MapNumber;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SyncVar]
	public int PlayerStatus01_Retire;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	public int PlayerStatus02_Retire;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SyncVar]
	public int PlayerStatus03_Retire;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	public int PlayerStatus04_Retire;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SyncVar]
	public int PlayerStatus01_TrgCount;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SyncVar]
	public int PlayerStatus02_TrgCount;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SyncVar]
	public int PlayerStatus03_TrgCount;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar]
	public int PlayerStatus04_TrgCount;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SyncVar]
	public int HitPoint_Boss;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SyncVar]
	public int PlayerStatus01_DeadFlag;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SyncVar]
	public int PlayerStatus02_DeadFlag;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SyncVar]
	public int PlayerStatus03_DeadFlag;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SyncVar]
	public int PlayerStatus04_DeadFlag;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SyncVar]
	public int Ending;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SyncVar]
	public int TimeUpFlag_Global;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SyncVar]
	public float ClearTime;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SyncVar]
	public int VolumeLockFlag;

	[Token(Token = "0x170000C6")]
	public int NetworkInit_BattleStatusFlag
	{
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xA2BF60", Offset = "0xA2BF60", VA = "0xA2BF60")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xA2BE7C", Offset = "0xA2BE7C", VA = "0xA2BE7C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public int NetworkInit_SealedCount
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xA2BF68", Offset = "0xA2BF68", VA = "0xA2BF68")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xA2BF70", Offset = "0xA2BF70", VA = "0xA2BF70")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public int NetworkInit_BattleSceneFlag
	{
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xA2BFD8", Offset = "0xA2BFD8", VA = "0xA2BFD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xA2BFE0", Offset = "0xA2BFE0", VA = "0xA2BFE0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public int NetworkPlayerStatus01_MapNumber
	{
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xA2C048", Offset = "0xA2C048", VA = "0xA2C048")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xA2C050", Offset = "0xA2C050", VA = "0xA2C050")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public int NetworkPlayerStatus02_MapNumber
	{
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xA2C0B8", Offset = "0xA2C0B8", VA = "0xA2C0B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xA2C0C0", Offset = "0xA2C0C0", VA = "0xA2C0C0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public int NetworkPlayerStatus03_MapNumber
	{
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xA2C128", Offset = "0xA2C128", VA = "0xA2C128")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xA2C130", Offset = "0xA2C130", VA = "0xA2C130")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public int NetworkPlayerStatus04_MapNumber
	{
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xA2C198", Offset = "0xA2C198", VA = "0xA2C198")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xA2C1A0", Offset = "0xA2C1A0", VA = "0xA2C1A0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public int NetworkPlayerStatus01_Retire
	{
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xA2C208", Offset = "0xA2C208", VA = "0xA2C208")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xA2C210", Offset = "0xA2C210", VA = "0xA2C210")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public int NetworkPlayerStatus02_Retire
	{
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xA2C278", Offset = "0xA2C278", VA = "0xA2C278")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xA2C280", Offset = "0xA2C280", VA = "0xA2C280")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public int NetworkPlayerStatus03_Retire
	{
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xA2C2E8", Offset = "0xA2C2E8", VA = "0xA2C2E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xA2C2F0", Offset = "0xA2C2F0", VA = "0xA2C2F0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public int NetworkPlayerStatus04_Retire
	{
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xA2C358", Offset = "0xA2C358", VA = "0xA2C358")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xA2C360", Offset = "0xA2C360", VA = "0xA2C360")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public int NetworkPlayerStatus01_TrgCount
	{
		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xA2C3C8", Offset = "0xA2C3C8", VA = "0xA2C3C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xA2C3D0", Offset = "0xA2C3D0", VA = "0xA2C3D0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public int NetworkPlayerStatus02_TrgCount
	{
		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xA2C438", Offset = "0xA2C438", VA = "0xA2C438")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xA2C440", Offset = "0xA2C440", VA = "0xA2C440")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public int NetworkPlayerStatus03_TrgCount
	{
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xA2C4A8", Offset = "0xA2C4A8", VA = "0xA2C4A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xA2C4B0", Offset = "0xA2C4B0", VA = "0xA2C4B0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public int NetworkPlayerStatus04_TrgCount
	{
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xA2C518", Offset = "0xA2C518", VA = "0xA2C518")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xA2C520", Offset = "0xA2C520", VA = "0xA2C520")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public int NetworkHitPoint_Boss
	{
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xA2C588", Offset = "0xA2C588", VA = "0xA2C588")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xA2C590", Offset = "0xA2C590", VA = "0xA2C590")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public int NetworkPlayerStatus01_DeadFlag
	{
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xA2C5F8", Offset = "0xA2C5F8", VA = "0xA2C5F8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xA2C600", Offset = "0xA2C600", VA = "0xA2C600")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public int NetworkPlayerStatus02_DeadFlag
	{
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xA2C668", Offset = "0xA2C668", VA = "0xA2C668")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xA2C670", Offset = "0xA2C670", VA = "0xA2C670")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public int NetworkPlayerStatus03_DeadFlag
	{
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xA2C6D8", Offset = "0xA2C6D8", VA = "0xA2C6D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000800")]
		[Address(RVA = "0xA2C6E0", Offset = "0xA2C6E0", VA = "0xA2C6E0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public int NetworkPlayerStatus04_DeadFlag
	{
		[Token(Token = "0x6000801")]
		[Address(RVA = "0xA2C748", Offset = "0xA2C748", VA = "0xA2C748")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000802")]
		[Address(RVA = "0xA2C750", Offset = "0xA2C750", VA = "0xA2C750")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public int NetworkEnding
	{
		[Token(Token = "0x6000803")]
		[Address(RVA = "0xA2C7B8", Offset = "0xA2C7B8", VA = "0xA2C7B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000804")]
		[Address(RVA = "0xA2C7C0", Offset = "0xA2C7C0", VA = "0xA2C7C0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public int NetworkTimeUpFlag_Global
	{
		[Token(Token = "0x6000805")]
		[Address(RVA = "0xA2C828", Offset = "0xA2C828", VA = "0xA2C828")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000806")]
		[Address(RVA = "0xA2C830", Offset = "0xA2C830", VA = "0xA2C830")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public float NetworkClearTime
	{
		[Token(Token = "0x6000807")]
		[Address(RVA = "0xA2C898", Offset = "0xA2C898", VA = "0xA2C898")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000808")]
		[Address(RVA = "0xA2C8A0", Offset = "0xA2C8A0", VA = "0xA2C8A0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public int NetworkVolumeLockFlag
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0xA2C908", Offset = "0xA2C908", VA = "0xA2C908")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600080A")]
		[Address(RVA = "0xA2C910", Offset = "0xA2C910", VA = "0xA2C910")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xA2BE74", Offset = "0xA2BE74", VA = "0xA2BE74")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xA2BEE4", Offset = "0xA2BEE4", VA = "0xA2BEE4")]
	public SyncVarManager()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xA2BF5C", Offset = "0xA2BF5C", VA = "0xA2BF5C")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xA2C978", Offset = "0xA2C978", VA = "0xA2C978", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xA2D764", Offset = "0xA2D764", VA = "0xA2D764", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200015B")]
public class Test_BattleStart : NetworkBehaviour
{
	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661A4", Offset = "0x6661A4")]
	private sealed class <SceneLoadObject>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Test_BattleStart <>4__this;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int num;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x854950", Offset = "0x854950", VA = "0x854950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x8549C0", Offset = "0x8549C0", VA = "0x8549C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x8537A8", Offset = "0x8537A8", VA = "0x8537A8")]
		[DebuggerHidden]
		public <SceneLoadObject>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x8547B4", Offset = "0x8547B4", VA = "0x8547B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x8547B8", Offset = "0x8547B8", VA = "0x8547B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x854958", Offset = "0x854958", VA = "0x854958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject syncVarManager_obj;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66AD8C", Offset = "0x66AD8C")]
	[SerializeField]
	public GameObject[] EnableGameObject_Server1;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66ADD8", Offset = "0x66ADD8")]
	public GameObject[] EnableGameObject_Server2;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66AE24", Offset = "0x66AE24")]
	[SerializeField]
	public GameObject[] EnableGameObject_Server3;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66AE70", Offset = "0x66AE70")]
	[SerializeField]
	public GameObject[] EnableGameObject_Server4;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66AEBC", Offset = "0x66AEBC")]
	[SerializeField]
	public GameObject[] DisableGameObject_Server;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66AF08", Offset = "0x66AF08")]
	public GameObject[] EnableGameObject_Client;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66AF54", Offset = "0x66AF54")]
	[SerializeField]
	public GameObject[] DisableGameObject_Client;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66AFA0", Offset = "0x66AFA0")]
	public GameObject SceneLoad_Obj1;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject SceneLoad_Obj2;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject SceneLoad_Obj3;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject SceneLoad_Obj4;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float WaitTime;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isRunning;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kRpcRpc_SceneLoad;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kRpcRpc_BattleStart;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x853640", Offset = "0x853640", VA = "0x853640")]
	[Server]
	public void OnTestBattleStart(int num)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x853710", Offset = "0x853710", VA = "0x853710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674C14", Offset = "0x674C14")]
	private IEnumerator SceneLoadObject(int num)
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x8537D4", Offset = "0x8537D4", VA = "0x8537D4")]
	public void ObjectOnOff(int num)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x853D60", Offset = "0x853D60", VA = "0x853D60")]
	[ClientRpc]
	public void Rpc_SceneLoad(int num)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x853DE4", Offset = "0x853DE4", VA = "0x853DE4")]
	[ClientRpc]
	public void Rpc_BattleStart(int num)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x853F78", Offset = "0x853F78", VA = "0x853F78")]
	public Test_BattleStart()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x854058", Offset = "0x854058", VA = "0x854058")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x85405C", Offset = "0x85405C", VA = "0x85405C")]
	protected static void InvokeRpcRpc_SceneLoad(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x85423C", Offset = "0x85423C", VA = "0x85423C")]
	protected static void InvokeRpcRpc_BattleStart(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x85441C", Offset = "0x85441C", VA = "0x85441C")]
	public void CallRpc_SceneLoad(int num)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x853B68", Offset = "0x853B68", VA = "0x853B68")]
	public void CallRpc_BattleStart(int num)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x854614", Offset = "0x854614", VA = "0x854614")]
	static Test_BattleStart()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x8547A8", Offset = "0x8547A8", VA = "0x8547A8", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x8547B0", Offset = "0x8547B0", VA = "0x8547B0", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200015D")]
public class TimelineStarter : MonoBehaviour
{
	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayableDirector playableDirector;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x855E04", Offset = "0x855E04", VA = "0x855E04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x855EA4", Offset = "0x855EA4", VA = "0x855EA4")]
	public TimelineStarter()
	{
	}
}
[Token(Token = "0x200015E")]
public class TimeStartFlagChanger : MonoBehaviour
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Server_Init server_Init;

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x8549C8", Offset = "0x8549C8", VA = "0x8549C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x8549F8", Offset = "0x8549F8", VA = "0x8549F8")]
	public TimeStartFlagChanger()
	{
	}
}
[Token(Token = "0x200015F")]
public class TimeUPManager : NetworkBehaviour
{
	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject server_Init_obj;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Server_Init server_Init;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject syncVarManager_obj;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SyncVarManager syncVarManager;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NetSyncValue netSyncValue;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text textLimitTime01;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text textLimitTime02;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float countTime_global1;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float countTime_global2;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float countTime_buff;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float countTime_Remain1;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float countTime_Remain2;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float countTime_Remain3;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color Black;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color White;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color Red;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject mapObj_HurryUp1;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject mapObj_HurryUp2;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject mapObj_HurryUp3;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int timeUpTask;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool hurryFlag1;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool hurryFlag2;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
	private bool hurryFlag3;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject[] EnableGameObject;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject[] DisableGameObject;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kRpcRpc_mapObj_HurryUpOn;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kRpcRpc_objectOnOff;

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x854A00", Offset = "0x854A00", VA = "0x854A00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x854AB0", Offset = "0x854AB0", VA = "0x854AB0")]
	[ServerCallback]
	private void Update()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x854E78", Offset = "0x854E78", VA = "0x854E78")]
	public void TimeStopCheck()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x854CD8", Offset = "0x854CD8", VA = "0x854CD8")]
	public void TimeCount(int flagIncDec)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x854F30", Offset = "0x854F30", VA = "0x854F30")]
	public void TimeUpCheck()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x855104", Offset = "0x855104", VA = "0x855104")]
	public void TimeUpDisplay_global()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x8556EC", Offset = "0x8556EC", VA = "0x8556EC")]
	[ClientRpc]
	public void Rpc_mapObj_HurryUpOn(int num)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x85575C", Offset = "0x85575C", VA = "0x85575C")]
	[ClientRpc]
	public void Rpc_objectOnOff()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x8553A4", Offset = "0x8553A4", VA = "0x8553A4")]
	public void objectOnOff()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x855760", Offset = "0x855760", VA = "0x855760")]
	public TimeUPManager()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x8558C4", Offset = "0x8558C4", VA = "0x8558C4")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x8558C8", Offset = "0x8558C8", VA = "0x8558C8")]
	protected static void InvokeRpcRpc_mapObj_HurryUpOn(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x855AA8", Offset = "0x855AA8", VA = "0x855AA8")]
	protected static void InvokeRpcRpc_objectOnOff(NetworkBehaviour obj, NetworkReader reader)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x8551AC", Offset = "0x8551AC", VA = "0x8551AC")]
	public void CallRpc_mapObj_HurryUpOn(int num)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x855524", Offset = "0x855524", VA = "0x855524")]
	public void CallRpc_objectOnOff()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x855C64", Offset = "0x855C64", VA = "0x855C64")]
	static TimeUPManager()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x855DF8", Offset = "0x855DF8", VA = "0x855DF8", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x855E00", Offset = "0x855E00", VA = "0x855E00", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000160")]
public class TraceHMD : NetworkBehaviour
{
	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject TargetObject;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string TargetObjectName;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject transformObject;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform myTransform;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform targetTransform;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 targetPos;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 worldAngle;

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x856F40", Offset = "0x856F40", VA = "0x856F40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x856FB8", Offset = "0x856FB8", VA = "0x856FB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x8570B0", Offset = "0x8570B0", VA = "0x8570B0")]
	public TraceHMD()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x857128", Offset = "0x857128", VA = "0x857128")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x85712C", Offset = "0x85712C", VA = "0x85712C", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x857134", Offset = "0x857134", VA = "0x857134", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000161")]
public class TransformTargetObject_Raycast : MonoBehaviour
{
	[Token(Token = "0x2000162")]
	public enum ObjName
	{
		[Token(Token = "0x4000B10")]
		Player1,
		[Token(Token = "0x4000B11")]
		Player2,
		[Token(Token = "0x4000B12")]
		Player3,
		[Token(Token = "0x4000B13")]
		Player4
	}

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObjName objName;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject TargetPlayerObject1;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject TargetPlayerObject2;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject TargetPlayerObject3;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject TargetPlayerObject4;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string TargetObjectName1;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string TargetObjectName2;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string TargetObjectName3;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string TargetObjectName4;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool rayMove_player1;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool rayMove_player2;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool rayMove_player3;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool rayMove_player4;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x8586E0", Offset = "0x8586E0", VA = "0x8586E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x8588DC", Offset = "0x8588DC", VA = "0x8588DC")]
	public void ResetObjectTransform(GameObject playerObj)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x858A9C", Offset = "0x858A9C", VA = "0x858A9C")]
	public TransformTargetObject_Raycast()
	{
	}
}
[Token(Token = "0x2000163")]
public class TransformTargetObjectAlways : MonoBehaviour
{
	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject TargetObject;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float updownValue;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool FollowAngle_X;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool FollowAngle_Y;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[SerializeField]
	private bool FollowAngle_Z;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x857B28", Offset = "0x857B28", VA = "0x857B28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x857C84", Offset = "0x857C84", VA = "0x857C84")]
	public TransformTargetObjectAlways()
	{
	}
}
[Token(Token = "0x2000164")]
public class TransformTargetObjectAlways_Avatar : NetworkBehaviour
{
	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject TargetObject;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float updownValue;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool FollowAngle_X;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	private bool FollowAngle_Y;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[SerializeField]
	private bool FollowAngle_Z;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x857C9C", Offset = "0x857C9C", VA = "0x857C9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x857CA0", Offset = "0x857CA0", VA = "0x857CA0")]
	private void SyncTargetTransform()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x857E24", Offset = "0x857E24", VA = "0x857E24")]
	public TransformTargetObjectAlways_Avatar()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x857E9C", Offset = "0x857E9C", VA = "0x857E9C")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x857EA0", Offset = "0x857EA0", VA = "0x857EA0", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x857EA8", Offset = "0x857EA8", VA = "0x857EA8", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000165")]
public class TransformTargetObjectAlways_Lerp : NetworkBehaviour
{
	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform targetTrm;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform moveTrm;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float distance;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float presentLoc;

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x857EAC", Offset = "0x857EAC", VA = "0x857EAC")]
	[ClientCallback]
	private void Start()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x857F48", Offset = "0x857F48", VA = "0x857F48")]
	[ServerCallback]
	private void Update()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x8581BC", Offset = "0x8581BC", VA = "0x8581BC")]
	public TransformTargetObjectAlways_Lerp()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x85822C", Offset = "0x85822C", VA = "0x85822C")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x858230", Offset = "0x858230", VA = "0x858230", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x858238", Offset = "0x858238", VA = "0x858238", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000166")]
public class TransformTargetObjectAlways_Server : NetworkBehaviour
{
	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject TargetObject;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string TargetObjectName;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float updownValue;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool FollowAngle_X;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[SerializeField]
	private bool FollowAngle_Y;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	[SerializeField]
	private bool FollowAngle_Z;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x85823C", Offset = "0x85823C", VA = "0x85823C")]
	private void Start()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x858268", Offset = "0x858268", VA = "0x858268")]
	private void Update()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x85826C", Offset = "0x85826C", VA = "0x85826C")]
	private void SyncTargetTransform()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x8583F0", Offset = "0x8583F0", VA = "0x8583F0")]
	public TransformTargetObjectAlways_Server()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x858468", Offset = "0x858468", VA = "0x858468")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x85846C", Offset = "0x85846C", VA = "0x85846C", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x858474", Offset = "0x858474", VA = "0x858474", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000167")]
public class Tutorial_EnemyStateChecker_MD08 : MonoBehaviour
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string Step05Object;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EnemyController_V02_SA E_ContObj;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int AnimState;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int LastAnimState;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Tutorial_SetActive Step5obj;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool Step05End;

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x858C3C", Offset = "0x858C3C", VA = "0x858C3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x858E34", Offset = "0x858E34", VA = "0x858E34")]
	public Tutorial_EnemyStateChecker_MD08()
	{
	}
}
[Token(Token = "0x2000168")]
public class Tutorial_Event_End : MonoBehaviour
{
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661B4", Offset = "0x6661B4")]
	private sealed class <E_DestroyAction>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DestroyTime;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Tutorial_Event_End <>4__this;

		[Token(Token = "0x170000E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0x859230", Offset = "0x859230", VA = "0x859230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0x8592A0", Offset = "0x8592A0", VA = "0x8592A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x8590B0", Offset = "0x8590B0", VA = "0x8590B0")]
		[DebuggerHidden]
		public <E_DestroyAction>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x85913C", Offset = "0x85913C", VA = "0x85913C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x859140", Offset = "0x859140", VA = "0x859140", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x859238", Offset = "0x859238", VA = "0x859238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnemyController_V02_SA E_ContObj;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int CheckBattleState;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string SyncVarManagerObj;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SyncVarManager_SA SyncVarManageObjec;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int NowBattleState;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int LastBattleState;

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x858E8C", Offset = "0x858E8C", VA = "0x858E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x859018", Offset = "0x859018", VA = "0x859018")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674D38", Offset = "0x674D38")]
	private IEnumerator E_DestroyAction(float DestroyTime)
	{
		return null;
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x8590DC", Offset = "0x8590DC", VA = "0x8590DC")]
	public Tutorial_Event_End()
	{
	}
}
[Token(Token = "0x200016A")]
public class Tutorial_SafetySwich : MonoBehaviour
{
	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool Safety;

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x8592A8", Offset = "0x8592A8", VA = "0x8592A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x859388", Offset = "0x859388", VA = "0x859388")]
	public Tutorial_SafetySwich()
	{
	}
}
[Token(Token = "0x200016B")]
public class Tutorial_SealCheck_Start : MonoBehaviour
{
	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SyncVarManager_SA SyncVarManageObject;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int NowBattleState;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int LastBattleState;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject CountStartObject;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int CheckBattleState;

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x859390", Offset = "0x859390", VA = "0x859390")]
	private void Update()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x859404", Offset = "0x859404", VA = "0x859404")]
	public Tutorial_SealCheck_Start()
	{
	}
}
[Token(Token = "0x200016C")]
public class Tutorial_SetActive : MonoBehaviour
{
	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject OnActive;

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x858E00", Offset = "0x858E00", VA = "0x858E00")]
	public void Tut_SetActive()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x85940C", Offset = "0x85940C", VA = "0x85940C")]
	public Tutorial_SetActive()
	{
	}
}
[Token(Token = "0x200016D")]
public class M01A_BattleState_Check : MonoBehaviour
{
	[Token(Token = "0x200016E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661C4", Offset = "0x6661C4")]
	private sealed class <CircleWarningChecker_reset>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public M01A_BattleState_Check <>4__this;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600086D")]
			[Address(RVA = "0x825394", Offset = "0x825394", VA = "0x825394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086F")]
			[Address(RVA = "0x825404", Offset = "0x825404", VA = "0x825404", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x8252DC", Offset = "0x8252DC", VA = "0x8252DC")]
		[DebuggerHidden]
		public <CircleWarningChecker_reset>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x825310", Offset = "0x825310", VA = "0x825310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x825314", Offset = "0x825314", VA = "0x825314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x82539C", Offset = "0x82539C", VA = "0x82539C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SyncVarManager SyncVarManageObject;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int LastBattleState;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject CountStartObject;

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x82518C", Offset = "0x82518C", VA = "0x82518C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x825190", Offset = "0x825190", VA = "0x825190")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x825268", Offset = "0x825268", VA = "0x825268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674DEC", Offset = "0x674DEC")]
	private IEnumerator CircleWarningChecker_reset()
	{
		return null;
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x825308", Offset = "0x825308", VA = "0x825308")]
	public M01A_BattleState_Check()
	{
	}
}
[Token(Token = "0x200016F")]
public class M01A_TimeUPVoice_Count : MonoBehaviour
{
	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] VoiceCallObject;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float[] CountTime;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float StartTime;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int VoiceCount;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int NowCount;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x82540C", Offset = "0x82540C", VA = "0x82540C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x82544C", Offset = "0x82544C", VA = "0x82544C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x825570", Offset = "0x825570", VA = "0x825570")]
	public M01A_TimeUPVoice_Count()
	{
	}
}
[Token(Token = "0x2000170")]
public class OB_inActive_Select : MonoBehaviour
{
	[Token(Token = "0x2000171")]
	private enum ActType
	{
		[Token(Token = "0x4000B4E")]
		True,
		[Token(Token = "0x4000B4F")]
		False
	}

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject InActiveObject;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ActType ActionType;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x950EBC", Offset = "0x950EBC", VA = "0x950EBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x950F28", Offset = "0x950F28", VA = "0x950F28")]
	public OB_inActive_Select()
	{
	}
}
[Token(Token = "0x2000172")]
public class OB_inActive_TimeUP : MonoBehaviour
{
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661D4", Offset = "0x6661D4")]
	private sealed class <InActive>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OB_inActive_TimeUP <>4__this;

		[Token(Token = "0x170000E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x951150", Offset = "0x951150", VA = "0x951150", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x9511C0", Offset = "0x9511C0", VA = "0x9511C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x95102C", Offset = "0x95102C", VA = "0x95102C")]
		[DebuggerHidden]
		public <InActive>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x951068", Offset = "0x951068", VA = "0x951068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x95106C", Offset = "0x95106C", VA = "0x95106C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x951158", Offset = "0x951158", VA = "0x951158", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float inActiveCount;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SyncVarManager SyncVarManageObject;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x950F38", Offset = "0x950F38", VA = "0x950F38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x950FB8", Offset = "0x950FB8", VA = "0x950FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674EA0", Offset = "0x674EA0")]
	private IEnumerator InActive()
	{
		return null;
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x951058", Offset = "0x951058", VA = "0x951058")]
	public OB_inActive_TimeUP()
	{
	}
}
[Token(Token = "0x2000174")]
public class BulletCollision_V02_SA : MonoBehaviour
{
	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform ShooterPos;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ShootChecker_V02_SA RootObj;

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x83E80C", Offset = "0x83E80C", VA = "0x83E80C")]
	public void SetShooterPos(Transform transform)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x83E814", Offset = "0x83E814", VA = "0x83E814")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x83EA6C", Offset = "0x83EA6C", VA = "0x83EA6C")]
	public BulletCollision_V02_SA()
	{
	}
}
[Token(Token = "0x2000175")]
public class Enemy_EF_mananger_V02_SA : MonoBehaviour
{
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661E4", Offset = "0x6661E4")]
	private sealed class <EscapeEndTime>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy_EF_mananger_V02_SA <>4__this;

		[Token(Token = "0x170000E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0x81C1B0", Offset = "0x81C1B0", VA = "0x81C1B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000889")]
			[Address(RVA = "0x81C220", Offset = "0x81C220", VA = "0x81C220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x81C0B4", Offset = "0x81C0B4", VA = "0x81C0B4")]
		[DebuggerHidden]
		public <EscapeEndTime>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x81C0E8", Offset = "0x81C0E8", VA = "0x81C0E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x81C0EC", Offset = "0x81C0EC", VA = "0x81C0EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x81C1B8", Offset = "0x81C1B8", VA = "0x81C1B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject EF_Escape;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyController_V02_SA enemyController_V02;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x81BFF0", Offset = "0x81BFF0", VA = "0x81BFF0")]
	private void EneEF_Escape()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x81C040", Offset = "0x81C040", VA = "0x81C040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x674F54", Offset = "0x674F54")]
	private IEnumerator EscapeEndTime()
	{
		return null;
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x81C0E0", Offset = "0x81C0E0", VA = "0x81C0E0")]
	public Enemy_EF_mananger_V02_SA()
	{
	}
}
[Token(Token = "0x2000177")]
public class EnemyAnimationEventListener_SA : MonoBehaviour
{
	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyAnimator_V02_SA animator;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyAttackCollision_Set_V02 attack;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyController_V02_SA controller;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x9C1AFC", Offset = "0x9C1AFC", VA = "0x9C1AFC")]
	private void E_trans_OFF()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x9C1B34", Offset = "0x9C1B34", VA = "0x9C1B34")]
	private void A_FlagCler()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x9C1BC8", Offset = "0x9C1BC8", VA = "0x9C1BC8")]
	private void EnemyAttack_Collision_ON(int a)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x9C1BFC", Offset = "0x9C1BFC", VA = "0x9C1BFC")]
	private void EnemyAttack_Collision_OFF(int a)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x9C1C30", Offset = "0x9C1C30", VA = "0x9C1C30")]
	private void CheckEscape()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x9C1D24", Offset = "0x9C1D24", VA = "0x9C1D24")]
	public EnemyAnimationEventListener_SA()
	{
	}
}
[Token(Token = "0x2000178")]
public class EnemyAnimator_Sub_SA : MonoBehaviour
{
	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int E_tramce_Action;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int E_tramce_LastUpdate;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int P_InCircle;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int P_InCircle_LastUpdate;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int TranceState_SV;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int TranceState_SV_LastUpdate;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EnemyTrans_V02_SA E_trance;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetObj;

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x9C23AC", Offset = "0x9C23AC", VA = "0x9C23AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x9C2414", Offset = "0x9C2414", VA = "0x9C2414")]
	private void Update()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x9C2530", Offset = "0x9C2530", VA = "0x9C2530")]
	public void WalkFast_SV()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x9C24FC", Offset = "0x9C24FC", VA = "0x9C24FC")]
	private void Trance_Action_OFF()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x9C24C8", Offset = "0x9C24C8", VA = "0x9C24C8")]
	private void Trace_Action_ON()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x9C253C", Offset = "0x9C253C", VA = "0x9C253C")]
	public EnemyAnimator_Sub_SA()
	{
	}
}
[Token(Token = "0x2000179")]
public class EnemyAnimator_V02_SA : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6661F4", Offset = "0x6661F4")]
	private sealed class <A_FlagCler_cor>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyAnimator_V02_SA <>4__this;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0x9C3B90", Offset = "0x9C3B90", VA = "0x9C3B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0x9C3C00", Offset = "0x9C3C00", VA = "0x9C3C00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x9C3998", Offset = "0x9C3998", VA = "0x9C3998")]
		[DebuggerHidden]
		public <A_FlagCler_cor>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x9C3AE4", Offset = "0x9C3AE4", VA = "0x9C3AE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x9C3AE8", Offset = "0x9C3AE8", VA = "0x9C3AE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x9C3B98", Offset = "0x9C3B98", VA = "0x9C3B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator chr_Animator;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyDamageCollision E_damcol;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyAttackCollision_Set_V02 E_atkcol;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyTrans_V02_SA E_trance;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider E_rangecol;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private EnemyAnimator_Sub_SA enemyAnimator_Sub;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool E_trance_state;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool walkFast;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool InCircle;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int Anim_State;

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x9C35C8", Offset = "0x9C35C8", VA = "0x9C35C8")]
	public void CheckAction(int Temp_State)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x9C3878", Offset = "0x9C3878", VA = "0x9C3878")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675008", Offset = "0x675008")]
	private IEnumerator A_FlagCler_cor()
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x9C1B60", Offset = "0x9C1B60", VA = "0x9C1B60")]
	public void A_FlagCler()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x9C1B2C", Offset = "0x9C1B2C", VA = "0x9C1B2C")]
	public void E_trans_OFF()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x9C38EC", Offset = "0x9C38EC", VA = "0x9C38EC")]
	private void CheckWalkFast()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x9C392C", Offset = "0x9C392C", VA = "0x9C392C")]
	public void Set_Trance(bool tranceFlag)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x9C39C4", Offset = "0x9C39C4", VA = "0x9C39C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x9C3AA8", Offset = "0x9C3AA8", VA = "0x9C3AA8")]
	public void CircleAccess(bool Invade)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x9C384C", Offset = "0x9C384C", VA = "0x9C384C")]
	private void SetEnemyAttackCollision_AllOFF()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x9C3ADC", Offset = "0x9C3ADC", VA = "0x9C3ADC")]
	public EnemyAnimator_V02_SA()
	{
	}
}
[Token(Token = "0x200017B")]
public class EnemyAttackCollision_OFF_V02_SA : MonoBehaviour
{
	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyController_V02_SA controller;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyTrans_V02_SA trans;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66B2F8", Offset = "0x66B2F8")]
	[SerializeField]
	private bool KeepActive;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool HitProofFlag;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[SerializeField]
	private bool Visible;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x9C3D50", Offset = "0x9C3D50", VA = "0x9C3D50")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x9C3E80", Offset = "0x9C3E80", VA = "0x9C3E80")]
	public EnemyAttackCollision_OFF_V02_SA()
	{
	}
}
[Token(Token = "0x200017C")]
public class EnemyController_V02_SA : MonoBehaviour
{
	[Token(Token = "0x200017D")]
	public enum EnemyState
	{
		[Token(Token = "0x4000B8C")]
		wait,
		[Token(Token = "0x4000B8D")]
		walk,
		[Token(Token = "0x4000B8E")]
		Attack,
		[Token(Token = "0x4000B8F")]
		Damage,
		[Token(Token = "0x4000B90")]
		Escape,
		[Token(Token = "0x4000B91")]
		Start,
		[Token(Token = "0x4000B92")]
		End,
		[Token(Token = "0x4000B93")]
		Dead
	}

	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666204", Offset = "0x666204")]
	private sealed class <CheckNull>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyController_V02_SA <>4__this;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0x817F08", Offset = "0x817F08", VA = "0x817F08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x817F78", Offset = "0x817F78", VA = "0x817F78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x817CD0", Offset = "0x817CD0", VA = "0x817CD0")]
		[DebuggerHidden]
		public <CheckNull>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x817CFC", Offset = "0x817CFC", VA = "0x817CFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x817D00", Offset = "0x817D00", VA = "0x817D00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x817F10", Offset = "0x817F10", VA = "0x817F10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666214", Offset = "0x666214")]
	private sealed class <SubAction_Escape>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyController_V02_SA <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x8180B0", Offset = "0x8180B0", VA = "0x8180B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x818120", Offset = "0x818120", VA = "0x818120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x817F80", Offset = "0x817F80", VA = "0x817F80")]
		[DebuggerHidden]
		public <SubAction_Escape>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x817FAC", Offset = "0x817FAC", VA = "0x817FAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x817FB0", Offset = "0x817FB0", VA = "0x817FB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x8180B8", Offset = "0x8180B8", VA = "0x8180B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int MaxHP;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float EnemySpeed;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float AttackRange;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float rotateSpeed;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform target;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform targetOrigin;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> SpawnObj;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool hit_proof;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public EnemyState State;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int HP;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NavMeshAgent agent;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private EnemyAnimator_V02_SA E_Anim;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform M01_ENE_Mov_obj;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EnemySpawner_V02_SA Spawner;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isBattleActive;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool FreezcoRutine;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool WaitcoRutine;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int LastInstObj;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x9C5B94", Offset = "0x9C5B94", VA = "0x9C5B94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x9C5BDC", Offset = "0x9C5BDC", VA = "0x9C5BDC")]
	public void SetTarget(Transform newTarget, EnemySpawner_V02_SA newSpawner)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x9C5BE8", Offset = "0x9C5BE8", VA = "0x9C5BE8")]
	public void SetInitialization(Transform newTarget, EnemySpawner_V02_SA newSpawner, int newMaxHP, float newSpeed)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x9C5BFC", Offset = "0x9C5BFC", VA = "0x9C5BFC")]
	public void SetReSpawn(List<Transform> newSpawnPos, int SPWnumber)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x9C6060", Offset = "0x9C6060", VA = "0x9C6060")]
	public void SetState(EnemyState tempState)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x9C6148", Offset = "0x9C6148", VA = "0x9C6148")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x9C6158", Offset = "0x9C6158", VA = "0x9C6158")]
	private void StateAction()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x9C62BC", Offset = "0x9C62BC", VA = "0x9C62BC")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x9C6444", Offset = "0x9C6444", VA = "0x9C6444")]
	private void SubAction_Attack()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x9C66E0", Offset = "0x9C66E0", VA = "0x9C66E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6750BC", Offset = "0x6750BC")]
	private IEnumerator CheckNull()
	{
		return null;
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x9C666C", Offset = "0x9C666C", VA = "0x9C666C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675120", Offset = "0x675120")]
	private IEnumerator SubAction_Escape()
	{
		return null;
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x9C6754", Offset = "0x9C6754", VA = "0x9C6754")]
	public void E_Damage(Transform ShooterPos)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x9C1C5C", Offset = "0x9C1C5C", VA = "0x9C1C5C")]
	public void CheckEscape()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x9C5CAC", Offset = "0x9C5CAC", VA = "0x9C5CAC")]
	private void EnemyRestart(int SPWnumber = 99)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x9C6940", Offset = "0x9C6940", VA = "0x9C6940")]
	public void BattleEnd()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x9C694C", Offset = "0x9C694C", VA = "0x9C694C")]
	public EnemyController_V02_SA()
	{
	}
}
[Token(Token = "0x2000180")]
public class EnemyDamage_V02_SA : MonoBehaviour
{
	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyController_V02_SA controller;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x8183EC", Offset = "0x8183EC", VA = "0x8183EC")]
	public void E_damage(Transform ShooterPos)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x818424", Offset = "0x818424", VA = "0x818424")]
	public EnemyDamage_V02_SA()
	{
	}
}
[Token(Token = "0x2000181")]
public class EnemySpawner_V02_SA : MonoBehaviour
{
	[Token(Token = "0x2000182")]
	public enum EnemyName
	{
		[Token(Token = "0x4000BB3")]
		Enemy_A1,
		[Token(Token = "0x4000BB4")]
		Enemy_A2,
		[Token(Token = "0x4000BB5")]
		Enemy_B,
		[Token(Token = "0x4000BB6")]
		Enemy_Tutorial
	}

	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666224", Offset = "0x666224")]
	private sealed class <EnemySpawn>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySpawner_V02_SA <>4__this;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0x81A9A0", Offset = "0x81A9A0", VA = "0x81A9A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x81AA10", Offset = "0x81AA10", VA = "0x81AA10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x81A004", Offset = "0x81A004", VA = "0x81A004")]
		[DebuggerHidden]
		public <EnemySpawn>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x81A704", Offset = "0x81A704", VA = "0x81A704", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x81A708", Offset = "0x81A708", VA = "0x81A708", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x81A9A8", Offset = "0x81A9A8", VA = "0x81A9A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666234", Offset = "0x666234")]
	private sealed class <EnemyDestroyWait>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySpawner_V02_SA <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x81A68C", Offset = "0x81A68C", VA = "0x81A68C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x81A6FC", Offset = "0x81A6FC", VA = "0x81A6FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x81A2BC", Offset = "0x81A2BC", VA = "0x81A2BC")]
		[DebuggerHidden]
		public <EnemyDestroyWait>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x81A50C", Offset = "0x81A50C", VA = "0x81A50C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x81A510", Offset = "0x81A510", VA = "0x81A510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x81A694", Offset = "0x81A694", VA = "0x81A694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyName enemyName;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject prefab;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform[] target;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MaxHP;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float EnemySpeed;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform ParentObj;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform[] SpawnPosObj;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int SpawnCount;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool Flag_EndAction;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float DestroyTime;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isRunning;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject TargetObject;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float SpawnInterval;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private bool DelayedStart;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool SpawnFlag;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float IntervalTime;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float StartTime;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int Waiting;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> EnemyObjList;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SyncVarManager_SA syncVarManager_obj;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int nowState;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int[] int_buff;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] float_buff;

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x819F64", Offset = "0x819F64", VA = "0x819F64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x819F90", Offset = "0x819F90", VA = "0x819F90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675224", Offset = "0x675224")]
	private IEnumerator EnemySpawn()
	{
		return null;
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x817E98", Offset = "0x817E98", VA = "0x817E98")]
	public float SpawnCheck()
	{
		return default(float);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x81A030", Offset = "0x81A030", VA = "0x81A030")]
	private void SetSpawnFlag()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x81A074", Offset = "0x81A074", VA = "0x81A074")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x81A124", Offset = "0x81A124", VA = "0x81A124")]
	private void BattleEndAction()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x81A248", Offset = "0x81A248", VA = "0x81A248")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675288", Offset = "0x675288")]
	private IEnumerator EnemyDestroyWait()
	{
		return null;
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x81A2E8", Offset = "0x81A2E8", VA = "0x81A2E8")]
	public void ExorcismCount()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x81A488", Offset = "0x81A488", VA = "0x81A488")]
	public EnemySpawner_V02_SA()
	{
	}
}
[Token(Token = "0x2000185")]
public class EnemyTrans_V02_SA : MonoBehaviour
{
	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator[] renderObjects;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator Rend_Animator;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int R_objCount;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool GiveUP;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x81AD00", Offset = "0x81AD00", VA = "0x81AD00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x81AD34", Offset = "0x81AD34", VA = "0x81AD34")]
	public void E_trans_Switch(bool E_visible)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x81AE14", Offset = "0x81AE14", VA = "0x81AE14")]
	private void E_trans_ON()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x81AE1C", Offset = "0x81AE1C", VA = "0x81AE1C")]
	public EnemyTrans_V02_SA()
	{
	}
}
[Token(Token = "0x2000186")]
public class PlayerCheck_V02_SA : MonoBehaviour
{
	[Token(Token = "0x2000187")]
	public enum PlayerState
	{
		[Token(Token = "0x4000BDE")]
		Shooter,
		[Token(Token = "0x4000BDF")]
		OnCiecre,
		[Token(Token = "0x4000BE0")]
		inactive,
		[Token(Token = "0x4000BE1")]
		Walaker,
		[Token(Token = "0x4000BE2")]
		GiveUP
	}

	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666244", Offset = "0x666244")]
	private sealed class <InvincibleTime>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerCheck_V02_SA <>4__this;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x8B9D40", Offset = "0x8B9D40", VA = "0x8B9D40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x8B9DB0", Offset = "0x8B9DB0", VA = "0x8B9DB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x8B99B4", Offset = "0x8B99B4", VA = "0x8B99B4")]
		[DebuggerHidden]
		public <InvincibleTime>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x8B9C3C", Offset = "0x8B9C3C", VA = "0x8B9C3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x8B9C40", Offset = "0x8B9C40", VA = "0x8B9C40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x8B9D48", Offset = "0x8B9D48", VA = "0x8B9D48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666254", Offset = "0x666254")]
	private sealed class <Inactive_Freez>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerCheck_V02_SA <>4__this;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0x8B9BC4", Offset = "0x8B9BC4", VA = "0x8B9BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0x8B9C34", Offset = "0x8B9C34", VA = "0x8B9C34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x8B9A54", Offset = "0x8B9A54", VA = "0x8B9A54")]
		[DebuggerHidden]
		public <Inactive_Freez>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x8B9AA8", Offset = "0x8B9AA8", VA = "0x8B9AA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x8B9AAC", Offset = "0x8B9AAC", VA = "0x8B9AAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x8B9BCC", Offset = "0x8B9BCC", VA = "0x8B9BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int Max_HP;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float RecoverTime;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject DamageCollsion;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float InbincibleTime;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator DamagePlane;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator GhostVisionPlane;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerState P_State;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ShootChecker_V02_SA ShootChecker;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerDamageCollision_V02_SA P_Damage_col;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NavMeshObstacle MM_Obstacle;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool UniqueCoToutineFlag;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int HP;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool InCircle;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool NowBattle;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject shootChecker_obj;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool CheckLocalPlayer;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private NetSyncValue_SA netSyncValie;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Animator chr_Animator2;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private CmdManager_SA cmdManager;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject Speaker_PlayerDead;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Speaker_PlayerDamage;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int LastBattleState;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool setFlag2;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool setFlag3;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	private bool setFlag4;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
	public bool readComplete;

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x8B908C", Offset = "0x8B908C", VA = "0x8B908C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x8B9148", Offset = "0x8B9148", VA = "0x8B9148")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x8B9340", Offset = "0x8B9340", VA = "0x8B9340")]
	public void AvatarColorChanger()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x8B916C", Offset = "0x8B916C", VA = "0x8B916C")]
	public void BattleStateCheck()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x8B9244", Offset = "0x8B9244", VA = "0x8B9244")]
	public void DeadEffectOff_Check()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x8B95D8", Offset = "0x8B95D8", VA = "0x8B95D8")]
	public void SetState(PlayerState tempState)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x8B983C", Offset = "0x8B983C", VA = "0x8B983C")]
	public void PlayerGiveUP()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x8B9844", Offset = "0x8B9844", VA = "0x8B9844")]
	public void Not_Battle()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x8B9478", Offset = "0x8B9478", VA = "0x8B9478")]
	public void Battle_Start()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x8B9470", Offset = "0x8B9470", VA = "0x8B9470")]
	public void Battle_End()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x8B984C", Offset = "0x8B984C", VA = "0x8B984C")]
	public void ReceiveDamage()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x8B9114", Offset = "0x8B9114", VA = "0x8B9114")]
	public void SetPlayerHP(int TempHP)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x8B9968", Offset = "0x8B9968", VA = "0x8B9968")]
	public void CircleEntrance_Player(bool Invade)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x8B98F4", Offset = "0x8B98F4", VA = "0x8B98F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x67538C", Offset = "0x67538C")]
	private IEnumerator InvincibleTime()
	{
		return null;
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x8B99E0", Offset = "0x8B99E0", VA = "0x8B99E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6753F0", Offset = "0x6753F0")]
	private IEnumerator Inactive_Freez()
	{
		return null;
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x8B9480", Offset = "0x8B9480", VA = "0x8B9480")]
	private void DamageEffect_camera(bool P_DamageEF_ON)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x8B9A80", Offset = "0x8B9A80", VA = "0x8B9A80")]
	public PlayerCheck_V02_SA()
	{
	}
}
[Token(Token = "0x200018A")]
public class PlayerCheck_V02_SA1 : MonoBehaviour
{
	[Token(Token = "0x200018B")]
	public enum PlayerState
	{
		[Token(Token = "0x4000C0A")]
		Shooter,
		[Token(Token = "0x4000C0B")]
		OnCiecre,
		[Token(Token = "0x4000C0C")]
		inactive,
		[Token(Token = "0x4000C0D")]
		Walaker,
		[Token(Token = "0x4000C0E")]
		GiveUP
	}

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int Max_HP;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float RecoverTime;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject DamageCollsion;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float InbincibleTime;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator DamagePlane;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator GhostVisionPlane;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerState P_State;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ShootChecker_V02_SA ShootChecker;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerDamageCollision_V02_SA P_Damage_col;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NavMeshObstacle MM_Obstacle;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool UniqueCoToutineFlag;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int HP;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool InCircle;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool NowBattle;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject shootChecker_obj;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool CheckLocalPlayer;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject SyncVarManager;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string SyncVarManager_ObjName;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Animator chr_Animator;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject chr_Animator_obj;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator chr_Animator2;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject chr_Animator_obj2;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private CmdManager_SA cmdManager;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject Speaker_PlayerDead;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject Speaker_PlayerDamage;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int LastBattleState;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool setFlag;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool setFlag2;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	private bool setFlag3;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
	private bool setFlag4;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool readComplete;

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x8B9DB8", Offset = "0x8B9DB8", VA = "0x8B9DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x8B9E2C", Offset = "0x8B9E2C", VA = "0x8B9E2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x8B9F1C", Offset = "0x8B9F1C", VA = "0x8B9F1C")]
	public PlayerCheck_V02_SA1()
	{
	}
}
[Token(Token = "0x200018C")]
public class PlayerDamageCollision_V02_SA : MonoBehaviour
{
	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject P_ContObj;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform TargetHMD;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float CrouchVorder;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 OriLocalScale;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isCrauch;

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x8BA1FC", Offset = "0x8BA1FC", VA = "0x8BA1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x8BA240", Offset = "0x8BA240", VA = "0x8BA240")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x8BA378", Offset = "0x8BA378", VA = "0x8BA378")]
	private void Update()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x8BA3D0", Offset = "0x8BA3D0", VA = "0x8BA3D0")]
	private void SetLocalScale(bool TempCrouch)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x8BA4AC", Offset = "0x8BA4AC", VA = "0x8BA4AC")]
	public PlayerDamageCollision_V02_SA()
	{
	}
}
[Token(Token = "0x200018D")]
public class ShootChecker_V02_SA : MonoBehaviour
{
	[Token(Token = "0x200018E")]
	private enum P_BattleAudio
	{
		[Token(Token = "0x4000C2B")]
		Chage,
		[Token(Token = "0x4000C2C")]
		C_Full
	}

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform AvatarPos;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BulletRoot_V02[] bulletObj;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nowBullet;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float B_Power;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int Max_chage;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int Chage_Level;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator chageObj_All;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject shotReaction_Obj;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66B5F4", Offset = "0x66B5F4")]
	private AudioSource SpeakerObj;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip Clip_chage;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip Clip_c_Full;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioSource SpeakerObj_CMax;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool Safety_Tutorial;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int Chage_Count;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> ChageObjList;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool Shooting;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool ControlTrigger;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int ChageCountBuff;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int GeinMaxCount;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool CMDownflag;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool CMUpflag;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject[] ChageLevelObj;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xA28FD4", Offset = "0xA28FD4", VA = "0xA28FD4")]
	private void Debug_ChageMaxDown()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xA294A8", Offset = "0xA294A8", VA = "0xA294A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xA29628", Offset = "0xA29628", VA = "0xA29628")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xA29780", Offset = "0xA29780", VA = "0xA29780")]
	public void SetShootingFlag(bool a)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xA294CC", Offset = "0xA294CC", VA = "0xA294CC")]
	private void DeviceCheck()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xA295AC", Offset = "0xA295AC", VA = "0xA295AC")]
	private void Shot_Fire()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xA2962C", Offset = "0xA2962C", VA = "0xA2962C")]
	private void Shot_Charge()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xA29948", Offset = "0xA29948", VA = "0xA29948")]
	private void Shot()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xA29B14", Offset = "0xA29B14", VA = "0xA29B14")]
	public void HitBullet(int HitType)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xA297DC", Offset = "0xA297DC", VA = "0xA297DC")]
	private void Chage(int a, bool reset)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xA29A60", Offset = "0xA29A60", VA = "0xA29A60")]
	private void P_AudioPlay(P_BattleAudio Tempclip)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xA29A00", Offset = "0xA29A00", VA = "0xA29A00")]
	private void P_AudioPause()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xA298E8", Offset = "0xA298E8", VA = "0xA298E8")]
	private void P_AudioStop()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xA29BAC", Offset = "0xA29BAC", VA = "0xA29BAC")]
	public ShootChecker_V02_SA()
	{
	}
}
[Token(Token = "0x200018F")]
public class CatchLog : MonoBehaviour
{
	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StringBuilder builder;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool autoScroll;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B680", Offset = "0x66B680")]
	[SerializeField]
	private bool useTimeStamp;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B6CC", Offset = "0x66B6CC")]
	[SerializeField]
	private bool coloredByLogType;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B718", Offset = "0x66B718")]
	[SerializeField]
	private string[] ignore;

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x83FE14", Offset = "0x83FE14", VA = "0x83FE14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x83FF80", Offset = "0x83FF80", VA = "0x83FF80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x840018", Offset = "0x840018", VA = "0x840018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x840094", Offset = "0x840094", VA = "0x840094")]
	private void HandleLog(string logText, string stackTrace, LogType logType)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x8403F4", Offset = "0x8403F4", VA = "0x8403F4")]
	private string GetColoredString(string src, string color)
	{
		return null;
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x840458", Offset = "0x840458", VA = "0x840458")]
	private void AdjustText(Text t)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x8407E4", Offset = "0x8407E4", VA = "0x8407E4")]
	public CatchLog()
	{
	}
}
[Token(Token = "0x2000190")]
public class Debug_LogPanel_ON : MonoBehaviour
{
	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject LogPanel;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _LogOn;

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x9B0278", Offset = "0x9B0278", VA = "0x9B0278")]
	private void Update()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x9B0330", Offset = "0x9B0330", VA = "0x9B0330")]
	public Debug_LogPanel_ON()
	{
	}
}
[Token(Token = "0x2000191")]
public class Debuglog_manager : MonoBehaviour
{
	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject debaglog_Obj;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool OnOffFlag;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x9B2E40", Offset = "0x9B2E40", VA = "0x9B2E40")]
	private void Update()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x9B2F40", Offset = "0x9B2F40", VA = "0x9B2F40")]
	public Debuglog_manager()
	{
	}
}
[Token(Token = "0x2000192")]
public class avatConScale_SA : MonoBehaviour
{
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666264", Offset = "0x666264")]
	private sealed class <coroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public avatConScale_SA <>4__this;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x864BBC", Offset = "0x864BBC", VA = "0x864BBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x864C2C", Offset = "0x864C2C", VA = "0x864C2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x864984", Offset = "0x864984", VA = "0x864984")]
		[DebuggerHidden]
		public <coroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x864B04", Offset = "0x864B04", VA = "0x864B04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x864B08", Offset = "0x864B08", VA = "0x864B08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x864BC4", Offset = "0x864BC4", VA = "0x864BC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject moveObj;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform moveTrm;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 latestMovePos;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float moveRatio;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float latestMoveRatio;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float ratio;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator m_Animator;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform ScaleDummyTrm;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform HeadDumTrm;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform HandLDumTrm;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform HandRDumTrm;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform[] dum;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 initializePos;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float armLength;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isCalibrate;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float syncScaleAvatar;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float scaleHMD;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float scaleController;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VRIK vrik;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float IKPosWeight;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float latestIKPosWeight;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform HMDTrm;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform controllerLTrm;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform controllerRTrm;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform[] tracker;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Transform targetTrm;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 myPos;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Quaternion myRot;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 targetOffset;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float iniHeight;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 previousVec;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float threshold;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 threPos;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float threDis;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float threshold0;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float speedRot;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[SerializeField]
	private float thresholdRot;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float threDisRotY;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float distance;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool isMove;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	private bool isRotate;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	private bool isForward;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
	private bool isCrouch;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float crouchThreshold;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float dotProduct;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float Forward;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float latestForward;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float Turn;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float latestTurn;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 Move;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float forwardVelocity;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float turnVelocity;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Quaternion latestRotation;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 angularSpeed;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float t1;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float bodyRotMult;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float turnSpeedMlt;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float forwardSpeedMlt;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float crouchSpeedMlt;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Quaternion latestHMDRotation;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Transform[] dumChild;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool isLocalPlayer;

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x86236C", Offset = "0x86236C", VA = "0x86236C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x8625B8", Offset = "0x8625B8", VA = "0x8625B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x862F18", Offset = "0x862F18", VA = "0x862F18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x862F1C", Offset = "0x862F1C", VA = "0x862F1C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x86463C", Offset = "0x86463C", VA = "0x86463C")]
	private void GetTurn()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x864388", Offset = "0x864388", VA = "0x864388")]
	private float GetHMDAngSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x862EA4", Offset = "0x862EA4", VA = "0x862EA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6754F4", Offset = "0x6754F4")]
	private IEnumerator coroutine()
	{
		return null;
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x864874", Offset = "0x864874", VA = "0x864874")]
	private void UpdateAnimator(Vector3 move)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x8649B0", Offset = "0x8649B0", VA = "0x8649B0")]
	public avatConScale_SA()
	{
	}
}
[Token(Token = "0x2000194")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x666274", Offset = "0x666274")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x666274", Offset = "0x666274")]
public class CharacterCameraConstraint_138 : MonoBehaviour
{
	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B824", Offset = "0x66B824")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B85C", Offset = "0x66B85C")]
	public float CurrentDistance;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B894", Offset = "0x66B894")]
	public bool EnableFadeout;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B8CC", Offset = "0x66B8CC")]
	public bool EnableCollision;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B904", Offset = "0x66B904")]
	public bool DynamicHeight;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B93C", Offset = "0x66B93C")]
	public float MaxFade;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B974", Offset = "0x66B974")]
	public float FadeMinDistance;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66B9AC", Offset = "0x66B9AC")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController _character;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRPlayerController _playerController;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x841F2C", Offset = "0x841F2C", VA = "0x841F2C")]
	private CharacterCameraConstraint_138()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x841FF0", Offset = "0x841FF0", VA = "0x841FF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x842060", Offset = "0x842060", VA = "0x842060")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x8420C8", Offset = "0x8420C8", VA = "0x8420C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x842130", Offset = "0x842130", VA = "0x842130")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x84258C", Offset = "0x84258C", VA = "0x84258C")]
	private void PreCharacterMovement()
	{
	}
}
[Token(Token = "0x2000195")]
public class CmdManager_SA : MonoBehaviour
{
	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject SyncVarManager;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string SyncVarManager_ObjName;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject NetSyncValue2;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string NetSyncValue2_ObjName;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NetSyncValue2_SA netSyncValue2;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float HMD;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float HMD_buff;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public byte LTouch;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public byte LTouch_buff;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public byte RTouch;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public byte RTouch_buff;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject GameOverEventObj;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x847DD0", Offset = "0x847DD0", VA = "0x847DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x847E7C", Offset = "0x847E7C", VA = "0x847E7C")]
	public void Cmd_PlayerDeadFlagChange(int PlayerNumber)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x847FA4", Offset = "0x847FA4", VA = "0x847FA4")]
	public void Cmd_PlayerStateChange(int PlayerNumber, int state)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x84803C", Offset = "0x84803C", VA = "0x84803C")]
	public CmdManager_SA()
	{
	}
}
[Token(Token = "0x2000196")]
public class MoveAvatarChild_SA : MonoBehaviour
{
	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject parent;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject TargetPlayerObject;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject TargetRaycastObject;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject TargetAvatarObject;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string TargetObjectName1;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool avatarMove_player1;

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x93DBB8", Offset = "0x93DBB8", VA = "0x93DBB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x93DBBC", Offset = "0x93DBBC", VA = "0x93DBBC")]
	public void MoveAvatarChild_sub()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x93DC08", Offset = "0x93DC08", VA = "0x93DC08")]
	public void ResetObjectTransform(GameObject playerObj)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x93DDC8", Offset = "0x93DDC8", VA = "0x93DDC8")]
	public MoveAvatarChild_SA()
	{
	}
}
[Token(Token = "0x2000197")]
public class TrackingTransform_SA : MonoBehaviour
{
	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform HMD;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform HandL;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform HandR;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ObjectName objectName;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int playerNo;

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x8577C4", Offset = "0x8577C4", VA = "0x8577C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x857B20", Offset = "0x857B20", VA = "0x857B20")]
	public TrackingTransform_SA()
	{
	}
}
[Token(Token = "0x2000198")]
public class AVProEvent_play : MonoBehaviour
{
	[Token(Token = "0x600093D")]
	[Address(RVA = "0x83268C", Offset = "0x83268C", VA = "0x83268C")]
	public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode error)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x832890", Offset = "0x832890", VA = "0x832890")]
	public AVProEvent_play()
	{
	}
}
[Token(Token = "0x2000199")]
public class BattleSequenceManager_SA : MonoBehaviour
{
	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NetSyncValue_SA netSyncValue;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int nowState;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int lastState;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66BA44", Offset = "0x66BA44")]
	public GameObject[] EnableGameObjectStart2;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public GameObject[] EnableGameObjectStart2_Player;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public GameObject[] EnableGameObjectEnd2;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66BAB0", Offset = "0x66BAB0")]
	public GameObject[] EnableGameObjectStart3;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public GameObject[] EnableGameObjectStart3_Player;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public GameObject[] EnableGameObjectEnd3;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66BB1C", Offset = "0x66BB1C")]
	public GameObject[] EnableGameObjectStart4;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public GameObject[] DisableGameObjectStart4;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public GameObject[] EnableGameObjectEnd4;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66BB88", Offset = "0x66BB88")]
	[SerializeField]
	public GameObject[] EnableGameObjectStart5;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66BBD4", Offset = "0x66BBD4")]
	[SerializeField]
	public GameObject[] EnableGameObjectStart6;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public GameObject[] DisableGameObjectStart6;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool setFlag;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool setFlag2;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool setFlag3;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool setFlag4;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool setFlag5;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x83DA60", Offset = "0x83DA60", VA = "0x83DA60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x83DA64", Offset = "0x83DA64", VA = "0x83DA64")]
	public void ObjectOnOff_Check()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x83DED4", Offset = "0x83DED4", VA = "0x83DED4")]
	public BattleSequenceManager_SA()
	{
	}
}
[Token(Token = "0x200019A")]
public class Controll_Swich_SA : MonoBehaviour
{
	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRPlayerController OVRPCont;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool setAction;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x848044", Offset = "0x848044", VA = "0x848044")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x848080", Offset = "0x848080", VA = "0x848080")]
	public Controll_Swich_SA()
	{
	}
}
[Token(Token = "0x200019B")]
public class Debug_DrawRay : MonoBehaviour
{
	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform gazePointer;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayerMask Layer;

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x9AFD58", Offset = "0x9AFD58", VA = "0x9AFD58")]
	public void SetPointer(Ray ray)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x9AFF1C", Offset = "0x9AFF1C", VA = "0x9AFF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x9B0060", Offset = "0x9B0060", VA = "0x9B0060")]
	public Debug_DrawRay()
	{
	}
}
[Token(Token = "0x200019C")]
public class Debug_HPCheck : MonoBehaviour
{
	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerCheck_V02_SA PCheckObj;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMesh dataText;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string loadText;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int LastHP;

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x9B0170", Offset = "0x9B0170", VA = "0x9B0170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x9B01E0", Offset = "0x9B01E0", VA = "0x9B01E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x9B0268", Offset = "0x9B0268", VA = "0x9B0268")]
	public Debug_HPCheck()
	{
	}
}
[Token(Token = "0x200019D")]
public class Debug_OBSwich : MonoBehaviour
{
	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] MiyaObj;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _Obnum;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useY;

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x9B0338", Offset = "0x9B0338", VA = "0x9B0338")]
	private void Start()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x9B033C", Offset = "0x9B033C", VA = "0x9B033C")]
	private void Update()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x9B04A8", Offset = "0x9B04A8", VA = "0x9B04A8")]
	public Debug_OBSwich()
	{
	}
}
[Token(Token = "0x200019E")]
public class Debug_PlayerWarpCheck : MonoBehaviour
{
	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666300", Offset = "0x666300")]
	private sealed class <SetActive>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Debug_PlayerWarpCheck <>4__this;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int tempnum;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x9B0EF4", Offset = "0x9B0EF4", VA = "0x9B0EF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x9B0F64", Offset = "0x9B0F64", VA = "0x9B0F64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x9B0BFC", Offset = "0x9B0BFC", VA = "0x9B0BFC")]
		[DebuggerHidden]
		public <SetActive>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x9B0D14", Offset = "0x9B0D14", VA = "0x9B0D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x9B0D18", Offset = "0x9B0D18", VA = "0x9B0D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x9B0EFC", Offset = "0x9B0EFC", VA = "0x9B0EFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] WarpPos;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int warpnum;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float WaitTime;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRManager OVRCam;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRCameraRig CameraRig;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject StopperOb;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ready;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera _camera;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject CenterEye;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool StopCamFlg;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool FixCamFlg;

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x9B04B8", Offset = "0x9B04B8", VA = "0x9B04B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x9B0528", Offset = "0x9B0528", VA = "0x9B0528")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x9B05BC", Offset = "0x9B05BC", VA = "0x9B05BC")]
	private void SetWarp()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x9B0B64", Offset = "0x9B0B64", VA = "0x9B0B64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6755A8", Offset = "0x6755A8")]
	private IEnumerator SetActive(int tempnum)
	{
		return null;
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x9B0C28", Offset = "0x9B0C28", VA = "0x9B0C28")]
	private void StopFollow()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x9B08BC", Offset = "0x9B08BC", VA = "0x9B08BC")]
	private void FixCam()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x9B0CFC", Offset = "0x9B0CFC", VA = "0x9B0CFC")]
	public Debug_PlayerWarpCheck()
	{
	}
}
[Token(Token = "0x20001A0")]
public class Debug_TextOutput_SA : MonoBehaviour
{
	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666310", Offset = "0x666310")]
	private sealed class <ViewText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Debug_TextOutput_SA <>4__this;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x9B1974", Offset = "0x9B1974", VA = "0x9B1974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x9B19E4", Offset = "0x9B19E4", VA = "0x9B19E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x9B1848", Offset = "0x9B1848", VA = "0x9B1848")]
		[DebuggerHidden]
		public <ViewText>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x9B187C", Offset = "0x9B187C", VA = "0x9B187C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x9B1880", Offset = "0x9B1880", VA = "0x9B1880", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x9B197C", Offset = "0x9B197C", VA = "0x9B197C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMesh dataText;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string loadText;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float blankTime;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool Set_ExCount;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool Set_EventPar;

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x9B1450", Offset = "0x9B1450", VA = "0x9B1450")]
	private void Start()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x9B17D4", Offset = "0x9B17D4", VA = "0x9B17D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x67565C", Offset = "0x67565C")]
	private IEnumerator ViewText()
	{
		return null;
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x9B1874", Offset = "0x9B1874", VA = "0x9B1874")]
	public Debug_TextOutput_SA()
	{
	}
}
[Token(Token = "0x20001A2")]
public class Debug_Titleoparate_PC : MonoBehaviour
{
	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TitleManager_SA TitleManager;

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x9B19EC", Offset = "0x9B19EC", VA = "0x9B19EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x9B1A5C", Offset = "0x9B1A5C", VA = "0x9B1A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x9B1B6C", Offset = "0x9B1B6C", VA = "0x9B1B6C")]
	private void SetDiff(int tempDif)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x9B1BCC", Offset = "0x9B1BCC", VA = "0x9B1BCC")]
	public Debug_Titleoparate_PC()
	{
	}
}
[Token(Token = "0x20001A3")]
public class Debug_TrainingMode : MonoBehaviour
{
	[Token(Token = "0x20001A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666320", Offset = "0x666320")]
	private sealed class <RetuenMenu>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x9B2BFC", Offset = "0x9B2BFC", VA = "0x9B2BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x9B2C6C", Offset = "0x9B2C6C", VA = "0x9B2C6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x9B2144", Offset = "0x9B2144", VA = "0x9B2144")]
		[DebuggerHidden]
		public <RetuenMenu>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x9B2B58", Offset = "0x9B2B58", VA = "0x9B2B58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x9B2B5C", Offset = "0x9B2B5C", VA = "0x9B2B5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x9B2C04", Offset = "0x9B2C04", VA = "0x9B2C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject SystemBattleObj;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject SystemObj;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] BattleFieldLoader;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject Battle_Boss_KM;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] StartMap_OnlyUse;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject TitleRoot;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject ButtonMain;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject TraningMenu;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject ButtonTraning;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject CollderMain;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject CollderTraBitton;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject CollderTraning;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text dataText;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject[] BattleBGM;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject[] StartMap_Active;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject EnableBattleObj_1;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject EnableBattleObj_2;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject EnableBattleObj_Boss;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject BattleSpawner_L1_B1;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject BattleSpawner_L2_B1;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject BattleSpawner_L3_B1;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject BattleSpawner_L1_B2;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject BattleSpawner_L2_B2;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject BattleSpawner_L3_B2;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float StartTime;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float BattleTime;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int BattleNum;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float setSpawnWait;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool SkipTrigger;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float SkipTimmer;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool AddSkipCount;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool BattleStart;

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x9B1BD4", Offset = "0x9B1BD4", VA = "0x9B1BD4")]
	public void OnSPwaitClicked(float tempWait)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x9B1D28", Offset = "0x9B1D28", VA = "0x9B1D28")]
	private void setintervalTime(GameObject TempObj)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x9B1F50", Offset = "0x9B1F50", VA = "0x9B1F50")]
	private void Update()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x9B20E4", Offset = "0x9B20E4", VA = "0x9B20E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675710", Offset = "0x675710")]
	private IEnumerator RetuenMenu()
	{
		return null;
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x9B2170", Offset = "0x9B2170", VA = "0x9B2170")]
	public void OnReturnClicked()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x9B2228", Offset = "0x9B2228", VA = "0x9B2228")]
	public void OnTraningClicked()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x9B22E0", Offset = "0x9B22E0", VA = "0x9B22E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x9B2544", Offset = "0x9B2544", VA = "0x9B2544")]
	private void TrainingInit()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x9B2578", Offset = "0x9B2578", VA = "0x9B2578")]
	public void Deb_BTTraining()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x9B296C", Offset = "0x9B296C", VA = "0x9B296C")]
	private void TraningStart()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x9B2B40", Offset = "0x9B2B40", VA = "0x9B2B40")]
	public void OnSettingBattleClicked(int tempDif)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x9B2B48", Offset = "0x9B2B48", VA = "0x9B2B48")]
	public Debug_TrainingMode()
	{
	}
}
[Token(Token = "0x20001A5")]
public class EventCameraController_SA : MonoBehaviour
{
	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject CenterEye;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform[] WarpPos;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CapsuleCollider HMD_tagObj;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ColliderObj_RoomWall;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int warpnum;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool FixCamFlg;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x81C890", Offset = "0x81C890", VA = "0x81C890")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x81C8A0", Offset = "0x81C8A0", VA = "0x81C8A0")]
	private void CamPosMove()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x81CAEC", Offset = "0x81CAEC", VA = "0x81CAEC")]
	public void SetWarpPos(int tempNum, bool tempFix = false, bool temp_useWall = false)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x81CB88", Offset = "0x81CB88", VA = "0x81CB88")]
	public EventCameraController_SA()
	{
	}
}
[Token(Token = "0x20001A6")]
public class EventCameraSet_SA : MonoBehaviour
{
	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EventCameraController_SA EventCamCont;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int WarpPosNum;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool CamFix;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool useWall;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x81CB90", Offset = "0x81CB90", VA = "0x81CB90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x81CBE4", Offset = "0x81CBE4", VA = "0x81CBE4")]
	public EventCameraSet_SA()
	{
	}
}
[Token(Token = "0x20001A7")]
public class FFR_Setting_SA : MonoBehaviour
{
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FFR FFRObj;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float ResolutionScale;

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x81D214", Offset = "0x81D214", VA = "0x81D214")]
	private void Start()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x81D248", Offset = "0x81D248", VA = "0x81D248")]
	public FFR_Setting_SA()
	{
	}
}
[Token(Token = "0x20001A8")]
public class forOculusAppLabSys_SA : MonoBehaviour
{
	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] ControllerObj;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject TitleMenuObj;

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x864C34", Offset = "0x864C34", VA = "0x864C34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x864D00", Offset = "0x864D00", VA = "0x864D00")]
	private void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x864D0C", Offset = "0x864D0C", VA = "0x864D0C")]
	private void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x864E2C", Offset = "0x864E2C", VA = "0x864E2C")]
	public forOculusAppLabSys_SA()
	{
	}
}
[Token(Token = "0x20001A9")]
public class AutoRestart_SA : MonoBehaviour
{
	[Token(Token = "0x6000985")]
	[Address(RVA = "0x836C90", Offset = "0x836C90", VA = "0x836C90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x836C9C", Offset = "0x836C9C", VA = "0x836C9C")]
	public AutoRestart_SA()
	{
	}
}
[Token(Token = "0x20001AA")]
public class EndUIManager_SA : MonoBehaviour
{
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666330", Offset = "0x666330")]
	private sealed class <PlayExit>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndUIManager_SA <>4__this;

		[Token(Token = "0x170000FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x9C1284", Offset = "0x9C1284", VA = "0x9C1284", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x9C12F4", Offset = "0x9C12F4", VA = "0x9C12F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x9C108C", Offset = "0x9C108C", VA = "0x9C108C")]
		[DebuggerHidden]
		public <PlayExit>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x9C11A4", Offset = "0x9C11A4", VA = "0x9C11A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x9C11A8", Offset = "0x9C11A8", VA = "0x9C11A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x9C128C", Offset = "0x9C128C", VA = "0x9C128C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject systemObj;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject JP_Record;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject EN_Record;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ViewPointer;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject FadeOut_Obj;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CanvasGroup _mainCanvas;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject[] EndMassage;

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x9C0E04", Offset = "0x9C0E04", VA = "0x9C0E04")]
	public void PointerEnter_ExitButton()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x9C0E94", Offset = "0x9C0E94", VA = "0x9C0E94")]
	public void PointerExit_ExitButton()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x9C0F24", Offset = "0x9C0F24", VA = "0x9C0F24")]
	public void OnClicked_ExitButton()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x9C1018", Offset = "0x9C1018", VA = "0x9C1018")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6757C4", Offset = "0x6757C4")]
	private IEnumerator PlayExit()
	{
		return null;
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x9C10B8", Offset = "0x9C10B8", VA = "0x9C10B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x9C119C", Offset = "0x9C119C", VA = "0x9C119C")]
	public EndUIManager_SA()
	{
	}
}
[Token(Token = "0x20001AC")]
public class Menu_RecordView_SA : MonoBehaviour
{
	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int DifficultLevel;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] KillRate10;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] KillRate01;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] AcPar100;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] AcPar010;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] AcPar001;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] Diffobj;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x93C5D0", Offset = "0x93C5D0", VA = "0x93C5D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x93CB00", Offset = "0x93CB00", VA = "0x93CB00")]
	private int GetPointDigit(int tempnum, int tempDigit)
	{
		return default(int);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x93C7B4", Offset = "0x93C7B4", VA = "0x93C7B4")]
	private void ViewKillrate(int TempCont)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x93C8A0", Offset = "0x93C8A0", VA = "0x93C8A0")]
	private void ViewAchevementPar(int TempPar)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x93CA60", Offset = "0x93CA60", VA = "0x93CA60")]
	private void ViewDifficult(int TempLevel)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x93CBA8", Offset = "0x93CBA8", VA = "0x93CBA8")]
	public Menu_RecordView_SA()
	{
	}
}
[Token(Token = "0x20001AD")]
public class TitleManager_SA : MonoBehaviour
{
	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666340", Offset = "0x666340")]
	private sealed class <PlayStart>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TitleManager_SA <>4__this;

		[Token(Token = "0x17000100")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x856EC8", Offset = "0x856EC8", VA = "0x856EC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x856F38", Offset = "0x856F38", VA = "0x856F38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x85689C", Offset = "0x85689C", VA = "0x85689C")]
		[DebuggerHidden]
		public <PlayStart>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x856C54", Offset = "0x856C54", VA = "0x856C54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x856C58", Offset = "0x856C58", VA = "0x856C58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x856ED0", Offset = "0x856ED0", VA = "0x856ED0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666350", Offset = "0x666350")]
	private sealed class <AppQuit>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TitleManager_SA <>4__this;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0x856BDC", Offset = "0x856BDC", VA = "0x856BDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x856C4C", Offset = "0x856C4C", VA = "0x856C4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x856994", Offset = "0x856994", VA = "0x856994")]
		[DebuggerHidden]
		public <AppQuit>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x856B00", Offset = "0x856B00", VA = "0x856B00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x856B04", Offset = "0x856B04", VA = "0x856B04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x856BE4", Offset = "0x856BE4", VA = "0x856BE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66BFC0", Offset = "0x66BFC0")]
	[SerializeField]
	private GameObject Title_Main_Group;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject Title_Setting_Group;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject Title_Record_Group;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject Title_Howto_Group;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image VolSize;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Toggle[] DiffButton;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject JP_Prefab;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66C06C", Offset = "0x66C06C")]
	private GameObject Collider_Main;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject Collider_Setting;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject Collider_Record;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject Collider_Howto;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66C0E8", Offset = "0x66C0E8")]
	private CanvasGroup _mainCanvas;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66C134", Offset = "0x66C134")]
	[SerializeField]
	private GameObject GuideArrow;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66C180", Offset = "0x66C180")]
	private GameObject[] StartMap_Active;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66C1CC", Offset = "0x66C1CC")]
	[SerializeField]
	private GameObject[] StartMap_OnlyUse;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66C218", Offset = "0x66C218")]
	[SerializeField]
	private AudioSource AudioObj_Select;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject AudioObj_Start;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66C274", Offset = "0x66C274")]
	[SerializeField]
	private GameObject FadeOut_Obj;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject systemObj;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject PanelMiya;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private SaveManager_SA _saveManager;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private NetSyncValue_SA netSyncObj;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66C2E0", Offset = "0x66C2E0")]
	private GameObject Title_Main_Group_EN;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject Title_Setting_Group_EN;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject Title_Record_Group_EN;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject Title_Howto_Group_EN;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Image VolSize_EN;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Toggle[] DiffButton_EN;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject EN_Prefab;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject _titleMain;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject _titleSetting;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject _titleRecord;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject _titleHowto;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Image _volSize;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<Toggle> _diffButton;

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x855EAC", Offset = "0x855EAC", VA = "0x855EAC")]
	private void SetLanguage(int tempNum = 99)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x8561E0", Offset = "0x8561E0", VA = "0x8561E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x856350", Offset = "0x856350", VA = "0x856350")]
	public void OnMainMenuClicked(int tempMenu)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x856860", Offset = "0x856860", VA = "0x856860")]
	public void ExitMenu()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x8560A8", Offset = "0x8560A8", VA = "0x8560A8")]
	private void setMainMenu()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x856654", Offset = "0x856654", VA = "0x856654")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675878", Offset = "0x675878")]
	private IEnumerator PlayStart()
	{
		return null;
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x8568C8", Offset = "0x8568C8", VA = "0x8568C8")]
	public void OnSettingDifficultClicked(int tempDif)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x8567F0", Offset = "0x8567F0", VA = "0x8567F0")]
	private void OnQuitClicked()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x856920", Offset = "0x856920", VA = "0x856920")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6758DC", Offset = "0x6758DC")]
	private IEnumerator AppQuit()
	{
		return null;
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x8569C0", Offset = "0x8569C0", VA = "0x8569C0")]
	public void OnSettingVolume(float tempVol)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x85629C", Offset = "0x85629C", VA = "0x85629C")]
	public void OpenSetting()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x8566C8", Offset = "0x8566C8", VA = "0x8566C8")]
	private void InstSetting()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x856A90", Offset = "0x856A90", VA = "0x856A90")]
	public TitleManager_SA()
	{
	}
}
[Token(Token = "0x20001B0")]
public class MoveHead_SA : MonoBehaviour
{
	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject server_Init_obj;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Server_Init_SA server_Init;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject objname_get;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject TargetPlayerObject;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool rayMove_player1;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool rayMove_player2;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool rayMove_player3;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool rayMove_player4;

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x93E3D4", Offset = "0x93E3D4", VA = "0x93E3D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x93E43C", Offset = "0x93E43C", VA = "0x93E43C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x93E440", Offset = "0x93E440", VA = "0x93E440")]
	public void MoveHead_sub()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x93E670", Offset = "0x93E670", VA = "0x93E670")]
	public void ResetObjectTransform(GameObject playerObj)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x93E8B4", Offset = "0x93E8B4", VA = "0x93E8B4")]
	public MoveHead_SA()
	{
	}
}
[Token(Token = "0x20001B1")]
public class NetSyncValue_SA : MonoBehaviour
{
	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Init_GameStatusFlag;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Init_CurseAnimeFlag;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Init_SealedAnimeFlag;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Init_Player_Number;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Init_Player_Total;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int Init_Player_RenameNumber;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int rename_player1;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int rename_player2;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int rename_player3;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int rename_player4;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int login_player1;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int login_player2;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int login_player3;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int login_player4;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float battery_HMD_PL1;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float battery_Controller_L_PL1;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float battery_Controller_R_PL1;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float battery_HMD_PL2;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float battery_Controller_L_PL2;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float battery_Controller_R_PL2;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float battery_HMD_PL3;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float battery_Controller_L_PL3;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float battery_Controller_R_PL3;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float battery_HMD_PL4;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float battery_Controller_L_PL4;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float battery_Controller_R_PL4;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Battle_Difficult;

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x950878", Offset = "0x950878", VA = "0x950878")]
	public void GameStatusFlagChange(int states)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x950880", Offset = "0x950880", VA = "0x950880")]
	public NetSyncValue_SA()
	{
	}
}
[Token(Token = "0x20001B2")]
public class NetSyncValue2_SA : MonoBehaviour
{
	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MagatamaOnFlag;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Player01_Status;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Player02_Status;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Player03_Status;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Player04_Status;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int SetingOK;

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x950870", Offset = "0x950870", VA = "0x950870")]
	public NetSyncValue2_SA()
	{
	}
}
[Token(Token = "0x20001B3")]
public class OB_ActiveLink_SA : MonoBehaviour
{
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666360", Offset = "0x666360")]
	private sealed class <SetActive>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OB_ActiveLink_SA <>4__this;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x950AAC", Offset = "0x950AAC", VA = "0x950AAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x950B1C", Offset = "0x950B1C", VA = "0x950B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x95096C", Offset = "0x95096C", VA = "0x95096C")]
		[DebuggerHidden]
		public <SetActive>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x9509B0", Offset = "0x9509B0", VA = "0x9509B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x9509B4", Offset = "0x9509B4", VA = "0x9509B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x950AB4", Offset = "0x950AB4", VA = "0x950AB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject LinkTargetObj;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool OnEnableAction;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float WaitTime;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int CheckDifficult;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private NetSyncValue_SA netSyncObj;

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x950888", Offset = "0x950888", VA = "0x950888")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x9508F8", Offset = "0x9508F8", VA = "0x9508F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6759E0", Offset = "0x6759E0")]
	private IEnumerator SetActive()
	{
		return null;
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x950998", Offset = "0x950998", VA = "0x950998")]
	public OB_ActiveLink_SA()
	{
	}
}
[Token(Token = "0x20001B5")]
public class OB_FollowOnEnable_SA : MonoBehaviour
{
	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform TargetObj;

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x950BB8", Offset = "0x950BB8", VA = "0x950BB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x950C50", Offset = "0x950C50", VA = "0x950C50")]
	public OB_FollowOnEnable_SA()
	{
	}
}
[Token(Token = "0x20001B6")]
public class Save_EndRecord_SA : MonoBehaviour
{
	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SaveManager_SA SaveManagerObj;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xA24578", Offset = "0xA24578", VA = "0xA24578")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xA245D8", Offset = "0xA245D8", VA = "0xA245D8")]
	public Save_EndRecord_SA()
	{
	}
}
[Token(Token = "0x20001B7")]
public class SaveManager_SA : MonoBehaviour
{
	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NetSyncValue_SA netSyncObj;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SyncVarManager_SA syncVarManager;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xA23DDC", Offset = "0xA23DDC", VA = "0xA23DDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xA23FC4", Offset = "0xA23FC4", VA = "0xA23FC4")]
	public void SaveDifficult()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xA24030", Offset = "0xA24030", VA = "0xA24030")]
	public void SaveVolume()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xA2408C", Offset = "0xA2408C", VA = "0xA2408C")]
	public void SaveExCount()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xA241A8", Offset = "0xA241A8", VA = "0xA241A8")]
	public void SaveEventPar()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xA24474", Offset = "0xA24474", VA = "0xA24474")]
	public void SaveClearFlag()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xA244FC", Offset = "0xA244FC", VA = "0xA244FC")]
	public void SaveLanguage()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xA24568", Offset = "0xA24568", VA = "0xA24568")]
	public SaveManager_SA()
	{
	}
}
[Token(Token = "0x20001B8")]
public class Server_Init_SA : MonoBehaviour
{
	[Token(Token = "0x20001B9")]
	public class TrackingInformation
	{
		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isTrackingEnable;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float lostTime;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isNeedAction;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isNeedClose;

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xA27660", Offset = "0xA27660", VA = "0xA27660")]
		public TrackingInformation()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xA27774", Offset = "0xA27774", VA = "0xA27774")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xA27788", Offset = "0xA27788", VA = "0xA27788")]
		public void TrackingLost()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xA277A0", Offset = "0xA277A0", VA = "0xA277A0")]
		public void TrackingAcquired()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xA277D0", Offset = "0xA277D0", VA = "0xA277D0")]
		public void Update()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xA27818", Offset = "0xA27818", VA = "0xA27818")]
		public bool IsLost()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xA27828", Offset = "0xA27828", VA = "0xA27828")]
		public bool IsNeedAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xA27830", Offset = "0xA27830", VA = "0xA27830")]
		public bool IsNeedClose()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xA27838", Offset = "0xA27838", VA = "0xA27838")]
		public void Closed()
		{
		}
	}

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Init_Booth01IP_text;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Init_Booth02IP_text;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Init_Booth03IP_text;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Init_Booth04IP_text;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Init_ConfigfileEnd;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Init_ConfigfileEnd2;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string Init_thisServer_Name;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string Init_Server01_Name;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string Init_Server02_Name;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string Init_Server03_Name;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string Init_Server04_Name;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int PlayerMyNumber;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int PlayerRetire_buff;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int Int_CustomTimeoutFlag;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int Init_SameMapFlag;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Init_TrgCounter;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int Init_PlayerStatus01_TrgCount;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int Init_PlayerStatus02_TrgCount;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int Init_PlayerStatus03_TrgCount;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int Init_PlayerStatus04_TrgCount;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int LimitTimeFix;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int LimitTimeOnOff;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int TimeStartFlag_Global;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float Player1_HMD_Move_PosX;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float Player1_HMD_Move_PosZ;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float Player1_HMD_Move_RotY;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float Player2_HMD_Move_PosX;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float Player2_HMD_Move_PosZ;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float Player2_HMD_Move_RotY;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float Player3_HMD_Move_PosX;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float Player3_HMD_Move_PosZ;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float Player3_HMD_Move_RotY;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float Player4_HMD_Move_PosX;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float Player4_HMD_Move_PosZ;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float Player4_HMD_Move_RotY;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int AvatarResizeStatus;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int ResizePoseStatus_HandR;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int ResizePoseStatus_HandL;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int ResizePoseStatus_Head;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int Flag_BossSealStart;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int Init_Difficult;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int Init_Debug;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int[] ServerConnectPlayerFlag;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Server_Init_SA server_init;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TrackingInformation[] trackingInformation;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float[] hmdHeight;

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xA274CC", Offset = "0xA274CC", VA = "0xA274CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xA27694", Offset = "0xA27694", VA = "0xA27694")]
	public Server_Init_SA()
	{
	}
}
[Token(Token = "0x20001BA")]
public class SkipMovie_SA : MonoBehaviour
{
	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject SkipTimelineObj;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool ControlTrigger;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _Executed;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool ClareFlg;

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xA2B70C", Offset = "0xA2B70C", VA = "0xA2B70C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xA2B76C", Offset = "0xA2B76C", VA = "0xA2B76C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xA2B804", Offset = "0xA2B804", VA = "0xA2B804")]
	private void DisableObj()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xA2B86C", Offset = "0xA2B86C", VA = "0xA2B86C")]
	public SkipMovie_SA()
	{
	}
}
[Token(Token = "0x20001BB")]
public class SyncVarManager_SA : MonoBehaviour
{
	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Init_BattleStatusFlag;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Init_SealedCount;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Init_BattleSceneFlag;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int PlayerStatus01_MapNumber;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int PlayerStatus02_MapNumber;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int PlayerStatus03_MapNumber;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int PlayerStatus04_MapNumber;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int PlayerStatus01_Retire;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int PlayerStatus02_Retire;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int PlayerStatus03_Retire;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int PlayerStatus04_Retire;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int PlayerStatus01_TrgCount;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int PlayerStatus02_TrgCount;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int PlayerStatus03_TrgCount;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int PlayerStatus04_TrgCount;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int HitPoint_Boss;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int PlayerStatus01_DeadFlag;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int PlayerStatus02_DeadFlag;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int PlayerStatus03_DeadFlag;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int PlayerStatus04_DeadFlag;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int Ending_Flag;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int TimeUpFlag_Global;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float ClearTime;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VolumeLockFlag;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int Ex_Flag01;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int Ex_Flag02;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Ex_Flag03;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int EventCount;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int EventCountMax;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int SetLanguage;

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xA2DE90", Offset = "0xA2DE90", VA = "0xA2DE90")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xA2DE98", Offset = "0xA2DE98", VA = "0xA2DE98")]
	public SyncVarManager_SA()
	{
	}
}
[Token(Token = "0x20001BC")]
public class TrackingManager_SA : SingletonMonoBehaviour<TrackingManager_SA>
{
	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HMD;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject HandL;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject HandR;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject HMD_PC;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x85718C", Offset = "0x85718C", VA = "0x85718C")]
	public TrackingManager_SA()
	{
	}
}
[Token(Token = "0x20001BD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666370", Offset = "0x666370")]
public class MysticOrbit : MonoBehaviour
{
	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distanceMin;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMax;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float smoothTime;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rotationYAxis;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationXAxis;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float velocityX;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velocityY;

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x947318", Offset = "0x947318", VA = "0x947318")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x947408", Offset = "0x947408", VA = "0x947408")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x947840", Offset = "0x947840", VA = "0x947840")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x9478F0", Offset = "0x9478F0", VA = "0x9478F0")]
	public MysticOrbit()
	{
	}
}
[Token(Token = "0x20001BE")]
public class MysticProjectileScript : MonoBehaviour
{
	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactParticle;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject projectileParticle;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject muzzleParticle;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] trailParticles;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3 impactNormal;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool hasCollided;

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x94790C", Offset = "0x94790C", VA = "0x94790C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x947B68", Offset = "0x947B68", VA = "0x947B68")]
	private void OnCollisionEnter(Collision hit)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x947FA8", Offset = "0x947FA8", VA = "0x947FA8")]
	public MysticProjectileScript()
	{
	}
}
[Token(Token = "0x20001BF")]
public class MysticSceneSelect : MonoBehaviour
{
	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x947FB0", Offset = "0x947FB0", VA = "0x947FB0")]
	public void LoadSceneDemo1()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x947FFC", Offset = "0x947FFC", VA = "0x947FFC")]
	public void LoadSceneDemo2()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x948048", Offset = "0x948048", VA = "0x948048")]
	public void LoadSceneDemo3()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x948094", Offset = "0x948094", VA = "0x948094")]
	public void LoadSceneDemo4()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x9480E0", Offset = "0x9480E0", VA = "0x9480E0")]
	public void LoadSceneDemo5()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x94812C", Offset = "0x94812C", VA = "0x94812C")]
	public void LoadSceneDemo6()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x948178", Offset = "0x948178", VA = "0x948178")]
	public void LoadSceneDemo7()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x9481C4", Offset = "0x9481C4", VA = "0x9481C4")]
	public void LoadSceneDemo8()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x948210", Offset = "0x948210", VA = "0x948210")]
	public void LoadSceneDemo9()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x94825C", Offset = "0x94825C", VA = "0x94825C")]
	public void LoadSceneDemo10()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x9482A8", Offset = "0x9482A8", VA = "0x9482A8")]
	public void LoadSceneDemo11()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x9482F4", Offset = "0x9482F4", VA = "0x9482F4")]
	public MysticSceneSelect()
	{
	}
}
[Token(Token = "0x20001C0")]
public class MysticLightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string waveFunction;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startValue;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amplitude;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float phase;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float frequency;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color originalColor;

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x946FA0", Offset = "0x946FA0", VA = "0x946FA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x947014", Offset = "0x947014", VA = "0x947014")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x9470DC", Offset = "0x9470DC", VA = "0x9470DC")]
	private float EvalWave()
	{
		return default(float);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x9472B0", Offset = "0x9472B0", VA = "0x9472B0")]
	public MysticLightFlicker()
	{
	}
}
[Token(Token = "0x20001C1")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6663A8", Offset = "0x6663A8")]
public class FastList<T>
{
	[Token(Token = "0x20001C2")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6663E0", Offset = "0x6663E0")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000108")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000A1A")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000109")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1C")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A17")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000A18")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A19")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1B")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000106")]
	public int Count
	{
		[Token(Token = "0x60009FB")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public T Item
	{
		[Token(Token = "0x60009FD")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60009FE")]
		set
		{
		}
	}

	[Token(Token = "0x60009F9")]
	public FastList()
	{
	}

	[Token(Token = "0x60009FA")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60009FF")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000A00")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000A01")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000A02")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000A03")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A04")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000A05")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A06")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000A07")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A08")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000A09")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000A0A")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000A0C")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000A0D")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675A94", Offset = "0x675A94")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000A0E")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000A0F")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000A10")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000A11")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A12")]
	public void Release()
	{
	}
}
[Token(Token = "0x20001C4")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x820564", Offset = "0x820564", VA = "0x820564")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x20001C5")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x820538", Offset = "0x820538", VA = "0x820538")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x20001C6")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20001C7")]
	public delegate void OnClick();

	[Token(Token = "0x20001C8")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20001C9")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20001CA")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6663F0", Offset = "0x6663F0")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x9AD95C", Offset = "0x9AD95C", VA = "0x9AD95C")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x9AE594", Offset = "0x9AE594", VA = "0x9AE594")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666400", Offset = "0x666400")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x9ADC60", Offset = "0x9ADC60", VA = "0x9ADC60")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x9AE9C0", Offset = "0x9AE9C0", VA = "0x9AE9C0")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666410", Offset = "0x666410")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x9ADEAC", Offset = "0x9ADEAC", VA = "0x9ADEAC")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x9AEE4C", Offset = "0x9AEE4C", VA = "0x9AEE4C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666420", Offset = "0x666420")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x9AE080", Offset = "0x9AE080", VA = "0x9AE080")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x9AF5B0", Offset = "0x9AF5B0", VA = "0x9AF5B0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666430", Offset = "0x666430")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x9AE35C", Offset = "0x9AE35C", VA = "0x9AE35C")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x9AF5E0", Offset = "0x9AF5E0", VA = "0x9AF5E0")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000DF2")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000DF3")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000DF4")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000E02")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000E03")]
	private const float marginH = 16f;

	[Token(Token = "0x4000E04")]
	private const float marginV = 16f;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x9AC36C", Offset = "0x9AC36C", VA = "0x9AC36C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x9AC894", Offset = "0x9AC894", VA = "0x9AC894")]
	public void Show()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x9AD0A0", Offset = "0x9AD0A0", VA = "0x9AD0A0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x9ACDA0", Offset = "0x9ACDA0", VA = "0x9ACDA0")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x9AD294", Offset = "0x9AD294", VA = "0x9AD294")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x9AD650", Offset = "0x9AD650", VA = "0x9AD650")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x9AD964", Offset = "0x9AD964", VA = "0x9AD964")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x9ADA6C", Offset = "0x9ADA6C", VA = "0x9ADA6C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x9ADC68", Offset = "0x9ADC68", VA = "0x9ADC68")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x9ADD04", Offset = "0x9ADD04", VA = "0x9ADD04")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x9ADEB4", Offset = "0x9ADEB4", VA = "0x9ADEB4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x9AE088", Offset = "0x9AE088", VA = "0x9AE088")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x9AE364", Offset = "0x9AE364", VA = "0x9AE364")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x9AE464", Offset = "0x9AE464", VA = "0x9AE464")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x9AE524", Offset = "0x9AE524", VA = "0x9AE524")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20001D0")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x81F954", Offset = "0x81F954", VA = "0x81F954")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x81F9DC", Offset = "0x81F9DC", VA = "0x81F9DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x81FA5C", Offset = "0x81FA5C", VA = "0x81FA5C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x81FACC", Offset = "0x81FACC", VA = "0x81FACC")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20001D1")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20001D2")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000E21")]
		On,
		[Token(Token = "0x4000E22")]
		Off,
		[Token(Token = "0x4000E23")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700010A")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x8205F8", Offset = "0x8205F8", VA = "0x8205F8")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x82059C", Offset = "0x82059C", VA = "0x82059C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x820600", Offset = "0x820600", VA = "0x820600")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x820658", Offset = "0x820658", VA = "0x820658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x820778", Offset = "0x820778", VA = "0x820778", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x820794", Offset = "0x820794", VA = "0x820794", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x82080C", Offset = "0x82080C", VA = "0x82080C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x820AF0", Offset = "0x820AF0", VA = "0x820AF0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x820C4C", Offset = "0x820C4C", VA = "0x820C4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x820CE8", Offset = "0x820CE8", VA = "0x820CE8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x820DCC", Offset = "0x820DCC", VA = "0x820DCC")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x820E8C", Offset = "0x820E8C", VA = "0x820E8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x820F58", Offset = "0x820F58", VA = "0x820F58")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20001D3")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000E24")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000E25")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000E26")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C4CC", Offset = "0x66C4CC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C504", Offset = "0x66C504")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C53C", Offset = "0x66C53C")]
	public float HeightOffset;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C574", Offset = "0x66C574")]
	public float MinimumHeight;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C5AC", Offset = "0x66C5AC")]
	public float MaximumHeight;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x840E28", Offset = "0x840E28", VA = "0x840E28")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x840E30", Offset = "0x840E30", VA = "0x840E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x840EA0", Offset = "0x840EA0", VA = "0x840EA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x840F30", Offset = "0x840F30", VA = "0x840F30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x840FC0", Offset = "0x840FC0", VA = "0x840FC0")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x8413F8", Offset = "0x8413F8", VA = "0x8413F8")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x84175C", Offset = "0x84175C", VA = "0x84175C")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001D4")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x821450", Offset = "0x821450", VA = "0x821450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x8214FC", Offset = "0x8214FC", VA = "0x8214FC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20001D5")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20001D6")]
	public enum States
	{
		[Token(Token = "0x4000E54")]
		Ready,
		[Token(Token = "0x4000E55")]
		Aim,
		[Token(Token = "0x4000E56")]
		CancelAim,
		[Token(Token = "0x4000E57")]
		PreTeleport,
		[Token(Token = "0x4000E58")]
		CancelTeleport,
		[Token(Token = "0x4000E59")]
		Teleporting,
		[Token(Token = "0x4000E5A")]
		PostTeleport
	}

	[Token(Token = "0x20001D7")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000E5C")]
		None,
		[Token(Token = "0x4000E5D")]
		Aim,
		[Token(Token = "0x4000E5E")]
		PreTeleport,
		[Token(Token = "0x4000E5F")]
		Teleport
	}

	[Token(Token = "0x20001D8")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000E61")]
		Point,
		[Token(Token = "0x4000E62")]
		Sphere,
		[Token(Token = "0x4000E63")]
		Capsule
	}

	[Token(Token = "0x20001D9")]
	public class AimData
	{
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C9C4", Offset = "0x66C9C4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700010E")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x8249AC", Offset = "0x8249AC", VA = "0x8249AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675FDC", Offset = "0x675FDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x8249A4", Offset = "0x8249A4", VA = "0x8249A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675FEC", Offset = "0x675FEC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x824930", Offset = "0x824930", VA = "0x824930")]
		public AimData()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x8249B4", Offset = "0x8249B4", VA = "0x8249B4")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666440", Offset = "0x666440")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0x82470C", Offset = "0x82470C", VA = "0x82470C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x82477C", Offset = "0x82477C", VA = "0x82477C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x822244", Offset = "0x822244", VA = "0x822244")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x8245A0", Offset = "0x8245A0", VA = "0x8245A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x8245A4", Offset = "0x8245A4", VA = "0x8245A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x824714", Offset = "0x824714", VA = "0x824714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666450", Offset = "0x666450")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x823EDC", Offset = "0x823EDC", VA = "0x823EDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x823F4C", Offset = "0x823F4C", VA = "0x823F4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x8228E0", Offset = "0x8228E0", VA = "0x8228E0")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x823D10", Offset = "0x823D10", VA = "0x823D10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x823D14", Offset = "0x823D14", VA = "0x823D14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x823EE4", Offset = "0x823EE4", VA = "0x823EE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666460", Offset = "0x666460")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000113")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x824030", Offset = "0x824030", VA = "0x824030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x8240A0", Offset = "0x8240A0", VA = "0x8240A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x822B58", Offset = "0x822B58", VA = "0x822B58")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x823F54", Offset = "0x823F54", VA = "0x823F54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x823F58", Offset = "0x823F58", VA = "0x823F58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x824038", Offset = "0x824038", VA = "0x824038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666470", Offset = "0x666470")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000115")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x824528", Offset = "0x824528", VA = "0x824528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x824598", Offset = "0x824598", VA = "0x824598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x822DD0", Offset = "0x822DD0", VA = "0x822DD0")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x8243DC", Offset = "0x8243DC", VA = "0x8243DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x8243E0", Offset = "0x8243E0", VA = "0x8243E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x824530", Offset = "0x824530", VA = "0x824530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666480", Offset = "0x666480")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x824184", Offset = "0x824184", VA = "0x824184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x8241F4", Offset = "0x8241F4", VA = "0x8241F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x823048", Offset = "0x823048", VA = "0x823048")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x8240A8", Offset = "0x8240A8", VA = "0x8240A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x8240AC", Offset = "0x8240AC", VA = "0x8240AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x82418C", Offset = "0x82418C", VA = "0x82418C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666490", Offset = "0x666490")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x8248B8", Offset = "0x8248B8", VA = "0x8248B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x824928", Offset = "0x824928", VA = "0x824928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x8232C0", Offset = "0x8232C0", VA = "0x8232C0")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x824784", Offset = "0x824784", VA = "0x824784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x824788", Offset = "0x824788", VA = "0x824788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x8248C0", Offset = "0x8248C0", VA = "0x8248C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6664A0", Offset = "0x6664A0")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x824364", Offset = "0x824364", VA = "0x824364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x8243D4", Offset = "0x8243D4", VA = "0x8243D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x823538", Offset = "0x823538", VA = "0x823538")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x8241FC", Offset = "0x8241FC", VA = "0x8241FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x824200", Offset = "0x824200", VA = "0x824200", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x82436C", Offset = "0x82436C", VA = "0x82436C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C5E4", Offset = "0x66C5E4")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C61C", Offset = "0x66C61C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C654", Offset = "0x66C654")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C68C", Offset = "0x66C68C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C6C4", Offset = "0x66C6C4")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C6FC", Offset = "0x66C6FC")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C734", Offset = "0x66C734")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C76C", Offset = "0x66C76C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C7A4", Offset = "0x66C7A4")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C7B4", Offset = "0x66C7B4")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C7EC", Offset = "0x66C7EC")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66C834", Offset = "0x66C834")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C844", Offset = "0x66C844")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C87C", Offset = "0x66C87C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C8B4", Offset = "0x66C8B4")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C8EC", Offset = "0x66C8EC")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700010B")]
	public States CurrentState
	{
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x82154C", Offset = "0x82154C", VA = "0x82154C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675B48", Offset = "0x675B48")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x821554", Offset = "0x821554", VA = "0x821554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675B58", Offset = "0x675B58")]
		private set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x821814", Offset = "0x821814", VA = "0x821814")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700010D")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x821854", Offset = "0x821854", VA = "0x821854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675B88", Offset = "0x675B88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x82185C", Offset = "0x82185C", VA = "0x82185C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675B98", Offset = "0x675B98")]
		private set
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x82155C", Offset = "0x82155C", VA = "0x82155C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675B68", Offset = "0x675B68")]
		add
		{
		}
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x821648", Offset = "0x821648", VA = "0x821648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675B78", Offset = "0x675B78")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x82206C", Offset = "0x82206C", VA = "0x82206C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675BE0", Offset = "0x675BE0")]
		add
		{
		}
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x822158", Offset = "0x822158", VA = "0x822158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675BF0", Offset = "0x675BF0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x822270", Offset = "0x822270", VA = "0x822270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675C64", Offset = "0x675C64")]
		add
		{
		}
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x82235C", Offset = "0x82235C", VA = "0x82235C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675C74", Offset = "0x675C74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x822448", Offset = "0x822448", VA = "0x822448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675C84", Offset = "0x675C84")]
		add
		{
		}
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x822534", Offset = "0x822534", VA = "0x822534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675C94", Offset = "0x675C94")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x822694", Offset = "0x822694", VA = "0x822694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675CA4", Offset = "0x675CA4")]
		add
		{
		}
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x822780", Offset = "0x822780", VA = "0x822780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675CB4", Offset = "0x675CB4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x82290C", Offset = "0x82290C", VA = "0x82290C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675D28", Offset = "0x675D28")]
		add
		{
		}
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x8229F8", Offset = "0x8229F8", VA = "0x8229F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675D38", Offset = "0x675D38")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x822B84", Offset = "0x822B84", VA = "0x822B84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675DAC", Offset = "0x675DAC")]
		add
		{
		}
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x822C70", Offset = "0x822C70", VA = "0x822C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675DBC", Offset = "0x675DBC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x822DFC", Offset = "0x822DFC", VA = "0x822DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675E30", Offset = "0x675E30")]
		add
		{
		}
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x822EE8", Offset = "0x822EE8", VA = "0x822EE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675E40", Offset = "0x675E40")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x823074", Offset = "0x823074", VA = "0x823074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675EB4", Offset = "0x675EB4")]
		add
		{
		}
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x823160", Offset = "0x823160", VA = "0x823160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675EC4", Offset = "0x675EC4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x8232EC", Offset = "0x8232EC", VA = "0x8232EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675F38", Offset = "0x675F38")]
		add
		{
		}
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x8233D8", Offset = "0x8233D8", VA = "0x8233D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675F48", Offset = "0x675F48")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x823564", Offset = "0x823564", VA = "0x823564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675FBC", Offset = "0x675FBC")]
		add
		{
		}
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x823650", Offset = "0x823650", VA = "0x823650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x675FCC", Offset = "0x675FCC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x821504", Offset = "0x821504", VA = "0x821504")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x821528", Offset = "0x821528", VA = "0x821528")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x821734", Offset = "0x821734", VA = "0x821734")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x821864", Offset = "0x821864", VA = "0x821864")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x821C0C", Offset = "0x821C0C", VA = "0x821C0C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x675BA8", Offset = "0x675BA8")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x821CC4", Offset = "0x821CC4", VA = "0x821CC4")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x821DEC", Offset = "0x821DEC", VA = "0x821DEC")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x821E1C", Offset = "0x821E1C", VA = "0x821E1C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x821EE8", Offset = "0x821EE8", VA = "0x821EE8")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x821F64", Offset = "0x821F64", VA = "0x821F64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x821FC0", Offset = "0x821FC0", VA = "0x821FC0", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x822064", Offset = "0x822064", VA = "0x822064", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x821FF0", Offset = "0x821FF0", VA = "0x821FF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675C00", Offset = "0x675C00")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x822620", Offset = "0x822620", VA = "0x822620")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x82286C", Offset = "0x82286C", VA = "0x82286C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675CC4", Offset = "0x675CC4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x822AE4", Offset = "0x822AE4", VA = "0x822AE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675D48", Offset = "0x675D48")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x822D5C", Offset = "0x822D5C", VA = "0x822D5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675DCC", Offset = "0x675DCC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x822FD4", Offset = "0x822FD4", VA = "0x822FD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675E50", Offset = "0x675E50")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x82324C", Offset = "0x82324C", VA = "0x82324C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675ED4", Offset = "0x675ED4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x8234C4", Offset = "0x8234C4", VA = "0x8234C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x675F58", Offset = "0x675F58")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x82373C", Offset = "0x82373C", VA = "0x82373C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x8238E0", Offset = "0x8238E0", VA = "0x8238E0")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x823938", Offset = "0x823938", VA = "0x823938")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x823B70", Offset = "0x823B70", VA = "0x823B70")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x823D00", Offset = "0x823D00", VA = "0x823D00")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20001E1")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x14000010")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xA2AA0C", Offset = "0xA2AA0C", VA = "0xA2AA0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67622C", Offset = "0x67622C")]
		add
		{
		}
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xA2AAF8", Offset = "0xA2AAF8", VA = "0xA2AAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67623C", Offset = "0x67623C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xA2ABE4", Offset = "0xA2ABE4", VA = "0xA2ABE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67624C", Offset = "0x67624C")]
		add
		{
		}
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xA2ACD0", Offset = "0xA2ACD0", VA = "0xA2ACD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67625C", Offset = "0x67625C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xA2ADBC", Offset = "0xA2ADBC", VA = "0xA2ADBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xA2AE64", Offset = "0xA2AE64", VA = "0xA2AE64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xA2AE68", Offset = "0xA2AE68", VA = "0xA2AE68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xA2AEDC", Offset = "0xA2AEDC", VA = "0xA2AEDC")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xA2B0E4", Offset = "0xA2B0E4", VA = "0xA2B0E4")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xA2B40C", Offset = "0xA2B40C", VA = "0xA2B40C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xA2B6EC", Offset = "0xA2B6EC", VA = "0xA2B6EC")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20001E2")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x84E9FC", Offset = "0x84E9FC", VA = "0x84E9FC", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x84EA9C", Offset = "0x84EA9C", VA = "0x84EA9C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000AD1")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x84EB78", Offset = "0x84EB78", VA = "0x84EB78")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20001E3")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66C9F4", Offset = "0x66C9F4")]
	public float Range;

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x84EB88", Offset = "0x84EB88", VA = "0x84EB88", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x84ED38", Offset = "0x84ED38", VA = "0x84ED38")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20001E4")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CA2C", Offset = "0x66CA2C")]
	public float Range;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CA64", Offset = "0x66CA64")]
	public float MinimumElevation;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CA9C", Offset = "0x66CA9C")]
	public float Gravity;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66CAD4", Offset = "0x66CAD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CAD4", Offset = "0x66CAD4")]
	public float AimVelocity;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CB30", Offset = "0x66CB30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66CB30", Offset = "0x66CB30")]
	public float AimStep;

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x84ED48", Offset = "0x84ED48", VA = "0x84ED48", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x84EFAC", Offset = "0x84EFAC", VA = "0x84EFAC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20001E5")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CB88", Offset = "0x66CB88")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x84EFC0", Offset = "0x84EFC0", VA = "0x84EFC0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x84F0A4", Offset = "0x84F0A4", VA = "0x84F0A4")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x84F0F0", Offset = "0x84F0F0", VA = "0x84F0F0")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x84F13C", Offset = "0x84F13C", VA = "0x84F13C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x84F1F0", Offset = "0x84F1F0", VA = "0x84F1F0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x84F290", Offset = "0x84F290", VA = "0x84F290", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x84F32C", Offset = "0x84F32C", VA = "0x84F32C")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20001E6")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CBC0", Offset = "0x66CBC0")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CBD0", Offset = "0x66CBD0")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CC08", Offset = "0x66CC08")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CC40", Offset = "0x66CC40")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700011D")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x84F4E8", Offset = "0x84F4E8", VA = "0x84F4E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67626C", Offset = "0x67626C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x84F4F0", Offset = "0x84F4F0", VA = "0x84F4F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67627C", Offset = "0x67627C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x84F700", Offset = "0x84F700", VA = "0x84F700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67628C", Offset = "0x67628C")]
		add
		{
		}
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x84F7EC", Offset = "0x84F7EC", VA = "0x84F7EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67629C", Offset = "0x67629C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x84F4FC", Offset = "0x84F4FC", VA = "0x84F4FC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x84F58C", Offset = "0x84F58C", VA = "0x84F58C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x84F6A8", Offset = "0x84F6A8", VA = "0x84F6A8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x84F6FC", Offset = "0x84F6FC", VA = "0x84F6FC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x84F8D8", Offset = "0x84F8D8", VA = "0x84F8D8")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x84F940", Offset = "0x84F940", VA = "0x84F940")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x84F978", Offset = "0x84F978", VA = "0x84F978", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20001E7")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6664B0", Offset = "0x6664B0")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x8501D0", Offset = "0x8501D0", VA = "0x8501D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x850240", Offset = "0x850240", VA = "0x850240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x84FEE8", Offset = "0x84FEE8", VA = "0x84FEE8")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x850134", Offset = "0x850134", VA = "0x850134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x850138", Offset = "0x850138", VA = "0x850138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x8501D8", Offset = "0x8501D8", VA = "0x8501D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6664C0", Offset = "0x6664C0")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0x8500BC", Offset = "0x8500BC", VA = "0x8500BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x85012C", Offset = "0x85012C", VA = "0x85012C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x84FF88", Offset = "0x84FF88", VA = "0x84FF88")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x85000C", Offset = "0x85000C", VA = "0x85000C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x850010", Offset = "0x850010", VA = "0x850010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x8500C4", Offset = "0x8500C4", VA = "0x8500C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x84FC54", Offset = "0x84FC54", VA = "0x84FC54")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x84FD00", Offset = "0x84FD00", VA = "0x84FD00", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x84FD84", Offset = "0x84FD84", VA = "0x84FD84", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x84FE74", Offset = "0x84FE74", VA = "0x84FE74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6762AC", Offset = "0x6762AC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x84FF14", Offset = "0x84FF14", VA = "0x84FF14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x676310", Offset = "0x676310")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000AEE")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000AEF")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x84FFB4", Offset = "0x84FFB4", VA = "0x84FFB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676374", Offset = "0x676374")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x84FFE0", Offset = "0x84FFE0", VA = "0x84FFE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676384", Offset = "0x676384")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20001EA")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CC88", Offset = "0x66CC88")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CC98", Offset = "0x66CC98")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CCD0", Offset = "0x66CCD0")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CD08", Offset = "0x66CD08")]
	public bool FastTeleport;

	[Token(Token = "0x17000122")]
	public Transform Pointer
	{
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x850248", Offset = "0x850248", VA = "0x850248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676434", Offset = "0x676434")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x850250", Offset = "0x850250", VA = "0x850250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676444", Offset = "0x676444")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x850258", Offset = "0x850258", VA = "0x850258", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x8503C0", Offset = "0x8503C0", VA = "0x8503C0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x8504B0", Offset = "0x8504B0", VA = "0x8504B0")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20001EB")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20001EC")]
	public enum InputModes
	{
		[Token(Token = "0x4000EB4")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000EB5")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000EB6")]
		ThumbstickTeleport,
		[Token(Token = "0x4000EB7")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20001ED")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000EB9")]
		A,
		[Token(Token = "0x4000EBA")]
		B,
		[Token(Token = "0x4000EBB")]
		LeftTrigger,
		[Token(Token = "0x4000EBC")]
		LeftThumbstick,
		[Token(Token = "0x4000EBD")]
		RightTrigger,
		[Token(Token = "0x4000EBE")]
		RightThumbstick,
		[Token(Token = "0x4000EBF")]
		X,
		[Token(Token = "0x4000EC0")]
		Y
	}

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CD40", Offset = "0x66CD40")]
	public InputModes InputMode;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CD78", Offset = "0x66CD78")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CDB0", Offset = "0x66CDB0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CDE8", Offset = "0x66CDE8")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x8504B4", Offset = "0x8504B4", VA = "0x8504B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x8504B8", Offset = "0x8504B8", VA = "0x8504B8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x850970", Offset = "0x850970", VA = "0x850970", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x850A40", Offset = "0x850A40", VA = "0x850A40")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20001EE")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20001EF")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000EC5")]
		HeadRelative,
		[Token(Token = "0x4000EC6")]
		ForwardFacing
	}

	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6664D0", Offset = "0x6664D0")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x850F90", Offset = "0x850F90", VA = "0x850F90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x851000", Offset = "0x851000", VA = "0x851000", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x850CF8", Offset = "0x850CF8", VA = "0x850CF8")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x850EA4", Offset = "0x850EA4", VA = "0x850EA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x850EA8", Offset = "0x850EA8", VA = "0x850EA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x850F98", Offset = "0x850F98", VA = "0x850F98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x850AEC", Offset = "0x850AEC", VA = "0x850AEC")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x850BA0", Offset = "0x850BA0", VA = "0x850BA0")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x850BA8", Offset = "0x850BA8", VA = "0x850BA8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x850C18", Offset = "0x850C18", VA = "0x850C18", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x850C84", Offset = "0x850C84", VA = "0x850C84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x676454", Offset = "0x676454")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000B0C")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000B0D")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x850D24", Offset = "0x850D24", VA = "0x850D24")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x850E78", Offset = "0x850E78", VA = "0x850E78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6764B8", Offset = "0x6764B8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20001F1")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x851008", Offset = "0x851008", VA = "0x851008", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x85100C", Offset = "0x85100C", VA = "0x85100C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x8510C8", Offset = "0x8510C8", VA = "0x8510C8")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20001F2")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CE20", Offset = "0x66CE20")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CE58", Offset = "0x66CE58")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CE90", Offset = "0x66CE90")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CEC8", Offset = "0x66CEC8")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x8510CC", Offset = "0x8510CC", VA = "0x8510CC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x85113C", Offset = "0x85113C", VA = "0x85113C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x8516A8", Offset = "0x8516A8", VA = "0x8516A8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20001F3")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CF00", Offset = "0x66CF00")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CF38", Offset = "0x66CF38")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CF70", Offset = "0x66CF70")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x8516AC", Offset = "0x8516AC", VA = "0x8516AC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x8516F8", Offset = "0x8516F8", VA = "0x8516F8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x851BDC", Offset = "0x851BDC", VA = "0x851BDC")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20001F4")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x851BEC", Offset = "0x851BEC", VA = "0x851BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x851BF0", Offset = "0x851BF0", VA = "0x851BF0")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x851BF8", Offset = "0x851BF8", VA = "0x851BF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x851CF4", Offset = "0x851CF4", VA = "0x851CF4")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x851D1C", Offset = "0x851D1C", VA = "0x851D1C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20001F5")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66CFA8", Offset = "0x66CFA8")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000125")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x84EA94", Offset = "0x84EA94", VA = "0x84EA94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676518", Offset = "0x676518")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x851D34", Offset = "0x851D34", VA = "0x851D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676528", Offset = "0x676528")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x84EA30", Offset = "0x84EA30", VA = "0x84EA30", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x84EB4C", Offset = "0x84EB4C", VA = "0x84EB4C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x851D3C", Offset = "0x851D3C", VA = "0x851D3C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x676538", Offset = "0x676538")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x84F284", Offset = "0x84F284", VA = "0x84F284", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x84F324", Offset = "0x84F324", VA = "0x84F324", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x84EB80", Offset = "0x84EB80", VA = "0x84EB80")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20001F6")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6664E0", Offset = "0x6664E0")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x852504", Offset = "0x852504", VA = "0x852504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x852574", Offset = "0x852574", VA = "0x852574", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x851FC0", Offset = "0x851FC0", VA = "0x851FC0")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x852194", Offset = "0x852194", VA = "0x852194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x852198", Offset = "0x852198", VA = "0x852198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x85250C", Offset = "0x85250C", VA = "0x85250C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CFB8", Offset = "0x66CFB8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000EE0")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x851E0C", Offset = "0x851E0C", VA = "0x851E0C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x851ED0", Offset = "0x851ED0", VA = "0x851ED0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x851F10", Offset = "0x851F10", VA = "0x851F10", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x851F4C", Offset = "0x851F4C", VA = "0x851F4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x676570", Offset = "0x676570")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x851FEC", Offset = "0x851FEC", VA = "0x851FEC", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000B31")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x85201C", Offset = "0x85201C", VA = "0x85201C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x852168", Offset = "0x852168", VA = "0x852168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6765D4", Offset = "0x6765D4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20001F8")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x85257C", Offset = "0x85257C", VA = "0x85257C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x8525DC", Offset = "0x8525DC", VA = "0x8525DC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x852794", Offset = "0x852794", VA = "0x852794", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x8528CC", Offset = "0x8528CC", VA = "0x8528CC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x676634", Offset = "0x676634")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x8528D0", Offset = "0x8528D0", VA = "0x8528D0")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20001F9")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66CFF0", Offset = "0x66CFF0")]
	public float LOSOffset;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D028", Offset = "0x66D028")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x8528DC", Offset = "0x8528DC", VA = "0x8528DC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x852B74", Offset = "0x852B74", VA = "0x852B74")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20001FA")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x852B80", Offset = "0x852B80", VA = "0x852B80", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x852D38", Offset = "0x852D38", VA = "0x852D38")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20001FB")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x852D3C", Offset = "0x852D3C", VA = "0x852D3C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x852DE4", Offset = "0x852DE4", VA = "0x852DE4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000B45")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x852E88", Offset = "0x852E88", VA = "0x852E88")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20001FC")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6664F0", Offset = "0x6664F0")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x853258", Offset = "0x853258", VA = "0x853258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0x8532C8", Offset = "0x8532C8", VA = "0x8532C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x852F30", Offset = "0x852F30", VA = "0x852F30")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x85311C", Offset = "0x85311C", VA = "0x85311C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x853120", Offset = "0x853120", VA = "0x853120", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x853260", Offset = "0x853260", VA = "0x853260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D060", Offset = "0x66D060")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66D060", Offset = "0x66D060")]
	public float TransitionDuration;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66D0B8", Offset = "0x66D0B8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D0B8", Offset = "0x66D0B8")]
	public float TeleportDelay;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D10C", Offset = "0x66D10C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x852E90", Offset = "0x852E90", VA = "0x852E90", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x852EBC", Offset = "0x852EBC", VA = "0x852EBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x67666C", Offset = "0x67666C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x852F5C", Offset = "0x852F5C", VA = "0x852F5C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20001FE")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x8532D0", Offset = "0x8532D0", VA = "0x8532D0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x853300", Offset = "0x853300", VA = "0x853300")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20001FF")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666500", Offset = "0x666500")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0x8535C8", Offset = "0x8535C8", VA = "0x8535C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0x853638", Offset = "0x853638", VA = "0x853638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x8533A8", Offset = "0x8533A8", VA = "0x8533A8")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x85341C", Offset = "0x85341C", VA = "0x85341C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x853420", Offset = "0x853420", VA = "0x853420", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x8535D0", Offset = "0x8535D0", VA = "0x8535D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66D144", Offset = "0x66D144")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D144", Offset = "0x66D144")]
	public float TransitionDuration;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x853308", Offset = "0x853308", VA = "0x853308", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x853334", Offset = "0x853334", VA = "0x853334")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x676720", Offset = "0x676720")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x8533D4", Offset = "0x8533D4", VA = "0x8533D4")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000201")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000202")]
	public enum PlabackState
	{
		[Token(Token = "0x4000F10")]
		Idle = 1,
		[Token(Token = "0x4000F11")]
		Preparing,
		[Token(Token = "0x4000F12")]
		Buffering,
		[Token(Token = "0x4000F13")]
		Ready,
		[Token(Token = "0x4000F14")]
		Ended
	}

	[Token(Token = "0x2000203")]
	public enum StereoMode
	{
		[Token(Token = "0x4000F16")]
		Unknown = -1,
		[Token(Token = "0x4000F17")]
		Mono,
		[Token(Token = "0x4000F18")]
		TopBottom,
		[Token(Token = "0x4000F19")]
		LeftRight,
		[Token(Token = "0x4000F1A")]
		Mesh
	}

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700012C")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x94B9D4", Offset = "0x94B9D4", VA = "0x94B9D4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700012D")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x94BCB0", Offset = "0x94BCB0", VA = "0x94BCB0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700012E")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x93EB54", Offset = "0x93EB54", VA = "0x93EB54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012F")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x9403DC", Offset = "0x9403DC", VA = "0x9403DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000130")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x94BF14", Offset = "0x94BF14", VA = "0x94BF14")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000131")]
	public static long Duration
	{
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x9405C0", Offset = "0x9405C0", VA = "0x9405C0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000132")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x93F1B8", Offset = "0x93F1B8", VA = "0x93F1B8")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000133")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x93EFD0", Offset = "0x93EFD0", VA = "0x93EFD0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000134")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x93F0C4", Offset = "0x93F0C4", VA = "0x93F0C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000135")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x9404CC", Offset = "0x9404CC", VA = "0x9404CC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x93FA70", Offset = "0x93FA70", VA = "0x93FA70")]
		set
		{
		}
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x940C60", Offset = "0x940C60", VA = "0x940C60")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x94098C", Offset = "0x94098C", VA = "0x94098C")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x93F6E0", Offset = "0x93F6E0", VA = "0x93F6E0")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x93F874", Offset = "0x93F874", VA = "0x93F874")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x94079C", Offset = "0x94079C", VA = "0x94079C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x940EA8", Offset = "0x940EA8", VA = "0x940EA8")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x9401D0", Offset = "0x9401D0", VA = "0x9401D0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000204")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000013")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x83EE4C", Offset = "0x83EE4C", VA = "0x83EE4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6767D4", Offset = "0x6767D4")]
		add
		{
		}
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x83EF38", Offset = "0x83EF38", VA = "0x83EF38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6767E4", Offset = "0x6767E4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x83F024", Offset = "0x83F024", VA = "0x83F024", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x83F038", Offset = "0x83F038", VA = "0x83F038")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000205")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000206")]
	public enum ButtonType
	{
		[Token(Token = "0x4000F1E")]
		Play,
		[Token(Token = "0x4000F1F")]
		Pause,
		[Token(Token = "0x4000F20")]
		FastForward,
		[Token(Token = "0x4000F21")]
		Rewind,
		[Token(Token = "0x4000F22")]
		SkipForward,
		[Token(Token = "0x4000F23")]
		SkipBack,
		[Token(Token = "0x4000F24")]
		Stop
	}

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000136")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x882DB8", Offset = "0x882DB8", VA = "0x882DB8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x882DC0", Offset = "0x882DC0", VA = "0x882DC0")]
		set
		{
		}
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x882DE4", Offset = "0x882DE4", VA = "0x882DE4", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x8846C0", Offset = "0x8846C0", VA = "0x8846C0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000207")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000208")]
	public enum VideoShape
	{
		[Token(Token = "0x4000F39")]
		_360,
		[Token(Token = "0x4000F3A")]
		_180,
		[Token(Token = "0x4000F3B")]
		Quad
	}

	[Token(Token = "0x2000209")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000F3D")]
		Mono,
		[Token(Token = "0x4000F3E")]
		TopBottom,
		[Token(Token = "0x4000F3F")]
		LeftRight,
		[Token(Token = "0x4000F40")]
		BottomTop
	}

	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666510", Offset = "0x666510")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x941198", Offset = "0x941198", VA = "0x941198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0x941208", Offset = "0x941208", VA = "0x941208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x93F320", Offset = "0x93F320", VA = "0x93F320")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x940FFC", Offset = "0x940FFC", VA = "0x940FFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x941000", Offset = "0x941000", VA = "0x941000", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x9411A0", Offset = "0x9411A0", VA = "0x9411A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666520", Offset = "0x666520")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x93F634", Offset = "0x93F634", VA = "0x93F634")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x940B78", Offset = "0x940B78", VA = "0x940B78")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1CC", Offset = "0x66D1CC")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1DC", Offset = "0x66D1DC")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66D1EC", Offset = "0x66D1EC")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000137")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x93E8BC", Offset = "0x93E8BC", VA = "0x93E8BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6767F4", Offset = "0x6767F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x93E8C4", Offset = "0x93E8C4", VA = "0x93E8C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676804", Offset = "0x676804")]
		private set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public long Duration
	{
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x93E8D0", Offset = "0x93E8D0", VA = "0x93E8D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676814", Offset = "0x676814")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x93E8D8", Offset = "0x93E8D8", VA = "0x93E8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676824", Offset = "0x676824")]
		private set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x93E8E0", Offset = "0x93E8E0", VA = "0x93E8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676834", Offset = "0x676834")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x93E8E8", Offset = "0x93E8E8", VA = "0x93E8E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676844", Offset = "0x676844")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x93E8F0", Offset = "0x93E8F0", VA = "0x93E8F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x93EBBC", Offset = "0x93EBBC", VA = "0x93EBBC")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x93EC28", Offset = "0x93EC28", VA = "0x93EC28")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x93F2AC", Offset = "0x93F2AC", VA = "0x93F2AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x676854", Offset = "0x676854")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x93F34C", Offset = "0x93F34C", VA = "0x93F34C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x93F63C", Offset = "0x93F63C", VA = "0x93F63C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x93F7D4", Offset = "0x93F7D4", VA = "0x93F7D4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x93F968", Offset = "0x93F968", VA = "0x93F968")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x93FBC0", Offset = "0x93FBC0", VA = "0x93FBC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x9406B4", Offset = "0x9406B4", VA = "0x9406B4")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x9408EC", Offset = "0x9408EC", VA = "0x9408EC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x940A80", Offset = "0x940A80", VA = "0x940A80")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x940B68", Offset = "0x940B68", VA = "0x940B68")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200020C")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200020D")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000F5D")]
		Playing,
		[Token(Token = "0x4000F5E")]
		Paused,
		[Token(Token = "0x4000F5F")]
		Rewinding,
		[Token(Token = "0x4000F60")]
		FastForwarding
	}

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x941210", Offset = "0x941210", VA = "0x941210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x941544", Offset = "0x941544", VA = "0x941544")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x9416F8", Offset = "0x9416F8", VA = "0x9416F8")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x941894", Offset = "0x941894", VA = "0x941894")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x9419BC", Offset = "0x9419BC", VA = "0x9419BC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x941824", Offset = "0x941824", VA = "0x941824")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x941AA0", Offset = "0x941AA0", VA = "0x941AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x941410", Offset = "0x941410", VA = "0x941410")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x941E94", Offset = "0x941E94", VA = "0x941E94")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200020E")]
public static class VectorUtil
{
	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x85E0C0", Offset = "0x85E0C0", VA = "0x85E0C0")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200020F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666540", Offset = "0x666540")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000210")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000F6A")]
		MouseXAndY,
		[Token(Token = "0x4000F6B")]
		MouseX,
		[Token(Token = "0x4000F6C")]
		MouseY
	}

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x93CBB0", Offset = "0x93CBB0", VA = "0x93CBB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x93CE34", Offset = "0x93CE34", VA = "0x93CE34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x93CEFC", Offset = "0x93CEFC", VA = "0x93CEFC")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000211")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000212")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xFCD828", Offset = "0xFCD828", VA = "0xFCD828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xFCD82C", Offset = "0xFCD82C", VA = "0xFCD82C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xFCD830", Offset = "0xFCD830", VA = "0xFCD830")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xFCD9BC", Offset = "0xFCD9BC", VA = "0xFCD9BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xFCD884", Offset = "0xFCD884", VA = "0xFCD884")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xFCD918", Offset = "0xFCD918", VA = "0xFCD918")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xFCDA10", Offset = "0xFCDA10", VA = "0xFCDA10")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xFCDAB0", Offset = "0xFCDAB0", VA = "0xFCDAB0")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xFCDC3C", Offset = "0xFCDC3C", VA = "0xFCDC3C")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xFCDDC8", Offset = "0xFCDDC8", VA = "0xFCDDC8")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000213")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000214")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000F81")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000F87")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x8B3A40", Offset = "0x8B3A40", VA = "0x8B3A40")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x8B3870", Offset = "0x8B3870", VA = "0x8B3870")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x676918", Offset = "0x676918")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x8B3A78", Offset = "0x8B3A78", VA = "0x8B3A78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x8B3BC8", Offset = "0x8B3BC8", VA = "0x8B3BC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x8B3CD8", Offset = "0x8B3CD8", VA = "0x8B3CD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x8B4960", Offset = "0x8B4960", VA = "0x8B4960")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x8B3B18", Offset = "0x8B3B18", VA = "0x8B3B18")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x8B3C2C", Offset = "0x8B3C2C", VA = "0x8B3C2C")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x8B4648", Offset = "0x8B4648", VA = "0x8B4648")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x8B46E4", Offset = "0x8B46E4", VA = "0x8B46E4")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x8B4784", Offset = "0x8B4784", VA = "0x8B4784")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x8B4824", Offset = "0x8B4824", VA = "0x8B4824")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x8B48C0", Offset = "0x8B48C0", VA = "0x8B48C0")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x8B5CC8", Offset = "0x8B5CC8", VA = "0x8B5CC8")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x8B5D8C", Offset = "0x8B5D8C", VA = "0x8B5D8C")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x8B5E50", Offset = "0x8B5E50", VA = "0x8B5E50")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000215")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000216")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000F8D")]
		Uninitialized = -1,
		[Token(Token = "0x4000F8E")]
		NotEnabled,
		[Token(Token = "0x4000F8F")]
		Success,
		[Token(Token = "0x4000F90")]
		StreamError,
		[Token(Token = "0x4000F91")]
		ProcessError,
		[Token(Token = "0x4000F92")]
		MaxStatValue
	}

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x9511C8", Offset = "0x9511C8", VA = "0x9511C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x951434", Offset = "0x951434", VA = "0x951434")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x951628", Offset = "0x951628", VA = "0x951628")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000217")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000218")]
	private enum Parameters
	{
		[Token(Token = "0x4000F9E")]
		P_GAIN,
		[Token(Token = "0x4000F9F")]
		P_USEINVSQR,
		[Token(Token = "0x4000FA0")]
		P_NEAR,
		[Token(Token = "0x4000FA1")]
		P_FAR,
		[Token(Token = "0x4000FA2")]
		P_RADIUS,
		[Token(Token = "0x4000FA3")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000FA4")]
		P_AMBISTAT,
		[Token(Token = "0x4000FA5")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000FA6")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000FA7")]
		P_SENDLEVEL,
		[Token(Token = "0x4000FA8")]
		P_NUM
	}

	[Token(Token = "0x4000F93")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700013C")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x9518AC", Offset = "0x9518AC", VA = "0x9518AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x9518B4", Offset = "0x9518B4", VA = "0x9518B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public float Gain
	{
		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x9518C0", Offset = "0x9518C0", VA = "0x9518C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x9518C8", Offset = "0x9518C8", VA = "0x9518C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x95194C", Offset = "0x95194C", VA = "0x95194C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x951954", Offset = "0x951954", VA = "0x951954")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public float Near
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x951960", Offset = "0x951960", VA = "0x951960")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x951968", Offset = "0x951968", VA = "0x951968")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public float Far
	{
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x9519F0", Offset = "0x9519F0", VA = "0x9519F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x9519F8", Offset = "0x9519F8", VA = "0x9519F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x951A80", Offset = "0x951A80", VA = "0x951A80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x951A88", Offset = "0x951A88", VA = "0x951A88")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public float ReverbSend
	{
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x951B10", Offset = "0x951B10", VA = "0x951B10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x951B18", Offset = "0x951B18", VA = "0x951B18")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x951BA0", Offset = "0x951BA0", VA = "0x951BA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x951BA8", Offset = "0x951BA8", VA = "0x951BA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x95169C", Offset = "0x95169C", VA = "0x95169C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x67697C", Offset = "0x67697C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x9517B0", Offset = "0x9517B0", VA = "0x9517B0")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x951BB4", Offset = "0x951BB4", VA = "0x951BB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x951DB4", Offset = "0x951DB4", VA = "0x951DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x951DB8", Offset = "0x951DB8", VA = "0x951DB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x951C20", Offset = "0x951C20", VA = "0x951C20")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x951E98", Offset = "0x951E98", VA = "0x951E98")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x95236C", Offset = "0x95236C", VA = "0x95236C")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x951714", Offset = "0x951714", VA = "0x951714")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x95243C", Offset = "0x95243C", VA = "0x95243C")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000219")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000FAA")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000FAC")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x95245C", Offset = "0x95245C", VA = "0x95245C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x952468", Offset = "0x952468", VA = "0x952468")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x95253C", Offset = "0x95253C", VA = "0x95253C")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x9524A0", Offset = "0x9524A0", VA = "0x9524A0")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x9525D8", Offset = "0x9525D8", VA = "0x9525D8")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x200021A")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200021B")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200021C")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000FB3")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000144")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xFBEE3C", Offset = "0xFBEE3C", VA = "0xFBEE3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000145")]
	public string filePath
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xFBEEC8", Offset = "0xFBEEC8", VA = "0xFBEEC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xFBEF40", Offset = "0xFBEF40", VA = "0xFBEF40")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xFBF0B8", Offset = "0xFBF0B8", VA = "0xFBF0B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xFBF0BC", Offset = "0xFBF0BC", VA = "0xFBF0BC")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xFBF674", Offset = "0xFBF674", VA = "0xFBF674")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xFBFB50", Offset = "0xFBFB50", VA = "0xFBFB50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xFBFCB8", Offset = "0xFBFCB8", VA = "0xFBFCB8")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xFC0528", Offset = "0xFC0528", VA = "0xFC0528")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xFC0574", Offset = "0xFC0574", VA = "0xFC0574")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xFC2258", Offset = "0xFC2258", VA = "0xFC2258")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xFC1F78", Offset = "0xFC1F78", VA = "0xFC1F78")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xFBF488", Offset = "0xFBF488", VA = "0xFBF488")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xFBF2A4", Offset = "0xFBF2A4", VA = "0xFBF2A4")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xFC2A34", Offset = "0xFC2A34", VA = "0xFC2A34")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xFC2EB4", Offset = "0xFC2EB4", VA = "0xFC2EB4")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x200021D")]
internal class ONSPPropagation
{
	[Token(Token = "0x200021E")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000FBC")]
		Int8,
		[Token(Token = "0x4000FBD")]
		UInt8,
		[Token(Token = "0x4000FBE")]
		Int16,
		[Token(Token = "0x4000FBF")]
		UInt16,
		[Token(Token = "0x4000FC0")]
		Int32,
		[Token(Token = "0x4000FC1")]
		UInt32,
		[Token(Token = "0x4000FC2")]
		Int64,
		[Token(Token = "0x4000FC3")]
		UInt64,
		[Token(Token = "0x4000FC4")]
		Float16,
		[Token(Token = "0x4000FC5")]
		Float32,
		[Token(Token = "0x4000FC6")]
		Float64
	}

	[Token(Token = "0x200021F")]
	public class ClientType
	{
		[Token(Token = "0x4000FC7")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000FC8")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000FC9")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000FCA")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000FCB")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000FCC")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000FCD")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000FCE")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000FCF")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000FD0")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000FD1")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000FD2")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000FD3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000FD4")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000FD5")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x4000FD6")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2021_1 = 15u;

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x952994", Offset = "0x952994", VA = "0x952994")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000220")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000BF7")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000BF8")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000BF9")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000BFA")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000BFB")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000BFC")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000BFD")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000BFE")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000BFF")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C00")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C01")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000C02")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000C03")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000C04")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000C05")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000221")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000FD7")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000147")]
		private IntPtr context
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0xFBD064", Offset = "0xFBD064", VA = "0xFBD064")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xFBD0C8", Offset = "0xFBD0C8", VA = "0xFBD0C8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xFBD174", Offset = "0xFBD174", VA = "0xFBD174")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xFBD220", Offset = "0xFBD220", VA = "0xFBD220", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xFBD244", Offset = "0xFBD244", VA = "0xFBD244")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xFBD2F0", Offset = "0xFBD2F0", VA = "0xFBD2F0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xFBD314", Offset = "0xFBD314", VA = "0xFBD314")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xFBD3BC", Offset = "0xFBD3BC", VA = "0xFBD3BC", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xFBD3E0", Offset = "0xFBD3E0", VA = "0xFBD3E0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xFBD47C", Offset = "0xFBD47C", VA = "0xFBD47C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xFBD484", Offset = "0xFBD484", VA = "0xFBD484")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xFBD5AC", Offset = "0xFBD5AC", VA = "0xFBD5AC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xFBD6A4", Offset = "0xFBD6A4", VA = "0xFBD6A4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xFBD758", Offset = "0xFBD758", VA = "0xFBD758", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xFBD764", Offset = "0xFBD764", VA = "0xFBD764")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xFBD8AC", Offset = "0xFBD8AC", VA = "0xFBD8AC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xFBD8B8", Offset = "0xFBD8B8", VA = "0xFBD8B8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xFBD980", Offset = "0xFBD980", VA = "0xFBD980", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xFBD98C", Offset = "0xFBD98C", VA = "0xFBD98C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xFBDA54", Offset = "0xFBDA54", VA = "0xFBDA54", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xFBDA60", Offset = "0xFBDA60", VA = "0xFBDA60")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xFBDB28", Offset = "0xFBDB28", VA = "0xFBDB28", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xFBDB34", Offset = "0xFBDB34", VA = "0xFBDB34")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xFBDBDC", Offset = "0xFBDBDC", VA = "0xFBDBDC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xFBDC00", Offset = "0xFBDC00", VA = "0xFBDC00")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xFBDC9C", Offset = "0xFBDC9C", VA = "0xFBDC9C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xFBDCA4", Offset = "0xFBDCA4", VA = "0xFBDCA4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xFBDD68", Offset = "0xFBDD68", VA = "0xFBDD68", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xFBDD74", Offset = "0xFBDD74", VA = "0xFBDD74")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xFBDE38", Offset = "0xFBDE38", VA = "0xFBDE38", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xFBDE48", Offset = "0xFBDE48", VA = "0xFBDE48")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xFBDEF4", Offset = "0xFBDEF4", VA = "0xFBDEF4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xFBDF00", Offset = "0xFBDF00", VA = "0xFBDF00")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000222")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000FD9")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000148")]
		private IntPtr context
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0xFBDF4C", Offset = "0xFBDF4C", VA = "0xFBDF4C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xFBDFB0", Offset = "0xFBDFB0", VA = "0xFBDFB0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xFBE05C", Offset = "0xFBE05C", VA = "0xFBE05C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xFBE108", Offset = "0xFBE108", VA = "0xFBE108", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xFBE12C", Offset = "0xFBE12C", VA = "0xFBE12C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xFBE1D8", Offset = "0xFBE1D8", VA = "0xFBE1D8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xFBE1FC", Offset = "0xFBE1FC", VA = "0xFBE1FC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xFBE2A8", Offset = "0xFBE2A8", VA = "0xFBE2A8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xFBE2CC", Offset = "0xFBE2CC", VA = "0xFBE2CC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xFBE368", Offset = "0xFBE368", VA = "0xFBE368", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xFBE370", Offset = "0xFBE370", VA = "0xFBE370")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xFBE498", Offset = "0xFBE498", VA = "0xFBE498", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xFBE590", Offset = "0xFBE590", VA = "0xFBE590")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xFBE644", Offset = "0xFBE644", VA = "0xFBE644", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xFBE650", Offset = "0xFBE650", VA = "0xFBE650")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xFBE798", Offset = "0xFBE798", VA = "0xFBE798", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xFBE7A4", Offset = "0xFBE7A4", VA = "0xFBE7A4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xFBE86C", Offset = "0xFBE86C", VA = "0xFBE86C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xFBE878", Offset = "0xFBE878", VA = "0xFBE878")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xFBE940", Offset = "0xFBE940", VA = "0xFBE940", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xFBE94C", Offset = "0xFBE94C", VA = "0xFBE94C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xFBEA14", Offset = "0xFBEA14", VA = "0xFBEA14", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xFBEA20", Offset = "0xFBEA20", VA = "0xFBEA20")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xFBEACC", Offset = "0xFBEACC", VA = "0xFBEACC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xFBEAF0", Offset = "0xFBEAF0", VA = "0xFBEAF0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xFBEB8C", Offset = "0xFBEB8C", VA = "0xFBEB8C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xFBEB94", Offset = "0xFBEB94", VA = "0xFBEB94")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xFBEC58", Offset = "0xFBEC58", VA = "0xFBEC58", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xFBEC64", Offset = "0xFBEC64", VA = "0xFBEC64")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xFBED28", Offset = "0xFBED28", VA = "0xFBED28", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xFBED38", Offset = "0xFBED38", VA = "0xFBED38")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xFBEDE4", Offset = "0xFBEDE4", VA = "0xFBEDE4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xFBEDF0", Offset = "0xFBEDF0", VA = "0xFBEDF0")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000223")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000FDB")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000149")]
		private IntPtr context
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x95299C", Offset = "0x95299C", VA = "0x95299C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x952894", Offset = "0x952894", VA = "0x952894")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x952A00", Offset = "0x952A00", VA = "0x952A00")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x952AAC", Offset = "0x952AAC", VA = "0x952AAC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x952AD0", Offset = "0x952AD0", VA = "0x952AD0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x952B7C", Offset = "0x952B7C", VA = "0x952B7C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x952BA0", Offset = "0x952BA0", VA = "0x952BA0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x952C4C", Offset = "0x952C4C", VA = "0x952C4C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x952C70", Offset = "0x952C70", VA = "0x952C70")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x952D0C", Offset = "0x952D0C", VA = "0x952D0C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x952D14", Offset = "0x952D14", VA = "0x952D14")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x952E3C", Offset = "0x952E3C", VA = "0x952E3C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x952F34", Offset = "0x952F34", VA = "0x952F34")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x952FE8", Offset = "0x952FE8", VA = "0x952FE8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x952FF4", Offset = "0x952FF4", VA = "0x952FF4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x95313C", Offset = "0x95313C", VA = "0x95313C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x953148", Offset = "0x953148", VA = "0x953148")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x953210", Offset = "0x953210", VA = "0x953210", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x95321C", Offset = "0x95321C", VA = "0x95321C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x9532E4", Offset = "0x9532E4", VA = "0x9532E4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x9532F0", Offset = "0x9532F0", VA = "0x9532F0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x9533B8", Offset = "0x9533B8", VA = "0x9533B8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x9533C4", Offset = "0x9533C4", VA = "0x9533C4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x953470", Offset = "0x953470", VA = "0x953470", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x953494", Offset = "0x953494", VA = "0x953494")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x953530", Offset = "0x953530", VA = "0x953530", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x953538", Offset = "0x953538", VA = "0x953538")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x9535FC", Offset = "0x9535FC", VA = "0x9535FC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x953608", Offset = "0x953608", VA = "0x953608")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x9536CC", Offset = "0x9536CC", VA = "0x9536CC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x9536DC", Offset = "0x9536DC", VA = "0x9536DC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x953788", Offset = "0x953788", VA = "0x953788", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x952940", Offset = "0x952940", VA = "0x952940")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000146")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x9525E8", Offset = "0x9525E8", VA = "0x9525E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x952658", Offset = "0x952658", VA = "0x952658")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x95298C", Offset = "0x95298C", VA = "0x95298C")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000224")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000225")]
	public enum Preset
	{
		[Token(Token = "0x4000FE3")]
		Custom,
		[Token(Token = "0x4000FE4")]
		AcousticTile,
		[Token(Token = "0x4000FE5")]
		Brick,
		[Token(Token = "0x4000FE6")]
		BrickPainted,
		[Token(Token = "0x4000FE7")]
		Carpet,
		[Token(Token = "0x4000FE8")]
		CarpetHeavy,
		[Token(Token = "0x4000FE9")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000FEA")]
		CeramicTile,
		[Token(Token = "0x4000FEB")]
		Concrete,
		[Token(Token = "0x4000FEC")]
		ConcreteRough,
		[Token(Token = "0x4000FED")]
		ConcreteBlock,
		[Token(Token = "0x4000FEE")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000FEF")]
		Curtain,
		[Token(Token = "0x4000FF0")]
		Foliage,
		[Token(Token = "0x4000FF1")]
		Glass,
		[Token(Token = "0x4000FF2")]
		GlassHeavy,
		[Token(Token = "0x4000FF3")]
		Grass,
		[Token(Token = "0x4000FF4")]
		Gravel,
		[Token(Token = "0x4000FF5")]
		GypsumBoard,
		[Token(Token = "0x4000FF6")]
		PlasterOnBrick,
		[Token(Token = "0x4000FF7")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000FF8")]
		Soil,
		[Token(Token = "0x4000FF9")]
		SoundProof,
		[Token(Token = "0x4000FFA")]
		Snow,
		[Token(Token = "0x4000FFB")]
		Steel,
		[Token(Token = "0x4000FFC")]
		Water,
		[Token(Token = "0x4000FFD")]
		WoodThin,
		[Token(Token = "0x4000FFE")]
		WoodThick,
		[Token(Token = "0x4000FFF")]
		WoodFloor,
		[Token(Token = "0x4001000")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000226")]
	public sealed class Point
	{
		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xFCD03C", Offset = "0xFCD03C", VA = "0xFCD03C")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xFCD184", Offset = "0xFCD184", VA = "0xFCD184")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xFCD1F4", Offset = "0xFCD1F4", VA = "0xFCD1F4")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x666578", Offset = "0x666578")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6665B0", Offset = "0x6665B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000C95")]
			[Address(RVA = "0xFCD6E4", Offset = "0xFCD6E4", VA = "0xFCD6E4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C96")]
			[Address(RVA = "0xFCD6EC", Offset = "0xFCD6EC", VA = "0xFCD6EC")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6000C97")]
			[Address(RVA = "0xFCD718", Offset = "0xFCD718", VA = "0xFCD718")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700014B")]
		public float Item
		{
			[Token(Token = "0x6000C92")]
			[Address(RVA = "0xFCD25C", Offset = "0xFCD25C", VA = "0xFCD25C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xFCD10C", Offset = "0xFCD10C", VA = "0xFCD10C")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D27C", Offset = "0x66D27C")]
	public Spectrum absorption;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D2B4", Offset = "0x66D2B4")]
	public Spectrum transmission;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D2EC", Offset = "0x66D2EC")]
	public Spectrum scattering;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700014A")]
	public Preset preset
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xFC2F8C", Offset = "0xFC2F8C", VA = "0xFC2F8C")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xFC2F94", Offset = "0xFC2F94", VA = "0xFC2F94")]
		set
		{
		}
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xFC2FBC", Offset = "0xFC2FBC", VA = "0xFC2FBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xFC28BC", Offset = "0xFC28BC", VA = "0xFC28BC")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xFC36B0", Offset = "0xFC36B0", VA = "0xFC36B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xFC36B4", Offset = "0xFC36B4", VA = "0xFC36B4")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xFC2FC0", Offset = "0xFC2FC0", VA = "0xFC2FC0")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xFC20C4", Offset = "0xFC20C4", VA = "0xFC20C4")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xFC379C", Offset = "0xFC379C", VA = "0xFC379C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xFC3D30", Offset = "0xFC3D30", VA = "0xFC3D30")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xFC42CC", Offset = "0xFC42CC", VA = "0xFC42CC")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xFC4868", Offset = "0xFC4868", VA = "0xFC4868")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xFC4E08", Offset = "0xFC4E08", VA = "0xFC4E08")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xFC53A0", Offset = "0xFC53A0", VA = "0xFC53A0")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xFC5938", Offset = "0xFC5938", VA = "0xFC5938")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xFC5ED8", Offset = "0xFC5ED8", VA = "0xFC5ED8")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xFC6478", Offset = "0xFC6478", VA = "0xFC6478")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xFC6A14", Offset = "0xFC6A14", VA = "0xFC6A14")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xFC6FB4", Offset = "0xFC6FB4", VA = "0xFC6FB4")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xFC7554", Offset = "0xFC7554", VA = "0xFC7554")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xFC7AEC", Offset = "0xFC7AEC", VA = "0xFC7AEC")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xFC8084", Offset = "0xFC8084", VA = "0xFC8084")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xFC861C", Offset = "0xFC861C", VA = "0xFC861C")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xFC8BBC", Offset = "0xFC8BBC", VA = "0xFC8BBC")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xFC8FD8", Offset = "0xFC8FD8", VA = "0xFC8FD8")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xFC93EC", Offset = "0xFC93EC", VA = "0xFC93EC")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xFC998C", Offset = "0xFC998C", VA = "0xFC998C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xFC9F28", Offset = "0xFC9F28", VA = "0xFC9F28")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xFCA4C4", Offset = "0xFCA4C4", VA = "0xFCA4C4")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xFCA8DC", Offset = "0xFCA8DC", VA = "0xFCA8DC")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xFCAA70", Offset = "0xFCAA70", VA = "0xFCAA70")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xFCAE84", Offset = "0xFCAE84", VA = "0xFCAE84")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xFCB420", Offset = "0xFCB420", VA = "0xFCB420")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xFCB9C0", Offset = "0xFCB9C0", VA = "0xFCB9C0")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xFCBF5C", Offset = "0xFCBF5C", VA = "0xFCBF5C")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xFCC4FC", Offset = "0xFCC4FC", VA = "0xFCC4FC")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xFCCA9C", Offset = "0xFCCA9C", VA = "0xFCCA9C")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xFCD074", Offset = "0xFCD074", VA = "0xFCD074")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000229")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xFCD744", Offset = "0xFCD744", VA = "0xFCD744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xFCD818", Offset = "0xFCD818", VA = "0xFCD818")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200022A")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700014C")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xFCDE50", Offset = "0xFCDE50", VA = "0xFCDE50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xFCDF64", Offset = "0xFCDF64", VA = "0xFCDF64")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x200022B")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400100B")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xFCDF74", Offset = "0xFCDF74", VA = "0xFCDF74")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xFCE028", Offset = "0xFCE028", VA = "0xFCE028")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xFCE134", Offset = "0xFCE134", VA = "0xFCE134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xFCE138", Offset = "0xFCE138", VA = "0xFCE138")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xFCE13C", Offset = "0xFCE13C", VA = "0xFCE13C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x200022C")]
public class BackButtonLogic : MonoBehaviour
{
	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool buttonPressed;

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x83D250", Offset = "0x83D250", VA = "0x83D250")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x83D3E0", Offset = "0x83D3E0", VA = "0x83D3E0")]
	public BackButtonLogic()
	{
	}
}
[Token(Token = "0x200022D")]
public class MainMenuInteraction : MonoBehaviour
{
	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x882114", Offset = "0x882114", VA = "0x882114")]
	public void OnLoadUI()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x882164", Offset = "0x882164", VA = "0x882164")]
	public void OnLoadRaw()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x8821B4", Offset = "0x8821B4", VA = "0x8821B4")]
	public void OnLoadEvent()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x882204", Offset = "0x882204", VA = "0x882204")]
	public void OnLoadAllInOne()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x882254", Offset = "0x882254", VA = "0x882254")]
	public MainMenuInteraction()
	{
	}
}
[Token(Token = "0x200022E")]
public class RawInteraction : MonoBehaviour
{
	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Material oldHoverMat;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material yellowMat;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material backIdle;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material backACtive;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text outText;

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xB78114", Offset = "0xB78114", VA = "0xB78114")]
	public void OnHoverEnter(Transform t)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xB7832C", Offset = "0xB7832C", VA = "0xB7832C")]
	public void OnHoverExit(Transform t)
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xB784E8", Offset = "0xB784E8", VA = "0xB784E8")]
	public void OnSelected(Transform t)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xB786D0", Offset = "0xB786D0", VA = "0xB786D0")]
	public RawInteraction()
	{
	}
}
[Token(Token = "0x200022F")]
public class UIInteraction : MonoBehaviour
{
	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text outText;

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x859570", Offset = "0x859570", VA = "0x859570")]
	public void OnButtonClicked()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x859620", Offset = "0x859620", VA = "0x859620")]
	public void OnSliderChanged(float value)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x859704", Offset = "0x859704", VA = "0x859704")]
	public void OnToggleChanged(bool value)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x8597E0", Offset = "0x8597E0", VA = "0x8597E0")]
	public void OnClearText()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x859890", Offset = "0x859890", VA = "0x859890")]
	public void OnBackToMenu()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x8598E0", Offset = "0x8598E0", VA = "0x8598E0")]
	public UIInteraction()
	{
	}
}
[Token(Token = "0x2000230")]
public class MenuSceneLoader : MonoBehaviour
{
	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menuUI;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_Go;

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x93743C", Offset = "0x93743C", VA = "0x93743C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x9374F0", Offset = "0x9374F0", VA = "0x9374F0")]
	public MenuSceneLoader()
	{
	}
}
[Token(Token = "0x2000231")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle m_MenuToggle;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_TimeScaleRef;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_VolumeRef;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_Paused;

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x8B7BE4", Offset = "0x8B7BE4", VA = "0x8B7BE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x8B7C3C", Offset = "0x8B7C3C", VA = "0x8B7C3C")]
	private void MenuOn()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x8B7C90", Offset = "0x8B7C90", VA = "0x8B7C90")]
	public void MenuOff()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x8B7CC8", Offset = "0x8B7CC8", VA = "0x8B7CC8")]
	public void OnMenuStatusChange()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x8B7D60", Offset = "0x8B7D60", VA = "0x8B7D60")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x2000232")]
public class SceneAndURLLoader : MonoBehaviour
{
	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PauseMenu m_PauseMenu;

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xA245E0", Offset = "0xA245E0", VA = "0xA245E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xA24638", Offset = "0xA24638", VA = "0xA24638")]
	public void SceneLoad(string sceneName)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xA24678", Offset = "0xA24678", VA = "0xA24678")]
	public void LoadURL(string url)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xA24684", Offset = "0xA24684", VA = "0xA24684")]
	public SceneAndURLLoader()
	{
	}
}
[Token(Token = "0x2000233")]
public class CameraSwitch : MonoBehaviour
{
	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_CurrentActiveObject;

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x83FC20", Offset = "0x83FC20", VA = "0x83FC20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x83FCB4", Offset = "0x83FCB4", VA = "0x83FCB4")]
	public void NextCamera()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x83FE0C", Offset = "0x83FE0C", VA = "0x83FE0C")]
	public CameraSwitch()
	{
	}
}
[Token(Token = "0x2000234")]
public class LevelReset : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x820F68", Offset = "0x820F68", VA = "0x820F68", Slot = "4")]
	public void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x820FA4", Offset = "0x820FA4", VA = "0x820FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x820FA8", Offset = "0x820FA8", VA = "0x820FA8")]
	public LevelReset()
	{
	}
}
namespace Tayx.Graphy
{
	[Token(Token = "0x2000235")]
	public class GraphyDebugger : G_Singleton<GraphyDebugger>
	{
		[Token(Token = "0x2000236")]
		public enum DebugVariable
		{
			[Token(Token = "0x4001022")]
			Fps,
			[Token(Token = "0x4001023")]
			Fps_Min,
			[Token(Token = "0x4001024")]
			Fps_Max,
			[Token(Token = "0x4001025")]
			Fps_Avg,
			[Token(Token = "0x4001026")]
			Ram_Allocated,
			[Token(Token = "0x4001027")]
			Ram_Reserved,
			[Token(Token = "0x4001028")]
			Ram_Mono,
			[Token(Token = "0x4001029")]
			Audio_DB
		}

		[Token(Token = "0x2000237")]
		public enum DebugComparer
		{
			[Token(Token = "0x400102B")]
			Less_than,
			[Token(Token = "0x400102C")]
			Equals_or_less_than,
			[Token(Token = "0x400102D")]
			Equals,
			[Token(Token = "0x400102E")]
			Equals_or_greater_than,
			[Token(Token = "0x400102F")]
			Greater_than
		}

		[Token(Token = "0x2000238")]
		public enum ConditionEvaluation
		{
			[Token(Token = "0x4001031")]
			All_conditions_must_be_met,
			[Token(Token = "0x4001032")]
			Only_one_condition_has_to_be_met
		}

		[Token(Token = "0x2000239")]
		public enum MessageType
		{
			[Token(Token = "0x4001034")]
			Log,
			[Token(Token = "0x4001035")]
			Warning,
			[Token(Token = "0x4001036")]
			Error
		}

		[Serializable]
		[Token(Token = "0x200023A")]
		public struct DebugCondition
		{
			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D354", Offset = "0x66D354")]
			public DebugVariable Variable;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D38C", Offset = "0x66D38C")]
			public DebugComparer Comparer;

			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D3C4", Offset = "0x66D3C4")]
			public float Value;
		}

		[Serializable]
		[Token(Token = "0x200023B")]
		public class DebugPacket
		{
			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D3FC", Offset = "0x66D3FC")]
			public bool Active;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D434", Offset = "0x66D434")]
			public int Id;

			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D46C", Offset = "0x66D46C")]
			public bool ExecuteOnce;

			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D4A4", Offset = "0x66D4A4")]
			public float InitSleepTime;

			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D4DC", Offset = "0x66D4DC")]
			public float ExecuteSleepTime;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ConditionEvaluation ConditionEvaluation;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D514", Offset = "0x66D514")]
			public List<DebugCondition> DebugConditions;

			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MessageType MessageType;

			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[Multiline]
			public string Message;

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool TakeScreenshot;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string ScreenshotFileName;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D55C", Offset = "0x66D55C")]
			public bool DebugBreak;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public UnityEvent UnityEvents;

			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<Action> Callbacks;

			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bool canBeChecked;

			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
			private bool executed;

			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float timePassed;

			[Token(Token = "0x1700014D")]
			public bool Check
			{
				[Token(Token = "0x6000CD5")]
				[Address(RVA = "0xA3C118", Offset = "0xA3C118", VA = "0xA3C118")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0xA3C0B0", Offset = "0xA3C0B0", VA = "0xA3C0B0")]
			public void Update()
			{
			}

			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0xA3CACC", Offset = "0xA3CACC", VA = "0xA3CACC")]
			public void Executed()
			{
			}

			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xA3B758", Offset = "0xA3B758", VA = "0xA3B758")]
			public DebugPacket()
			{
			}
		}

		[Token(Token = "0x200023C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6665C0", Offset = "0x6665C0")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int packetId;

			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0xA3BC28", Offset = "0xA3BC28", VA = "0xA3BC28")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xA3CB50", Offset = "0xA3CB50", VA = "0xA3CB50")]
			internal bool <GetFirstDebugPacketWithId>b__0(DebugPacket x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200023D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6665D0", Offset = "0x6665D0")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int packetId;

			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0xA3BD00", Offset = "0xA3BD00", VA = "0xA3BD00")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0xA3CB8C", Offset = "0xA3CB8C", VA = "0xA3CB8C")]
			internal bool <GetAllDebugPacketsWithId>b__0(DebugPacket x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200023E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6665E0", Offset = "0x6665E0")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int packetId;

			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0xA3BE88", Offset = "0xA3BE88", VA = "0xA3BE88")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0xA3CBC8", Offset = "0xA3CBC8", VA = "0xA3CBC8")]
			internal bool <RemoveAllDebugPacketsWithId>b__0(DebugPacket x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200023F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6665F0", Offset = "0x6665F0")]
		private sealed class <>c
		{
			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<DebugPacket> <>9__24_0;

			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0xA3CB3C", Offset = "0xA3CB3C", VA = "0xA3CB3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0xA3CB44", Offset = "0xA3CB44", VA = "0xA3CB44")]
			internal bool <CheckDebugPackets>b__24_0(DebugPacket packet)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<DebugPacket> m_debugPackets;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xA3AFF4", Offset = "0xA3AFF4", VA = "0xA3AFF4")]
		protected GraphyDebugger()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xA3B08C", Offset = "0xA3B08C", VA = "0xA3B08C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xA3B114", Offset = "0xA3B114", VA = "0xA3B114")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xA3B5C4", Offset = "0xA3B5C4", VA = "0xA3B5C4")]
		public void AddNewDebugPacket(DebugPacket newDebugPacket)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xA3B638", Offset = "0xA3B638", VA = "0xA3B638")]
		public void AddNewDebugPacket(int newId, DebugCondition newDebugCondition, MessageType newMessageType, string newMessage, bool newDebugBreak, Action newCallback)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xA3B82C", Offset = "0xA3B82C", VA = "0xA3B82C")]
		public void AddNewDebugPacket(int newId, List<DebugCondition> newDebugConditions, MessageType newMessageType, string newMessage, bool newDebugBreak, Action newCallback)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xA3B95C", Offset = "0xA3B95C", VA = "0xA3B95C")]
		public void AddNewDebugPacket(int newId, DebugCondition newDebugCondition, MessageType newMessageType, string newMessage, bool newDebugBreak, List<Action> newCallbacks)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xA3BA58", Offset = "0xA3BA58", VA = "0xA3BA58")]
		public void AddNewDebugPacket(int newId, List<DebugCondition> newDebugConditions, MessageType newMessageType, string newMessage, bool newDebugBreak, List<Action> newCallbacks)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xA3BB64", Offset = "0xA3BB64", VA = "0xA3BB64")]
		public DebugPacket GetFirstDebugPacketWithId(int packetId)
		{
			return null;
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xA3BC30", Offset = "0xA3BC30", VA = "0xA3BC30")]
		public List<DebugPacket> GetAllDebugPacketsWithId(int packetId)
		{
			return null;
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xA3BD08", Offset = "0xA3BD08", VA = "0xA3BD08")]
		public void RemoveFirstDebugPacketWithId(int packetId)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xA3BDB0", Offset = "0xA3BDB0", VA = "0xA3BDB0")]
		public void RemoveAllDebugPacketsWithId(int packetId)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xA3BE90", Offset = "0xA3BE90", VA = "0xA3BE90")]
		public void AddCallbackToFirstDebugPacketWithId(Action callback, int id)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xA3BF3C", Offset = "0xA3BF3C", VA = "0xA3BF3C")]
		public void AddCallbackToAllDebugPacketWithId(Action callback, int id)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xA3B118", Offset = "0xA3B118", VA = "0xA3B118")]
		private void CheckDebugPackets()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xA3C120", Offset = "0xA3C120", VA = "0xA3C120")]
		private bool CheckIfConditionIsMet(DebugCondition debugCondition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xA3C86C", Offset = "0xA3C86C", VA = "0xA3C86C")]
		private float GetRequestedValueFromDebugVariable(DebugVariable debugVariable)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xA3C260", Offset = "0xA3C260", VA = "0xA3C260")]
		private void ExecuteOperationsInDebugPacket(DebugPacket debugPacket)
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class GraphyManager : G_Singleton<GraphyManager>
	{
		[Token(Token = "0x2000241")]
		public enum Mode
		{
			[Token(Token = "0x4001082")]
			FULL,
			[Token(Token = "0x4001083")]
			LIGHT
		}

		[Token(Token = "0x2000242")]
		public enum ModuleType
		{
			[Token(Token = "0x4001085")]
			FPS,
			[Token(Token = "0x4001086")]
			RAM,
			[Token(Token = "0x4001087")]
			AUDIO,
			[Token(Token = "0x4001088")]
			ADVANCED
		}

		[Token(Token = "0x2000243")]
		public enum ModuleState
		{
			[Token(Token = "0x400108A")]
			FULL,
			[Token(Token = "0x400108B")]
			TEXT,
			[Token(Token = "0x400108C")]
			BASIC,
			[Token(Token = "0x400108D")]
			BACKGROUND,
			[Token(Token = "0x400108E")]
			OFF
		}

		[Token(Token = "0x2000244")]
		public enum ModulePosition
		{
			[Token(Token = "0x4001090")]
			TOP_RIGHT,
			[Token(Token = "0x4001091")]
			TOP_LEFT,
			[Token(Token = "0x4001092")]
			BOTTOM_RIGHT,
			[Token(Token = "0x4001093")]
			BOTTOM_LEFT,
			[Token(Token = "0x4001094")]
			FREE
		}

		[Token(Token = "0x2000245")]
		public enum LookForAudioListener
		{
			[Token(Token = "0x4001096")]
			ALWAYS,
			[Token(Token = "0x4001097")]
			ON_SCENE_LOAD,
			[Token(Token = "0x4001098")]
			NEVER
		}

		[Token(Token = "0x2000246")]
		public enum ModulePreset
		{
			[Token(Token = "0x400109A")]
			FPS_BASIC,
			[Token(Token = "0x400109B")]
			FPS_TEXT,
			[Token(Token = "0x400109C")]
			FPS_FULL,
			[Token(Token = "0x400109D")]
			FPS_TEXT_RAM_TEXT,
			[Token(Token = "0x400109E")]
			FPS_FULL_RAM_TEXT,
			[Token(Token = "0x400109F")]
			FPS_FULL_RAM_FULL,
			[Token(Token = "0x40010A0")]
			FPS_TEXT_RAM_TEXT_AUDIO_TEXT,
			[Token(Token = "0x40010A1")]
			FPS_FULL_RAM_TEXT_AUDIO_TEXT,
			[Token(Token = "0x40010A2")]
			FPS_FULL_RAM_FULL_AUDIO_TEXT,
			[Token(Token = "0x40010A3")]
			FPS_FULL_RAM_FULL_AUDIO_FULL,
			[Token(Token = "0x40010A4")]
			FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL,
			[Token(Token = "0x40010A5")]
			FPS_BASIC_ADVANCED_FULL
		}

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Mode m_graphyMode;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_enableOnStartup;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool m_keepAlive;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[SerializeField]
		private bool m_background;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_backgroundColor;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_enableHotkeys;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private KeyCode m_toggleModeKeyCode;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_toggleModeCtrl;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool m_toggleModeAlt;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private KeyCode m_toggleActiveKeyCode;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_toggleActiveCtrl;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool m_toggleActiveAlt;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private ModulePosition m_graphModulePosition;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ModuleState m_fpsModuleState;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D674", Offset = "0x66D674")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66D674", Offset = "0x66D674")]
		[SerializeField]
		private int m_timeToResetMinMaxFps;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_goodFpsColor;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int m_goodFpsThreshold;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Color m_cautionFpsColor;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private int m_cautionFpsThreshold;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color m_criticalFpsColor;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66D72C", Offset = "0x66D72C")]
		private int m_fpsGraphResolution;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66D770", Offset = "0x66D770")]
		[SerializeField]
		private int m_fpsTextUpdateRate;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ModuleState m_ramModuleState;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Color m_allocatedRamColor;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private Color m_reservedRamColor;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Color m_monoRamColor;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66D7F4", Offset = "0x66D7F4")]
		private int m_ramGraphResolution;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66D838", Offset = "0x66D838")]
		private int m_ramTextUpdateRate;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private ModuleState m_audioModuleState;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private LookForAudioListener m_findAudioListenerInCameraIfNull;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AudioListener m_audioListener;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Color m_audioGraphColor;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66D8BC", Offset = "0x66D8BC")]
		private int m_audioGraphResolution;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66D900", Offset = "0x66D900")]
		[SerializeField]
		private int m_audioTextUpdateRate;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private FFTWindow m_FFTWindow;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66D954", Offset = "0x66D954")]
		private int m_spectrumSize;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private ModulePosition m_advancedModulePosition;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private ModuleState m_advancedModuleState;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool m_initialized;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool m_active;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		private bool m_focused;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private G_FpsManager m_fpsManager;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private G_RamManager m_ramManager;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private G_AudioManager m_audioManager;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private G_AdvancedData m_advancedData;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private ModulePreset m_modulePresetState;

		[Token(Token = "0x1700014E")]
		public Mode GraphyMode
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0xA30E60", Offset = "0xA30E60", VA = "0xA30E60")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0xA353C4", Offset = "0xA353C4", VA = "0xA353C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public bool EnableOnStartup
		{
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0xA3CF14", Offset = "0xA3CF14", VA = "0xA3CF14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000150")]
		public bool KeepAlive
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0xA3CF1C", Offset = "0xA3CF1C", VA = "0xA3CF1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000151")]
		public bool Background
		{
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0xA2FDB4", Offset = "0xA2FDB4", VA = "0xA2FDB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0xA350C8", Offset = "0xA350C8", VA = "0xA350C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public Color BackgroundColor
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0xA300D4", Offset = "0xA300D4", VA = "0xA300D4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xA352E0", Offset = "0xA352E0", VA = "0xA352E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public ModulePosition GraphModulePosition
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0xA3CF24", Offset = "0xA3CF24", VA = "0xA3CF24")]
			get
			{
				return default(ModulePosition);
			}
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0xA35400", Offset = "0xA35400", VA = "0xA35400")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public ModuleState FpsModuleState
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0xA3A37C", Offset = "0xA3A37C", VA = "0xA3A37C")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0xA354B8", Offset = "0xA354B8", VA = "0xA354B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public int TimeToResetMinMaxFps
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0xA3A908", Offset = "0xA3A908", VA = "0xA3A908")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0xA35D04", Offset = "0xA35D04", VA = "0xA35D04")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public Color GoodFPSColor
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0xA3969C", Offset = "0xA3969C", VA = "0xA3969C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0xA3581C", Offset = "0xA3581C", VA = "0xA3581C")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public Color CautionFPSColor
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0xA396A8", Offset = "0xA396A8", VA = "0xA396A8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0xA35A58", Offset = "0xA35A58", VA = "0xA35A58")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public Color CriticalFPSColor
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0xA396B4", Offset = "0xA396B4", VA = "0xA396B4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0xA35C94", Offset = "0xA35C94", VA = "0xA35C94")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public int GoodFPSThreshold
		{
			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0xA394D4", Offset = "0xA394D4", VA = "0xA394D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0xA35554", Offset = "0xA35554", VA = "0xA35554")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public int CautionFPSThreshold
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0xA394DC", Offset = "0xA394DC", VA = "0xA394DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0xA355E4", Offset = "0xA355E4", VA = "0xA355E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public int FpsGraphResolution
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0xA391A0", Offset = "0xA391A0", VA = "0xA391A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0xA35D70", Offset = "0xA35D70", VA = "0xA35D70")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public int FpsTextUpdateRate
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0xA3AFDC", Offset = "0xA3AFDC", VA = "0xA3AFDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0xA35DDC", Offset = "0xA35DDC", VA = "0xA35DDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public float CurrentFPS
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0xA3D2A8", Offset = "0xA3D2A8", VA = "0xA3D2A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015E")]
		public float AverageFPS
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0xA3D2D4", Offset = "0xA3D2D4", VA = "0xA3D2D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015F")]
		public float MinFPS
		{
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0xA3D300", Offset = "0xA3D300", VA = "0xA3D300")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000160")]
		public float MaxFPS
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0xA3D32C", Offset = "0xA3D32C", VA = "0xA3D32C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000161")]
		public ModuleState RamModuleState
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xA3D358", Offset = "0xA3D358", VA = "0xA3D358")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xA35E40", Offset = "0xA35E40", VA = "0xA35E40")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public Color AllocatedRamColor
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xA3D500", Offset = "0xA3D500", VA = "0xA3D500")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xA362C0", Offset = "0xA362C0", VA = "0xA362C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public Color ReservedRamColor
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0xA3D6D0", Offset = "0xA3D6D0", VA = "0xA3D6D0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0xA36084", Offset = "0xA36084", VA = "0xA36084")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public Color MonoRamColor
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0xA3D6DC", Offset = "0xA3D6DC", VA = "0xA3D6DC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0xA364FC", Offset = "0xA364FC", VA = "0xA364FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public int RamGraphResolution
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0xA3D6E8", Offset = "0xA3D6E8", VA = "0xA3D6E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xA3656C", Offset = "0xA3656C", VA = "0xA3656C")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public int RamTextUpdateRate
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0xA3D6F0", Offset = "0xA3D6F0", VA = "0xA3D6F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0xA365D8", Offset = "0xA365D8", VA = "0xA365D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public float AllocatedRam
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xA3D6F8", Offset = "0xA3D6F8", VA = "0xA3D6F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000168")]
		public float ReservedRam
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xA3D724", Offset = "0xA3D724", VA = "0xA3D724")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000169")]
		public float MonoRam
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0xA3D758", Offset = "0xA3D758", VA = "0xA3D758")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016A")]
		public ModuleState AudioModuleState
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0xA32F78", Offset = "0xA32F78", VA = "0xA32F78")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0xA3663C", Offset = "0xA3663C", VA = "0xA3663C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public AudioListener AudioListener
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0xA33764", Offset = "0xA33764", VA = "0xA33764")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0xA3D78C", Offset = "0xA3D78C", VA = "0xA3D78C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public LookForAudioListener FindAudioListenerInCameraIfNull
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0xA3375C", Offset = "0xA3375C", VA = "0xA3375C")]
			get
			{
				return default(LookForAudioListener);
			}
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0xA368E8", Offset = "0xA368E8", VA = "0xA368E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public Color AudioGraphColor
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0xA31C34", Offset = "0xA31C34", VA = "0xA31C34")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0xA36880", Offset = "0xA36880", VA = "0xA36880")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public int AudioGraphResolution
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xA30FA8", Offset = "0xA30FA8", VA = "0xA30FA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xA36A24", Offset = "0xA36A24", VA = "0xA36A24")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public int AudioTextUpdateRate
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xA33A64", Offset = "0xA33A64", VA = "0xA33A64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0xA36A90", Offset = "0xA36A90", VA = "0xA36A90")]
			set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public FFTWindow FftWindow
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0xA3376C", Offset = "0xA3376C", VA = "0xA3376C")]
			get
			{
				return default(FFTWindow);
			}
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0xA3694C", Offset = "0xA3694C", VA = "0xA3694C")]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public int SpectrumSize
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0xA33774", Offset = "0xA33774", VA = "0xA33774")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0xA369B8", Offset = "0xA369B8", VA = "0xA369B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public float[] Spectrum
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0xA3D7BC", Offset = "0xA3D7BC", VA = "0xA3D7BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public float MaxDB
		{
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0xA3D7E8", Offset = "0xA3D7E8", VA = "0xA3D7E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000174")]
		public ModuleState AdvancedModuleState
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0xA300E8", Offset = "0xA300E8", VA = "0xA300E8")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0xA36B68", Offset = "0xA36B68", VA = "0xA36B68")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public ModulePosition AdvancedModulePosition
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0xA300E0", Offset = "0xA300E0", VA = "0xA300E0")]
			get
			{
				return default(ModulePosition);
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0xA36AF4", Offset = "0xA36AF4", VA = "0xA36AF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xA3CC04", Offset = "0xA3CC04", VA = "0xA3CC04")]
		protected GraphyManager()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xA3D814", Offset = "0xA3D814", VA = "0xA3D814")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xA3DD18", Offset = "0xA3DD18", VA = "0xA3DD18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xA3DEC0", Offset = "0xA3DEC0", VA = "0xA3DEC0")]
		private void OnApplicationFocus(bool isFocused)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xA3DF54", Offset = "0xA3DF54", VA = "0xA3DF54")]
		public void SetModulePosition(ModuleType moduleType, ModulePosition modulePosition)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xA3E014", Offset = "0xA3E014", VA = "0xA3E014")]
		public void SetModuleMode(ModuleType moduleType, ModuleState moduleState)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xA3E0F0", Offset = "0xA3E0F0", VA = "0xA3E0F0")]
		public void ToggleModes()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xA3E1DC", Offset = "0xA3E1DC", VA = "0xA3E1DC")]
		public void SetPreset(ModulePreset modulePreset)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xA3E54C", Offset = "0xA3E54C", VA = "0xA3E54C")]
		public void ToggleActive()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xA3E55C", Offset = "0xA3E55C", VA = "0xA3E55C")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xA3E600", Offset = "0xA3E600", VA = "0xA3E600")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xA3D818", Offset = "0xA3D818", VA = "0xA3D818")]
		private void Init()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xA3DD30", Offset = "0xA3DD30", VA = "0xA3DD30")]
		private void CheckForHotkeyPresses()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xA3E7EC", Offset = "0xA3E7EC", VA = "0xA3E7EC")]
		private bool CheckFor1KeyPress(KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xA3E77C", Offset = "0xA3E77C", VA = "0xA3E77C")]
		private bool CheckFor2KeyPress(KeyCode key1, KeyCode key2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xA3E6AC", Offset = "0xA3E6AC", VA = "0xA3E6AC")]
		private bool CheckFor3KeyPress(KeyCode key1, KeyCode key2, KeyCode key3)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xA3CE9C", Offset = "0xA3CE9C", VA = "0xA3CE9C")]
		private void UpdateAllParameters()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xA3DEDC", Offset = "0xA3DEDC", VA = "0xA3DEDC")]
		private void RefreshAllParameters()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class G_GraphShader
	{
		[Token(Token = "0x40010A6")]
		public const int ArrayMaxSizeFull = 512;

		[Token(Token = "0x40010A7")]
		public const int ArrayMaxSizeLight = 128;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ArrayMaxSize;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Array;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image Image;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Name;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Name_Length;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Average;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int averagePropertyId;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float GoodThreshold;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float CautionThreshold;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int goodThresholdPropertyId;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int cautionThresholdPropertyId;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color GoodColor;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color CautionColor;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color CriticalColor;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int goodColorPropertyId;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int cautionColorPropertyId;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int criticalColorPropertyId;

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xA30E68", Offset = "0xA30E68", VA = "0xA30E68")]
		public void InitializeShader()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xA31E44", Offset = "0xA31E44", VA = "0xA31E44")]
		public void UpdateArray()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xA31EC8", Offset = "0xA31EC8", VA = "0xA31EC8")]
		public void UpdateAverage()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xA31D84", Offset = "0xA31D84", VA = "0xA31D84")]
		public void UpdateThresholds()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xA31C40", Offset = "0xA31C40", VA = "0xA31C40")]
		public void UpdateColors()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xA31800", Offset = "0xA31800", VA = "0xA31800")]
		public void UpdatePoints()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xA31F34", Offset = "0xA31F34", VA = "0xA31F34")]
		public G_GraphShader()
		{
		}
	}
}
namespace Tayx.Graphy.Utils
{
	[Token(Token = "0x2000248")]
	public static class G_ExtensionMethods
	{
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xA32B60", Offset = "0xA32B60", VA = "0xA32B60")]
		public static List<GameObject> SetAllActive(this List<GameObject> gameObjects, bool active)
		{
			return null;
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xA32D04", Offset = "0xA32D04", VA = "0xA32D04")]
		public static List<Image> SetOneActive(this List<Image> images, int active)
		{
			return null;
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xA2FDBC", Offset = "0xA2FDBC", VA = "0xA2FDBC")]
		public static List<Image> SetAllActive(this List<Image> images, bool active)
		{
			return null;
		}
	}
	[Token(Token = "0x2000249")]
	public class G_Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _applicationIsQuitting;

		[Token(Token = "0x17000176")]
		public static T Instance
		{
			[Token(Token = "0x6000D43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D45")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D46")]
		public G_Singleton()
		{
		}
	}
}
namespace Tayx.Graphy.Utils.NumString
{
	[Token(Token = "0x200024A")]
	public static class G_FloatString
	{
		[Token(Token = "0x40010BC")]
		private const string floatFormat = "0.0";

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float decimalMultiplier;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] negativeBuffer;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] positiveBuffer;

		[Token(Token = "0x17000177")]
		public static bool Inited
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xA30290", Offset = "0xA30290", VA = "0xA30290")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		public static float MinValue
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xA30350", Offset = "0xA30350", VA = "0xA30350")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000179")]
		public static float MaxValue
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xA303D4", Offset = "0xA303D4", VA = "0xA303D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xA30450", Offset = "0xA30450", VA = "0xA30450")]
		public static void Init(float minNegativeValue, float maxPositiveValue, int decimals = 1)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xA2F308", Offset = "0xA2F308", VA = "0xA2F308")]
		public static string ToStringNonAlloc(this float value)
		{
			return null;
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xA3AD4C", Offset = "0xA3AD4C", VA = "0xA3AD4C")]
		public static string ToStringNonAlloc(this float value, string format)
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xA3AD44", Offset = "0xA3AD44", VA = "0xA3AD44")]
		public static int ToInt(this float f)
		{
			return default(int);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xA403BC", Offset = "0xA403BC", VA = "0xA403BC")]
		public static float ToFloat(this int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xA402FC", Offset = "0xA402FC", VA = "0xA402FC")]
		private static int Pow(int f, int p)
		{
			return default(int);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xA40318", Offset = "0xA40318", VA = "0xA40318")]
		private static int ToIndex(this float f)
		{
			return default(int);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xA40288", Offset = "0xA40288", VA = "0xA40288")]
		private static float FromIndex(this int i)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200024B")]
	public static class G_IntString
	{
		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] negativeBuffer;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] positiveBuffer;

		[Token(Token = "0x1700017A")]
		public static bool Inited
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x84E39C", Offset = "0x84E39C", VA = "0x84E39C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017B")]
		public static int MinValue
		{
			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x84E45C", Offset = "0x84E45C", VA = "0x84E45C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017C")]
		public static int MaxValue
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x84E4DC", Offset = "0x84E4DC", VA = "0x84E4DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x84E558", Offset = "0x84E558", VA = "0x84E558")]
		public static void Init(int minNegativeValue, int maxPositiveValue)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x84E808", Offset = "0x84E808", VA = "0x84E808")]
		public static string ToStringNonAlloc(this int value)
		{
			return null;
		}
	}
}
namespace Tayx.Graphy.UI
{
	[Token(Token = "0x200024C")]
	public interface IModifiableState
	{
		[Token(Token = "0x6000D5A")]
		void SetState(GraphyManager.ModuleState newState, bool silentUpdate);
	}
	[Token(Token = "0x200024D")]
	public interface IMovable
	{
		[Token(Token = "0x6000D5B")]
		void SetPosition(GraphyManager.ModulePosition newModulePosition);
	}
}
namespace Tayx.Graphy.Ram
{
	[Token(Token = "0x200024E")]
	public class G_RamGraph : G_Graph
	{
		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_imageAllocated;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_imageReserved;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_imageMono;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader ShaderFull;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Shader ShaderLight;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_resolution;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private G_GraphShader m_shaderGraphAllocated;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private G_GraphShader m_shaderGraphReserved;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private G_GraphShader m_shaderGraphMono;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] m_allocatedArray;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] m_reservedArray;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] m_monoArray;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_highestMemory;

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xA3E9AC", Offset = "0xA3E9AC", VA = "0xA3E9AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xA3EAE8", Offset = "0xA3EAE8", VA = "0xA3EAE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xA3EAF4", Offset = "0xA3EAF4", VA = "0xA3EAF4")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xA3EE48", Offset = "0xA3EE48", VA = "0xA3EE48", Slot = "4")]
		protected override void UpdateGraph()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xA3F310", Offset = "0xA3F310", VA = "0xA3F310", Slot = "5")]
		protected override void CreatePoints()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xA3E9B0", Offset = "0xA3E9B0", VA = "0xA3E9B0")]
		private void Init()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xA3F874", Offset = "0xA3F874", VA = "0xA3F874")]
		public G_RamGraph()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class G_RamManager : MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ramGraphGameObject;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private G_RamGraph m_ramGraph;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_RamText m_ramText;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> m_childrenGameObjects;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xA3F884", Offset = "0xA3F884", VA = "0xA3F884")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xA3FCB0", Offset = "0xA3FCB0", VA = "0xA3FCB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xA3CF2C", Offset = "0xA3CF2C", VA = "0xA3CF2C", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xA3D360", Offset = "0xA3D360", VA = "0xA3D360", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xA3E6A0", Offset = "0xA3E6A0", VA = "0xA3E6A0")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xA3D50C", Offset = "0xA3D50C", VA = "0xA3D50C")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xA3E7F8", Offset = "0xA3E7F8", VA = "0xA3E7F8")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xA3F888", Offset = "0xA3F888", VA = "0xA3F888")]
		private void Init()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xA3FCB4", Offset = "0xA3FCB4", VA = "0xA3FCB4")]
		private void SetGraphActive(bool active)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xA3FE4C", Offset = "0xA3FE4C", VA = "0xA3FE4C")]
		public G_RamManager()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class G_RamMonitor : MonoBehaviour
	{
		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_allocatedRam;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_reservedRam;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_monoRam;

		[Token(Token = "0x1700017D")]
		public float AllocatedRam
		{
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0xA3CAC4", Offset = "0xA3CAC4", VA = "0xA3CAC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017E")]
		public float ReservedRam
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xA3D750", Offset = "0xA3D750", VA = "0xA3D750")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017F")]
		public float MonoRam
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0xA3D784", Offset = "0xA3D784", VA = "0xA3D784")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xA3FEE4", Offset = "0xA3FEE4", VA = "0xA3FEE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xA3FF4C", Offset = "0xA3FF4C", VA = "0xA3FF4C")]
		public G_RamMonitor()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class G_RamText : MonoBehaviour
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_allocatedSystemMemorySizeText;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_reservedSystemMemorySizeText;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_monoSystemMemorySizeText;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_updateRate;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_deltaTime;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly string m_memoryStringFormat;

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xA3FF54", Offset = "0xA3FF54", VA = "0xA3FF54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xA400AC", Offset = "0xA400AC", VA = "0xA400AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xA3FD1C", Offset = "0xA3FD1C", VA = "0xA3FD1C")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xA3FF58", Offset = "0xA3FF58", VA = "0xA3FF58")]
		private void Init()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xA40228", Offset = "0xA40228", VA = "0xA40228")]
		public G_RamText()
		{
		}
	}
}
namespace Tayx.Graphy.Graph
{
	[Token(Token = "0x2000252")]
	public abstract class G_Graph : MonoBehaviour
	{
		[Token(Token = "0x6000D77")]
		protected abstract void UpdateGraph();

		[Token(Token = "0x6000D78")]
		protected abstract void CreatePoints();

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xA31FE4", Offset = "0xA31FE4", VA = "0xA31FE4")]
		protected G_Graph()
		{
		}
	}
}
namespace Tayx.Graphy.Fps
{
	[Token(Token = "0x2000253")]
	public class G_FpsGraph : G_Graph
	{
		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_imageGraph;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader ShaderFull;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader ShaderLight;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_resolution;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_GraphShader m_shaderGraph;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] m_fpsArray;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_highestFps;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xA38F50", Offset = "0xA38F50", VA = "0xA38F50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xA39030", Offset = "0xA39030", VA = "0xA39030")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xA3903C", Offset = "0xA3903C", VA = "0xA3903C")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xA391A8", Offset = "0xA391A8", VA = "0xA391A8", Slot = "4")]
		protected override void UpdateGraph()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xA394E4", Offset = "0xA394E4", VA = "0xA394E4", Slot = "5")]
		protected override void CreatePoints()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xA38F54", Offset = "0xA38F54", VA = "0xA38F54")]
		private void Init()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xA396C0", Offset = "0xA396C0", VA = "0xA396C0")]
		public G_FpsGraph()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class G_FpsManager : MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_fpsGraphGameObject;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GameObject> m_nonBasicTextGameObjects;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_FpsGraph m_fpsGraph;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_FpsText m_fpsText;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> m_childrenGameObjects;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xA396D0", Offset = "0xA396D0", VA = "0xA396D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xA39B14", Offset = "0xA39B14", VA = "0xA39B14")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xA39D14", Offset = "0xA39D14", VA = "0xA39D14", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xA3A090", Offset = "0xA3A090", VA = "0xA3A090", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xA3A308", Offset = "0xA3A308", VA = "0xA3A308")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xA39B18", Offset = "0xA39B18", VA = "0xA39B18")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xA3A384", Offset = "0xA3A384", VA = "0xA3A384")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xA396D4", Offset = "0xA396D4", VA = "0xA396D4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xA3A2A0", Offset = "0xA3A2A0", VA = "0xA3A2A0")]
		private void SetGraphActive(bool active)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xA3A570", Offset = "0xA3A570", VA = "0xA3A570")]
		public G_FpsManager()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class G_FpsMonitor : MonoBehaviour
	{
		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_averageSamples;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_currentFps;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_avgFps;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_minFps;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_maxFps;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<float> m_averageFpsSamples;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_timeToResetMinMaxFps;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_timeToResetMinFpsPassed;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_timeToResetMaxFpsPassed;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float unscaledDeltaTime;

		[Token(Token = "0x17000180")]
		public float CurrentFPS
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0xA3A628", Offset = "0xA3A628", VA = "0xA3A628")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000181")]
		public float AverageFPS
		{
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0xA394CC", Offset = "0xA394CC", VA = "0xA394CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000182")]
		public float MinFPS
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0xA3A630", Offset = "0xA3A630", VA = "0xA3A630")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000183")]
		public float MaxFPS
		{
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xA3A638", Offset = "0xA3A638", VA = "0xA3A638")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xA3A640", Offset = "0xA3A640", VA = "0xA3A640")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xA3A714", Offset = "0xA3A714", VA = "0xA3A714")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xA3A314", Offset = "0xA3A314", VA = "0xA3A314")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xA3A644", Offset = "0xA3A644", VA = "0xA3A644")]
		private void Init()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xA3A910", Offset = "0xA3A910", VA = "0xA3A910")]
		public G_FpsMonitor()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class G_FpsText : MonoBehaviour
	{
		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_fpsText;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_msText;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_avgFpsText;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_minFpsText;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_maxFpsText;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_updateRate;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_frameCount;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_deltaTime;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_fps;

		[Token(Token = "0x400110F")]
		private const int m_minFps = 0;

		[Token(Token = "0x4001110")]
		private const int m_maxFps = 10000;

		[Token(Token = "0x4001111")]
		private const string m_msStringFormat = "0.0";

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xA3A928", Offset = "0xA3A928", VA = "0xA3A928")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xA3AA8C", Offset = "0xA3AA8C", VA = "0xA3AA8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xA3A348", Offset = "0xA3A348", VA = "0xA3A348")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xA3AEF0", Offset = "0xA3AEF0", VA = "0xA3AEF0")]
		private void SetFpsRelatedTextColor(Text text, float fps)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xA3A92C", Offset = "0xA3A92C", VA = "0xA3A92C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xA3AFE4", Offset = "0xA3AFE4", VA = "0xA3AFE4")]
		public G_FpsText()
		{
		}
	}
}
namespace Tayx.Graphy.Audio
{
	[Token(Token = "0x2000257")]
	public class G_AudioGraph : G_Graph
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_imageGraph;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_imageGraphHighestValues;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader ShaderFull;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader ShaderLight;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_resolution;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private G_GraphShader m_shaderGraph;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private G_GraphShader m_shaderGraphHighestValues;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] m_graphArray;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] m_graphArrayHighestValue;

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xA30A3C", Offset = "0xA30A3C", VA = "0xA30A3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xA30B44", Offset = "0xA30B44", VA = "0xA30B44")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xA30C04", Offset = "0xA30C04", VA = "0xA30C04")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xA30FB0", Offset = "0xA30FB0", VA = "0xA30FB0", Slot = "4")]
		protected override void UpdateGraph()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xA31874", Offset = "0xA31874", VA = "0xA31874", Slot = "5")]
		protected override void CreatePoints()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xA30A40", Offset = "0xA30A40", VA = "0xA30A40")]
		private void Init()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xA31FD4", Offset = "0xA31FD4", VA = "0xA31FD4")]
		public G_AudioGraph()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class G_AudioManager : MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_audioGraphGameObject;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_audioDbText;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_AudioGraph m_audioGraph;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_AudioText m_audioText;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> m_childrenGameObjects;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xA31FEC", Offset = "0xA31FEC", VA = "0xA31FEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xA32430", Offset = "0xA32430", VA = "0xA32430")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xA32620", Offset = "0xA32620", VA = "0xA32620", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xA329C0", Offset = "0xA329C0", VA = "0xA329C0", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xA32DEC", Offset = "0xA32DEC", VA = "0xA32DEC")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xA32434", Offset = "0xA32434", VA = "0xA32434")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xA32F80", Offset = "0xA32F80", VA = "0xA32F80")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xA31FF0", Offset = "0xA31FF0", VA = "0xA31FF0")]
		private void Init()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xA32C9C", Offset = "0xA32C9C", VA = "0xA32C9C")]
		private void SetGraphActive(bool active)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xA3315C", Offset = "0xA3315C", VA = "0xA3315C")]
		public G_AudioManager()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class G_AudioMonitor : MonoBehaviour
	{
		[Token(Token = "0x4001128")]
		private const float m_refValue = 1f;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioListener m_audioListener;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GraphyManager.LookForAudioListener m_findAudioListenerInCameraIfNull;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private FFTWindow m_FFTWindow;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_spectrumSize;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_spectrum;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] m_spectrumHighestValues;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_maxDB;

		[Token(Token = "0x17000184")]
		public float[] Spectrum
		{
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0xA3175C", Offset = "0xA3175C", VA = "0xA3175C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		public float[] SpectrumHighestValues
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xA3186C", Offset = "0xA3186C", VA = "0xA3186C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public float MaxDB
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0xA331F4", Offset = "0xA331F4", VA = "0xA331F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000187")]
		public bool SpectrumDataAvailable
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0xA30B94", Offset = "0xA30B94", VA = "0xA30B94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xA331FC", Offset = "0xA331FC", VA = "0xA331FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xA332CC", Offset = "0xA332CC", VA = "0xA332CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xA32DF8", Offset = "0xA32DF8", VA = "0xA32DF8")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xA31764", Offset = "0xA31764", VA = "0xA31764")]
		public float lin2dB(float linear)
		{
			return default(float);
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xA317EC", Offset = "0xA317EC", VA = "0xA317EC")]
		public float dBNormalized(float db)
		{
			return default(float);
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xA336F0", Offset = "0xA336F0", VA = "0xA336F0")]
		private void FindAudioListener()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xA33200", Offset = "0xA33200", VA = "0xA33200")]
		private void Init()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xA3377C", Offset = "0xA3377C", VA = "0xA3377C")]
		public G_AudioMonitor()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xA33798", Offset = "0xA33798", VA = "0xA33798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676A30", Offset = "0x676A30")]
		private void <Init>b__23_0(Scene scene, LoadSceneMode loadMode)
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class G_AudioText : MonoBehaviour
	{
		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_DBText;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_updateRate;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_deltaTimeOffset;

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xA337AC", Offset = "0xA337AC", VA = "0xA337AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xA33918", Offset = "0xA33918", VA = "0xA33918")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xA32F44", Offset = "0xA32F44", VA = "0xA32F44")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xA337B0", Offset = "0xA337B0", VA = "0xA337B0")]
		private void Init()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xA33A6C", Offset = "0xA33A6C", VA = "0xA33A6C")]
		public G_AudioText()
		{
		}
	}
}
namespace Tayx.Graphy.Advanced
{
	[Token(Token = "0x200025B")]
	public class G_AdvancedData : MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_graphicsDeviceVersionText;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_processorTypeText;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_operatingSystemText;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_systemMemoryText;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text m_graphicsDeviceNameText;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text m_graphicsMemorySizeText;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text m_screenResolutionText;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text m_gameWindowResolutionText;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66DC30", Offset = "0x66DC30")]
		private float m_updateRate;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_deltaTime;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private StringBuilder m_sb;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly string[] m_windowStrings;

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xA2DEB8", Offset = "0xA2DEB8", VA = "0xA2DEB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xA2EF00", Offset = "0xA2EF00", VA = "0xA2EF00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xA2F4AC", Offset = "0xA2F4AC", VA = "0xA2F4AC", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xA2FD1C", Offset = "0xA2FD1C", VA = "0xA2FD1C", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xA2FF18", Offset = "0xA2FF18", VA = "0xA2FF18")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xA2FF24", Offset = "0xA2FF24", VA = "0xA2FF24")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xA300F0", Offset = "0xA300F0", VA = "0xA300F0")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xA2DEBC", Offset = "0xA2DEBC", VA = "0xA2DEBC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xA307A4", Offset = "0xA307A4", VA = "0xA307A4")]
		public G_AdvancedData()
		{
		}
	}
}
namespace Tayx.Graphy.CustomizationScene
{
	[Token(Token = "0x200025C")]
	public class G_CUIColorPicker : MonoBehaviour
	{
		[Token(Token = "0x200025D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666630", Offset = "0x666630")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D satvalTex;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color[] satvalColors;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float Hue;

			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color[] hueColors;

			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action resetSatValTexture;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float Saturation;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float Value;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject result;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public G_CUIColorPicker <>4__this;

			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject hueGO;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action dragH;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public GameObject satvalGO;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Action dragSV;

			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Vector2 hueSz;

			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Action applyHue;

			[Token(Token = "0x400115B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Action applySaturationValue;

			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public GameObject hueKnob;

			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Action idle;

			[Token(Token = "0x400115E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Vector2 satvalSz;

			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public GameObject satvalKnob;

			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0xA37FD4", Offset = "0xA37FD4", VA = "0xA37FD4")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xA383B8", Offset = "0xA383B8", VA = "0xA383B8")]
			internal void <Setup>b__0()
			{
			}

			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xA384BC", Offset = "0xA384BC", VA = "0xA384BC")]
			internal void <Setup>b__1()
			{
			}

			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0xA38688", Offset = "0xA38688", VA = "0xA38688")]
			internal void <Setup>b__2()
			{
			}

			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0xA38AA4", Offset = "0xA38AA4", VA = "0xA38AA4")]
			internal void <Setup>b__3()
			{
			}

			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0xA38B28", Offset = "0xA38B28", VA = "0xA38B28")]
			internal void <Setup>b__4()
			{
			}

			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0xA38CD4", Offset = "0xA38CD4", VA = "0xA38CD4")]
			internal void <Setup>b__5()
			{
			}
		}

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider alphaSlider;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image alphaSliderBGImage;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color _color;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<Color> _onValueChange;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _update;

		[Token(Token = "0x17000188")]
		public Color Color
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xA37014", Offset = "0xA37014", VA = "0xA37014")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xA3520C", Offset = "0xA3520C", VA = "0xA3520C")]
			set
			{
			}
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xA35204", Offset = "0xA35204", VA = "0xA35204")]
		public void SetOnValueChangeCallback(Action<Color> onValueChange)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xA37980", Offset = "0xA37980", VA = "0xA37980")]
		private static void RGBToHSV(Color color, out float h, out float s, out float v)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xA37BB8", Offset = "0xA37BB8", VA = "0xA37BB8")]
		private static bool GetLocalMouse(GameObject go, out Vector2 result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xA37E34", Offset = "0xA37E34", VA = "0xA37E34")]
		private static Vector2 GetWidgetSize(GameObject go)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xA37F80", Offset = "0xA37F80", VA = "0xA37F80")]
		private GameObject GO(string name)
		{
			return null;
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xA37020", Offset = "0xA37020", VA = "0xA37020")]
		private void Setup(Color inputColor)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xA37FDC", Offset = "0xA37FDC", VA = "0xA37FDC")]
		public void SetRandomColor()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xA38148", Offset = "0xA38148", VA = "0xA38148")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xA38198", Offset = "0xA38198", VA = "0xA38198")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xA38258", Offset = "0xA38258", VA = "0xA38258")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xA3826C", Offset = "0xA3826C", VA = "0xA3826C")]
		public G_CUIColorPicker()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xA382C8", Offset = "0xA382C8", VA = "0xA382C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676A40", Offset = "0x676A40")]
		private void <Start>b__16_0(float value)
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class CustomizeGraphy : MonoBehaviour
	{
		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66DC94", Offset = "0x66DC94")]
		private G_CUIColorPicker m_colorPicker;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle m_backgroundToggle;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dropdown m_graphyModeDropdown;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button m_backgroundColorButton;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Dropdown m_graphModulePositionDropdown;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66DD20", Offset = "0x66DD20")]
		[SerializeField]
		private Dropdown m_fpsModuleStateDropdown;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private InputField m_goodInputField;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InputField m_cautionInputField;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button m_goodColorButton;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button m_cautionColorButton;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button m_criticalColorButton;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Slider m_timeToResetMinMaxSlider;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Slider m_fpsGraphResolutionSlider;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Slider m_fpsTextUpdateRateSlider;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66DDEC", Offset = "0x66DDEC")]
		private Dropdown m_ramModuleStateDropdown;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button m_reservedColorButton;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button m_allocatedColorButton;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Button m_monoColorButton;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Slider m_ramGraphResolutionSlider;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Slider m_ramTextUpdateRateSlider;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66DE88", Offset = "0x66DE88")]
		[SerializeField]
		private Dropdown m_audioModuleStateDropdown;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Button m_audioGraphColorButton;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Dropdown m_findAudioListenerDropdown;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Dropdown m_fttWindowDropdown;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Slider m_spectrumSizeSlider;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Slider m_audioGraphResolutionSlider;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Slider m_audioTextUpdateRateSlider;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66DF34", Offset = "0x66DF34")]
		[SerializeField]
		private Dropdown m_advancedModulePositionDropdown;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Toggle m_advancedModuleToggle;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66DF90", Offset = "0x66DF90")]
		[SerializeField]
		private Button m_musicButton;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Button m_sfxButton;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Slider m_musicVolumeSlider;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Slider m_sfxVolumeSlider;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private AudioSource m_musicAudioSource;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AudioSource m_sfxAudioSource;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private List<AudioClip> m_sfxAudioClips;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xA33A7C", Offset = "0xA33A7C", VA = "0xA33A7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xA33AF4", Offset = "0xA33AF4", VA = "0xA33AF4")]
		private void SetupCallbacks()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xA34EA0", Offset = "0xA34EA0", VA = "0xA34EA0")]
		private void ToggleMusic()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xA34F10", Offset = "0xA34F10", VA = "0xA34F10")]
		private void PlayRandomSFX()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xA35020", Offset = "0xA35020", VA = "0xA35020")]
		public CustomizeGraphy()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xA35090", Offset = "0xA35090", VA = "0xA35090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676A50", Offset = "0x676A50")]
		private void <SetupCallbacks>b__38_0(bool value)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xA350D4", Offset = "0xA350D4", VA = "0xA350D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676A60", Offset = "0x676A60")]
		private void <SetupCallbacks>b__38_1()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xA35210", Offset = "0xA35210", VA = "0xA35210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676A70", Offset = "0x676A70")]
		private void <SetupCallbacks>b__38_30(Color color)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xA352EC", Offset = "0xA352EC", VA = "0xA352EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676A80", Offset = "0x676A80")]
		private void <SetupCallbacks>b__38_2(int value)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xA353CC", Offset = "0xA353CC", VA = "0xA353CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676A90", Offset = "0x676A90")]
		private void <SetupCallbacks>b__38_3(int value)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xA35484", Offset = "0xA35484", VA = "0xA35484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676AA0", Offset = "0x676AA0")]
		private void <SetupCallbacks>b__38_4(int value)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xA354F4", Offset = "0xA354F4", VA = "0xA354F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676AB0", Offset = "0x676AB0")]
		private void <SetupCallbacks>b__38_5(string value)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xA35584", Offset = "0xA35584", VA = "0xA35584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676AC0", Offset = "0x676AC0")]
		private void <SetupCallbacks>b__38_6(string value)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xA35614", Offset = "0xA35614", VA = "0xA35614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676AD0", Offset = "0x676AD0")]
		private void <SetupCallbacks>b__38_7()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xA35744", Offset = "0xA35744", VA = "0xA35744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676AE0", Offset = "0x676AE0")]
		private void <SetupCallbacks>b__38_31(Color color)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xA35850", Offset = "0xA35850", VA = "0xA35850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676AF0", Offset = "0x676AF0")]
		private void <SetupCallbacks>b__38_8()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xA35980", Offset = "0xA35980", VA = "0xA35980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676B00", Offset = "0x676B00")]
		private void <SetupCallbacks>b__38_32(Color color)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xA35A8C", Offset = "0xA35A8C", VA = "0xA35A8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676B10", Offset = "0x676B10")]
		private void <SetupCallbacks>b__38_9()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xA35BBC", Offset = "0xA35BBC", VA = "0xA35BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676B20", Offset = "0x676B20")]
		private void <SetupCallbacks>b__38_33(Color color)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xA35CC8", Offset = "0xA35CC8", VA = "0xA35CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676B30", Offset = "0x676B30")]
		private void <SetupCallbacks>b__38_10(float value)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xA35D34", Offset = "0xA35D34", VA = "0xA35D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676B40", Offset = "0x676B40")]
		private void <SetupCallbacks>b__38_11(float value)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xA35DA0", Offset = "0xA35DA0", VA = "0xA35DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676B50", Offset = "0x676B50")]
		private void <SetupCallbacks>b__38_12(float value)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xA35E0C", Offset = "0xA35E0C", VA = "0xA35E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676B60", Offset = "0x676B60")]
		private void <SetupCallbacks>b__38_13(int value)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xA35E7C", Offset = "0xA35E7C", VA = "0xA35E7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676B70", Offset = "0x676B70")]
		private void <SetupCallbacks>b__38_14()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xA35FAC", Offset = "0xA35FAC", VA = "0xA35FAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676B80", Offset = "0x676B80")]
		private void <SetupCallbacks>b__38_34(Color color)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xA360B8", Offset = "0xA360B8", VA = "0xA360B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676B90", Offset = "0x676B90")]
		private void <SetupCallbacks>b__38_15()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xA361E8", Offset = "0xA361E8", VA = "0xA361E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676BA0", Offset = "0x676BA0")]
		private void <SetupCallbacks>b__38_35(Color color)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xA362F4", Offset = "0xA362F4", VA = "0xA362F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676BB0", Offset = "0x676BB0")]
		private void <SetupCallbacks>b__38_16()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xA36424", Offset = "0xA36424", VA = "0xA36424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676BC0", Offset = "0x676BC0")]
		private void <SetupCallbacks>b__38_36(Color color)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xA36530", Offset = "0xA36530", VA = "0xA36530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676BD0", Offset = "0x676BD0")]
		private void <SetupCallbacks>b__38_17(float value)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xA3659C", Offset = "0xA3659C", VA = "0xA3659C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676BE0", Offset = "0x676BE0")]
		private void <SetupCallbacks>b__38_18(float value)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xA36608", Offset = "0xA36608", VA = "0xA36608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676BF0", Offset = "0x676BF0")]
		private void <SetupCallbacks>b__38_19(int value)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xA36678", Offset = "0xA36678", VA = "0xA36678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676C00", Offset = "0x676C00")]
		private void <SetupCallbacks>b__38_20()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xA367A8", Offset = "0xA367A8", VA = "0xA367A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676C10", Offset = "0x676C10")]
		private void <SetupCallbacks>b__38_37(Color color)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xA368B4", Offset = "0xA368B4", VA = "0xA368B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676C20", Offset = "0x676C20")]
		private void <SetupCallbacks>b__38_21(int value)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xA36918", Offset = "0xA36918", VA = "0xA36918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676C30", Offset = "0x676C30")]
		private void <SetupCallbacks>b__38_22(int value)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xA3697C", Offset = "0xA3697C", VA = "0xA3697C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676C40", Offset = "0x676C40")]
		private void <SetupCallbacks>b__38_23(float value)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xA369E8", Offset = "0xA369E8", VA = "0xA369E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676C50", Offset = "0x676C50")]
		private void <SetupCallbacks>b__38_24(float value)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xA36A54", Offset = "0xA36A54", VA = "0xA36A54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676C60", Offset = "0x676C60")]
		private void <SetupCallbacks>b__38_25(float value)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xA36AC0", Offset = "0xA36AC0", VA = "0xA36AC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676C70", Offset = "0x676C70")]
		private void <SetupCallbacks>b__38_26(int value)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xA36B2C", Offset = "0xA36B2C", VA = "0xA36B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676C80", Offset = "0x676C80")]
		private void <SetupCallbacks>b__38_27(bool value)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xA36BA4", Offset = "0xA36BA4", VA = "0xA36BA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676C90", Offset = "0x676C90")]
		private void <SetupCallbacks>b__38_28(float value)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xA36BEC", Offset = "0xA36BEC", VA = "0xA36BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676CA0", Offset = "0x676CA0")]
		private void <SetupCallbacks>b__38_29(float value)
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class ForceSliderToMultipleOf3 : MonoBehaviour
	{
		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xA36C34", Offset = "0xA36C34", VA = "0xA36C34")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xA36CF4", Offset = "0xA36CF4", VA = "0xA36CF4")]
		private void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xA36D70", Offset = "0xA36D70", VA = "0xA36D70")]
		public ForceSliderToMultipleOf3()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class ForceSliderToPowerOf2 : MonoBehaviour
	{
		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] m_powerOf2Values;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_text;

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xA36D78", Offset = "0xA36D78", VA = "0xA36D78")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xA36E38", Offset = "0xA36E38", VA = "0xA36E38")]
		private void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xA36F9C", Offset = "0xA36F9C", VA = "0xA36F9C")]
		public ForceSliderToPowerOf2()
		{
		}
	}
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x666640", Offset = "0x666640")]
	public class UpdateTextWithSliderValue : MonoBehaviour
	{
		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_text;

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xA38E14", Offset = "0xA38E14", VA = "0xA38E14")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xA38EEC", Offset = "0xA38EEC", VA = "0xA38EEC")]
		private void UpdateText(float value)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xA38F48", Offset = "0xA38F48", VA = "0xA38F48")]
		public UpdateTextWithSliderValue()
		{
		}
	}
}
namespace ControllerSelection
{
	[Token(Token = "0x2000262")]
	public class OVRInputHelpers
	{
		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x848088", Offset = "0x848088", VA = "0x848088")]
		public static Ray GetSelectionRay(OVRInput.Controller activeController, Transform trackingSpace)
		{
			return default(Ray);
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x848410", Offset = "0x848410", VA = "0x848410")]
		public static Transform FindTrackingSpace()
		{
			return null;
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x848758", Offset = "0x848758", VA = "0x848758")]
		public static OVRInput.Controller GetControllerForButton(OVRInput.Button joyPadClickButton, OVRInput.Controller oldController)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x848858", Offset = "0x848858", VA = "0x848858")]
		public OVRInputHelpers()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class OVRInputModule : PointerInputModule
	{
		[Token(Token = "0x2000264")]
		public delegate void RayHitDelegate(Vector3 hitPosition, Vector3 hitNormal);

		[Token(Token = "0x2000265")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6666A4", Offset = "0x6666A4")]
		public enum InputMode
		{
			[Token(Token = "0x40011A6")]
			Mouse,
			[Token(Token = "0x40011A7")]
			Buttons
		}

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E06C", Offset = "0x66E06C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E06C", Offset = "0x66E06C")]
		public Transform trackingSpace;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E0CC", Offset = "0x66E0CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E0CC", Offset = "0x66E0CC")]
		public OVRInput.Button joyPadClickButton;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E12C", Offset = "0x66E12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E12C", Offset = "0x66E12C")]
		public bool performSphereCastForGazepointer;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E18C", Offset = "0x66E18C")]
		public bool matchNormalOnPhysicsColliders;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E1C4", Offset = "0x66E1C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E1C4", Offset = "0x66E1C4")]
		public bool useLeftStickScroll;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E224", Offset = "0x66E224")]
		public float leftStickDeadZone;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E25C", Offset = "0x66E25C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E25C", Offset = "0x66E25C")]
		public bool useSwipeScroll;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E2BC", Offset = "0x66E2BC")]
		public float minSwipeMovement;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E2F4", Offset = "0x66E2F4")]
		public float swipeScrollScale;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public OVRInput.Controller activeController;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RayHitDelegate OnSelectionRayHit;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 swipeStartPos;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 unusedSwipe;

		[NonSerialized]
		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public OVRRaycaster activeGraphicRaycaster;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E33C", Offset = "0x66E33C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E33C", Offset = "0x66E33C")]
		public float angleDragThreshold;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_NextAction;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector2 m_LastMousePosition;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 m_MousePosition;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E39C", Offset = "0x66E39C")]
		private string m_HorizontalAxis;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_AllowActivationOnMobileDevice;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Dictionary<int, OVRRayPointerEventData> m_VRRayPointerData;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x17000189")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x67816C", Offset = "0x67816C")]
		public InputMode inputMode
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x848C04", Offset = "0x848C04", VA = "0x848C04")]
			get
			{
				return default(InputMode);
			}
		}

		[Token(Token = "0x1700018A")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x848C0C", Offset = "0x848C0C", VA = "0x848C0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x848BF8", Offset = "0x848BF8", VA = "0x848BF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x848C14", Offset = "0x848C14", VA = "0x848C14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x848C1C", Offset = "0x848C1C", VA = "0x848C1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public string horizontalAxis
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x848C24", Offset = "0x848C24", VA = "0x848C24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x848C2C", Offset = "0x848C2C", VA = "0x848C2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public string verticalAxis
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x848C34", Offset = "0x848C34", VA = "0x848C34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x848C3C", Offset = "0x848C3C", VA = "0x848C3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public string submitButton
		{
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x848C44", Offset = "0x848C44", VA = "0x848C44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x848C4C", Offset = "0x848C4C", VA = "0x848C4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public string cancelButton
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x848C54", Offset = "0x848C54", VA = "0x848C54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x848C5C", Offset = "0x848C5C", VA = "0x848C5C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x848860", Offset = "0x848860", VA = "0x848860", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x848920", Offset = "0x848920", VA = "0x848920", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x8489A8", Offset = "0x8489A8", VA = "0x8489A8", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x848A30", Offset = "0x848A30", VA = "0x848A30")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x848AE4", Offset = "0x848AE4", VA = "0x848AE4")]
		protected OVRInputModule()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x848BEC", Offset = "0x848BEC", VA = "0x848BEC")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x848C64", Offset = "0x848C64", VA = "0x848C64", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x848D18", Offset = "0x848D18", VA = "0x848D18", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x848D30", Offset = "0x848D30", VA = "0x848D30", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x848EC4", Offset = "0x848EC4", VA = "0x848EC4", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x849054", Offset = "0x849054", VA = "0x849054", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x84931C", Offset = "0x84931C", VA = "0x84931C")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x84950C", Offset = "0x84950C", VA = "0x84950C")]
		private bool AllowMoveEventProcessing(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x84956C", Offset = "0x84956C", VA = "0x84956C")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x849668", Offset = "0x849668", VA = "0x849668")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x849868", Offset = "0x849868", VA = "0x849868")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x8499B8", Offset = "0x8499B8", VA = "0x8499B8")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x84A33C", Offset = "0x84A33C", VA = "0x84A33C")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x84A724", Offset = "0x84A724", VA = "0x84A724", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x84A6D0", Offset = "0x84A6D0", VA = "0x84A6D0")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x84AD88", Offset = "0x84AD88", VA = "0x84AD88")]
		protected void CopyFromTo(OVRRayPointerEventData from, OVRRayPointerEventData to)
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x84AF38", Offset = "0x84AF38", VA = "0x84AF38")]
		protected new void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x84B0A8", Offset = "0x84B0A8", VA = "0x84B0A8")]
		protected bool GetPointerData(int id, out OVRRayPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x84907C", Offset = "0x84907C", VA = "0x84907C")]
		protected new void ClearSelection()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x84B1C4", Offset = "0x84B1C4", VA = "0x84B1C4")]
		private static Vector3 GetRectTransformNormal(RectTransform rectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x84A7A0", Offset = "0x84A7A0", VA = "0x84A7A0")]
		protected MouseState GetGazePointerData()
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x84BBD0", Offset = "0x84BBD0", VA = "0x84BBD0")]
		protected MouseState GetCanvasPointerData()
		{
			return null;
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x84C0EC", Offset = "0x84C0EC", VA = "0x84C0EC")]
		private bool ShouldStartDrag(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x84ACF0", Offset = "0x84ACF0", VA = "0x84ACF0")]
		private static bool IsPointerMoving(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x84C41C", Offset = "0x84C41C", VA = "0x84C41C", Slot = "29")]
		protected override void ProcessDrag(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x84BAC4", Offset = "0x84BAC4", VA = "0x84BAC4")]
		protected PointerEventData.FramePressState GetGazeButtonState()
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x84B3B0", Offset = "0x84B3B0", VA = "0x84B3B0")]
		protected Vector2 GetExtraScrollDelta()
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6666E0", Offset = "0x6666E0")]
	public class OVRPhysicsRaycaster : BaseRaycaster
	{
		[Serializable]
		[Token(Token = "0x2000267")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666744", Offset = "0x666744")]
		private sealed class <>c
		{
			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__12_0;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<RaycastHit> <>9__13_0;

			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x84D33C", Offset = "0x84D33C", VA = "0x84D33C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x84D344", Offset = "0x84D344", VA = "0x84D344")]
			internal int <Raycast>b__12_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}

			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x84D388", Offset = "0x84D388", VA = "0x84D388")]
			internal int <Spherecast>b__13_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40011A8")]
		protected const int kNoEventMaskSet = -1;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected LayerMask m_EventMask;

		[Token(Token = "0x17000190")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x84C8A4", Offset = "0x84C8A4", VA = "0x84C8A4", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public virtual int depth
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x84C90C", Offset = "0x84C90C", VA = "0x84C90C", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000192")]
		public int finalEventMask
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x84C9D4", Offset = "0x84C9D4", VA = "0x84C9D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000193")]
		public LayerMask eventMask
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x84CAB0", Offset = "0x84CAB0", VA = "0x84CAB0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x84CAB8", Offset = "0x84CAB8", VA = "0x84CAB8")]
			set
			{
			}
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x84C870", Offset = "0x84C870", VA = "0x84C870")]
		protected OVRPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x84CAC0", Offset = "0x84CAC0", VA = "0x84CAC0", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x84CEC8", Offset = "0x84CEC8", VA = "0x84CEC8")]
		public void Spherecast(PointerEventData eventData, List<RaycastResult> resultAppendList, float radius)
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x84B9F4", Offset = "0x84B9F4", VA = "0x84B9F4")]
		public Vector2 GetScreenPos(Vector3 worldPosition)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000268")]
	public class OVRPointerVisualizer : MonoBehaviour
	{
		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E448", Offset = "0x66E448")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E448", Offset = "0x66E448")]
		public Transform trackingSpace;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E4A8", Offset = "0x66E4A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E4A8", Offset = "0x66E4A8")]
		public LineRenderer linePointer;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E508", Offset = "0x66E508")]
		public Transform gazePointer;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E540", Offset = "0x66E540")]
		public float rayDrawDistance;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E578", Offset = "0x66E578")]
		public float gazeDrawDistance;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public OVRInput.Controller activeController;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private LayerMask LayerName;

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x84D3CC", Offset = "0x84D3CC", VA = "0x84D3CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x84D480", Offset = "0x84D480", VA = "0x84D480")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x84D4FC", Offset = "0x84D4FC", VA = "0x84D4FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x84D578", Offset = "0x84D578", VA = "0x84D578")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x84D62C", Offset = "0x84D62C", VA = "0x84D62C")]
		public void SetPointer(Ray ray)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x84D928", Offset = "0x84D928", VA = "0x84D928")]
		public void SetPointerVisibility()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x84DB28", Offset = "0x84DB28", VA = "0x84DB28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x84DBA4", Offset = "0x84DBA4", VA = "0x84DBA4")]
		public OVRPointerVisualizer()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class OVRRawRaycaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200026A")]
		public class HoverCallback : UnityEvent<Transform>
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x9A9BB0", Offset = "0x9A9BB0", VA = "0x9A9BB0")]
			public HoverCallback()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200026B")]
		public class SelectionCallback : UnityEvent<Transform>
		{
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x9A9C00", Offset = "0x9A9C00", VA = "0x9A9C00")]
			public SelectionCallback()
			{
			}
		}

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E5D0", Offset = "0x66E5D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E5D0", Offset = "0x66E5D0")]
		public Transform trackingSpace;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E630", Offset = "0x66E630")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E630", Offset = "0x66E630")]
		public OVRInput.Button primaryButton;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E690", Offset = "0x66E690")]
		public OVRInput.Button secondaryButton;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E6C8", Offset = "0x66E6C8")]
		public LayerMask excludeLayers;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66E700", Offset = "0x66E700")]
		public float raycastDistance;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E738", Offset = "0x66E738")]
		public HoverCallback onHoverEnter;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HoverCallback onHoverExit;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HoverCallback onHover;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66E770", Offset = "0x66E770")]
		public SelectionCallback onPrimarySelect;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SelectionCallback onSecondarySelect;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform lastHit;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform triggerDown;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform padDown;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public OVRInput.Controller activeController;

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x84DBB8", Offset = "0x84DBB8", VA = "0x84DBB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x84DC6C", Offset = "0x84DC6C", VA = "0x84DC6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x84DCE8", Offset = "0x84DCE8", VA = "0x84DCE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x84DD64", Offset = "0x84DD64", VA = "0x84DD64")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x84DE18", Offset = "0x84DE18", VA = "0x84DE18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x84E380", Offset = "0x84E380", VA = "0x84E380")]
		public OVRRawRaycaster()
		{
		}
	}
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x666754", Offset = "0x666754")]
	public class OVRRaycaster : GraphicRaycaster, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x200026D")]
		private struct RaycastHit
		{
			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic graphic;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 worldPos;

			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool fromMouse;
		}

		[Serializable]
		[Token(Token = "0x200026E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6667B8", Offset = "0x6667B8")]
		private sealed class <>c
		{
			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__12_0;

			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x9ABA80", Offset = "0x9ABA80", VA = "0x9ABA80")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x9ABA88", Offset = "0x9ABA88", VA = "0x9ABA88")]
			internal int <GraphicRaycast>b__12_0(RaycastHit g1, RaycastHit g2)
			{
				return default(int);
			}
		}

		[NonSerialized]
		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool warnedAboutCamera;

		[NonSerialized]
		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<RaycastHit> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<RaycastHit> s_SortedGraphics;

		[Token(Token = "0x17000194")]
		private Canvas canvas
		{
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x9AA074", Offset = "0x9AA074", VA = "0x9AA074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x9AA10C", Offset = "0x9AA10C", VA = "0x9AA10C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x9A9FE4", Offset = "0x9A9FE4", VA = "0x9A9FE4")]
		protected OVRRaycaster()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x9AA3A0", Offset = "0x9AA3A0", VA = "0x9AA3A0")]
		private void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList, Ray ray, bool checkForBlocking)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x9AB0DC", Offset = "0x9AB0DC", VA = "0x9AB0DC", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x9AB1A0", Offset = "0x9AB1A0", VA = "0x9AB1A0")]
		public void RaycastPointer(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x9AAAD0", Offset = "0x9AAAD0", VA = "0x9AAAD0")]
		private void GraphicRaycast(Canvas canvas, Ray ray, List<RaycastHit> results)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x9AB664", Offset = "0x9AB664", VA = "0x9AB664")]
		public Vector2 GetScreenPosition(RaycastResult raycastResult)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x9AB1A4", Offset = "0x9AB1A4", VA = "0x9AB1A4")]
		private static bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, out Vector3 worldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x9AB73C", Offset = "0x9AB73C", VA = "0x9AB73C")]
		public bool IsFocussed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x9AB87C", Offset = "0x9AB87C", VA = "0x9AB87C", Slot = "22")]
		public void OnPointerEnter(PointerEventData e)
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class OVRRayPointerEventData : PointerEventData
	{
		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Ray worldSpaceRay;

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x9A9C50", Offset = "0x9A9C50", VA = "0x9A9C50")]
		public OVRRayPointerEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x9A9C58", Offset = "0x9A9C58", VA = "0x9A9C58", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000270")]
	public class PhysicsInteraction : MonoBehaviour
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NavMeshAgent agent;

		[Token(Token = "0x40011CD")]
		public const float navMeshSampleDistance = 4f;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text outText;

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x9ABAFC", Offset = "0x9ABAFC", VA = "0x9ABAFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x9ABB30", Offset = "0x9ABB30", VA = "0x9ABB30")]
		public void OnGroundClick(BaseEventData data)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x9AC028", Offset = "0x9AC028", VA = "0x9AC028")]
		public void OnBackClick(BaseEventData data)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x9AC078", Offset = "0x9AC078", VA = "0x9AC078")]
		public PhysicsInteraction()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000271")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40011D0")]
		TRIANGLES,
		[Token(Token = "0x40011D1")]
		QUADS
	}
	[Token(Token = "0x2000272")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40011D3")]
		ABSORPTION,
		[Token(Token = "0x40011D4")]
		TRANSMISSION,
		[Token(Token = "0x40011D5")]
		SCATTERING
	}
	[Token(Token = "0x2000273")]
	public struct MeshGroup
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000274")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000196")]
		public bool Highlight
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x8A9284", Offset = "0x8A9284", VA = "0x8A9284")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x8A928C", Offset = "0x8A928C", VA = "0x8A928C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x8A9298", Offset = "0x8A9298", VA = "0x8A9298")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x8A94C0", Offset = "0x8A94C0", VA = "0x8A94C0", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x8A94E8", Offset = "0x8A94E8", VA = "0x8A94E8", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x8A9510", Offset = "0x8A9510", VA = "0x8A9510")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x8A9364", Offset = "0x8A9364", VA = "0x8A9364")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x8A97B8", Offset = "0x8A97B8", VA = "0x8A97B8")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000197")]
		public bool InRange
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x8A98B4", Offset = "0x8A98B4", VA = "0x8A98B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x8A98BC", Offset = "0x8A98BC", VA = "0x8A98BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public bool Targeted
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x8A9ACC", Offset = "0x8A9ACC", VA = "0x8A9ACC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x8A9AD4", Offset = "0x8A9AD4", VA = "0x8A9AD4")]
			set
			{
			}
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x8A9AE0", Offset = "0x8A9AE0", VA = "0x8A9AE0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x8A98C8", Offset = "0x8A98C8", VA = "0x8A98C8")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x8A9CD8", Offset = "0x8A9CD8", VA = "0x8A9CD8")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6667C8", Offset = "0x6667C8")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000199")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x8A9CE0", Offset = "0x8A9CE0", VA = "0x8A9CE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x8A9CE8", Offset = "0x8A9CE8", VA = "0x8A9CE8")]
			set
			{
			}
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x8A9D04", Offset = "0x8A9D04", VA = "0x8A9D04", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x8A9F2C", Offset = "0x8A9F2C", VA = "0x8A9F2C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x8AA99C", Offset = "0x8AA99C", VA = "0x8AA99C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x8AB180", Offset = "0x8AB180", VA = "0x8AB180", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x8AB5E0", Offset = "0x8AB5E0", VA = "0x8AB5E0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x8AA1AC", Offset = "0x8AA1AC", VA = "0x8AA1AC")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x8AB6D8", Offset = "0x8AB6D8", VA = "0x8AB6D8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x8ABB74", Offset = "0x8ABB74", VA = "0x8ABB74", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x8ABB8C", Offset = "0x8ABB8C", VA = "0x8ABB8C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x8ABB94", Offset = "0x8ABB94", VA = "0x8ABB94")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000278")]
		public enum CrosshairState
		{
			[Token(Token = "0x40011F8")]
			Disabled,
			[Token(Token = "0x40011F9")]
			Enabled,
			[Token(Token = "0x40011FA")]
			Targeted
		}

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x8AD900", Offset = "0x8AD900", VA = "0x8AD900")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x8A9C04", Offset = "0x8A9C04", VA = "0x8A9C04")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x8AD970", Offset = "0x8AD970", VA = "0x8AD970")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x8AD9C8", Offset = "0x8AD9C8", VA = "0x8AD9C8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x8AD784", Offset = "0x8AD784", VA = "0x8AD784")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x8AD840", Offset = "0x8AD840", VA = "0x8AD840")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x8AD8F8", Offset = "0x8AD8F8", VA = "0x8AD8F8")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x8B13B4", Offset = "0x8B13B4", VA = "0x8B13B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x8B1480", Offset = "0x8B1480", VA = "0x8B1480")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x8B148C", Offset = "0x8B148C", VA = "0x8B148C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x8B1498", Offset = "0x8B1498", VA = "0x8B1498")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x8A7CF4", Offset = "0x8A7CF4", VA = "0x8A7CF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x8A7D54", Offset = "0x8A7D54", VA = "0x8A7D54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x8A8070", Offset = "0x8A8070", VA = "0x8A8070")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x8A818C", Offset = "0x8A818C", VA = "0x8A818C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x8A7D58", Offset = "0x8A7D58", VA = "0x8A7D58")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x8A82A0", Offset = "0x8A82A0", VA = "0x8A82A0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200027D")]
		public enum ContactTest
		{
			[Token(Token = "0x4001210")]
			PerpenTest,
			[Token(Token = "0x4001211")]
			BackwardsPress
		}

		[Token(Token = "0x4001202")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001203")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700019A")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x8A8338", Offset = "0x8A8338", VA = "0x8A8338", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019B")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x8A8340", Offset = "0x8A8340", VA = "0x8A8340")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x8A834C", Offset = "0x8A834C", VA = "0x8A834C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x8A84C0", Offset = "0x8A84C0", VA = "0x8A84C0")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x8A86E0", Offset = "0x8A86E0", VA = "0x8A86E0", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x8A8CC8", Offset = "0x8A8CC8", VA = "0x8A8CC8")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x8A8BCC", Offset = "0x8A8BCC", VA = "0x8A8BCC")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x8A8E18", Offset = "0x8A8E18", VA = "0x8A8E18")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x8A8F10", Offset = "0x8A8F10", VA = "0x8A8F10")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x8A906C", Offset = "0x8A906C", VA = "0x8A906C")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E8E8", Offset = "0x66E8E8")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E8F8", Offset = "0x66E8F8")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700019C")]
		public Collider Collider
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x8A9160", Offset = "0x8A9160", VA = "0x8A9160", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676CB0", Offset = "0x676CB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x8A9168", Offset = "0x8A9168", VA = "0x8A9168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676CC0", Offset = "0x676CC0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x8A8184", Offset = "0x8A8184", VA = "0x8A8184", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676CD0", Offset = "0x676CD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x8A9170", Offset = "0x8A9170", VA = "0x8A9170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676CE0", Offset = "0x676CE0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x8A9178", Offset = "0x8A9178", VA = "0x8A9178", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x8A91FC", Offset = "0x8A91FC", VA = "0x8A91FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x8A927C", Offset = "0x8A927C", VA = "0x8A927C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700019F")]
		Collider Collider
		{
			[Token(Token = "0x6000EB4")]
			get;
		}

		[Token(Token = "0x170001A0")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000EB5")]
			get;
		}

		[Token(Token = "0x170001A1")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000EB6")]
			get;
		}
	}
	[Token(Token = "0x2000280")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x8A862C", Offset = "0x8A862C", VA = "0x8A862C")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000281")]
	public enum InteractionType
	{
		[Token(Token = "0x400121A")]
		Enter,
		[Token(Token = "0x400121B")]
		Stay,
		[Token(Token = "0x400121C")]
		Exit
	}
	[Token(Token = "0x2000282")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000283")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x400122E")]
			Mesh,
			[Token(Token = "0x400122F")]
			Skeleton,
			[Token(Token = "0x4001230")]
			Both
		}

		[Token(Token = "0x2000284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66682C", Offset = "0x66682C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170001AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ED9")]
				[Address(RVA = "0x8AECAC", Offset = "0x8AECAC", VA = "0x8AECAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EDB")]
				[Address(RVA = "0x8AED1C", Offset = "0x8AED1C", VA = "0x8AED1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x8AE570", Offset = "0x8AE570", VA = "0x8AE570")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x8AEA48", Offset = "0x8AEA48", VA = "0x8AEA48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x8AEA4C", Offset = "0x8AEA4C", VA = "0x8AEA4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x8AECB4", Offset = "0x8AECB4", VA = "0x8AECB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400121D")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E928", Offset = "0x66E928")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170001A2")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x8AC650", Offset = "0x8AC650", VA = "0x8AC650")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x8AD9D0", Offset = "0x8AD9D0", VA = "0x8AD9D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x8AD374", Offset = "0x8AD374", VA = "0x8AD374")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x8ADA4C", Offset = "0x8ADA4C", VA = "0x8ADA4C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x8ADAC8", Offset = "0x8ADAC8", VA = "0x8ADAC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x8ADB10", Offset = "0x8ADB10", VA = "0x8ADB10")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x8ADB8C", Offset = "0x8ADB8C", VA = "0x8ADB8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x8ADBD4", Offset = "0x8ADBD4", VA = "0x8ADBD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x8ADC50", Offset = "0x8ADC50", VA = "0x8ADC50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x8ADC98", Offset = "0x8ADC98", VA = "0x8ADC98")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x8AC60C", Offset = "0x8AC60C", VA = "0x8AC60C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x8ADD14", Offset = "0x8ADD14", VA = "0x8ADD14")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x8AD330", Offset = "0x8AD330", VA = "0x8AD330")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x8ADD8C", Offset = "0x8ADD8C", VA = "0x8ADD8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x8ADE04", Offset = "0x8ADE04", VA = "0x8ADE04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x8ADE48", Offset = "0x8ADE48", VA = "0x8ADE48")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x8ADEC0", Offset = "0x8ADEC0", VA = "0x8ADEC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x8ADF04", Offset = "0x8ADF04", VA = "0x8ADF04")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x8ADF7C", Offset = "0x8ADF7C", VA = "0x8ADF7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x8ADFC0", Offset = "0x8ADFC0", VA = "0x8ADFC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x8AC3F0", Offset = "0x8AC3F0", VA = "0x8AC3F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676CF0", Offset = "0x676CF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x8AE038", Offset = "0x8AE038", VA = "0x8AE038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676D00", Offset = "0x676D00")]
			private set
			{
			}
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x8AE08C", Offset = "0x8AE08C", VA = "0x8AE08C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x8AE49C", Offset = "0x8AE49C", VA = "0x8AE49C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x8AE428", Offset = "0x8AE428", VA = "0x8AE428")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x676D10", Offset = "0x676D10")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x8AE59C", Offset = "0x8AE59C", VA = "0x8AE59C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x8AE684", Offset = "0x8AE684", VA = "0x8AE684")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x8AD3BC", Offset = "0x8AD3BC", VA = "0x8AD3BC")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x8AC440", Offset = "0x8AC440", VA = "0x8AC440")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x8AE968", Offset = "0x8AE968", VA = "0x8AE968")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000286")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x8AF57C", Offset = "0x8AF57C", VA = "0x8AF57C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170001AF")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x8A86D8", Offset = "0x8A86D8", VA = "0x8A86D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x8A86D0", Offset = "0x8A86D0", VA = "0x8A86D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x8A8624", Offset = "0x8A8624", VA = "0x8A8624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x8AED24", Offset = "0x8AED24", VA = "0x8AED24", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x8AED2C", Offset = "0x8AED2C", VA = "0x8AED2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676DC4", Offset = "0x676DC4")]
			add
			{
			}
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x8AEE18", Offset = "0x8AEE18", VA = "0x8AEE18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676DD4", Offset = "0x676DD4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x8AEF78", Offset = "0x8AEF78", VA = "0x8AEF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676DE4", Offset = "0x676DE4")]
			add
			{
			}
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x8AF064", Offset = "0x8AF064", VA = "0x8AF064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676DF4", Offset = "0x676DF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x8AF1C4", Offset = "0x8AF1C4", VA = "0x8AF1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676E04", Offset = "0x676E04")]
			add
			{
			}
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x8AF2B0", Offset = "0x8AF2B0", VA = "0x8AF2B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676E14", Offset = "0x676E14")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x8AEF04", Offset = "0x8AEF04", VA = "0x8AEF04", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x8AF150", Offset = "0x8AF150", VA = "0x8AF150", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x8AF39C", Offset = "0x8AF39C", VA = "0x8AF39C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000EE9")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x8A845C", Offset = "0x8A845C", VA = "0x8A845C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x8AF494", Offset = "0x8AF494", VA = "0x8AF494", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x8A9158", Offset = "0x8A9158", VA = "0x8A9158")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x400123C")]
		None,
		[Token(Token = "0x400123D")]
		Proximity,
		[Token(Token = "0x400123E")]
		Contact,
		[Token(Token = "0x400123F")]
		Action
	}
	[Token(Token = "0x2000288")]
	public enum InteractableState
	{
		[Token(Token = "0x4001241")]
		Default,
		[Token(Token = "0x4001242")]
		ProximityState,
		[Token(Token = "0x4001243")]
		ContactState,
		[Token(Token = "0x4001244")]
		ActionState
	}
	[Token(Token = "0x2000289")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x8A8D74", Offset = "0x8A8D74", VA = "0x8A8D74")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170001B3")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x8AF5CC", Offset = "0x8AF5CC", VA = "0x8AF5CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x8AF410", Offset = "0x8AF410", VA = "0x8AF410")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x8AF4F8", Offset = "0x8AF4F8", VA = "0x8AF4F8")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x8AF634", Offset = "0x8AF634", VA = "0x8AF634")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200028C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66683C", Offset = "0x66683C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400124E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400124F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170001B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EFC")]
				[Address(RVA = "0x8B08F0", Offset = "0x8B08F0", VA = "0x8B08F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EFE")]
				[Address(RVA = "0x8B0960", Offset = "0x8B0960", VA = "0x8B0960", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x8B02E4", Offset = "0x8B02E4", VA = "0x8B02E4")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x8B0490", Offset = "0x8B0490", VA = "0x8B0490", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x8B0504", Offset = "0x8B0504", VA = "0x8B0504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x8B04AC", Offset = "0x8B04AC", VA = "0x8B04AC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x8B08F8", Offset = "0x8B08F8", VA = "0x8B08F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x8B01B4", Offset = "0x8B01B4", VA = "0x8B01B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x8B0230", Offset = "0x8B0230", VA = "0x8B0230")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x676E24", Offset = "0x676E24")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x8B0310", Offset = "0x8B0310", VA = "0x8B0310")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x8B0488", Offset = "0x8B0488", VA = "0x8B0488")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170001B6")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x8ABD10", Offset = "0x8ABD10", VA = "0x8ABD10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x8ABE98", Offset = "0x8ABE98", VA = "0x8ABE98")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x8B0968", Offset = "0x8B0968", VA = "0x8B0968")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x8B0A3C", Offset = "0x8B0A3C", VA = "0x8B0A3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x8B0DBC", Offset = "0x8B0DBC", VA = "0x8B0DBC")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x8B0E04", Offset = "0x8B0E04", VA = "0x8B0E04")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x8B11A8", Offset = "0x8B11A8", VA = "0x8B11A8")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x8B12F4", Offset = "0x8B12F4", VA = "0x8B12F4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200028F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66684C", Offset = "0x66684C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170001BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F18")]
				[Address(RVA = "0x8AD618", Offset = "0x8AD618", VA = "0x8AD618", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F1A")]
				[Address(RVA = "0x8AD688", Offset = "0x8AD688", VA = "0x8AD688", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x8ABFE8", Offset = "0x8ABFE8", VA = "0x8ABFE8")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x8ACEF4", Offset = "0x8ACEF4", VA = "0x8ACEF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x8ACEF8", Offset = "0x8ACEF8", VA = "0x8ACEF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x8AD620", Offset = "0x8AD620", VA = "0x8AD620", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400125D")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170001B7")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x8ABBB4", Offset = "0x8ABBB4", VA = "0x8ABBB4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001B8")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x8ABBBC", Offset = "0x8ABBBC", VA = "0x8ABBBC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001B9")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x8ABBC4", Offset = "0x8ABBC4", VA = "0x8ABBC4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BA")]
		public override bool EnableState
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x8ABBCC", Offset = "0x8ABBCC", VA = "0x8ABBCC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x8ABC14", Offset = "0x8ABC14", VA = "0x8ABC14", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x8ABC64", Offset = "0x8ABC64", VA = "0x8ABC64", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x8ABF74", Offset = "0x8ABF74", VA = "0x8ABF74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x676ED8", Offset = "0x676ED8")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x8AC014", Offset = "0x8AC014", VA = "0x8AC014")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x8AC6AC", Offset = "0x8AC6AC", VA = "0x8AC6AC")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x8AC964", Offset = "0x8AC964", VA = "0x8AC964")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x8ACADC", Offset = "0x8ACADC", VA = "0x8ACADC", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x8ACDC8", Offset = "0x8ACDC8", VA = "0x8ACDC8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x8ACDCC", Offset = "0x8ACDCC", VA = "0x8ACDCC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x8ACDD0", Offset = "0x8ACDD0", VA = "0x8ACDD0")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9B8", Offset = "0x66E9B8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9C8", Offset = "0x66E9C8")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9D8", Offset = "0x66E9D8")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170001BD")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x8AD690", Offset = "0x8AD690", VA = "0x8AD690", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676F8C", Offset = "0x676F8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x8ABF6C", Offset = "0x8ABF6C", VA = "0x8ABF6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676F9C", Offset = "0x676F9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public bool EnableState
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x8AD698", Offset = "0x8AD698", VA = "0x8AD698", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x8AD6C8", Offset = "0x8AD6C8", VA = "0x8AD6C8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x8AD700", Offset = "0x8AD700", VA = "0x8AD700", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676FAC", Offset = "0x676FAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x8AD708", Offset = "0x8AD708", VA = "0x8AD708", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676FBC", Offset = "0x676FBC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public float SphereRadius
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x8AC698", Offset = "0x8AC698", VA = "0x8AC698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676FCC", Offset = "0x676FCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x8AD714", Offset = "0x8AD714", VA = "0x8AD714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676FDC", Offset = "0x676FDC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x8AD71C", Offset = "0x8AD71C", VA = "0x8AD71C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x8AD778", Offset = "0x8AD778", VA = "0x8AD778", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x8AD77C", Offset = "0x8AD77C", VA = "0x8AD77C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001270")]
		None = 0,
		[Token(Token = "0x4001271")]
		Ray = 1,
		[Token(Token = "0x4001272")]
		Poke = 4,
		[Token(Token = "0x4001273")]
		All = -1
	}
	[Token(Token = "0x2000292")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001275")]
		Inactive,
		[Token(Token = "0x4001276")]
		PrimaryInputDown,
		[Token(Token = "0x4001277")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001278")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000293")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x8ACD84", Offset = "0x8ACD84", VA = "0x8ACD84")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000294")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9E8", Offset = "0x66E9E8")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66E9F8", Offset = "0x66E9F8")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA08", Offset = "0x66EA08")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170001C1")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x8A905C", Offset = "0x8A905C", VA = "0x8A905C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x8A9064", Offset = "0x8A9064", VA = "0x8A9064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676FEC", Offset = "0x676FEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x8AF6B0", Offset = "0x8AF6B0", VA = "0x8AF6B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x676FFC", Offset = "0x676FFC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000F2A")]
			get;
		}

		[Token(Token = "0x170001C4")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000F2B")]
			get;
		}

		[Token(Token = "0x170001C5")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000F2C")]
			get;
		}

		[Token(Token = "0x170001C6")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x8A9050", Offset = "0x8A9050", VA = "0x8A9050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67700C", Offset = "0x67700C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x8ACAD0", Offset = "0x8ACAD0", VA = "0x8ACAD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67701C", Offset = "0x67701C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x8A8CBC", Offset = "0x8A8CBC", VA = "0x8A8CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67702C", Offset = "0x67702C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x8AC6A0", Offset = "0x8AC6A0", VA = "0x8AC6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67703C", Offset = "0x67703C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000F35")]
			get;
			[Token(Token = "0x6000F36")]
			set;
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x8AF6BC", Offset = "0x8AF6BC", VA = "0x8AF6BC")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000F32")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000F33")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000F34")]
		public abstract void DeFocus();

		[Token(Token = "0x6000F37")]
		public abstract void Initialize();

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x8AF6C4", Offset = "0x8AF6C4", VA = "0x8AF6C4")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x8AF714", Offset = "0x8AF714", VA = "0x8AF714")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x8AF774", Offset = "0x8AF774", VA = "0x8AF774", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x8AFA40", Offset = "0x8AFA40", VA = "0x8AFA40", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x8ACDE4", Offset = "0x8ACDE4", VA = "0x8ACDE4")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170001C9")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000F3D")]
			get;
		}

		[Token(Token = "0x170001CA")]
		bool EnableState
		{
			[Token(Token = "0x6000F3F")]
			get;
			[Token(Token = "0x6000F40")]
			set;
		}

		[Token(Token = "0x170001CB")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000F41")]
			get;
			[Token(Token = "0x6000F42")]
			set;
		}

		[Token(Token = "0x6000F3E")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000296")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000297")]
		private enum PinchState
		{
			[Token(Token = "0x4001289")]
			None,
			[Token(Token = "0x400128A")]
			PinchDown,
			[Token(Token = "0x400128B")]
			PinchStay,
			[Token(Token = "0x400128C")]
			PinchUp
		}

		[Token(Token = "0x4001285")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170001CC")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x8B14A0", Offset = "0x8B14A0", VA = "0x8B14A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CD")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x8B152C", Offset = "0x8B152C", VA = "0x8B152C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CE")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x8B15B8", Offset = "0x8B15B8", VA = "0x8B15B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x8B1644", Offset = "0x8B1644", VA = "0x8B1644")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x8B1670", Offset = "0x8B1670", VA = "0x8B1670")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400128D")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x400128E")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x400128F")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001290")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001291")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66EA28", Offset = "0x66EA28")]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170001CF")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x8B17FC", Offset = "0x8B17FC", VA = "0x8B17FC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001D0")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x8B1804", Offset = "0x8B1804", VA = "0x8B1804", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001D1")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x8B188C", Offset = "0x8B188C", VA = "0x8B188C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D2")]
		public override bool EnableState
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x8B1894", Offset = "0x8B1894", VA = "0x8B1894", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x8B18F0", Offset = "0x8B18F0", VA = "0x8B18F0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x8B19A4", Offset = "0x8B19A4", VA = "0x8B19A4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x8B1A14", Offset = "0x8B1A14", VA = "0x8B1A14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x8B1AB8", Offset = "0x8B1AB8", VA = "0x8B1AB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x8B1EA0", Offset = "0x8B1EA0", VA = "0x8B1EA0")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x8B1FB0", Offset = "0x8B1FB0", VA = "0x8B1FB0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x8B2370", Offset = "0x8B2370", VA = "0x8B2370")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x8B2530", Offset = "0x8B2530", VA = "0x8B2530")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x8B2660", Offset = "0x8B2660", VA = "0x8B2660")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x8B29C0", Offset = "0x8B29C0", VA = "0x8B29C0")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x8B2E0C", Offset = "0x8B2E0C", VA = "0x8B2E0C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x8B2EF8", Offset = "0x8B2EF8", VA = "0x8B2EF8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x8B2F34", Offset = "0x8B2F34", VA = "0x8B2F34")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400129D")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x400129E")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66EA9C", Offset = "0x66EA9C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170001D3")]
		public bool EnableState
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x8B18C0", Offset = "0x8B18C0", VA = "0x8B18C0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x8B1924", Offset = "0x8B1924", VA = "0x8B1924", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x8B2FEC", Offset = "0x8B2FEC", VA = "0x8B2FEC", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x8B1E50", Offset = "0x8B1E50", VA = "0x8B1E50", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x8B3284", Offset = "0x8B3284", VA = "0x8B3284", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67704C", Offset = "0x67704C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x8B1A0C", Offset = "0x8B1A0C", VA = "0x8B1A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67705C", Offset = "0x67705C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x8B2FF4", Offset = "0x8B2FF4", VA = "0x8B2FF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x8B2E54", Offset = "0x8B2E54", VA = "0x8B2E54", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x8B328C", Offset = "0x8B328C", VA = "0x8B328C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x8B3620", Offset = "0x8B3620", VA = "0x8B3620")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x8B3810", Offset = "0x8B3810", VA = "0x8B3810")]
		public RayToolView()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x66686C", Offset = "0x66686C")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200029B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6668D0", Offset = "0x6668D0")]
		private sealed class <>c
		{
			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000F71")]
			[Address(RVA = "0xFD9FA8", Offset = "0xFD9FA8", VA = "0xFD9FA8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F72")]
			[Address(RVA = "0xFD9FB0", Offset = "0xFD9FB0", VA = "0xFD9FB0")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012A7")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40012A8")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40012A9")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40012AA")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40012AB")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40012AC")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40012AD")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40012AE")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40012AF")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40012B0")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40012B1")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xFD8FB0", Offset = "0xFD8FB0", VA = "0xFD8FB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xFD9008", Offset = "0xFD9008", VA = "0xFD9008")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xFD94B0", Offset = "0xFD94B0", VA = "0xFD94B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xFD957C", Offset = "0xFD957C", VA = "0xFD957C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xFD969C", Offset = "0xFD969C", VA = "0xFD969C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xFD9A7C", Offset = "0xFD9A7C", VA = "0xFD9A7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xFD9C14", Offset = "0xFD9C14", VA = "0xFD9C14")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xFD9DC4", Offset = "0xFD9DC4", VA = "0xFD9DC4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xFD9738", Offset = "0xFD9738", VA = "0xFD9738")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xFD97D8", Offset = "0xFD97D8", VA = "0xFD97D8")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xFD9274", Offset = "0xFD9274", VA = "0xFD9274")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xFD9F2C", Offset = "0xFD9F2C", VA = "0xFD9F2C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public enum HandPoseId
	{
		[Token(Token = "0x40012C6")]
		Default,
		[Token(Token = "0x40012C7")]
		Generic,
		[Token(Token = "0x40012C8")]
		PingPongBall,
		[Token(Token = "0x40012C9")]
		Controller
	}
	[Token(Token = "0x200029D")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170001D6")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0xFD9F1C", Offset = "0xFD9F1C", VA = "0xFD9F1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D7")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0xFD9F24", Offset = "0xFD9F24", VA = "0xFD9F24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D8")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0xFD9F14", Offset = "0xFD9F14", VA = "0xFD9F14")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xFD9FEC", Offset = "0xFD9FEC", VA = "0xFD9FEC")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xFD9FF4", Offset = "0xFD9FF4", VA = "0xFD9FF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xFDA2C0", Offset = "0xFDA2C0", VA = "0xFDA2C0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xFDA330", Offset = "0xFDA330", VA = "0xFDA330")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xFDA380", Offset = "0xFDA380", VA = "0xFDA380")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200029F")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x66EB2C", Offset = "0x66EB2C")]
		public SoundFXRef testSound1;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xFD8BBC", Offset = "0xFD8BBC", VA = "0xFD8BBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xFD8BC0", Offset = "0xFD8BC0", VA = "0xFD8BC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xFD8CC8", Offset = "0xFD8CC8", VA = "0xFD8CC8")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EB78", Offset = "0x66EB78")]
		public bool autoRetrigger;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x66EBB0", Offset = "0x66EBB0")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EBD4", Offset = "0x66EBD4")]
		public Transform[] playPositions;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xFCE144", Offset = "0xFCE144", VA = "0xFCE144")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xFCE2C0", Offset = "0xFCE2C0", VA = "0xFCE2C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xFCE544", Offset = "0xFCE544", VA = "0xFCE544")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xFCE320", Offset = "0xFCE320", VA = "0xFCE320")]
		public void Play()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xFCE6AC", Offset = "0xFCE6AC", VA = "0xFCE6AC")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xFCE840", Offset = "0xFCE840", VA = "0xFCE840")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40012DD")]
		Default,
		[Token(Token = "0x40012DE")]
		Preload,
		[Token(Token = "0x40012DF")]
		ManualPreload
	}
	[Token(Token = "0x20002A2")]
	public enum Fade
	{
		[Token(Token = "0x40012E1")]
		In,
		[Token(Token = "0x40012E2")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20002A3")]
	public class SoundGroup
	{
		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66EC0C", Offset = "0x66EC0C")]
		public int maxPlayingSounds;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xFD8A9C", Offset = "0xFD8A9C", VA = "0xFD8A9C")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xFD8B30", Offset = "0xFD8B30", VA = "0xFD8B30")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xFD7290", Offset = "0xFD7290", VA = "0xFD7290")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xFD73C8", Offset = "0xFD73C8", VA = "0xFD73C8")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xFD8058", Offset = "0xFD8058", VA = "0xFD8058")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002A4")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002A5")]
		public enum Fade
		{
			[Token(Token = "0x400130A")]
			In,
			[Token(Token = "0x400130B")]
			Out
		}

		[Token(Token = "0x20002A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6668E0", Offset = "0x6668E0")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0xFD3A68", Offset = "0xFD3A68", VA = "0xFD3A68")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0xFD6BC0", Offset = "0xFD6BC0", VA = "0xFD6BC0")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6668F0", Offset = "0x6668F0")]
		private sealed class <>c
		{
			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0xFD6B24", Offset = "0xFD6B24", VA = "0xFD6B24")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0xFD6B2C", Offset = "0xFD6B2C", VA = "0xFD6B2C")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EC38", Offset = "0x66EC38")]
		public bool makePersistent;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EC70", Offset = "0x66EC70")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66ECA8", Offset = "0x66ECA8")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66ECE0", Offset = "0x66ECE0")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66ED18", Offset = "0x66ED18")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66ED50", Offset = "0x66ED50")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66ED88", Offset = "0x66ED88")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EDC0", Offset = "0x66EDC0")]
		public bool verboseLogging;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EDF8", Offset = "0x66EDF8")]
		public int maxSoundEmitters;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EE30", Offset = "0x66EE30")]
		public float volumeSoundFX;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EE68", Offset = "0x66EE68")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170001D9")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0xFCE8FC", Offset = "0xFCE8FC", VA = "0xFCE8FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DA")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0xFCE9E0", Offset = "0xFCE9E0", VA = "0xFCE9E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0xFCEA48", Offset = "0xFCEA48", VA = "0xFCEA48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DC")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0xFCEAC0", Offset = "0xFCEAC0", VA = "0xFCEAC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DD")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0xFCEB38", Offset = "0xFCEB38", VA = "0xFCEB38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0xFCEBB0", Offset = "0xFCEBB0", VA = "0xFCEBB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0xFCEC28", Offset = "0xFCEC28", VA = "0xFCEC28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0xFD1298", Offset = "0xFD1298", VA = "0xFD1298")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xFCECA0", Offset = "0xFCECA0", VA = "0xFCECA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xFCEED8", Offset = "0xFCEED8", VA = "0xFCEED8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xFCECA4", Offset = "0xFCECA4", VA = "0xFCECA4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xFD008C", Offset = "0xFD008C", VA = "0xFD008C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xFCF030", Offset = "0xFCF030", VA = "0xFCF030")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xFD0820", Offset = "0xFD0820", VA = "0xFD0820")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xFD09D0", Offset = "0xFD09D0", VA = "0xFD09D0")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xFD0B88", Offset = "0xFD0B88", VA = "0xFD0B88")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xFD0C90", Offset = "0xFD0C90", VA = "0xFD0C90")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xFD0D54", Offset = "0xFD0D54", VA = "0xFD0D54")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xFD1300", Offset = "0xFD1300", VA = "0xFD1300")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xFD137C", Offset = "0xFD137C", VA = "0xFD137C")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xFCF81C", Offset = "0xFCF81C", VA = "0xFCF81C")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xFD0090", Offset = "0xFD0090", VA = "0xFD0090")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xFD166C", Offset = "0xFD166C", VA = "0xFD166C")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xFD1768", Offset = "0xFD1768", VA = "0xFD1768")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xFD1868", Offset = "0xFD1868", VA = "0xFD1868")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xFD14EC", Offset = "0xFD14EC", VA = "0xFD14EC")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xFD1A48", Offset = "0xFD1A48", VA = "0xFD1A48")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xFD1BD0", Offset = "0xFD1BD0", VA = "0xFD1BD0")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xFD1E08", Offset = "0xFD1E08", VA = "0xFD1E08")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xFCE5DC", Offset = "0xFCE5DC", VA = "0xFCE5DC")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xFCE770", Offset = "0xFCE770", VA = "0xFCE770")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xFD1FE4", Offset = "0xFD1FE4", VA = "0xFD1FE4")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xFD20C8", Offset = "0xFD20C8", VA = "0xFD20C8")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xFD2194", Offset = "0xFD2194", VA = "0xFD2194")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xFD22C0", Offset = "0xFD22C0", VA = "0xFD22C0")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xFD2380", Offset = "0xFD2380", VA = "0xFD2380")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xFD2498", Offset = "0xFD2498", VA = "0xFD2498")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xFD3280", Offset = "0xFD3280", VA = "0xFD3280")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xFD3A70", Offset = "0xFD3A70", VA = "0xFD3A70")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xFD3C1C", Offset = "0xFD3C1C", VA = "0xFD3C1C")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xFD4E00", Offset = "0xFD4E00", VA = "0xFD4E00")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xFD266C", Offset = "0xFD266C", VA = "0xFD266C")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xFD4F24", Offset = "0xFD4F24", VA = "0xFD4F24")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xFD501C", Offset = "0xFD501C", VA = "0xFD501C")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xFD5118", Offset = "0xFD5118", VA = "0xFD5118")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xFD55C0", Offset = "0xFD55C0", VA = "0xFD55C0")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xFD5810", Offset = "0xFD5810", VA = "0xFD5810")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xFD593C", Offset = "0xFD593C", VA = "0xFD593C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xFD5B2C", Offset = "0xFD5B2C", VA = "0xFD5B2C")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xFD5C08", Offset = "0xFD5C08", VA = "0xFD5C08")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xFD5D58", Offset = "0xFD5D58", VA = "0xFD5D58")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xFD6214", Offset = "0xFD6214", VA = "0xFD6214")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001310")]
		None = -1,
		[Token(Token = "0x4001311")]
		Reserved,
		[Token(Token = "0x4001312")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xFD6CC0", Offset = "0xFD6CC0", VA = "0xFD6CC0")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xFD6C64", Offset = "0xFD6C64", VA = "0xFD6C64")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002AC")]
		public enum FadeState
		{
			[Token(Token = "0x4001329")]
			Null,
			[Token(Token = "0x400132A")]
			FadingIn,
			[Token(Token = "0x400132B")]
			FadingOut,
			[Token(Token = "0x400132C")]
			Ducking
		}

		[Token(Token = "0x20002AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666900", Offset = "0x666900")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170001EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF1")]
				[Address(RVA = "0xFD7988", Offset = "0xFD7988", VA = "0xFD7988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF3")]
				[Address(RVA = "0xFD79F8", Offset = "0xFD79F8", VA = "0xFD79F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0xFD75C4", Offset = "0xFD75C4", VA = "0xFD75C4")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0xFD7870", Offset = "0xFD7870", VA = "0xFD7870", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0xFD7874", Offset = "0xFD7874", VA = "0xFD7874", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xFD7990", Offset = "0xFD7990", VA = "0xFD7990", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666910", Offset = "0x666910")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x400133A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400133B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170001EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF7")]
				[Address(RVA = "0xFD7EF4", Offset = "0xFD7EF4", VA = "0xFD7EF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF9")]
				[Address(RVA = "0xFD7F64", Offset = "0xFD7F64", VA = "0xFD7F64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0xFD7800", Offset = "0xFD7800", VA = "0xFD7800")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0xFD7D50", Offset = "0xFD7D50", VA = "0xFD7D50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0xFD7D54", Offset = "0xFD7D54", VA = "0xFD7D54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0xFD7EFC", Offset = "0xFD7EFC", VA = "0xFD7EFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666920", Offset = "0x666920")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400133C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400133D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400133E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x400133F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170001EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FFD")]
				[Address(RVA = "0xFD7CD8", Offset = "0xFD7CD8", VA = "0xFD7CD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FFF")]
				[Address(RVA = "0xFD7D48", Offset = "0xFD7D48", VA = "0xFD7D48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0xFD782C", Offset = "0xFD782C", VA = "0xFD782C")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0xFD7A00", Offset = "0xFD7A00", VA = "0xFD7A00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xFD7A04", Offset = "0xFD7A04", VA = "0xFD7A04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0xFD7CE0", Offset = "0xFD7CE0", VA = "0xFD7CE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170001E1")]
		public float volume
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0xFD4DD0", Offset = "0xFD4DD0", VA = "0xFD4DD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0xFD6D60", Offset = "0xFD6D60", VA = "0xFD6D60")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public float pitch
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xFD6DA0", Offset = "0xFD6DA0", VA = "0xFD6DA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0xFD6DD0", Offset = "0xFD6DD0", VA = "0xFD6DD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public AudioClip clip
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0xFD6E10", Offset = "0xFD6E10", VA = "0xFD6E10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0xFD6E40", Offset = "0xFD6E40", VA = "0xFD6E40")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public float time
		{
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0xFD6E78", Offset = "0xFD6E78", VA = "0xFD6E78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xFD2458", Offset = "0xFD2458", VA = "0xFD2458")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public float length
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xFD6EA8", Offset = "0xFD6EA8", VA = "0xFD6EA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E6")]
		public bool loop
		{
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0xFD6F80", Offset = "0xFD6F80", VA = "0xFD6F80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0xFD6FB0", Offset = "0xFD6FB0", VA = "0xFD6FB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public bool mute
		{
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0xFD6FE8", Offset = "0xFD6FE8", VA = "0xFD6FE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0xFD7018", Offset = "0xFD7018", VA = "0xFD7018")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xFD7050", Offset = "0xFD7050", VA = "0xFD7050")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xFD7080", Offset = "0xFD7080", VA = "0xFD7080")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public bool isPlaying
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0xFD70B8", Offset = "0xFD70B8", VA = "0xFD70B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xFD70E8", Offset = "0xFD70E8", VA = "0xFD70E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xFD4DBC", Offset = "0xFD4DBC", VA = "0xFD4DBC")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xFD5014", Offset = "0xFD5014", VA = "0xFD5014")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xFD5110", Offset = "0xFD5110", VA = "0xFD5110")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xFD13FC", Offset = "0xFD13FC", VA = "0xFD13FC")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xFD13F4", Offset = "0xFD13F4", VA = "0xFD13F4")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xFD5A7C", Offset = "0xFD5A7C", VA = "0xFD5A7C")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xFD1604", Offset = "0xFD1604", VA = "0xFD1604")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xFD7320", Offset = "0xFD7320", VA = "0xFD7320")]
		public void Play()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xFD7388", Offset = "0xFD7388", VA = "0xFD7388")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xFD1404", Offset = "0xFD1404", VA = "0xFD1404")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xFD7458", Offset = "0xFD7458", VA = "0xFD7458")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xFD54B0", Offset = "0xFD54B0", VA = "0xFD54B0")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xFD572C", Offset = "0xFD572C", VA = "0xFD572C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xFD19F8", Offset = "0xFD19F8", VA = "0xFD19F8")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xFD74CC", Offset = "0xFD74CC", VA = "0xFD74CC")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xFD74F8", Offset = "0xFD74F8", VA = "0xFD74F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x67706C", Offset = "0x67706C")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xFD75F0", Offset = "0xFD75F0", VA = "0xFD75F0")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xFD1EE0", Offset = "0xFD1EE0", VA = "0xFD1EE0")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xFD1F64", Offset = "0xFD1F64", VA = "0xFD1F64")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xFD1D5C", Offset = "0xFD1D5C", VA = "0xFD1D5C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xFD1B20", Offset = "0xFD1B20", VA = "0xFD1B20")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xFD7668", Offset = "0xFD7668", VA = "0xFD7668")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6770D0", Offset = "0x6770D0")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xFD7714", Offset = "0xFD7714", VA = "0xFD7714")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x677134", Offset = "0x677134")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xFD7858", Offset = "0xFD7858", VA = "0xFD7858")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4001349")]
		Random,
		[Token(Token = "0x400134A")]
		Sequential
	}
	[Token(Token = "0x20002B1")]
	public enum FreqHint
	{
		[Token(Token = "0x400134C")]
		None,
		[Token(Token = "0x400134D")]
		Wide,
		[Token(Token = "0x400134E")]
		Narrow
	}
	[Token(Token = "0x20002B2")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001350")]
		VeryLow = -2,
		[Token(Token = "0x4001351")]
		Low,
		[Token(Token = "0x4001352")]
		Default,
		[Token(Token = "0x4001353")]
		High,
		[Token(Token = "0x4001354")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20002B3")]
	public class OSPProps
	{
		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EF50", Offset = "0x66EF50")]
		public bool enableSpatialization;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EF88", Offset = "0x66EF88")]
		public bool useFastOverride;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66EFC0", Offset = "0x66EFC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66EFC0", Offset = "0x66EFC0")]
		public float gain;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F014", Offset = "0x66F014")]
		public bool enableInvSquare;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66F04C", Offset = "0x66F04C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F04C", Offset = "0x66F04C")]
		public float volumetric;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F0A4", Offset = "0x66F0A4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x66F0A4", Offset = "0x66F0A4")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xFD6CD0", Offset = "0xFD6CD0", VA = "0xFD6CD0")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B4")]
	public class SoundFX
	{
		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F104", Offset = "0x66F104")]
		public string name;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F13C", Offset = "0x66F13C")]
		public SoundFXNext playback;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F174", Offset = "0x66F174")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66F174", Offset = "0x66F174")]
		public float volume;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F1C8", Offset = "0x66F1C8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x66F1C8", Offset = "0x66F1C8")]
		public Vector2 pitchVariance;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x66F224", Offset = "0x66F224")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F224", Offset = "0x66F224")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F284", Offset = "0x66F284")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F2BC", Offset = "0x66F2BC")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F2F4", Offset = "0x66F2F4")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F32C", Offset = "0x66F32C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66F32C", Offset = "0x66F32C")]
		public float spread;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F384", Offset = "0x66F384")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66F384", Offset = "0x66F384")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F3D8", Offset = "0x66F3D8")]
		public SoundPriority priority;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F410", Offset = "0x66F410")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x66F410", Offset = "0x66F410")]
		public Vector2 delay;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F46C", Offset = "0x66F46C")]
		public bool looping;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x66F4A4", Offset = "0x66F4A4")]
		public AudioClip[] soundClips;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170001F0")]
		public int Length
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0xFD7F6C", Offset = "0xFD7F6C", VA = "0xFD7F6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F1")]
		public bool IsValid
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0xFD7F98", Offset = "0xFD7F98", VA = "0xFD7F98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F2")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xFD4DB4", Offset = "0xFD4DB4", VA = "0xFD4DB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001005")]
			[Address(RVA = "0xFD0818", Offset = "0xFD0818", VA = "0xFD0818")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0xFD4CB8", Offset = "0xFD4CB8", VA = "0xFD4CB8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F4")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0xFD4CEC", Offset = "0xFD4CEC", VA = "0xFD4CEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xFD654C", Offset = "0xFD654C", VA = "0xFD654C")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xFD4B40", Offset = "0xFD4B40", VA = "0xFD4B40")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xFD4D10", Offset = "0xFD4D10", VA = "0xFD4D10")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xFD4CC4", Offset = "0xFD4CC4", VA = "0xFD4CC4")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xFD8078", Offset = "0xFD8078", VA = "0xFD8078")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xFD4D04", Offset = "0xFD4D04", VA = "0xFD4D04")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xFD81C8", Offset = "0xFD81C8", VA = "0xFD81C8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xFD82A4", Offset = "0xFD82A4", VA = "0xFD82A4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xFD83B8", Offset = "0xFD83B8", VA = "0xFD83B8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xFD8444", Offset = "0xFD8444", VA = "0xFD8444")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xFD84D8", Offset = "0xFD84D8", VA = "0xFD84D8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xFD8564", Offset = "0xFD8564", VA = "0xFD8564")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xFD85F0", Offset = "0xFD85F0", VA = "0xFD85F0")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B5")]
	public class SoundFXRef
	{
		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170001F5")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0xFD8668", Offset = "0xFD8668", VA = "0xFD8668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public string name
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0xFD875C", Offset = "0xFD875C", VA = "0xFD875C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001016")]
			[Address(RVA = "0xFD8764", Offset = "0xFD8764", VA = "0xFD8764")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public int Length
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0xFD876C", Offset = "0xFD876C", VA = "0xFD876C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F8")]
		public bool IsValid
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xFD87BC", Offset = "0xFD87BC", VA = "0xFD87BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xFD8698", Offset = "0xFD8698", VA = "0xFD8698")]
		private void Init()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xFD87FC", Offset = "0xFD87FC", VA = "0xFD87FC")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xFD883C", Offset = "0xFD883C", VA = "0xFD883C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xFD8884", Offset = "0xFD8884", VA = "0xFD8884")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xFCE554", Offset = "0xFCE554", VA = "0xFCE554")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xFD88D4", Offset = "0xFD88D4", VA = "0xFD88D4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xFD891C", Offset = "0xFD891C", VA = "0xFD891C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xFD8974", Offset = "0xFD8974", VA = "0xFD8974")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xFD89B4", Offset = "0xFD89B4", VA = "0xFD89B4")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xFD89FC", Offset = "0xFD89FC", VA = "0xFD89FC")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xFD8A3C", Offset = "0xFD8A3C", VA = "0xFD8A3C")]
		public SoundFXRef()
		{
		}
	}
}
namespace MysticArsenal
{
	[Token(Token = "0x20002B6")]
	public class MysticButtonScript : MonoBehaviour
	{
		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Button;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text MyButtonText;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string projectileParticleName;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MysticFireProjectile effectScript;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MysticProjectileScript projectileScript;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float buttonsX;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float buttonsY;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buttonsSizeX;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float buttonsSizeY;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float buttonsDistance;

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x945D40", Offset = "0x945D40", VA = "0x945D40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x945F44", Offset = "0x945F44", VA = "0x945F44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x945E50", Offset = "0x945E50", VA = "0x945E50")]
		public void getProjectileNames()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x945F80", Offset = "0x945F80", VA = "0x945F80")]
		public bool overButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x94608C", Offset = "0x94608C", VA = "0x94608C")]
		public MysticButtonScript()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class MysticFireProjectile : MonoBehaviour
	{
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RaycastHit hit;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] projectiles;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform spawnPosition;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int currentProjectile;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float speed;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MysticButtonScript selectedProjectileButton;

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x946094", Offset = "0x946094", VA = "0x946094")]
		private void Start()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x94610C", Offset = "0x94610C", VA = "0x94610C")]
		private void Update()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x9466A4", Offset = "0x9466A4", VA = "0x9466A4")]
		public void nextEffect()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x946714", Offset = "0x946714", VA = "0x946714")]
		public void previousEffect()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x94676C", Offset = "0x94676C", VA = "0x94676C")]
		public void AdjustSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x946774", Offset = "0x946774", VA = "0x946774")]
		public MysticFireProjectile()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class MysticLoopScript : MonoBehaviour
	{
		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666930", Offset = "0x666930")]
		private sealed class <EffectLoop>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MysticLoopScript <>4__this;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <effectPlayer>5__2;

			[Token(Token = "0x170001F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001036")]
				[Address(RVA = "0x946D1C", Offset = "0x946D1C", VA = "0x946D1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001038")]
				[Address(RVA = "0x946D8C", Offset = "0x946D8C", VA = "0x946D8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001033")]
			[Address(RVA = "0x946B2C", Offset = "0x946B2C", VA = "0x946B2C")]
			[DebuggerHidden]
			public <EffectLoop>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001034")]
			[Address(RVA = "0x946B68", Offset = "0x946B68", VA = "0x946B68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001035")]
			[Address(RVA = "0x946B6C", Offset = "0x946B6C", VA = "0x946B6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001037")]
			[Address(RVA = "0x946D24", Offset = "0x946D24", VA = "0x946D24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chosenEffect;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float loopTimeLimit;

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x946A60", Offset = "0x946A60", VA = "0x946A60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x946A64", Offset = "0x946A64", VA = "0x946A64")]
		public void PlayEffect()
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x946AB8", Offset = "0x946AB8", VA = "0x946AB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x677288", Offset = "0x677288")]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x946B58", Offset = "0x946B58", VA = "0x946B58")]
		public MysticLoopScript()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class MysticLightFade : MonoBehaviour
	{
		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66F4EC", Offset = "0x66F4EC")]
		public float life;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x946784", Offset = "0x946784", VA = "0x946784")]
		private void Start()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x9468B8", Offset = "0x9468B8", VA = "0x9468B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x946A44", Offset = "0x946A44", VA = "0x946A44")]
		public MysticLightFade()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class MysticRotation : MonoBehaviour
	{
		[Token(Token = "0x20002BC")]
		public enum spaceEnum
		{
			[Token(Token = "0x400138E")]
			Local,
			[Token(Token = "0x400138F")]
			World
		}

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x66F524", Offset = "0x66F524")]
		public Vector3 rotateVector;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x946D94", Offset = "0x946D94", VA = "0x946D94")]
		private void Start()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x946D98", Offset = "0x946D98", VA = "0x946D98")]
		private void Update()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x946F28", Offset = "0x946F28", VA = "0x946F28")]
		public MysticRotation()
		{
		}
	}
}
namespace MagicaReductionMesh
{
	[Token(Token = "0x20002BD")]
	public class ReductionMesh
	{
		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MeshData meshData;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReductionData reductionData;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DebugData debugData;

		[Token(Token = "0x170001FB")]
		public MeshData MeshData
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x881714", Offset = "0x881714", VA = "0x881714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		public ReductionData ReductionData
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x881758", Offset = "0x881758", VA = "0x881758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public DebugData DebugData
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x88179C", Offset = "0x88179C", VA = "0x88179C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x8817E0", Offset = "0x8817E0", VA = "0x8817E0")]
		public int AddMesh(bool isSkinning, Mesh mesh, List<Transform> bones, Matrix4x4[] bindPoseList, BoneWeight[] boneWeightList)
		{
			return default(int);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x881844", Offset = "0x881844", VA = "0x881844")]
		public int AddMesh(Renderer ren)
		{
			return default(int);
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x881AF4", Offset = "0x881AF4", VA = "0x881AF4")]
		public int AddMesh(Transform root, List<Vector3> posList, [Optional] List<Vector3> norList, [Optional] List<Vector4> tanList, [Optional] List<Vector2> uvList)
		{
			return default(int);
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x881B58", Offset = "0x881B58", VA = "0x881B58")]
		public void Reduction(float zeroRadius, float radius, float polygonLength, bool createTetra)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x881C4C", Offset = "0x881C4C", VA = "0x881C4C")]
		public FinalData GetFinalData(Transform root)
		{
			return null;
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x881C80", Offset = "0x881C80", VA = "0x881C80")]
		public ReductionMesh()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public abstract class ReductionMeshAccess
	{
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ReductionMesh parent;

		[Token(Token = "0x170001FE")]
		protected MeshData MeshData
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x86E4A8", Offset = "0x86E4A8", VA = "0x86E4A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		protected ReductionData ReductionData
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x881D24", Offset = "0x881D24", VA = "0x881D24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		protected DebugData DebugData
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x881D50", Offset = "0x881D50", VA = "0x881D50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x881D7C", Offset = "0x881D7C", VA = "0x881D7C", Slot = "4")]
		public virtual void SetParent(ReductionMesh parent)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x87116C", Offset = "0x87116C", VA = "0x87116C")]
		protected ReductionMeshAccess()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class DebugData : ReductionMeshAccess
	{
		[Token(Token = "0x600104D")]
		[Address(RVA = "0x86DF20", Offset = "0x86DF20", VA = "0x86DF20")]
		public void DispMeshInfo(string header = "")
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x86E6B4", Offset = "0x86E6B4", VA = "0x86E6B4")]
		public static void DebugDrawShared(FinalData final, bool drawTriangle = true, bool drawLine = true, bool drawTetra = true, bool drawVertexNormal = true, bool drawVertexTangent = true, bool drawNumber = false, int maxPolygonCount = int.MaxValue, int layer = -1, int tetraIndex = -1, float tetraSize = 1f, [Optional] List<int> drawNumberList, float axisSize = 0.01f)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x86FD3C", Offset = "0x86FD3C", VA = "0x86FD3C")]
		private static void DrawTetra(FinalData final, int tetraIndex, List<Vector3> wposList, float tetraSize)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x87009C", Offset = "0x87009C", VA = "0x87009C")]
		public static void DebugDrawChild(FinalData final, bool drawPosition = false, bool drawNormal = false, bool drawTriangle = false, bool drawNumber = false, int maxVertexCount = int.MaxValue, float positionSize = 0.001f, float axisSize = 0.01f)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x871164", Offset = "0x871164", VA = "0x871164")]
		public DebugData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C0")]
	public class FinalData
	{
		[Serializable]
		[Token(Token = "0x20002C1")]
		public class MeshIndexData
		{
			[Token(Token = "0x40013A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<uint> meshIndexPackList;

			[Token(Token = "0x600105B")]
			[Address(RVA = "0x8714D8", Offset = "0x8714D8", VA = "0x8714D8")]
			public MeshIndexData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002C2")]
		public class MeshInfo
		{
			[Token(Token = "0x40013A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int meshIndex;

			[Token(Token = "0x40013A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x40013A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Vector3> vertices;

			[Token(Token = "0x40013A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Vector3> normals;

			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Vector4> tangents;

			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<BoneWeight> boneWeights;

			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<int> parents;

			[Token(Token = "0x17000209")]
			public int VertexCount
			{
				[Token(Token = "0x600105C")]
				[Address(RVA = "0x871548", Offset = "0x871548", VA = "0x871548")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600105D")]
			[Address(RVA = "0x8715A8", Offset = "0x8715A8", VA = "0x8715A8")]
			public MeshInfo()
			{
			}
		}

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> vertices;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3> normals;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector4> tangents;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector2> uvs;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<BoneWeight> boneWeights;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Matrix4x4> bindPoses;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Transform> bones;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> lines;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<int> triangles;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int> tetras;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<float> tetraSizes;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Matrix4x4> vertexBindPoses;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<MeshIndexData> vertexToMeshIndexList;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<int> vertexToTriangleCountList;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<int> vertexToTriangleStartList;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<int> vertexToTriangleIndexList;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<MeshInfo> meshList;

		[Token(Token = "0x17000201")]
		public bool IsValid
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x871174", Offset = "0x871174", VA = "0x871174")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000202")]
		public int VertexCount
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x87003C", Offset = "0x87003C", VA = "0x87003C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000203")]
		public int LineCount
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0x86FC58", Offset = "0x86FC58", VA = "0x86FC58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000204")]
		public int TriangleCount
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x86FBDC", Offset = "0x86FBDC", VA = "0x86FBDC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000205")]
		public int TetraCount
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x86FCC8", Offset = "0x86FCC8", VA = "0x86FCC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000206")]
		public int BoneCount
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x8711E0", Offset = "0x8711E0", VA = "0x8711E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000207")]
		public bool IsSkinning
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x871240", Offset = "0x871240", VA = "0x871240")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000208")]
		public int MeshCount
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x871104", Offset = "0x871104", VA = "0x871104")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x871248", Offset = "0x871248", VA = "0x871248")]
		public FinalData()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class MeshData : ReductionMeshAccess
	{
		[Token(Token = "0x20002C4")]
		public class WeightData
		{
			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int boneIndex;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float boneWeight;

			[Token(Token = "0x600107E")]
			[Address(RVA = "0x87338C", Offset = "0x87338C", VA = "0x87338C")]
			public WeightData()
			{
			}
		}

		[Token(Token = "0x20002C5")]
		public class Vertex
		{
			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int meshIndex;

			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int vertexIndex;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 wpos;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 wnor;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 wtan;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float tanw;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2 uv;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int parentIndex;

			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<WeightData> boneWeightList;

			[Token(Token = "0x600107F")]
			[Address(RVA = "0x87331C", Offset = "0x87331C", VA = "0x87331C")]
			public Vertex()
			{
			}
		}

		[Token(Token = "0x20002C6")]
		public class MeshInfo
		{
			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int vertexCount;

			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Vertex> vertexList;

			[Token(Token = "0x6001080")]
			[Address(RVA = "0x87251C", Offset = "0x87251C", VA = "0x87251C")]
			public MeshInfo()
			{
			}
		}

		[Token(Token = "0x20002C7")]
		public class ShareVertex
		{
			[Token(Token = "0x20002C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666940", Offset = "0x666940")]
			private sealed class <>c__DisplayClass19_0
			{
				[Token(Token = "0x40013D2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public WeightData w;

				[Token(Token = "0x600108B")]
				[Address(RVA = "0x87E1BC", Offset = "0x87E1BC", VA = "0x87E1BC")]
				public <>c__DisplayClass19_0()
				{
				}

				[Token(Token = "0x600108C")]
				[Address(RVA = "0x87E288", Offset = "0x87E288", VA = "0x87E288")]
				internal bool <CalcBoneWeight>b__1(WeightData wdata)
				{
					return default(bool);
				}
			}

			[Serializable]
			[Token(Token = "0x20002C9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666950", Offset = "0x666950")]
			private sealed class <>c
			{
				[Token(Token = "0x40013D3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x40013D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Comparison<WeightData> <>9__19_0;

				[Token(Token = "0x600108E")]
				[Address(RVA = "0x87E228", Offset = "0x87E228", VA = "0x87E228")]
				public <>c()
				{
				}

				[Token(Token = "0x600108F")]
				[Address(RVA = "0x87E230", Offset = "0x87E230", VA = "0x87E230")]
				internal int <CalcBoneWeight>b__19_0(WeightData a, WeightData b)
				{
					return default(int);
				}
			}

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int sindex;

			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 wpos;

			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 wnor;

			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 wtan;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float tanw;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector2 uv;

			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Matrix4x4 worldToLocalMatrix;

			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Matrix4x4 bindpose;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public List<WeightData> boneWeightList;

			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public List<Vertex> vertexList;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public HashSet<ShareVertex> linkShareVertexSet;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public HashSet<Triangle> linkTriangleSet;

			[Token(Token = "0x6001081")]
			[Address(RVA = "0x8740A8", Offset = "0x8740A8", VA = "0x8740A8")]
			public void AddLink(ShareVertex mv)
			{
			}

			[Token(Token = "0x6001082")]
			[Address(RVA = "0x874AA0", Offset = "0x874AA0", VA = "0x874AA0")]
			public void ReplaseLink(ShareVertex old, ShareVertex mv)
			{
			}

			[Token(Token = "0x6001083")]
			[Address(RVA = "0x874B78", Offset = "0x874B78", VA = "0x874B78")]
			public void RecalcCoordinate()
			{
			}

			[Token(Token = "0x6001084")]
			[Address(RVA = "0x87952C", Offset = "0x87952C", VA = "0x87952C")]
			public void CalcNormalTangentFromTriangle()
			{
			}

			[Token(Token = "0x6001085")]
			[Address(RVA = "0x87DFAC", Offset = "0x87DFAC", VA = "0x87DFAC")]
			public Vector3 CalcLocalPos(Vector3 pos)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001086")]
			[Address(RVA = "0x87E0E4", Offset = "0x87E0E4", VA = "0x87E0E4")]
			public Vector3 CalcLocalDir(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001087")]
			[Address(RVA = "0x87C0C8", Offset = "0x87C0C8", VA = "0x87C0C8")]
			public Matrix4x4 CalcWorldToLocalMatrix()
			{
				return default(Matrix4x4);
			}

			[Token(Token = "0x6001088")]
			[Address(RVA = "0x87347C", Offset = "0x87347C", VA = "0x87347C")]
			public void CalcBoneWeight(float weightPow)
			{
			}

			[Token(Token = "0x6001089")]
			[Address(RVA = "0x87C274", Offset = "0x87C274", VA = "0x87C274")]
			public BoneWeight GetBoneWeight()
			{
				return default(BoneWeight);
			}

			[Token(Token = "0x600108A")]
			[Address(RVA = "0x873394", Offset = "0x873394", VA = "0x873394")]
			public ShareVertex()
			{
			}
		}

		[Token(Token = "0x20002CA")]
		public class Triangle
		{
			[Token(Token = "0x20002CB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666960", Offset = "0x666960")]
			private sealed class <>c__DisplayClass9_0
			{
				[Token(Token = "0x40013DA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int edgev0;

				[Token(Token = "0x40013DB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public int edgev1;

				[Token(Token = "0x6001096")]
				[Address(RVA = "0x87E904", Offset = "0x87E904", VA = "0x87E904")]
				public <>c__DisplayClass9_0()
				{
				}

				[Token(Token = "0x6001097")]
				[Address(RVA = "0x87E90C", Offset = "0x87E90C", VA = "0x87E90C")]
				internal bool <GetNonEdgeVertex>b__0(ShareVertex sv)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int tindex;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<ShareVertex> shareVertexList;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 wnor;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 wtan;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool flipLock;

			[Token(Token = "0x6001090")]
			[Address(RVA = "0x878CCC", Offset = "0x878CCC", VA = "0x878CCC")]
			public void GetEdge(out uint edge0, out uint edge1, out uint edge2)
			{
			}

			[Token(Token = "0x6001091")]
			[Address(RVA = "0x878700", Offset = "0x878700", VA = "0x878700")]
			public Vector3 CalcTriangleNormal()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001092")]
			[Address(RVA = "0x879180", Offset = "0x879180", VA = "0x879180")]
			public void Flip()
			{
			}

			[Token(Token = "0x6001093")]
			[Address(RVA = "0x87893C", Offset = "0x87893C", VA = "0x87893C")]
			public Vector3 CalcTriangleTangent()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001094")]
			[Address(RVA = "0x879440", Offset = "0x879440", VA = "0x879440")]
			public ShareVertex GetNonEdgeVertex(int edgev0, int edgev1)
			{
				return null;
			}

			[Token(Token = "0x6001095")]
			[Address(RVA = "0x874118", Offset = "0x874118", VA = "0x874118")]
			public Triangle()
			{
			}
		}

		[Token(Token = "0x20002CC")]
		private class Line
		{
			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ShareVertex> shareVertexList;

			[Token(Token = "0x6001098")]
			[Address(RVA = "0x8780DC", Offset = "0x8780DC", VA = "0x8780DC")]
			public Line()
			{
			}
		}

		[Token(Token = "0x20002CD")]
		public enum UvWrapMode
		{
			[Token(Token = "0x40013DE")]
			None,
			[Token(Token = "0x40013DF")]
			Sphere
		}

		[Token(Token = "0x20002CE")]
		public class Tetra
		{
			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ShareVertex> shareVertexList;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 circumCenter;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float circumRadius;

			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 tetraCenter;

			[Token(Token = "0x40013E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float tetraSize;

			[Token(Token = "0x6001099")]
			[Address(RVA = "0x87E2D4", Offset = "0x87E2D4", VA = "0x87E2D4")]
			public Tetra()
			{
			}

			[Token(Token = "0x600109A")]
			[Address(RVA = "0x879968", Offset = "0x879968", VA = "0x879968")]
			public Tetra(ShareVertex a, ShareVertex b, ShareVertex c, ShareVertex d)
			{
			}

			[Token(Token = "0x600109B")]
			[Address(RVA = "0x87A2B0", Offset = "0x87A2B0", VA = "0x87A2B0")]
			public ulong GetTetraHash()
			{
				return default(ulong);
			}

			[Token(Token = "0x600109C")]
			[Address(RVA = "0x879A90", Offset = "0x879A90", VA = "0x879A90")]
			public void CalcCircumcircle()
			{
			}

			[Token(Token = "0x600109D")]
			[Address(RVA = "0x87A444", Offset = "0x87A444", VA = "0x87A444")]
			public bool IntersectCircumcircle(Vector3 pos)
			{
				return default(bool);
			}

			[Token(Token = "0x600109E")]
			[Address(RVA = "0x87E828", Offset = "0x87E828", VA = "0x87E828")]
			public bool CheckSame(Tetra tri)
			{
				return default(bool);
			}

			[Token(Token = "0x600109F")]
			[Address(RVA = "0x87A3D4", Offset = "0x87A3D4", VA = "0x87A3D4")]
			public bool ContainsPoint(ShareVertex p1)
			{
				return default(bool);
			}

			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x87A4FC", Offset = "0x87A4FC", VA = "0x87A4FC")]
			public bool ContainsPoint(ShareVertex p1, ShareVertex p2, ShareVertex p3, ShareVertex p4)
			{
				return default(bool);
			}

			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x87E344", Offset = "0x87E344", VA = "0x87E344")]
			public void CalcSize()
			{
			}

			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x87A610", Offset = "0x87A610", VA = "0x87A610")]
			public bool Verification()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002CF")]
		private class LinkInfo
		{
			[Token(Token = "0x40013E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShareVertex sv;

			[Token(Token = "0x40013E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float length;

			[Token(Token = "0x40013E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int count;

			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x87DC7C", Offset = "0x87DC7C", VA = "0x87DC7C")]
			public LinkInfo()
			{
			}
		}

		[Token(Token = "0x20002D0")]
		private class VertexLengthInfo
		{
			[Token(Token = "0x40013E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShareVertex sv;

			[Token(Token = "0x40013E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float length;

			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x87DC84", Offset = "0x87DC84", VA = "0x87DC84")]
			public VertexLengthInfo()
			{
			}
		}

		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666970", Offset = "0x666970")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x40013EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float weightLength;

			[Token(Token = "0x60010A5")]
			[Address(RVA = "0x87D4F0", Offset = "0x87D4F0", VA = "0x87D4F0")]
			public <>c__DisplayClass53_0()
			{
			}
		}

		[Token(Token = "0x20002D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666980", Offset = "0x666980")]
		private sealed class <>c__DisplayClass53_1
		{
			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vertex vt;

			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass53_0 CS$<>8__locals1;

			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x87D4F8", Offset = "0x87D4F8", VA = "0x87D4F8")]
			public <>c__DisplayClass53_1()
			{
			}

			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x87DEBC", Offset = "0x87DEBC", VA = "0x87DEBC")]
			internal bool <CreateOriginalMeshInfo>b__0(ShareVertex sv)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666990", Offset = "0x666990")]
		private sealed class <>c
		{
			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<VertexLengthInfo> <>9__57_0;

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x87DE60", Offset = "0x87DE60", VA = "0x87DE60")]
			public <>c()
			{
			}

			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x87DE68", Offset = "0x87DE68", VA = "0x87DE68")]
			internal int <SearchNearPointList>b__57_0(VertexLengthInfo a, VertexLengthInfo b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vertex> originalVertexList;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MeshInfo> meshInfoList;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ShareVertex> shareVertexList;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<ulong, Triangle> triangleDict;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<uint, Line> lineDict;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Transform> boneList;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Tetra> tetraList;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float weightPow;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int maxWeightCount;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float sameSurfaceAngle;

		[Token(Token = "0x1700020A")]
		public int VertexCount
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x86E534", Offset = "0x86E534", VA = "0x86E534")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020B")]
		public int LineCount
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x86E5F4", Offset = "0x86E5F4", VA = "0x86E5F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020C")]
		public int TriangleCount
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x86E594", Offset = "0x86E594", VA = "0x86E594")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020D")]
		public int TetraCount
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x86E654", Offset = "0x86E654", VA = "0x86E654")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020E")]
		public int MeshCount
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x86E4D4", Offset = "0x86E4D4", VA = "0x86E4D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020F")]
		public float WeightPow
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x8716B0", Offset = "0x8716B0", VA = "0x8716B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x8716B8", Offset = "0x8716B8", VA = "0x8716B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public int MaxWeightCount
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x8716C0", Offset = "0x8716C0", VA = "0x8716C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x8716C8", Offset = "0x8716C8", VA = "0x8716C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public float SameSurfaceAngle
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x8716D0", Offset = "0x8716D0", VA = "0x8716D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x8716D8", Offset = "0x8716D8", VA = "0x8716D8")]
			set
			{
			}
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x8716E0", Offset = "0x8716E0", VA = "0x8716E0")]
		public int AddMesh(bool isSkinning, Mesh mesh, List<Transform> bones, Matrix4x4[] bindPoseList, BoneWeight[] boneWeightList)
		{
			return default(int);
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x874188", Offset = "0x874188", VA = "0x874188")]
		public int AddMesh(Transform root, List<Vector3> posList, [Optional] List<Vector3> norList, [Optional] List<Vector4> tanList, [Optional] List<Vector2> uvList)
		{
			return default(int);
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x8747A0", Offset = "0x8747A0", VA = "0x8747A0")]
		public void CombineVertex(ShareVertex sv0, ShareVertex sv1)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x874E98", Offset = "0x874E98", VA = "0x874E98")]
		public void UpdateMeshData(bool createTetra)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x874EFC", Offset = "0x874EFC", VA = "0x874EFC")]
		private void CalcVertexIndex()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x8750E0", Offset = "0x8750E0", VA = "0x8750E0")]
		private void CalcUV(UvWrapMode wrapMode)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x875548", Offset = "0x875548", VA = "0x875548")]
		private void CreateTriangleAndLine()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x876504", Offset = "0x876504", VA = "0x876504")]
		private void CalcShareVertexWeight()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x876638", Offset = "0x876638", VA = "0x876638")]
		private void AdjustTriangleNormal()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x8792D4", Offset = "0x8792D4", VA = "0x8792D4")]
		private bool CheckTwoTriangleOpen(Triangle tri1, Triangle tri2, uint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x878E94", Offset = "0x878E94", VA = "0x878E94")]
		private float CalcTwoTriangleAngle(Triangle tri1, Triangle tri2, uint edge)
		{
			return default(float);
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x87814C", Offset = "0x87814C", VA = "0x87814C")]
		private Dictionary<uint, List<ulong>> GetEdgeToTriangleDict()
		{
			return null;
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x877100", Offset = "0x877100", VA = "0x877100")]
		private void CalcVertexNormalFromTriangle()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x877224", Offset = "0x877224", VA = "0x877224")]
		private void CreateTetraMesh()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x879774", Offset = "0x879774", VA = "0x879774")]
		private Bounds CalcBounding()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x87A8E0", Offset = "0x87A8E0", VA = "0x87A8E0")]
		public FinalData GetFinalData(Transform root)
		{
			return null;
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x87C49C", Offset = "0x87C49C", VA = "0x87C49C")]
		private void CreateOriginalMeshInfo(FinalData final, Transform root, float weightLength)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x87DBAC", Offset = "0x87DBAC", VA = "0x87DBAC")]
		private void AddVertexToMeshIndexData(FinalData final, int sindex, int meshIndex, int meshVertexIndex)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x87D500", Offset = "0x87D500", VA = "0x87D500")]
		private List<ShareVertex> SearchNearPointList(Vector3 basePos, ShareVertex sv, float weightLength, int maxCount)
		{
			return null;
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x87258C", Offset = "0x87258C", VA = "0x87258C")]
		public void CalcMeshWorldPositionNormalTangent(bool isSkinning, Mesh mesh, List<Transform> bones, Matrix4x4[] bindPoseList, BoneWeight[] boneWeightList, out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector4> wtanList)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x87DC8C", Offset = "0x87DC8C", VA = "0x87DC8C")]
		public MeshData()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class ReductionData : ReductionMeshAccess
	{
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x881080", Offset = "0x881080", VA = "0x881080")]
		public void ReductionZeroDistance(float radius = 0.0001f)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x881128", Offset = "0x881128", VA = "0x881128")]
		public void ReductionRadius(float radius)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x8811D0", Offset = "0x8811D0", VA = "0x8811D0")]
		public void ReductionPolygonLink(float length)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x881278", Offset = "0x881278", VA = "0x881278")]
		public void ReductionBone()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x88170C", Offset = "0x88170C", VA = "0x88170C")]
		public ReductionData()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class NearPointReduction
	{
		[Token(Token = "0x20002D6")]
		public class Point
		{
			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshData.ShareVertex shareVertex;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 pos;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3Int grid;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Point nearPoint;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float nearDist;

			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x87FCB0", Offset = "0x87FCB0", VA = "0x87FCB0")]
			public Point()
			{
			}
		}

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected MeshData meshData;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Point> pointList;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<Vector3Int, List<Point>> gridMap;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float gridSize;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float searchRadius;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Point, List<Point>> nearPointDict;

		[Token(Token = "0x17000212")]
		public int PointCount
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x87EA40", Offset = "0x87EA40", VA = "0x87EA40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x87E95C", Offset = "0x87E95C", VA = "0x87E95C")]
		public NearPointReduction(float radius = 0.05f)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x87EAA0", Offset = "0x87EAA0", VA = "0x87EAA0")]
		public void Create(MeshData meshData)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x87EF94", Offset = "0x87EF94", VA = "0x87EF94")]
		public void Reduction()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x87EBF0", Offset = "0x87EBF0", VA = "0x87EBF0")]
		private Point AddPoint(MeshData.ShareVertex sv, Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x87FCB8", Offset = "0x87FCB8", VA = "0x87FCB8")]
		private void AddGrid(Point p)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x87FF40", Offset = "0x87FF40", VA = "0x87FF40")]
		private void RemoveGrid(Point p)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x87F4E8", Offset = "0x87F4E8", VA = "0x87F4E8")]
		private void Move(Point p, Vector3 newpos)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x87F46C", Offset = "0x87F46C", VA = "0x87F46C")]
		private void Remove(Point p)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x87FE4C", Offset = "0x87FE4C", VA = "0x87FE4C")]
		protected Vector3Int GetGridPos(Vector3 pos)
		{
			return default(Vector3Int);
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x87ECD8", Offset = "0x87ECD8", VA = "0x87ECD8")]
		private void SearchNearPointAll()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x87F544", Offset = "0x87F544", VA = "0x87F544")]
		private void SearchNearPoint(Point p, float radius, Point ignorePoint)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x87FB60", Offset = "0x87FB60", VA = "0x87FB60")]
		private Point GetNearPointPair()
		{
			return null;
		}
	}
	[Token(Token = "0x20002D7")]
	public class PolygonLinkReduction
	{
		[Token(Token = "0x20002D8")]
		public class Point
		{
			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshData.ShareVertex shareVertex;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Point nearPoint;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float nearDist;

			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x880FD0", Offset = "0x880FD0", VA = "0x880FD0")]
			public Point()
			{
			}
		}

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected MeshData meshData;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float reductionLength;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Point> pointList;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<MeshData.ShareVertex, Point> pointDict;

		[Token(Token = "0x17000213")]
		public int PointCount
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x8801A4", Offset = "0x8801A4", VA = "0x8801A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x8800F8", Offset = "0x8800F8", VA = "0x8800F8")]
		public PolygonLinkReduction(float length)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x880204", Offset = "0x880204", VA = "0x880204")]
		public void Create(MeshData meshData)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x880518", Offset = "0x880518", VA = "0x880518")]
		public void Reduction()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x880338", Offset = "0x880338", VA = "0x880338")]
		private void AddPoint(MeshData.ShareVertex sv)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x880FD8", Offset = "0x880FD8", VA = "0x880FD8")]
		private Point GetPoint(MeshData.ShareVertex sv)
		{
			return null;
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x880B2C", Offset = "0x880B2C", VA = "0x880B2C")]
		private void Remove(Point p)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x880400", Offset = "0x880400", VA = "0x880400")]
		private void SearchNearPointAll()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x880BD4", Offset = "0x880BD4", VA = "0x880BD4")]
		private void SearchNearPoint(Point p)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x880E80", Offset = "0x880E80", VA = "0x880E80")]
		private Point GetNearPointPair()
		{
			return null;
		}
	}
	[Token(Token = "0x20002D9")]
	public class Utility
	{
		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x8780B4", Offset = "0x8780B4", VA = "0x8780B4")]
		public static uint PackPair(int v0, int v1)
		{
			return default(uint);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x8780C8", Offset = "0x8780C8", VA = "0x8780C8")]
		public static void UnpackPair(uint pack, out int v0, out int v1)
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x873ED0", Offset = "0x873ED0", VA = "0x873ED0")]
		public static ulong PackTriple(int v0, int v1, int v2)
		{
			return default(ulong);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x881D84", Offset = "0x881D84", VA = "0x881D84")]
		public static void UnpackTriple(ulong pack, out int v0, out int v1, out int v2)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x87E5F0", Offset = "0x87E5F0", VA = "0x87E5F0")]
		public static ulong PackQuater(int v0, int v1, int v2, int v3)
		{
			return default(ulong);
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x881DA0", Offset = "0x881DA0", VA = "0x881DA0")]
		public static void UnpackQuater(ulong pack, out int v0, out int v1, out int v2, out int v3)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x87DC70", Offset = "0x87DC70", VA = "0x87DC70")]
		public static uint Pack16(int hi, int low)
		{
			return default(uint);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x881DC4", Offset = "0x881DC4", VA = "0x881DC4")]
		public static int Unpack16Hi(uint pack)
		{
			return default(int);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x881DCC", Offset = "0x881DCC", VA = "0x881DCC")]
		public static int Unpack16Low(uint pack)
		{
			return default(int);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x881DD4", Offset = "0x881DD4", VA = "0x881DD4")]
		public static ulong Pack32(int hi, int low)
		{
			return default(ulong);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x881DE4", Offset = "0x881DE4", VA = "0x881DE4")]
		public static int Unpack32Hi(ulong pack)
		{
			return default(int);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x881DEC", Offset = "0x881DEC", VA = "0x881DEC")]
		public static int Unpack32Low(ulong pack)
		{
			return default(int);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x86F1AC", Offset = "0x86F1AC", VA = "0x86F1AC")]
		public static void CalcFinalDataWorldPositionNormalTangent(FinalData final, out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector4> wtanList)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x870554", Offset = "0x870554", VA = "0x870554")]
		public static void CalcFinalDataChildWorldPositionNormalTangent(FinalData final, int meshIndex, List<Vector3> sposList, List<Vector3> snorList, List<Vector4> stanList, out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector4> wtanList)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x881DF0", Offset = "0x881DF0", VA = "0x881DF0")]
		public static void CalcLocalPositionNormalTangent(Transform root, List<Vector3> wposList, List<Vector3> wnorList, List<Vector4> wtanList)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x88210C", Offset = "0x88210C", VA = "0x88210C")]
		public Utility()
		{
		}
	}
}
namespace MagicaCloth
{
	[Token(Token = "0x20002DA")]
	public abstract class BaseCloth : PhysicsTeam
	{
		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected ClothParams clothParams;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ClothData clothData;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected int clothDataHash;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		protected int clothDataVersion;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SelectionData clothSelection;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int clothSelectionHash;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int clothSelectionVersion;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected ClothSetup setup;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float oldBlendRatio;

		[Token(Token = "0x17000214")]
		public float BlendWeight
		{
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x82F5C8", Offset = "0x82F5C8", VA = "0x82F5C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x82F5FC", Offset = "0x82F5FC", VA = "0x82F5FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public ClothParams Params
		{
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0x82F8CC", Offset = "0x82F8CC", VA = "0x82F8CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		public ClothData ClothData
		{
			[Token(Token = "0x60010E1")]
			[Address(RVA = "0x82F8BC", Offset = "0x82F8BC", VA = "0x82F8BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010E2")]
			[Address(RVA = "0x82F8D4", Offset = "0x82F8D4", VA = "0x82F8D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public SelectionData ClothSelection
		{
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x82F8C4", Offset = "0x82F8C4", VA = "0x82F8C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		public ClothSetup Setup
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0x82F8DC", Offset = "0x82F8DC", VA = "0x82F8DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x82F224", Offset = "0x82F224", VA = "0x82F224")]
		public void ResetCloth()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x82F320", Offset = "0x82F320", VA = "0x82F320")]
		public void SetTimeScale(float timeScale)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x82F40C", Offset = "0x82F40C", VA = "0x82F40C")]
		public float GetTimeScale()
		{
			return default(float);
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x82F4B0", Offset = "0x82F4B0", VA = "0x82F4B0")]
		public void AddForce(Vector3 force, PhysicsManagerTeamData.ForceMode mode)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x82F7AC", Offset = "0x82F7AC", VA = "0x82F7AC", Slot = "16")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x82F8E4", Offset = "0x82F8E4", VA = "0x82F8E4", Slot = "38")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x82F8E8", Offset = "0x82F8E8", VA = "0x82F8E8", Slot = "39")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x82F954", Offset = "0x82F954", VA = "0x82F954", Slot = "22")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x82FA98", Offset = "0x82FA98", VA = "0x82FA98", Slot = "25")]
		protected override void OnActive()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x82FCE0", Offset = "0x82FCE0", VA = "0x82FCE0", Slot = "26")]
		protected override void OnInactive()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x82FE28", Offset = "0x82FE28", VA = "0x82FE28", Slot = "23")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x82FF00", Offset = "0x82FF00", VA = "0x82FF00", Slot = "24")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x82F97C", Offset = "0x82F97C", VA = "0x82F97C")]
		private void BaseClothInit()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x82FFE4", Offset = "0x82FFE4", VA = "0x82FFE4", Slot = "40")]
		protected virtual void ClothInit()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x8300C0", Offset = "0x8300C0", VA = "0x8300C0", Slot = "41")]
		protected virtual void ClothActive()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x830108", Offset = "0x830108", VA = "0x830108", Slot = "42")]
		protected virtual void ClothInactive()
		{
		}

		[Token(Token = "0x60010F0")]
		protected abstract uint UserFlag(int vindex);

		[Token(Token = "0x60010F1")]
		protected abstract Transform UserTransform(int vindex);

		[Token(Token = "0x60010F2")]
		protected abstract float3 UserTransformLocalPosition(int vindex);

		[Token(Token = "0x60010F3")]
		protected abstract quaternion UserTransformLocalRotation(int vindex);

		[Token(Token = "0x60010F4")]
		public abstract int GetDeformerCount();

		[Token(Token = "0x60010F5")]
		public abstract BaseMeshDeformer GetDeformer(int index);

		[Token(Token = "0x60010F6")]
		protected abstract MeshData GetMeshData();

		[Token(Token = "0x60010F7")]
		protected abstract void WorkerInit();

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x82FE50", Offset = "0x82FE50", VA = "0x82FE50")]
		private void BaseClothDispose()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x82FBE8", Offset = "0x82FBE8", VA = "0x82FBE8")]
		private void SetUseMesh(bool sw)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x82FF10", Offset = "0x82FF10", VA = "0x82FF10")]
		private void SetUseVertex(bool sw)
		{
		}

		[Token(Token = "0x60010FB")]
		protected abstract void SetDeformerUseVertex(bool sw, BaseMeshDeformer deformer, int deformerIndex);

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x82F64C", Offset = "0x82F64C", VA = "0x82F64C")]
		public void UpdateBlend()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x830140", Offset = "0x830140", VA = "0x830140", Slot = "31")]
		public override void CreateVerifyData()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x8302FC", Offset = "0x8302FC", VA = "0x8302FC", Slot = "30")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x8304CC", Offset = "0x8304CC", VA = "0x8304CC", Slot = "27")]
		public override List<ShareDataObject> GetAllShareDataObject()
		{
			return null;
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x83056C", Offset = "0x83056C", VA = "0x83056C", Slot = "28")]
		public override ShareDataObject DuplicateShareDataObject(ShareDataObject source)
		{
			return null;
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x83065C", Offset = "0x83065C", VA = "0x83065C")]
		protected BaseCloth()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6669A0", Offset = "0x6669A0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6669A0", Offset = "0x6669A0")]
	public class MagicaDirectionalWind : WindComponent
	{
		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66F5CC", Offset = "0x66F5CC")]
		private float main;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66F610", Offset = "0x66F610")]
		private float turbulence;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float oldMain;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float oldTurbulence;

		[Token(Token = "0x17000219")]
		public float Main
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0x8C5214", Offset = "0x8C5214", VA = "0x8C5214")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001103")]
			[Address(RVA = "0x8C521C", Offset = "0x8C521C", VA = "0x8C521C")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public float Turbulence
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0x8C52A4", Offset = "0x8C52A4", VA = "0x8C52A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001105")]
			[Address(RVA = "0x8C52AC", Offset = "0x8C52AC", VA = "0x8C52AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public Vector3 MainDirection
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0x8C5328", Offset = "0x8C5328", VA = "0x8C5328")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700021C")]
		public Vector3 CurrentDirection
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x8C535C", Offset = "0x8C535C", VA = "0x8C535C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x8C5474", Offset = "0x8C5474", VA = "0x8C5474", Slot = "15")]
		protected override void CreateWind()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x8C5524", Offset = "0x8C5524", VA = "0x8C5524", Slot = "12")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x8C5618", Offset = "0x8C5618", VA = "0x8C5618")]
		public MagicaDirectionalWind()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x666A00", Offset = "0x666A00")]
	public class MagicaPhysicsManager : CreateSingleton<MagicaPhysicsManager>
	{
		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UpdateTimeManager updateTime;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhysicsManagerParticleData particle;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhysicsManagerBoneData bone;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PhysicsManagerMeshData mesh;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicsManagerTeamData team;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicsManagerWindData wind;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PhysicsManagerCompute compute;

		[Token(Token = "0x1700021D")]
		public UpdateTimeManager.UpdateCount UpdatePerSeccond
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x8C9188", Offset = "0x8C9188", VA = "0x8C9188")]
			get
			{
				return default(UpdateTimeManager.UpdateCount);
			}
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x8C91C0", Offset = "0x8C91C0", VA = "0x8C91C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public UpdateTimeManager.UpdateMode UpdateMode
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x8C91F8", Offset = "0x8C91F8", VA = "0x8C91F8")]
			get
			{
				return default(UpdateTimeManager.UpdateMode);
			}
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x8C9228", Offset = "0x8C9228", VA = "0x8C9228")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public UpdateTimeManager UpdateTime
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0x8C91B8", Offset = "0x8C91B8", VA = "0x8C91B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public PhysicsManagerParticleData Particle
		{
			[Token(Token = "0x6001112")]
			[Address(RVA = "0x8C4644", Offset = "0x8C4644", VA = "0x8C4644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public PhysicsManagerBoneData Bone
		{
			[Token(Token = "0x6001113")]
			[Address(RVA = "0x8C9330", Offset = "0x8C9330", VA = "0x8C9330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public PhysicsManagerMeshData Mesh
		{
			[Token(Token = "0x6001114")]
			[Address(RVA = "0x8C5DD8", Offset = "0x8C5DD8", VA = "0x8C5DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		public PhysicsManagerTeamData Team
		{
			[Token(Token = "0x6001115")]
			[Address(RVA = "0x8C4B34", Offset = "0x8C4B34", VA = "0x8C4B34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		public PhysicsManagerWindData Wind
		{
			[Token(Token = "0x6001116")]
			[Address(RVA = "0x8C5440", Offset = "0x8C5440", VA = "0x8C5440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		public PhysicsManagerCompute Compute
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x8C5D9C", Offset = "0x8C5D9C", VA = "0x8C5D9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x8C9260", Offset = "0x8C9260", VA = "0x8C9260")]
		public void SetGlobalTimeScale(float timeScale)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x8C92F8", Offset = "0x8C92F8", VA = "0x8C92F8")]
		public float GetGlobalTimeScale()
		{
			return default(float);
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x8C9364", Offset = "0x8C9364", VA = "0x8C9364", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x8C93B4", Offset = "0x8C93B4", VA = "0x8C93B4", Slot = "6")]
		protected override void InitSingleton()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x8C9504", Offset = "0x8C9504", VA = "0x8C9504", Slot = "5")]
		protected override void DuplicateDetection(MagicaPhysicsManager duplicate)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x8C9574", Offset = "0x8C9574", VA = "0x8C9574")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x8C96C4", Offset = "0x8C96C4", VA = "0x8C96C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x8C9780", Offset = "0x8C9780", VA = "0x8C9780")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x8C9CF8", Offset = "0x8C9CF8", VA = "0x8C9CF8")]
		public MagicaPhysicsManager()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x666A38", Offset = "0x666A38")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666A38", Offset = "0x666A38")]
	public class MagicaBoneCloth : BaseCloth
	{
		[Token(Token = "0x4001415")]
		private const int DATA_VERSION = 2;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MeshData meshData;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int meshDataHash;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int meshDataVersion;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private BoneClothTarget clothTarget;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private List<Transform> useTransformList;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private List<Vector3> useTransformPositionList;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private List<Quaternion> useTransformRotationList;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private List<Vector3> useTransformScaleList;

		[Token(Token = "0x17000226")]
		public BoneClothTarget ClothTarget
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x9A5A1C", Offset = "0x9A5A1C", VA = "0x9A5A1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public MeshData MeshData
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x9A5A14", Offset = "0x9A5A14", VA = "0x9A5A14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private int UseTransformCount
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x9A62F8", Offset = "0x9A62F8", VA = "0x9A62F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x9A58EC", Offset = "0x9A58EC", VA = "0x9A58EC", Slot = "16")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x9A5A24", Offset = "0x9A5A24", VA = "0x9A5A24", Slot = "38")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x9A5D48", Offset = "0x9A5D48", VA = "0x9A5D48", Slot = "39")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x9A5D50", Offset = "0x9A5D50", VA = "0x9A5D50", Slot = "43")]
		protected override uint UserFlag(int index)
		{
			return default(uint);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x9A5DA0", Offset = "0x9A5DA0", VA = "0x9A5DA0", Slot = "44")]
		protected override Transform UserTransform(int index)
		{
			return null;
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x9A5E58", Offset = "0x9A5E58", VA = "0x9A5E58", Slot = "45")]
		protected override float3 UserTransformLocalPosition(int vindex)
		{
			return default(float3);
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x9A5F14", Offset = "0x9A5F14", VA = "0x9A5F14", Slot = "46")]
		protected override quaternion UserTransformLocalRotation(int vindex)
		{
			return default(quaternion);
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x9A6020", Offset = "0x9A6020", VA = "0x9A6020", Slot = "47")]
		public override int GetDeformerCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x9A6028", Offset = "0x9A6028", VA = "0x9A6028", Slot = "48")]
		public override BaseMeshDeformer GetDeformer(int index)
		{
			return null;
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x9A6030", Offset = "0x9A6030", VA = "0x9A6030", Slot = "49")]
		protected override MeshData GetMeshData()
		{
			return null;
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x9A6038", Offset = "0x9A6038", VA = "0x9A6038", Slot = "50")]
		protected override void WorkerInit()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x9A603C", Offset = "0x9A603C", VA = "0x9A603C", Slot = "51")]
		protected override void SetDeformerUseVertex(bool sw, BaseMeshDeformer deformer, int deformerIndex)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x9A6040", Offset = "0x9A6040", VA = "0x9A6040")]
		public List<Transform> GetTransformList()
		{
			return null;
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x9A5DA4", Offset = "0x9A5DA4", VA = "0x9A5DA4")]
		private Transform GetUseTransform(int index)
		{
			return null;
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x9A6358", Offset = "0x9A6358", VA = "0x9A6358", Slot = "29")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x9A6360", Offset = "0x9A6360", VA = "0x9A6360", Slot = "31")]
		public override void CreateVerifyData()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x9A63C4", Offset = "0x9A63C4", VA = "0x9A63C4", Slot = "30")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x9A669C", Offset = "0x9A669C", VA = "0x9A669C", Slot = "32")]
		public override string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x9A7340", Offset = "0x9A7340", VA = "0x9A7340", Slot = "33")]
		public override int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(int);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x9A767C", Offset = "0x9A767C", VA = "0x9A767C", Slot = "34")]
		public override List<int> GetEditorTriangleList()
		{
			return null;
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x9A7758", Offset = "0x9A7758", VA = "0x9A7758", Slot = "35")]
		public override List<int> GetEditorLineList()
		{
			return null;
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x9A7834", Offset = "0x9A7834", VA = "0x9A7834", Slot = "36")]
		public override List<int> GetSelectionList()
		{
			return null;
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x9A7934", Offset = "0x9A7934", VA = "0x9A7934", Slot = "37")]
		public override List<int> GetUseList()
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x9A7B1C", Offset = "0x9A7B1C", VA = "0x9A7B1C", Slot = "27")]
		public override List<ShareDataObject> GetAllShareDataObject()
		{
			return null;
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x9A7B94", Offset = "0x9A7B94", VA = "0x9A7B94", Slot = "28")]
		public override ShareDataObject DuplicateShareDataObject(ShareDataObject source)
		{
			return null;
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x9A5A4C", Offset = "0x9A5A4C", VA = "0x9A5A4C")]
		private void ResetParams()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x9A7C80", Offset = "0x9A7C80", VA = "0x9A7C80")]
		public MagicaBoneCloth()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x666A98", Offset = "0x666A98")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666A98", Offset = "0x666A98")]
	public class MagicaBoneSpring : BaseCloth
	{
		[Token(Token = "0x400141E")]
		private const int DATA_VERSION = 2;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MeshData meshData;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int meshDataHash;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int meshDataVersion;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private BoneClothTarget clothTarget;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private List<Transform> useTransformList;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private List<Vector3> useTransformPositionList;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private List<Quaternion> useTransformRotationList;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private List<Vector3> useTransformScaleList;

		[Token(Token = "0x17000229")]
		public BoneClothTarget ClothTarget
		{
			[Token(Token = "0x600113E")]
			[Address(RVA = "0x9A7EB0", Offset = "0x9A7EB0", VA = "0x9A7EB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public MeshData MeshData
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0x9A7EA8", Offset = "0x9A7EA8", VA = "0x9A7EA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private int UseTransformCount
		{
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x9A8618", Offset = "0x9A8618", VA = "0x9A8618")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x9A7D80", Offset = "0x9A7D80", VA = "0x9A7D80", Slot = "16")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x9A7EB8", Offset = "0x9A7EB8", VA = "0x9A7EB8", Slot = "38")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x9A81E0", Offset = "0x9A81E0", VA = "0x9A81E0", Slot = "39")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x9A81E8", Offset = "0x9A81E8", VA = "0x9A81E8", Slot = "40")]
		protected override void ClothInit()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x9A81F0", Offset = "0x9A81F0", VA = "0x9A81F0", Slot = "43")]
		protected override uint UserFlag(int index)
		{
			return default(uint);
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x9A8240", Offset = "0x9A8240", VA = "0x9A8240", Slot = "44")]
		protected override Transform UserTransform(int index)
		{
			return null;
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x9A82F8", Offset = "0x9A82F8", VA = "0x9A82F8", Slot = "45")]
		protected override float3 UserTransformLocalPosition(int vindex)
		{
			return default(float3);
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x9A83B4", Offset = "0x9A83B4", VA = "0x9A83B4", Slot = "46")]
		protected override quaternion UserTransformLocalRotation(int vindex)
		{
			return default(quaternion);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x9A84C0", Offset = "0x9A84C0", VA = "0x9A84C0", Slot = "47")]
		public override int GetDeformerCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x9A84C8", Offset = "0x9A84C8", VA = "0x9A84C8", Slot = "48")]
		public override BaseMeshDeformer GetDeformer(int index)
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x9A84D0", Offset = "0x9A84D0", VA = "0x9A84D0", Slot = "49")]
		protected override MeshData GetMeshData()
		{
			return null;
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x9A84D8", Offset = "0x9A84D8", VA = "0x9A84D8", Slot = "50")]
		protected override void WorkerInit()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x9A84DC", Offset = "0x9A84DC", VA = "0x9A84DC", Slot = "51")]
		protected override void SetDeformerUseVertex(bool sw, BaseMeshDeformer deformer, int deformerIndex)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x9A84E0", Offset = "0x9A84E0", VA = "0x9A84E0")]
		public List<Transform> GetTransformList()
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x9A8244", Offset = "0x9A8244", VA = "0x9A8244")]
		private Transform GetUseTransform(int index)
		{
			return null;
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x9A8678", Offset = "0x9A8678", VA = "0x9A8678", Slot = "29")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x9A8680", Offset = "0x9A8680", VA = "0x9A8680", Slot = "31")]
		public override void CreateVerifyData()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x9A86E4", Offset = "0x9A86E4", VA = "0x9A86E4", Slot = "30")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x9A8A58", Offset = "0x9A8A58", VA = "0x9A8A58", Slot = "32")]
		public override string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x9A9170", Offset = "0x9A9170", VA = "0x9A9170", Slot = "33")]
		public override int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(int);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x9A94AC", Offset = "0x9A94AC", VA = "0x9A94AC", Slot = "34")]
		public override List<int> GetEditorTriangleList()
		{
			return null;
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x9A9588", Offset = "0x9A9588", VA = "0x9A9588", Slot = "35")]
		public override List<int> GetEditorLineList()
		{
			return null;
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x9A9664", Offset = "0x9A9664", VA = "0x9A9664", Slot = "36")]
		public override List<int> GetSelectionList()
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x9A9764", Offset = "0x9A9764", VA = "0x9A9764", Slot = "37")]
		public override List<int> GetUseList()
		{
			return null;
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x9A994C", Offset = "0x9A994C", VA = "0x9A994C", Slot = "27")]
		public override List<ShareDataObject> GetAllShareDataObject()
		{
			return null;
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x9A99C4", Offset = "0x9A99C4", VA = "0x9A99C4", Slot = "28")]
		public override ShareDataObject DuplicateShareDataObject(ShareDataObject source)
		{
			return null;
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x9A7EE0", Offset = "0x9A7EE0", VA = "0x9A7EE0")]
		private void ResetParams()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x9A9AB0", Offset = "0x9A9AB0", VA = "0x9A9AB0")]
		public MagicaBoneSpring()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DF")]
	public class BoneClothTarget : IDataHash
	{
		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Transform> rootList;

		[Token(Token = "0x1700022C")]
		public int RootCount
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x83125C", Offset = "0x83125C", VA = "0x83125C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x83120C", Offset = "0x83120C", VA = "0x83120C", Slot = "4")]
		public int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x8312BC", Offset = "0x8312BC", VA = "0x8312BC")]
		public Transform GetRoot(int index)
		{
			return null;
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x831364", Offset = "0x831364", VA = "0x831364")]
		public int GetRootIndex(Transform root)
		{
			return default(int);
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x8313D4", Offset = "0x8313D4", VA = "0x8313D4")]
		public BoneClothTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E0")]
	public class ClothData : ShareDataObject
	{
		[Token(Token = "0x20002E1")]
		private class RestoreDistanceWork
		{
			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint vertexPair;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float dist;

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x997CB4", Offset = "0x997CB4", VA = "0x997CB4")]
			public RestoreDistanceWork()
			{
			}
		}

		[Token(Token = "0x20002E2")]
		private class VertexInfo
		{
			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int vertexIndex;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int parentVertexIndex;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<int> childVertexList;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexInfo parentInfo;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<VertexInfo> childInfoList;

			[Token(Token = "0x6001187")]
			[Address(RVA = "0x998CA0", Offset = "0x998CA0", VA = "0x998CA0")]
			public VertexInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666AF8", Offset = "0x666AF8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RestoreDistanceWork> <>9__73_0;

			[Token(Token = "0x6001189")]
			[Address(RVA = "0x998EB4", Offset = "0x998EB4", VA = "0x998EB4")]
			public <>c()
			{
			}

			[Token(Token = "0x600118A")]
			[Address(RVA = "0x998EBC", Offset = "0x998EBC", VA = "0x998EBC")]
			internal int <CreateConstraintData>b__73_0(RestoreDistanceWork a, RestoreDistanceWork b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666B08", Offset = "0x666B08")]
		private sealed class <>c__DisplayClass74_0
		{
			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> meshVertexDepthList;

			[Token(Token = "0x600118B")]
			[Address(RVA = "0x9984C4", Offset = "0x9984C4", VA = "0x9984C4")]
			public <>c__DisplayClass74_0()
			{
			}

			[Token(Token = "0x600118C")]
			[Address(RVA = "0x998F10", Offset = "0x998F10", VA = "0x998F10")]
			internal int <SortTetra>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666B18", Offset = "0x666B18")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> meshVertexDepthList;

			[Token(Token = "0x600118D")]
			[Address(RVA = "0x998AA4", Offset = "0x998AA4", VA = "0x998AA4")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x600118E")]
			[Address(RVA = "0x998FC8", Offset = "0x998FC8", VA = "0x998FC8")]
			internal int <CheckTetraDirection>b__0(ulong a, ulong b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001428")]
		private const int DATA_VERSION = 4;

		[Token(Token = "0x4001429")]
		public const uint VertexFlag_End = 65536u;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> useVertexList;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int> selectionData;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint maxLevel;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<uint> vertexFlagLevelList;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<float> vertexDepthList;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> rootList;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<int> parentList;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RestoreDistanceConstraint.RestoreDistanceData[] structDistanceDataList;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ReferenceDataIndex[] structDistanceReferenceList;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RestoreDistanceConstraint.RestoreDistanceData[] bendDistanceDataList;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ReferenceDataIndex[] bendDistanceReferenceList;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public RestoreDistanceConstraint.RestoreDistanceData[] nearDistanceDataList;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ReferenceDataIndex[] nearDistanceReferenceList;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ClampDistanceConstraint.ClampDistanceData[] rootDistanceDataList;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ReferenceDataIndex[] rootDistanceReferenceList;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public RestoreRotationConstraint.RotationData[] restoreRotationDataList;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ReferenceDataIndex[] restoreRotationReferenceList;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ClampRotationConstraint.ClampRotationData[] clampRotationDataList;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ClampRotationConstraint.ClampRotationRootInfo[] clampRotationRootInfoList;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AdjustRotationWorker.AdjustRotationData[] adjustRotationDataList;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TriangleBendConstraint.TriangleBendData[] triangleBendDataList;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ReferenceDataIndex[] triangleBendReferenceList;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int triangleBendWriteBufferCount;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public VolumeConstraint.VolumeData[] volumeDataList;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public ReferenceDataIndex[] volumeReferenceList;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int volumeWriteBufferCount;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public LineWorker.LineRotationData[] lineRotationDataList;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public LineWorker.LineRotationRootInfo[] lineRotationRootInfoList;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public EdgeCollisionConstraint.EdgeCollisionData[] edgeCollisionDataList;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ReferenceDataIndex[] edgeCollisionReferenceList;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int edgeCollisionWriteBufferCount;

		[Token(Token = "0x1700022D")]
		public int VertexUseCount
		{
			[Token(Token = "0x6001162")]
			[Address(RVA = "0x991854", Offset = "0x991854", VA = "0x991854")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022E")]
		public int StructDistanceConstraintCount
		{
			[Token(Token = "0x6001163")]
			[Address(RVA = "0x991AE8", Offset = "0x991AE8", VA = "0x991AE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022F")]
		public int BendDistanceConstraintCount
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x991B00", Offset = "0x991B00", VA = "0x991B00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000230")]
		public int NearDistanceConstraintCount
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x991B18", Offset = "0x991B18", VA = "0x991B18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000231")]
		public int ClampDistanceConstraintCount
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x991B30", Offset = "0x991B30", VA = "0x991B30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000232")]
		public int RestoreRotationConstraintCount
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0x991B48", Offset = "0x991B48", VA = "0x991B48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000233")]
		public int ClampRotationConstraintDataCount
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x991B60", Offset = "0x991B60", VA = "0x991B60")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000234")]
		public int ClampRotationConstraintRootCount
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x991BD8", Offset = "0x991BD8", VA = "0x991BD8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000235")]
		public int AdjustRotationConstraintCount
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x991B78", Offset = "0x991B78", VA = "0x991B78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000236")]
		public int TriangleBendConstraintCount
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x991B90", Offset = "0x991B90", VA = "0x991B90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000237")]
		public int EdgeCollisionConstraintCount
		{
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x991BF0", Offset = "0x991BF0", VA = "0x991BF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000238")]
		public int VolumeConstraintCount
		{
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x991BA8", Offset = "0x991BA8", VA = "0x991BA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000239")]
		public int LineRotationWorkerCount
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0x991BC0", Offset = "0x991BC0", VA = "0x991BC0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x9914B0", Offset = "0x9914B0", VA = "0x9914B0", Slot = "9")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x991C08", Offset = "0x991C08", VA = "0x991C08")]
		public bool IsInvalidVertex(int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x991C84", Offset = "0x991C84", VA = "0x991C84")]
		public bool IsFixedVertex(int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x991D00", Offset = "0x991D00", VA = "0x991D00")]
		public bool IsMoveVertex(int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x991D7C", Offset = "0x991D7C", VA = "0x991D7C")]
		public bool IsExtendVertex(int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x991DF8", Offset = "0x991DF8", VA = "0x991DF8")]
		public bool IsLastLevel(int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x991E00", Offset = "0x991E00", VA = "0x991E00")]
		public bool IsFlag(int vindex, uint flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x991E80", Offset = "0x991E80", VA = "0x991E80")]
		public void SetFlag(int vindex, uint flag)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x991F3C", Offset = "0x991F3C", VA = "0x991F3C")]
		public int GetLevel(int vindex)
		{
			return default(int);
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x991FB4", Offset = "0x991FB4", VA = "0x991FB4", Slot = "10")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x991FBC", Offset = "0x991FBC", VA = "0x991FBC", Slot = "11")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x99219C", Offset = "0x99219C", VA = "0x99219C")]
		public void CreateData(ClothParams clothParams, PhysicsTeamData teamData, MeshData meshData, IEditorMesh editMesh, List<int> selData, [Optional] Action<List<int>, List<int>, List<Vector3>, List<Vector3>, List<Vector3>, List<int>, List<int>> extensionAction)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x9924F8", Offset = "0x9924F8", VA = "0x9924F8")]
		private void CreateVertexData(int vertexCount, List<int> lineList, List<int> triangleList)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x992CBC", Offset = "0x992CBC", VA = "0x992CBC")]
		private void CreateConstraintData(ClothParams clothParams, PhysicsTeamData teamData, int vertexCount, List<Vector3> wposList, List<Vector3> wnorList, List<Vector3> wtanList, List<int> lineList, List<int> triangleList)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x998300", Offset = "0x998300", VA = "0x998300")]
		private List<int> SortTetra(int v0, int v1, int v2, int v3, List<float> meshVertexDepthList)
		{
			return null;
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x9984CC", Offset = "0x9984CC", VA = "0x9984CC")]
		private List<int> CheckTetraDirection(int v0, int v1, int v2, int v3, HashSet<ulong> trianglePackSet, List<float> meshVertexDepthList)
		{
			return null;
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x997FF4", Offset = "0x997FF4", VA = "0x997FF4")]
		private bool CalcTriangleBendRestAngle(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, out float restAngle)
		{
			return default(bool);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x997F48", Offset = "0x997F48", VA = "0x997F48")]
		private int RestTriangleVertex(int tindex, int v0, int v1, List<int> triangleList)
		{
			return default(int);
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x9975A0", Offset = "0x9975A0", VA = "0x9975A0")]
		private List<float> GetMeshVertexDepthList(int vertexCount, List<float> depthList)
		{
			return null;
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x996758", Offset = "0x996758", VA = "0x996758")]
		private List<int> GetUseParentVertexList(int vertexCount, List<HashSet<int>> vlink, List<Vector3> wposList, List<float> depthList)
		{
			return null;
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x997464", Offset = "0x997464", VA = "0x997464")]
		private List<int> GetUseRootVertexList(List<int> parentVertexList)
		{
			return null;
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x997D00", Offset = "0x997D00", VA = "0x997D00")]
		private List<VertexInfo> GetUseVertexInfoList(List<int> parentVertexList)
		{
			return null;
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x9976DC", Offset = "0x9976DC", VA = "0x9976DC")]
		private List<List<int>> GetUseRootLineList(List<int> parentVertexList)
		{
			return null;
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x998D40", Offset = "0x998D40", VA = "0x998D40")]
		public ClothData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E6")]
	public class ClothParams
	{
		[Token(Token = "0x20002E7")]
		public enum AdjustMode
		{
			[Token(Token = "0x4001499")]
			None,
			[Token(Token = "0x400149A")]
			XYMove,
			[Token(Token = "0x400149B")]
			XZMove,
			[Token(Token = "0x400149C")]
			YZMove
		}

		[Token(Token = "0x20002E8")]
		public enum ParamType
		{
			[Token(Token = "0x400149E")]
			Radius,
			[Token(Token = "0x400149F")]
			Mass,
			[Token(Token = "0x40014A0")]
			Gravity,
			[Token(Token = "0x40014A1")]
			Drag,
			[Token(Token = "0x40014A2")]
			MaxVelocity,
			[Token(Token = "0x40014A3")]
			WorldInfluence,
			[Token(Token = "0x40014A4")]
			ClampDistance,
			[Token(Token = "0x40014A5")]
			ClampPosition,
			[Token(Token = "0x40014A6")]
			ClampRotation,
			[Token(Token = "0x40014A7")]
			RestoreDistance,
			[Token(Token = "0x40014A8")]
			RestoreRotation,
			[Token(Token = "0x40014A9")]
			Spring,
			[Token(Token = "0x40014AA")]
			AdjustRotation,
			[Token(Token = "0x40014AB")]
			AirLine,
			[Token(Token = "0x40014AC")]
			TriangleBend,
			[Token(Token = "0x40014AD")]
			Volume,
			[Token(Token = "0x40014AE")]
			ColliderCollision,
			[Token(Token = "0x40014AF")]
			AdjustLine,
			[Token(Token = "0x40014B0")]
			DistanceDisable,
			[Token(Token = "0x40014B1")]
			ExternalForce
		}

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private BezierParam radius;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BezierParam mass;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useGravity;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BezierParam gravity;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool useDrag;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BezierParam drag;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool useMaxVelocity;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BezierParam maxVelocity;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform influenceTarget;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BezierParam worldMoveInfluence;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BezierParam worldRotationInfluence;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float massInfluence;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float windInfluence;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float windRandomScale;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private bool useDistanceDisable;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform disableReferenceObject;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float disableDistance;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float disableFadeDistance;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool useResetTeleport;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float teleportDistance;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float teleportRotation;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool useClampDistanceRatio;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float clampDistanceMinRatio;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float clampDistanceMaxRatio;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float clampDistanceVelocityInfluence;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private bool useClampPositionLength;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private BezierParam clampPositionLength;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float clampPositionRatioX;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float clampPositionRatioY;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float clampPositionRatioZ;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float clampPositionVelocityInfluence;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private bool useClampRotation;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private BezierParam clampRotationAngle;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float clampRotationVelocityInfluence;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float restoreDistanceVelocityInfluence;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private BezierParam structDistanceStiffness;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private bool useBendDistance;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int bendDistanceMaxCount;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private BezierParam bendDistanceStiffness;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private bool useNearDistance;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private BezierParam nearDistanceLength;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private BezierParam nearDistanceStiffness;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private bool useRestoreRotation;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private BezierParam restoreRotation;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float restoreRotationVelocityInfluence;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool useSpring;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private float springPower;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private float springRadius;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float springScaleX;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private float springScaleY;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private float springScaleZ;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private float springIntensity;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private BezierParam springDirectionAtten;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private BezierParam springDistanceAtten;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private bool useAdjustRotation;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private AdjustMode adjustMode;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private float adjustRotationPower;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		private bool useTriangleBend;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private BezierParam triangleBend;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private bool useVolume;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private float maxVolumeLength;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private BezierParam volumeStretchStiffness;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private BezierParam volumeShearStiffness;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private bool useCollision;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private float friction;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private bool keepInitialShape;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[SerializeField]
		private bool useLineAvarageRotation;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private HashSet<ParamType> changeSet;

		[Token(Token = "0x1700023A")]
		public bool UseGravity
		{
			[Token(Token = "0x6001197")]
			[Address(RVA = "0x999404", Offset = "0x999404", VA = "0x999404")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023B")]
		public bool UseDrag
		{
			[Token(Token = "0x600119A")]
			[Address(RVA = "0x9994DC", Offset = "0x9994DC", VA = "0x9994DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023C")]
		public bool UseMaxVelocity
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x9995B4", Offset = "0x9995B4", VA = "0x9995B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023D")]
		public float MassInfluence
		{
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x999640", Offset = "0x999640", VA = "0x999640")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023E")]
		public float WindInfluence
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x999648", Offset = "0x999648", VA = "0x999648")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023F")]
		public float WindRandomScale
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x999650", Offset = "0x999650", VA = "0x999650")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000240")]
		public bool UseResetTeleport
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x999710", Offset = "0x999710", VA = "0x999710")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000241")]
		public float TeleportDistance
		{
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x999718", Offset = "0x999718", VA = "0x999718")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000242")]
		public float TeleportRotation
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x999734", Offset = "0x999734", VA = "0x999734")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000243")]
		public bool UseDistanceDisable
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x999764", Offset = "0x999764", VA = "0x999764")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000244")]
		public Transform DisableReferenceObject
		{
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x99976C", Offset = "0x99976C", VA = "0x99976C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x999774", Offset = "0x999774", VA = "0x999774")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public float DisableDistance
		{
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x99977C", Offset = "0x99977C", VA = "0x99977C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000246")]
		public float DisableFadeDistance
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x999784", Offset = "0x999784", VA = "0x999784")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000247")]
		public bool UseClampDistanceRatio
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x997CE8", Offset = "0x997CE8", VA = "0x997CE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		public float ClampDistanceMinRatio
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x9997A0", Offset = "0x9997A0", VA = "0x9997A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000249")]
		public float ClampDistanceMaxRatio
		{
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x9997B8", Offset = "0x9997B8", VA = "0x9997B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024A")]
		public float ClampDistanceVelocityInfluence
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x9997D0", Offset = "0x9997D0", VA = "0x9997D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024B")]
		public bool UseClampPositionLength
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x999874", Offset = "0x999874", VA = "0x999874")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024C")]
		public Vector3 ClampPositionAxisRatio
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x99987C", Offset = "0x99987C", VA = "0x99987C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700024D")]
		public float ClampPositionVelocityInfluence
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x9998C0", Offset = "0x9998C0", VA = "0x9998C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024E")]
		public bool UseClampRotation
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x997CF8", Offset = "0x997CF8", VA = "0x997CF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024F")]
		public float ClampRotationVelocityInfluence
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x999954", Offset = "0x999954", VA = "0x999954")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000250")]
		public float RestoreDistanceVelocityInfluence
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x9999C0", Offset = "0x9999C0", VA = "0x9999C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000251")]
		public bool UseBendDistance
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x997CAC", Offset = "0x997CAC", VA = "0x997CAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000252")]
		public int BendDistanceMaxCount
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x997CD0", Offset = "0x997CD0", VA = "0x997CD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000253")]
		public bool UseNearDistance
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x997CD8", Offset = "0x997CD8", VA = "0x997CD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000254")]
		public bool UseRestoreRotation
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x997CF0", Offset = "0x997CF0", VA = "0x997CF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000255")]
		public float RestoreRotationVelocityInfluence
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x999A5C", Offset = "0x999A5C", VA = "0x999A5C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000256")]
		public bool UseSpring
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x999B58", Offset = "0x999B58", VA = "0x999B58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000257")]
		public float SpringRadius
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x999B78", Offset = "0x999B78", VA = "0x999B78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000258")]
		public Vector3 SpringRadiusScale
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x999B80", Offset = "0x999B80", VA = "0x999B80")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000259")]
		public float SpringIntensity
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x999BC0", Offset = "0x999BC0", VA = "0x999BC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700025A")]
		public bool UseAdjustRotation
		{
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x999C5C", Offset = "0x999C5C", VA = "0x999C5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025B")]
		public AdjustMode AdjustRotationMode
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x999C64", Offset = "0x999C64", VA = "0x999C64")]
			get
			{
				return default(AdjustMode);
			}
		}

		[Token(Token = "0x1700025C")]
		public Vector3 AdjustRotationVector
		{
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x999C6C", Offset = "0x999C6C", VA = "0x999C6C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700025D")]
		public bool UseTriangleBend
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x997F40", Offset = "0x997F40", VA = "0x997F40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025E")]
		public bool UseVolume
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x999E58", Offset = "0x999E58", VA = "0x999E58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025F")]
		public bool UseCollision
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x999E98", Offset = "0x999E98", VA = "0x999E98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000260")]
		public float Friction
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x999EA0", Offset = "0x999EA0", VA = "0x999EA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000261")]
		public bool KeepInitialShape
		{
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x999EA8", Offset = "0x999EA8", VA = "0x999EA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000262")]
		public bool UseLineAvarageRotation
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x999EB0", Offset = "0x999EB0", VA = "0x999EB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x99915C", Offset = "0x99915C", VA = "0x99915C")]
		public void SetChangeParam(ParamType ptype)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x9991CC", Offset = "0x9991CC", VA = "0x9991CC")]
		public bool ChangedParam(ParamType ptype)
		{
			return default(bool);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x99923C", Offset = "0x99923C", VA = "0x99923C")]
		public void ClearChangeParam()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x99929C", Offset = "0x99929C", VA = "0x99929C")]
		public void SetRadius(float sval, float eval)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x9992F0", Offset = "0x9992F0", VA = "0x9992F0")]
		public float GetRadius(float depth)
		{
			return default(float);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x999330", Offset = "0x999330", VA = "0x999330")]
		public void SetMass(float sval, float eval, bool useEval = true, float cval = 0f, bool useCval = false)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x9993A0", Offset = "0x9993A0", VA = "0x9993A0")]
		public BezierParam GetMass()
		{
			return null;
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x9993A8", Offset = "0x9993A8", VA = "0x9993A8")]
		public void SetGravity(bool sw, float sval = -9.8f, float eval = -9.8f)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x99940C", Offset = "0x99940C", VA = "0x99940C")]
		public BezierParam GetGravity()
		{
			return null;
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x999480", Offset = "0x999480", VA = "0x999480")]
		public void SetDrag(bool sw, float sval = 0.015f, float eval = 0.015f)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x9994E4", Offset = "0x9994E4", VA = "0x9994E4")]
		public BezierParam GetDrag()
		{
			return null;
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x999558", Offset = "0x999558", VA = "0x999558")]
		public void SetMaxVelocity(bool sw, float sval = 3f, float eval = 3f)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x9995BC", Offset = "0x9995BC", VA = "0x9995BC")]
		public BezierParam GetMaxVelocity()
		{
			return null;
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x999634", Offset = "0x999634", VA = "0x999634")]
		public void SetExternalForce(float massInfluence, float windInfluence, float windRandomScale)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x999658", Offset = "0x999658", VA = "0x999658")]
		public void SetWorldInfluence(float moveval, float rotval)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x9996E0", Offset = "0x9996E0", VA = "0x9996E0")]
		public BezierParam GetWorldMoveInfluence()
		{
			return null;
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x9996E8", Offset = "0x9996E8", VA = "0x9996E8")]
		public BezierParam GetWorldRotationInfluence()
		{
			return null;
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x9996F0", Offset = "0x9996F0", VA = "0x9996F0")]
		public Transform GetInfluenceTarget()
		{
			return null;
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x9996F8", Offset = "0x9996F8", VA = "0x9996F8")]
		public void SetInfluenceTarget(Transform t)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x999700", Offset = "0x999700", VA = "0x999700")]
		public void SetTeleport(bool sw, float distance = 0.2f, float rotation = 45f)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x999750", Offset = "0x999750", VA = "0x999750")]
		public void SetDistanceDisable(bool sw, float distance = 20f, float fadeDistance = 5f, [Optional] Transform referenceObject)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x99978C", Offset = "0x99978C", VA = "0x99978C")]
		public void SetClampDistanceRatio(bool sw, float minval = 0.1f, float maxval = 1.05f, float influence = 0.5f)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x9997E8", Offset = "0x9997E8", VA = "0x9997E8")]
		public void SetClampPositionLength(bool sw, float sval = 0.03f, float eval = 0.2f, float ratioX = 1f, float ratioY = 1f, float ratioZ = 1f, float influence = 0.5f)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x9998B8", Offset = "0x9998B8", VA = "0x9998B8")]
		public BezierParam GetClampPositionLength()
		{
			return null;
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x9998D8", Offset = "0x9998D8", VA = "0x9998D8")]
		public void SetClampRotationAngle(bool sw, float sval = 30f, float eval = 30f, float influence = 0.3f)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x99994C", Offset = "0x99994C", VA = "0x99994C")]
		public BezierParam GetClampRotationAngle()
		{
			return null;
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x99996C", Offset = "0x99996C", VA = "0x99996C")]
		public void SetRestoreDistance(float influence = 1f, float structStiffness = 1f)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x9999C8", Offset = "0x9999C8", VA = "0x9999C8")]
		public BezierParam GetStructDistanceStiffness()
		{
			return null;
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x9999D0", Offset = "0x9999D0", VA = "0x9999D0")]
		public BezierParam GetBendDistanceStiffness()
		{
			return null;
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x997CE0", Offset = "0x997CE0", VA = "0x997CE0")]
		public BezierParam GetNearDistanceLength()
		{
			return null;
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x9999D8", Offset = "0x9999D8", VA = "0x9999D8")]
		public BezierParam GetNearDistanceStiffness()
		{
			return null;
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x9999E0", Offset = "0x9999E0", VA = "0x9999E0")]
		public void SetRestoreRotation(bool sw, float sval = 0.02f, float eval = 0.001f, float influence = 0.3f)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x999A54", Offset = "0x999A54", VA = "0x999A54")]
		public BezierParam GetRotationPower()
		{
			return null;
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x999A74", Offset = "0x999A74", VA = "0x999A74")]
		public void SetSpring(bool sw, float power = 0f, float r = 0f, float sclx = 1f, float scly = 1f, float sclz = 1f, float intensity = 1f)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x999A98", Offset = "0x999A98", VA = "0x999A98")]
		public void SetSpringDirectionAtten(float sval, float eval, float cval)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x999AF8", Offset = "0x999AF8", VA = "0x999AF8")]
		public void SetSpringDistanceAtten(float sval, float eval, float cval)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x999B60", Offset = "0x999B60", VA = "0x999B60")]
		public float GetSpringPower()
		{
			return default(float);
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x999BC8", Offset = "0x999BC8", VA = "0x999BC8")]
		public float GetSpringDirectionAtten(float ratio)
		{
			return default(float);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x999C08", Offset = "0x999C08", VA = "0x999C08")]
		public float GetSpringDistanceAtten(float ratio)
		{
			return default(float);
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x999C48", Offset = "0x999C48", VA = "0x999C48")]
		public void SetAdjustRotation(bool sw, AdjustMode amode = AdjustMode.None, float power = 0f)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x999D04", Offset = "0x999D04", VA = "0x999D04")]
		public void SetTriangleBend(bool sw, float sval = 0.03f, float eval = 0.03f)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x999D60", Offset = "0x999D60", VA = "0x999D60")]
		public float GetTriangleBendPower(float depth)
		{
			return default(float);
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x999DBC", Offset = "0x999DBC", VA = "0x999DBC")]
		public BezierParam GetTriangleBendStiffness()
		{
			return null;
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x999DC4", Offset = "0x999DC4", VA = "0x999DC4")]
		public void SetVolume(bool sw, float maxLength = 0.05f, float stiffness = 0.5f, float shear = 0.5f)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x999E60", Offset = "0x999E60", VA = "0x999E60")]
		public float GetMaxVolumeLength()
		{
			return default(float);
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x999E78", Offset = "0x999E78", VA = "0x999E78")]
		public BezierParam GetVolumeStretchStiffness()
		{
			return null;
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x999E80", Offset = "0x999E80", VA = "0x999E80")]
		public BezierParam GetVolumeShearStiffness()
		{
			return null;
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x999E88", Offset = "0x999E88", VA = "0x999E88")]
		public void SetCollision(bool sw, float friction = 0.2f)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x999EB8", Offset = "0x999EB8", VA = "0x999EB8")]
		public ClothParams()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class ClothSetup
	{
		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666B28", Offset = "0x666B28")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ClothData clothData;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<int, uint> funcUserFlag;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClothParams param;

			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x99C394", Offset = "0x99C394", VA = "0x99C394")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x99DCE0", Offset = "0x99DCE0", VA = "0x99DCE0")]
			internal uint <ClothInit>b__0(int i)
			{
				return default(uint);
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x99DDDC", Offset = "0x99DDDC", VA = "0x99DDDC")]
			internal float <ClothInit>b__1(int i)
			{
				return default(float);
			}

			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x99DE5C", Offset = "0x99DE5C", VA = "0x99DE5C")]
			internal float <ClothInit>b__2(int i)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int teamBoneIndex;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float distanceBlendRatio;

		[Token(Token = "0x17000263")]
		public float DistanceBlendRatio
		{
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x99C9A0", Offset = "0x99C9A0", VA = "0x99C9A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x99C9A8", Offset = "0x99C9A8", VA = "0x99C9A8")]
			set
			{
			}
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x99A380", Offset = "0x99A380", VA = "0x99A380")]
		public void ClothInit(PhysicsTeam team, MeshData meshData, ClothData clothData, ClothParams param, Func<int, uint> funcUserFlag)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x99C628", Offset = "0x99C628", VA = "0x99C628")]
		public void ClothDispose(PhysicsTeam team)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x99C70C", Offset = "0x99C70C", VA = "0x99C70C")]
		public void ClothActive(PhysicsTeam team, ClothParams param)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x99C890", Offset = "0x99C890", VA = "0x99C890")]
		public void ClothInactive(PhysicsTeam team)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x99C9B0", Offset = "0x99C9B0", VA = "0x99C9B0")]
		public void ChangeData(PhysicsTeam team, ClothParams param)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x99DCD0", Offset = "0x99DCD0", VA = "0x99DCD0")]
		public ClothSetup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EB")]
	public class SelectionData : ShareDataObject
	{
		[Serializable]
		[Token(Token = "0x20002EC")]
		public class DeformerSelection : IDataHash
		{
			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> selectData;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<ulong> vertexHashList;

			[Token(Token = "0x6001200")]
			[Address(RVA = "0x92E124", Offset = "0x92E124", VA = "0x92E124", Slot = "4")]
			public int GetDataHash()
			{
				return default(int);
			}

			[Token(Token = "0x6001201")]
			[Address(RVA = "0x92CBF4", Offset = "0x92CBF4", VA = "0x92CBF4")]
			public bool Compare(DeformerSelection data)
			{
				return default(bool);
			}

			[Token(Token = "0x6001202")]
			[Address(RVA = "0x92E014", Offset = "0x92E014", VA = "0x92E014")]
			public DeformerSelection()
			{
			}
		}

		[Token(Token = "0x40014B7")]
		private const int DATA_VERSION = 2;

		[Token(Token = "0x40014B8")]
		public const int Invalid = 0;

		[Token(Token = "0x40014B9")]
		public const int Move = 1;

		[Token(Token = "0x40014BA")]
		public const int Fixed = 2;

		[Token(Token = "0x40014BB")]
		public const int Extend = 3;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<DeformerSelection> selectionList;

		[Token(Token = "0x17000264")]
		public int DeformerCount
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x92C940", Offset = "0x92C940", VA = "0x92C940")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x92C9A0", Offset = "0x92C9A0", VA = "0x92C9A0", Slot = "9")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x92C9F0", Offset = "0x92C9F0", VA = "0x92C9F0", Slot = "10")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x92C9F8", Offset = "0x92C9F8", VA = "0x92C9F8", Slot = "11")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x92CA9C", Offset = "0x92CA9C", VA = "0x92CA9C")]
		public bool Compare(SelectionData sel)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x92CE04", Offset = "0x92CE04", VA = "0x92CE04")]
		public List<int> GetSelectionData(MeshData meshData, List<MeshData> childMeshDataList)
		{
			return null;
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x92D25C", Offset = "0x92D25C", VA = "0x92D25C")]
		private int GetSelection(MeshData meshData, int vindex, Dictionary<int, List<uint>> dict, List<MeshData> childMeshDataList, List<Dictionary<ulong, int>> hashList)
		{
			return default(int);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x92D870", Offset = "0x92D870", VA = "0x92D870")]
		public void SetSelectionData(MeshData meshData, List<int> selects, List<MeshData> childMeshDataList)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x92CFF0", Offset = "0x92CFF0", VA = "0x92CFF0")]
		private List<Dictionary<ulong, int>> GetSelectionVertexHashList()
		{
			return null;
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x92E0AC", Offset = "0x92E0AC", VA = "0x92E0AC")]
		public SelectionData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002ED")]
	public class SpringData : ShareDataObject
	{
		[Serializable]
		[Token(Token = "0x20002EE")]
		public class DeformerData : IDataHash
		{
			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int deformerDataHash;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int vertexCount;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] useVertexIndexList;

			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float[] weightList;

			[Token(Token = "0x17000266")]
			public int UseVertexCount
			{
				[Token(Token = "0x6001208")]
				[Address(RVA = "0x92EBF8", Offset = "0x92EBF8", VA = "0x92EBF8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001209")]
			[Address(RVA = "0x92EB3C", Offset = "0x92EB3C", VA = "0x92EB3C", Slot = "4")]
			public int GetDataHash()
			{
				return default(int);
			}

			[Token(Token = "0x600120A")]
			[Address(RVA = "0x92EC80", Offset = "0x92EC80", VA = "0x92EC80")]
			public DeformerData()
			{
			}
		}

		[Token(Token = "0x40014BF")]
		private const int DATA_VERSION = 2;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeformerData deformerData;

		[Token(Token = "0x17000265")]
		public int UseVertexCount
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x92EBD8", Offset = "0x92EBD8", VA = "0x92EBD8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x92EB2C", Offset = "0x92EB2C", VA = "0x92EB2C", Slot = "9")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x92EC10", Offset = "0x92EC10", VA = "0x92EC10", Slot = "10")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x92EC18", Offset = "0x92EC18", VA = "0x92EC18", Slot = "11")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x92EC78", Offset = "0x92EC78", VA = "0x92EC78")]
		public SpringData()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x666B38", Offset = "0x666B38")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666B38", Offset = "0x666B38")]
	public class MagicaMeshCloth : BaseCloth
	{
		[Token(Token = "0x40014C5")]
		private const int DATA_VERSION = 1;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MagicaVirtualDeformer virtualDeformer;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int virtualDeformerHash;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int virtualDeformerVersion;

		[Token(Token = "0x17000267")]
		public VirtualMeshDeformer Deformer
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0x8C567C", Offset = "0x8C567C", VA = "0x8C567C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x8C562C", Offset = "0x8C562C", VA = "0x8C562C", Slot = "16")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x8C5758", Offset = "0x8C5758", VA = "0x8C5758", Slot = "38")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x8C5AD8", Offset = "0x8C5AD8", VA = "0x8C5AD8", Slot = "39")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x8C5AE0", Offset = "0x8C5AE0", VA = "0x8C5AE0", Slot = "22")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x8C5AE8", Offset = "0x8C5AE8", VA = "0x8C5AE8", Slot = "25")]
		protected override void OnActive()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x8C5AF0", Offset = "0x8C5AF0", VA = "0x8C5AF0", Slot = "26")]
		protected override void OnInactive()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x8C5AF8", Offset = "0x8C5AF8", VA = "0x8C5AF8", Slot = "23")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x8C5B00", Offset = "0x8C5B00", VA = "0x8C5B00", Slot = "24")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x8C5B08", Offset = "0x8C5B08", VA = "0x8C5B08", Slot = "43")]
		protected override uint UserFlag(int index)
		{
			return default(uint);
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x8C5B10", Offset = "0x8C5B10", VA = "0x8C5B10", Slot = "44")]
		protected override Transform UserTransform(int index)
		{
			return null;
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x8C5B18", Offset = "0x8C5B18", VA = "0x8C5B18", Slot = "45")]
		protected override float3 UserTransformLocalPosition(int vindex)
		{
			return default(float3);
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x8C5B24", Offset = "0x8C5B24", VA = "0x8C5B24", Slot = "46")]
		protected override quaternion UserTransformLocalRotation(int vindex)
		{
			return default(quaternion);
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x8C5B90", Offset = "0x8C5B90", VA = "0x8C5B90", Slot = "47")]
		public override int GetDeformerCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x8C5B98", Offset = "0x8C5B98", VA = "0x8C5B98", Slot = "48")]
		public override BaseMeshDeformer GetDeformer(int index)
		{
			return null;
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x8C5B9C", Offset = "0x8C5B9C", VA = "0x8C5B9C", Slot = "49")]
		protected override MeshData GetMeshData()
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x8C5BD0", Offset = "0x8C5BD0", VA = "0x8C5BD0", Slot = "50")]
		protected override void WorkerInit()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x8C6000", Offset = "0x8C6000", VA = "0x8C6000", Slot = "51")]
		protected override void SetDeformerUseVertex(bool sw, BaseMeshDeformer deformer, int deformerIndex)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x8C6134", Offset = "0x8C6134", VA = "0x8C6134", Slot = "29")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x8C613C", Offset = "0x8C613C", VA = "0x8C613C", Slot = "31")]
		public override void CreateVerifyData()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x8C61A0", Offset = "0x8C61A0", VA = "0x8C61A0", Slot = "30")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x8C6304", Offset = "0x8C6304", VA = "0x8C6304", Slot = "32")]
		public override string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x8C7108", Offset = "0x8C7108", VA = "0x8C7108")]
		public bool IsValidPointSelect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x8C7260", Offset = "0x8C7260", VA = "0x8C7260", Slot = "33")]
		public override int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(int);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x8C72B8", Offset = "0x8C72B8", VA = "0x8C72B8", Slot = "34")]
		public override List<int> GetEditorTriangleList()
		{
			return null;
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x8C72F0", Offset = "0x8C72F0", VA = "0x8C72F0", Slot = "35")]
		public override List<int> GetEditorLineList()
		{
			return null;
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x8C7328", Offset = "0x8C7328", VA = "0x8C7328", Slot = "36")]
		public override List<int> GetSelectionList()
		{
			return null;
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x8C74CC", Offset = "0x8C74CC", VA = "0x8C74CC", Slot = "37")]
		public override List<int> GetUseList()
		{
			return null;
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x8C76D0", Offset = "0x8C76D0", VA = "0x8C76D0", Slot = "27")]
		public override List<ShareDataObject> GetAllShareDataObject()
		{
			return null;
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x8C7770", Offset = "0x8C7770", VA = "0x8C7770", Slot = "28")]
		public override ShareDataObject DuplicateShareDataObject(ShareDataObject source)
		{
			return null;
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x8C5780", Offset = "0x8C5780", VA = "0x8C5780")]
		private void ResetParams()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x8C78F4", Offset = "0x8C78F4", VA = "0x8C78F4")]
		public MagicaMeshCloth()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x666B9C", Offset = "0x666B9C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666B9C", Offset = "0x666B9C")]
	public class MagicaMeshSpring : BaseCloth
	{
		[Token(Token = "0x20002F1")]
		public enum Axis
		{
			[Token(Token = "0x40014D3")]
			X,
			[Token(Token = "0x40014D4")]
			Y,
			[Token(Token = "0x40014D5")]
			Z,
			[Token(Token = "0x40014D6")]
			InverseX,
			[Token(Token = "0x40014D7")]
			InverseY,
			[Token(Token = "0x40014D8")]
			InverseZ
		}

		[Token(Token = "0x40014C9")]
		private const int DATA_VERSION = 1;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MagicaVirtualDeformer virtualDeformer;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int virtualDeformerHash;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int virtualDeformerVersion;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform centerTransform;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Axis directionAxis;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SpringData springData;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private int springDataHash;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private int springDataVersion;

		[Token(Token = "0x17000268")]
		public VirtualMeshDeformer Deformer
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0x8C799C", Offset = "0x8C799C", VA = "0x8C799C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		public SpringData SpringData
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x8C7994", Offset = "0x8C7994", VA = "0x8C7994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		public int UseVertexCount
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x8C7A38", Offset = "0x8C7A38", VA = "0x8C7A38")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026B")]
		public Transform CenterTransform
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x8C7AD8", Offset = "0x8C7AD8", VA = "0x8C7AD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001230")]
			[Address(RVA = "0x8C7AE0", Offset = "0x8C7AE0", VA = "0x8C7AE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public Axis DirectionAxis
		{
			[Token(Token = "0x6001231")]
			[Address(RVA = "0x8C7AE8", Offset = "0x8C7AE8", VA = "0x8C7AE8")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6001232")]
			[Address(RVA = "0x8C7AF0", Offset = "0x8C7AF0", VA = "0x8C7AF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public Vector3 CenterTransformDirection
		{
			[Token(Token = "0x6001233")]
			[Address(RVA = "0x8C7AF8", Offset = "0x8C7AF8", VA = "0x8C7AF8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x8C78FC", Offset = "0x8C78FC", VA = "0x8C78FC", Slot = "16")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x8C7CE4", Offset = "0x8C7CE4", VA = "0x8C7CE4")]
		public SpringData.DeformerData GetDeformerData()
		{
			return null;
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x8C7D10", Offset = "0x8C7D10", VA = "0x8C7D10", Slot = "38")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x8C80F0", Offset = "0x8C80F0", VA = "0x8C80F0", Slot = "39")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x8C80F8", Offset = "0x8C80F8", VA = "0x8C80F8", Slot = "40")]
		protected override void ClothInit()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x8C8288", Offset = "0x8C8288", VA = "0x8C8288", Slot = "43")]
		protected override uint UserFlag(int index)
		{
			return default(uint);
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x8C8290", Offset = "0x8C8290", VA = "0x8C8290", Slot = "44")]
		protected override Transform UserTransform(int index)
		{
			return null;
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x8C8298", Offset = "0x8C8298", VA = "0x8C8298", Slot = "45")]
		protected override float3 UserTransformLocalPosition(int vindex)
		{
			return default(float3);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x8C82D0", Offset = "0x8C82D0", VA = "0x8C82D0", Slot = "46")]
		protected override quaternion UserTransformLocalRotation(int vindex)
		{
			return default(quaternion);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x8C8380", Offset = "0x8C8380", VA = "0x8C8380", Slot = "47")]
		public override int GetDeformerCount()
		{
			return default(int);
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x8C83F8", Offset = "0x8C83F8", VA = "0x8C83F8", Slot = "48")]
		public override BaseMeshDeformer GetDeformer(int index)
		{
			return null;
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x8C8490", Offset = "0x8C8490", VA = "0x8C8490", Slot = "49")]
		protected override MeshData GetMeshData()
		{
			return null;
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x8C8498", Offset = "0x8C8498", VA = "0x8C8498", Slot = "50")]
		protected override void WorkerInit()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x8C86F0", Offset = "0x8C86F0", VA = "0x8C86F0", Slot = "51")]
		protected override void SetDeformerUseVertex(bool sw, BaseMeshDeformer deformer, int deformerIndex)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x8C87DC", Offset = "0x8C87DC", VA = "0x8C87DC", Slot = "29")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x8C87E4", Offset = "0x8C87E4", VA = "0x8C87E4", Slot = "31")]
		public override void CreateVerifyData()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x8C8888", Offset = "0x8C8888", VA = "0x8C8888", Slot = "30")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x8C8A74", Offset = "0x8C8A74", VA = "0x8C8A74", Slot = "32")]
		public override string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x8C8DFC", Offset = "0x8C8DFC", VA = "0x8C8DFC")]
		public void VerifyDeformer()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x8C8E00", Offset = "0x8C8E00", VA = "0x8C8E00", Slot = "33")]
		public override int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(int);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x8C8FFC", Offset = "0x8C8FFC", VA = "0x8C8FFC", Slot = "34")]
		public override List<int> GetEditorTriangleList()
		{
			return null;
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x8C9004", Offset = "0x8C9004", VA = "0x8C9004", Slot = "35")]
		public override List<int> GetEditorLineList()
		{
			return null;
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x8C900C", Offset = "0x8C900C", VA = "0x8C900C", Slot = "36")]
		public override List<int> GetSelectionList()
		{
			return null;
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x8C9014", Offset = "0x8C9014", VA = "0x8C9014", Slot = "37")]
		public override List<int> GetUseList()
		{
			return null;
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x8C901C", Offset = "0x8C901C", VA = "0x8C901C", Slot = "27")]
		public override List<ShareDataObject> GetAllShareDataObject()
		{
			return null;
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x8C9094", Offset = "0x8C9094", VA = "0x8C9094", Slot = "28")]
		public override ShareDataObject DuplicateShareDataObject(ShareDataObject source)
		{
			return null;
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x8C7D38", Offset = "0x8C7D38", VA = "0x8C7D38")]
		private void ResetParams()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x8C9180", Offset = "0x8C9180", VA = "0x8C9180")]
		public MagicaMeshSpring()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public static class Define
	{
		[Token(Token = "0x20002F3")]
		public enum Error
		{
			[Token(Token = "0x40014DA")]
			None = 0,
			[Token(Token = "0x40014DB")]
			InvalidDataHash = 100,
			[Token(Token = "0x40014DC")]
			DataVersionMismatch = 101,
			[Token(Token = "0x40014DD")]
			MeshDataNull = 200,
			[Token(Token = "0x40014DE")]
			MeshDataHashMismatch = 201,
			[Token(Token = "0x40014DF")]
			MeshDataVersionMismatch = 202,
			[Token(Token = "0x40014E0")]
			ClothDataNull = 300,
			[Token(Token = "0x40014E1")]
			ClothDataHashMismatch = 301,
			[Token(Token = "0x40014E2")]
			ClothDataVersionMismatch = 302,
			[Token(Token = "0x40014E3")]
			ClothSelectionHashMismatch = 400,
			[Token(Token = "0x40014E4")]
			ClothSelectionVersionMismatch = 401,
			[Token(Token = "0x40014E5")]
			ClothTargetRootCountMismatch = 500,
			[Token(Token = "0x40014E6")]
			UseTransformNull = 600,
			[Token(Token = "0x40014E7")]
			UseTransformCountZero = 601,
			[Token(Token = "0x40014E8")]
			UseTransformCountMismatch = 602,
			[Token(Token = "0x40014E9")]
			DeformerNull = 700,
			[Token(Token = "0x40014EA")]
			DeformerHashMismatch = 701,
			[Token(Token = "0x40014EB")]
			DeformerVersionMismatch = 702,
			[Token(Token = "0x40014EC")]
			DeformerCountZero = 703,
			[Token(Token = "0x40014ED")]
			DeformerCountMismatch = 704,
			[Token(Token = "0x40014EE")]
			VertexCountZero = 800,
			[Token(Token = "0x40014EF")]
			VertexUseCountZero = 801,
			[Token(Token = "0x40014F0")]
			VertexCountMismatch = 802,
			[Token(Token = "0x40014F1")]
			RootListCountMismatch = 900,
			[Token(Token = "0x40014F2")]
			SelectionDataCountMismatch = 1000,
			[Token(Token = "0x40014F3")]
			SelectionCountZero = 1001,
			[Token(Token = "0x40014F4")]
			CenterTransformNull = 1100,
			[Token(Token = "0x40014F5")]
			SpringDataNull = 1200,
			[Token(Token = "0x40014F6")]
			SpringDataHashMismatch = 1201,
			[Token(Token = "0x40014F7")]
			SpringDataVersionMismatch = 1202,
			[Token(Token = "0x40014F8")]
			TargetObjectNull = 1300,
			[Token(Token = "0x40014F9")]
			SharedMeshNull = 1400,
			[Token(Token = "0x40014FA")]
			SharedMeshCannotRead = 1401,
			[Token(Token = "0x40014FB")]
			MeshOptimizeMismatch = 1500,
			[Token(Token = "0x40014FC")]
			BoneListZero = 1600,
			[Token(Token = "0x40014FD")]
			BoneListNull = 1601
		}

		[Token(Token = "0x20002F4")]
		public static class OptimizeMesh
		{
			[Token(Token = "0x40014FE")]
			public const int Unknown = 0;

			[Token(Token = "0x40014FF")]
			public const int Nothing = 1;

			[Token(Token = "0x4001500")]
			public const int Unity2018_On = 16;

			[Token(Token = "0x4001501")]
			public const int Unity2019_PolygonOrder = 256;

			[Token(Token = "0x4001502")]
			public const int Unity2019_VertexOrder = 512;
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x9A0314", Offset = "0x9A0314", VA = "0x9A0314")]
		public static string GetErrorMessage(Error err)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002F5")]
	public abstract class BaseMeshDeformer : IEditorMesh, IDataVerify, IDataHash
	{
		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private MeshData meshData;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject targetObject;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int dataHash;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int dataVersion;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected RuntimeStatus status;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MonoBehaviour parent;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66FC90", Offset = "0x66FC90")]
		private int <MeshIndex>k__BackingField;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66FCA0", Offset = "0x66FCA0")]
		private int <VertexCount>k__BackingField;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66FCB0", Offset = "0x66FCB0")]
		private int <SkinningVertexCount>k__BackingField;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66FCC0", Offset = "0x66FCC0")]
		private int <TriangleCount>k__BackingField;

		[Token(Token = "0x1700026E")]
		public MonoBehaviour Parent
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x8306E4", Offset = "0x8306E4", VA = "0x8306E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x8306EC", Offset = "0x8306EC", VA = "0x8306EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public virtual MeshData MeshData
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x8306F4", Offset = "0x8306F4", VA = "0x8306F4", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x8306FC", Offset = "0x8306FC", VA = "0x8306FC", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public GameObject TargetObject
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x830704", Offset = "0x830704", VA = "0x830704")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x83070C", Offset = "0x83070C", VA = "0x83070C")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public RuntimeStatus Status
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x82FF08", Offset = "0x82FF08", VA = "0x82FF08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		public int MeshIndex
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x830714", Offset = "0x830714", VA = "0x830714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67733C", Offset = "0x67733C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x83071C", Offset = "0x83071C", VA = "0x83071C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67734C", Offset = "0x67734C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public int VertexCount
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x830724", Offset = "0x830724", VA = "0x830724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67735C", Offset = "0x67735C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x83072C", Offset = "0x83072C", VA = "0x83072C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67736C", Offset = "0x67736C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public int SkinningVertexCount
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x830734", Offset = "0x830734", VA = "0x830734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67737C", Offset = "0x67737C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x83073C", Offset = "0x83073C", VA = "0x83073C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67738C", Offset = "0x67738C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public int TriangleCount
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x830744", Offset = "0x830744", VA = "0x830744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67739C", Offset = "0x67739C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x83074C", Offset = "0x83074C", VA = "0x83074C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6773AC", Offset = "0x6773AC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public bool IsSkinning
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x830AC0", Offset = "0x830AC0", VA = "0x830AC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		public int BoneCount
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x830B7C", Offset = "0x830B7C", VA = "0x830B7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000278")]
		public int SaveDataHash
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x830D8C", Offset = "0x830D8C", VA = "0x830D8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000279")]
		public int SaveDataVersion
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x830D94", Offset = "0x830D94", VA = "0x830D94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x830754", Offset = "0x830754", VA = "0x830754", Slot = "14")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x830890", Offset = "0x830890", VA = "0x830890", Slot = "15")]
		protected virtual void OnInit()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x830918", Offset = "0x830918", VA = "0x830918", Slot = "16")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x8309C8", Offset = "0x8309C8", VA = "0x8309C8", Slot = "17")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x830A08", Offset = "0x830A08", VA = "0x830A08", Slot = "18")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x830A48", Offset = "0x830A48", VA = "0x830A48", Slot = "19")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001265")]
		public abstract void Finish();

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x83080C", Offset = "0x83080C", VA = "0x83080C")]
		protected void UpdateStatus()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x830AA8", Offset = "0x830AA8", VA = "0x830AA8", Slot = "21")]
		protected virtual void OnActive()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x830AAC", Offset = "0x830AAC", VA = "0x830AAC", Slot = "22")]
		protected virtual void OnInactive()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x830AB0", Offset = "0x830AB0", VA = "0x830AB0", Slot = "23")]
		public virtual bool IsMeshUse()
		{
			return default(bool);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x830AB8", Offset = "0x830AB8", VA = "0x830AB8", Slot = "24")]
		public virtual bool IsActiveMesh()
		{
			return default(bool);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x830C68", Offset = "0x830C68", VA = "0x830C68", Slot = "25")]
		public virtual void AddUseMesh(object parent)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x830C6C", Offset = "0x830C6C", VA = "0x830C6C", Slot = "26")]
		public virtual void RemoveUseMesh(object parent)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x830C70", Offset = "0x830C70", VA = "0x830C70", Slot = "27")]
		public virtual bool AddUseVertex(int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x830C78", Offset = "0x830C78", VA = "0x830C78", Slot = "28")]
		public virtual bool RemoveUseVertex(int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x830C80", Offset = "0x830C80", VA = "0x830C80", Slot = "29")]
		public virtual int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x6001274")]
		public abstract int GetVersion();

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x830D9C", Offset = "0x830D9C", VA = "0x830D9C", Slot = "31")]
		public virtual Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x830EDC", Offset = "0x830EDC", VA = "0x830EDC", Slot = "32")]
		public virtual void CreateVerifyData()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x830F24", Offset = "0x830F24", VA = "0x830F24", Slot = "33")]
		public virtual string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		public abstract int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList);

		[Token(Token = "0x6001279")]
		public abstract List<int> GetEditorTriangleList();

		[Token(Token = "0x600127A")]
		public abstract List<int> GetEditorLineList();

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x830F6C", Offset = "0x830F6C", VA = "0x830F6C")]
		protected BaseMeshDeformer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F6")]
	public class MeshData : ShareDataObject
	{
		[Serializable]
		[Token(Token = "0x20002F7")]
		public struct VertexWeight
		{
			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 localPos;

			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 localNor;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localTan;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int parentIndex;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float weight;
		}

		[Serializable]
		[Token(Token = "0x20002F8")]
		public class ChildData : IDataHash
		{
			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int childDataHash;

			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int vertexCount;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint[] vertexInfoList;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexWeight[] vertexWeightList;

			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] parentIndexList;

			[Token(Token = "0x17000281")]
			public int VertexCount
			{
				[Token(Token = "0x6001289")]
				[Address(RVA = "0x8CFE4C", Offset = "0x8CFE4C", VA = "0x8CFE4C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600128A")]
			[Address(RVA = "0x8D0A3C", Offset = "0x8D0A3C", VA = "0x8D0A3C", Slot = "4")]
			public int GetDataHash()
			{
				return default(int);
			}

			[Token(Token = "0x600128B")]
			[Address(RVA = "0x8D0AAC", Offset = "0x8D0AAC", VA = "0x8D0AAC")]
			public ChildData()
			{
			}
		}

		[Token(Token = "0x400150D")]
		private const int DATA_VERSION = 2;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isSkinning;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCount;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint[] vertexInfoList;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VertexWeight[] vertexWeightList;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ulong[] vertexHashList;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2[] uvList;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int lineCount;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] lineList;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int triangleCount;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int[] triangleList;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int boneCount;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public uint[] vertexToTriangleInfoList;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int[] vertexToTriangleIndexList;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<ChildData> childDataList;

		[Token(Token = "0x1700027A")]
		public int VertexCount
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x8CF964", Offset = "0x8CF964", VA = "0x8CF964")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700027B")]
		public int VertexHashCount
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x8CF96C", Offset = "0x8CF96C", VA = "0x8CF96C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700027C")]
		public int WeightCount
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x8CF984", Offset = "0x8CF984", VA = "0x8CF984")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700027D")]
		public int LineCount
		{
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x8CF99C", Offset = "0x8CF99C", VA = "0x8CF99C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700027E")]
		public int TriangleCount
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0x8CF9A4", Offset = "0x8CF9A4", VA = "0x8CF9A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700027F")]
		public int BoneCount
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x8CF9AC", Offset = "0x8CF9AC", VA = "0x8CF9AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000280")]
		public int ChildCount
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x8C7200", Offset = "0x8C7200", VA = "0x8C7200")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x8CF9B4", Offset = "0x8CF9B4", VA = "0x8CF9B4", Slot = "9")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x8CFBB4", Offset = "0x8CFBB4", VA = "0x8CFBB4", Slot = "10")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x8CFBBC", Offset = "0x8CFBBC", VA = "0x8CFBBC", Slot = "11")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x8CFC1C", Offset = "0x8CFC1C", VA = "0x8CFC1C")]
		public Dictionary<int, List<uint>> GetVirtualToChildVertexDict()
		{
			return null;
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x8CFE54", Offset = "0x8CFE54", VA = "0x8CFE54")]
		public List<int> ExtendSelection(List<int> originalSelection, bool extendNext, bool extendWeight)
		{
			return null;
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x8D09CC", Offset = "0x8D09CC", VA = "0x8D09CC")]
		public MeshData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F9")]
	public class RenderMeshDeformer : BaseMeshDeformer
	{
		[Token(Token = "0x20002FA")]
		public enum RecalculateMode
		{
			[Token(Token = "0x4001534")]
			None,
			[Token(Token = "0x4001535")]
			UpdatePerFrame
		}

		[Token(Token = "0x4001526")]
		private const int DATA_VERSION = 2;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RecalculateMode normalAndTangentUpdateMode;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Mesh sharedMesh;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int meshOptimize;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter meshFilter;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer skinMeshRenderer;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform[] originalBones;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform[] boneList;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Mesh mesh;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66FD00", Offset = "0x66FD00")]
		private bool <IsChangePosition>k__BackingField;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66FD10", Offset = "0x66FD10")]
		private bool <IsChangeNormalTangent>k__BackingField;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66FD20", Offset = "0x66FD20")]
		private bool <IsChangeBoneWeights>k__BackingField;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		private bool oldUse;

		[Token(Token = "0x17000282")]
		public bool IsChangePosition
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x925A20", Offset = "0x925A20", VA = "0x925A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6773BC", Offset = "0x6773BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600128D")]
			[Address(RVA = "0x925A28", Offset = "0x925A28", VA = "0x925A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6773CC", Offset = "0x6773CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public bool IsChangeNormalTangent
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0x925A34", Offset = "0x925A34", VA = "0x925A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6773DC", Offset = "0x6773DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600128F")]
			[Address(RVA = "0x925A3C", Offset = "0x925A3C", VA = "0x925A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6773EC", Offset = "0x6773EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public bool IsChangeBoneWeights
		{
			[Token(Token = "0x6001290")]
			[Address(RVA = "0x925A48", Offset = "0x925A48", VA = "0x925A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6773FC", Offset = "0x6773FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001291")]
			[Address(RVA = "0x925A50", Offset = "0x925A50", VA = "0x925A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67740C", Offset = "0x67740C")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public Mesh SharedMesh
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x925AF8", Offset = "0x925AF8", VA = "0x925AF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x925A5C", Offset = "0x925A5C", VA = "0x925A5C", Slot = "29")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x925B00", Offset = "0x925B00", VA = "0x925B00")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x925C24", Offset = "0x925C24", VA = "0x925C24", Slot = "15")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x92635C", Offset = "0x92635C", VA = "0x92635C", Slot = "21")]
		protected override void OnActive()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x9264D4", Offset = "0x9264D4", VA = "0x9264D4", Slot = "22")]
		protected override void OnInactive()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x926614", Offset = "0x926614", VA = "0x926614", Slot = "16")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x925B78", Offset = "0x925B78", VA = "0x925B78")]
		private void SetRecalculateNormalAndTangentMode()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x9266D0", Offset = "0x9266D0", VA = "0x9266D0", Slot = "23")]
		public override bool IsMeshUse()
		{
			return default(bool);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x926794", Offset = "0x926794", VA = "0x926794", Slot = "24")]
		public override bool IsActiveMesh()
		{
			return default(bool);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x926858", Offset = "0x926858", VA = "0x926858", Slot = "25")]
		public override void AddUseMesh(object parent)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x926CE0", Offset = "0x926CE0", VA = "0x926CE0", Slot = "26")]
		public override void RemoveUseMesh(object parent)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x927094", Offset = "0x927094", VA = "0x927094", Slot = "20")]
		public override void Finish()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x927470", Offset = "0x927470", VA = "0x927470", Slot = "34")]
		public override int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(int);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x9277FC", Offset = "0x9277FC", VA = "0x9277FC", Slot = "35")]
		public override List<int> GetEditorTriangleList()
		{
			return null;
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x9278C4", Offset = "0x9278C4", VA = "0x9278C4", Slot = "36")]
		public override List<int> GetEditorLineList()
		{
			return null;
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x9278CC", Offset = "0x9278CC", VA = "0x9278CC", Slot = "30")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x9278D4", Offset = "0x9278D4", VA = "0x9278D4", Slot = "31")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x92798C", Offset = "0x92798C", VA = "0x92798C", Slot = "33")]
		public override string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x92833C", Offset = "0x92833C", VA = "0x92833C")]
		public RenderMeshDeformer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FB")]
	public class VirtualMeshDeformer : BaseMeshDeformer
	{
		[Token(Token = "0x20002FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x666C00", Offset = "0x666C00")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderMeshDeformer deformer;

			[Token(Token = "0x60012C4")]
			[Address(RVA = "0x932410", Offset = "0x932410", VA = "0x932410")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x60012C5")]
			[Address(RVA = "0x933F70", Offset = "0x933F70", VA = "0x933F70")]
			internal bool <GetRenderMeshDeformerIndex>b__0(MagicaRenderDeformer d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001536")]
		private const int DATA_VERSION = 1;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<MagicaRenderDeformer> renderDeformerList;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<int> renderDeformerHashList;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int renderDeformerVersion;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66FD60", Offset = "0x66FD60")]
		[SerializeField]
		private float mergeVertexDistance;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66FDA4", Offset = "0x66FDA4")]
		private float mergeTriangleDistance;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66FDE8", Offset = "0x66FDE8")]
		private float sameSurfaceAngle;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool useSkinning;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66FE3C", Offset = "0x66FE3C")]
		private int maxWeightCount;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x66FE7C", Offset = "0x66FE7C")]
		private float weightPow;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private List<Transform> boneList;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> sharedChildMeshIndexList;

		[Token(Token = "0x17000286")]
		public float MergeVertexDistance
		{
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0x932348", Offset = "0x932348", VA = "0x932348")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000287")]
		public float MergeTriangleDistance
		{
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x932350", Offset = "0x932350", VA = "0x932350")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000288")]
		public float SameSurfaceAngle
		{
			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x932358", Offset = "0x932358", VA = "0x932358")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000289")]
		public int MaxWeightCount
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x932360", Offset = "0x932360", VA = "0x932360")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028A")]
		public float WeightPow
		{
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x932398", Offset = "0x932398", VA = "0x932398")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028B")]
		public int RenderDeformerCount
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x9315D0", Offset = "0x9315D0", VA = "0x9315D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x9314D0", Offset = "0x9314D0", VA = "0x9314D0", Slot = "29")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x931630", Offset = "0x931630", VA = "0x931630", Slot = "15")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x931E80", Offset = "0x931E80", VA = "0x931E80", Slot = "16")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x9320C0", Offset = "0x9320C0", VA = "0x9320C0", Slot = "21")]
		protected override void OnActive()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x932200", Offset = "0x932200", VA = "0x932200", Slot = "22")]
		protected override void OnInactive()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x932340", Offset = "0x932340", VA = "0x932340", Slot = "20")]
		public override void Finish()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x932344", Offset = "0x932344", VA = "0x932344")]
		public BaseMeshDeformer GetDeformer()
		{
			return null;
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x9323A0", Offset = "0x9323A0", VA = "0x9323A0")]
		public MagicaRenderDeformer GetRenderDeformer(int index)
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x926C04", Offset = "0x926C04", VA = "0x926C04")]
		public int GetRenderMeshDeformerIndex(RenderMeshDeformer deformer)
		{
			return default(int);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x932418", Offset = "0x932418", VA = "0x932418")]
		public List<MeshData> GetRenderDeformerMeshList()
		{
			return null;
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x9325B4", Offset = "0x9325B4", VA = "0x9325B4", Slot = "23")]
		public override bool IsMeshUse()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x932678", Offset = "0x932678", VA = "0x932678", Slot = "24")]
		public override bool IsActiveMesh()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x93273C", Offset = "0x93273C", VA = "0x93273C", Slot = "25")]
		public override void AddUseMesh(object parent)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x9328A0", Offset = "0x9328A0", VA = "0x9328A0", Slot = "26")]
		public override void RemoveUseMesh(object parent)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x932A04", Offset = "0x932A04", VA = "0x932A04", Slot = "27")]
		public override bool AddUseVertex(int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x932ADC", Offset = "0x932ADC", VA = "0x932ADC", Slot = "28")]
		public override bool RemoveUseVertex(int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x932BB4", Offset = "0x932BB4", VA = "0x932BB4", Slot = "34")]
		public override int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(int);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x932F08", Offset = "0x932F08", VA = "0x932F08", Slot = "35")]
		public override List<int> GetEditorTriangleList()
		{
			return null;
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x933010", Offset = "0x933010", VA = "0x933010", Slot = "36")]
		public override List<int> GetEditorLineList()
		{
			return null;
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x933118", Offset = "0x933118", VA = "0x933118", Slot = "30")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x933120", Offset = "0x933120", VA = "0x933120", Slot = "32")]
		public override void CreateVerifyData()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x9332DC", Offset = "0x9332DC", VA = "0x9332DC", Slot = "31")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x9337E4", Offset = "0x9337E4", VA = "0x9337E4", Slot = "33")]
		public override string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x933E68", Offset = "0x933E68", VA = "0x933E68")]
		public VirtualMeshDeformer()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666C10", Offset = "0x666C10")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x666C10", Offset = "0x666C10")]
	public class MagicaRenderDeformer : CoreComponent
	{
		[Token(Token = "0x4001543")]
		private const int DATA_VERSION = 1;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool dataReset;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RenderMeshDeformer deformer;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int deformerHash;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int deformerVersion;

		[Token(Token = "0x1700028C")]
		public RenderMeshDeformer Deformer
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x8CA374", Offset = "0x8CA374", VA = "0x8CA374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028D")]
		public bool DataReset
		{
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x8CA3C0", Offset = "0x8CA3C0", VA = "0x8CA3C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x8CA3B4", Offset = "0x8CA3B4", VA = "0x8CA3B4")]
			set
			{
			}
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x8CA33C", Offset = "0x8CA33C", VA = "0x8CA33C", Slot = "16")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x8CA3C8", Offset = "0x8CA3C8", VA = "0x8CA3C8")]
		private void Reset()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x8CA3D4", Offset = "0x8CA3D4", VA = "0x8CA3D4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x8CA404", Offset = "0x8CA404", VA = "0x8CA404", Slot = "22")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x8CA43C", Offset = "0x8CA43C", VA = "0x8CA43C", Slot = "23")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x8CA474", Offset = "0x8CA474", VA = "0x8CA474", Slot = "24")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x8CA4AC", Offset = "0x8CA4AC", VA = "0x8CA4AC", Slot = "25")]
		protected override void OnActive()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x8CA4E4", Offset = "0x8CA4E4", VA = "0x8CA4E4", Slot = "26")]
		protected override void OnInactive()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x8CA51C", Offset = "0x8CA51C", VA = "0x8CA51C", Slot = "29")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x8CA524", Offset = "0x8CA524", VA = "0x8CA524", Slot = "31")]
		public override void CreateVerifyData()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x8CA590", Offset = "0x8CA590", VA = "0x8CA590", Slot = "30")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x8CA668", Offset = "0x8CA668", VA = "0x8CA668", Slot = "32")]
		public override string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x8CA6C4", Offset = "0x8CA6C4", VA = "0x8CA6C4", Slot = "33")]
		public override int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(int);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x8CA71C", Offset = "0x8CA71C", VA = "0x8CA71C", Slot = "34")]
		public override List<int> GetEditorTriangleList()
		{
			return null;
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x8CA754", Offset = "0x8CA754", VA = "0x8CA754", Slot = "35")]
		public override List<int> GetEditorLineList()
		{
			return null;
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x8CA78C", Offset = "0x8CA78C", VA = "0x8CA78C", Slot = "37")]
		public override List<int> GetUseList()
		{
			return null;
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x8CA794", Offset = "0x8CA794", VA = "0x8CA794", Slot = "27")]
		public override List<ShareDataObject> GetAllShareDataObject()
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x8CA834", Offset = "0x8CA834", VA = "0x8CA834", Slot = "28")]
		public override ShareDataObject DuplicateShareDataObject(ShareDataObject source)
		{
			return null;
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x8CA970", Offset = "0x8CA970", VA = "0x8CA970")]
		public MagicaRenderDeformer()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x666C70", Offset = "0x666C70")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666C70", Offset = "0x666C70")]
	public class MagicaVirtualDeformer : CoreComponent
	{
		[Token(Token = "0x4001548")]
		private const int DATA_VERSION = 1;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VirtualMeshDeformer deformer;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int deformerHash;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int deformerVersion;

		[Token(Token = "0x1700028E")]
		public VirtualMeshDeformer Deformer
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x8C5718", Offset = "0x8C5718", VA = "0x8C5718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x8CAF6C", Offset = "0x8CAF6C", VA = "0x8CAF6C", Slot = "16")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x8CAFA4", Offset = "0x8CAFA4", VA = "0x8CAFA4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x8CAFA8", Offset = "0x8CAFA8", VA = "0x8CAFA8", Slot = "22")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x8CB13C", Offset = "0x8CB13C", VA = "0x8CB13C", Slot = "23")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x8CB184", Offset = "0x8CB184", VA = "0x8CB184", Slot = "24")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x8CB1BC", Offset = "0x8CB1BC", VA = "0x8CB1BC", Slot = "25")]
		protected override void OnActive()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x8CB1F4", Offset = "0x8CB1F4", VA = "0x8CB1F4", Slot = "26")]
		protected override void OnInactive()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x8CAFF0", Offset = "0x8CAFF0", VA = "0x8CAFF0")]
		private void LinkRenderDeformerStatus(bool sw)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x8CB22C", Offset = "0x8CB22C", VA = "0x8CB22C", Slot = "29")]
		public override int GetVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x8CB234", Offset = "0x8CB234", VA = "0x8CB234", Slot = "31")]
		public override void CreateVerifyData()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x8CB2A0", Offset = "0x8CB2A0", VA = "0x8CB2A0", Slot = "30")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x8CB340", Offset = "0x8CB340", VA = "0x8CB340", Slot = "32")]
		public override string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x8CB39C", Offset = "0x8CB39C", VA = "0x8CB39C", Slot = "33")]
		public override int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(int);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x8CB3F4", Offset = "0x8CB3F4", VA = "0x8CB3F4", Slot = "34")]
		public override List<int> GetEditorTriangleList()
		{
			return null;
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x8CB42C", Offset = "0x8CB42C", VA = "0x8CB42C", Slot = "35")]
		public override List<int> GetEditorLineList()
		{
			return null;
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x8CB464", Offset = "0x8CB464", VA = "0x8CB464", Slot = "37")]
		public override List<int> GetUseList()
		{
			return null;
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x8CB618", Offset = "0x8CB618", VA = "0x8CB618", Slot = "27")]
		public override List<ShareDataObject> GetAllShareDataObject()
		{
			return null;
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x8CB6B8", Offset = "0x8CB6B8", VA = "0x8CB6B8", Slot = "28")]
		public override ShareDataObject DuplicateShareDataObject(ShareDataObject source)
		{
			return null;
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x8CB7F4", Offset = "0x8CB7F4", VA = "0x8CB7F4")]
		public MagicaVirtualDeformer()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class ClampDistanceConstraint : PhysicsManagerConstraint
	{
		[Serializable]
		[Token(Token = "0x2000300")]
		public struct ClampDistanceData
		{
			[Token(Token = "0x400154F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ushort vertexIndex;

			[Token(Token = "0x4001550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public ushort targetVertexIndex;

			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x6FA204", Offset = "0x6FA204", VA = "0x6FA204")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000301")]
		public struct GroupData
		{
			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x4001552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int active;

			[Token(Token = "0x4001553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float minRatio;

			[Token(Token = "0x4001554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float maxRatio;

			[Token(Token = "0x4001555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float velocityInfluence;

			[Token(Token = "0x4001556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ChunkData dataChunk;

			[Token(Token = "0x4001557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChunkData refChunk;
		}

		[Token(Token = "0x2000302")]
		[BurstCompile]
		private struct ClampDistanceJob : IJobParallelFor
		{
			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<ClampDistanceData> clampDistanceList;

			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<GroupData> groupList;

			[Token(Token = "0x400155A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<ReferenceDataIndex> refDataList;

			[Token(Token = "0x400155B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x400155C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[WriteOnly]
			public NativeArray<float3> outNextPosList;

			[Token(Token = "0x4001561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public NativeArray<float3> posList;

			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x6FA270", Offset = "0x6FA270", VA = "0x6FA270", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedChunkNativeArray<ClampDistanceData> dataList;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FixedChunkNativeArray<ReferenceDataIndex> refDataList;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FixedNativeList<GroupData> groupList;

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x8317A4", Offset = "0x8317A4", VA = "0x8317A4", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x83185C", Offset = "0x83185C", VA = "0x83185C", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x831904", Offset = "0x831904", VA = "0x831904")]
		public int AddGroup(int teamId, bool active, float minRatio, float maxRatio, float velocityInfluence, ClampDistanceData[] dataArray, ReferenceDataIndex[] refDataArray)
		{
			return default(int);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x831B6C", Offset = "0x831B6C", VA = "0x831B6C", Slot = "5")]
		public override void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x831CF4", Offset = "0x831CF4", VA = "0x831CF4")]
		public void ChangeParam(int teamId, bool active, float minRatio, float maxRatio, float velocityInfluence)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x831E84", Offset = "0x831E84", VA = "0x831E84", Slot = "8")]
		public override JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x832330", Offset = "0x832330", VA = "0x832330")]
		public ClampDistanceConstraint()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class ClampPositionConstraint : PhysicsManagerConstraint
	{
		[Token(Token = "0x2000304")]
		public struct GroupData
		{
			[Token(Token = "0x4001563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x4001564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int active;

			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CurveParam limitLength;

			[Token(Token = "0x4001566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float3 axisRatio;

			[Token(Token = "0x4001567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float velocityInfluence;

			[Token(Token = "0x6001301")]
			[Address(RVA = "0x6FCCFC", Offset = "0x6FCCFC", VA = "0x6FCCFC")]
			public bool IsAxisCheck()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000305")]
		[BurstCompile]
		private struct ClampPositionJob : IJobParallelFor
		{
			[Token(Token = "0x4001568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<GroupData> clampPositionGroupList;

			[Token(Token = "0x4001569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x400156A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<float> depthList;

			[Token(Token = "0x400156D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x400156E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<quaternion> baseRotList;

			[Token(Token = "0x400156F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x4001570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public NativeArray<float3> posList;

			[Token(Token = "0x6001302")]
			[Address(RVA = "0x6FCCF4", Offset = "0x6FCCF4", VA = "0x6FCCF4", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FixedNativeList<GroupData> groupList;

		[Token(Token = "0x1700028F")]
		public int ActiveCount
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x98F7E0", Offset = "0x98F7E0", VA = "0x98F7E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x98F238", Offset = "0x98F238", VA = "0x98F238", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x98F2A0", Offset = "0x98F2A0", VA = "0x98F2A0", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x98F300", Offset = "0x98F300", VA = "0x98F300")]
		public int AddGroup(int teamId, bool active, BezierParam limitLength, float3 axisRatio, float velocityInfluence)
		{
			return default(int);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x98F55C", Offset = "0x98F55C", VA = "0x98F55C", Slot = "5")]
		public override void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x98F640", Offset = "0x98F640", VA = "0x98F640")]
		public void ChangeParam(int teamId, bool active, BezierParam limitLength, float3 axisRatio, float velocityInfluence)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x98F8B0", Offset = "0x98F8B0", VA = "0x98F8B0", Slot = "8")]
		public override JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x98FCF0", Offset = "0x98FCF0", VA = "0x98FCF0")]
		public ClampPositionConstraint()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class ClampRotationConstraint : PhysicsManagerConstraint
	{
		[Serializable]
		[Token(Token = "0x2000307")]
		public struct ClampRotationData
		{
			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int vertexIndex;

			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int parentVertexIndex;

			[Token(Token = "0x600130A")]
			[Address(RVA = "0x6FCD34", Offset = "0x6FCD34", VA = "0x6FCD34")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000308")]
		public struct ClampRotationRootInfo
		{
			[Token(Token = "0x4001578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ushort startIndex;

			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public ushort dataLength;
		}

		[Token(Token = "0x2000309")]
		public struct GroupData
		{
			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int active;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CurveParam maxAngle;

			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float velocityInfluence;

			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ChunkData dataChunk;

			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ChunkData rootInfoChunk;
		}

		[Token(Token = "0x200030A")]
		[BurstCompile]
		private struct ClampRotationJob : IJobParallelFor
		{
			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<ClampRotationData> dataList;

			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<ClampRotationRootInfo> rootInfoList;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<int> rootTeamList;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<GroupData> groupList;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<float> depthList;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[ReadOnly]
			public NativeArray<quaternion> baseRotList;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[NativeDisableParallelForRestriction]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[NativeDisableParallelForRestriction]
			public NativeArray<quaternion> nextRotList;

			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[NativeDisableParallelForRestriction]
			public NativeArray<float3> posList;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[NativeDisableParallelForRestriction]
			public NativeArray<float> lengthBuffer;

			[Token(Token = "0x600130B")]
			[Address(RVA = "0x6FCDA4", Offset = "0x6FCDA4", VA = "0x6FCDA4", Slot = "4")]
			public void Execute(int rootIndex)
			{
			}
		}

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedChunkNativeArray<ClampRotationData> dataList;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FixedChunkNativeArray<ClampRotationRootInfo> rootInfoList;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FixedNativeList<GroupData> groupList;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FixedChunkNativeArray<int> rootTeamList;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FixedChunkNativeArray<float> lengthBuffer;

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x9900FC", Offset = "0x9900FC", VA = "0x9900FC", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x990204", Offset = "0x990204", VA = "0x990204", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x9902F4", Offset = "0x9902F4", VA = "0x9902F4")]
		public int AddGroup(int teamId, bool active, BezierParam maxAngle, float velocityInfluence, ClampRotationData[] dataArray, ClampRotationRootInfo[] rootInfoArray)
		{
			return default(int);
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x99060C", Offset = "0x99060C", VA = "0x99060C", Slot = "5")]
		public override void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x9907EC", Offset = "0x9907EC", VA = "0x9907EC")]
		public void ChangeParam(int teamId, bool active, BezierParam maxAngle, float velocityInfluence)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x990990", Offset = "0x990990", VA = "0x990990", Slot = "8")]
		public override JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x990EC0", Offset = "0x990EC0", VA = "0x990EC0")]
		public ClampRotationConstraint()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class ColliderCollisionConstraint : PhysicsManagerConstraint
	{
		[Token(Token = "0x200030C")]
		[BurstCompile]
		private struct CollisionJob : IJobParallelFor
		{
			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<float> radiusList;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<quaternion> nextRotList;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<float3> posList;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<quaternion> rotList;

			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public NativeArray<float3> localPosList;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[ReadOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[ReadOnly]
			public NativeArray<quaternion> baseRotList;

			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[ReadOnly]
			public NativeMultiHashMap<int, int> colliderMap;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[WriteOnly]
			public NativeArray<float3> outNextPosList;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public NativeArray<float> frictionList;

			[Token(Token = "0x6001312")]
			[Address(RVA = "0x6FCDF8", Offset = "0x6FCDF8", VA = "0x6FCDF8", Slot = "4")]
			public void Execute(int index)
			{
			}

			[Token(Token = "0x6001313")]
			[Address(RVA = "0x6FCE00", Offset = "0x6FCE00", VA = "0x6FCE00")]
			private bool SphereColliderDetection(ref float3 nextpos, float3 basepos, float radius, int cindex, bool keep)
			{
				return default(bool);
			}

			[Token(Token = "0x6001314")]
			[Address(RVA = "0x6FCE0C", Offset = "0x6FCE0C", VA = "0x6FCE0C")]
			private bool CapsuleColliderDetection(ref float3 nextpos, float3 basepos, float radius, int cindex, float3 dir, bool keep)
			{
				return default(bool);
			}

			[Token(Token = "0x6001315")]
			[Address(RVA = "0x6FCE18", Offset = "0x6FCE18", VA = "0x6FCE18")]
			private bool PlaneColliderDetection(ref float3 nextpos, float radius, int cindex)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x99DF04", Offset = "0x99DF04", VA = "0x99DF04", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x99DF08", Offset = "0x99DF08", VA = "0x99DF08", Slot = "5")]
		public override void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x99D9F8", Offset = "0x99D9F8", VA = "0x99D9F8")]
		public void ChangeParam(int teamId, bool useCollision)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x99DF0C", Offset = "0x99DF0C", VA = "0x99DF0C", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x99DF10", Offset = "0x99DF10", VA = "0x99DF10", Slot = "8")]
		public override JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x99E5E4", Offset = "0x99E5E4", VA = "0x99E5E4")]
		public ColliderCollisionConstraint()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class EdgeCollisionConstraint : PhysicsManagerConstraint
	{
		[Serializable]
		[Token(Token = "0x200030E")]
		public struct EdgeCollisionData
		{
			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ushort vindex0;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public ushort vindex1;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int writeIndex0;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int writeIndex1;

			[Token(Token = "0x600131E")]
			[Address(RVA = "0x6FCEC8", Offset = "0x6FCEC8", VA = "0x6FCEC8")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200030F")]
		public struct GroupData
		{
			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int active;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ChunkData dataChunk;

			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ChunkData groupIndexChunk;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChunkData refDataChunk;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public ChunkData writeDataChunk;
		}

		[Token(Token = "0x2000310")]
		[BurstCompile]
		private struct EdgeCollisionCalcJob : IJobParallelFor
		{
			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float updatePower;

			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[ReadOnly]
			public NativeArray<GroupData> groupDataList;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[ReadOnly]
			public NativeArray<EdgeCollisionData> dataList;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[ReadOnly]
			public NativeArray<short> groupIndexList;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[ReadOnly]
			public NativeMultiHashMap<int, int> colliderMap;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[ReadOnly]
			public NativeArray<float> radiusList;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[ReadOnly]
			public NativeArray<float3> posList;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[ReadOnly]
			public NativeArray<quaternion> rotList;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[ReadOnly]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[ReadOnly]
			public NativeArray<quaternion> nextRotList;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[ReadOnly]
			public NativeArray<float3> localPosList;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[WriteOnly]
			[NativeDisableParallelForRestriction]
			public NativeArray<float3> writeBuffer;

			[Token(Token = "0x600131F")]
			[Address(RVA = "0x6FCEA0", Offset = "0x6FCEA0", VA = "0x6FCEA0", Slot = "4")]
			public void Execute(int index)
			{
			}

			[Token(Token = "0x6001320")]
			[Address(RVA = "0x6FCEA8", Offset = "0x6FCEA8", VA = "0x6FCEA8")]
			private bool SphereColliderDetection(float3 nextpos0, float3 nextpos1, ref float3 corr0, ref float3 corr1, float radius, int cindex)
			{
				return default(bool);
			}

			[Token(Token = "0x6001321")]
			[Address(RVA = "0x6FCEB0", Offset = "0x6FCEB0", VA = "0x6FCEB0")]
			private bool CapsuleColliderDetection(float3 nextpos0, float3 nextpos1, ref float3 corr0, ref float3 corr1, float radius, int cindex, float3 dir)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000311")]
		[BurstCompile]
		private struct EdgeCollisionSumJob : IJobParallelFor
		{
			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<GroupData> groupDataList;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<ReferenceDataIndex> refDataList;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<float3> writeBuffer;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public NativeArray<float3> inoutNextPosList;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public NativeArray<float> frictionList;

			[Token(Token = "0x6001322")]
			[Address(RVA = "0x6FCF34", Offset = "0x6FCF34", VA = "0x6FCF34", Slot = "4")]
			public void Execute(int pindex)
			{
			}
		}

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedChunkNativeArray<EdgeCollisionData> dataList;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FixedChunkNativeArray<short> groupIndexList;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FixedChunkNativeArray<ReferenceDataIndex> refDataList;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FixedChunkNativeArray<float3> writeBuffer;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FixedNativeList<GroupData> groupList;

		[Token(Token = "0x17000290")]
		public int ActiveCount
		{
			[Token(Token = "0x600131B")]
			[Address(RVA = "0x9A0D0C", Offset = "0x9A0D0C", VA = "0x9A0D0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x9A0494", Offset = "0x9A0494", VA = "0x9A0494", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x9A059C", Offset = "0x9A059C", VA = "0x9A059C", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x9A068C", Offset = "0x9A068C", VA = "0x9A068C")]
		public int AddGroup(int teamId, bool active, EdgeCollisionData[] dataArray, ReferenceDataIndex[] refDataArray, int writeBufferCount)
		{
			return default(int);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x9A0994", Offset = "0x9A0994", VA = "0x9A0994", Slot = "5")]
		public override void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x9A0B90", Offset = "0x9A0B90", VA = "0x9A0B90")]
		public void ChangeParam(int teamId, bool active)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x9A0DDC", Offset = "0x9A0DDC", VA = "0x9A0DDC", Slot = "8")]
		public override JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x9A1628", Offset = "0x9A1628", VA = "0x9A1628")]
		public EdgeCollisionConstraint()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class RestoreDistanceConstraint : PhysicsManagerConstraint
	{
		[Serializable]
		[Token(Token = "0x2000313")]
		public struct RestoreDistanceData
		{
			[Token(Token = "0x40015C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ushort vertexIndex;

			[Token(Token = "0x40015C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public ushort targetVertexIndex;

			[Token(Token = "0x600132B")]
			[Address(RVA = "0x6FB284", Offset = "0x6FB284", VA = "0x6FB284")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000314")]
		public struct RestoreDistanceGroupData
		{
			[Token(Token = "0x40015C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x40015CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public CurveParam mass;

			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float velocityInfluence;

			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CurveParam structStiffness;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ChunkData structDataChunk;

			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChunkData structRefChunk;

			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int useBend;

			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public CurveParam bendStiffness;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public ChunkData bendDataChunk;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public ChunkData bendRefChunk;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public int useNear;

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public CurveParam nearStiffness;

			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public ChunkData nearDataChunk;

			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public ChunkData nearRefChunk;

			[Token(Token = "0x600132C")]
			[Address(RVA = "0x6FB2A4", Offset = "0x6FB2A4", VA = "0x6FB2A4")]
			public bool IsValid(int type)
			{
				return default(bool);
			}

			[Token(Token = "0x600132D")]
			[Address(RVA = "0x6FB2D0", Offset = "0x6FB2D0", VA = "0x6FB2D0")]
			public CurveParam GetStiffness(int type)
			{
				return default(CurveParam);
			}

			[Token(Token = "0x600132E")]
			[Address(RVA = "0x6FB30C", Offset = "0x6FB30C", VA = "0x6FB30C")]
			public ChunkData GetDataChunk(int type)
			{
				return default(ChunkData);
			}

			[Token(Token = "0x600132F")]
			[Address(RVA = "0x6FB348", Offset = "0x6FB348", VA = "0x6FB348")]
			public ChunkData GetRefChunk(int type)
			{
				return default(ChunkData);
			}
		}

		[Token(Token = "0x2000315")]
		[BurstCompile]
		private struct DistanceJob : IJobParallelFor
		{
			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float updatePower;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int type;

			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[ReadOnly]
			public NativeArray<RestoreDistanceData> restoreDistanceDataList;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[ReadOnly]
			public NativeArray<RestoreDistanceGroupData> restoreDistanceGroupDataList;

			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[ReadOnly]
			public NativeArray<ReferenceDataIndex> refDataList;

			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[ReadOnly]
			public NativeArray<float> depthList;

			[Token(Token = "0x40015E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[ReadOnly]
			public NativeArray<float> frictionList;

			[Token(Token = "0x40015E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[ReadOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x40015E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[ReadOnly]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x40015E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[WriteOnly]
			public NativeArray<float3> outNextPosList;

			[Token(Token = "0x40015E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public NativeArray<float3> posList;

			[Token(Token = "0x6001330")]
			[Address(RVA = "0x6FB27C", Offset = "0x6FB27C", VA = "0x6FB27C", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x40015C0")]
		public const int StructType = 0;

		[Token(Token = "0x40015C1")]
		public const int BendType = 1;

		[Token(Token = "0x40015C2")]
		public const int NearType = 2;

		[Token(Token = "0x40015C3")]
		public const int TypeCount = 3;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedChunkNativeArray<RestoreDistanceData>[] dataList;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FixedChunkNativeArray<ReferenceDataIndex>[] refDataList;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FixedNativeList<RestoreDistanceGroupData> groupList;

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x929B1C", Offset = "0x929B1C", VA = "0x929B1C", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x929CE8", Offset = "0x929CE8", VA = "0x929CE8", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x929E20", Offset = "0x929E20", VA = "0x929E20")]
		public int AddGroup(int teamId, BezierParam mass, float velocityInfluence, BezierParam structStiffness, RestoreDistanceData[] structDataArray, ReferenceDataIndex[] structRefDataArray, bool useBend, BezierParam bendStiffness, RestoreDistanceData[] bendDataArray, ReferenceDataIndex[] bendRefDataArray, bool useNear, BezierParam nearStiffness, RestoreDistanceData[] nearDataArray, ReferenceDataIndex[] nearRefDataArray)
		{
			return default(int);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x92A494", Offset = "0x92A494", VA = "0x92A494", Slot = "5")]
		public override void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x92A7B0", Offset = "0x92A7B0", VA = "0x92A7B0")]
		public void ChangeParam(int teamId, BezierParam mass, float velocityInfluence, BezierParam structStiffness, bool useBend, BezierParam bendStiffness, bool useNear, BezierParam nearStiffness)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x92A99C", Offset = "0x92A99C", VA = "0x92A99C", Slot = "7")]
		public override int GetIterationCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x92A9A4", Offset = "0x92A9A4", VA = "0x92A9A4", Slot = "8")]
		public override JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x92B038", Offset = "0x92B038", VA = "0x92B038")]
		public RestoreDistanceConstraint()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class RestoreRotationConstraint : PhysicsManagerConstraint
	{
		[Serializable]
		[Token(Token = "0x2000317")]
		public struct RotationData
		{
			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ushort vertexIndex;

			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public ushort targetVertexIndex;

			[Token(Token = "0x6001338")]
			[Address(RVA = "0x6FB384", Offset = "0x6FB384", VA = "0x6FB384")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000318")]
		public struct GroupData
		{
			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int active;

			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CurveParam restorePower;

			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float velocityInfluence;

			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ChunkData dataChunk;

			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ChunkData refChunk;
		}

		[Token(Token = "0x2000319")]
		[BurstCompile]
		private struct RotationJob : IJobParallelFor
		{
			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float updatePower;

			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[ReadOnly]
			public NativeArray<RotationData> dataList;

			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[ReadOnly]
			public NativeArray<GroupData> groupList;

			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[ReadOnly]
			public NativeArray<ReferenceDataIndex> refDataList;

			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x40015F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x40015F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[ReadOnly]
			public NativeArray<float> depthList;

			[Token(Token = "0x40015F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[ReadOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[ReadOnly]
			public NativeArray<quaternion> baseRotList;

			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[ReadOnly]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[WriteOnly]
			public NativeArray<float3> outNextPosList;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public NativeArray<float3> posList;

			[Token(Token = "0x6001339")]
			[Address(RVA = "0x6FB3F0", Offset = "0x6FB3F0", VA = "0x6FB3F0", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedChunkNativeArray<RotationData> dataList;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FixedChunkNativeArray<ReferenceDataIndex> refDataList;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FixedNativeList<GroupData> groupList;

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x92B508", Offset = "0x92B508", VA = "0x92B508", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x92B5C0", Offset = "0x92B5C0", VA = "0x92B5C0", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x92B668", Offset = "0x92B668", VA = "0x92B668")]
		public int AddGroup(int teamId, bool active, BezierParam power, float velocityInfluence, RotationData[] dataArray, ReferenceDataIndex[] refDataArray)
		{
			return default(int);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x92B8EC", Offset = "0x92B8EC", VA = "0x92B8EC", Slot = "5")]
		public override void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x92BA74", Offset = "0x92BA74", VA = "0x92BA74")]
		public void ChangeParam(int teamId, bool active, BezierParam power, float velocityInfluence)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x92BC1C", Offset = "0x92BC1C", VA = "0x92BC1C", Slot = "8")]
		public override JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x92C1D4", Offset = "0x92C1D4", VA = "0x92C1D4")]
		public RestoreRotationConstraint()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class SpringConstraint : PhysicsManagerConstraint
	{
		[Token(Token = "0x200031B")]
		public struct GroupData
		{
			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int active;

			[Token(Token = "0x4001600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float spring;
		}

		[Token(Token = "0x200031C")]
		[BurstCompile]
		private struct SpringJob : IJobParallelFor
		{
			[Token(Token = "0x4001601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float updatePower;

			[Token(Token = "0x4001602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[ReadOnly]
			public NativeArray<GroupData> groupList;

			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[ReadOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x6001342")]
			[Address(RVA = "0x6FB444", Offset = "0x6FB444", VA = "0x6FB444", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FixedNativeList<GroupData> groupList;

		[Token(Token = "0x17000291")]
		public int ActiveCount
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0x92E618", Offset = "0x92E618", VA = "0x92E618")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x92E21C", Offset = "0x92E21C", VA = "0x92E21C", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x92E284", Offset = "0x92E284", VA = "0x92E284", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x92E2E4", Offset = "0x92E2E4", VA = "0x92E2E4")]
		public int AddGroup(int teamId, bool active, float spring)
		{
			return default(int);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x92E3F0", Offset = "0x92E3F0", VA = "0x92E3F0", Slot = "5")]
		public override void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x92E4D4", Offset = "0x92E4D4", VA = "0x92E4D4")]
		public void ChangeParam(int teamId, bool active, float spring)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x92E6DC", Offset = "0x92E6DC", VA = "0x92E6DC", Slot = "8")]
		public override JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x92EA0C", Offset = "0x92EA0C", VA = "0x92EA0C")]
		public SpringConstraint()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class TriangleBendConstraint : PhysicsManagerConstraint
	{
		[Serializable]
		[Token(Token = "0x200031E")]
		public struct TriangleBendData
		{
			[Token(Token = "0x400160D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int vindex0;

			[Token(Token = "0x400160E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int vindex1;

			[Token(Token = "0x400160F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int vindex2;

			[Token(Token = "0x4001610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int vindex3;

			[Token(Token = "0x4001611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float restAngle;

			[Token(Token = "0x4001612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float depth;

			[Token(Token = "0x4001613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int writeIndex0;

			[Token(Token = "0x4001614")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int writeIndex1;

			[Token(Token = "0x4001615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int writeIndex2;

			[Token(Token = "0x4001616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int writeIndex3;

			[Token(Token = "0x600134B")]
			[Address(RVA = "0x6FB4F4", Offset = "0x6FB4F4", VA = "0x6FB4F4")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200031F")]
		public struct TriangleBendGroupData
		{
			[Token(Token = "0x4001617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x4001618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int active;

			[Token(Token = "0x4001619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CurveParam stiffness;

			[Token(Token = "0x400161A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ChunkData dataChunk;

			[Token(Token = "0x400161B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ChunkData groupIndexChunk;

			[Token(Token = "0x400161C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ChunkData refDataChunk;

			[Token(Token = "0x400161D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public ChunkData writeDataChunk;
		}

		[Token(Token = "0x2000320")]
		[BurstCompile]
		private struct TriangleBendCalcJob : IJobParallelFor
		{
			[Token(Token = "0x400161E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float updatePower;

			[Token(Token = "0x400161F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[ReadOnly]
			public NativeArray<TriangleBendGroupData> triangleBendGroupDataList;

			[Token(Token = "0x4001620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[ReadOnly]
			public NativeArray<TriangleBendData> triangleBendList;

			[Token(Token = "0x4001621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[ReadOnly]
			public NativeArray<short> groupIndexList;

			[Token(Token = "0x4001622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x4001623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[ReadOnly]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x4001624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[NativeDisableParallelForRestriction]
			[WriteOnly]
			public NativeArray<float3> writeBuffer;

			[Token(Token = "0x600134C")]
			[Address(RVA = "0x6FB4EC", Offset = "0x6FB4EC", VA = "0x6FB4EC", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x2000321")]
		[BurstCompile]
		private struct TriangleBendSumJob : IJobParallelFor
		{
			[Token(Token = "0x4001625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<TriangleBendGroupData> triangleBendGroupDataList;

			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<ReferenceDataIndex> refDataList;

			[Token(Token = "0x4001627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<float3> writeBuffer;

			[Token(Token = "0x4001628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x4001629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public NativeArray<float3> inoutNextPosList;

			[Token(Token = "0x600134D")]
			[Address(RVA = "0x6FB564", Offset = "0x6FB564", VA = "0x6FB564", Slot = "4")]
			public void Execute(int pindex)
			{
			}
		}

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedChunkNativeArray<TriangleBendData> dataList;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FixedChunkNativeArray<short> groupIndexList;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FixedChunkNativeArray<ReferenceDataIndex> refDataList;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FixedChunkNativeArray<float3> writeBuffer;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FixedNativeList<TriangleBendGroupData> groupList;

		[Token(Token = "0x17000292")]
		public int ActiveCount
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0x930434", Offset = "0x930434", VA = "0x930434")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x92FBB0", Offset = "0x92FBB0", VA = "0x92FBB0", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x92FCB8", Offset = "0x92FCB8", VA = "0x92FCB8", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x92FDA8", Offset = "0x92FDA8", VA = "0x92FDA8")]
		public int AddGroup(int teamId, bool active, BezierParam stiffness, TriangleBendData[] dataArray, ReferenceDataIndex[] refDataArray, int writeBufferCount)
		{
			return default(int);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x9300B4", Offset = "0x9300B4", VA = "0x9300B4", Slot = "5")]
		public override void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x9302B0", Offset = "0x9302B0", VA = "0x9302B0")]
		public void ChangeParam(int teamId, bool active, BezierParam stiffness)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x930504", Offset = "0x930504", VA = "0x930504", Slot = "8")]
		public override JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x930A34", Offset = "0x930A34", VA = "0x930A34")]
		public TriangleBendConstraint()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class VolumeConstraint : PhysicsManagerConstraint
	{
		[Serializable]
		[Token(Token = "0x2000323")]
		public struct VolumeData
		{
			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int vindex0;

			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int vindex1;

			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int vindex2;

			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int vindex3;

			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float3x3 ivMat;

			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float depth;

			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int direction;

			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int writeIndex0;

			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int writeIndex1;

			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int writeIndex2;

			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int writeIndex3;

			[Token(Token = "0x6001357")]
			[Address(RVA = "0x6FA3B0", Offset = "0x6FA3B0", VA = "0x6FA3B0")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000324")]
		public struct GroupData
		{
			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int active;

			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CurveParam stretchStiffness;

			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CurveParam shearStiffness;

			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ChunkData dataChunk;

			[Token(Token = "0x4001641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChunkData groupIndexChunk;

			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ChunkData refDataChunk;

			[Token(Token = "0x4001643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public ChunkData writeDataChunk;
		}

		[Token(Token = "0x2000325")]
		[BurstCompile]
		private struct VolumeCalcJob : IJobParallelFor
		{
			[Token(Token = "0x4001644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float updatePower;

			[Token(Token = "0x4001645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[ReadOnly]
			public NativeArray<GroupData> groupDataList;

			[Token(Token = "0x4001646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[ReadOnly]
			public NativeArray<VolumeData> dataList;

			[Token(Token = "0x4001647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[ReadOnly]
			public NativeArray<short> groupIndexList;

			[Token(Token = "0x4001648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x4001649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[ReadOnly]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x400164A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[NativeDisableParallelForRestriction]
			[WriteOnly]
			public NativeArray<float3> writeBuffer;

			[Token(Token = "0x6001358")]
			[Address(RVA = "0x6FA3A8", Offset = "0x6FA3A8", VA = "0x6FA3A8", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x2000326")]
		[BurstCompile]
		private struct VolumeSumJob : IJobParallelFor
		{
			[Token(Token = "0x400164B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<GroupData> groupDataList;

			[Token(Token = "0x400164C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<ReferenceDataIndex> refDataList;

			[Token(Token = "0x400164D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<float3> writeBuffer;

			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public NativeArray<float3> inoutNextPosList;

			[Token(Token = "0x6001359")]
			[Address(RVA = "0x6FA420", Offset = "0x6FA420", VA = "0x6FA420", Slot = "4")]
			public void Execute(int pindex)
			{
			}
		}

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedChunkNativeArray<VolumeData> dataList;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FixedChunkNativeArray<short> groupIndexList;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FixedChunkNativeArray<ReferenceDataIndex> refDataList;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FixedChunkNativeArray<float3> writeBuffer;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FixedNativeList<GroupData> groupList;

		[Token(Token = "0x17000293")]
		public int ActiveCount
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0x86C6CC", Offset = "0x86C6CC", VA = "0x86C6CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x86BE18", Offset = "0x86BE18", VA = "0x86BE18", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x86BF20", Offset = "0x86BF20", VA = "0x86BF20", Slot = "6")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x86C010", Offset = "0x86C010", VA = "0x86C010")]
		public int AddGroup(int teamId, bool active, BezierParam stretchStiffness, BezierParam shearStiffness, VolumeData[] dataArray, ReferenceDataIndex[] refDataArray, int writeBufferCount)
		{
			return default(int);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x86C330", Offset = "0x86C330", VA = "0x86C330", Slot = "5")]
		public override void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x86C52C", Offset = "0x86C52C", VA = "0x86C52C")]
		public void ChangeParam(int teamId, bool active, BezierParam stretchStiffness, BezierParam shearStiffness)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x86C79C", Offset = "0x86C79C", VA = "0x86C79C", Slot = "7")]
		public override int GetIterationCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x86C7A4", Offset = "0x86C7A4", VA = "0x86C7A4", Slot = "8")]
		public override JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x86CCC0", Offset = "0x86CCC0", VA = "0x86CCC0")]
		public VolumeConstraint()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public struct CurveParam
	{
		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sval;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float eval;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float cval;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int useCurve;

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x6FCE20", Offset = "0x6FCE20", VA = "0x6FCE20")]
		public CurveParam(float value)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x6FCE2C", Offset = "0x6FCE2C", VA = "0x6FCE2C")]
		public CurveParam(float svalue, float evalue)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x6FCE38", Offset = "0x6FCE38", VA = "0x6FCE38")]
		public CurveParam(BezierParam bezier)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x6FCE44", Offset = "0x6FCE44", VA = "0x6FCE44")]
		public void Setup(BezierParam bezier)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x6FCE4C", Offset = "0x6FCE4C", VA = "0x6FCE4C")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000328")]
	public abstract class CoreComponent : MonoBehaviour, IShareDataObject, IDataVerify, IEditorMesh, IEditorCloth, IDataHash
	{
		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int dataHash;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected int dataVersion;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected RuntimeStatus status;

		[Token(Token = "0x17000294")]
		public RuntimeStatus Status
		{
			[Token(Token = "0x600135F")]
			[Address(RVA = "0x99F8A8", Offset = "0x99F8A8", VA = "0x99F8A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		public int SaveDataHash
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0x99F8B0", Offset = "0x99F8B0", VA = "0x99F8B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000296")]
		public int SaveDataVersion
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0x99F8B8", Offset = "0x99F8B8", VA = "0x99F8B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001360")]
		public abstract int GetDataHash();

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x99F8C0", Offset = "0x99F8C0", VA = "0x99F8C0", Slot = "17")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x99F99C", Offset = "0x99F99C", VA = "0x99F99C", Slot = "18")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x99FA60", Offset = "0x99FA60", VA = "0x99FA60", Slot = "19")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x99FAA0", Offset = "0x99FAA0", VA = "0x99FAA0", Slot = "20")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x99FAE4", Offset = "0x99FAE4", VA = "0x99FAE4", Slot = "21")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x99F8C4", Offset = "0x99F8C4", VA = "0x99F8C4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x99F9DC", Offset = "0x99F9DC", VA = "0x99F9DC")]
		private void UpdateStatus()
		{
		}

		[Token(Token = "0x600136A")]
		protected abstract void OnInit();

		[Token(Token = "0x600136B")]
		protected abstract void OnDispose();

		[Token(Token = "0x600136C")]
		protected abstract void OnUpdate();

		[Token(Token = "0x600136D")]
		protected abstract void OnActive();

		[Token(Token = "0x600136E")]
		protected abstract void OnInactive();

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x99FBAC", Offset = "0x99FBAC", VA = "0x99FBAC", Slot = "27")]
		public virtual List<ShareDataObject> GetAllShareDataObject()
		{
			return null;
		}

		[Token(Token = "0x6001370")]
		public abstract ShareDataObject DuplicateShareDataObject(ShareDataObject source);

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x99FC10", Offset = "0x99FC10", VA = "0x99FC10")]
		protected void SetUserEnable(bool sw)
		{
		}

		[Token(Token = "0x6001372")]
		public abstract int GetVersion();

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x99FC70", Offset = "0x99FC70", VA = "0x99FC70", Slot = "30")]
		public virtual Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x99FCB8", Offset = "0x99FCB8", VA = "0x99FCB8", Slot = "31")]
		public virtual void CreateVerifyData()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x99FD00", Offset = "0x99FD00", VA = "0x99FD00", Slot = "32")]
		public virtual string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x99FD48", Offset = "0x99FD48", VA = "0x99FD48", Slot = "33")]
		public virtual int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(int);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x99FDB0", Offset = "0x99FDB0", VA = "0x99FDB0", Slot = "34")]
		public virtual List<int> GetEditorTriangleList()
		{
			return null;
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x99FE18", Offset = "0x99FE18", VA = "0x99FE18", Slot = "35")]
		public virtual List<int> GetEditorLineList()
		{
			return null;
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x99FE80", Offset = "0x99FE80", VA = "0x99FE80", Slot = "36")]
		public virtual List<int> GetSelectionList()
		{
			return null;
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x99FE88", Offset = "0x99FE88", VA = "0x99FE88", Slot = "37")]
		public virtual List<int> GetUseList()
		{
			return null;
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x99FE90", Offset = "0x99FE90", VA = "0x99FE90")]
		protected CoreComponent()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public abstract class PhysicsManagerAccess : IDisposable
	{
		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected MagicaPhysicsManager manager;

		[Token(Token = "0x17000297")]
		protected PhysicsManagerParticleData Particle
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x8D8A20", Offset = "0x8D8A20", VA = "0x8D8A20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		protected PhysicsManagerBoneData Bone
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x8D8A60", Offset = "0x8D8A60", VA = "0x8D8A60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000299")]
		protected PhysicsManagerMeshData Mesh
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x8D8AA0", Offset = "0x8D8AA0", VA = "0x8D8AA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		protected PhysicsManagerTeamData Team
		{
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x8D8AE0", Offset = "0x8D8AE0", VA = "0x8D8AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		protected PhysicsManagerWindData Wind
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x8D8B20", Offset = "0x8D8B20", VA = "0x8D8B20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		protected PhysicsManagerCompute Compute
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x8D8B60", Offset = "0x8D8B60", VA = "0x8D8B60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x8C9328", Offset = "0x8C9328", VA = "0x8C9328")]
		public void SetParent(MagicaPhysicsManager manager)
		{
		}

		[Token(Token = "0x6001383")]
		public abstract void Create();

		[Token(Token = "0x6001384")]
		public abstract void Dispose();

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x8D8BA0", Offset = "0x8D8BA0", VA = "0x8D8BA0")]
		protected PhysicsManagerAccess()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class PhysicsManagerBoneData : PhysicsManagerAccess
	{
		[Token(Token = "0x200032B")]
		[BurstCompile]
		private struct RestoreBoneJob : IJobParallelForTransform
		{
			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<float3> localPosList;

			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<quaternion> localRotList;

			[Token(Token = "0x6001395")]
			[Address(RVA = "0x6FA8E8", Offset = "0x6FA8E8", VA = "0x6FA8E8", Slot = "4")]
			public void Execute(int index, TransformAccess transform)
			{
			}
		}

		[Token(Token = "0x200032C")]
		[BurstCompile]
		private struct ReadBoneJob : IJobParallelForTransform
		{
			[Token(Token = "0x4001668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[WriteOnly]
			public NativeArray<float3> bonePosList;

			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[WriteOnly]
			public NativeArray<quaternion> boneRotList;

			[Token(Token = "0x6001396")]
			[Address(RVA = "0x6FA894", Offset = "0x6FA894", VA = "0x6FA894", Slot = "4")]
			public void Execute(int index, TransformAccess transform)
			{
			}
		}

		[Token(Token = "0x200032D")]
		[BurstCompile]
		private struct WriteBontToTransformJob : IJobParallelForTransform
		{
			[Token(Token = "0x400166A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<int> writeBoneIndexList;

			[Token(Token = "0x400166B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<float3> bonePosList;

			[Token(Token = "0x400166C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<quaternion> boneRotList;

			[Token(Token = "0x6001397")]
			[Address(RVA = "0x6FA93C", Offset = "0x6FA93C", VA = "0x6FA93C", Slot = "4")]
			public void Execute(int index, TransformAccess transform)
			{
			}
		}

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FixedTransformAccessArray boneList;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FixedNativeList<float3> bonePosList;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FixedNativeList<quaternion> boneRotList;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FixedNativeList<float3> boneSclList;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FixedTransformAccessArray restoreBoneList;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FixedNativeList<float3> restoreBoneLocalPosList;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FixedNativeList<quaternion> restoreBoneLocalRotList;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FixedTransformAccessArray writeBoneList;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FixedNativeList<int> writeBoneIndexList;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ExNativeMultiHashMap<int, int> writeBoneParticleIndexMap;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, int> boneToWriteIndexDict;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6706D4", Offset = "0x6706D4")]
		private bool <hasBoneChanged>k__BackingField;

		[Token(Token = "0x1700029D")]
		public bool hasBoneChanged
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x8D8BA8", Offset = "0x8D8BA8", VA = "0x8D8BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67741C", Offset = "0x67741C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x8D8BB0", Offset = "0x8D8BB0", VA = "0x8D8BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67742C", Offset = "0x67742C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public int RestoreBoneCount
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x8D9104", Offset = "0x8D9104", VA = "0x8D9104")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700029F")]
		public int ReadBoneCount
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x8D9610", Offset = "0x8D9610", VA = "0x8D9610")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A0")]
		public int WriteBoneCount
		{
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x8D9640", Offset = "0x8D9640", VA = "0x8D9640")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x8D8BBC", Offset = "0x8D8BBC", VA = "0x8D8BBC", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x8D8D58", Offset = "0x8D8D58", VA = "0x8D8D58", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x8D8ED8", Offset = "0x8D8ED8", VA = "0x8D8ED8")]
		public int AddRestoreBone(Transform target, float3 lpos, quaternion lrot)
		{
			return default(int);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x8D901C", Offset = "0x8D901C", VA = "0x8D901C")]
		public void RemoveRestoreBone(int restoreBoneIndex)
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x8D9134", Offset = "0x8D9134", VA = "0x8D9134")]
		public int AddBone(Transform target, int pindex = -1)
		{
			return default(int);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x8D93F4", Offset = "0x8D93F4", VA = "0x8D93F4")]
		public bool RemoveBone(int boneIndex, int pindex = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x8D9670", Offset = "0x8D9670", VA = "0x8D9670")]
		public void ResetBoneFromTransform()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x8D97C8", Offset = "0x8D97C8", VA = "0x8D97C8")]
		public void ReadBoneFromTransform()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x8D990C", Offset = "0x8D990C", VA = "0x8D990C")]
		public void WriteBoneToTransform()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x8C9E1C", Offset = "0x8C9E1C", VA = "0x8C9E1C")]
		public PhysicsManagerBoneData()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class PhysicsManagerCompute : PhysicsManagerAccess
	{
		[Token(Token = "0x200032F")]
		[BurstCompile]
		private struct ForceAndVelocityJob : IJobParallelFor
		{
			[Token(Token = "0x4001680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float updateDeltaTime;

			[Token(Token = "0x4001681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float updatePower;

			[Token(Token = "0x4001682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int loopIndex;

			[Token(Token = "0x4001683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x4001684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<CurveParam> teamMassList;

			[Token(Token = "0x4001685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<CurveParam> teamGravityList;

			[Token(Token = "0x4001686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<CurveParam> teamDragList;

			[Token(Token = "0x4001687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<CurveParam> teamMaxVelocityList;

			[Token(Token = "0x4001688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[ReadOnly]
			public NativeArray<float> depthList;

			[Token(Token = "0x400168B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[ReadOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x400168C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[ReadOnly]
			public NativeArray<quaternion> baseRotList;

			[Token(Token = "0x400168D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[WriteOnly]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x400168E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[WriteOnly]
			public NativeArray<quaternion> nextRotList;

			[Token(Token = "0x400168F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public NativeArray<float> frictionList;

			[Token(Token = "0x4001690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public NativeArray<float3> posList;

			[Token(Token = "0x4001691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public NativeArray<quaternion> rotList;

			[Token(Token = "0x4001692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public NativeArray<float3> velocityList;

			[Token(Token = "0x4001693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public NativeArray<float3> oldPosList;

			[Token(Token = "0x4001694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			public NativeArray<quaternion> oldRotList;

			[Token(Token = "0x4001695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			[WriteOnly]
			public NativeArray<float3> oldSlowPosList;

			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x6FA9E4", Offset = "0x6FA9E4", VA = "0x6FA9E4", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x2000330")]
		[BurstCompile]
		private struct FixPositionJob : IJobParallelFor
		{
			[Token(Token = "0x4001696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float updatePower;

			[Token(Token = "0x4001697")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float updateDeltaTime;

			[Token(Token = "0x4001698")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x4001699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x400169A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x400169B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[ReadOnly]
			public NativeArray<float3> nextPosList;

			[Token(Token = "0x400169C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[ReadOnly]
			public NativeArray<quaternion> nextRotList;

			[Token(Token = "0x400169D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[ReadOnly]
			public NativeArray<float> frictionList;

			[Token(Token = "0x400169E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[ReadOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x400169F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[ReadOnly]
			public NativeArray<quaternion> baseRotList;

			[Token(Token = "0x40016A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public NativeArray<float3> velocityList;

			[Token(Token = "0x40016A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[WriteOnly]
			public NativeArray<quaternion> rotList;

			[Token(Token = "0x40016A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public NativeArray<float3> oldPosList;

			[Token(Token = "0x40016A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public NativeArray<quaternion> oldRotList;

			[Token(Token = "0x40016A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public NativeArray<float3> oldSlowPosList;

			[Token(Token = "0x40016A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public NativeArray<float3> posList;

			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x6FA990", Offset = "0x6FA990", VA = "0x6FA990", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int solverIteration;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<PhysicsManagerConstraint> constraints;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670754", Offset = "0x670754")]
		private ClampPositionConstraint <ClampPosition>k__BackingField;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670764", Offset = "0x670764")]
		private ClampDistanceConstraint <ClampDistance>k__BackingField;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670774", Offset = "0x670774")]
		private ClampRotationConstraint <ClampRotation>k__BackingField;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670784", Offset = "0x670784")]
		private SpringConstraint <Spring>k__BackingField;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670794", Offset = "0x670794")]
		private RestoreDistanceConstraint <RestoreDistance>k__BackingField;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6707A4", Offset = "0x6707A4")]
		private RestoreRotationConstraint <RestoreRotation>k__BackingField;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6707B4", Offset = "0x6707B4")]
		private TriangleBendConstraint <TriangleBend>k__BackingField;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6707C4", Offset = "0x6707C4")]
		private VolumeConstraint <Volume>k__BackingField;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6707D4", Offset = "0x6707D4")]
		private ColliderCollisionConstraint <Collision>k__BackingField;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<PhysicsManagerWorker> workers;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6707E4", Offset = "0x6707E4")]
		private RenderMeshWorker <RenderMeshWorker>k__BackingField;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6707F4", Offset = "0x6707F4")]
		private VirtualMeshWorker <VirtualMeshWorker>k__BackingField;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670804", Offset = "0x670804")]
		private MeshParticleWorker <MeshParticleWorker>k__BackingField;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670814", Offset = "0x670814")]
		private SpringMeshWorker <SpringMeshWorker>k__BackingField;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670824", Offset = "0x670824")]
		private AdjustRotationWorker <AdjustRotationWorker>k__BackingField;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670834", Offset = "0x670834")]
		private LineWorker <LineWorker>k__BackingField;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private JobHandle jobHandle;

		[Token(Token = "0x170002A1")]
		public ClampPositionConstraint ClampPosition
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x8D9D4C", Offset = "0x8D9D4C", VA = "0x8D9D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67743C", Offset = "0x67743C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x8D9D54", Offset = "0x8D9D54", VA = "0x8D9D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67744C", Offset = "0x67744C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public ClampDistanceConstraint ClampDistance
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x8D9D5C", Offset = "0x8D9D5C", VA = "0x8D9D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67745C", Offset = "0x67745C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x8D9D64", Offset = "0x8D9D64", VA = "0x8D9D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67746C", Offset = "0x67746C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public ClampRotationConstraint ClampRotation
		{
			[Token(Token = "0x600139C")]
			[Address(RVA = "0x8D9D6C", Offset = "0x8D9D6C", VA = "0x8D9D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67747C", Offset = "0x67747C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139D")]
			[Address(RVA = "0x8D9D74", Offset = "0x8D9D74", VA = "0x8D9D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67748C", Offset = "0x67748C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public SpringConstraint Spring
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x8D9D7C", Offset = "0x8D9D7C", VA = "0x8D9D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67749C", Offset = "0x67749C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x8D9D84", Offset = "0x8D9D84", VA = "0x8D9D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6774AC", Offset = "0x6774AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public RestoreDistanceConstraint RestoreDistance
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x8D9D8C", Offset = "0x8D9D8C", VA = "0x8D9D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6774BC", Offset = "0x6774BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x8D9D94", Offset = "0x8D9D94", VA = "0x8D9D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6774CC", Offset = "0x6774CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public RestoreRotationConstraint RestoreRotation
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x8D9D9C", Offset = "0x8D9D9C", VA = "0x8D9D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6774DC", Offset = "0x6774DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x8D9DA4", Offset = "0x8D9DA4", VA = "0x8D9DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6774EC", Offset = "0x6774EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public TriangleBendConstraint TriangleBend
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x8D9DAC", Offset = "0x8D9DAC", VA = "0x8D9DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6774FC", Offset = "0x6774FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x8D9DB4", Offset = "0x8D9DB4", VA = "0x8D9DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67750C", Offset = "0x67750C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public VolumeConstraint Volume
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x8D9DBC", Offset = "0x8D9DBC", VA = "0x8D9DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67751C", Offset = "0x67751C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x8D9DC4", Offset = "0x8D9DC4", VA = "0x8D9DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67752C", Offset = "0x67752C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public ColliderCollisionConstraint Collision
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x8D9DCC", Offset = "0x8D9DCC", VA = "0x8D9DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67753C", Offset = "0x67753C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x8D9DD4", Offset = "0x8D9DD4", VA = "0x8D9DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67754C", Offset = "0x67754C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public RenderMeshWorker RenderMeshWorker
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x8D9DDC", Offset = "0x8D9DDC", VA = "0x8D9DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67755C", Offset = "0x67755C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x8D9DE4", Offset = "0x8D9DE4", VA = "0x8D9DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67756C", Offset = "0x67756C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public VirtualMeshWorker VirtualMeshWorker
		{
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x8D9DEC", Offset = "0x8D9DEC", VA = "0x8D9DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67757C", Offset = "0x67757C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x8D9DF4", Offset = "0x8D9DF4", VA = "0x8D9DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67758C", Offset = "0x67758C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public MeshParticleWorker MeshParticleWorker
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x8C5DD0", Offset = "0x8C5DD0", VA = "0x8C5DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67759C", Offset = "0x67759C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x8D9DFC", Offset = "0x8D9DFC", VA = "0x8D9DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6775AC", Offset = "0x6775AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public SpringMeshWorker SpringMeshWorker
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x8C86E8", Offset = "0x8C86E8", VA = "0x8C86E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6775BC", Offset = "0x6775BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x8D9E04", Offset = "0x8D9E04", VA = "0x8D9E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6775CC", Offset = "0x6775CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public AdjustRotationWorker AdjustRotationWorker
		{
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x8D9E0C", Offset = "0x8D9E0C", VA = "0x8D9E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6775DC", Offset = "0x6775DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x8D9E14", Offset = "0x8D9E14", VA = "0x8D9E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6775EC", Offset = "0x6775EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public LineWorker LineWorker
		{
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x8D9E1C", Offset = "0x8D9E1C", VA = "0x8D9E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6775FC", Offset = "0x6775FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x8D9E24", Offset = "0x8D9E24", VA = "0x8D9E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67760C", Offset = "0x67760C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public JobHandle MasterJob
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x8D97B4", Offset = "0x8D97B4", VA = "0x8D97B4")]
			get
			{
				return default(JobHandle);
			}
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x8D97C0", Offset = "0x8D97C0", VA = "0x8D97C0")]
			set
			{
			}
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x8D9E2C", Offset = "0x8D9E2C", VA = "0x8D9E2C", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x8DA430", Offset = "0x8DA430", VA = "0x8DA430", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x8DA618", Offset = "0x8DA618", VA = "0x8DA618")]
		public void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x8C9708", Offset = "0x8C9708", VA = "0x8C9708")]
		public void Update()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x8C97CC", Offset = "0x8C97CC", VA = "0x8C97CC")]
		public void LateUpdate(UpdateTimeManager update)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x8DA814", Offset = "0x8DA814", VA = "0x8DA814")]
		private void InitJob()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x8DA81C", Offset = "0x8DA81C", VA = "0x8DA81C")]
		private void CompleteJob()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x8DAA08", Offset = "0x8DAA08", VA = "0x8DAA08")]
		private void UpdatePhysics(int updateCount, int loopIndex, float updatePower, float updateDeltaTime)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x8DA848", Offset = "0x8DA848", VA = "0x8DA848")]
		private void WarmupWorker()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x8DA928", Offset = "0x8DA928", VA = "0x8DA928")]
		private void CompleteWarmupWorker()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x8C9F94", Offset = "0x8C9F94", VA = "0x8C9F94")]
		public PhysicsManagerCompute()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public abstract class PhysicsManagerConstraint
	{
		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x670994", Offset = "0x670994")]
		public int iteration;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6709AC", Offset = "0x6709AC")]
		private MagicaPhysicsManager <Manager>k__BackingField;

		[Token(Token = "0x170002B1")]
		public MagicaPhysicsManager Manager
		{
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x8DC12C", Offset = "0x8DC12C", VA = "0x8DC12C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67761C", Offset = "0x67761C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x8DC134", Offset = "0x8DC134", VA = "0x8DC134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67762C", Offset = "0x67762C")]
			set
			{
			}
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x8DA420", Offset = "0x8DA420", VA = "0x8DA420")]
		public void Init(MagicaPhysicsManager manager)
		{
		}

		[Token(Token = "0x60013C8")]
		public abstract void Create();

		[Token(Token = "0x60013C9")]
		public abstract void RemoveTeam(int teamId);

		[Token(Token = "0x60013CA")]
		public abstract void Release();

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x8DC13C", Offset = "0x8DC13C", VA = "0x8DC13C", Slot = "7")]
		public virtual int GetIterationCount()
		{
			return default(int);
		}

		[Token(Token = "0x60013CC")]
		public abstract JobHandle SolverConstraint(float dtime, float updatePower, int iteration, JobHandle jobHandle);

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x8DC144", Offset = "0x8DC144", VA = "0x8DC144")]
		protected PhysicsManagerConstraint()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class PhysicsManagerMeshData : PhysicsManagerAccess
	{
		[Token(Token = "0x2000333")]
		public struct SharedVirtualMeshInfo
		{
			[Token(Token = "0x40016D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int uid;

			[Token(Token = "0x40016D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int useCount;

			[Token(Token = "0x40016D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int sharedChildMeshStartIndex;

			[Token(Token = "0x40016D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int sharedChildMeshCount;

			[Token(Token = "0x40016D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChunkData vertexChunk;

			[Token(Token = "0x40016D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ChunkData weightChunk;

			[Token(Token = "0x40016D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ChunkData triangleChunk;

			[Token(Token = "0x40016DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChunkData vertexToTriangleChunk;
		}

		[Token(Token = "0x2000334")]
		public struct VirtualMeshInfo
		{
			[Token(Token = "0x40016DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint flag;

			[Token(Token = "0x40016DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int sharedVirtualMeshIndex;

			[Token(Token = "0x40016DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int meshUseCount;

			[Token(Token = "0x40016DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int vertexUseCount;

			[Token(Token = "0x40016DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChunkData vertexChunk;

			[Token(Token = "0x40016E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ChunkData boneChunk;

			[Token(Token = "0x40016E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ChunkData triangleChunk;

			[Token(Token = "0x6001408")]
			[Address(RVA = "0x6FAD9C", Offset = "0x6FAD9C", VA = "0x6FAD9C")]
			public bool IsFlag(uint flag)
			{
				return default(bool);
			}

			[Token(Token = "0x6001409")]
			[Address(RVA = "0x6FADAC", Offset = "0x6FADAC", VA = "0x6FADAC")]
			public void SetFlag(uint flag, bool sw)
			{
			}

			[Token(Token = "0x600140A")]
			[Address(RVA = "0x6FADC8", Offset = "0x6FADC8", VA = "0x6FADC8")]
			public bool IsActive()
			{
				return default(bool);
			}

			[Token(Token = "0x600140B")]
			[Address(RVA = "0x6FADD4", Offset = "0x6FADD4", VA = "0x6FADD4")]
			public bool IsUse()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000335")]
		public struct SharedChildMeshInfo
		{
			[Token(Token = "0x40016E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long cuid;

			[Token(Token = "0x40016E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int sharedVirtualMeshIndex;

			[Token(Token = "0x40016E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int virtualMeshIndex;

			[Token(Token = "0x40016E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int meshUseCount;

			[Token(Token = "0x40016E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ChunkData vertexChunk;

			[Token(Token = "0x40016E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChunkData weightChunk;
		}

		[Token(Token = "0x2000336")]
		public struct SharedRenderMeshInfo
		{
			[Token(Token = "0x40016E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int uid;

			[Token(Token = "0x40016E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int useCount;

			[Token(Token = "0x40016EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint flag;

			[Token(Token = "0x40016EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public ChunkData vertexChunk;

			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ChunkData bonePerVertexChunk;

			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ChunkData boneWeightsChunk;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int rendererBoneIndex;

			[Token(Token = "0x600140C")]
			[Address(RVA = "0x6FAD64", Offset = "0x6FAD64", VA = "0x6FAD64")]
			public bool IsFlag(uint flag)
			{
				return default(bool);
			}

			[Token(Token = "0x600140D")]
			[Address(RVA = "0x6FAD74", Offset = "0x6FAD74", VA = "0x6FAD74")]
			public void SetFlag(uint flag, bool sw)
			{
			}

			[Token(Token = "0x600140E")]
			[Address(RVA = "0x6FAD90", Offset = "0x6FAD90", VA = "0x6FAD90")]
			public bool IsSkinning()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000337")]
		public class SharedRenderMeshBuffer
		{
			[Token(Token = "0x40016EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x40016F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x40016F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x40016F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BoneWeight[] boneWeights;

			[Token(Token = "0x600140F")]
			[Address(RVA = "0x91E294", Offset = "0x91E294", VA = "0x91E294")]
			public SharedRenderMeshBuffer()
			{
			}
		}

		[Token(Token = "0x2000338")]
		public struct RenderMeshInfo
		{
			[Token(Token = "0x40016F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint flag;

			[Token(Token = "0x40016F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int renderSharedMeshIndex;

			[Token(Token = "0x40016F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int sharedRenderMeshVertexStartIndex;

			[Token(Token = "0x40016F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int meshUseCount;

			[Token(Token = "0x40016F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChunkData vertexChunk;

			[Token(Token = "0x40016F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ChunkData boneWeightsChunk;

			[Token(Token = "0x40016F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int transformIndex;

			[Token(Token = "0x6001410")]
			[Address(RVA = "0x6FAD0C", Offset = "0x6FAD0C", VA = "0x6FAD0C")]
			public bool IsFlag(uint flag)
			{
				return default(bool);
			}

			[Token(Token = "0x6001411")]
			[Address(RVA = "0x6FAD1C", Offset = "0x6FAD1C", VA = "0x6FAD1C")]
			public void SetFlag(uint flag, bool sw)
			{
			}

			[Token(Token = "0x6001412")]
			[Address(RVA = "0x6FAD38", Offset = "0x6FAD38", VA = "0x6FAD38")]
			public bool IsActive()
			{
				return default(bool);
			}

			[Token(Token = "0x6001413")]
			[Address(RVA = "0x6FAD44", Offset = "0x6FAD44", VA = "0x6FAD44")]
			public bool IsUse()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HashSet<BaseMeshDeformer> meshSet;

		[Token(Token = "0x40016A9")]
		public const uint MeshFlag_Active = 1u;

		[Token(Token = "0x40016AA")]
		public const uint Meshflag_CalcNormalTangent = 2u;

		[Token(Token = "0x40016AB")]
		public const uint MeshFlag_Skinning = 4u;

		[Token(Token = "0x40016AC")]
		public const uint MeshFlag_ExistNormals = 65536u;

		[Token(Token = "0x40016AD")]
		public const uint MeshFlag_ExistTangents = 131072u;

		[Token(Token = "0x40016AE")]
		public const uint MeshFlag_ExistWeights = 262144u;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FixedNativeList<SharedVirtualMeshInfo> sharedVirtualMeshInfoList;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<int, int> sharedVirtualMeshIdToIndexDict;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FixedChunkNativeArray<float2> sharedVirtualUvList;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FixedChunkNativeArray<uint> sharedVirtualVertexInfoList;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FixedChunkNativeArray<MeshData.VertexWeight> sharedVirtualWeightList;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FixedChunkNativeArray<int> sharedVirtualTriangleList;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FixedChunkNativeArray<uint> sharedVirtualVertexToTriangleInfoList;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FixedChunkNativeArray<int> sharedVirtualVertexToTriangleIndexList;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FixedNativeList<VirtualMeshInfo> virtualMeshInfoList;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FixedChunkNativeArray<uint> virtualVertexInfoList;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FixedChunkNativeArray<byte> virtualVertexFlagList;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FixedChunkNativeArray<float3> virtualPosList;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FixedChunkNativeArray<quaternion> virtualRotList;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FixedChunkNativeArray<int> virtualTransformIndexList;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FixedChunkNativeArray<float3> virtualTriangleNormalList;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FixedChunkNativeArray<float3> virtualTriangleTangentList;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public FixedChunkNativeArray<ushort> virtualTriangleMeshIndexList;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public FixedNativeList<SharedChildMeshInfo> sharedChildMeshInfoList;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Dictionary<long, int> sharedChildMeshIdToSharedVirtualMeshIndexDict;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public FixedChunkNativeArray<uint> sharedChildVertexInfoList;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public FixedChunkNativeArray<MeshData.VertexWeight> sharedChildWeightList;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FixedNativeList<SharedRenderMeshInfo> sharedRenderMeshInfoList;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Dictionary<int, int> sharedRenderMeshIdToIndexDict;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public FixedChunkNativeArray<float3> sharedRenderVertices;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FixedChunkNativeArray<float3> sharedRenderNormals;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FixedChunkNativeArray<float4> sharedRenderTangents;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public FixedChunkNativeArray<BoneWeight> sharedBoneWeightList;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Dictionary<int, SharedRenderMeshBuffer> sharedRenderMeshIdToBufferDict;

		[Token(Token = "0x40016CB")]
		public const uint RenderVertexFlag_Use = 65536u;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public FixedNativeList<RenderMeshInfo> renderMeshInfoList;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ExNativeMultiHashMap<int, int4> renderToChildMeshIndexMap;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FixedChunkNativeArray<uint> renderVertexFlagList;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public FixedChunkNativeArray<float3> renderPosList;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public FixedChunkNativeArray<float3> renderNormalList;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FixedChunkNativeArray<float4> renderTangentList;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public FixedChunkNativeArray<BoneWeight> renderBoneWeightList;

		[Token(Token = "0x170002B2")]
		public int SharedVirtualMeshCount
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x8DE444", Offset = "0x8DE444", VA = "0x8DE444")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B3")]
		public int VirtualMeshCount
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x8DB630", Offset = "0x8DB630", VA = "0x8DB630")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B4")]
		public int VirtualMeshVertexCount
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x8DE4A4", Offset = "0x8DE4A4", VA = "0x8DE4A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B5")]
		public int VirtualMeshTriangleCount
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x8DE570", Offset = "0x8DE570", VA = "0x8DE570")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B6")]
		public int VirtualMeshVertexUseCount
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x8DE63C", Offset = "0x8DE63C", VA = "0x8DE63C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B7")]
		public int VirtualMeshUseCount
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x8DE6FC", Offset = "0x8DE6FC", VA = "0x8DE6FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B8")]
		public int SharedRenderMeshCount
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x8DEDB0", Offset = "0x8DEDB0", VA = "0x8DEDB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B9")]
		public int SharedChildMeshCount
		{
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x8DEE10", Offset = "0x8DEE10", VA = "0x8DEE10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BA")]
		public int RenderMeshCount
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x8E0EF8", Offset = "0x8E0EF8", VA = "0x8E0EF8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BB")]
		public int RenderMeshVertexCount
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x8E0F58", Offset = "0x8E0F58", VA = "0x8E0F58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BC")]
		public int RenderMeshUseCount
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x8E1024", Offset = "0x8E1024", VA = "0x8E1024")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BD")]
		public int RenderMeshVertexUseCount
		{
			[Token(Token = "0x6001403")]
			[Address(RVA = "0x8E111C", Offset = "0x8E111C", VA = "0x8E111C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x8DC154", Offset = "0x8DC154", VA = "0x8DC154", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x8DC59C", Offset = "0x8DC59C", VA = "0x8DC59C", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x8DC9D4", Offset = "0x8DC9D4", VA = "0x8DC9D4")]
		public void AddMesh(BaseMeshDeformer bmesh)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x8DCA44", Offset = "0x8DCA44", VA = "0x8DCA44")]
		public void RemoveMesh(BaseMeshDeformer bmesh)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x8DCAF0", Offset = "0x8DCAF0", VA = "0x8DCAF0")]
		public bool ContainsMesh(BaseMeshDeformer bmesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x8DCB60", Offset = "0x8DCB60", VA = "0x8DCB60")]
		public int AddVirtualMesh(int uid, int vertexCount, int weightCount, int boneCount, int triangleCount, int vertexToTriangleIndexCount)
		{
			return default(int);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x8DD134", Offset = "0x8DD134", VA = "0x8DD134")]
		public bool IsEmptySharedVirtualMesh(int uid)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x8DD1B0", Offset = "0x8DD1B0", VA = "0x8DD1B0")]
		public void SetSharedVirtualMeshData(int virtualMeshIndex, uint[] sharedVertexInfoList, MeshData.VertexWeight[] sharedWeightList, Vector2[] sharedUv, int[] sharedTriangles, uint[] vertexToTriangleInfoList, int[] vertexToTriangleIndexList)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x8DD458", Offset = "0x8DD458", VA = "0x8DD458")]
		public void RemoveVirtualMesh(int virtualMeshIndex)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x8DD8F8", Offset = "0x8DD8F8", VA = "0x8DD8F8")]
		public bool ExistsVirtualMesh(int virtualMeshIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x8C5E0C", Offset = "0x8C5E0C", VA = "0x8C5E0C")]
		public VirtualMeshInfo GetVirtualMeshInfo(int virtualMeshIndex)
		{
			return default(VirtualMeshInfo);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x8DD968", Offset = "0x8DD968", VA = "0x8DD968")]
		public bool IsUseVirtualMesh(int virtualMeshIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x8DDA24", Offset = "0x8DDA24", VA = "0x8DDA24")]
		public bool IsActiveVirtualMesh(int virtualMeshIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x8DDAE0", Offset = "0x8DDAE0", VA = "0x8DDAE0")]
		public void SetVirtualMeshActive(int virtualMeshIndex, bool sw)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x8DDC34", Offset = "0x8DDC34", VA = "0x8DDC34")]
		public void AddUseVirtualMesh(int virtualMeshIndex)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x8DDD54", Offset = "0x8DDD54", VA = "0x8DDD54")]
		public void RemoveUseVirtualMesh(int virtualMeshIndex)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x8DDE74", Offset = "0x8DDE74", VA = "0x8DDE74")]
		public bool AddUseVirtualVertex(int virtualMeshIndex, int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x8DE02C", Offset = "0x8DE02C", VA = "0x8DE02C")]
		public bool RemoveUseVirtualVertex(int virtualMeshIndex, int vindex)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x8DE1E0", Offset = "0x8DE1E0", VA = "0x8DE1E0")]
		public void CopyToVirtualMeshWorldData(int virtualMeshIndex, Vector3[] vertices, Vector3[] normals, Vector3[] tangents)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x8DE800", Offset = "0x8DE800", VA = "0x8DE800")]
		public int AddSharedChildMesh(long cuid, int virtualMeshIndex, int vertexCount, int weightCount)
		{
			return default(int);
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x8DEA74", Offset = "0x8DEA74", VA = "0x8DEA74")]
		public bool IsEmptySharedChildMesh(long cuid)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x8DEAF0", Offset = "0x8DEAF0", VA = "0x8DEAF0")]
		public void SetSharedChildMeshData(int sharedMeshIndex, uint[] sharedVertexInfoList, MeshData.VertexWeight[] sharedVertexWeightList)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x8DEC0C", Offset = "0x8DEC0C", VA = "0x8DEC0C")]
		public void RemoveSharedChildMesh(int sharedChildMeshIndex)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x8DEE70", Offset = "0x8DEE70", VA = "0x8DEE70")]
		public int AddRenderMesh(int uid, bool isSkinning, int vertexCount, int rendererBoneIndex, int boneWeightCount)
		{
			return default(int);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x8DF44C", Offset = "0x8DF44C", VA = "0x8DF44C")]
		public void AddRenderMeshBone(int renderMeshIndex, Transform rendererTransform)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x8DF564", Offset = "0x8DF564", VA = "0x8DF564")]
		public bool IsEmptySharedRenderMesh(int uid)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x8DF5E0", Offset = "0x8DF5E0", VA = "0x8DF5E0")]
		public void SetRenderSharedMeshData(int renderMeshIndex, Vector3[] sharedVertices, Vector3[] sharedNormals, Vector4[] sharedTangents, BoneWeight[] sharedBoneWeights)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x8DF874", Offset = "0x8DF874", VA = "0x8DF874")]
		public void RemoveRenderMesh(int renderMeshIndex)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x8DFC8C", Offset = "0x8DFC8C", VA = "0x8DFC8C")]
		public void RemoveRenderMeshBone(int renderMeshIndex)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x8DFDA0", Offset = "0x8DFDA0", VA = "0x8DFDA0")]
		public bool IsUseRenderMesh(int renderMeshIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x8DFE50", Offset = "0x8DFE50", VA = "0x8DFE50")]
		public bool IsActiveRenderMesh(int renderMeshIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x8DFF00", Offset = "0x8DFF00", VA = "0x8DFF00")]
		public void SetRenderMeshFlag(int renderMeshIndex, uint flag, bool sw)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x8E003C", Offset = "0x8E003C", VA = "0x8E003C")]
		public bool IsRenderMeshFlag(int renderMeshIndex, uint flag)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x8E0128", Offset = "0x8E0128", VA = "0x8E0128")]
		public void SetRenderMeshActive(int renderMeshIndex, bool sw)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x8E0258", Offset = "0x8E0258", VA = "0x8E0258")]
		public void AddUseRenderMesh(int renderMeshIndex)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x8E0374", Offset = "0x8E0374", VA = "0x8E0374")]
		public void RemoveUseRenderMesh(int renderMeshIndex)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x8E0490", Offset = "0x8E0490", VA = "0x8E0490")]
		public void LinkRenderMesh(int renderMeshIndex, int childMeshVertexStart, int childMeshWeightStart, int virtualMeshVertexStart, int sharedVirtualMeshVertexStart)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x8E0550", Offset = "0x8E0550", VA = "0x8E0550")]
		public void UnlinkRenderMesh(int renderMeshIndex, int childMeshVertexStart, int childMeshWeightStart, int virtualMeshVertexStart, int sharedVirtualMeshVertexStart)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x8E0610", Offset = "0x8E0610", VA = "0x8E0610")]
		public void CopyToRenderMeshLocalPositionData(int renderMeshIndex, Mesh mesh)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x8E0788", Offset = "0x8E0788", VA = "0x8E0788")]
		public void CopyToRenderMeshLocalNormalTangentData(int renderMeshIndex, Mesh mesh)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x8E09E8", Offset = "0x8E09E8", VA = "0x8E09E8")]
		public void CopyToRenderMeshBoneWeightData(int renderMeshIndex, Mesh mesh, Mesh sharedMesh)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x8E0B60", Offset = "0x8E0B60", VA = "0x8E0B60")]
		public void CopyToRenderMeshWorldData(int renderMeshIndex, Transform target, Vector3[] vertices, Vector3[] normals, Vector3[] tangents)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x8E11DC", Offset = "0x8E11DC", VA = "0x8E11DC")]
		public void SetVirtualMeshBone(int virtualMeshIndex, List<Transform> boneList)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x8E135C", Offset = "0x8E135C", VA = "0x8E135C")]
		public void ResetVirtualMeshBone(int virtualMeshIndex)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x8DB690", Offset = "0x8DB690", VA = "0x8DB690")]
		public void FinishMesh()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x8C9E8C", Offset = "0x8C9E8C", VA = "0x8C9E8C")]
		public PhysicsManagerMeshData()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class PhysicsManagerParticleData : PhysicsManagerAccess
	{
		[Token(Token = "0x200033A")]
		public struct ParticleFlag
		{
			[Token(Token = "0x4001724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint flag;

			[Token(Token = "0x600142B")]
			[Address(RVA = "0x6FAEA8", Offset = "0x6FAEA8", VA = "0x6FAEA8")]
			public ParticleFlag(params uint[] flags)
			{
			}

			[Token(Token = "0x600142C")]
			[Address(RVA = "0x6FAEB0", Offset = "0x6FAEB0", VA = "0x6FAEB0")]
			public bool IsFlag(uint flag)
			{
				return default(bool);
			}

			[Token(Token = "0x600142D")]
			[Address(RVA = "0x6FAEC0", Offset = "0x6FAEC0", VA = "0x6FAEC0")]
			public void SetFlag(uint flag, bool sw)
			{
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0x6FAEDC", Offset = "0x6FAEDC", VA = "0x6FAEDC")]
			public bool IsValid()
			{
				return default(bool);
			}

			[Token(Token = "0x600142F")]
			[Address(RVA = "0x6FAEE8", Offset = "0x6FAEE8", VA = "0x6FAEE8")]
			public void SetEnable(bool sw)
			{
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0x6FAF04", Offset = "0x6FAF04", VA = "0x6FAF04")]
			public bool IsFixed()
			{
				return default(bool);
			}

			[Token(Token = "0x6001431")]
			[Address(RVA = "0x6FAF14", Offset = "0x6FAF14", VA = "0x6FAF14")]
			public bool IsKinematic()
			{
				return default(bool);
			}

			[Token(Token = "0x6001432")]
			[Address(RVA = "0x6FAF20", Offset = "0x6FAF20", VA = "0x6FAF20")]
			public bool IsCollision()
			{
				return default(bool);
			}

			[Token(Token = "0x6001433")]
			[Address(RVA = "0x6FAF2C", Offset = "0x6FAF2C", VA = "0x6FAF2C")]
			public bool IsHold()
			{
				return default(bool);
			}

			[Token(Token = "0x6001434")]
			[Address(RVA = "0x6FAF38", Offset = "0x6FAF38", VA = "0x6FAF38")]
			public bool IsCollider()
			{
				return default(bool);
			}

			[Token(Token = "0x6001435")]
			[Address(RVA = "0x6FAF44", Offset = "0x6FAF44", VA = "0x6FAF44")]
			public bool IsReadTransform()
			{
				return default(bool);
			}

			[Token(Token = "0x6001436")]
			[Address(RVA = "0x6FAF54", Offset = "0x6FAF54", VA = "0x6FAF54")]
			public bool IsWriteTransform()
			{
				return default(bool);
			}

			[Token(Token = "0x6001437")]
			[Address(RVA = "0x6FAF60", Offset = "0x6FAF60", VA = "0x6FAF60")]
			public bool IsRestoreTransform()
			{
				return default(bool);
			}

			[Token(Token = "0x6001438")]
			[Address(RVA = "0x6FAF6C", Offset = "0x6FAF6C", VA = "0x6FAF6C")]
			public bool IsReadSclTransform()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200033B")]
		[BurstCompile]
		private struct CopyBoneToParticleJob : IJobParallelFor
		{
			[Token(Token = "0x4001725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamData;

			[Token(Token = "0x4001726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.WorldInfluence> teamWorldInfluenceList;

			[Token(Token = "0x4001727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<ParticleFlag> flagList;

			[Token(Token = "0x4001728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<float> depthList;

			[Token(Token = "0x4001729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<int> transformIndexList;

			[Token(Token = "0x400172A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<float3> localPosList;

			[Token(Token = "0x400172B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x400172C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public NativeArray<float3> bonePosList;

			[Token(Token = "0x400172D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[ReadOnly]
			public NativeArray<quaternion> boneRotList;

			[Token(Token = "0x400172E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public NativeArray<float3> posList;

			[Token(Token = "0x400172F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public NativeArray<float3> oldPosList;

			[Token(Token = "0x4001730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public NativeArray<float3> oldSlowPosList;

			[Token(Token = "0x4001731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[WriteOnly]
			public NativeArray<quaternion> rotList;

			[Token(Token = "0x4001732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[WriteOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x4001733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[WriteOnly]
			public NativeArray<quaternion> baseRotList;

			[Token(Token = "0x6001439")]
			[Address(RVA = "0x6FAE4C", Offset = "0x6FAE4C", VA = "0x6FAE4C", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x200033C")]
		[BurstCompile]
		private struct CopyParticleToBoneJob : IJobParallelFor
		{
			[Token(Token = "0x4001734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<ParticleFlag> flagList;

			[Token(Token = "0x4001735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<float3> posList;

			[Token(Token = "0x4001736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<quaternion> rotList;

			[Token(Token = "0x4001737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeMultiHashMap<int, int> transformParticleIndexMap;

			[Token(Token = "0x4001738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<int> writeBoneIndexList;

			[Token(Token = "0x4001739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[WriteOnly]
			[NativeDisableParallelForRestriction]
			public NativeArray<float3> bonePosList;

			[Token(Token = "0x400173A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[NativeDisableParallelForRestriction]
			[WriteOnly]
			public NativeArray<quaternion> boneRotList;

			[Token(Token = "0x600143A")]
			[Address(RVA = "0x6FAEA0", Offset = "0x6FAEA0", VA = "0x6FAEA0", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x40016FA")]
		public const uint Flag_Enable = 1u;

		[Token(Token = "0x40016FB")]
		public const uint Flag_Kinematic = 2u;

		[Token(Token = "0x40016FC")]
		public const uint Flag_Hold = 4u;

		[Token(Token = "0x40016FD")]
		public const uint Flag_Collision = 8u;

		[Token(Token = "0x40016FE")]
		public const uint Flag_Collider = 16u;

		[Token(Token = "0x40016FF")]
		public const uint Flag_Plane = 32u;

		[Token(Token = "0x4001700")]
		public const uint Flag_CapsuleX = 64u;

		[Token(Token = "0x4001701")]
		public const uint Flag_CapsuleY = 128u;

		[Token(Token = "0x4001702")]
		public const uint Flag_CapsuleZ = 256u;

		[Token(Token = "0x4001703")]
		public const uint Flag_Box = 512u;

		[Token(Token = "0x4001704")]
		public const uint Flag_Transform_Read_Pos = 4096u;

		[Token(Token = "0x4001705")]
		public const uint Flag_Transform_Read_Rot = 8192u;

		[Token(Token = "0x4001706")]
		public const uint Flag_Transform_Read_Base = 16384u;

		[Token(Token = "0x4001707")]
		public const uint Flag_Transform_Read_Local = 32768u;

		[Token(Token = "0x4001708")]
		public const uint Flag_Transform_Read_Scl = 65536u;

		[Token(Token = "0x4001709")]
		public const uint Flag_Transform_Write = 131072u;

		[Token(Token = "0x400170A")]
		public const uint Flag_Transform_Restore = 262144u;

		[Token(Token = "0x400170B")]
		public const uint Flag_Step_Update = 16777216u;

		[Token(Token = "0x400170C")]
		public const uint Flag_Reset_Position = 33554432u;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FixedChunkNativeArray<ParticleFlag> flagList;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FixedChunkNativeArray<int> teamIdList;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FixedChunkNativeArray<float3> posList;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FixedChunkNativeArray<quaternion> rotList;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FixedChunkNativeArray<float3> oldPosList;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FixedChunkNativeArray<quaternion> oldRotList;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FixedChunkNativeArray<float3> oldSlowPosList;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FixedChunkNativeArray<float3> localPosList;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FixedChunkNativeArray<float3> basePosList;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FixedChunkNativeArray<quaternion> baseRotList;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FixedChunkNativeArray<float> depthList;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FixedChunkNativeArray<float> radiusList;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FixedChunkNativeArray<int> restoreTransformIndexList;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FixedChunkNativeArray<int> transformIndexList;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FixedChunkNativeArray<float> frictionList;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FixedChunkNativeArray<float3> velocityList;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FixedChunkNativeArray<float3> nextPos0List;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FixedChunkNativeArray<float3> nextPos1List;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int nextPosSwitch;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FixedChunkNativeArray<quaternion> nextRot0List;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FixedChunkNativeArray<quaternion> nextRot1List;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nextRotSwitch;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int colliderCount;

		[Token(Token = "0x170002BE")]
		public int Count
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0x92021C", Offset = "0x92021C", VA = "0x92021C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BF")]
		public int Length
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x9202B4", Offset = "0x9202B4", VA = "0x9202B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C0")]
		public int ColliderCount
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x920314", Offset = "0x920314", VA = "0x920314")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C1")]
		public FixedChunkNativeArray<float3> InNextPosList
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0x92042C", Offset = "0x92042C", VA = "0x92042C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		public FixedChunkNativeArray<float3> OutNextPosList
		{
			[Token(Token = "0x6001423")]
			[Address(RVA = "0x920448", Offset = "0x920448", VA = "0x920448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		public FixedChunkNativeArray<quaternion> InNextRotList
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0x920488", Offset = "0x920488", VA = "0x920488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public FixedChunkNativeArray<quaternion> OutNextRotList
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0x9204A4", Offset = "0x9204A4", VA = "0x9204A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x91E338", Offset = "0x91E338", VA = "0x91E338", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x91F02C", Offset = "0x91F02C", VA = "0x91F02C", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x91E6A0", Offset = "0x91E6A0", VA = "0x91E6A0")]
		public ChunkData CreateParticle(uint flag, int team, float3 wpos, quaternion wrot, float depth, float radius, float3 targetLocalPos)
		{
			return default(ChunkData);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x91F364", Offset = "0x91F364", VA = "0x91F364")]
		public ChunkData CreateParticle(int team, int count, Func<int, uint> funcFlag, Func<int, float3> funcWpos, Func<int, quaternion> funcWrot, Func<int, float> funcDepth, Func<int, float> funcRadius, Func<int, float3> funcTargetLocalPos)
		{
			return default(ChunkData);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x91FC18", Offset = "0x91FC18", VA = "0x91FC18")]
		public void RemoveParticle(ChunkData c)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x91EB98", Offset = "0x91EB98", VA = "0x91EB98")]
		public void SetEnable(ChunkData c, bool sw, Func<int, Transform> funcTarget, Func<int, float3> funcLpos, Func<int, quaternion> funcLrot)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x920030", Offset = "0x920030", VA = "0x920030")]
		public void SetRadius(int index, float radius)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x9200B0", Offset = "0x9200B0", VA = "0x9200B0")]
		public void SetLocalPos(int index, Vector3 lpos)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x920168", Offset = "0x920168", VA = "0x920168")]
		public void SetCollision(int index, bool sw)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x92031C", Offset = "0x92031C", VA = "0x92031C")]
		public bool IsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x9203BC", Offset = "0x9203BC", VA = "0x9203BC")]
		public int GetTeamId(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x920464", Offset = "0x920464", VA = "0x920464")]
		public void SwitchingNextPosList()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x9204C0", Offset = "0x9204C0", VA = "0x9204C0")]
		public void SwitchingNextRotList()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x9204E4", Offset = "0x9204E4", VA = "0x9204E4")]
		public void UpdateBoneToParticle()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x920974", Offset = "0x920974", VA = "0x920974")]
		public bool UpdateParticleToBone()
		{
			return default(bool);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x920CB0", Offset = "0x920CB0", VA = "0x920CB0")]
		public PhysicsManagerParticleData()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class PhysicsManagerTeamData : PhysicsManagerAccess
	{
		[Token(Token = "0x200033E")]
		public enum ForceMode
		{
			[Token(Token = "0x400174A")]
			None = 0,
			[Token(Token = "0x400174B")]
			VelocityAdd = 1,
			[Token(Token = "0x400174C")]
			VelocityChange = 2,
			[Token(Token = "0x400174D")]
			VelocityAddWithoutMass = 10,
			[Token(Token = "0x400174E")]
			VelocityChangeWithoutMass = 11
		}

		[Token(Token = "0x200033F")]
		public struct TeamData
		{
			[Token(Token = "0x400174F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ChunkData particleChunk;

			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint flag;

			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float friction;

			[Token(Token = "0x4001752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float selfCollisionRange;

			[Token(Token = "0x4001753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int boneIndex;

			[Token(Token = "0x4001754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float timeScale;

			[Token(Token = "0x4001755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float nowTime;

			[Token(Token = "0x4001756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int updateCount;

			[Token(Token = "0x4001757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int runCount;

			[Token(Token = "0x4001758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float blendRatio;

			[Token(Token = "0x4001759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float3 externalForce;

			[Token(Token = "0x400175A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float forceMassInfluence;

			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float forceWindInfluence;

			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float forceWindRandomScale;

			[Token(Token = "0x400175D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ForceMode forceMode;

			[Token(Token = "0x400175E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float3 impactForce;

			[Token(Token = "0x400175F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int restoreDistanceGroupIndex;

			[Token(Token = "0x4001760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int triangleBendGroupIndex;

			[Token(Token = "0x4001761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int clampDistanceGroupIndex;

			[Token(Token = "0x4001762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int clampPositionGroupIndex;

			[Token(Token = "0x4001763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int clampRotationGroupIndex;

			[Token(Token = "0x4001764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public int restoreRotationGroupIndex;

			[Token(Token = "0x4001765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int adjustRotationGroupIndex;

			[Token(Token = "0x4001766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public int springGroupIndex;

			[Token(Token = "0x4001767")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public int volumeGroupIndex;

			[Token(Token = "0x4001768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public int airLineGroupIndex;

			[Token(Token = "0x4001769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public int lineWorkerGroupIndex;

			[Token(Token = "0x400176A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public int selfCollisionGroupIndex;

			[Token(Token = "0x400176B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public int edgeCollisionGroupIndex;

			[Token(Token = "0x600145F")]
			[Address(RVA = "0x6FB028", Offset = "0x6FB028", VA = "0x6FB028")]
			public bool IsActive()
			{
				return default(bool);
			}

			[Token(Token = "0x6001460")]
			[Address(RVA = "0x6FB034", Offset = "0x6FB034", VA = "0x6FB034")]
			public bool IsUpdate()
			{
				return default(bool);
			}

			[Token(Token = "0x6001461")]
			[Address(RVA = "0x6FB044", Offset = "0x6FB044", VA = "0x6FB044")]
			public bool IsRunning()
			{
				return default(bool);
			}

			[Token(Token = "0x6001462")]
			[Address(RVA = "0x6FB054", Offset = "0x6FB054", VA = "0x6FB054")]
			public bool IsInterpolate()
			{
				return default(bool);
			}

			[Token(Token = "0x6001463")]
			[Address(RVA = "0x6FB060", Offset = "0x6FB060", VA = "0x6FB060")]
			public bool IsFlag(uint flag)
			{
				return default(bool);
			}

			[Token(Token = "0x6001464")]
			[Address(RVA = "0x6FB070", Offset = "0x6FB070", VA = "0x6FB070")]
			public void SetFlag(uint flag, bool sw)
			{
			}
		}

		[Token(Token = "0x2000340")]
		public struct WorldInfluence
		{
			[Token(Token = "0x400176C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CurveParam moveInfluence;

			[Token(Token = "0x400176D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CurveParam rotInfluence;

			[Token(Token = "0x400176E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float3 nowPosition;

			[Token(Token = "0x400176F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float3 oldPosition;

			[Token(Token = "0x4001770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float3 moveOffset;

			[Token(Token = "0x4001771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public quaternion nowRotation;

			[Token(Token = "0x4001772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public quaternion oldRotation;

			[Token(Token = "0x4001773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public quaternion rotationOffset;

			[Token(Token = "0x4001774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public int resetTeleport;

			[Token(Token = "0x4001775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float teleportDistance;

			[Token(Token = "0x4001776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public float teleportRotation;
		}

		[Token(Token = "0x2000341")]
		[BurstCompile]
		private struct PreProcessTeamDataJob : IJobParallelFor
		{
			[Token(Token = "0x4001777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float dtime;

			[Token(Token = "0x4001778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float updateDeltaTime;

			[Token(Token = "0x4001779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float globalTimeScale;

			[Token(Token = "0x400177A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool unscaledUpdate;

			[Token(Token = "0x400177B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int ups;

			[Token(Token = "0x400177C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float unityTimeScale;

			[Token(Token = "0x400177D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float elapsedTime;

			[Token(Token = "0x400177E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NativeArray<TeamData> teamData;

			[Token(Token = "0x400177F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NativeArray<WorldInfluence> teamWorldInfluenceList;

			[Token(Token = "0x4001780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<float3> bonePosList;

			[Token(Token = "0x4001781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<quaternion> boneRotList;

			[Token(Token = "0x4001782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<PhysicsManagerWindData.WindData> windData;

			[Token(Token = "0x4001783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public int directionalWindId;

			[Token(Token = "0x6001465")]
			[Address(RVA = "0x6FB018", Offset = "0x6FB018", VA = "0x6FB018", Slot = "4")]
			public void Execute(int teamId)
			{
			}

			[Token(Token = "0x6001466")]
			[Address(RVA = "0x6FB020", Offset = "0x6FB020", VA = "0x6FB020")]
			private void Wind(ref TeamData tdata, float3 pos)
			{
			}
		}

		[Token(Token = "0x2000342")]
		[BurstCompile]
		private struct PostProcessTeamDataJob : IJobParallelFor
		{
			[Token(Token = "0x4001784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NativeArray<TeamData> teamData;

			[Token(Token = "0x4001785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NativeArray<WorldInfluence> teamWorldInfluenceList;

			[Token(Token = "0x6001467")]
			[Address(RVA = "0x6FAFC4", Offset = "0x6FAFC4", VA = "0x6FAFC4", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x2000343")]
		[BurstCompile]
		private struct UpdateTeamUpdateCountJob : IJobParallelFor
		{
			[Token(Token = "0x4001786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NativeArray<TeamData> teamData;

			[Token(Token = "0x6001468")]
			[Address(RVA = "0x6FB0D8", Offset = "0x6FB0D8", VA = "0x6FB0D8", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x400173B")]
		public const uint Flag_Enable = 1u;

		[Token(Token = "0x400173C")]
		public const uint Flag_Interpolate = 2u;

		[Token(Token = "0x400173D")]
		public const uint Flag_Reset_WorldInfluence = 65536u;

		[Token(Token = "0x400173E")]
		public const uint Flag_Reset_Position = 131072u;

		[Token(Token = "0x400173F")]
		public const uint Flag_Collision_KeepShape = 262144u;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FixedNativeList<TeamData> teamDataList;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FixedNativeList<CurveParam> teamMassList;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FixedNativeList<CurveParam> teamGravityList;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FixedNativeList<CurveParam> teamDragList;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FixedNativeList<CurveParam> teamMaxVelocityList;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FixedNativeList<WorldInfluence> teamWorldInfluenceList;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ExNativeMultiHashMap<int, int> colliderMap;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, PhysicsTeam> teamComponentDict;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int activeTeamCount;

		[Token(Token = "0x170002C5")]
		public int TeamCount
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0x9216C4", Offset = "0x9216C4", VA = "0x9216C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C6")]
		public int TeamLength
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0x92172C", Offset = "0x92172C", VA = "0x92172C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C7")]
		public int ActiveTeamCount
		{
			[Token(Token = "0x600143F")]
			[Address(RVA = "0x92178C", Offset = "0x92178C", VA = "0x92178C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C8")]
		public int ColliderCount
		{
			[Token(Token = "0x6001440")]
			[Address(RVA = "0x921794", Offset = "0x921794", VA = "0x921794")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x9211A8", Offset = "0x9211A8", VA = "0x9211A8", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x921584", Offset = "0x921584", VA = "0x921584", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x9212E4", Offset = "0x9212E4", VA = "0x9212E4")]
		public int CreateTeam(PhysicsTeam team, uint flag)
		{
			return default(int);
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x9217F4", Offset = "0x9217F4", VA = "0x9217F4")]
		public void RemoveTeam(int teamId)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x921950", Offset = "0x921950", VA = "0x921950")]
		public void SetEnable(int teamId, bool sw)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x921B30", Offset = "0x921B30", VA = "0x921B30")]
		public bool IsValid(int teamId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x921B3C", Offset = "0x921B3C", VA = "0x921B3C")]
		public bool IsActive(int teamId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x9219B4", Offset = "0x9219B4", VA = "0x9219B4")]
		public void SetFlag(int teamId, uint flag, bool sw)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x921BF8", Offset = "0x921BF8", VA = "0x921BF8")]
		public void SetParticleChunk(int teamId, ChunkData chunk)
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x921CF0", Offset = "0x921CF0", VA = "0x921CF0")]
		public void SetFriction(int teamId, float friction)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x921DF4", Offset = "0x921DF4", VA = "0x921DF4")]
		public void SetMass(int teamId, BezierParam mass)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x921E8C", Offset = "0x921E8C", VA = "0x921E8C")]
		public void SetGravity(int teamId, BezierParam gravity)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x921F24", Offset = "0x921F24", VA = "0x921F24")]
		public void SetDrag(int teamId, BezierParam drag)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x921FBC", Offset = "0x921FBC", VA = "0x921FBC")]
		public void SetMaxVelocity(int teamId, BezierParam maxVelocity)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x922054", Offset = "0x922054", VA = "0x922054")]
		public void SetExternalForce(int teamId, float massInfluence, float windInfluence, float windRandomScale)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x92218C", Offset = "0x92218C", VA = "0x92218C")]
		public void SetWorldInfluence(int teamId, BezierParam moveInfluence, BezierParam rotInfluence, bool resetTeleport, float teleportDistance, float teleportRotation)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x9222F4", Offset = "0x9222F4", VA = "0x9222F4")]
		public void SetSelfCollisionRange(int teamId, float range)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x922408", Offset = "0x922408", VA = "0x922408")]
		public void SetBoneIndex(int teamId, int boneIndex)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x922510", Offset = "0x922510", VA = "0x922510")]
		public void AddCollider(int teamId, int particleIndex)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x922588", Offset = "0x922588", VA = "0x922588")]
		public void RemoveCollider(int teamId, int particleIndex)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x922600", Offset = "0x922600", VA = "0x922600")]
		public void RemoveCollider(int teamId)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x922670", Offset = "0x922670", VA = "0x922670")]
		public void SetTimeScale(int teamId, float timeScale)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x9227F0", Offset = "0x9227F0", VA = "0x9227F0")]
		public float GetTimeScale(int teamId)
		{
			return default(float);
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x922874", Offset = "0x922874", VA = "0x922874")]
		public void SetBlendRatio(int teamId, float blendRatio)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x9229F8", Offset = "0x9229F8", VA = "0x9229F8")]
		public float GetBlendRatio(int teamId)
		{
			return default(float);
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x922A7C", Offset = "0x922A7C", VA = "0x922A7C")]
		public void SetImpactForce(int teamId, float3 force, ForceMode mode)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x922BC8", Offset = "0x922BC8", VA = "0x922BC8")]
		public void PreUpdateTeamAlways()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x9230D4", Offset = "0x9230D4", VA = "0x9230D4")]
		public int CalcMaxUpdateCount(int ups)
		{
			return default(int);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x923148", Offset = "0x923148", VA = "0x923148")]
		public void PreUpdateTeamData(float dtime, float updateDeltaTime, int ups)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x9235D0", Offset = "0x9235D0", VA = "0x9235D0")]
		public void PostUpdateTeamData()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x923780", Offset = "0x923780", VA = "0x923780")]
		public void UpdateTeamUpdateCount()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x9238D4", Offset = "0x9238D4", VA = "0x9238D4")]
		public PhysicsManagerTeamData()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class PhysicsManagerWindData : PhysicsManagerAccess
	{
		[Token(Token = "0x2000345")]
		public enum WindType
		{
			[Token(Token = "0x400178B")]
			None,
			[Token(Token = "0x400178C")]
			Direction
		}

		[Token(Token = "0x2000346")]
		public struct WindData
		{
			[Token(Token = "0x400178D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WindType windType;

			[Token(Token = "0x400178E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint flag;

			[Token(Token = "0x400178F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int transformIndex;

			[Token(Token = "0x4001790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float main;

			[Token(Token = "0x4001791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float turbulence;

			[Token(Token = "0x4001792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float3 direction;

			[Token(Token = "0x6001474")]
			[Address(RVA = "0x6FB134", Offset = "0x6FB134", VA = "0x6FB134")]
			public bool IsFlag(uint flag)
			{
				return default(bool);
			}

			[Token(Token = "0x6001475")]
			[Address(RVA = "0x6FB144", Offset = "0x6FB144", VA = "0x6FB144")]
			public void SetFlag(uint flag, bool sw)
			{
			}

			[Token(Token = "0x6001476")]
			[Address(RVA = "0x6FB160", Offset = "0x6FB160", VA = "0x6FB160")]
			public void SetEnable(bool sw)
			{
			}

			[Token(Token = "0x6001477")]
			[Address(RVA = "0x6FB17C", Offset = "0x6FB17C", VA = "0x6FB17C")]
			public bool IsActive()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000347")]
		[BurstCompile]
		private struct UpdateWindJob : IJobParallelFor
		{
			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float dtime;

			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float elapsedTime;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[ReadOnly]
			public NativeArray<float3> bonePosList;

			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[ReadOnly]
			public NativeArray<quaternion> boneRotList;

			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NativeArray<WindData> windData;

			[Token(Token = "0x6001478")]
			[Address(RVA = "0x6FB12C", Offset = "0x6FB12C", VA = "0x6FB12C", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x4001787")]
		public const uint Flag_Enable = 1u;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FixedNativeList<WindData> windDataList;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> directionalWindList;

		[Token(Token = "0x170002C9")]
		public int DirectionalWindId
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0x9234F8", Offset = "0x9234F8", VA = "0x9234F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x924278", Offset = "0x924278", VA = "0x924278", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x9242E0", Offset = "0x9242E0", VA = "0x9242E0", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x924340", Offset = "0x924340", VA = "0x924340")]
		public int CreateWind(WindType windType, float main, float turbulence)
		{
			return default(int);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x92442C", Offset = "0x92442C", VA = "0x92442C")]
		public void RemoveWind(int windId)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x9244D8", Offset = "0x9244D8", VA = "0x9244D8")]
		public void SetEnable(int windId, bool sw, Transform target)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x924688", Offset = "0x924688", VA = "0x924688")]
		public bool IsActive(int windId)
		{
			return default(bool);
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x92471C", Offset = "0x92471C", VA = "0x92471C")]
		public void SetFlag(int windId, uint flag, bool sw)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x924830", Offset = "0x924830", VA = "0x924830")]
		public void SetParameter(int windId, float main, float turbulence)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x924934", Offset = "0x924934", VA = "0x924934")]
		public void UpdateWind()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x924B28", Offset = "0x924B28", VA = "0x924B28")]
		public PhysicsManagerWindData()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public abstract class PhysicsManagerWorker
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x670B9C", Offset = "0x670B9C")]
		private MagicaPhysicsManager <Manager>k__BackingField;

		[Token(Token = "0x170002CA")]
		public MagicaPhysicsManager Manager
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0x924DE4", Offset = "0x924DE4", VA = "0x924DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67763C", Offset = "0x67763C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600147A")]
			[Address(RVA = "0x924DEC", Offset = "0x924DEC", VA = "0x924DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x67764C", Offset = "0x67764C")]
			set
			{
			}
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x924DF4", Offset = "0x924DF4", VA = "0x924DF4", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x924DF8", Offset = "0x924DF8", VA = "0x924DF8")]
		public void Init(MagicaPhysicsManager manager)
		{
		}

		[Token(Token = "0x600147D")]
		public abstract void Create();

		[Token(Token = "0x600147E")]
		public abstract void RemoveGroup(int group);

		[Token(Token = "0x600147F")]
		public abstract void Release();

		[Token(Token = "0x6001480")]
		public abstract void Warmup();

		[Token(Token = "0x6001481")]
		public abstract void CompleteWarmup();

		[Token(Token = "0x6001482")]
		public abstract JobHandle PreUpdate(JobHandle jobHandle);

		[Token(Token = "0x6001483")]
		public abstract JobHandle PostUpdate(JobHandle jobHandle);

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x924E08", Offset = "0x924E08", VA = "0x924E08")]
		protected PhysicsManagerWorker()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public abstract class ColliderComponent : ParticleComponent
	{
		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected bool isGlobal;

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x99F200", Offset = "0x99F200", VA = "0x99F200", Slot = "12")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x99F2C8", Offset = "0x99F2C8", VA = "0x99F2C8", Slot = "13")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x99F678", Offset = "0x99F678", VA = "0x99F678", Slot = "5")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x6001488")]
		public abstract bool CalcNearPoint(Vector3 pos, out Vector3 p, out Vector3 dir, out Vector3 d);

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x99F6E0", Offset = "0x99F6E0", VA = "0x99F6E0")]
		public Vector3 CalcLocalPos(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x99F844", Offset = "0x99F844", VA = "0x99F844")]
		public Vector3 CalcLocalDir(Vector3 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x99F240", Offset = "0x99F240", VA = "0x99F240")]
		public ChunkData CreateColliderParticle(int teamId)
		{
			return default(ChunkData);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x99F538", Offset = "0x99F538", VA = "0x99F538")]
		public void RemoveColliderParticle(int teamId)
		{
		}

		[Token(Token = "0x600148D")]
		protected abstract ChunkData CreateColliderParticleReal(int teamId);

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x99F8A0", Offset = "0x99F8A0", VA = "0x99F8A0")]
		protected ColliderComponent()
		{
		}
	}
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666E50", Offset = "0x666E50")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x666E50", Offset = "0x666E50")]
	public class MagicaCapsuleCollider : ColliderComponent
	{
		[Token(Token = "0x200034B")]
		public enum Axis
		{
			[Token(Token = "0x400179F")]
			X,
			[Token(Token = "0x40017A0")]
			Y,
			[Token(Token = "0x40017A1")]
			Z
		}

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Axis axis;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x670BCC", Offset = "0x670BCC")]
		private float length;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x670C0C", Offset = "0x670C0C")]
		private float startRadius;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x670C4C", Offset = "0x670C4C")]
		private float endRadius;

		[Token(Token = "0x170002CB")]
		public Axis AxisMode
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0x8C47A0", Offset = "0x8C47A0", VA = "0x8C47A0")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6001492")]
			[Address(RVA = "0x8C47A8", Offset = "0x8C47A8", VA = "0x8C47A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public float Length
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x8C47B0", Offset = "0x8C47B0", VA = "0x8C47B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x8C47B8", Offset = "0x8C47B8", VA = "0x8C47B8")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public float StartRadius
		{
			[Token(Token = "0x6001495")]
			[Address(RVA = "0x8C47C0", Offset = "0x8C47C0", VA = "0x8C47C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001496")]
			[Address(RVA = "0x8C47C8", Offset = "0x8C47C8", VA = "0x8C47C8")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public float EndRadius
		{
			[Token(Token = "0x6001497")]
			[Address(RVA = "0x8C47D0", Offset = "0x8C47D0", VA = "0x8C47D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001498")]
			[Address(RVA = "0x8C47D8", Offset = "0x8C47D8", VA = "0x8C47D8")]
			set
			{
			}
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x8C42B8", Offset = "0x8C42B8", VA = "0x8C42B8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x8C469C", Offset = "0x8C469C", VA = "0x8C469C", Slot = "5")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x8C47E0", Offset = "0x8C47E0", VA = "0x8C47E0", Slot = "18")]
		protected override ChunkData CreateColliderParticleReal(int teamId)
		{
			return default(ChunkData);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x8C4678", Offset = "0x8C4678", VA = "0x8C4678")]
		private uint GetCapsuleFlag()
		{
			return default(uint);
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x8C4B68", Offset = "0x8C4B68", VA = "0x8C4B68")]
		public Vector3 GetLocalDir()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x8C4C2C", Offset = "0x8C4C2C", VA = "0x8C4C2C")]
		public Vector3 GetLocalUp()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x8C4CD8", Offset = "0x8C4CD8", VA = "0x8C4CD8", Slot = "17")]
		public override bool CalcNearPoint(Vector3 pos, out Vector3 p, out Vector3 dir, out Vector3 d)
		{
			return default(bool);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x8C51EC", Offset = "0x8C51EC", VA = "0x8C51EC")]
		public MagicaCapsuleCollider()
		{
		}
	}
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666EB0", Offset = "0x666EB0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x666EB0", Offset = "0x666EB0")]
	public class MagicaPlaneCollider : ColliderComponent
	{
		[Token(Token = "0x600149F")]
		[Address(RVA = "0x8CA034", Offset = "0x8CA034", VA = "0x8CA034", Slot = "18")]
		protected override ChunkData CreateColliderParticleReal(int teamId)
		{
			return default(ChunkData);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x8CA14C", Offset = "0x8CA14C", VA = "0x8CA14C", Slot = "17")]
		public override bool CalcNearPoint(Vector3 pos, out Vector3 p, out Vector3 dir, out Vector3 d)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x8CA334", Offset = "0x8CA334", VA = "0x8CA334")]
		public MagicaPlaneCollider()
		{
		}
	}
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x666F10", Offset = "0x666F10")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x666F10", Offset = "0x666F10")]
	public class MagicaSphereCollider : ColliderComponent
	{
		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x670C8C", Offset = "0x670C8C")]
		private float radius;

		[Token(Token = "0x170002CF")]
		public float Radius
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0x8CABBC", Offset = "0x8CABBC", VA = "0x8CABBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x8CABC4", Offset = "0x8CABC4", VA = "0x8CABC4")]
			set
			{
			}
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x8CA9D8", Offset = "0x8CA9D8", VA = "0x8CA9D8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x8CABCC", Offset = "0x8CABCC", VA = "0x8CABCC", Slot = "5")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x8CAC4C", Offset = "0x8CAC4C", VA = "0x8CAC4C", Slot = "18")]
		protected override ChunkData CreateColliderParticleReal(int teamId)
		{
			return default(ChunkData);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x8CAD70", Offset = "0x8CAD70", VA = "0x8CAD70", Slot = "17")]
		public override bool CalcNearPoint(Vector3 pos, out Vector3 p, out Vector3 dir, out Vector3 d)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x8CAF58", Offset = "0x8CAF58", VA = "0x8CAF58")]
		public MagicaSphereCollider()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public abstract class ParticleComponent : MonoBehaviour, IDataHash
	{
		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<int, ChunkData> particleDict;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected RuntimeStatus status;

		[Token(Token = "0x170002D0")]
		public RuntimeStatus Status
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0x8D7C28", Offset = "0x8D7C28", VA = "0x8D7C28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		public int CenterParticleIndex
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x8D7C30", Offset = "0x8D7C30", VA = "0x8D7C30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014AA")]
		public abstract int GetDataHash();

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x8D7CD0", Offset = "0x8D7CD0", VA = "0x8D7CD0", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x8D7DA4", Offset = "0x8D7DA4", VA = "0x8D7DA4", Slot = "7")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x8D7E68", Offset = "0x8D7E68", VA = "0x8D7E68", Slot = "8")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x8D7EA8", Offset = "0x8D7EA8", VA = "0x8D7EA8", Slot = "9")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x8D7EE8", Offset = "0x8D7EE8", VA = "0x8D7EE8", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x8D7CD4", Offset = "0x8D7CD4", VA = "0x8D7CD4")]
		private void Init()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x8D7DE4", Offset = "0x8D7DE4", VA = "0x8D7DE4")]
		protected void UpdateStatus()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x8D7FA8", Offset = "0x8D7FA8", VA = "0x8D7FA8", Slot = "11")]
		public virtual bool VerifyData()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x8D7FB0", Offset = "0x8D7FB0", VA = "0x8D7FB0", Slot = "12")]
		protected virtual void OnInit()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x8D7FB4", Offset = "0x8D7FB4", VA = "0x8D7FB4", Slot = "13")]
		protected virtual void OnDispose()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x8D8198", Offset = "0x8D8198", VA = "0x8D8198", Slot = "14")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x8D819C", Offset = "0x8D819C", VA = "0x8D819C", Slot = "15")]
		protected virtual void OnActive()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x8D82E8", Offset = "0x8D82E8", VA = "0x8D82E8", Slot = "16")]
		protected virtual void OnInactive()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x8D81A0", Offset = "0x8D81A0", VA = "0x8D81A0")]
		protected void EnableParticle()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x8D82EC", Offset = "0x8D82EC", VA = "0x8D82EC")]
		protected void DisableParticle()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x8D8448", Offset = "0x8D8448", VA = "0x8D8448")]
		protected void EnableTeamParticle(int teamId)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x8D85D4", Offset = "0x8D85D4", VA = "0x8D85D4")]
		protected void DisableTeamParticle(int teamId)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x8C490C", Offset = "0x8C490C", VA = "0x8C490C")]
		protected ChunkData CreateParticle(uint flag, int teamId, float depth, float radius, Vector3 localPos)
		{
			return default(ChunkData);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x8D8018", Offset = "0x8D8018", VA = "0x8D8018")]
		protected void RemoveParticle()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x8D8760", Offset = "0x8D8760", VA = "0x8D8760")]
		protected void RemoveTeamParticle(int teamId)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x8D8894", Offset = "0x8D8894", VA = "0x8D8894")]
		protected Transform UserTransform(int vindex)
		{
			return null;
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x8D889C", Offset = "0x8D889C", VA = "0x8D889C")]
		protected float3 UserTransformLocalPosition(int vindex)
		{
			return default(float3);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x8D88D8", Offset = "0x8D88D8", VA = "0x8D88D8")]
		protected quaternion UserTransformLocalRotation(int vindex)
		{
			return default(quaternion);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x8D8990", Offset = "0x8D8990", VA = "0x8D8990")]
		protected ParticleComponent()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public abstract class PhysicsTeam : CoreComponent
	{
		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected PhysicsTeamData teamData;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int teamId;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected ChunkData particleChunk;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform influenceTarget;

		[Token(Token = "0x170002D2")]
		public int TeamId
		{
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x924E8C", Offset = "0x924E8C", VA = "0x924E8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D3")]
		public PhysicsTeamData TeamData
		{
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x924E94", Offset = "0x924E94", VA = "0x924E94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public ChunkData ParticleChunk
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x924E9C", Offset = "0x924E9C", VA = "0x924E9C")]
			get
			{
				return default(ChunkData);
			}
		}

		[Token(Token = "0x170002D5")]
		public Transform InfluenceTarget
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x924EB4", Offset = "0x924EB4", VA = "0x924EB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x924EAC", Offset = "0x924EAC", VA = "0x924EAC")]
			set
			{
			}
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x924E10", Offset = "0x924E10", VA = "0x924E10", Slot = "16")]
		public override int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x924EBC", Offset = "0x924EBC", VA = "0x924EBC", Slot = "22")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x9250D4", Offset = "0x9250D4", VA = "0x9250D4", Slot = "23")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x925324", Offset = "0x925324", VA = "0x925324", Slot = "24")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x925328", Offset = "0x925328", VA = "0x925328", Slot = "25")]
		protected override void OnActive()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x9253AC", Offset = "0x9253AC", VA = "0x9253AC", Slot = "26")]
		protected override void OnInactive()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x925450", Offset = "0x925450", VA = "0x925450")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x9254D0", Offset = "0x9254D0", VA = "0x9254D0")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x92554C", Offset = "0x92554C", VA = "0x92554C")]
		public ChunkData CreateParticle(int team, int count, Func<int, uint> funcFlag, Func<int, float3> funcWpos, Func<int, quaternion> funcWrot, Func<int, float> funcDepth, Func<int, float> funcRadius, Func<int, float3> funcTargetLocalPos)
		{
			return default(ChunkData);
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x925640", Offset = "0x925640", VA = "0x925640")]
		public void RemoveAllParticle()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x9256DC", Offset = "0x9256DC", VA = "0x9256DC")]
		public void EnableParticle(Func<int, Transform> funcTarget, Func<int, float3> funcLpos, Func<int, quaternion> funcLrot)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x925790", Offset = "0x925790", VA = "0x925790")]
		public void DisableParticle(Func<int, Transform> funcTarget, Func<int, float3> funcLpos, Func<int, quaternion> funcLrot)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x92586C", Offset = "0x92586C", VA = "0x92586C", Slot = "30")]
		public override Define.Error VerifyData()
		{
			return default(Define.Error);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x925874", Offset = "0x925874", VA = "0x925874")]
		protected PhysicsTeam()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000350")]
	public class PhysicsTeamData : IDataHash
	{
		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<ColliderComponent> colliderList;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float userBlendRatio;

		[Token(Token = "0x170002D6")]
		public int ColliderCount
		{
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x925958", Offset = "0x925958", VA = "0x925958")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D7")]
		public List<ColliderComponent> ColliderList
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0x9259B8", Offset = "0x9259B8", VA = "0x9259B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		public float UserBlendRatio
		{
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x9259C0", Offset = "0x9259C0", VA = "0x9259C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0x9259C8", Offset = "0x9259C8", VA = "0x9259C8")]
			set
			{
			}
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x924E3C", Offset = "0x924E3C", VA = "0x924E3C", Slot = "4")]
		public int GetDataHash()
		{
			return default(int);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x924F68", Offset = "0x924F68", VA = "0x924F68")]
		public void Init(int teamId)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x9251A4", Offset = "0x9251A4", VA = "0x9251A4")]
		public void Dispose(int teamId)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x9259D0", Offset = "0x9259D0", VA = "0x9259D0")]
		public void ValidateColliderList()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x9258E0", Offset = "0x9258E0", VA = "0x9258E0")]
		public PhysicsTeamData()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public abstract class WindComponent : MonoBehaviour
	{
		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int windId;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected RuntimeStatus status;

		[Token(Token = "0x170002D9")]
		public RuntimeStatus Status
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x86D8BC", Offset = "0x86D8BC", VA = "0x86D8BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x86D8C4", Offset = "0x86D8C4", VA = "0x86D8C4", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x86D998", Offset = "0x86D998", VA = "0x86D998", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x86DA58", Offset = "0x86DA58", VA = "0x86DA58", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x86DA98", Offset = "0x86DA98", VA = "0x86DA98", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x86DAD8", Offset = "0x86DAD8", VA = "0x86DAD8", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x86D8C8", Offset = "0x86D8C8", VA = "0x86D8C8")]
		private void Init()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x86D9D8", Offset = "0x86D9D8", VA = "0x86D9D8")]
		protected void UpdateStatus()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x86DB94", Offset = "0x86DB94", VA = "0x86DB94", Slot = "9")]
		public virtual bool VerifyData()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x86DB9C", Offset = "0x86DB9C", VA = "0x86DB9C", Slot = "10")]
		protected virtual void OnInit()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x86DCB8", Offset = "0x86DCB8", VA = "0x86DCB8", Slot = "11")]
		protected virtual void OnDispose()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x86DDD0", Offset = "0x86DDD0", VA = "0x86DDD0", Slot = "12")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x86DDD4", Offset = "0x86DDD4", VA = "0x86DDD4", Slot = "13")]
		protected virtual void OnActive()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x86DDD8", Offset = "0x86DDD8", VA = "0x86DDD8", Slot = "14")]
		protected virtual void OnInactive()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x86DBF8", Offset = "0x86DBF8", VA = "0x86DBF8")]
		protected void EnableWind()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x86DDDC", Offset = "0x86DDDC", VA = "0x86DDDC")]
		protected void DisableWind()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x86DD1C", Offset = "0x86DD1C", VA = "0x86DD1C")]
		protected void RemoveWind()
		{
		}

		[Token(Token = "0x60014F1")]
		protected abstract void CreateWind();

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x86DEB0", Offset = "0x86DEB0", VA = "0x86DEB0")]
		protected WindComponent()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class AdjustRotationWorker : PhysicsManagerWorker
	{
		[Serializable]
		[Token(Token = "0x2000353")]
		public struct AdjustRotationData
		{
			[Token(Token = "0x40017B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int keyIndex;

			[Token(Token = "0x40017B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int targetIndex;

			[Token(Token = "0x40017B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float3 localPos;

			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x6FA17C", Offset = "0x6FA17C", VA = "0x6FA17C")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000354")]
		public struct GroupData
		{
			[Token(Token = "0x40017B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x40017B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int active;

			[Token(Token = "0x40017B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int adjustMode;

			[Token(Token = "0x40017BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float3 axisRotationPower;

			[Token(Token = "0x40017BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ChunkData chunk;
		}

		[Token(Token = "0x2000355")]
		[BurstCompile]
		private struct AdjustRotationJob : IJobParallelFor
		{
			[Token(Token = "0x40017BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<AdjustRotationData> dataList;

			[Token(Token = "0x40017BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<GroupData> groupList;

			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeMultiHashMap<int, int> particleMap;

			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x40017C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<int> teamIdList;

			[Token(Token = "0x40017C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x40017C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public NativeArray<quaternion> baseRotList;

			[Token(Token = "0x40017C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[ReadOnly]
			public NativeArray<float3> posList;

			[Token(Token = "0x40017C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[WriteOnly]
			public NativeArray<quaternion> rotList;

			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x6FA1E8", Offset = "0x6FA1E8", VA = "0x6FA1E8", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x40017AD")]
		private const int AdjustMode_None = 0;

		[Token(Token = "0x40017AE")]
		private const int AdjustMode_XYMove = 1;

		[Token(Token = "0x40017AF")]
		private const int AdjustMode_XZMove = 2;

		[Token(Token = "0x40017B0")]
		private const int AdjustMode_YZMove = 3;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FixedChunkNativeArray<AdjustRotationData> dataList;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FixedNativeList<GroupData> groupList;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ExNativeMultiHashMap<int, int> particleMap;

		[Token(Token = "0x170002DA")]
		public int ActiveCount
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x82EA28", Offset = "0x82EA28", VA = "0x82EA28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x82E2F0", Offset = "0x82E2F0", VA = "0x82E2F0", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x82E3A8", Offset = "0x82E3A8", VA = "0x82E3A8", Slot = "7")]
		public override void Release()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x82E450", Offset = "0x82E450", VA = "0x82E450")]
		public int AddGroup(int teamId, bool active, int adjustMode, float3 axisRotationPower, AdjustRotationData[] dataArray)
		{
			return default(int);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x82E6BC", Offset = "0x82E6BC", VA = "0x82E6BC", Slot = "6")]
		public override void RemoveGroup(int teamId)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x82E89C", Offset = "0x82E89C", VA = "0x82E89C")]
		public void ChangeParam(int teamId, bool active, int adjustMode, float3 axisRotationPower)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x82EAF8", Offset = "0x82EAF8", VA = "0x82EAF8", Slot = "8")]
		public override void Warmup()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x82EAFC", Offset = "0x82EAFC", VA = "0x82EAFC", Slot = "9")]
		public override void CompleteWarmup()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x82EB00", Offset = "0x82EB00", VA = "0x82EB00", Slot = "10")]
		public override JobHandle PreUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x82EB0C", Offset = "0x82EB0C", VA = "0x82EB0C", Slot = "11")]
		public override JobHandle PostUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x82EF54", Offset = "0x82EF54", VA = "0x82EF54")]
		public AdjustRotationWorker()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class LineWorker : PhysicsManagerWorker
	{
		[Serializable]
		[Token(Token = "0x2000357")]
		public struct LineRotationData
		{
			[Token(Token = "0x40017CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int vertexIndex;

			[Token(Token = "0x40017CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int childCount;

			[Token(Token = "0x40017CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int childStartDataIndex;

			[Token(Token = "0x40017CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float3 localPos;

			[Token(Token = "0x40017CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public quaternion localRot;
		}

		[Serializable]
		[Token(Token = "0x2000358")]
		public struct LineRotationRootInfo
		{
			[Token(Token = "0x40017CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ushort startIndex;

			[Token(Token = "0x40017D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public ushort dataLength;
		}

		[Token(Token = "0x2000359")]
		public struct GroupData
		{
			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int teamId;

			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int avarage;

			[Token(Token = "0x40017D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ChunkData dataChunk;

			[Token(Token = "0x40017D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ChunkData rootInfoChunk;
		}

		[Token(Token = "0x200035A")]
		[BurstCompile]
		private struct LineRotationJob : IJobParallelFor
		{
			[Token(Token = "0x40017D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<LineRotationData> dataList;

			[Token(Token = "0x40017D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<LineRotationRootInfo> rootInfoList;

			[Token(Token = "0x40017D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<int> rootTeamList;

			[Token(Token = "0x40017D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<GroupData> groupList;

			[Token(Token = "0x40017D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<PhysicsManagerTeamData.TeamData> teamDataList;

			[Token(Token = "0x40017DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x40017DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<float3> posList;

			[Token(Token = "0x40017DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[NativeDisableParallelForRestriction]
			public NativeArray<quaternion> rotList;

			[Token(Token = "0x600150A")]
			[Address(RVA = "0x6FCF88", Offset = "0x6FCF88", VA = "0x6FCF88", Slot = "4")]
			public void Execute(int rootIndex)
			{
			}
		}

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FixedChunkNativeArray<LineRotationData> dataList;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedChunkNativeArray<LineRotationRootInfo> rootInfoList;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FixedNativeList<GroupData> groupList;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FixedChunkNativeArray<int> rootTeamList;

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x9A4DA8", Offset = "0x9A4DA8", VA = "0x9A4DA8", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x9A4E88", Offset = "0x9A4E88", VA = "0x9A4E88", Slot = "7")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x99C39C", Offset = "0x99C39C", VA = "0x99C39C")]
		public int AddGroup(int teamId, bool avarage, LineRotationData[] dataArray, LineRotationRootInfo[] rootInfoArray)
		{
			return default(int);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x9A4F54", Offset = "0x9A4F54", VA = "0x9A4F54", Slot = "6")]
		public override void RemoveGroup(int teamId)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x99DB88", Offset = "0x99DB88", VA = "0x99DB88")]
		public void ChangeParam(int teamId, bool avarage)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x9A5108", Offset = "0x9A5108", VA = "0x9A5108", Slot = "8")]
		public override void Warmup()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x9A510C", Offset = "0x9A510C", VA = "0x9A510C", Slot = "9")]
		public override void CompleteWarmup()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x9A5110", Offset = "0x9A5110", VA = "0x9A5110", Slot = "10")]
		public override JobHandle PreUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x9A511C", Offset = "0x9A511C", VA = "0x9A511C", Slot = "11")]
		public override JobHandle PostUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x9A547C", Offset = "0x9A547C", VA = "0x9A547C")]
		public LineWorker()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class MeshParticleWorker : PhysicsManagerWorker
	{
		[Token(Token = "0x200035C")]
		private struct CreateData
		{
			[Token(Token = "0x40017E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int vertexIndex;

			[Token(Token = "0x40017E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int particleIndex;
		}

		[Token(Token = "0x200035D")]
		[BurstCompile]
		private struct VertexToParticleJob : IJobParallelFor
		{
			[Token(Token = "0x40017E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<int> vertexToParticleList;

			[Token(Token = "0x40017E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeMultiHashMap<int, int> vertexToParticleMap;

			[Token(Token = "0x40017E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<float3> posList;

			[Token(Token = "0x40017E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<quaternion> rotList;

			[Token(Token = "0x40017E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[WriteOnly]
			[NativeDisableParallelForRestriction]
			public NativeArray<float3> basePosList;

			[Token(Token = "0x40017E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[NativeDisableParallelForRestriction]
			[WriteOnly]
			public NativeArray<quaternion> baseRotList;

			[Token(Token = "0x40017E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private NativeMultiHashMapIterator<int> iterator;

			[Token(Token = "0x6001514")]
			[Address(RVA = "0x6FA840", Offset = "0x6FA840", VA = "0x6FA840", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x200035E")]
		[BurstCompile]
		private struct ParticleToVertexJob : IJobParallelFor
		{
			[Token(Token = "0x40017E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<int> vertexToParticleList;

			[Token(Token = "0x40017EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeMultiHashMap<int, int> vertexToParticleMap;

			[Token(Token = "0x40017EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[NativeDisableParallelForRestriction]
			[WriteOnly]
			public NativeArray<float3> posList;

			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[WriteOnly]
			[NativeDisableParallelForRestriction]
			public NativeArray<quaternion> rotList;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<float3> particlePosList;

			[Token(Token = "0x40017EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<quaternion> particleRotList;

			[Token(Token = "0x40017EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private NativeMultiHashMapIterator<int> iterator;

			[Token(Token = "0x6001515")]
			[Address(RVA = "0x6FA7EC", Offset = "0x6FA7EC", VA = "0x6FA7EC", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExNativeMultiHashMap<int, int> vertexToParticleMap;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedNativeListWithCount<int> vertexToParticleList;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, List<CreateData>> groupCreateDict;

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x8D0AB4", Offset = "0x8D0AB4", VA = "0x8D0AB4", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x8D0B64", Offset = "0x8D0B64", VA = "0x8D0B64", Slot = "7")]
		public override void Release()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x8C5E84", Offset = "0x8C5E84", VA = "0x8C5E84")]
		public void Add(int group, int vindex, int pindex)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x8D0BE8", Offset = "0x8D0BE8", VA = "0x8D0BE8", Slot = "6")]
		public override void RemoveGroup(int group)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x8D0DEC", Offset = "0x8D0DEC", VA = "0x8D0DEC", Slot = "8")]
		public override void Warmup()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x8D0DF0", Offset = "0x8D0DF0", VA = "0x8D0DF0", Slot = "9")]
		public override void CompleteWarmup()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x8D0DF4", Offset = "0x8D0DF4", VA = "0x8D0DF4", Slot = "10")]
		public override JobHandle PreUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x8D1118", Offset = "0x8D1118", VA = "0x8D1118", Slot = "11")]
		public override JobHandle PostUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x8D143C", Offset = "0x8D143C", VA = "0x8D143C")]
		public MeshParticleWorker()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class RenderMeshWorker : PhysicsManagerWorker
	{
		[Token(Token = "0x2000360")]
		[BurstCompile]
		private struct CalcUseFlagJob : IJobParallelFor
		{
			[Token(Token = "0x40017F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<PhysicsManagerMeshData.RenderMeshInfo> renderMeshInfoList;

			[Token(Token = "0x40017F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<PhysicsManagerMeshData.SharedRenderMeshInfo> sharedRenderMeshInfoList;

			[Token(Token = "0x40017F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeMultiHashMap<int, int4> renderToChildMeshIndexMap;

			[Token(Token = "0x40017F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<uint> virtualVertexInfoList;

			[Token(Token = "0x40017F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<uint> sharedChildVertexInfoList;

			[Token(Token = "0x40017F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<MeshData.VertexWeight> sharedChildVertexWeightList;

			[Token(Token = "0x40017F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<float3> sharedRenderVertices;

			[Token(Token = "0x40017F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public NativeArray<float3> sharedRenderNormals;

			[Token(Token = "0x40017FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[ReadOnly]
			public NativeArray<float4> sharedRenderTangents;

			[Token(Token = "0x40017FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[ReadOnly]
			public NativeArray<BoneWeight> sharedBoneWeightList;

			[Token(Token = "0x40017FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[WriteOnly]
			public NativeArray<float3> renderPosList;

			[Token(Token = "0x40017FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[WriteOnly]
			public NativeArray<float3> renderNormalList;

			[Token(Token = "0x40017FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[WriteOnly]
			public NativeArray<float4> renderTangentList;

			[Token(Token = "0x40017FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[WriteOnly]
			[NativeDisableParallelForRestriction]
			public NativeArray<BoneWeight> renderBoneWeightList;

			[Token(Token = "0x4001800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public NativeArray<uint> renderVertexFlagList;

			[Token(Token = "0x4001801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private NativeMultiHashMapIterator<int> iterator;

			[Token(Token = "0x600151F")]
			[Address(RVA = "0x6FB1D4", Offset = "0x6FB1D4", VA = "0x6FB1D4", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x2000361")]
		[BurstCompile]
		private struct CollectLocalPositionNormalTangentJob2 : IJobParallelFor
		{
			[Token(Token = "0x4001802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<PhysicsManagerMeshData.RenderMeshInfo> renderMeshInfoList;

			[Token(Token = "0x4001803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeMultiHashMap<int, int4> renderToChildMeshIndexMap;

			[Token(Token = "0x4001804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<float3> transformPosList;

			[Token(Token = "0x4001805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<quaternion> transformRotList;

			[Token(Token = "0x4001806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<float3> transformSclList;

			[Token(Token = "0x4001807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<uint> sharedChildVertexInfoList;

			[Token(Token = "0x4001808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<MeshData.VertexWeight> sharedChildVertexWeightList;

			[Token(Token = "0x4001809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public NativeArray<float3> virtualPosList;

			[Token(Token = "0x400180A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[ReadOnly]
			public NativeArray<quaternion> virtualRotList;

			[Token(Token = "0x400180B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[ReadOnly]
			public NativeArray<uint> renderFlagList;

			[Token(Token = "0x400180C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[WriteOnly]
			public NativeArray<float3> renderPosList;

			[Token(Token = "0x400180D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[WriteOnly]
			public NativeArray<float3> renderNormalList;

			[Token(Token = "0x400180E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[WriteOnly]
			public NativeArray<float4> renderTangentList;

			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private NativeMultiHashMapIterator<int> iterator;

			[Token(Token = "0x6001520")]
			[Address(RVA = "0x6FB228", Offset = "0x6FB228", VA = "0x6FB228", Slot = "4")]
			public void Execute(int vindex)
			{
			}
		}

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private JobHandle warmupJobHandle;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isUpdateUseFlag;

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x92834C", Offset = "0x92834C", VA = "0x92834C", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x928350", Offset = "0x928350", VA = "0x928350", Slot = "7")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x928354", Offset = "0x928354", VA = "0x928354", Slot = "6")]
		public override void RemoveGroup(int group)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x926CD4", Offset = "0x926CD4", VA = "0x926CD4")]
		public void SetUpdateUseFlag()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x928358", Offset = "0x928358", VA = "0x928358", Slot = "8")]
		public override void Warmup()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x928A00", Offset = "0x928A00", VA = "0x928A00", Slot = "9")]
		public override void CompleteWarmup()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x928A0C", Offset = "0x928A0C", VA = "0x928A0C", Slot = "10")]
		public override JobHandle PreUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x928A18", Offset = "0x928A18", VA = "0x928A18", Slot = "11")]
		public override JobHandle PostUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x929020", Offset = "0x929020", VA = "0x929020")]
		public RenderMeshWorker()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class SpringMeshWorker : PhysicsManagerWorker
	{
		[Token(Token = "0x2000363")]
		public struct SpringData
		{
			[Token(Token = "0x4001813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int particleIndex;

			[Token(Token = "0x4001814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float weight;
		}

		[Token(Token = "0x2000364")]
		[BurstCompile]
		private struct SpringJob : IJobParallelFor
		{
			[Token(Token = "0x4001815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<int> springVertexList;

			[Token(Token = "0x4001816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeMultiHashMap<int, SpringData> springMap;

			[Token(Token = "0x4001817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<PhysicsManagerParticleData.ParticleFlag> flagList;

			[Token(Token = "0x4001818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<float3> particlePosList;

			[Token(Token = "0x4001819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<quaternion> particleRotList;

			[Token(Token = "0x400181A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<float3> particleBasePosList;

			[Token(Token = "0x400181B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<quaternion> particleBaseRotList;

			[Token(Token = "0x400181C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[NativeDisableParallelForRestriction]
			public NativeArray<float3> virtualPosList;

			[Token(Token = "0x400181D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private NativeMultiHashMapIterator<int> iterator;

			[Token(Token = "0x600152A")]
			[Address(RVA = "0x6FB498", Offset = "0x6FB498", VA = "0x6FB498", Slot = "4")]
			public void Execute(int index)
			{
			}
		}

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExNativeMultiHashMap<int, SpringData> springMap;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedNativeListWithCount<int> springVertexList;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, List<int>> groupIndexDict;

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x92EC88", Offset = "0x92EC88", VA = "0x92EC88", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x92ED38", Offset = "0x92ED38", VA = "0x92ED38", Slot = "7")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x92EDBC", Offset = "0x92EDBC", VA = "0x92EDBC")]
		public void Add(int group, int vertexIndex, int particleIndex, float weight)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x92EF54", Offset = "0x92EF54", VA = "0x92EF54", Slot = "6")]
		public override void RemoveGroup(int group)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x92F154", Offset = "0x92F154", VA = "0x92F154", Slot = "8")]
		public override void Warmup()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x92F158", Offset = "0x92F158", VA = "0x92F158", Slot = "9")]
		public override void CompleteWarmup()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x92F15C", Offset = "0x92F15C", VA = "0x92F15C", Slot = "10")]
		public override JobHandle PreUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x92F168", Offset = "0x92F168", VA = "0x92F168", Slot = "11")]
		public override JobHandle PostUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x92F4FC", Offset = "0x92F4FC", VA = "0x92F4FC")]
		public SpringMeshWorker()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class VirtualMeshWorker : PhysicsManagerWorker
	{
		[Token(Token = "0x2000366")]
		[BurstCompile]
		private struct ReadMeshPositionJob : IJobParallelFor
		{
			[Token(Token = "0x400181E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<PhysicsManagerMeshData.VirtualMeshInfo> virtualMeshInfoList;

			[Token(Token = "0x400181F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<PhysicsManagerMeshData.SharedVirtualMeshInfo> sharedVirtualMeshInfoList;

			[Token(Token = "0x4001820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<uint> virtualVertexInfoList;

			[Token(Token = "0x4001821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<int> virtualTransformIndexList;

			[Token(Token = "0x4001822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<uint> sharedVirtualVertexInfoList;

			[Token(Token = "0x4001823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<MeshData.VertexWeight> sharedVirtualWeightList;

			[Token(Token = "0x4001824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<float3> transformPosList;

			[Token(Token = "0x4001825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public NativeArray<quaternion> transformRotList;

			[Token(Token = "0x4001826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[ReadOnly]
			public NativeArray<float3> transformSclList;

			[Token(Token = "0x4001827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[WriteOnly]
			public NativeArray<float3> virtualPosList;

			[Token(Token = "0x4001828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[WriteOnly]
			public NativeArray<quaternion> virtualRotList;

			[Token(Token = "0x4001829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[WriteOnly]
			public NativeArray<byte> virtualVertexFlagList;

			[Token(Token = "0x6001533")]
			[Address(RVA = "0x6FB660", Offset = "0x6FB660", VA = "0x6FB660", Slot = "4")]
			public void Execute(int vindex)
			{
			}
		}

		[Token(Token = "0x2000367")]
		[BurstCompile]
		private struct CalcMeshTriangleNormalTangentJob : IJobParallelFor
		{
			[Token(Token = "0x400182A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<PhysicsManagerMeshData.VirtualMeshInfo> virtualMeshInfoList;

			[Token(Token = "0x400182B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<PhysicsManagerMeshData.SharedVirtualMeshInfo> sharedVirtualMeshInfoList;

			[Token(Token = "0x400182C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<ushort> virtualTriangleMeshIndexList;

			[Token(Token = "0x400182D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<uint> virtualVertexInfoList;

			[Token(Token = "0x400182E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<float3> virtualPosList;

			[Token(Token = "0x400182F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<int> sharedTriangles;

			[Token(Token = "0x4001830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<float2> sharedMeshUv;

			[Token(Token = "0x4001831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[WriteOnly]
			public NativeArray<float3> virtualTriangleNormalList;

			[Token(Token = "0x4001832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[WriteOnly]
			public NativeArray<float3> virtualTriangleTangentList;

			[Token(Token = "0x4001833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[NativeDisableParallelForRestriction]
			[WriteOnly]
			public NativeArray<byte> virtualVertexFlagList;

			[Token(Token = "0x6001534")]
			[Address(RVA = "0x6FB5B8", Offset = "0x6FB5B8", VA = "0x6FB5B8", Slot = "4")]
			public void Execute(int tindex)
			{
			}
		}

		[Token(Token = "0x2000368")]
		[BurstCompile]
		private struct CalcVertexNormalTangentFromTriangleJob : IJobParallelFor
		{
			[Token(Token = "0x4001834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<PhysicsManagerMeshData.VirtualMeshInfo> virtualMeshInfoList;

			[Token(Token = "0x4001835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<PhysicsManagerMeshData.SharedVirtualMeshInfo> sharedVirtualMeshInfoList;

			[Token(Token = "0x4001836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public NativeArray<uint> virtualVertexInfoList;

			[Token(Token = "0x4001837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public NativeArray<byte> virtualVertexFlagList;

			[Token(Token = "0x4001838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[ReadOnly]
			public NativeArray<uint> sharedVirtualVertexToTriangleInfoList;

			[Token(Token = "0x4001839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[ReadOnly]
			public NativeArray<int> sharedVirtualVertexToTriangleIndexList;

			[Token(Token = "0x400183A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[ReadOnly]
			public NativeArray<float3> virtualTriangleNormalList;

			[Token(Token = "0x400183B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[ReadOnly]
			public NativeArray<float3> virtualTriangleTangentList;

			[Token(Token = "0x400183C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[WriteOnly]
			public NativeArray<quaternion> virtualRotList;

			[Token(Token = "0x6001535")]
			[Address(RVA = "0x6FB60C", Offset = "0x6FB60C", VA = "0x6FB60C", Slot = "4")]
			public void Execute(int vindex)
			{
			}
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x933FB4", Offset = "0x933FB4", VA = "0x933FB4", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x933FB8", Offset = "0x933FB8", VA = "0x933FB8", Slot = "7")]
		public override void Release()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x933FBC", Offset = "0x933FBC", VA = "0x933FBC", Slot = "6")]
		public override void RemoveGroup(int group)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x933FC0", Offset = "0x933FC0", VA = "0x933FC0", Slot = "8")]
		public override void Warmup()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x933FC4", Offset = "0x933FC4", VA = "0x933FC4", Slot = "9")]
		public override void CompleteWarmup()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x933FC8", Offset = "0x933FC8", VA = "0x933FC8", Slot = "10")]
		public override JobHandle PreUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x934564", Offset = "0x934564", VA = "0x934564", Slot = "11")]
		public override JobHandle PostUpdate(JobHandle jobHandle)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x934DEC", Offset = "0x934DEC", VA = "0x934DEC")]
		public VirtualMeshWorker()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000369")]
	public class BezierParam
	{
		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float startValue;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float endValue;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool useEndValue;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float curveValue;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useCurveValue;

		[Token(Token = "0x170002DB")]
		public float StartValue
		{
			[Token(Token = "0x600153A")]
			[Address(RVA = "0x8310E8", Offset = "0x8310E8", VA = "0x8310E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DC")]
		public float EndValue
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0x8310F0", Offset = "0x8310F0", VA = "0x8310F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DD")]
		public float CurveValue
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0x83110C", Offset = "0x83110C", VA = "0x83110C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DE")]
		public bool UseCurve
		{
			[Token(Token = "0x600153D")]
			[Address(RVA = "0x831128", Offset = "0x831128", VA = "0x831128")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x830FDC", Offset = "0x830FDC", VA = "0x830FDC")]
		public BezierParam(float val)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x83101C", Offset = "0x83101C", VA = "0x83101C")]
		public BezierParam(float sval, float eval)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x831064", Offset = "0x831064", VA = "0x831064")]
		public BezierParam(float sval, float eval, bool useEval, float cval, bool useCval)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x8310CC", Offset = "0x8310CC", VA = "0x8310CC")]
		public void SetParam(float sval, float eval, bool useEval = true, float cval = 0f, bool useCval = false)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x831148", Offset = "0x831148", VA = "0x831148")]
		public float Evaluate(float x)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200036A")]
	public interface IDataVerify
	{
		[Token(Token = "0x600153F")]
		int GetVersion();

		[Token(Token = "0x6001540")]
		void CreateVerifyData();

		[Token(Token = "0x6001541")]
		Define.Error VerifyData();

		[Token(Token = "0x6001542")]
		string GetInformation();
	}
	[Token(Token = "0x200036B")]
	public interface IEditorCloth
	{
		[Token(Token = "0x6001543")]
		List<int> GetSelectionList();

		[Token(Token = "0x6001544")]
		List<int> GetUseList();
	}
	[Token(Token = "0x200036C")]
	public interface IEditorMesh
	{
		[Token(Token = "0x6001545")]
		int GetEditorPositionNormalTangent(out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList);

		[Token(Token = "0x6001546")]
		List<int> GetEditorTriangleList();

		[Token(Token = "0x6001547")]
		List<int> GetEditorLineList();
	}
	[Token(Token = "0x200036D")]
	public class RuntimeStatus
	{
		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool init;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool initError;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool enable;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool userEnable;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool runtimeError;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool dispose;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool isActive;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<RuntimeStatus> linkStatusList;

		[Token(Token = "0x170002DF")]
		public bool IsActive
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x925B58", Offset = "0x925B58", VA = "0x925B58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E0")]
		public bool IsInitComplete
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0x92C574", Offset = "0x92C574", VA = "0x92C574")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E1")]
		public bool IsInitSuccess
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x9264B4", Offset = "0x9264B4", VA = "0x9264B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E2")]
		public bool IsInitError
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x926330", Offset = "0x926330", VA = "0x926330")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x92C57C", Offset = "0x92C57C", VA = "0x92C57C")]
		public void SetInitComplete()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x926350", Offset = "0x926350", VA = "0x926350")]
		public void SetInitError()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x92C588", Offset = "0x92C588", VA = "0x92C588")]
		public bool SetEnable(bool sw)
		{
			return default(bool);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x92C5AC", Offset = "0x92C5AC", VA = "0x92C5AC")]
		public bool SetUserEnable(bool sw)
		{
			return default(bool);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x92C5D0", Offset = "0x92C5D0", VA = "0x92C5D0")]
		public bool SetRuntimeError(bool sw)
		{
			return default(bool);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x92C5F4", Offset = "0x92C5F4", VA = "0x92C5F4")]
		public void SetDispose()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x92C600", Offset = "0x92C600", VA = "0x92C600")]
		public bool UpdateStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x92C7E8", Offset = "0x92C7E8", VA = "0x92C7E8")]
		public void AddLinkStatus(RuntimeStatus status)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x92C858", Offset = "0x92C858", VA = "0x92C858")]
		public void RemoveLinkStatus(RuntimeStatus status)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x92C67C", Offset = "0x92C67C", VA = "0x92C67C")]
		private bool IsLinkStatusActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x92C8C8", Offset = "0x92C8C8", VA = "0x92C8C8")]
		public RuntimeStatus()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public static class DataHashExtensions
	{
		[Token(Token = "0x400184A")]
		public const int NullHash = 397610387;

		[Token(Token = "0x400184B")]
		public const int NumberHash = 932781045;

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x9918B4", Offset = "0x9918B4", VA = "0x9918B4")]
		public static int GetDataHash(this object data)
		{
			return default(int);
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x99FF18", Offset = "0x99FF18", VA = "0x99FF18")]
		public static int GetDataHash(this IDataHash data)
		{
			return default(int);
		}

		[Token(Token = "0x6001559")]
		public static int GetDataHash<T>(this T[] data)
		{
			return default(int);
		}

		[Token(Token = "0x600155A")]
		public static int GetDataHash<T>(this List<T> data)
		{
			return default(int);
		}

		[Token(Token = "0x600155B")]
		public static int GetDataCountHash<T>(this T[] data)
		{
			return default(int);
		}

		[Token(Token = "0x600155C")]
		public static int GetDataCountHash<T>(this List<T> data)
		{
			return default(int);
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x99FFC8", Offset = "0x99FFC8", VA = "0x99FFC8")]
		public static ulong GetVectorDataHash(Vector3 v)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x200036F")]
	public class GridHash
	{
		[Token(Token = "0x2000370")]
		public class Point
		{
			[Token(Token = "0x400184E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x400184F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float3 pos;

			[Token(Token = "0x6001566")]
			[Address(RVA = "0x9A4ADC", Offset = "0x9A4ADC", VA = "0x9A4ADC")]
			public Point()
			{
			}
		}

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Dictionary<uint, List<Point>> gridMap;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float gridSize;

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x9A4894", Offset = "0x9A4894", VA = "0x9A4894", Slot = "4")]
		public virtual void Create(float gridSize = 0.1f)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x9A490C", Offset = "0x9A490C", VA = "0x9A490C", Slot = "5")]
		public virtual void AddPoint(float3 pos, int id)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x9A4B0C", Offset = "0x9A4B0C", VA = "0x9A4B0C", Slot = "6")]
		public virtual void Remove(float3 pos, int id)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x9A4CF0", Offset = "0x9A4CF0", VA = "0x9A4CF0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x9A4D50", Offset = "0x9A4D50", VA = "0x9A4D50")]
		public static int3 GetGridPos(float3 pos, float gridSize)
		{
			return default(int3);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x9A4D7C", Offset = "0x9A4D7C", VA = "0x9A4D7C")]
		public static uint GetGridHash(int3 pos)
		{
			return default(uint);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x9A4AE4", Offset = "0x9A4AE4", VA = "0x9A4AE4")]
		public static uint GetGridHash(float3 pos, float gridSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x9A4D94", Offset = "0x9A4D94", VA = "0x9A4D94")]
		public GridHash()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class NearPointSearch : GridHash
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float radius;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, int> nearDict;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, float> distDict;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<uint> lockPairSet;

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x8D6A68", Offset = "0x8D6A68", VA = "0x8D6A68")]
		public void Create(float3[] positionList, float radius)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x8D6B18", Offset = "0x8D6B18", VA = "0x8D6B18")]
		public void SearchNearPointAll()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x8D6DCC", Offset = "0x8D6DCC", VA = "0x8D6DCC")]
		public void SearchNearPoint(int id, float3 pos)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x8D7208", Offset = "0x8D7208", VA = "0x8D7208")]
		public void SearchNearPoint(float3 pos, float r)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x8D751C", Offset = "0x8D751C", VA = "0x8D751C", Slot = "5")]
		public override void AddPoint(float3 pos, int id)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x8D7524", Offset = "0x8D7524", VA = "0x8D7524", Slot = "6")]
		public override void Remove(float3 pos, int id)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x8D7638", Offset = "0x8D7638", VA = "0x8D7638")]
		public void AddLockPair(int id1, int id2)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x8D76C0", Offset = "0x8D76C0", VA = "0x8D76C0")]
		public bool GetNearPointPair(out int id1, out int id2)
		{
			return default(bool);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x8D791C", Offset = "0x8D791C", VA = "0x8D791C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x8D7B68", Offset = "0x8D7B68", VA = "0x8D7B68")]
		public NearPointSearch()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public struct ChunkData
	{
		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int chunkNo;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int startIndex;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int dataLength;

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x6FA1F0", Offset = "0x6FA1F0", VA = "0x6FA1F0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x6FA1FC", Offset = "0x6FA1FC", VA = "0x6FA1FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000373")]
	public class ExNativeHashMap<TKey, TValue> where TKey : struct, IEquatable<TKey> where TValue : struct
	{
		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NativeHashMap<TKey, TValue> nativeHashMap;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int nativeLength;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HashSet<TKey> useKeySet;

		[Token(Token = "0x170002E3")]
		public int Count
		{
			[Token(Token = "0x600157A")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E4")]
		public NativeHashMap<TKey, TValue> Map
		{
			[Token(Token = "0x600157C")]
			get
			{
				return default(NativeHashMap<TKey, TValue>);
			}
		}

		[Token(Token = "0x170002E5")]
		public HashSet<TKey> UseKeySet
		{
			[Token(Token = "0x600157D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001573")]
		public ExNativeHashMap()
		{
		}

		[Token(Token = "0x6001574")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001575")]
		public void Add(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6001576")]
		public TValue Get(TKey key)
		{
			return (TValue)null;
		}

		[Token(Token = "0x6001577")]
		public void Remove(Func<TKey, TValue, bool> func)
		{
		}

		[Token(Token = "0x6001578")]
		public void Replace(Func<TKey, TValue, bool> func, Func<TValue, TValue> datafunc)
		{
		}

		[Token(Token = "0x6001579")]
		public void Remove(TKey key)
		{
		}

		[Token(Token = "0x600157B")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class ExNativeMultiHashMap<TKey, TValue> where TKey : struct, IEquatable<TKey> where TValue : struct
	{
		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NativeMultiHashMap<TKey, TValue> nativeMultiHashMap;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int nativeLength;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<TKey, int> useKeyDict;

		[Token(Token = "0x170002E6")]
		public bool IsCreated
		{
			[Token(Token = "0x6001580")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E7")]
		public int Count
		{
			[Token(Token = "0x6001589")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E8")]
		public NativeMultiHashMap<TKey, TValue> Map
		{
			[Token(Token = "0x600158B")]
			get
			{
				return default(NativeMultiHashMap<TKey, TValue>);
			}
		}

		[Token(Token = "0x600157E")]
		public ExNativeMultiHashMap()
		{
		}

		[Token(Token = "0x600157F")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001581")]
		public void Add(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6001582")]
		public void Remove(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6001583")]
		public void Remove(Func<TKey, TValue, bool> func)
		{
		}

		[Token(Token = "0x6001584")]
		public void Replace(Func<TKey, TValue, bool> func, Func<TValue, TValue> datafunc)
		{
		}

		[Token(Token = "0x6001585")]
		public void Process(Action<TKey, TValue> act)
		{
		}

		[Token(Token = "0x6001586")]
		public bool Contains(TKey key, TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001587")]
		public bool Contains(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001588")]
		public void Remove(TKey key)
		{
		}

		[Token(Token = "0x600158A")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x667020", Offset = "0x667020")]
	public class FixedChunkNativeArray<T> : IDisposable where T : struct
	{
		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NativeArray<T> nativeArray;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int nativeLength;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ChunkData> emptyChunkList;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ChunkData> useChunkList;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int chunkSeed;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int initLength;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T emptyElement;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int useLength;

		[Token(Token = "0x170002E9")]
		public int Length
		{
			[Token(Token = "0x6001595")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EA")]
		public int ChunkCount
		{
			[Token(Token = "0x6001596")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EB")]
		public int Count
		{
			[Token(Token = "0x6001597")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EC")]
		public T Item
		{
			[Token(Token = "0x6001598")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001599")]
			set
			{
			}
		}

		[Token(Token = "0x600158C")]
		public FixedChunkNativeArray()
		{
		}

		[Token(Token = "0x600158D")]
		public FixedChunkNativeArray(int length)
		{
		}

		[Token(Token = "0x600158E")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600158F")]
		public void SetEmptyElement(T empty)
		{
		}

		[Token(Token = "0x6001590")]
		public ChunkData AddChunk(int length)
		{
			return default(ChunkData);
		}

		[Token(Token = "0x6001591")]
		public ChunkData Add(T data)
		{
			return default(ChunkData);
		}

		[Token(Token = "0x6001592")]
		public void RemoveChunk(int chunkNo)
		{
		}

		[Token(Token = "0x6001593")]
		public void RemoveChunk(ChunkData chunk)
		{
		}

		[Token(Token = "0x6001594")]
		public void Fill(ChunkData chunk, T data)
		{
		}

		[Token(Token = "0x600159A")]
		public void Clear()
		{
		}

		[Token(Token = "0x600159B")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x600159C")]
		public NativeArray<T> ToJobArray()
		{
			return default(NativeArray<T>);
		}

		[Token(Token = "0x600159D")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x667058", Offset = "0x667058")]
	public class FixedNativeList<T> : IDisposable where T : struct
	{
		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NativeList<T> nativeList;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int nativeLength;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<int> emptyStack;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HashSet<int> useIndexSet;

		[Token(Token = "0x170002ED")]
		public int Length
		{
			[Token(Token = "0x60015A5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EE")]
		public int Count
		{
			[Token(Token = "0x60015A6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EF")]
		public T Item
		{
			[Token(Token = "0x60015A7")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60015A8")]
			set
			{
			}
		}

		[Token(Token = "0x600159E")]
		public FixedNativeList()
		{
		}

		[Token(Token = "0x600159F")]
		public FixedNativeList(int capacity)
		{
		}

		[Token(Token = "0x60015A0")]
		public FixedNativeList(int capacity, T fill)
		{
		}

		[Token(Token = "0x60015A1")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015A2")]
		public int Add(T element)
		{
			return default(int);
		}

		[Token(Token = "0x60015A3")]
		public void Remove(int index)
		{
		}

		[Token(Token = "0x60015A4")]
		public bool Exists(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A9")]
		public void Clear()
		{
		}

		[Token(Token = "0x60015AA")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x60015AB")]
		public NativeArray<T> ToJobArray()
		{
			return default(NativeArray<T>);
		}
	}
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x667090", Offset = "0x667090")]
	public class FixedNativeListWithCount<T> : IDisposable where T : struct
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NativeList<T> nativeList;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int nativeLength;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<int> emptyStack;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HashSet<int> useIndexSet;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<T, int> indexDict;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<T, int> countDict;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T emptyElement;

		[Token(Token = "0x170002F0")]
		public int Length
		{
			[Token(Token = "0x60015B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F1")]
		public int Count
		{
			[Token(Token = "0x60015B5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F2")]
		public T Item
		{
			[Token(Token = "0x60015B6")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60015B7")]
			set
			{
			}
		}

		[Token(Token = "0x60015AC")]
		public FixedNativeListWithCount()
		{
		}

		[Token(Token = "0x60015AD")]
		public FixedNativeListWithCount(int capacity)
		{
		}

		[Token(Token = "0x60015AE")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015AF")]
		public void SetEmptyElement(T empty)
		{
		}

		[Token(Token = "0x60015B0")]
		public int Add(T element)
		{
			return default(int);
		}

		[Token(Token = "0x60015B1")]
		public void Remove(T element)
		{
		}

		[Token(Token = "0x60015B2")]
		public bool Exist(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B3")]
		public int GetUseCount(T element)
		{
			return default(int);
		}

		[Token(Token = "0x60015B8")]
		public void Clear()
		{
		}

		[Token(Token = "0x60015B9")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x60015BA")]
		public NativeArray<T> ToJobArray()
		{
			return default(NativeArray<T>);
		}
	}
	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6670C8", Offset = "0x6670C8")]
	public class FixedTransformAccessArray : IDisposable
	{
		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TransformAccessArray transformArray;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int nativeLength;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<int> emptyStack;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, int> useIndexDict;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, int> indexDict;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, int> referenceDict;

		[Token(Token = "0x170002F3")]
		public int Count
		{
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x9A2A8C", Offset = "0x9A2A8C", VA = "0x9A2A8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F4")]
		public int Length
		{
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x9A2AEC", Offset = "0x9A2AEC", VA = "0x9A2AEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F5")]
		public Transform Item
		{
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x9A2AF4", Offset = "0x9A2AF4", VA = "0x9A2AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x9A233C", Offset = "0x9A233C", VA = "0x9A233C")]
		public FixedTransformAccessArray(int desiredJobCount = -1)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x9A244C", Offset = "0x9A244C", VA = "0x9A244C")]
		public FixedTransformAccessArray(int capacity, int desiredJobCount)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x9A2568", Offset = "0x9A2568", VA = "0x9A2568")]
		public int Add(Transform element)
		{
			return default(int);
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x9A27C4", Offset = "0x9A27C4", VA = "0x9A27C4")]
		public void Remove(int index)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x9A2990", Offset = "0x9A2990", VA = "0x9A2990")]
		public bool Exist(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x9A2A00", Offset = "0x9A2A00", VA = "0x9A2A00")]
		public bool Exist(Transform element)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x9A2B00", Offset = "0x9A2B00", VA = "0x9A2B00")]
		public int GetIndex(Transform element)
		{
			return default(int);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x9A2C00", Offset = "0x9A2C00", VA = "0x9A2C00")]
		public void Clear()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x9A2E04", Offset = "0x9A2E04", VA = "0x9A2E04", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x9A2EF0", Offset = "0x9A2EF0", VA = "0x9A2EF0")]
		public TransformAccessArray GetTransformAccessArray()
		{
			return default(TransformAccessArray);
		}
	}
	[Token(Token = "0x2000379")]
	public static class NativeArrayExtension
	{
		[Token(Token = "0x60015C8")]
		public static void CopyToFast<T, T2>(this NativeArray<T> nativeArray, T2[] array) where T : struct where T2 : struct
		{
		}

		[Token(Token = "0x60015C9")]
		public static void CopyToFast<T, T2>(this NativeArray<T> nativeArray, int startIndex, T2[] array) where T : struct where T2 : struct
		{
		}

		[Token(Token = "0x60015CA")]
		public static void CopyToFast<T>(this NativeArray<T> nativeArray, int startIndex, NativeArray<T> array) where T : struct
		{
		}

		[Token(Token = "0x60015CB")]
		public static void CopyFromFast<T, T2>(this NativeArray<T> nativeArray, T2[] array) where T : struct where T2 : struct
		{
		}

		[Token(Token = "0x60015CC")]
		public static void CopyFromFast<T>(this NativeArray<T> nativeArray, NativeArray<T> array) where T : struct
		{
		}

		[Token(Token = "0x60015CD")]
		public static void CopyFromFast<T, T2>(this NativeArray<T> nativeArray, int startIndex, T2[] array) where T : struct where T2 : struct
		{
		}

		[Token(Token = "0x60015CE")]
		public static void SetValue<T>(this NativeArray<T> nativeArray, int startIndex, int count, T value) where T : struct
		{
		}
	}
	[Token(Token = "0x200037A")]
	public abstract class CreateSingleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T initInstance;

		[Token(Token = "0x170002F6")]
		public static T Instance
		{
			[Token(Token = "0x60015CF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D0")]
		private static void InitInstance()
		{
		}

		[Token(Token = "0x60015D1")]
		public static bool IsInstance()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D2")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015D3")]
		protected virtual void DuplicateDetection(T duplicate)
		{
		}

		[Token(Token = "0x60015D4")]
		protected abstract void InitSingleton();

		[Token(Token = "0x60015D5")]
		protected CreateSingleton()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public static class DataUtility
	{
		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x997C98", Offset = "0x997C98", VA = "0x997C98")]
		public static uint PackPair(int v0, int v1)
		{
			return default(uint);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x997CBC", Offset = "0x997CBC", VA = "0x997CBC")]
		public static void UnpackPair(uint pack, out int v0, out int v1)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x9A0048", Offset = "0x9A0048", VA = "0x9A0048")]
		public static uint Pack16(int hi, int low)
		{
			return default(uint);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x9A0054", Offset = "0x9A0054", VA = "0x9A0054")]
		public static int Unpack16Hi(uint pack)
		{
			return default(int);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x9A005C", Offset = "0x9A005C", VA = "0x9A005C")]
		public static int Unpack16Low(uint pack)
		{
			return default(int);
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x9A0064", Offset = "0x9A0064", VA = "0x9A0064")]
		public static uint Pack4_28(int hi, int low)
		{
			return default(uint);
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x9A0070", Offset = "0x9A0070", VA = "0x9A0070")]
		public static int Unpack4_28Hi(uint pack)
		{
			return default(int);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x9A0078", Offset = "0x9A0078", VA = "0x9A0078")]
		public static int Unpack4_28Low(uint pack)
		{
			return default(int);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x9A0080", Offset = "0x9A0080", VA = "0x9A0080")]
		public static uint Pack8_24(int hi, int low)
		{
			return default(uint);
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x9A008C", Offset = "0x9A008C", VA = "0x9A008C")]
		public static int Unpack8_24Hi(uint pack)
		{
			return default(int);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x9A0094", Offset = "0x9A0094", VA = "0x9A0094")]
		public static int Unpack8_24Low(uint pack)
		{
			return default(int);
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x9A009C", Offset = "0x9A009C", VA = "0x9A009C")]
		public static ulong Pack32(int hi, int low)
		{
			return default(ulong);
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x9A00AC", Offset = "0x9A00AC", VA = "0x9A00AC")]
		public static int Unpack32Hi(ulong pack)
		{
			return default(int);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x9A00B4", Offset = "0x9A00B4", VA = "0x9A00B4")]
		public static int Unpack32Low(ulong pack)
		{
			return default(int);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x998AAC", Offset = "0x998AAC", VA = "0x998AAC")]
		public static ulong PackTriple(int v0, int v1, int v2)
		{
			return default(ulong);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x998C84", Offset = "0x998C84", VA = "0x998C84")]
		public static void UnpackTriple(ulong pack, out int v0, out int v1, out int v2)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x9A00B8", Offset = "0x9A00B8", VA = "0x9A00B8")]
		public static ulong PackQuater(int v0, int v1, int v2, int v3)
		{
			return default(ulong);
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x9A02F0", Offset = "0x9A02F0", VA = "0x9A02F0")]
		public static void UnpackQuater(ulong pack, out int v0, out int v1, out int v2, out int v3)
		{
		}
	}
	[Token(Token = "0x200037C")]
	public static class GizmoUtility
	{
		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color ColorDynamic;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color ColorKinematic;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Color ColorInvalid;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Color ColorCollider;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly Color ColorNonSelectedCollider;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly Color ColorTriangle;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly Color ColorStructLine;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly Color ColorBendLine;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly Color ColorNearLine;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly Color ColorRotationLine;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly Color ColorAdjustLine;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static readonly Color ColorAirLine;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static readonly Color ColorBasePosition;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static readonly Color ColorDirectionMoveLimit;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static readonly Color ColorDeformerPoint;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static readonly Color ColorDeformerPointRange;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static readonly Color ColorWind;

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x9A2EF8", Offset = "0x9A2EF8", VA = "0x9A2EF8")]
		public static void DrawWireCapsule(Vector3 pos, Quaternion rot, Vector3 scl, Vector3 ldir, Vector3 lup, float length, float startRadius, float endRadius, bool resetMatrix = true)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x9A33C4", Offset = "0x9A33C4", VA = "0x9A33C4")]
		public static void DrawWireSphere(Vector3 pos, Quaternion rot, Vector3 scl, float radius, bool drawSphere, bool drawAxis, bool resetMatrix = true)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x9A369C", Offset = "0x9A369C", VA = "0x9A369C")]
		public static void DrawWireCube(Vector3 pos, Quaternion rot, Vector3 size, bool resetMatrix = true)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x9A3824", Offset = "0x9A3824", VA = "0x9A3824")]
		public static void DrawWireCone(Vector3 pos, Quaternion rot, float length, float radius, int div = 8)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x9A3CA8", Offset = "0x9A3CA8", VA = "0x9A3CA8")]
		public static void DrawWireArrow(Vector3 pos, Quaternion rot, Vector3 size, bool cross = false)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x9A4194", Offset = "0x9A4194", VA = "0x9A4194")]
		public static void DrawAxis(Vector3 pos, Quaternion rot, float size, bool resetMatrix = true)
		{
		}
	}
	[Token(Token = "0x200037D")]
	public static class MathUtility
	{
		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x8CB85C", Offset = "0x8CB85C", VA = "0x8CB85C")]
		public static float3 Project(float3 v, float3 n)
		{
			return default(float3);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x8CB8A0", Offset = "0x8CB8A0", VA = "0x8CB8A0")]
		public static float Angle(float3 v1, float3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x8CB938", Offset = "0x8CB938", VA = "0x8CB938")]
		public static float3 ClampVector(float3 v, float minlength, float maxlength)
		{
			return default(float3);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x8CB9D4", Offset = "0x8CB9D4", VA = "0x8CB9D4")]
		public static float3 ClampAngle(float3 dir, float3 basedir, float maxAngle)
		{
			return default(float3);
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x8CBC5C", Offset = "0x8CBC5C", VA = "0x8CBC5C")]
		public static quaternion FromToRotation(float3 from, float3 to, float t = 1f)
		{
			return default(quaternion);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x8CBEB8", Offset = "0x8CBEB8", VA = "0x8CBEB8")]
		public static quaternion FromToRotation(quaternion from, quaternion to, float t = 1f)
		{
			return default(quaternion);
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x8CBF44", Offset = "0x8CBF44", VA = "0x8CBF44")]
		public static float Angle(quaternion q)
		{
			return default(float);
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x8C5118", Offset = "0x8C5118", VA = "0x8C5118")]
		public static float ClosestPtPointSegmentRatio(float3 c, float3 a, float3 b)
		{
			return default(float);
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x8CBF64", Offset = "0x8CBF64", VA = "0x8CBF64")]
		public static float3 ClosestPtPointSegment(float3 c, float3 a, float3 b)
		{
			return default(float3);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x8CC06C", Offset = "0x8CC06C", VA = "0x8CC06C")]
		public static bool IntersectPointPlane(float3 planePos, float3 planeDir, float3 pos, out float3 outpos)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x8CC184", Offset = "0x8CC184", VA = "0x8CC184")]
		public static bool IntersectPointSphere(float3 p, float3 sc, float sr)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x8CC1BC", Offset = "0x8CC1BC", VA = "0x8CC1BC")]
		public static bool IntersectRaySphere(float3 p, float3 d, float3 sc, float sr, out float3 q, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x8CC348", Offset = "0x8CC348", VA = "0x8CC348")]
		public static bool IntersectLineSphare(float3 a, float3 b, float3 sc, float sr, out float3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x8CC4AC", Offset = "0x8CC4AC", VA = "0x8CC4AC")]
		public static bool IntersectRayCone(float3 o, float3 d, float3 c, float3 v, float cost, out float t, out float3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x8CC930", Offset = "0x8CC930", VA = "0x8CC930")]
		public static bool IntersectLineConeSurface(float3 a, float3 b, float3 d, float dlen, float3 c, float3 v, float cost, float3 c1, float3 c2, out float3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x8CCAB8", Offset = "0x8CCAB8", VA = "0x8CCAB8")]
		public static bool IntersectLineCylinderSurface(float3 sa, float3 sb, float3 p, float3 q, float r, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x8CCE18", Offset = "0x8CCE18", VA = "0x8CCE18")]
		public static bool IntersectLineCylinderSurface(float3 a, float3 b, float3 c1, float3 c2, float r1, float r2, out float3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x8CD15C", Offset = "0x8CD15C", VA = "0x8CD15C")]
		public static bool IntersectLineCapsule(float3 a, float3 b, float3 c1, float3 c2, float r1, float r2, out float3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x8CD3E8", Offset = "0x8CD3E8", VA = "0x8CD3E8")]
		public static bool IntersectTrianglePointDistance(float3 p, float3 p0, float3 p1, float3 p2, float restDist, float compressionStiffness, float stretchStiffness, out float3 corr, out float3 corr0, out float3 corr1, out float3 corr2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x8CDB0C", Offset = "0x8CDB0C", VA = "0x8CDB0C")]
		public static bool IntersectTrianglePointDistanceSide(float3 p, float3 p0, float3 p1, float3 p2, float restDist, float compressionStiffness, float stretchStiffness, float side, out float3 corr, out float3 corr0, out float3 corr1, out float3 corr2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x8CE2A0", Offset = "0x8CE2A0", VA = "0x8CE2A0")]
		public static bool IntersectTrianglePointDistanceSide2(float3 p, float3 p0, float3 p1, float3 p2, float radius, float restDist, float compressionStiffness, float stretchStiffness, float side, out float3 corr, out float3 corr0, out float3 corr1, out float3 corr2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x8CEA04", Offset = "0x8CEA04", VA = "0x8CEA04")]
		public static float DistanceTrianglePoint(float3 p, float3 p0, float3 p1, float3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x8CEF00", Offset = "0x8CEF00", VA = "0x8CEF00")]
		public static float DistanceTriangleCenter(float3 p, float3 p0, float3 p1, float3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x8CEFA0", Offset = "0x8CEFA0", VA = "0x8CEFA0")]
		public static float DirectionPointTriangle(float3 p, float3 a, float3 b, float3 c)
		{
			return default(float);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x8CF0A8", Offset = "0x8CF0A8", VA = "0x8CF0A8")]
		public static bool IntersectLineTriangle(float3 p, float3 q, float3 a, float3 b, float3 c, out float3 hitpos, out float t, out float3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x8CF3F0", Offset = "0x8CF3F0", VA = "0x8CF3F0")]
		public static float ClosestPtSegmentSegment(float3 p1, float3 q1, float3 p2, float3 q2, out float s, out float t, out float3 c1, out float3 c2)
		{
			return default(float);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x8CF820", Offset = "0x8CF820", VA = "0x8CF820")]
		public static float GetBezierValue(BezierParam bparam, float t)
		{
			return default(float);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x8CF8C8", Offset = "0x8CF8C8", VA = "0x8CF8C8")]
		public static float GetBezierValue(float sval, float eval, float curve, float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200037E")]
	public static class MeshUtility
	{
		[Token(Token = "0x200037F")]
		private class TetraVertex
		{
			[Token(Token = "0x4001889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x400188A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 pos;

			[Token(Token = "0x6001614")]
			[Address(RVA = "0x8D56EC", Offset = "0x8D56EC", VA = "0x8D56EC")]
			public TetraVertex()
			{
			}

			[Token(Token = "0x6001615")]
			[Address(RVA = "0x8D569C", Offset = "0x8D569C", VA = "0x8D569C")]
			public TetraVertex(Vector3 pos, int index)
			{
			}
		}

		[Token(Token = "0x2000380")]
		private class Tetra
		{
			[Token(Token = "0x400188B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<TetraVertex> vertexList;

			[Token(Token = "0x400188C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 circumCenter;

			[Token(Token = "0x400188D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float circumRadius;

			[Token(Token = "0x400188E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 tetraCenter;

			[Token(Token = "0x400188F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float tetraSize;

			[Token(Token = "0x6001616")]
			[Address(RVA = "0x8D6670", Offset = "0x8D6670", VA = "0x8D6670")]
			public Tetra()
			{
			}

			[Token(Token = "0x6001617")]
			[Address(RVA = "0x8D56F4", Offset = "0x8D56F4", VA = "0x8D56F4")]
			public Tetra(TetraVertex a, TetraVertex b, TetraVertex c, TetraVertex d)
			{
			}

			[Token(Token = "0x6001618")]
			[Address(RVA = "0x8D603C", Offset = "0x8D603C", VA = "0x8D603C")]
			public ulong GetTetraHash()
			{
				return default(ulong);
			}

			[Token(Token = "0x6001619")]
			[Address(RVA = "0x8D581C", Offset = "0x8D581C", VA = "0x8D581C")]
			public void CalcCircumcircle()
			{
			}

			[Token(Token = "0x600161A")]
			[Address(RVA = "0x8D61D4", Offset = "0x8D61D4", VA = "0x8D61D4")]
			public bool IntersectCircumcircle(Vector3 pos)
			{
				return default(bool);
			}

			[Token(Token = "0x600161B")]
			[Address(RVA = "0x8D698C", Offset = "0x8D698C", VA = "0x8D698C")]
			public bool CheckSame(Tetra tri)
			{
				return default(bool);
			}

			[Token(Token = "0x600161C")]
			[Address(RVA = "0x8D6164", Offset = "0x8D6164", VA = "0x8D6164")]
			public bool ContainsPoint(TetraVertex p1)
			{
				return default(bool);
			}

			[Token(Token = "0x600161D")]
			[Address(RVA = "0x8D628C", Offset = "0x8D628C", VA = "0x8D628C")]
			public bool ContainsPoint(TetraVertex p1, TetraVertex p2, TetraVertex p3, TetraVertex p4)
			{
				return default(bool);
			}

			[Token(Token = "0x600161E")]
			[Address(RVA = "0x8D66E0", Offset = "0x8D66E0", VA = "0x8D66E0")]
			public void CalcSize()
			{
			}

			[Token(Token = "0x600161F")]
			[Address(RVA = "0x8D63A0", Offset = "0x8D63A0", VA = "0x8D63A0")]
			public bool Verification()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x8D18F8", Offset = "0x8D18F8", VA = "0x8D18F8")]
		public static GameObject ReplaceSkinnedMeshRendererToMeshRenderer(SkinnedMeshRenderer sren, bool replaceSkinnedMeshRenderer)
		{
			return null;
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x8D1DB8", Offset = "0x8D1DB8", VA = "0x8D1DB8")]
		public static bool CalcMeshWorldPositionNormalTangent(MeshData meshData, List<Transform> boneList, out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(bool);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x8D23FC", Offset = "0x8D23FC", VA = "0x8D23FC")]
		public static bool CalcMeshWorldPositionNormalTangent(Renderer ren, Mesh mesh, out List<Vector3> wposList, out List<Vector3> wnorList, out List<Vector3> wtanList)
		{
			return default(bool);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x8D31BC", Offset = "0x8D31BC", VA = "0x8D31BC")]
		public static bool CalcMeshLocalNormalTangent(List<int> selectList, Vector3[] vlist, Vector2[] uvlist, int[] triangles, out List<Vector3> lnorList, out List<Vector3> ltanList)
		{
			return default(bool);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x8D05D0", Offset = "0x8D05D0", VA = "0x8D05D0")]
		public static List<HashSet<int>> GetTriangleToVertexLinkList(int vcnt, List<int> lineList, List<int> triangleList)
		{
			return null;
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x8D3E6C", Offset = "0x8D3E6C", VA = "0x8D3E6C")]
		public static Dictionary<uint, List<int>> GetTriangleEdgePair(List<int> triangleList)
		{
			return null;
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x8D3FD8", Offset = "0x8D3FD8", VA = "0x8D3FD8")]
		private static void AddTriangleEdge(int v0, int v1, int tindex, Dictionary<uint, List<int>> triangleEdgeDict)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x8D410C", Offset = "0x8D410C", VA = "0x8D410C")]
		public static List<ulong> GetTrianglePackList(List<int> triangleList)
		{
			return null;
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x8D4264", Offset = "0x8D4264", VA = "0x8D4264")]
		public static void CalcTetraMesh(List<Vector3> posList, out int tetraCount, out List<int> tetraIndexList, out List<float> tetraSizeList)
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class StaticStringBuilder
	{
		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder stringBuilder;

		[Token(Token = "0x170002F7")]
		public static StringBuilder Instance
		{
			[Token(Token = "0x6001620")]
			[Address(RVA = "0x92F85C", Offset = "0x92F85C", VA = "0x92F85C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x92800C", Offset = "0x92800C", VA = "0x92800C")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x9281BC", Offset = "0x9281BC", VA = "0x9281BC")]
		public static StringBuilder Append(params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x92808C", Offset = "0x92808C", VA = "0x92808C")]
		public static StringBuilder AppendLine(params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x92F8C4", Offset = "0x92F8C4", VA = "0x92F8C4")]
		public static StringBuilder AppendLine()
		{
			return null;
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x92F95C", Offset = "0x92F95C", VA = "0x92F95C")]
		public static string AppendToString(params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x9282BC", Offset = "0x9282BC", VA = "0x9282BC")]
		public new static string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x92FAB4", Offset = "0x92FAB4", VA = "0x92FAB4")]
		public StaticStringBuilder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000382")]
	public class UpdateTimeManager
	{
		[Token(Token = "0x2000383")]
		public enum UpdateCount
		{
			[Token(Token = "0x4001895")]
			_60 = 60,
			[Token(Token = "0x4001896")]
			_90_Default = 90,
			[Token(Token = "0x4001897")]
			_120 = 120,
			[Token(Token = "0x4001898")]
			_150 = 150,
			[Token(Token = "0x4001899")]
			_180 = 180
		}

		[Token(Token = "0x2000384")]
		public enum UpdateMode
		{
			[Token(Token = "0x400189B")]
			UnscaledTime,
			[Token(Token = "0x400189C")]
			OncePerFrame
		}

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private UpdateCount updatePerSeccond;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private UpdateMode updateMode;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671460", Offset = "0x671460")]
		[SerializeField]
		private float timeScale;

		[Token(Token = "0x170002F8")]
		public int UpdatePerSecond
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0x9313F8", Offset = "0x9313F8", VA = "0x9313F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F9")]
		public float UpdateIntervalTime
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0x931408", Offset = "0x931408", VA = "0x931408")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FA")]
		public float UpdatePower
		{
			[Token(Token = "0x600162E")]
			[Address(RVA = "0x93141C", Offset = "0x93141C", VA = "0x93141C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FB")]
		public float TimeScale
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0x931434", Offset = "0x931434", VA = "0x931434")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001630")]
			[Address(RVA = "0x93143C", Offset = "0x93143C", VA = "0x93143C")]
			set
			{
			}
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x923140", Offset = "0x923140", VA = "0x923140")]
		public UpdateMode GetUpdateMode()
		{
			return default(UpdateMode);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x9313F0", Offset = "0x9313F0", VA = "0x9313F0")]
		public void SetUpdateMode(UpdateMode mode)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x931400", Offset = "0x931400", VA = "0x931400")]
		public void SetUpdatePerSecond(UpdateCount ucount)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x9314B8", Offset = "0x9314B8", VA = "0x9314B8")]
		public UpdateTimeManager()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class ReferenceDataBuilder<T> where T : struct
	{
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int indexCount;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> dataList;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<List<int>> indexToDataIndexList;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<List<int>> dataIndexToIndexList;

		[Token(Token = "0x6001632")]
		public void Init(int indexCount)
		{
		}

		[Token(Token = "0x6001633")]
		public void AddData(T data, params int[] indexes)
		{
		}

		[Token(Token = "0x6001634")]
		public (List<ReferenceDataIndex>, List<T>) GetDirectReferenceData()
		{
			return default((List<ReferenceDataIndex>, List<T>));
		}

		[Token(Token = "0x6001635")]
		public (List<ReferenceDataIndex>, List<int>, List<List<int>>) GetIndirectReferenceData()
		{
			return default((List<ReferenceDataIndex>, List<int>, List<List<int>>));
		}

		[Token(Token = "0x6001636")]
		public ReferenceDataBuilder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000386")]
	public struct ReferenceDataIndex
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int startIndex;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int count;
	}
	[Token(Token = "0x2000387")]
	public interface IDataHash
	{
		[Token(Token = "0x6001637")]
		int GetDataHash();
	}
	[Token(Token = "0x2000388")]
	public interface IShareDataObject
	{
		[Token(Token = "0x6001638")]
		List<ShareDataObject> GetAllShareDataObject();

		[Token(Token = "0x6001639")]
		ShareDataObject DuplicateShareDataObject(ShareDataObject source);
	}
	[Serializable]
	[Token(Token = "0x2000389")]
	public abstract class ShareDataObject : ScriptableObject, IDataVerify, IDataHash
	{
		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int dataHash;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected int dataVersion;

		[Token(Token = "0x170002FC")]
		public int SaveDataHash
		{
			[Token(Token = "0x600163C")]
			[Address(RVA = "0x92E17C", Offset = "0x92E17C", VA = "0x92E17C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600163B")]
			[Address(RVA = "0x92E174", Offset = "0x92E174", VA = "0x92E174")]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public int SaveDataVersion
		{
			[Token(Token = "0x600163E")]
			[Address(RVA = "0x92E18C", Offset = "0x92E18C", VA = "0x92E18C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600163D")]
			[Address(RVA = "0x92E184", Offset = "0x92E184", VA = "0x92E184")]
			set
			{
			}
		}

		[Token(Token = "0x600163A")]
		public abstract int GetDataHash();

		[Token(Token = "0x600163F")]
		public abstract int GetVersion();

		[Token(Token = "0x6001640")]
		public abstract Define.Error VerifyData();

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x92E194", Offset = "0x92E194", VA = "0x92E194", Slot = "12")]
		public virtual void CreateVerifyData()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x92E1D4", Offset = "0x92E1D4", VA = "0x92E1D4", Slot = "13")]
		public virtual string GetInformation()
		{
			return null;
		}

		[Token(Token = "0x6001643")]
		public static T CreateShareData<T>(string dataName) where T : ShareDataObject
		{
			return null;
		}

		[Token(Token = "0x6001644")]
		public static bool RemoveNullAndDuplication<T>(List<T> data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001645")]
		public static T Clone<T>(T source) where T : ShareDataObject
		{
			return null;
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x92E11C", Offset = "0x92E11C", VA = "0x92E11C")]
		protected ShareDataObject()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class StopWatch
	{
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float startTime;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float endTime;

		[Token(Token = "0x170002FE")]
		public float ElapsedSeconds
		{
			[Token(Token = "0x6001649")]
			[Address(RVA = "0x92FB84", Offset = "0x92FB84", VA = "0x92FB84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FF")]
		public float ElapsedMilliseconds
		{
			[Token(Token = "0x600164A")]
			[Address(RVA = "0x92FB90", Offset = "0x92FB90", VA = "0x92FB90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x92FB2C", Offset = "0x92FB2C", VA = "0x92FB2C")]
		public StopWatch Start()
		{
			return null;
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x92FB58", Offset = "0x92FB58", VA = "0x92FB58")]
		public StopWatch Stop()
		{
			return null;
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x92FBA8", Offset = "0x92FBA8", VA = "0x92FBA8")]
		public StopWatch()
		{
		}
	}
}
namespace uTools
{
	[Token(Token = "0x200038B")]
	public class BlendShapeBlink : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200038C")]
		public class Shape
		{
			[Token(Token = "0x40018B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x40018B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SkinnedMeshRenderer skinnedMeshRenderer;

			[Token(Token = "0x40018B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int index;

			[Token(Token = "0x17000301")]
			public Mesh SharedMesh
			{
				[Token(Token = "0x6001658")]
				[Address(RVA = "0x15C1720", Offset = "0x15C1720", VA = "0x15C1720")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001659")]
			[Address(RVA = "0x15C14C4", Offset = "0x15C14C4", VA = "0x15C14C4", Slot = "4")]
			public virtual void OnValidate()
			{
			}

			[Token(Token = "0x600165A")]
			[Address(RVA = "0x15C15EC", Offset = "0x15C15EC", VA = "0x15C15EC")]
			public Shape()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200038D")]
		public class BlinkShape : Shape
		{
			[Token(Token = "0x40018B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6714F0", Offset = "0x6714F0")]
			public float minWeight;

			[Token(Token = "0x40018B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x67150C", Offset = "0x67150C")]
			public float maxWeight;

			[Token(Token = "0x600165B")]
			[Address(RVA = "0x15C15F4", Offset = "0x15C15F4", VA = "0x15C15F4", Slot = "4")]
			public override void OnValidate()
			{
			}

			[Token(Token = "0x600165C")]
			[Address(RVA = "0x15C16D8", Offset = "0x15C16D8", VA = "0x15C16D8")]
			public BlinkShape()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200038E")]
		public class AvoidedShape : Shape
		{
			[Token(Token = "0x40018B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x67152C", Offset = "0x67152C")]
			public float thresholdWeight;

			[Token(Token = "0x600165D")]
			[Address(RVA = "0x15C141C", Offset = "0x15C141C", VA = "0x15C141C", Slot = "4")]
			public override void OnValidate()
			{
			}

			[Token(Token = "0x600165E")]
			[Address(RVA = "0x15C15E4", Offset = "0x15C15E4", VA = "0x15C15E4")]
			public AvoidedShape()
			{
			}
		}

		[Token(Token = "0x200038F")]
		private delegate void BlinkUpdate();

		[Serializable]
		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667110", Offset = "0x667110")]
		private sealed class <>c
		{
			[Token(Token = "0x40018BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<AvoidedShape, bool> <>9__28_0;

			[Token(Token = "0x6001664")]
			[Address(RVA = "0x15C13A0", Offset = "0x15C13A0", VA = "0x15C13A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001665")]
			[Address(RVA = "0x15C13A8", Offset = "0x15C13A8", VA = "0x15C13A8")]
			internal bool <IsAvoidedShapesWeighted>b__28_0(AvoidedShape s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BlinkShape[] blinkShapes;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AvoidedShape[] avoidedShapes;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float closingTime;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float openingTime;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minOpenedInterval;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxOpenedInterval;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minClosedInterval;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxClosedInterval;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float openedTime;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float closedTime;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BlinkUpdate onBlinkUpdate;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float transitionTime;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isPreviousAvoided;

		[Token(Token = "0x17000300")]
		public bool IsBlinking
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0x15C0610", Offset = "0x15C0610", VA = "0x15C0610")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x15C069C", Offset = "0x15C069C", VA = "0x15C069C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x15C0790", Offset = "0x15C0790", VA = "0x15C0790")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x15C08F8", Offset = "0x15C08F8", VA = "0x15C08F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x15C08FC", Offset = "0x15C08FC", VA = "0x15C08FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x15C0E58", Offset = "0x15C0E58", VA = "0x15C0E58")]
		private void OnBlinkOpened()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x15C0EEC", Offset = "0x15C0EEC", VA = "0x15C0EEC")]
		private void OnBlinkClosing()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x15C10C0", Offset = "0x15C10C0", VA = "0x15C10C0")]
		private void OnBlinkClosed()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x15C1154", Offset = "0x15C1154", VA = "0x15C1154")]
		private void OnBlinkOpening()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x15C0794", Offset = "0x15C0794", VA = "0x15C0794")]
		private void ResetBlinking()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x15C0968", Offset = "0x15C0968", VA = "0x15C0968")]
		private bool IsAvoidedShapesWeighted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x15C1314", Offset = "0x15C1314", VA = "0x15C1314")]
		public BlendShapeBlink()
		{
		}
	}
}
namespace NL.Common
{
	[Serializable]
	[Token(Token = "0x2000391")]
	public class MasterData
	{
		[Serializable]
		[Token(Token = "0x2000392")]
		public class Cell
		{
			[Token(Token = "0x40018BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x40018BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string type;

			[Token(Token = "0x40018C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string value;

			[Token(Token = "0x6001667")]
			[Address(RVA = "0x949B98", Offset = "0x949B98", VA = "0x949B98")]
			public Cell(string name, string type, string value)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000393")]
		public class ListCell
		{
			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string type;

			[Token(Token = "0x40018C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<string> values;

			[Token(Token = "0x6001668")]
			[Address(RVA = "0x949BD8", Offset = "0x949BD8", VA = "0x949BD8")]
			public ListCell(string name, string type, List<string> values)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000394")]
		public class Row
		{
			[Token(Token = "0x40018C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Cell> cells;

			[Token(Token = "0x40018C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<ListCell> listCells;

			[Token(Token = "0x6001669")]
			[Address(RVA = "0x949C18", Offset = "0x949C18", VA = "0x949C18")]
			public Row(List<Cell> cells, List<ListCell> listCells)
			{
			}
		}

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Row> rows;

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x949B90", Offset = "0x949B90", VA = "0x949B90")]
		public MasterData()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public static class LinqExtensions
	{
		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667130", Offset = "0x667130")]
		private sealed class <Do>d__0<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40018C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x40018C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40018C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<T> enumerable;

			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<T> <>3__enumerable;

			[Token(Token = "0x40018CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Action<T> action;

			[Token(Token = "0x40018CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> <>3__action;

			[Token(Token = "0x40018CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<T> <>7__wrap1;

			[Token(Token = "0x17000302")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001673")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000303")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001675")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600166F")]
			[DebuggerHidden]
			public <Do>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001670")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001671")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001672")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001674")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001676")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001677")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000397")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667140", Offset = "0x667140")]
		private sealed class <Do>d__1<TKey, TValue> : IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, IEnumerator<KeyValuePair<TKey, TValue>>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40018CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private KeyValuePair<TKey, TValue> <>2__current;

			[Token(Token = "0x40018D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40018D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<KeyValuePair<TKey, TValue>> enumerable;

			[Token(Token = "0x40018D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<KeyValuePair<TKey, TValue>> <>3__enumerable;

			[Token(Token = "0x40018D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Action<KeyValuePair<TKey, TValue>> action;

			[Token(Token = "0x40018D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<KeyValuePair<TKey, TValue>> <>3__action;

			[Token(Token = "0x40018D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<KeyValuePair<TKey, TValue>> <>7__wrap1;

			[Token(Token = "0x17000304")]
			private KeyValuePair<TKey, TValue> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Current
			{
				[Token(Token = "0x600167C")]
				[DebuggerHidden]
				get
				{
					return default(KeyValuePair<TKey, TValue>);
				}
			}

			[Token(Token = "0x17000305")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600167E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001678")]
			[DebuggerHidden]
			public <Do>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001679")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600167A")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600167B")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600167D")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600167F")]
			[DebuggerHidden]
			private IEnumerator<KeyValuePair<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001680")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x600166A")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x67772C", Offset = "0x67772C")]
		public static IEnumerable<T> Do<T>(this IEnumerable<T> enumerable, Action<T> action)
		{
			return null;
		}

		[Token(Token = "0x600166B")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6777A0", Offset = "0x6777A0")]
		public static IEnumerable<KeyValuePair<TKey, TValue>> Do<TKey, TValue>(this IEnumerable<KeyValuePair<TKey, TValue>> enumerable, Action<KeyValuePair<TKey, TValue>> action)
		{
			return null;
		}

		[Token(Token = "0x600166C")]
		public static void Finish<T>(this IEnumerable<T> enumerable, Action<T> action)
		{
		}

		[Token(Token = "0x600166D")]
		public static void Finish<T>(this IEnumerable<T> enumerable, Action<T, int> action)
		{
		}

		[Token(Token = "0x600166E")]
		public static void Finish<TKey, TValue>(this IEnumerable<KeyValuePair<TKey, TValue>> enumerable, Action<KeyValuePair<TKey, TValue>> action)
		{
		}
	}
	[Token(Token = "0x2000398")]
	public static class ObjectExtensions
	{
		[Token(Token = "0x6001681")]
		[Address(RVA = "0x949C50", Offset = "0x949C50", VA = "0x949C50")]
		public static void Activate(this GameObject go)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x949CA8", Offset = "0x949CA8", VA = "0x949CA8")]
		public static void Deactivate(this GameObject go)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x949D00", Offset = "0x949D00", VA = "0x949D00")]
		public static void Enable(this Behaviour c)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x949D30", Offset = "0x949D30", VA = "0x949D30")]
		public static void Enable(this Collider c)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x949D60", Offset = "0x949D60", VA = "0x949D60")]
		public static void Enable(this Renderer r)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x949D90", Offset = "0x949D90", VA = "0x949D90")]
		public static void Disable(this Behaviour c)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x949DC0", Offset = "0x949DC0", VA = "0x949DC0")]
		public static void Disable(this Collider c)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x949DF0", Offset = "0x949DF0", VA = "0x949DF0")]
		public static void Disable(this Renderer r)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x948404", Offset = "0x948404", VA = "0x948404")]
		public static void AddChild(this GameObject parent, GameObject child)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x949E20", Offset = "0x949E20", VA = "0x949E20")]
		public static void AddChild(this GameObject parent, GameObject child, bool worldPositionStays)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x949EA0", Offset = "0x949EA0", VA = "0x949EA0")]
		public static List<Transform> GetChildren(this Transform t)
		{
			return null;
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x949F88", Offset = "0x949F88", VA = "0x949F88")]
		public static void RemoveChildren(this Transform t)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x94A064", Offset = "0x94A064", VA = "0x94A064")]
		public static float X(this Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x94A090", Offset = "0x94A090", VA = "0x94A090")]
		public static float Y(this Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x94A0C4", Offset = "0x94A0C4", VA = "0x94A0C4")]
		public static float Z(this Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x94A0F8", Offset = "0x94A0F8", VA = "0x94A0F8")]
		public static Vector2 XY(this Transform t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x94A17C", Offset = "0x94A17C", VA = "0x94A17C")]
		public static Vector2 XZ(this Transform t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x94A204", Offset = "0x94A204", VA = "0x94A204")]
		public static Vector2 YZ(this Transform t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x94A28C", Offset = "0x94A28C", VA = "0x94A28C")]
		public static Transform SetX(this Transform t, float x)
		{
			return null;
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x94A398", Offset = "0x94A398", VA = "0x94A398")]
		public static Transform SetY(this Transform t, float y)
		{
			return null;
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x94A4A4", Offset = "0x94A4A4", VA = "0x94A4A4")]
		public static Transform SetZ(this Transform t, float z)
		{
			return null;
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x94A5B0", Offset = "0x94A5B0", VA = "0x94A5B0")]
		public static Transform SetXY(this Transform t, float x, float y)
		{
			return null;
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x94A688", Offset = "0x94A688", VA = "0x94A688")]
		public static Transform SetXZ(this Transform t, float x, float z)
		{
			return null;
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x94A760", Offset = "0x94A760", VA = "0x94A760")]
		public static Transform SetYZ(this Transform t, float y, float z)
		{
			return null;
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x94A838", Offset = "0x94A838", VA = "0x94A838")]
		public static float LocalX(this Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x94A864", Offset = "0x94A864", VA = "0x94A864")]
		public static float LocalY(this Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x94A898", Offset = "0x94A898", VA = "0x94A898")]
		public static float LocalZ(this Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x94A8CC", Offset = "0x94A8CC", VA = "0x94A8CC")]
		public static Vector2 LocalXY(this Transform t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x94A968", Offset = "0x94A968", VA = "0x94A968")]
		public static Vector2 LocalXZ(this Transform t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x94AA08", Offset = "0x94AA08", VA = "0x94AA08")]
		public static Vector2 LocalYZ(this Transform t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x94AAA8", Offset = "0x94AAA8", VA = "0x94AAA8")]
		public static Transform SetLocalX(this Transform t, float x)
		{
			return null;
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x94ABB4", Offset = "0x94ABB4", VA = "0x94ABB4")]
		public static Transform SetLocalY(this Transform t, float y)
		{
			return null;
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x94ACC0", Offset = "0x94ACC0", VA = "0x94ACC0")]
		public static Transform SetLocalZ(this Transform t, float z)
		{
			return null;
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x94ADCC", Offset = "0x94ADCC", VA = "0x94ADCC")]
		public static Transform SetLocalXY(this Transform t, float x, float y)
		{
			return null;
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x94AEA4", Offset = "0x94AEA4", VA = "0x94AEA4")]
		public static Transform SetLocalXZ(this Transform t, float x, float z)
		{
			return null;
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x94AF7C", Offset = "0x94AF7C", VA = "0x94AF7C")]
		public static Transform SetLocalYZ(this Transform t, float y, float z)
		{
			return null;
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x94B054", Offset = "0x94B054", VA = "0x94B054")]
		public static float LocalScaleX(this Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x94B080", Offset = "0x94B080", VA = "0x94B080")]
		public static float LocalScaleY(this Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x94B0B4", Offset = "0x94B0B4", VA = "0x94B0B4")]
		public static float LocalScaleZ(this Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x94B0E8", Offset = "0x94B0E8", VA = "0x94B0E8")]
		public static Transform SetLocalScaleX(this Transform t, float x)
		{
			return null;
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x94B1F4", Offset = "0x94B1F4", VA = "0x94B1F4")]
		public static Transform SetLocalScaleY(this Transform t, float y)
		{
			return null;
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x94B300", Offset = "0x94B300", VA = "0x94B300")]
		public static Transform SetLocalScaleZ(this Transform t, float z)
		{
			return null;
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x94B40C", Offset = "0x94B40C", VA = "0x94B40C")]
		public static Vector3 ToXZ(this Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x94B444", Offset = "0x94B444", VA = "0x94B444")]
		public static Vector2 ToXZVector2(this Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x94B474", Offset = "0x94B474", VA = "0x94B474")]
		public static Transform Reset(this Transform t)
		{
			return null;
		}
	}
	[Token(Token = "0x2000399")]
	public class ResourceManager : Singleton<ResourceManager>
	{
		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, UnityEngine.Object> cachedresourcedic_;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object resourcelock_;

		[Token(Token = "0x60016AE")]
		public T InstantiateFromResourceCache<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x94B5B8", Offset = "0x94B5B8", VA = "0x94B5B8")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public static class Core
	{
		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667160", Offset = "0x667160")]
		private sealed class <LoadAsyncCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, UnityEngine.Object> resourcedic;

			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string path;

			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Type type;

			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ResourceRequest <resReq>5__2;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016BF")]
				[Address(RVA = "0x948B04", Offset = "0x948B04", VA = "0x948B04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016C1")]
				[Address(RVA = "0x948B74", Offset = "0x948B74", VA = "0x948B74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x948900", Offset = "0x948900", VA = "0x948900")]
			[DebuggerHidden]
			public <LoadAsyncCoroutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x94892C", Offset = "0x94892C", VA = "0x94892C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x948930", Offset = "0x948930", VA = "0x948930", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x948B0C", Offset = "0x948B0C", VA = "0x948B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x9482FC", Offset = "0x9482FC", VA = "0x9482FC")]
		public static GameObject Instantiate(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x94836C", Offset = "0x94836C", VA = "0x94836C")]
		public static GameObject Instantiate(GameObject go, GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x60016B2")]
		public static T Instantiate<T>(T original) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60016B3")]
		public static T Instantiate<T>(T original, GameObject parent) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x94840C", Offset = "0x94840C", VA = "0x94840C")]
		public static GameObject InstantiateFromResource(string path)
		{
			return null;
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x948498", Offset = "0x948498", VA = "0x948498")]
		public static GameObject InstantiateFromResource(string path, GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x60016B6")]
		public static T InstantiateFromResource<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60016B7")]
		public static T InstantiateFromResource<T>(string path, GameObject parent) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016B8")]
		public static IEnumerable<T> GetEnumList<T>() where T : struct
		{
			return null;
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x9484D0", Offset = "0x9484D0", VA = "0x9484D0")]
		public static void GetAllChildren(GameObject obj, ref List<GameObject> allChildren)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x948854", Offset = "0x948854", VA = "0x948854")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x677BF4", Offset = "0x677BF4")]
		public static IEnumerator LoadAsyncCoroutine(string path, Type type, Dictionary<string, UnityEngine.Object> resourcedic)
		{
			return null;
		}

		[Token(Token = "0x60016BB")]
		public static void LoadResource<T>(string path, Dictionary<string, UnityEngine.Object> resourcedic) where T : UnityEngine.Object
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class JsonSaveLoader
	{
		[Token(Token = "0x60016C2")]
		public static T Load<T>(string resourcename)
		{
			return (T)null;
		}

		[Token(Token = "0x60016C3")]
		public static T LoadOkNull<T>(string resourcename) where T : class
		{
			return null;
		}

		[Token(Token = "0x60016C4")]
		public static void SaveStreamingAssets<T>(string resourcename, T body)
		{
		}

		[Token(Token = "0x60016C5")]
		public static T LoadStreamingAssets<T>(string filename)
		{
			return (T)null;
		}

		[Token(Token = "0x60016C6")]
		public static T LoadFromAssets<T>(TextAsset textasset)
		{
			return (T)null;
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x948B7C", Offset = "0x948B7C", VA = "0x948B7C")]
		public JsonSaveLoader()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class ListContains
	{
		[Token(Token = "0x60016C8")]
		public static bool Contains<T>(List<T> list, T val) where T : IEquatable<T>
		{
			return default(bool);
		}

		[Token(Token = "0x60016C9")]
		public static int IndexOf<T>(List<T> list, T val) where T : IEquatable<T>
		{
			return default(int);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x948B84", Offset = "0x948B84", VA = "0x948B84")]
		public ListContains()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public abstract class Singleton<T> where T : class, new()
	{
		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x17000308")]
		public static T instance
		{
			[Token(Token = "0x60016CB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016CC")]
		protected Singleton()
		{
		}
	}
}
namespace NL.Common.Utility
{
	[Token(Token = "0x200039F")]
	public class Path
	{
		[Token(Token = "0x17000309")]
		public static string absoluteProjectRoot
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x94B670", Offset = "0x94B670", VA = "0x94B670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		public static string absoluteAssetsRoot
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x94B6D4", Offset = "0x94B6D4", VA = "0x94B6D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		public static string absoluteApplicationRoot
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x94B6DC", Offset = "0x94B6DC", VA = "0x94B6DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		public static string absoluteApplicationTestRoot
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x94B730", Offset = "0x94B730", VA = "0x94B730")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x94B784", Offset = "0x94B784", VA = "0x94B784")]
		public static string GetRelativeFromProjectRoot(string absolutePath)
		{
			return null;
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x94B900", Offset = "0x94B900", VA = "0x94B900")]
		public static string GetAbsoluteFromProjectRoot(string relativePathFromProjectRoot)
		{
			return null;
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x94B894", Offset = "0x94B894", VA = "0x94B894")]
		public static string ConvertBackslashToSlash(string path)
		{
			return null;
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x94B9CC", Offset = "0x94B9CC", VA = "0x94B9CC")]
		public Path()
		{
		}
	}
}
namespace NL.Common.Master
{
	[Token(Token = "0x20003A0")]
	public class MasterDataClassGenerator
	{
		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667170", Offset = "0x667170")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MasterDataClassGenerator <>4__this;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StringBuilder propertyBuilder;

			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StringBuilder constructorBuilder;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public StringBuilder methodBuilder;

			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x949018", Offset = "0x949018", VA = "0x949018")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x949AB8", Offset = "0x949AB8", VA = "0x949AB8")]
			internal void <GenerateMasterDataClass>b__0(MasterData.Cell cell)
			{
			}

			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x949B28", Offset = "0x949B28", VA = "0x949B28")]
			internal void <GenerateMasterDataClass>b__1(MasterData.ListCell listCell)
			{
			}
		}

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string namespacename_;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string masterTemplate;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string masterManagerTemplate;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string transStringTemplate;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly MasterData.Row row;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string masterName;

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x948B8C", Offset = "0x948B8C", VA = "0x948B8C")]
		public MasterDataClassGenerator(MasterData masterData, string masterName)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x948C20", Offset = "0x948C20", VA = "0x948C20")]
		public string GenerateMasterDataClass()
		{
			return null;
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x949020", Offset = "0x949020", VA = "0x949020")]
		public string GenerateMasterDataManagerClass()
		{
			return null;
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x94911C", Offset = "0x94911C", VA = "0x94911C")]
		private void ConvertListCell(MasterData.ListCell listCell, int index, StringBuilder propertyBuilder, StringBuilder constructorBuilder)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x9494E4", Offset = "0x9494E4", VA = "0x9494E4")]
		private void ConvertCell(MasterData.Cell cell, int index, StringBuilder propertyBuilder, StringBuilder constructorBuilder, StringBuilder methodBuilder)
		{
		}
	}
}
namespace UnityStandardAssets.SceneUtils
{
	[Token(Token = "0x20003A2")]
	public class ParticleSceneControls : MonoBehaviour
	{
		[Token(Token = "0x20003A3")]
		public enum Mode
		{
			[Token(Token = "0x40018FD")]
			Activate,
			[Token(Token = "0x40018FE")]
			Instantiate,
			[Token(Token = "0x40018FF")]
			Trail
		}

		[Token(Token = "0x20003A4")]
		public enum AlignMode
		{
			[Token(Token = "0x4001901")]
			Normal,
			[Token(Token = "0x4001902")]
			Up
		}

		[Serializable]
		[Token(Token = "0x20003A5")]
		public class DemoParticleSystem
		{
			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mode mode;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public AlignMode align;

			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int maxCount;

			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float minDist;

			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int camOffset;

			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string instructionText;

			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x85DCE4", Offset = "0x85DCE4", VA = "0x85DCE4")]
			public DemoParticleSystem()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A6")]
		public class DemoParticleSystemList
		{
			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DemoParticleSystem[] items;

			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x85DCF4", Offset = "0x85DCF4", VA = "0x85DCF4")]
			public DemoParticleSystemList()
			{
			}
		}

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoParticleSystemList demoParticles;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnOffset;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float multiply;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool clearOnChange;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text titleText;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform sceneCamera;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text instructionText;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button previousButton;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button nextButton;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EventSystem eventSystem;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystemMultiplier m_ParticleMultiplier;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Transform> m_CurrentParticleList;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_Instance;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_SelectedIndex;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_CamOffsetVelocity;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_LastPos;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DemoParticleSystem s_Selected;

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x85C8E8", Offset = "0x85C8E8", VA = "0x85C8E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x85CE64", Offset = "0x85CE64", VA = "0x85CE64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x85CF78", Offset = "0x85CF78", VA = "0x85CF78")]
		private void Previous()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x85D07C", Offset = "0x85D07C", VA = "0x85D07C")]
		public void Next()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x85D17C", Offset = "0x85D17C", VA = "0x85D17C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x85DA98", Offset = "0x85DA98", VA = "0x85DA98")]
		private bool CheckForGuiCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x85CA30", Offset = "0x85CA30", VA = "0x85CA30")]
		private void Select(int i)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x85DC34", Offset = "0x85DC34", VA = "0x85DC34")]
		public ParticleSceneControls()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class PlaceTargetWithMouse : MonoBehaviour
	{
		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float surfaceOffset;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject setTargetOn;

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x85DCFC", Offset = "0x85DCFC", VA = "0x85DCFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x85DF30", Offset = "0x85DF30", VA = "0x85DF30")]
		public PlaceTargetWithMouse()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class SlowMoButton : MonoBehaviour
	{
		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite FullSpeedTex;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite SlowSpeedTex;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fullSpeed;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slowSpeed;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button button;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_SlowMo;

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x85DF40", Offset = "0x85DF40", VA = "0x85DF40")]
		private void Start()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x85DF48", Offset = "0x85DF48", VA = "0x85DF48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x85DF54", Offset = "0x85DF54", VA = "0x85DF54")]
		public void ChangeSpeed()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x85E0A8", Offset = "0x85E0A8", VA = "0x85E0A8")]
		public SlowMoButton()
		{
		}
	}
}
namespace UnityStandardAssets.CinematicEffects
{
	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x667180", Offset = "0x667180")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x667180", Offset = "0x667180")]
	[ImageEffectAllowedInSceneView]
	[ExecuteInEditMode]
	public class ME_Bloom : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003AA")]
		public struct Settings
		{
			[Token(Token = "0x4001921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x671594", Offset = "0x671594")]
			public float threshold;

			[Token(Token = "0x4001922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6715E0", Offset = "0x6715E0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6715E0", Offset = "0x6715E0")]
			public float softKnee;

			[Token(Token = "0x4001923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x671644", Offset = "0x671644")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671644", Offset = "0x671644")]
			public float radius;

			[Token(Token = "0x4001924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6716A8", Offset = "0x6716A8")]
			public float intensity;

			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6716F4", Offset = "0x6716F4")]
			[SerializeField]
			public bool highQuality;

			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x671740", Offset = "0x671740")]
			[SerializeField]
			public bool antiFlicker;

			[Token(Token = "0x4001927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x67178C", Offset = "0x67178C")]
			public Texture dirtTexture;

			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "ME_MinAttribute_ME", RVA = "0x6717C4", Offset = "0x6717C4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6717C4", Offset = "0x6717C4")]
			public float dirtIntensity;

			[Token(Token = "0x1700030F")]
			public float thresholdGamma
			{
				[Token(Token = "0x60016F8")]
				[Address(RVA = "0x6FA344", Offset = "0x6FA344", VA = "0x6FA344")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60016F7")]
				[Address(RVA = "0x6FA33C", Offset = "0x6FA33C", VA = "0x6FA33C")]
				set
				{
				}
			}

			[Token(Token = "0x17000310")]
			public float thresholdLinear
			{
				[Token(Token = "0x60016FA")]
				[Address(RVA = "0x6FA354", Offset = "0x6FA354", VA = "0x6FA354")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60016F9")]
				[Address(RVA = "0x6FA34C", Offset = "0x6FA34C", VA = "0x6FA34C")]
				set
				{
				}
			}

			[Token(Token = "0x17000311")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60016FB")]
				[Address(RVA = "0x85BF3C", Offset = "0x85BF3C", VA = "0x85BF3C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_Material;

		[Token(Token = "0x4001916")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture[] m_blurBuffer1;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture[] m_blurBuffer2;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_Threshold;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_Curve;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_PrefilterOffs;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_SampleScale;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Intensity;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_DirtTex;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_DirtIntensity;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_BaseTex;

		[Token(Token = "0x1700030D")]
		public Shader shader
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x85ACBC", Offset = "0x85ACBC", VA = "0x85ACBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		public Material material
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x85AD54", Offset = "0x85AD54", VA = "0x85AD54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x85AEBC", Offset = "0x85AEBC", VA = "0x85AEBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x85AFBC", Offset = "0x85AFBC", VA = "0x85AFBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x85B340", Offset = "0x85B340", VA = "0x85B340")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x85B3EC", Offset = "0x85B3EC", VA = "0x85B3EC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x85BEA8", Offset = "0x85BEA8", VA = "0x85BEA8")]
		public ME_Bloom()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public static class ME_ImageEffectHelper_ME
	{
		[Token(Token = "0x17000312")]
		public static bool supportsDX11
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0x85C060", Offset = "0x85C060", VA = "0x85C060")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x85B008", Offset = "0x85B008", VA = "0x85B008")]
		public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x85ADE4", Offset = "0x85ADE4", VA = "0x85ADE4")]
		public static Material CheckShaderAndCreateMaterial(Shader s)
		{
			return null;
		}
	}
	[Token(Token = "0x20003AC")]
	public sealed class ME_MinAttribute_ME : PropertyAttribute
	{
		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x85C090", Offset = "0x85C090", VA = "0x85C090")]
		public ME_MinAttribute_ME(float min)
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class ME_RenderTextureUtility_ME
	{
		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x85C0C4", Offset = "0x85C0C4", VA = "0x85C0C4")]
		public RenderTexture GetTemporaryRenderTexture(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, FilterMode filterMode = FilterMode.Bilinear)
		{
			return null;
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x85C1EC", Offset = "0x85C1EC", VA = "0x85C1EC")]
		public void ReleaseTemporaryRenderTexture(RenderTexture rt)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x85C380", Offset = "0x85C380", VA = "0x85C380")]
		public void ReleaseAllTemporaryRenderTextures()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x85C44C", Offset = "0x85C44C", VA = "0x85C44C")]
		public ME_RenderTextureUtility_ME()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x667228", Offset = "0x667228")]
	[ImageEffectAllowedInSceneView]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x667228", Offset = "0x667228")]
	public class Bloom_RFX4 : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003AF")]
		public struct Settings
		{
			[Token(Token = "0x4001939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x67185C", Offset = "0x67185C")]
			[SerializeField]
			public float threshold;

			[Token(Token = "0x400193A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6718A8", Offset = "0x6718A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6718A8", Offset = "0x6718A8")]
			[SerializeField]
			public float softKnee;

			[Token(Token = "0x400193B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x67190C", Offset = "0x67190C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x67190C", Offset = "0x67190C")]
			public float radius;

			[Token(Token = "0x400193C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x671970", Offset = "0x671970")]
			public float intensity;

			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6719BC", Offset = "0x6719BC")]
			public bool highQuality;

			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x671A08", Offset = "0x671A08")]
			[SerializeField]
			public bool antiFlicker;

			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x671A54", Offset = "0x671A54")]
			public Texture dirtTexture;

			[Token(Token = "0x4001940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute_RFX4", RVA = "0x671A8C", Offset = "0x671A8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x671A8C", Offset = "0x671A8C")]
			public float dirtIntensity;

			[Token(Token = "0x17000315")]
			public float thresholdGamma
			{
				[Token(Token = "0x600170C")]
				[Address(RVA = "0x6FA2D8", Offset = "0x6FA2D8", VA = "0x6FA2D8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600170B")]
				[Address(RVA = "0x6FA2D0", Offset = "0x6FA2D0", VA = "0x6FA2D0")]
				set
				{
				}
			}

			[Token(Token = "0x17000316")]
			public float thresholdLinear
			{
				[Token(Token = "0x600170E")]
				[Address(RVA = "0x6FA2E8", Offset = "0x6FA2E8", VA = "0x6FA2E8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600170D")]
				[Address(RVA = "0x6FA2E0", Offset = "0x6FA2E0", VA = "0x6FA2E0")]
				set
				{
				}
			}

			[Token(Token = "0x17000317")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600170F")]
				[Address(RVA = "0x85AB68", Offset = "0x85AB68", VA = "0x85AB68")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private Shader m_Shader;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_Material;

		[Token(Token = "0x400192E")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture[] m_blurBuffer1;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture[] m_blurBuffer2;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_Threshold;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_Curve;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_PrefilterOffs;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_SampleScale;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Intensity;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_DirtTex;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_DirtIntensity;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_BaseTex;

		[Token(Token = "0x17000313")]
		public Shader shader
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0x8598E8", Offset = "0x8598E8", VA = "0x8598E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000314")]
		public Material material
		{
			[Token(Token = "0x6001705")]
			[Address(RVA = "0x859980", Offset = "0x859980", VA = "0x859980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x859AE8", Offset = "0x859AE8", VA = "0x859AE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x859BE8", Offset = "0x859BE8", VA = "0x859BE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x859F6C", Offset = "0x859F6C", VA = "0x859F6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x85A018", Offset = "0x85A018", VA = "0x85A018")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x85AAD4", Offset = "0x85AAD4", VA = "0x85AAD4")]
		public Bloom_RFX4()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public static class ImageEffectHelper_RFX4
	{
		[Token(Token = "0x17000318")]
		public static bool supportsDX11
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0x85AC8C", Offset = "0x85AC8C", VA = "0x85AC8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x859C34", Offset = "0x859C34", VA = "0x859C34")]
		public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x859A10", Offset = "0x859A10", VA = "0x859A10")]
		public static Material CheckShaderAndCreateMaterial(Shader s)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B1")]
	public sealed class MinAttribute_RFX4 : PropertyAttribute
	{
		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x85C4BC", Offset = "0x85C4BC", VA = "0x85C4BC")]
		public MinAttribute_RFX4(float min)
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class RenderTextureUtility_RFX4
	{
		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x85C4F0", Offset = "0x85C4F0", VA = "0x85C4F0")]
		public RenderTexture GetTemporaryRenderTexture(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, FilterMode filterMode = FilterMode.Bilinear)
		{
			return null;
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x85C618", Offset = "0x85C618", VA = "0x85C618")]
		public void ReleaseTemporaryRenderTexture(RenderTexture rt)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x85C7AC", Offset = "0x85C7AC", VA = "0x85C7AC")]
		public void ReleaseAllTemporaryRenderTextures()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x85C878", Offset = "0x85C878", VA = "0x85C878")]
		public RenderTextureUtility_RFX4()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo
{
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6672D0", Offset = "0x6672D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6672D0", Offset = "0x6672D0")]
	public class ApplyToMaterial : MonoBehaviour
	{
		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 _offset;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 _scale;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material _material;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _texturePropertyName;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MediaPlayer _media;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D _defaultTexture;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture _originalTexture;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 _originalScale;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 _originalOffset;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x4001950")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propChromaTex;

		[Token(Token = "0x4001952")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4001954")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xD8AC00", Offset = "0xD8AC00", VA = "0xD8AC00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xD8AD84", Offset = "0xD8AD84", VA = "0xD8AD84")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xD8B200", Offset = "0xD8B200", VA = "0xD8B200")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xD8BEBC", Offset = "0xD8BEBC", VA = "0xD8BEBC")]
		private void Start()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xD8C03C", Offset = "0xD8C03C", VA = "0xD8C03C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xD8C060", Offset = "0xD8C060", VA = "0xD8C060")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xD8BEE0", Offset = "0xD8BEE0", VA = "0xD8BEE0")]
		private void SaveProperties()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xD8C064", Offset = "0xD8C064", VA = "0xD8C064")]
		private void RestoreProperties()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xD8C210", Offset = "0xD8C210", VA = "0xD8C210")]
		public ApplyToMaterial()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x667334", Offset = "0x667334")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x667334", Offset = "0x667334")]
	public class ApplyToMesh : MonoBehaviour
	{
		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x671ADC", Offset = "0x671ADC")]
		[SerializeField]
		private MediaPlayer _media;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x671B28", Offset = "0x671B28")]
		private Texture2D _defaultTexture;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x671B74", Offset = "0x671B74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x671B74", Offset = "0x671B74")]
		[SerializeField]
		private Renderer _mesh;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _texturePropertyName;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _offset;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 _scale;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isDirty;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture _lastTextureApplied;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _propTexture;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x4001963")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propChromaTex;

		[Token(Token = "0x4001965")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4001967")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x17000319")]
		public MediaPlayer Player
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0xD8C2A8", Offset = "0xD8C2A8", VA = "0xD8C2A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001722")]
			[Address(RVA = "0xD8C2B0", Offset = "0xD8C2B0", VA = "0xD8C2B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public Texture2D DefaultTexture
		{
			[Token(Token = "0x6001723")]
			[Address(RVA = "0xD8C480", Offset = "0xD8C480", VA = "0xD8C480")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001724")]
			[Address(RVA = "0xD8C488", Offset = "0xD8C488", VA = "0xD8C488")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public Renderer MeshRenderer
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0xD8C518", Offset = "0xD8C518", VA = "0xD8C518")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001726")]
			[Address(RVA = "0xD8C520", Offset = "0xD8C520", VA = "0xD8C520")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public string TexturePropertyName
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xD8C5B0", Offset = "0xD8C5B0", VA = "0xD8C5B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xD8C5B8", Offset = "0xD8C5B8", VA = "0xD8C5B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public Vector2 Offset
		{
			[Token(Token = "0x6001729")]
			[Address(RVA = "0xD8C604", Offset = "0xD8C604", VA = "0xD8C604")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600172A")]
			[Address(RVA = "0xD8C60C", Offset = "0xD8C60C", VA = "0xD8C60C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public Vector2 Scale
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0xD8C6B0", Offset = "0xD8C6B0", VA = "0xD8C6B0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600172C")]
			[Address(RVA = "0xD8C6B8", Offset = "0xD8C6B8", VA = "0xD8C6B8")]
			set
			{
			}
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xD8C75C", Offset = "0xD8C75C", VA = "0xD8C75C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xD8CAC8", Offset = "0xD8CAC8", VA = "0xD8CAC8")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xD8D0A8", Offset = "0xD8D0A8", VA = "0xD8D0A8")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xD8C2B4", Offset = "0xD8C2B4", VA = "0xD8C2B4")]
		private void ChangeMediaPlayer(MediaPlayer player)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xD8CAD4", Offset = "0xD8CAD4", VA = "0xD8CAD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xD8D190", Offset = "0xD8D190", VA = "0xD8D190")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xD8D898", Offset = "0xD8D898", VA = "0xD8D898")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xD8D9F0", Offset = "0xD8D9F0", VA = "0xD8D9F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xD8DA00", Offset = "0xD8DA00", VA = "0xD8DA00")]
		public ApplyToMesh()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x667398", Offset = "0x667398")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x667398", Offset = "0x667398")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x667398", Offset = "0x667398")]
	public class AudioOutput : MonoBehaviour
	{
		[Token(Token = "0x20003B6")]
		public enum AudioOutputMode
		{
			[Token(Token = "0x400196E")]
			Single,
			[Token(Token = "0x400196F")]
			Multiple
		}

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioOutputMode _audioOutputMode;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audioSource;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int _channelMask;

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xD8DA90", Offset = "0xD8DA90", VA = "0xD8DA90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xD8DAE8", Offset = "0xD8DAE8", VA = "0xD8DAE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xD8DC98", Offset = "0xD8DC98", VA = "0xD8DC98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xD8DCA0", Offset = "0xD8DCA0", VA = "0xD8DCA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xD8DAF0", Offset = "0xD8DAF0", VA = "0xD8DAF0")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xD8E0BC", Offset = "0xD8E0BC", VA = "0xD8E0BC")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xD8DDE8", Offset = "0xD8DDE8", VA = "0xD8DDE8")]
		private static void ApplyAudioSettings(MediaPlayer player, AudioSource audioSource)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xD8E138", Offset = "0xD8E138", VA = "0xD8E138")]
		public AudioOutput()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x667448", Offset = "0x667448")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x667448", Offset = "0x667448")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x667448", Offset = "0x667448")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x667448", Offset = "0x667448")]
	public class CubemapCube : MonoBehaviour
	{
		[Token(Token = "0x20003B8")]
		public enum Layout
		{
			[Token(Token = "0x4001981")]
			FacebookTransform32,
			[Token(Token = "0x4001982")]
			Facebook360Capture
		}

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected MeshRenderer _renderer;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float expansion_coeff;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Layout _layout;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture _texture;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _verticalFlip;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _textureWidth;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _textureHeight;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propApplyGamma;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x400197C")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propChromaTex;

		[Token(Token = "0x400197E")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x1700031F")]
		public MediaPlayer Player
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0xD8F7C8", Offset = "0xD8F7C8", VA = "0xD8F7C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xD8F7C0", Offset = "0xD8F7C0", VA = "0xD8F7C0")]
			set
			{
			}
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xD8F7D0", Offset = "0xD8F7D0", VA = "0xD8F7D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xD8F8D0", Offset = "0xD8F8D0", VA = "0xD8F8D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xD90EFC", Offset = "0xD90EFC", VA = "0xD90EFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xD91060", Offset = "0xD91060", VA = "0xD91060")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xD8FA6C", Offset = "0xD8FA6C", VA = "0xD8FA6C")]
		private void BuildMesh()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xD919E0", Offset = "0xD919E0", VA = "0xD919E0")]
		private void UpdateMeshUV(int textureWidth, int textureHeight, bool flipY)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xD9277C", Offset = "0xD9277C", VA = "0xD9277C")]
		public CubemapCube()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x667520", Offset = "0x667520")]
	public class DebugOverlay : MonoBehaviour
	{
		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _guiDepth;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _displaySize;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _debugOverlayCount;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool _displayControls;

		[Token(Token = "0x4001988")]
		private const int s_GuiStartWidth = 10;

		[Token(Token = "0x4001989")]
		private const int s_GuiWidth = 180;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_GuiPositionX;

		[Token(Token = "0x17000320")]
		public bool DisplayControls
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0xD92790", Offset = "0xD92790", VA = "0xD92790")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001748")]
			[Address(RVA = "0xD92798", Offset = "0xD92798", VA = "0xD92798")]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0xD927A4", Offset = "0xD927A4", VA = "0xD927A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600174A")]
			[Address(RVA = "0xD927AC", Offset = "0xD927AC", VA = "0xD927AC")]
			set
			{
			}
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xD92834", Offset = "0xD92834", VA = "0xD92834")]
		private void SetGuiPositionFromVideoIndex(int index)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xD928D4", Offset = "0xD928D4", VA = "0xD928D4")]
		private void Update()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xD928DC", Offset = "0xD928DC", VA = "0xD928DC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xD93DB0", Offset = "0xD93DB0", VA = "0xD93DB0")]
		public DebugOverlay()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x66755C", Offset = "0x66755C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x66755C", Offset = "0x66755C")]
	[ExecuteInEditMode]
	public class DisplayBackground : MonoBehaviour
	{
		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IMediaProducer _source;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D _texture;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material _material;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xD93DD8", Offset = "0xD93DD8", VA = "0xD93DD8")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xD93F94", Offset = "0xD93F94", VA = "0xD93F94")]
		public DisplayBackground()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6675D0", Offset = "0x6675D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6675D0", Offset = "0x6675D0")]
	public class DisplayIMGUI : MonoBehaviour
	{
		[Token(Token = "0x400198E")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x400198F")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _displayInEditor;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ScaleMode _scaleMode;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color _color;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _alphaBlend;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool _useDepth;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int _depth;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _fullScreen;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671CB4", Offset = "0x671CB4")]
		public float _x;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671CCC", Offset = "0x671CCC")]
		public float _y;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671CE4", Offset = "0x671CE4")]
		public float _width;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671CFC", Offset = "0x671CFC")]
		public float _height;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propAlphaPack;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propVertScale;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propChromaTex;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _material;

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xD93F9C", Offset = "0xD93F9C", VA = "0xD93F9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xD94090", Offset = "0xD94090", VA = "0xD94090")]
		private void Start()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xD941CC", Offset = "0xD941CC", VA = "0xD941CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xD94278", Offset = "0xD94278", VA = "0xD94278")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xD94518", Offset = "0xD94518", VA = "0xD94518")]
		private void Update()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xD94864", Offset = "0xD94864", VA = "0xD94864")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xD952C8", Offset = "0xD952C8", VA = "0xD952C8")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xD9574C", Offset = "0xD9574C", VA = "0xD9574C")]
		public DisplayIMGUI()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x667644", Offset = "0x667644")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x667644", Offset = "0x667644")]
	[ExecuteInEditMode]
	public class DisplayUGUI : MaskableGraphic
	{
		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		public Rect m_UVRect;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		public bool _setNativeSize;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		public ScaleMode _scaleMode;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		public bool _noDefaultDisplay;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[SerializeField]
		public bool _displayInEditor;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public Texture _defaultTexture;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int _lastWidth;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int _lastHeight;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _flipY;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Texture _lastTexture;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader _shaderStereoPacking;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Shader _shaderAndroidOES;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propAlphaPack;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propVertScale;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int _propStereo;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int _propApplyGamma;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x40019B6")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static int _propChromaTex;

		[Token(Token = "0x40019B8")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool _userMaterial;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material _material;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<UIVertex> _vertices;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<int> QuadIndices;

		[Token(Token = "0x17000322")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6001762")]
			[Address(RVA = "0xD962A4", Offset = "0xD962A4", VA = "0xD962A4", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x6001766")]
			[Address(RVA = "0xD97280", Offset = "0xD97280", VA = "0xD97280")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001767")]
			[Address(RVA = "0xD97288", Offset = "0xD97288", VA = "0xD97288")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public Rect uvRect
		{
			[Token(Token = "0x6001768")]
			[Address(RVA = "0xD97330", Offset = "0xD97330", VA = "0xD97330")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6001769")]
			[Address(RVA = "0xD9733C", Offset = "0xD9733C", VA = "0xD9733C")]
			set
			{
			}
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xD9579C", Offset = "0xD9579C", VA = "0xD9579C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xD95934", Offset = "0xD95934", VA = "0xD95934")]
		private static bool HasMask(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xD95AD0", Offset = "0xD95AD0", VA = "0xD95AD0")]
		private static Shader EnsureShader(Shader shader, string name)
		{
			return null;
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xD95BE0", Offset = "0xD95BE0", VA = "0xD95BE0")]
		private static Shader EnsureAlphaPackingShader()
		{
			return null;
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xD95C6C", Offset = "0xD95C6C", VA = "0xD95C6C")]
		private static Shader EnsureStereoPackingShader()
		{
			return null;
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xD95CFC", Offset = "0xD95CFC", VA = "0xD95CFC")]
		private Shader EnsureAndroidOESShader()
		{
			return null;
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xD95D88", Offset = "0xD95D88", VA = "0xD95D88", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xD95E70", Offset = "0xD95E70", VA = "0xD95E70", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xD95F3C", Offset = "0xD95F3C", VA = "0xD95F3C")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xD964A8", Offset = "0xD964A8", VA = "0xD964A8")]
		public bool HasValidTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xD96628", Offset = "0xD96628", VA = "0xD96628")]
		private void UpdateInternalMaterial()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xD96820", Offset = "0xD96820", VA = "0xD96820")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xD973CC", Offset = "0xD973CC", VA = "0xD973CC", Slot = "45")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x677CA8", Offset = "0x677CA8")]
		public override void SetNativeSize()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xD97688", Offset = "0xD97688", VA = "0xD97688", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xD98004", Offset = "0xD98004", VA = "0xD98004", Slot = "42")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x677CE0", Offset = "0x677CE0")]
		protected override void OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xD97744", Offset = "0xD97744", VA = "0xD97744")]
		private void _OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xD98008", Offset = "0xD98008", VA = "0xD98008")]
		private Vector4 GetDrawingDimensions(ScaleMode scaleMode, ref Rect uvRect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xD98C98", Offset = "0xD98C98", VA = "0xD98C98")]
		public DisplayUGUI()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6676B8", Offset = "0x6676B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6676B8", Offset = "0x6676B8")]
	public class MediaPlayer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003BE")]
		public class Setup
		{
			[Token(Token = "0x4001A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool persistent;

			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xDA3B28", Offset = "0xDA3B28", VA = "0xDA3B28")]
			public Setup()
			{
			}
		}

		[Token(Token = "0x20003BF")]
		public enum FileLocation
		{
			[Token(Token = "0x4001A09")]
			AbsolutePathOrURL,
			[Token(Token = "0x4001A0A")]
			RelativeToProjectFolder,
			[Token(Token = "0x4001A0B")]
			RelativeToStreamingAssetsFolder,
			[Token(Token = "0x4001A0C")]
			RelativeToDataFolder,
			[Token(Token = "0x4001A0D")]
			RelativeToPeristentDataFolder
		}

		[Serializable]
		[Token(Token = "0x20003C0")]
		public class PlatformOptions
		{
			[Token(Token = "0x4001A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool overridePath;

			[Token(Token = "0x4001A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FileLocation pathLocation;

			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x60017D4")]
			[Address(RVA = "0xDA386C", Offset = "0xDA386C", VA = "0xDA386C", Slot = "4")]
			public virtual bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xDA3AD0", Offset = "0xDA3AD0", VA = "0xDA3AD0", Slot = "5")]
			public virtual string GetKeyServerURL()
			{
				return null;
			}

			[Token(Token = "0x60017D6")]
			[Address(RVA = "0xDA3AD8", Offset = "0xDA3AD8", VA = "0xDA3AD8", Slot = "6")]
			public virtual string GetKeyServerAuthToken()
			{
				return null;
			}

			[Token(Token = "0x60017D7")]
			[Address(RVA = "0xDA3AE0", Offset = "0xDA3AE0", VA = "0xDA3AE0", Slot = "7")]
			public virtual string GetDecryptionKey()
			{
				return null;
			}

			[Token(Token = "0x60017D8")]
			[Address(RVA = "0xDA3874", Offset = "0xDA3874", VA = "0xDA3874")]
			public PlatformOptions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C1")]
		public class OptionsWindows : PlatformOptions
		{
			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Windows.VideoApi videoApi;

			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool useUnityAudio;

			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool forceAudioResample;

			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			public bool useTextureMips;

			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool hintAlphaChannel;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool useLowLatency;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string forceAudioOutputDeviceName;

			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<string> preferredFilters;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool enableAudio360;

			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xDA397C", Offset = "0xDA397C", VA = "0xDA397C", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60017DA")]
			[Address(RVA = "0xDA2198", Offset = "0xDA2198", VA = "0xDA2198")]
			public OptionsWindows()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C2")]
		public class OptionsApple : PlatformOptions
		{
			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Multiline]
			public string httpHeaderJson;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string keyServerURLOverride;

			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string keyServerAuthToken;

			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[Multiline]
			public string base64EncodedKeyBlob;

			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xDA3884", Offset = "0xDA3884", VA = "0xDA3884", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60017DC")]
			[Address(RVA = "0xDA38F4", Offset = "0xDA38F4", VA = "0xDA38F4", Slot = "5")]
			public override string GetKeyServerURL()
			{
				return null;
			}

			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xDA38FC", Offset = "0xDA38FC", VA = "0xDA38FC", Slot = "6")]
			public override string GetKeyServerAuthToken()
			{
				return null;
			}

			[Token(Token = "0x60017DE")]
			[Address(RVA = "0xDA3904", Offset = "0xDA3904", VA = "0xDA3904", Slot = "7")]
			public override string GetDecryptionKey()
			{
				return null;
			}

			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xDA390C", Offset = "0xDA390C", VA = "0xDA390C")]
			public OptionsApple()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C3")]
		public class OptionsMacOSX : OptionsApple
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xDA2234", Offset = "0xDA2234", VA = "0xDA2234")]
			public OptionsMacOSX()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C4")]
		public class OptionsIOS : OptionsApple
		{
			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool useYpCbCr420Textures;

			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xDA391C", Offset = "0xDA391C", VA = "0xDA391C", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E2")]
			[Address(RVA = "0xDA2244", Offset = "0xDA2244", VA = "0xDA2244")]
			public OptionsIOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C5")]
		public class OptionsTVOS : OptionsIOS
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xDA225C", Offset = "0xDA225C", VA = "0xDA225C")]
			public OptionsTVOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C6")]
		public class OptionsAndroid : PlatformOptions
		{
			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Android.VideoApi videoApi;

			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useFastOesPath;

			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool showPosterFrame;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool enableAudio360;

			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool preferSoftwareDecoder;

			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Multiline]
			public string httpHeaderJson;

			[Token(Token = "0x4001A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x672094", Offset = "0x672094")]
			public int fileOffset;

			[Token(Token = "0x60017E4")]
			[Address(RVA = "0xDA37F0", Offset = "0xDA37F0", VA = "0xDA37F0", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xDA2274", Offset = "0xDA2274", VA = "0xDA2274")]
			public OptionsAndroid()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C7")]
		public class OptionsWindowsPhone : PlatformOptions
		{
			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x60017E6")]
			[Address(RVA = "0xDA3A50", Offset = "0xDA3A50", VA = "0xDA3A50", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xDA2288", Offset = "0xDA2288", VA = "0xDA2288")]
			public OptionsWindowsPhone()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C8")]
		public class OptionsWindowsUWP : PlatformOptions
		{
			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4001A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x4001A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4001A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4001A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xDA3A90", Offset = "0xDA3A90", VA = "0xDA3A90", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0xDA22A4", Offset = "0xDA22A4", VA = "0xDA22A4")]
			public OptionsWindowsUWP()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C9")]
		public class OptionsWebGL : PlatformOptions
		{
			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WebGL.ExternalLibrary externalLibrary;

			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useTextureMips;

			[Token(Token = "0x60017EA")]
			[Address(RVA = "0xDA3954", Offset = "0xDA3954", VA = "0xDA3954", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xDA22C0", Offset = "0xDA22C0", VA = "0xDA22C0")]
			public OptionsWebGL()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003CA")]
		public class OptionsPS4 : PlatformOptions
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0xDA22D0", Offset = "0xDA22D0", VA = "0xDA22D0")]
			public OptionsPS4()
			{
			}
		}

		[Token(Token = "0x20003CB")]
		public delegate void ProcessExtractedFrame(Texture2D extractedFrame);

		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66771C", Offset = "0x66771C")]
		private sealed class <LoadSubtitlesCoroutine>d__166 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4001A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FileLocation fileLocation;

			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string filePath;

			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000343")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017F4")]
				[Address(RVA = "0xDA3778", Offset = "0xDA3778", VA = "0xDA3778", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F6")]
				[Address(RVA = "0xDA37E8", Offset = "0xDA37E8", VA = "0xDA37E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xD9CA80", Offset = "0xD9CA80", VA = "0xD9CA80")]
			[DebuggerHidden]
			public <LoadSubtitlesCoroutine>d__166(int <>1__state)
			{
			}

			[Token(Token = "0x60017F2")]
			[Address(RVA = "0xDA3484", Offset = "0xDA3484", VA = "0xDA3484", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017F3")]
			[Address(RVA = "0xDA3488", Offset = "0xDA3488", VA = "0xDA3488", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F5")]
			[Address(RVA = "0xDA3780", Offset = "0xDA3780", VA = "0xDA3780", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66772C", Offset = "0x66772C")]
		private sealed class <FinalRenderCapture>d__188 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4001A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldInstruction <wait>5__2;

			[Token(Token = "0x17000345")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017FA")]
				[Address(RVA = "0xDA340C", Offset = "0xDA340C", VA = "0xDA340C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000346")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017FC")]
				[Address(RVA = "0xDA347C", Offset = "0xDA347C", VA = "0xDA347C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xDA00B8", Offset = "0xDA00B8", VA = "0xDA00B8")]
			[DebuggerHidden]
			public <FinalRenderCapture>d__188(int <>1__state)
			{
			}

			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xDA32C0", Offset = "0xDA32C0", VA = "0xDA32C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xDA32C4", Offset = "0xDA32C4", VA = "0xDA32C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017FB")]
			[Address(RVA = "0xDA3414", Offset = "0xDA3414", VA = "0xDA3414", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x66773C", Offset = "0x66773C")]
		private sealed class <ExtractFrameCoroutine>d__209 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D target;

			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4001A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeSeconds;

			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int timeThresholdMs;

			[Token(Token = "0x4001A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool accurateSeek;

			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProcessExtractedFrame callback;

			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Texture2D <result>5__2;

			[Token(Token = "0x4001A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <currFc>5__3;

			[Token(Token = "0x4001A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <iterations>5__4;

			[Token(Token = "0x4001A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <maxIterations>5__5;

			[Token(Token = "0x17000347")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001800")]
				[Address(RVA = "0xDA3248", Offset = "0xDA3248", VA = "0xDA3248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000348")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001802")]
				[Address(RVA = "0xDA32B8", Offset = "0xDA32B8", VA = "0xDA32B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017FD")]
			[Address(RVA = "0xDA1938", Offset = "0xDA1938", VA = "0xDA1938")]
			[DebuggerHidden]
			public <ExtractFrameCoroutine>d__209(int <>1__state)
			{
			}

			[Token(Token = "0x60017FE")]
			[Address(RVA = "0xDA22E4", Offset = "0xDA22E4", VA = "0xDA22E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xDA22E8", Offset = "0xDA22E8", VA = "0xDA22E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001801")]
			[Address(RVA = "0xDA3250", Offset = "0xDA3250", VA = "0xDA3250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FileLocation m_VideoLocation;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_VideoPath;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_AutoOpen;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_AutoStart;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool m_Loop;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671D84", Offset = "0x671D84")]
		public float m_Volume;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671D9C", Offset = "0x671D9C")]
		private float m_Balance;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_Muted;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671DDC", Offset = "0x671DDC")]
		public float m_PlaybackRate;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_Resample;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Resampler.ResampleMode m_ResampleMode;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671E1C", Offset = "0x671E1C")]
		public int m_ResampleBufferSize;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Resampler m_Resampler;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_Persistent;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private VideoMapping m_videoMapping;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StereoPacking m_StereoPacking;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public AlphaPacking m_AlphaPacking;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_DisplayDebugStereoColorTint;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FilterMode m_FilterMode;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextureWrapMode m_WrapMode;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671E54", Offset = "0x671E54")]
		public int m_AnisoLevel;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_LoadSubtitles;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private FileLocation m_SubtitleLocation;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FileLocation m_queueSubtitleLocation;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string m_SubtitlePath;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string m_queueSubtitlePath;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine m_loadSubtitlesRoutine;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform m_AudioHeadTransform;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool m_AudioFocusEnabled;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform m_AudioFocusTransform;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671ECC", Offset = "0x671ECC")]
		[SerializeField]
		private float m_AudioFocusWidthDegrees;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x671F14", Offset = "0x671F14")]
		private float m_AudioFocusOffLevelDB;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MediaPlayerEvent m_events;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private int m_eventMask;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private FileFormat m_forceFileFormat;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _pauseMediaOnAppPause;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[SerializeField]
		private bool _playMediaOnAppUnpause;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IMediaControl m_Control;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IMediaProducer m_Texture;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IMediaInfo m_Info;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IMediaPlayer m_Player;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IMediaSubtitles m_Subtitles;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private IDisposable m_Dispose;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_VideoOpened;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool m_AutoStartTriggered;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		private bool m_WasPlayingOnPause;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine _renderingCoroutine;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_GlobalStartup;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_EventFired_ReadyToPlay;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool m_EventFired_Started;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		private bool m_EventFired_FirstFrameReady;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		private bool m_EventFired_FinishedPlaying;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool m_EventFired_MetaDataReady;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		private bool m_EventState_PlaybackStalled;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		private bool m_EventState_PlaybackBuffering;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x117")]
		private bool m_EventState_PlaybackSeeking;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_EventState_PreviousWidth;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_EventState_PreviousHeight;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int m_previousSubtitleIndex;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera m_DummyCamera;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool m_FinishedFrameOpenCheck;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private uint m_sourceSampleRate;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private uint m_sourceChannels;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private bool m_manuallySetAudioSourceProperties;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private OptionsWindows _optionsWindows;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private OptionsMacOSX _optionsMacOSX;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private OptionsIOS _optionsIOS;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private OptionsTVOS _optionsTVOS;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private OptionsAndroid _optionsAndroid;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private OptionsWindowsPhone _optionsWindowsPhone;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private OptionsWindowsUWP _optionsWindowsUWP;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private OptionsWebGL _optionsWebGL;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private OptionsPS4 _optionsPS4;

		[Token(Token = "0x17000325")]
		public Resampler FrameResampler
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0xD8B1F0", Offset = "0xD8B1F0", VA = "0xD8B1F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		public bool Persistent
		{
			[Token(Token = "0x6001772")]
			[Address(RVA = "0xD9B4F8", Offset = "0xD9B4F8", VA = "0xD9B4F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001773")]
			[Address(RVA = "0xD9B500", Offset = "0xD9B500", VA = "0xD9B500")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public VideoMapping VideoLayoutMapping
		{
			[Token(Token = "0x6001774")]
			[Address(RVA = "0xD8BA2C", Offset = "0xD8BA2C", VA = "0xD8BA2C")]
			get
			{
				return default(VideoMapping);
			}
			[Token(Token = "0x6001775")]
			[Address(RVA = "0xD9B50C", Offset = "0xD9B50C", VA = "0xD9B50C")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public virtual IMediaInfo Info
		{
			[Token(Token = "0x6001776")]
			[Address(RVA = "0xD9B514", Offset = "0xD9B514", VA = "0xD9B514", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		public virtual IMediaControl Control
		{
			[Token(Token = "0x6001777")]
			[Address(RVA = "0xD9B51C", Offset = "0xD9B51C", VA = "0xD9B51C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		public virtual IMediaPlayer Player
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0xD9B524", Offset = "0xD9B524", VA = "0xD9B524", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		public virtual IMediaProducer TextureProducer
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0xD9B52C", Offset = "0xD9B52C", VA = "0xD9B52C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		public virtual IMediaSubtitles Subtitles
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0xD9B534", Offset = "0xD9B534", VA = "0xD9B534", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		public MediaPlayerEvent Events
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0xD8C99C", Offset = "0xD8C99C", VA = "0xD8C99C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		public bool VideoOpened
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0xD9B5B8", Offset = "0xD9B5B8", VA = "0xD9B5B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032F")]
		public bool PauseMediaOnAppPause
		{
			[Token(Token = "0x600177D")]
			[Address(RVA = "0xD9B5C0", Offset = "0xD9B5C0", VA = "0xD9B5C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600177E")]
			[Address(RVA = "0xD9B5C8", Offset = "0xD9B5C8", VA = "0xD9B5C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public bool PlayMediaOnAppUnpause
		{
			[Token(Token = "0x600177F")]
			[Address(RVA = "0xD9B5D4", Offset = "0xD9B5D4", VA = "0xD9B5D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001780")]
			[Address(RVA = "0xD9B5DC", Offset = "0xD9B5DC", VA = "0xD9B5DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public FileFormat ForceFileFormat
		{
			[Token(Token = "0x6001781")]
			[Address(RVA = "0xD9B5E8", Offset = "0xD9B5E8", VA = "0xD9B5E8")]
			get
			{
				return default(FileFormat);
			}
			[Token(Token = "0x6001782")]
			[Address(RVA = "0xD9B5F0", Offset = "0xD9B5F0", VA = "0xD9B5F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000332")]
		public Transform AudioHeadTransform
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0xD9B600", Offset = "0xD9B600", VA = "0xD9B600")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001783")]
			[Address(RVA = "0xD9B5F8", Offset = "0xD9B5F8", VA = "0xD9B5F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public bool AudioFocusEnabled
		{
			[Token(Token = "0x6001785")]
			[Address(RVA = "0xD9B608", Offset = "0xD9B608", VA = "0xD9B608")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001786")]
			[Address(RVA = "0xD9B610", Offset = "0xD9B610", VA = "0xD9B610")]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public float AudioFocusOffLevelDB
		{
			[Token(Token = "0x6001787")]
			[Address(RVA = "0xD9B61C", Offset = "0xD9B61C", VA = "0xD9B61C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001788")]
			[Address(RVA = "0xD9B624", Offset = "0xD9B624", VA = "0xD9B624")]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public float AudioFocusWidthDegrees
		{
			[Token(Token = "0x6001789")]
			[Address(RVA = "0xD9B62C", Offset = "0xD9B62C", VA = "0xD9B62C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600178A")]
			[Address(RVA = "0xD9B634", Offset = "0xD9B634", VA = "0xD9B634")]
			set
			{
			}
		}

		[Token(Token = "0x17000336")]
		public Transform AudioFocusTransform
		{
			[Token(Token = "0x600178B")]
			[Address(RVA = "0xD9B63C", Offset = "0xD9B63C", VA = "0xD9B63C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600178C")]
			[Address(RVA = "0xD9B644", Offset = "0xD9B644", VA = "0xD9B644")]
			set
			{
			}
		}

		[Token(Token = "0x17000337")]
		public OptionsWindows PlatformOptionsWindows
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0xD9B64C", Offset = "0xD9B64C", VA = "0xD9B64C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		public OptionsMacOSX PlatformOptionsMacOSX
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0xD9B654", Offset = "0xD9B654", VA = "0xD9B654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		public OptionsIOS PlatformOptionsIOS
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0xD9B65C", Offset = "0xD9B65C", VA = "0xD9B65C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public OptionsTVOS PlatformOptionsTVOS
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xD9B664", Offset = "0xD9B664", VA = "0xD9B664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		public OptionsAndroid PlatformOptionsAndroid
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0xD9629C", Offset = "0xD9629C", VA = "0xD9629C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		public OptionsWindowsPhone PlatformOptionsWindowsPhone
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0xD9B66C", Offset = "0xD9B66C", VA = "0xD9B66C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		public OptionsWindowsUWP PlatformOptionsWindowsUWP
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0xD9B674", Offset = "0xD9B674", VA = "0xD9B674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		public OptionsWebGL PlatformOptionsWebGL
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0xD9B67C", Offset = "0xD9B67C", VA = "0xD9B67C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		public OptionsPS4 PlatformOptionsPS4
		{
			[Token(Token = "0x6001795")]
			[Address(RVA = "0xD9B684", Offset = "0xD9B684", VA = "0xD9B684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		public bool SubtitlesEnabled
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0xD9C8E0", Offset = "0xD9C8E0", VA = "0xD9C8E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000341")]
		public string SubtitlePath
		{
			[Token(Token = "0x600179F")]
			[Address(RVA = "0xD9C8E8", Offset = "0xD9C8E8", VA = "0xD9C8E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		public FileLocation SubtitleLocation
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0xD9C8F0", Offset = "0xD9C8F0", VA = "0xD9C8F0")]
			get
			{
				return default(FileLocation);
			}
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xD9B68C", Offset = "0xD9B68C", VA = "0xD9B68C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xD9B71C", Offset = "0xD9B71C", VA = "0xD9B71C")]
		protected void Initialise()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xD9BAB8", Offset = "0xD9BAB8", VA = "0xD9BAB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xD9C1D4", Offset = "0xD9C1D4", VA = "0xD9C1D4")]
		public bool OpenVideoFromFile(FileLocation location, string path, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xD9C218", Offset = "0xD9C218", VA = "0xD9C218")]
		public bool OpenVideoFromBuffer(byte[] buffer, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xD9C484", Offset = "0xD9C484", VA = "0xD9C484")]
		public bool StartOpenChunkedVideoFromBuffer(ulong length, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xD9C6E0", Offset = "0xD9C6E0", VA = "0xD9C6E0")]
		public bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xD9C7F8", Offset = "0xD9C7F8", VA = "0xD9C7F8")]
		public bool EndOpenChunkedVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xD9BDFC", Offset = "0xD9BDFC", VA = "0xD9BDFC")]
		public bool EnableSubtitles(FileLocation fileLocation, string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xD9C9B4", Offset = "0xD9C9B4", VA = "0xD9C9B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x677D18", Offset = "0x677D18")]
		private IEnumerator LoadSubtitlesCoroutine(string url, FileLocation fileLocation, string filePath)
		{
			return null;
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xD9CAAC", Offset = "0xD9CAAC", VA = "0xD9CAAC")]
		public void DisableSubtitles()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xD9C29C", Offset = "0xD9C29C", VA = "0xD9C29C")]
		private bool OpenVideoFromBufferInternal(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xD9C508", Offset = "0xD9C508", VA = "0xD9C508")]
		private bool StartOpenVideoFromBufferInternal(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xD9C6E4", Offset = "0xD9C6E4", VA = "0xD9C6E4")]
		private bool AddChunkToBufferInternal(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xD9C7FC", Offset = "0xD9C7FC", VA = "0xD9C7FC")]
		private bool EndOpenVideoFromBufferInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xD9BB3C", Offset = "0xD9BB3C", VA = "0xD9BB3C")]
		private bool OpenVideoFromFile()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xD9CD2C", Offset = "0xD9CD2C", VA = "0xD9CD2C")]
		private void SetPlaybackOptions()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xD9CBB8", Offset = "0xD9CBB8", VA = "0xD9CBB8")]
		public void CloseVideo()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xD9D468", Offset = "0xD9D468", VA = "0xD9D468")]
		public void Play()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xD9D5B4", Offset = "0xD9D5B4", VA = "0xD9D5B4")]
		public void Pause()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xD9D6EC", Offset = "0xD9D6EC", VA = "0xD9D6EC")]
		public void Stop()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xD9D7A8", Offset = "0xD9D7A8", VA = "0xD9D7A8")]
		public void Rewind(bool pause)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xD9D898", Offset = "0xD9D898", VA = "0xD9D898", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xD9E760", Offset = "0xD9E760", VA = "0xD9E760")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xD9E764", Offset = "0xD9E764", VA = "0xD9E764")]
		private void UpdateResampler()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xD9FB74", Offset = "0xD9FB74", VA = "0xD9FB74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xD9FC48", Offset = "0xD9FC48", VA = "0xD9FC48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xD9FD28", Offset = "0xD9FD28", VA = "0xD9FD28", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xD9FEB8", Offset = "0xD9FEB8", VA = "0xD9FEB8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xD9C194", Offset = "0xD9C194", VA = "0xD9C194")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xD9D434", Offset = "0xD9D434", VA = "0xD9D434")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xDA0044", Offset = "0xDA0044", VA = "0xDA0044")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x677D7C", Offset = "0x677D7C")]
		private IEnumerator FinalRenderCapture()
		{
			return null;
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xD9C8F8", Offset = "0xD9C8F8", VA = "0xD9C8F8")]
		public static Platform GetPlatform()
		{
			return default(Platform);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xD9CD24", Offset = "0xD9CD24", VA = "0xD9CD24")]
		public PlatformOptions GetCurrentPlatformOptions()
		{
			return null;
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xDA00E4", Offset = "0xDA00E4", VA = "0xDA00E4")]
		public static string GetPath(FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xDA0204", Offset = "0xDA0204", VA = "0xDA0204")]
		public static string GetFilePath(string path, FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xD9D2CC", Offset = "0xD9D2CC", VA = "0xD9D2CC")]
		private string GetPlatformVideoApiString()
		{
			return null;
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xD9D240", Offset = "0xD9D240", VA = "0xD9D240")]
		private long GetPlatformFileOffset()
		{
			return default(long);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xD9D26C", Offset = "0xD9D26C", VA = "0xD9D26C")]
		private string GetPlatformHttpHeaderJson()
		{
			return null;
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xD9C900", Offset = "0xD9C900", VA = "0xD9C900")]
		private string GetPlatformFilePath(Platform platform, ref string filePath, ref FileLocation fileLocation)
		{
			return null;
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xDA02F8", Offset = "0xDA02F8", VA = "0xDA02F8", Slot = "11")]
		public virtual BaseMediaPlayer CreatePlatformMediaPlayer()
		{
			return null;
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xDA0698", Offset = "0xDA0698", VA = "0xDA0698")]
		private bool ForceWaitForNewFrame(int lastFrameCount, float timeoutMs)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xD9DCB0", Offset = "0xD9DCB0", VA = "0xD9DCB0")]
		private void UpdateAudioFocus()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xD9DAEC", Offset = "0xD9DAEC", VA = "0xD9DAEC")]
		private void UpdateAudioHeadTransform()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xD9DF20", Offset = "0xD9DF20", VA = "0xD9DF20")]
		private void UpdateErrors()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xD9E098", Offset = "0xD9E098", VA = "0xD9E098")]
		private void UpdateEvents()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xD9D404", Offset = "0xD9D404", VA = "0xD9D404")]
		protected bool IsHandleEvent(MediaPlayerEvent.EventType eventType)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xDA0924", Offset = "0xDA0924", VA = "0xDA0924")]
		private bool FireEventIfPossible(MediaPlayerEvent.EventType eventType, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xDA09C0", Offset = "0xDA09C0", VA = "0xDA09C0")]
		private bool CanFireEvent(MediaPlayerEvent.EventType et, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xDA12D0", Offset = "0xDA12D0", VA = "0xDA12D0")]
		private void OnApplicationFocus(bool focusStatus)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xDA13C0", Offset = "0xDA13C0", VA = "0xDA13C0")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xDA154C", Offset = "0xDA154C", VA = "0xDA154C")]
		private static Camera GetDummyCamera()
		{
			return null;
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xDA182C", Offset = "0xDA182C", VA = "0xDA182C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x677DE0", Offset = "0x677DE0")]
		private IEnumerator ExtractFrameCoroutine(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xDA1964", Offset = "0xDA1964", VA = "0xDA1964")]
		public void ExtractFrameAsync(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xDA1994", Offset = "0xDA1994", VA = "0xDA1994")]
		public Texture2D ExtractFrame(Texture2D target, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xDA1B98", Offset = "0xDA1B98", VA = "0xDA1B98")]
		private Texture ExtractFrame(float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xDA1FA8", Offset = "0xDA1FA8", VA = "0xDA1FA8")]
		public MediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CF")]
	public class MediaPlaylist
	{
		[Serializable]
		[Token(Token = "0x20003D0")]
		public class MediaItem
		{
			[Token(Token = "0x4001A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public MediaPlayer.FileLocation fileLocation;

			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public string filePath;

			[Token(Token = "0x4001A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public bool loop;

			[Token(Token = "0x4001A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			public PlaylistMediaPlayer.StartMode startMode;

			[Token(Token = "0x4001A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public PlaylistMediaPlayer.ProgressMode progressMode;

			[Token(Token = "0x4001A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			public float progressTimeSeconds;

			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public bool autoPlay;

			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			public StereoPacking stereoPacking;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public AlphaPacking alphaPacking;

			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			public bool isOverrideTransition;

			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public PlaylistMediaPlayer.Transition overrideTransition;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			public float overrideTransitionDuration;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public PlaylistMediaPlayer.Easing overrideTransitionEasing;

			[Token(Token = "0x6001806")]
			[Address(RVA = "0xDA3C9C", Offset = "0xDA3C9C", VA = "0xDA3C9C")]
			public MediaItem()
			{
			}
		}

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<MediaItem> _items;

		[Token(Token = "0x17000349")]
		public List<MediaItem> Items
		{
			[Token(Token = "0x6001803")]
			[Address(RVA = "0xDA3B9C", Offset = "0xDA3B9C", VA = "0xDA3B9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xDA3BA4", Offset = "0xDA3BA4", VA = "0xDA3BA4")]
		public bool HasItemAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xDA3C28", Offset = "0xDA3C28", VA = "0xDA3C28")]
		public MediaPlaylist()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x66774C", Offset = "0x66774C")]
	public class PlaylistMediaPlayer : MediaPlayer, IMediaProducer
	{
		[Token(Token = "0x20003D2")]
		public enum Transition
		{
			[Token(Token = "0x4001A75")]
			None,
			[Token(Token = "0x4001A76")]
			Fade,
			[Token(Token = "0x4001A77")]
			Black,
			[Token(Token = "0x4001A78")]
			White,
			[Token(Token = "0x4001A79")]
			Transparent,
			[Token(Token = "0x4001A7A")]
			Horiz,
			[Token(Token = "0x4001A7B")]
			Vert,
			[Token(Token = "0x4001A7C")]
			Diag,
			[Token(Token = "0x4001A7D")]
			MirrorH,
			[Token(Token = "0x4001A7E")]
			MirrorV,
			[Token(Token = "0x4001A7F")]
			MirrorD,
			[Token(Token = "0x4001A80")]
			ScrollV,
			[Token(Token = "0x4001A81")]
			ScrollH,
			[Token(Token = "0x4001A82")]
			Circle,
			[Token(Token = "0x4001A83")]
			Diamond,
			[Token(Token = "0x4001A84")]
			Blinds,
			[Token(Token = "0x4001A85")]
			Arrows,
			[Token(Token = "0x4001A86")]
			SlideH,
			[Token(Token = "0x4001A87")]
			SlideV,
			[Token(Token = "0x4001A88")]
			Zoom,
			[Token(Token = "0x4001A89")]
			RectV,
			[Token(Token = "0x4001A8A")]
			Random
		}

		[Token(Token = "0x20003D3")]
		public enum PlaylistLoopMode
		{
			[Token(Token = "0x4001A8C")]
			None,
			[Token(Token = "0x4001A8D")]
			Loop
		}

		[Token(Token = "0x20003D4")]
		public enum StartMode
		{
			[Token(Token = "0x4001A8F")]
			Immediate,
			[Token(Token = "0x4001A90")]
			Manual
		}

		[Token(Token = "0x20003D5")]
		public enum ProgressMode
		{
			[Token(Token = "0x4001A92")]
			OnFinish,
			[Token(Token = "0x4001A93")]
			BeforeFinish,
			[Token(Token = "0x4001A94")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x20003D6")]
		public class Easing
		{
			[Token(Token = "0x20003D7")]
			public enum Preset
			{
				[Token(Token = "0x4001A97")]
				Step,
				[Token(Token = "0x4001A98")]
				Linear,
				[Token(Token = "0x4001A99")]
				InQuad,
				[Token(Token = "0x4001A9A")]
				OutQuad,
				[Token(Token = "0x4001A9B")]
				InOutQuad,
				[Token(Token = "0x4001A9C")]
				InCubic,
				[Token(Token = "0x4001A9D")]
				OutCubic,
				[Token(Token = "0x4001A9E")]
				InOutCubic,
				[Token(Token = "0x4001A9F")]
				InQuint,
				[Token(Token = "0x4001AA0")]
				OutQuint,
				[Token(Token = "0x4001AA1")]
				InOutQuint,
				[Token(Token = "0x4001AA2")]
				InQuart,
				[Token(Token = "0x4001AA3")]
				OutQuart,
				[Token(Token = "0x4001AA4")]
				InOutQuart,
				[Token(Token = "0x4001AA5")]
				InExpo,
				[Token(Token = "0x4001AA6")]
				OutExpo,
				[Token(Token = "0x4001AA7")]
				InOutExpo,
				[Token(Token = "0x4001AA8")]
				Random,
				[Token(Token = "0x4001AA9")]
				RandomNotStep
			}

			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Preset preset;

			[Token(Token = "0x600182B")]
			[Address(RVA = "0xDA4D48", Offset = "0xDA4D48", VA = "0xDA4D48")]
			public static Func<float, float> GetFunction(Preset preset)
			{
				return null;
			}

			[Token(Token = "0x600182C")]
			[Address(RVA = "0xDA6774", Offset = "0xDA6774", VA = "0xDA6774")]
			public static float PowerEaseIn(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x600182D")]
			[Address(RVA = "0xDA67E8", Offset = "0xDA67E8", VA = "0xDA67E8")]
			public static float PowerEaseOut(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x600182E")]
			[Address(RVA = "0xDA6870", Offset = "0xDA6870", VA = "0xDA6870")]
			public static float PowerEaseInOut(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x600182F")]
			[Address(RVA = "0xDA68B8", Offset = "0xDA68B8", VA = "0xDA68B8")]
			public static float Step(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001830")]
			[Address(RVA = "0xDA68D0", Offset = "0xDA68D0", VA = "0xDA68D0")]
			public static float Linear(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001831")]
			[Address(RVA = "0xDA68D4", Offset = "0xDA68D4", VA = "0xDA68D4")]
			public static float InQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001832")]
			[Address(RVA = "0xDA68DC", Offset = "0xDA68DC", VA = "0xDA68DC")]
			public static float OutQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0xDA68E4", Offset = "0xDA68E4", VA = "0xDA68E4")]
			public static float InOutQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001834")]
			[Address(RVA = "0xDA68EC", Offset = "0xDA68EC", VA = "0xDA68EC")]
			public static float InCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001835")]
			[Address(RVA = "0xDA68F4", Offset = "0xDA68F4", VA = "0xDA68F4")]
			public static float OutCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001836")]
			[Address(RVA = "0xDA68FC", Offset = "0xDA68FC", VA = "0xDA68FC")]
			public static float InOutCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001837")]
			[Address(RVA = "0xDA6904", Offset = "0xDA6904", VA = "0xDA6904")]
			public static float InQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001838")]
			[Address(RVA = "0xDA690C", Offset = "0xDA690C", VA = "0xDA690C")]
			public static float OutQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001839")]
			[Address(RVA = "0xDA6914", Offset = "0xDA6914", VA = "0xDA6914")]
			public static float InOutQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x600183A")]
			[Address(RVA = "0xDA691C", Offset = "0xDA691C", VA = "0xDA691C")]
			public static float InQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x600183B")]
			[Address(RVA = "0xDA6924", Offset = "0xDA6924", VA = "0xDA6924")]
			public static float OutQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x600183C")]
			[Address(RVA = "0xDA692C", Offset = "0xDA692C", VA = "0xDA692C")]
			public static float InOutQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x600183D")]
			[Address(RVA = "0xDA6934", Offset = "0xDA6934", VA = "0xDA6934")]
			public static float InExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x600183E")]
			[Address(RVA = "0xDA69C8", Offset = "0xDA69C8", VA = "0xDA69C8")]
			public static float OutExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x600183F")]
			[Address(RVA = "0xDA6A50", Offset = "0xDA6A50", VA = "0xDA6A50")]
			public static float InOutExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001840")]
			[Address(RVA = "0xDA6B34", Offset = "0xDA6B34", VA = "0xDA6B34")]
			public Easing()
			{
			}
		}

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private MediaPlayer _playerA;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private MediaPlayer _playerB;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private bool _playlistAutoProgress;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6721F0", Offset = "0x6721F0")]
		[SerializeField]
		private bool _autoCloseVideo;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private PlaylistLoopMode _playlistLoopMode;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private MediaPlaylist _playlist;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x67225C", Offset = "0x67225C")]
		private bool _pausePreviousOnTransition;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		private Transition _nextTransition;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private float _transitionDuration;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Easing _transitionEasing;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propFromTex;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propT;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private int _playlistIndex;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private MediaPlayer _nextPlayer;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Shader _shader;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Material _material;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Transition _currentTransition;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private string _currentTransitionName;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float _currentTransitionDuration;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Easing.Preset _currentTransitionEasing;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float _textureTimer;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float _transitionTimer;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Func<float, float> _easeFunc;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private RenderTexture _rt;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private MediaPlaylist.MediaItem _currentItem;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private MediaPlaylist.MediaItem _nextItem;

		[Token(Token = "0x1700034A")]
		public MediaPlayer CurrentPlayer
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0xDA4294", Offset = "0xDA4294", VA = "0xDA4294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		public MediaPlayer NextPlayer
		{
			[Token(Token = "0x6001808")]
			[Address(RVA = "0xDA4328", Offset = "0xDA4328", VA = "0xDA4328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		public MediaPlaylist Playlist
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0xDA4330", Offset = "0xDA4330", VA = "0xDA4330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		public int PlaylistIndex
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0xDA4338", Offset = "0xDA4338", VA = "0xDA4338")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034E")]
		public MediaPlaylist.MediaItem PlaylistItem
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xDA4340", Offset = "0xDA4340", VA = "0xDA4340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public PlaylistLoopMode LoopMode
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0xDA43F0", Offset = "0xDA43F0", VA = "0xDA43F0")]
			get
			{
				return default(PlaylistLoopMode);
			}
			[Token(Token = "0x600180D")]
			[Address(RVA = "0xDA43F8", Offset = "0xDA43F8", VA = "0xDA43F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public bool AutoProgress
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0xDA4400", Offset = "0xDA4400", VA = "0xDA4400")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xDA4408", Offset = "0xDA4408", VA = "0xDA4408")]
			set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public override IMediaInfo Info
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0xDA4414", Offset = "0xDA4414", VA = "0xDA4414", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		public override IMediaControl Control
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0xDA44C8", Offset = "0xDA44C8", VA = "0xDA44C8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		public override IMediaProducer TextureProducer
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0xDA457C", Offset = "0xDA457C", VA = "0xDA457C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xDA46E0", Offset = "0xDA46E0", VA = "0xDA46E0")]
		private void SwapPlayers()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xDA4AAC", Offset = "0xDA4AAC", VA = "0xDA4AAC")]
		private Texture GetCurrentTexture()
		{
			return null;
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xDA4C04", Offset = "0xDA4C04", VA = "0xDA4C04")]
		private Texture GetNextTexture()
		{
			return null;
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xDA4FD8", Offset = "0xDA4FD8", VA = "0xDA4FD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xDA50CC", Offset = "0xDA50CC", VA = "0xDA50CC", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xDA51BC", Offset = "0xDA51BC", VA = "0xDA51BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xDA54C8", Offset = "0xDA54C8", VA = "0xDA54C8")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xDA5734", Offset = "0xDA5734", VA = "0xDA5734")]
		public bool PrevItem()
		{
			return default(bool);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xDA569C", Offset = "0xDA569C", VA = "0xDA569C")]
		public bool NextItem()
		{
			return default(bool);
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xDA5740", Offset = "0xDA5740", VA = "0xDA5740")]
		public bool CanJumpToItem(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xDA534C", Offset = "0xDA534C", VA = "0xDA534C")]
		public bool JumpToItem(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xDA5854", Offset = "0xDA5854", VA = "0xDA5854")]
		public void OpenVideoFile(MediaPlaylist.MediaItem mediaItem)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xDA4644", Offset = "0xDA4644", VA = "0xDA4644")]
		private bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xDA5AD4", Offset = "0xDA5AD4", VA = "0xDA5AD4")]
		private void SetTransition(Transition transition, float duration, Easing.Preset easing)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xDA5C14", Offset = "0xDA5C14", VA = "0xDA5C14", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xDA61A4", Offset = "0xDA61A4", VA = "0xDA61A4", Slot = "13")]
		public Texture GetTexture(int index = 0)
		{
			return null;
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xDA61AC", Offset = "0xDA61AC", VA = "0xDA61AC", Slot = "12")]
		public int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xDA6280", Offset = "0xDA6280", VA = "0xDA6280", Slot = "14")]
		public int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xDA6358", Offset = "0xDA6358", VA = "0xDA6358", Slot = "15")]
		public bool SupportsTextureFrameCount()
		{
			return default(bool);
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xDA6430", Offset = "0xDA6430", VA = "0xDA6430", Slot = "16")]
		public long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xDA6508", Offset = "0xDA6508", VA = "0xDA6508", Slot = "17")]
		public bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xDA65E0", Offset = "0xDA65E0", VA = "0xDA65E0", Slot = "18")]
		public Matrix4x4 GetYpCbCrTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xDA5BA8", Offset = "0xDA5BA8", VA = "0xDA5BA8")]
		private static string GetTransitionName(Transition transition)
		{
			return null;
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xDA66C8", Offset = "0xDA66C8", VA = "0xDA66C8")]
		public PlaylistMediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D8")]
	public class StreamParserEvent : UnityEvent<StreamParser, StreamParserEvent.EventType>
	{
		[Token(Token = "0x20003D9")]
		public enum EventType
		{
			[Token(Token = "0x4001AAB")]
			Success,
			[Token(Token = "0x4001AAC")]
			Failed
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xDA8EF8", Offset = "0xDA8EF8", VA = "0xDA8EF8")]
		public StreamParserEvent()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class StreamParser : MonoBehaviour
	{
		[Token(Token = "0x20003DB")]
		public enum StreamType
		{
			[Token(Token = "0x4001AB6")]
			HLS
		}

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _url;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreamType _streamType;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _autoLoad;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream _parser;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _loaded;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Stream> _substreams;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Stream.Chunk> _chunks;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StreamParserEvent _events;

		[Token(Token = "0x17000354")]
		public StreamParserEvent Events
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xDA8E90", Offset = "0xDA8E90", VA = "0xDA8E90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public bool Loaded
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xDA91CC", Offset = "0xDA91CC", VA = "0xDA91CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000356")]
		public Stream Root
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xDA91D4", Offset = "0xDA91D4", VA = "0xDA91D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		public List<Stream> SubStreams
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xDA91EC", Offset = "0xDA91EC", VA = "0xDA91EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		public List<Stream.Chunk> Chunks
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xDA9204", Offset = "0xDA9204", VA = "0xDA9204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xDA8F48", Offset = "0xDA8F48", VA = "0xDA8F48")]
		private void LoadFile()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xDA921C", Offset = "0xDA921C", VA = "0xDA921C")]
		public void ParseStream()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xDA92BC", Offset = "0xDA92BC", VA = "0xDA92BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xDA92CC", Offset = "0xDA92CC", VA = "0xDA92CC")]
		public StreamParser()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x667788", Offset = "0x667788")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x667788", Offset = "0x667788")]
	public class SubtitlesUGUI : MonoBehaviour
	{
		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xDA9308", Offset = "0xDA9308", VA = "0xDA9308")]
		private void Start()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xDA94A4", Offset = "0xDA94A4", VA = "0xDA94A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xDA9310", Offset = "0xDA9310", VA = "0xDA9310")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xDA94AC", Offset = "0xDA94AC", VA = "0xDA94AC")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xDA96A0", Offset = "0xDA96A0", VA = "0xDA96A0")]
		public SubtitlesUGUI()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6677EC", Offset = "0x6677EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6677EC", Offset = "0x6677EC")]
	public class UpdateStereoMaterial : MonoBehaviour
	{
		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6722F8", Offset = "0x6722F8")]
		public Camera _camera;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x672330", Offset = "0x672330")]
		public MeshRenderer _renderer;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Graphic _uGuiComponent;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material _material;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StereoEye _forceEyeMode;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _cameraPositionId;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _viewMatrixId;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private StereoEye _setForceEyeMode;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera _foundCamera;

		[Token(Token = "0x17000359")]
		public StereoEye ForceEyeMode
		{
			[Token(Token = "0x6001850")]
			[Address(RVA = "0xDA96A8", Offset = "0xDA96A8", VA = "0xDA96A8")]
			get
			{
				return default(StereoEye);
			}
			[Token(Token = "0x6001851")]
			[Address(RVA = "0xDA96B0", Offset = "0xDA96B0", VA = "0xDA96B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xDA96B8", Offset = "0xDA96B8", VA = "0xDA96B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xDA97D4", Offset = "0xDA97D4", VA = "0xDA97D4")]
		private void SetupMaterial(Material m, Camera camera)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xDA99AC", Offset = "0xDA99AC", VA = "0xDA99AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xDA9D84", Offset = "0xDA9D84", VA = "0xDA9D84")]
		public UpdateStereoMaterial()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class AndroidMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x20003DF")]
		private struct Native
		{
			[Token(Token = "0x20003E0")]
			public enum AVPPluginEvent
			{
				[Token(Token = "0x4001AE7")]
				Nop,
				[Token(Token = "0x4001AE8")]
				PlayerSetup,
				[Token(Token = "0x4001AE9")]
				PlayerUpdate,
				[Token(Token = "0x4001AEA")]
				PlayerDestroy,
				[Token(Token = "0x4001AEB")]
				ExtractFrame
			}

			[PreserveSig]
			[Token(Token = "0x600189E")]
			[Address(RVA = "0xD8A690", Offset = "0xD8A690", VA = "0xD8A690")]
			public static extern IntPtr GetRenderEventFunc();

			[PreserveSig]
			[Token(Token = "0x600189F")]
			[Address(RVA = "0xD8A71C", Offset = "0xD8A71C", VA = "0xD8A71C")]
			public static extern int _GetWidth(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0xD8A7B8", Offset = "0xD8A7B8", VA = "0xD8A7B8")]
			public static extern int _GetHeight(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xD8A850", Offset = "0xD8A850", VA = "0xD8A850")]
			public static extern int _GetTextureHandle(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xD8A8EC", Offset = "0xD8A8EC", VA = "0xD8A8EC")]
			public static extern long _GetDuration(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0xD8A988", Offset = "0xD8A988", VA = "0xD8A988")]
			public static extern int _GetLastErrorCode(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xD8AA24", Offset = "0xD8AA24", VA = "0xD8AA24")]
			public static extern int _GetFrameCount(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xD8AAC0", Offset = "0xD8AAC0", VA = "0xD8AAC0")]
			public static extern float _GetVideoDisplayRate(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xD8AB5C", Offset = "0xD8AB5C", VA = "0xD8AB5C")]
			public static extern bool _CanPlay(int iPlayerIndex);
		}

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject s_ActivityContext;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static AndroidJavaObject s_Interface;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static bool s_bInitialised;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string s_Version;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IntPtr _nativeFunction_RenderEvent;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected AndroidJavaObject m_Video;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture2D m_Texture;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_TextureHandle;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_UseFastOesPath;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_DurationMs;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_Width;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_Height;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int m_iPlayerIndex;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Android.VideoApi m_API;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool m_HeadRotationEnabled;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool m_FocusEnabled;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IntPtr m_Method_Update;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IntPtr m_Method_SetHeadRotation;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IntPtr m_Method_GetCurrentTimeMs;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IntPtr m_Method_GetSourceVideoFrameRate;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IntPtr m_Method_IsPlaying;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private IntPtr m_Method_IsPaused;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IntPtr m_Method_IsFinished;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private IntPtr m_Method_IsSeeking;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IntPtr m_Method_IsBuffering;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IntPtr m_Method_IsLooping;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IntPtr m_Method_HasVideo;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IntPtr m_Method_HasAudio;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IntPtr m_Method_SetFocusProps;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IntPtr m_Method_SetFocusEnabled;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IntPtr m_Method_SetFocusRotation;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private jvalue[] m_Value0;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private jvalue[] m_Value1;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private jvalue[] m_Value2;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private jvalue[] m_Value4;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int _textureQuality;

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xB7B3EC", Offset = "0xB7B3EC", VA = "0xB7B3EC")]
		public static bool InitialisePlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xB7B730", Offset = "0xB7B730", VA = "0xB7B730")]
		public static void DeinitPlatform()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xB7B874", Offset = "0xB7B874", VA = "0xB7B874")]
		private static void IssuePluginEvent(Native.AVPPluginEvent type, int param)
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xB7B914", Offset = "0xB7B914", VA = "0xB7B914")]
		private IntPtr GetMethod(string methodName, string signature)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xB7BA6C", Offset = "0xB7BA6C", VA = "0xB7BA6C")]
		public AndroidMediaPlayer(bool useFastOesPath, bool showPosterFrame, Android.VideoApi api, bool enable360Audio, Audio360ChannelMode channelMode, bool preferSoftware)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xB7C0B8", Offset = "0xB7C0B8", VA = "0xB7C0B8")]
		public void SetOptions(bool useFastOesPath, bool showPosterFrame)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xB7C238", Offset = "0xB7C238", VA = "0xB7C238", Slot = "173")]
		public override long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xB7C2FC", Offset = "0xB7C2FC", VA = "0xB7C2FC", Slot = "97")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xB7C364", Offset = "0xB7C364", VA = "0xB7C364", Slot = "98")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xB7C5AC", Offset = "0xB7C5AC", VA = "0xB7C5AC", Slot = "117")]
		public override TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xB7C718", Offset = "0xB7C718", VA = "0xB7C718", Slot = "103")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xB7C80C", Offset = "0xB7C80C", VA = "0xB7C80C", Slot = "104")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xB7C904", Offset = "0xB7C904", VA = "0xB7C904", Slot = "105")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xB7C9E4", Offset = "0xB7C9E4", VA = "0xB7C9E4", Slot = "126")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xB7CAC4", Offset = "0xB7CAC4", VA = "0xB7CAC4", Slot = "125")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xB7CBA4", Offset = "0xB7CBA4", VA = "0xB7CBA4", Slot = "106")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xB7CC0C", Offset = "0xB7CC0C", VA = "0xB7CC0C", Slot = "107")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xB7CC18", Offset = "0xB7CC18", VA = "0xB7CC18", Slot = "108")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xB7CC94", Offset = "0xB7CC94", VA = "0xB7CC94", Slot = "109")]
		public override void Pause()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xB7CD10", Offset = "0xB7CD10", VA = "0xB7CD10", Slot = "110")]
		public override void Stop()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xB7CD8C", Offset = "0xB7CD8C", VA = "0xB7CD8C", Slot = "112")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xB7CEC4", Offset = "0xB7CEC4", VA = "0xB7CEC4", Slot = "113")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xB7CFFC", Offset = "0xB7CFFC", VA = "0xB7CFFC", Slot = "115")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xB7D0D8", Offset = "0xB7D0D8", VA = "0xB7D0D8", Slot = "119")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xB7D1DC", Offset = "0xB7D1DC", VA = "0xB7D1DC", Slot = "118")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xB7D264", Offset = "0xB7D264", VA = "0xB7D264", Slot = "159")]
		public override void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xB7D654", Offset = "0xB7D654", VA = "0xB7D654", Slot = "160")]
		public override void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xB7D758", Offset = "0xB7D758", VA = "0xB7D758", Slot = "162")]
		public override void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xB7D8F0", Offset = "0xB7D8F0", VA = "0xB7D8F0", Slot = "163")]
		public override void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xB7DB1C", Offset = "0xB7DB1C", VA = "0xB7DB1C", Slot = "164")]
		public override void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xB7DE74", Offset = "0xB7DE74", VA = "0xB7DE74", Slot = "165")]
		public override void ResetAudioFocus()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xB7E464", Offset = "0xB7E464", VA = "0xB7E464", Slot = "120")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xB7E46C", Offset = "0xB7E46C", VA = "0xB7E46C", Slot = "121")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xB7E474", Offset = "0xB7E474", VA = "0xB7E474", Slot = "122")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xB7E47C", Offset = "0xB7E47C", VA = "0xB7E47C", Slot = "172")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xB7E55C", Offset = "0xB7E55C", VA = "0xB7E55C", Slot = "174")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xB7E5EC", Offset = "0xB7E5EC", VA = "0xB7E5EC", Slot = "124")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xB7E5F8", Offset = "0xB7E5F8", VA = "0xB7E5F8", Slot = "127")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xB7E6D8", Offset = "0xB7E6D8", VA = "0xB7E6D8", Slot = "128")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xB7E7B8", Offset = "0xB7E7B8", VA = "0xB7E7B8", Slot = "129")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xB7E898", Offset = "0xB7E898", VA = "0xB7E898", Slot = "130")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xB7E978", Offset = "0xB7E978", VA = "0xB7E978", Slot = "131")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xB7EA58", Offset = "0xB7EA58", VA = "0xB7EA58", Slot = "139")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xB7EA98", Offset = "0xB7EA98", VA = "0xB7EA98", Slot = "140")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xB7EB28", Offset = "0xB7EB28", VA = "0xB7EB28", Slot = "143")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xB7EB30", Offset = "0xB7EB30", VA = "0xB7EB30", Slot = "146")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xB7EC28", Offset = "0xB7EC28", VA = "0xB7EC28", Slot = "147")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xB7ECB0", Offset = "0xB7ECB0", VA = "0xB7ECB0", Slot = "148")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xB7EDB4", Offset = "0xB7EDB4", VA = "0xB7EDB4", Slot = "150")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xB7EE3C", Offset = "0xB7EE3C", VA = "0xB7EE3C", Slot = "149")]
		public override void SetBalance(float balance)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xB7EF40", Offset = "0xB7EF40", VA = "0xB7EF40", Slot = "151")]
		public override float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xB7EFC8", Offset = "0xB7EFC8", VA = "0xB7EFC8", Slot = "152")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xB7F050", Offset = "0xB7F050", VA = "0xB7F050", Slot = "154")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xB7F0D8", Offset = "0xB7F0D8", VA = "0xB7F0D8", Slot = "155")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xB7F1CC", Offset = "0xB7F1CC", VA = "0xB7F1CC", Slot = "156")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xB7F204", Offset = "0xB7F204", VA = "0xB7F204", Slot = "157")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xB7F20C", Offset = "0xB7F20C", VA = "0xB7F20C", Slot = "166")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xB7F240", Offset = "0xB7F240", VA = "0xB7F240", Slot = "168")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xB7F248", Offset = "0xB7F248", VA = "0xB7F248", Slot = "169")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xB7F24C", Offset = "0xB7F24C", VA = "0xB7F24C", Slot = "170")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xB7F294", Offset = "0xB7F294", VA = "0xB7F294", Slot = "171")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xB7F29C", Offset = "0xB7F29C", VA = "0xB7F29C", Slot = "132")]
		public override bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xB7F3E4", Offset = "0xB7F3E4", VA = "0xB7F3E4", Slot = "142")]
		public override long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xB7F46C", Offset = "0xB7F46C", VA = "0xB7F46C", Slot = "176")]
		public override void Render()
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xB7FBD4", Offset = "0xB7FBD4", VA = "0xB7FBD4", Slot = "182")]
		protected override void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xB7FBDC", Offset = "0xB7FBDC", VA = "0xB7FBDC", Slot = "188")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xB7FCF0", Offset = "0xB7FCF0", VA = "0xB7FCF0", Slot = "116")]
		public override double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xB7FD78", Offset = "0xB7FD78", VA = "0xB7FD78", Slot = "175")]
		public override void Update()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xB7FEC0", Offset = "0xB7FEC0", VA = "0xB7FEC0", Slot = "179")]
		public override bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xB7FEC8", Offset = "0xB7FEC8", VA = "0xB7FEC8", Slot = "144")]
		public override float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xB7FF4C", Offset = "0xB7FF4C", VA = "0xB7FF4C", Slot = "177")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class AudioOutputManager
	{
		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioOutputManager _instance;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<MediaPlayer, HashSet<AudioOutput>> _accessTrackers;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MediaPlayer, float[]> _pcmData;

		[Token(Token = "0x1700035A")]
		public static AudioOutputManager Instance
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0xD8E150", Offset = "0xD8E150", VA = "0xD8E150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xD8E210", Offset = "0xD8E210", VA = "0xD8E210")]
		private AudioOutputManager()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xD8E2AC", Offset = "0xD8E2AC", VA = "0xD8E2AC")]
		public void RequestAudio(AudioOutput _outputComponent, MediaPlayer mediaPlayer, float[] data, int channelMask, int totalChannels, AudioOutput.AudioOutputMode audioOutputMode)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xD8EA34", Offset = "0xD8EA34", VA = "0xD8EA34")]
		private void GrabAudio(MediaPlayer player, float[] data, int channels)
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public abstract class BaseMediaPlayer : IMediaPlayer, IMediaControl, IMediaInfo, IMediaProducer, IMediaSubtitles, IDisposable
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string _playerDescription;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ErrorCode _lastError;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected FilterMode _defaultTextureFilterMode;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected TextureWrapMode _defaultTextureWrapMode;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int _defaultTextureAnisoLevel;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TimeRange[] _seekableTimeRanges;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _stallDetectionTimer;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _stallDetectionFrame;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<Subtitle> _subtitles;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Subtitle _currentSubtitle;

		[Token(Token = "0x60018AC")]
		public abstract string GetVersion();

		[Token(Token = "0x60018AD")]
		public abstract bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xD8EB40", Offset = "0xD8EB40", VA = "0xD8EB40", Slot = "99")]
		public virtual bool OpenVideoFromBuffer(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xD8EB48", Offset = "0xD8EB48", VA = "0xD8EB48", Slot = "100")]
		public virtual bool StartOpenVideoFromBuffer(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xD8EB50", Offset = "0xD8EB50", VA = "0xD8EB50", Slot = "101")]
		public virtual bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xD8EB58", Offset = "0xD8EB58", VA = "0xD8EB58", Slot = "102")]
		public virtual bool EndOpenVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xD8EB60", Offset = "0xD8EB60", VA = "0xD8EB60", Slot = "103")]
		public virtual void CloseVideo()
		{
		}

		[Token(Token = "0x60018B3")]
		public abstract void SetLooping(bool bLooping);

		[Token(Token = "0x60018B4")]
		public abstract bool IsLooping();

		[Token(Token = "0x60018B5")]
		public abstract bool HasMetaData();

		[Token(Token = "0x60018B6")]
		public abstract bool CanPlay();

		[Token(Token = "0x60018B7")]
		public abstract void Play();

		[Token(Token = "0x60018B8")]
		public abstract void Pause();

		[Token(Token = "0x60018B9")]
		public abstract void Stop();

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xD8EB6C", Offset = "0xD8EB6C", VA = "0xD8EB6C", Slot = "111")]
		public virtual void Rewind()
		{
		}

		[Token(Token = "0x60018BB")]
		public abstract void Seek(float timeMs);

		[Token(Token = "0x60018BC")]
		public abstract void SeekFast(float timeMs);

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xD8EB80", Offset = "0xD8EB80", VA = "0xD8EB80", Slot = "114")]
		public virtual void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x60018BE")]
		public abstract float GetCurrentTimeMs();

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xD8EB90", Offset = "0xD8EB90", VA = "0xD8EB90", Slot = "116")]
		public virtual double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xD8EB98", Offset = "0xD8EB98", VA = "0xD8EB98", Slot = "117")]
		public virtual TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x60018C1")]
		public abstract float GetPlaybackRate();

		[Token(Token = "0x60018C2")]
		public abstract void SetPlaybackRate(float rate);

		[Token(Token = "0x60018C3")]
		public abstract float GetDurationMs();

		[Token(Token = "0x60018C4")]
		public abstract int GetVideoWidth();

		[Token(Token = "0x60018C5")]
		public abstract int GetVideoHeight();

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xD8EBA0", Offset = "0xD8EBA0", VA = "0xD8EBA0", Slot = "123")]
		public virtual Rect GetCropRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60018C7")]
		public abstract float GetVideoDisplayRate();

		[Token(Token = "0x60018C8")]
		public abstract bool HasAudio();

		[Token(Token = "0x60018C9")]
		public abstract bool HasVideo();

		[Token(Token = "0x60018CA")]
		public abstract bool IsSeeking();

		[Token(Token = "0x60018CB")]
		public abstract bool IsPlaying();

		[Token(Token = "0x60018CC")]
		public abstract bool IsPaused();

		[Token(Token = "0x60018CD")]
		public abstract bool IsFinished();

		[Token(Token = "0x60018CE")]
		public abstract bool IsBuffering();

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xD8EBE0", Offset = "0xD8EBE0", VA = "0xD8EBE0", Slot = "132")]
		public virtual bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xD8EBE8", Offset = "0xD8EBE8", VA = "0xD8EBE8", Slot = "133")]
		public virtual void SetPlayWithoutBuffering(bool playWithoutBuffering)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xD8EBEC", Offset = "0xD8EBEC", VA = "0xD8EBEC", Slot = "134")]
		public virtual void SetKeyServerURL(string url)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xD8EBF0", Offset = "0xD8EBF0", VA = "0xD8EBF0", Slot = "135")]
		public virtual void SetKeyServerAuthToken(string token)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xD8EBF4", Offset = "0xD8EBF4", VA = "0xD8EBF4", Slot = "136")]
		public virtual void SetDecryptionKeyBase64(string key)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xD8EBF8", Offset = "0xD8EBF8", VA = "0xD8EBF8", Slot = "137")]
		public virtual void SetDecryptionKey(byte[] key)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xD8EBFC", Offset = "0xD8EBFC", VA = "0xD8EBFC", Slot = "138")]
		public virtual int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x60018D6")]
		public abstract Texture GetTexture(int index = 0);

		[Token(Token = "0x60018D7")]
		public abstract int GetTextureFrameCount();

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xD8EC04", Offset = "0xD8EC04", VA = "0xD8EC04", Slot = "141")]
		public virtual bool SupportsTextureFrameCount()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xD8EC0C", Offset = "0xD8EC0C", VA = "0xD8EC0C", Slot = "142")]
		public virtual long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x60018DA")]
		public abstract bool RequiresVerticalFlip();

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xD8EC14", Offset = "0xD8EC14", VA = "0xD8EC14", Slot = "144")]
		public virtual float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xD8ECB4", Offset = "0xD8ECB4", VA = "0xD8ECB4", Slot = "145")]
		public virtual Matrix4x4 GetYpCbCrTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60018DD")]
		public abstract void MuteAudio(bool bMuted);

		[Token(Token = "0x60018DE")]
		public abstract bool IsMuted();

		[Token(Token = "0x60018DF")]
		public abstract void SetVolume(float volume);

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xD8ED1C", Offset = "0xD8ED1C", VA = "0xD8ED1C", Slot = "149")]
		public virtual void SetBalance(float balance)
		{
		}

		[Token(Token = "0x60018E1")]
		public abstract float GetVolume();

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xD8ED20", Offset = "0xD8ED20", VA = "0xD8ED20", Slot = "151")]
		public virtual float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x60018E3")]
		public abstract int GetAudioTrackCount();

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xD8ED28", Offset = "0xD8ED28", VA = "0xD8ED28", Slot = "153")]
		public virtual string GetAudioTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x60018E5")]
		public abstract int GetCurrentAudioTrack();

		[Token(Token = "0x60018E6")]
		public abstract void SetAudioTrack(int index);

		[Token(Token = "0x60018E7")]
		public abstract string GetCurrentAudioTrackId();

		[Token(Token = "0x60018E8")]
		public abstract int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xD8ED50", Offset = "0xD8ED50", VA = "0xD8ED50", Slot = "158")]
		public virtual int GetNumAudioChannels()
		{
			return default(int);
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xD8ED58", Offset = "0xD8ED58", VA = "0xD8ED58", Slot = "159")]
		public virtual void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xD8ED5C", Offset = "0xD8ED5C", VA = "0xD8ED5C", Slot = "160")]
		public virtual void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xD8ED60", Offset = "0xD8ED60", VA = "0xD8ED60", Slot = "161")]
		public virtual void SetAudioChannelMode(Audio360ChannelMode channelMode)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xD8ED64", Offset = "0xD8ED64", VA = "0xD8ED64", Slot = "162")]
		public virtual void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xD8ED68", Offset = "0xD8ED68", VA = "0xD8ED68", Slot = "163")]
		public virtual void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xD8ED6C", Offset = "0xD8ED6C", VA = "0xD8ED6C", Slot = "164")]
		public virtual void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xD8ED70", Offset = "0xD8ED70", VA = "0xD8ED70", Slot = "165")]
		public virtual void ResetAudioFocus()
		{
		}

		[Token(Token = "0x60018F1")]
		public abstract int GetVideoTrackCount();

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xD8ED74", Offset = "0xD8ED74", VA = "0xD8ED74", Slot = "167")]
		public virtual string GetVideoTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x60018F3")]
		public abstract int GetCurrentVideoTrack();

		[Token(Token = "0x60018F4")]
		public abstract void SetVideoTrack(int index);

		[Token(Token = "0x60018F5")]
		public abstract string GetCurrentVideoTrackId();

		[Token(Token = "0x60018F6")]
		public abstract int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x60018F7")]
		public abstract float GetVideoFrameRate();

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xD8ED9C", Offset = "0xD8ED9C", VA = "0xD8ED9C", Slot = "173")]
		public virtual long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x60018F9")]
		public abstract float GetBufferingProgress();

		[Token(Token = "0x60018FA")]
		public abstract void Update();

		[Token(Token = "0x60018FB")]
		public abstract void Render();

		[Token(Token = "0x60018FC")]
		public abstract void Dispose();

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xD8EDA4", Offset = "0xD8EDA4", VA = "0xD8EDA4", Slot = "47")]
		public ErrorCode GetLastError()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xD8EDAC", Offset = "0xD8EDAC", VA = "0xD8EDAC", Slot = "178")]
		public virtual long GetLastExtendedErrorCode()
		{
			return default(long);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xD8EDB4", Offset = "0xD8EDB4", VA = "0xD8EDB4", Slot = "81")]
		public string GetPlayerDescription()
		{
			return null;
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xD8EDBC", Offset = "0xD8EDBC", VA = "0xD8EDBC", Slot = "179")]
		public virtual bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xD8EDC4", Offset = "0xD8EDC4", VA = "0xD8EDC4", Slot = "180")]
		public virtual int GetBufferedTimeRangeCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xD8EDCC", Offset = "0xD8EDCC", VA = "0xD8EDCC", Slot = "181")]
		public virtual bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xD8EDD4", Offset = "0xD8EDD4", VA = "0xD8EDD4", Slot = "49")]
		public void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 0)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xD8EE64", Offset = "0xD8EE64", VA = "0xD8EE64", Slot = "182")]
		protected virtual void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xD8EF70", Offset = "0xD8EF70", VA = "0xD8EF70", Slot = "183")]
		public virtual void GrabAudio(float[] buffer, int floatCount, int channelCount)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xD8EF74", Offset = "0xD8EF74", VA = "0xD8EF74")]
		protected bool IsExpectingNewVideoFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xD8EFF8", Offset = "0xD8EFF8", VA = "0xD8EFF8", Slot = "184")]
		public virtual bool IsPlaybackStalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xD8F098", Offset = "0xD8F098", VA = "0xD8F098", Slot = "93")]
		public bool LoadSubtitlesSRT(string data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xD8F510", Offset = "0xD8F510", VA = "0xD8F510", Slot = "185")]
		public virtual void UpdateSubtitles()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xD8F6B8", Offset = "0xD8F6B8", VA = "0xD8F6B8", Slot = "186")]
		public virtual int GetSubtitleIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xD8F6D0", Offset = "0xD8F6D0", VA = "0xD8F6D0", Slot = "187")]
		public virtual string GetSubtitleText()
		{
			return null;
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xD8F734", Offset = "0xD8F734", VA = "0xD8F734", Slot = "188")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xD8F738", Offset = "0xD8F738", VA = "0xD8F738")]
		protected BaseMediaPlayer()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class HLSStream : Stream
	{
		[Token(Token = "0x4001AF9")]
		private const string BANDWITH_NAME = "BANDWIDTH=";

		[Token(Token = "0x4001AFA")]
		private const string RESOLUTION_NAME = "RESOLUTION=";

		[Token(Token = "0x4001AFB")]
		private const string CHUNK_TAG = "#EXTINF";

		[Token(Token = "0x4001AFC")]
		private const string STREAM_TAG = "#EXT-X-STREAM-INF";

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Stream> _streams;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Chunk> _chunks;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _streamURL;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _width;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _height;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bandwidth;

		[Token(Token = "0x1700035B")]
		public override int Width
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xD98E0C", Offset = "0xD98E0C", VA = "0xD98E0C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035C")]
		public override int Height
		{
			[Token(Token = "0x600190F")]
			[Address(RVA = "0xD98E14", Offset = "0xD98E14", VA = "0xD98E14", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035D")]
		public override int Bandwidth
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0xD98E1C", Offset = "0xD98E1C", VA = "0xD98E1C", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035E")]
		public override string URL
		{
			[Token(Token = "0x6001911")]
			[Address(RVA = "0xD98E24", Offset = "0xD98E24", VA = "0xD98E24", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xD98E2C", Offset = "0xD98E2C", VA = "0xD98E2C", Slot = "8")]
		public override List<Chunk> GetAllChunks()
		{
			return null;
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xD98F70", Offset = "0xD98F70", VA = "0xD98F70", Slot = "9")]
		public override List<Chunk> GetChunks()
		{
			return null;
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xD98F78", Offset = "0xD98F78", VA = "0xD98F78", Slot = "10")]
		public override List<Stream> GetAllStreams()
		{
			return null;
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xD990B8", Offset = "0xD990B8", VA = "0xD990B8", Slot = "11")]
		public override List<Stream> GetStreams()
		{
			return null;
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xD990C0", Offset = "0xD990C0", VA = "0xD990C0")]
		private bool ExtractStreamInfo(string line, ref int width, ref int height, ref int bandwidth)
		{
			return default(bool);
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xD9944C", Offset = "0xD9944C", VA = "0xD9944C")]
		private static bool IsChunk(string line)
		{
			return default(bool);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xD994AC", Offset = "0xD994AC", VA = "0xD994AC")]
		private void ParseFile(string[] text, string path)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xD999F4", Offset = "0xD999F4", VA = "0xD999F4")]
		public HLSStream(string filename, int width = 0, int height = 0, int bandwidth = 0)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xD99EC4", Offset = "0xD99EC4", VA = "0xD99EC4")]
		private bool MyRemoteCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20003E4")]
	public class MediaPlayerEvent : UnityEvent<MediaPlayer, MediaPlayerEvent.EventType, ErrorCode>
	{
		[Token(Token = "0x20003E5")]
		public enum EventType
		{
			[Token(Token = "0x4001B05")]
			MetaDataReady,
			[Token(Token = "0x4001B06")]
			ReadyToPlay,
			[Token(Token = "0x4001B07")]
			Started,
			[Token(Token = "0x4001B08")]
			FirstFrameReady,
			[Token(Token = "0x4001B09")]
			FinishedPlaying,
			[Token(Token = "0x4001B0A")]
			Closing,
			[Token(Token = "0x4001B0B")]
			Error,
			[Token(Token = "0x4001B0C")]
			SubtitleChange,
			[Token(Token = "0x4001B0D")]
			Stalled,
			[Token(Token = "0x4001B0E")]
			Unstalled,
			[Token(Token = "0x4001B0F")]
			ResolutionChanged,
			[Token(Token = "0x4001B10")]
			StartedSeeking,
			[Token(Token = "0x4001B11")]
			FinishedSeeking,
			[Token(Token = "0x4001B12")]
			StartedBuffering,
			[Token(Token = "0x4001B13")]
			FinishedBuffering,
			[Token(Token = "0x4001B14")]
			PropertiesChanged,
			[Token(Token = "0x4001B15")]
			PlaylistItemChanged,
			[Token(Token = "0x4001B16")]
			PlaylistFinished
		}

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<UnityAction<MediaPlayer, EventType, ErrorCode>> _listeners;

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xD9D37C", Offset = "0xD9D37C", VA = "0xD9D37C")]
		public bool HasListeners()
		{
			return default(bool);
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xD8CA04", Offset = "0xD8CA04", VA = "0xD8CA04")]
		public new void AddListener(UnityAction<MediaPlayer, EventType, ErrorCode> call)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xD8D0C8", Offset = "0xD8D0C8", VA = "0xD8D0C8")]
		public new void RemoveListener(UnityAction<MediaPlayer, EventType, ErrorCode> call)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xDA3B30", Offset = "0xDA3B30", VA = "0xDA3B30")]
		public new void RemoveAllListeners()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xD9B53C", Offset = "0xD9B53C", VA = "0xD9B53C")]
		public MediaPlayerEvent()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public interface IMediaPlayer
	{
		[Token(Token = "0x6001920")]
		void OnEnable();

		[Token(Token = "0x6001921")]
		void Update();

		[Token(Token = "0x6001922")]
		void Render();
	}
	[Token(Token = "0x20003E7")]
	public interface IMediaSubtitles
	{
		[Token(Token = "0x6001923")]
		bool LoadSubtitlesSRT(string data);

		[Token(Token = "0x6001924")]
		int GetSubtitleIndex();

		[Token(Token = "0x6001925")]
		string GetSubtitleText();
	}
	[Token(Token = "0x20003E8")]
	public interface IMediaControl
	{
		[Token(Token = "0x6001926")]
		bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x6001927")]
		bool OpenVideoFromBuffer(byte[] buffer);

		[Token(Token = "0x6001928")]
		bool StartOpenVideoFromBuffer(ulong length);

		[Token(Token = "0x6001929")]
		bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length);

		[Token(Token = "0x600192A")]
		bool EndOpenVideoFromBuffer();

		[Token(Token = "0x600192B")]
		void CloseVideo();

		[Token(Token = "0x600192C")]
		void SetLooping(bool bLooping);

		[Token(Token = "0x600192D")]
		bool IsLooping();

		[Token(Token = "0x600192E")]
		bool HasMetaData();

		[Token(Token = "0x600192F")]
		bool CanPlay();

		[Token(Token = "0x6001930")]
		bool IsPlaying();

		[Token(Token = "0x6001931")]
		bool IsSeeking();

		[Token(Token = "0x6001932")]
		bool IsPaused();

		[Token(Token = "0x6001933")]
		bool IsFinished();

		[Token(Token = "0x6001934")]
		bool IsBuffering();

		[Token(Token = "0x6001935")]
		void Play();

		[Token(Token = "0x6001936")]
		void Pause();

		[Token(Token = "0x6001937")]
		void Stop();

		[Token(Token = "0x6001938")]
		void Rewind();

		[Token(Token = "0x6001939")]
		void Seek(float timeMs);

		[Token(Token = "0x600193A")]
		void SeekFast(float timeMs);

		[Token(Token = "0x600193B")]
		void SeekWithTolerance(float timeMs, float beforeMs, float afterMs);

		[Token(Token = "0x600193C")]
		float GetCurrentTimeMs();

		[Token(Token = "0x600193D")]
		double GetCurrentDateTimeSecondsSince1970();

		[Token(Token = "0x600193E")]
		TimeRange[] GetSeekableTimeRanges();

		[Token(Token = "0x600193F")]
		float GetPlaybackRate();

		[Token(Token = "0x6001940")]
		void SetPlaybackRate(float rate);

		[Token(Token = "0x6001941")]
		void MuteAudio(bool bMute);

		[Token(Token = "0x6001942")]
		bool IsMuted();

		[Token(Token = "0x6001943")]
		void SetVolume(float volume);

		[Token(Token = "0x6001944")]
		void SetBalance(float balance);

		[Token(Token = "0x6001945")]
		float GetVolume();

		[Token(Token = "0x6001946")]
		float GetBalance();

		[Token(Token = "0x6001947")]
		int GetCurrentAudioTrack();

		[Token(Token = "0x6001948")]
		void SetAudioTrack(int index);

		[Token(Token = "0x6001949")]
		int GetCurrentVideoTrack();

		[Token(Token = "0x600194A")]
		void SetVideoTrack(int index);

		[Token(Token = "0x600194B")]
		float GetBufferingProgress();

		[Token(Token = "0x600194C")]
		int GetBufferedTimeRangeCount();

		[Token(Token = "0x600194D")]
		bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs);

		[Token(Token = "0x600194E")]
		ErrorCode GetLastError();

		[Token(Token = "0x600194F")]
		long GetLastExtendedErrorCode();

		[Token(Token = "0x6001950")]
		void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 1);

		[Token(Token = "0x6001951")]
		void GrabAudio(float[] buffer, int floatCount, int channelCount);

		[Token(Token = "0x6001952")]
		int GetNumAudioChannels();

		[Token(Token = "0x6001953")]
		void SetAudioHeadRotation(Quaternion q);

		[Token(Token = "0x6001954")]
		void ResetAudioHeadRotation();

		[Token(Token = "0x6001955")]
		void SetAudioChannelMode(Audio360ChannelMode channelMode);

		[Token(Token = "0x6001956")]
		void SetAudioFocusEnabled(bool enabled);

		[Token(Token = "0x6001957")]
		void SetAudioFocusProperties(float offFocusLevel, float widthDegrees);

		[Token(Token = "0x6001958")]
		void SetAudioFocusRotation(Quaternion q);

		[Token(Token = "0x6001959")]
		void ResetAudioFocus();

		[Token(Token = "0x600195A")]
		bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount);

		[Token(Token = "0x600195B")]
		void SetPlayWithoutBuffering(bool playWithoutBuffering);

		[Token(Token = "0x600195C")]
		void SetKeyServerURL(string url);

		[Token(Token = "0x600195D")]
		void SetKeyServerAuthToken(string token);

		[Token(Token = "0x600195E")]
		void SetDecryptionKeyBase64(string key);

		[Token(Token = "0x600195F")]
		void SetDecryptionKey(byte[] key);
	}
	[Token(Token = "0x20003E9")]
	public interface IMediaInfo
	{
		[Token(Token = "0x6001960")]
		float GetDurationMs();

		[Token(Token = "0x6001961")]
		int GetVideoWidth();

		[Token(Token = "0x6001962")]
		int GetVideoHeight();

		[Token(Token = "0x6001963")]
		Rect GetCropRect();

		[Token(Token = "0x6001964")]
		float GetVideoFrameRate();

		[Token(Token = "0x6001965")]
		float GetVideoDisplayRate();

		[Token(Token = "0x6001966")]
		bool HasVideo();

		[Token(Token = "0x6001967")]
		bool HasAudio();

		[Token(Token = "0x6001968")]
		int GetAudioTrackCount();

		[Token(Token = "0x6001969")]
		string GetAudioTrackId(int index);

		[Token(Token = "0x600196A")]
		string GetCurrentAudioTrackId();

		[Token(Token = "0x600196B")]
		int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x600196C")]
		int GetVideoTrackCount();

		[Token(Token = "0x600196D")]
		string GetVideoTrackId(int index);

		[Token(Token = "0x600196E")]
		string GetCurrentVideoTrackId();

		[Token(Token = "0x600196F")]
		int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x6001970")]
		string GetPlayerDescription();

		[Token(Token = "0x6001971")]
		bool PlayerSupportsLinearColorSpace();

		[Token(Token = "0x6001972")]
		bool IsPlaybackStalled();

		[Token(Token = "0x6001973")]
		float[] GetTextureTransform();

		[Token(Token = "0x6001974")]
		long GetEstimatedTotalBandwidthUsed();
	}
	[Token(Token = "0x20003EA")]
	public interface IMediaProducer
	{
		[Token(Token = "0x6001975")]
		int GetTextureCount();

		[Token(Token = "0x6001976")]
		Texture GetTexture(int index = 0);

		[Token(Token = "0x6001977")]
		int GetTextureFrameCount();

		[Token(Token = "0x6001978")]
		bool SupportsTextureFrameCount();

		[Token(Token = "0x6001979")]
		long GetTextureTimeStamp();

		[Token(Token = "0x600197A")]
		bool RequiresVerticalFlip();

		[Token(Token = "0x600197B")]
		Matrix4x4 GetYpCbCrTransform();
	}
	[Token(Token = "0x20003EB")]
	public enum Platform
	{
		[Token(Token = "0x4001B18")]
		Windows = 0,
		[Token(Token = "0x4001B19")]
		MacOSX = 1,
		[Token(Token = "0x4001B1A")]
		iOS = 2,
		[Token(Token = "0x4001B1B")]
		tvOS = 3,
		[Token(Token = "0x4001B1C")]
		Android = 4,
		[Token(Token = "0x4001B1D")]
		WindowsPhone = 5,
		[Token(Token = "0x4001B1E")]
		WindowsUWP = 6,
		[Token(Token = "0x4001B1F")]
		WebGL = 7,
		[Token(Token = "0x4001B20")]
		PS4 = 8,
		[Token(Token = "0x4001B21")]
		Count = 9,
		[Token(Token = "0x4001B22")]
		Unknown = 100
	}
	[Token(Token = "0x20003EC")]
	public enum StereoPacking
	{
		[Token(Token = "0x4001B24")]
		None,
		[Token(Token = "0x4001B25")]
		TopBottom,
		[Token(Token = "0x4001B26")]
		LeftRight,
		[Token(Token = "0x4001B27")]
		CustomUV
	}
	[Token(Token = "0x20003ED")]
	public enum StereoEye
	{
		[Token(Token = "0x4001B29")]
		Both,
		[Token(Token = "0x4001B2A")]
		Left,
		[Token(Token = "0x4001B2B")]
		Right
	}
	[Token(Token = "0x20003EE")]
	public enum AlphaPacking
	{
		[Token(Token = "0x4001B2D")]
		None,
		[Token(Token = "0x4001B2E")]
		TopBottom,
		[Token(Token = "0x4001B2F")]
		LeftRight
	}
	[Token(Token = "0x20003EF")]
	public enum ErrorCode
	{
		[Token(Token = "0x4001B31")]
		None = 0,
		[Token(Token = "0x4001B32")]
		LoadFailed = 100,
		[Token(Token = "0x4001B33")]
		DecodeFailed = 200
	}
	[Token(Token = "0x20003F0")]
	public enum Orientation
	{
		[Token(Token = "0x4001B35")]
		Landscape,
		[Token(Token = "0x4001B36")]
		LandscapeFlipped,
		[Token(Token = "0x4001B37")]
		Portrait,
		[Token(Token = "0x4001B38")]
		PortraitFlipped
	}
	[Token(Token = "0x20003F1")]
	public enum VideoMapping
	{
		[Token(Token = "0x4001B3A")]
		Unknown,
		[Token(Token = "0x4001B3B")]
		Normal,
		[Token(Token = "0x4001B3C")]
		EquiRectangular360,
		[Token(Token = "0x4001B3D")]
		EquiRectangular180,
		[Token(Token = "0x4001B3E")]
		CubeMap3x2
	}
	[Token(Token = "0x20003F2")]
	public enum FileFormat
	{
		[Token(Token = "0x4001B40")]
		Unknown,
		[Token(Token = "0x4001B41")]
		HLS,
		[Token(Token = "0x4001B42")]
		DASH,
		[Token(Token = "0x4001B43")]
		SmoothStreaming
	}
	[Token(Token = "0x20003F3")]
	public static class Windows
	{
		[Token(Token = "0x20003F4")]
		public enum VideoApi
		{
			[Token(Token = "0x4001B47")]
			MediaFoundation,
			[Token(Token = "0x4001B48")]
			DirectShow
		}

		[Token(Token = "0x4001B44")]
		public const string AudioDeviceOutputName_Vive = "HTC VIVE USB Audio";

		[Token(Token = "0x4001B45")]
		public const string AudioDeviceOutputName_Rift = "Headphones (Rift Audio)";
	}
	[Token(Token = "0x20003F5")]
	public static class Android
	{
		[Token(Token = "0x20003F6")]
		public enum VideoApi
		{
			[Token(Token = "0x4001B4A")]
			MediaPlayer = 1,
			[Token(Token = "0x4001B4B")]
			ExoPlayer
		}
	}
	[Token(Token = "0x20003F7")]
	public static class WebGL
	{
		[Token(Token = "0x20003F8")]
		public enum ExternalLibrary
		{
			[Token(Token = "0x4001B4D")]
			None,
			[Token(Token = "0x4001B4E")]
			DashJs,
			[Token(Token = "0x4001B4F")]
			HlsJs,
			[Token(Token = "0x4001B50")]
			Custom
		}
	}
	[Token(Token = "0x20003F9")]
	public enum Audio360ChannelMode
	{
		[Token(Token = "0x4001B52")]
		TBE_8_2,
		[Token(Token = "0x4001B53")]
		TBE_8,
		[Token(Token = "0x4001B54")]
		TBE_6_2,
		[Token(Token = "0x4001B55")]
		TBE_6,
		[Token(Token = "0x4001B56")]
		TBE_4_2,
		[Token(Token = "0x4001B57")]
		TBE_4,
		[Token(Token = "0x4001B58")]
		TBE_8_PAIR0,
		[Token(Token = "0x4001B59")]
		TBE_8_PAIR1,
		[Token(Token = "0x4001B5A")]
		TBE_8_PAIR2,
		[Token(Token = "0x4001B5B")]
		TBE_8_PAIR3,
		[Token(Token = "0x4001B5C")]
		TBE_CHANNEL0,
		[Token(Token = "0x4001B5D")]
		TBE_CHANNEL1,
		[Token(Token = "0x4001B5E")]
		TBE_CHANNEL2,
		[Token(Token = "0x4001B5F")]
		TBE_CHANNEL3,
		[Token(Token = "0x4001B60")]
		TBE_CHANNEL4,
		[Token(Token = "0x4001B61")]
		TBE_CHANNEL5,
		[Token(Token = "0x4001B62")]
		TBE_CHANNEL6,
		[Token(Token = "0x4001B63")]
		TBE_CHANNEL7,
		[Token(Token = "0x4001B64")]
		HEADLOCKED_STEREO,
		[Token(Token = "0x4001B65")]
		HEADLOCKED_CHANNEL0,
		[Token(Token = "0x4001B66")]
		HEADLOCKED_CHANNEL1,
		[Token(Token = "0x4001B67")]
		AMBIX_4,
		[Token(Token = "0x4001B68")]
		AMBIX_9,
		[Token(Token = "0x4001B69")]
		AMBIX_9_2,
		[Token(Token = "0x4001B6A")]
		AMBIX_16,
		[Token(Token = "0x4001B6B")]
		AMBIX_16_2,
		[Token(Token = "0x4001B6C")]
		STEREO,
		[Token(Token = "0x4001B6D")]
		INVALID
	}
	[Token(Token = "0x20003FA")]
	public struct TimeRange
	{
		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float startTime;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float duration;
	}
	[Token(Token = "0x20003FB")]
	public class Subtitle
	{
		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int timeStartMs;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int timeEndMs;

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xDA92DC", Offset = "0xDA92DC", VA = "0xDA92DC")]
		public bool IsBefore(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xD8F68C", Offset = "0xD8F68C", VA = "0xD8F68C")]
		public bool IsTime(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xD9B4F0", Offset = "0xD9B4F0", VA = "0xD9B4F0")]
		public Subtitle()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public static class Helper
	{
		[Token(Token = "0x4001B74")]
		public const string ScriptVersion = "1.10.1";

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xD9A16C", Offset = "0xD9A16C", VA = "0xD9A16C")]
		public static string GetName(Platform platform)
		{
			return null;
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xD9A254", Offset = "0xD9A254", VA = "0xD9A254")]
		public static string GetErrorMessage(ErrorCode code)
		{
			return null;
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xD9A2FC", Offset = "0xD9A2FC", VA = "0xD9A2FC")]
		public static string[] GetPlatformNames()
		{
			return null;
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xD9A6C4", Offset = "0xD9A6C4", VA = "0xD9A6C4")]
		public static void LogInfo(string message, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xD9A7C4", Offset = "0xD9A7C4", VA = "0xD9A7C4")]
		public static string GetTimeString(float totalSeconds, bool showMilliseconds = false)
		{
			return null;
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xD98678", Offset = "0xD98678", VA = "0xD98678")]
		public static Orientation GetOrientation(float[] t)
		{
			return default(Orientation);
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD98940", Offset = "0xD98940", VA = "0xD98940")]
		public static Matrix4x4 GetMatrixForOrientation(Orientation ori)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD9ABDC", Offset = "0xD9ABDC", VA = "0xD9ABDC")]
		public static void SetupStereoEyeModeMaterial(Material material, StereoEye mode)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xD8BA34", Offset = "0xD8BA34", VA = "0xD8BA34")]
		public static void SetupLayoutMaterial(Material material, VideoMapping mapping)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xD8BB10", Offset = "0xD8BB10", VA = "0xD8BB10")]
		public static void SetupStereoMaterial(Material material, StereoPacking packing, bool displayDebugTinting)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xD8BCD0", Offset = "0xD8BCD0", VA = "0xD8BCD0")]
		public static void SetupAlphaPackedMaterial(Material material, AlphaPacking packing)
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xD8BE0C", Offset = "0xD8BE0C", VA = "0xD8BE0C")]
		public static void SetupGammaMaterial(Material material, bool playerSupportsLinear)
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xD9ADF8", Offset = "0xD9ADF8", VA = "0xD9ADF8")]
		public static int ConvertTimeSecondsToFrame(float seconds, float frameRate)
		{
			return default(int);
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xD9AE6C", Offset = "0xD9AE6C", VA = "0xD9AE6C")]
		public static float ConvertFrameToTimeSeconds(int frame, float frameRate)
		{
			return default(float);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xD9AE8C", Offset = "0xD9AE8C", VA = "0xD9AE8C")]
		public static float FindNextKeyFrameTimeSeconds(float seconds, float frameRate, int keyFrameInterval)
		{
			return default(float);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xD9AF48", Offset = "0xD9AF48", VA = "0xD9AF48")]
		public static DateTime ConvertSecondsSince1970ToDateTime(double secondsSince1970)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xD953B4", Offset = "0xD953B4", VA = "0xD953B4")]
		public static void DrawTexture(Rect screenRect, Texture texture, ScaleMode scaleMode, AlphaPacking alphaPacking, Material material)
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xD9B000", Offset = "0xD9B000", VA = "0xD9B000")]
		public static Texture2D GetReadableTexture(Texture inputTexture, bool requiresVerticalFlip, Orientation ori, Texture2D targetTexture)
		{
			return null;
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xD9B364", Offset = "0xD9B364", VA = "0xD9B364")]
		private static int ParseTimeToMs(string text)
		{
			return default(int);
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD8F0E8", Offset = "0xD8F0E8", VA = "0xD8F0E8")]
		public static List<Subtitle> LoadSubtitlesSRT(string data)
		{
			return null;
		}
	}
	[Token(Token = "0x20003FD")]
	public sealed class NullMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isPlaying;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _isPaused;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _currentTime;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _volume;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _playbackRate;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _bLoop;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _Width;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _height;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Texture2D _texture;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Texture2D _texture_AVPro;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Texture2D _texture_AVPro1;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _fakeFlipTime;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _frameCount;

		[Token(Token = "0x4001B82")]
		private const float FrameRate = 10f;

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xDA3CC4", Offset = "0xDA3CC4", VA = "0xDA3CC4", Slot = "97")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xDA3D0C", Offset = "0xDA3D0C", VA = "0xDA3D0C", Slot = "98")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xDA3ECC", Offset = "0xDA3ECC", VA = "0xDA3ECC", Slot = "103")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xDA3F0C", Offset = "0xDA3F0C", VA = "0xDA3F0C", Slot = "104")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xDA3F18", Offset = "0xDA3F18", VA = "0xDA3F18", Slot = "105")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xDA3F20", Offset = "0xDA3F20", VA = "0xDA3F20", Slot = "106")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xDA3F28", Offset = "0xDA3F28", VA = "0xDA3F28", Slot = "107")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xDA3F30", Offset = "0xDA3F30", VA = "0xDA3F30", Slot = "125")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xDA3F38", Offset = "0xDA3F38", VA = "0xDA3F38", Slot = "126")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xDA3F40", Offset = "0xDA3F40", VA = "0xDA3F40", Slot = "108")]
		public override void Play()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xDA3F50", Offset = "0xDA3F50", VA = "0xDA3F50", Slot = "109")]
		public override void Pause()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xDA3F5C", Offset = "0xDA3F5C", VA = "0xDA3F5C", Slot = "110")]
		public override void Stop()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xDA3F64", Offset = "0xDA3F64", VA = "0xDA3F64", Slot = "127")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xDA3F6C", Offset = "0xDA3F6C", VA = "0xDA3F6C", Slot = "128")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xDA3F74", Offset = "0xDA3F74", VA = "0xDA3F74", Slot = "129")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xDA3F7C", Offset = "0xDA3F7C", VA = "0xDA3F7C", Slot = "130")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xDA3FC0", Offset = "0xDA3FC0", VA = "0xDA3FC0", Slot = "131")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xDA3FC8", Offset = "0xDA3FC8", VA = "0xDA3FC8", Slot = "120")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xDA3FD4", Offset = "0xDA3FD4", VA = "0xDA3FD4", Slot = "121")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xDA3FDC", Offset = "0xDA3FDC", VA = "0xDA3FDC", Slot = "122")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xDA3FE4", Offset = "0xDA3FE4", VA = "0xDA3FE4", Slot = "124")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xDA3FEC", Offset = "0xDA3FEC", VA = "0xDA3FEC", Slot = "139")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xDA3FF4", Offset = "0xDA3FF4", VA = "0xDA3FF4", Slot = "140")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xDA3FFC", Offset = "0xDA3FFC", VA = "0xDA3FFC", Slot = "143")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xDA4004", Offset = "0xDA4004", VA = "0xDA4004", Slot = "112")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xDA400C", Offset = "0xDA400C", VA = "0xDA400C", Slot = "113")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xDA4014", Offset = "0xDA4014", VA = "0xDA4014", Slot = "114")]
		public override void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xDA401C", Offset = "0xDA401C", VA = "0xDA401C", Slot = "115")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xDA4024", Offset = "0xDA4024", VA = "0xDA4024", Slot = "119")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xDA402C", Offset = "0xDA402C", VA = "0xDA402C", Slot = "118")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xDA4034", Offset = "0xDA4034", VA = "0xDA4034", Slot = "174")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xDA403C", Offset = "0xDA403C", VA = "0xDA403C", Slot = "146")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xDA4040", Offset = "0xDA4040", VA = "0xDA4040", Slot = "147")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xDA4048", Offset = "0xDA4048", VA = "0xDA4048", Slot = "148")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xDA4050", Offset = "0xDA4050", VA = "0xDA4050", Slot = "150")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xDA4058", Offset = "0xDA4058", VA = "0xDA4058", Slot = "152")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xDA4060", Offset = "0xDA4060", VA = "0xDA4060", Slot = "154")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xDA4068", Offset = "0xDA4068", VA = "0xDA4068", Slot = "155")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xDA406C", Offset = "0xDA406C", VA = "0xDA406C", Slot = "166")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xDA4074", Offset = "0xDA4074", VA = "0xDA4074", Slot = "168")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xDA407C", Offset = "0xDA407C", VA = "0xDA407C", Slot = "156")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xDA40C4", Offset = "0xDA40C4", VA = "0xDA40C4", Slot = "157")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xDA40CC", Offset = "0xDA40CC", VA = "0xDA40CC", Slot = "169")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xDA40D0", Offset = "0xDA40D0", VA = "0xDA40D0", Slot = "170")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xDA4118", Offset = "0xDA4118", VA = "0xDA4118", Slot = "171")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xDA4120", Offset = "0xDA4120", VA = "0xDA4120", Slot = "172")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xDA4128", Offset = "0xDA4128", VA = "0xDA4128", Slot = "175")]
		public override void Update()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xDA428C", Offset = "0xDA428C", VA = "0xDA428C", Slot = "176")]
		public override void Render()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xDA4290", Offset = "0xDA4290", VA = "0xDA4290", Slot = "177")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xDA0684", Offset = "0xDA0684", VA = "0xDA0684")]
		public NullMediaPlayer()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class Resampler
	{
		[Token(Token = "0x20003FF")]
		private class TimestampedRenderTexture
		{
			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderTexture texture;

			[Token(Token = "0x4001B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long timestamp;

			[Token(Token = "0x4001B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool used;

			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xDA7808", Offset = "0xDA7808", VA = "0xDA7808")]
			public TimestampedRenderTexture()
			{
			}
		}

		[Token(Token = "0x2000400")]
		public enum ResampleMode
		{
			[Token(Token = "0x4001B9E")]
			POINT,
			[Token(Token = "0x4001B9F")]
			LINEAR
		}

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TimestampedRenderTexture[]> _buffer;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture[] _outputTexture;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _start;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _end;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bufferSize;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long _baseTimestamp;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _elapsedTimeSinceBase;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blendMat;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResampleMode _resampleMode;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _name;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private long _lastTimeStamp;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _droppedFrames;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private long _lastDisplayedTimestamp;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _frameDisplayedTimer;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private long _currentDisplayedTimestamp;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672378", Offset = "0x672378")]
		private float <LastT>k__BackingField;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x672388", Offset = "0x672388")]
		private long <TextureTimeStamp>k__BackingField;

		[Token(Token = "0x4001B95")]
		private const string ShaderPropT = "_t";

		[Token(Token = "0x4001B96")]
		private const string ShaderPropAftertex = "_AfterTex";

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _propAfterTex;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _propT;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _videoFrameRate;

		[Token(Token = "0x1700035F")]
		public int DroppedFrames
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0xD93DA0", Offset = "0xD93DA0", VA = "0xD93DA0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000360")]
		public int FrameDisplayedTimer
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0xD93DA8", Offset = "0xD93DA8", VA = "0xD93DA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000361")]
		public long BaseTimestamp
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xDA6B44", Offset = "0xDA6B44", VA = "0xDA6B44")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0xDA6B4C", Offset = "0xDA6B4C", VA = "0xDA6B4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public float ElapsedTimeSinceBase
		{
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xDA6B54", Offset = "0xDA6B54", VA = "0xDA6B54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0xDA6B5C", Offset = "0xDA6B5C", VA = "0xDA6B5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public float LastT
		{
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0xDA6B64", Offset = "0xDA6B64", VA = "0xDA6B64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x677F34", Offset = "0x677F34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0xDA6B6C", Offset = "0xDA6B6C", VA = "0xDA6B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x677F44", Offset = "0x677F44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public long TextureTimeStamp
		{
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0xD93D98", Offset = "0xD93D98", VA = "0xD93D98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x677F54", Offset = "0x677F54")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0xDA6B74", Offset = "0xDA6B74", VA = "0xDA6B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x677F64", Offset = "0x677F64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public Texture[] OutputTexture
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0xD8B1F8", Offset = "0xD8B1F8", VA = "0xD8B1F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xDA6B7C", Offset = "0xDA6B7C", VA = "0xDA6B7C")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xD9E868", Offset = "0xD9E868", VA = "0xD9E868")]
		public Resampler(MediaPlayer player, string name, int bufferSize = 2, ResampleMode resampleMode = ResampleMode.LINEAR)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xD9D424", Offset = "0xD9D424", VA = "0xD9D424")]
		public void Reset()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xD9FDFC", Offset = "0xD9FDFC", VA = "0xD9FDFC")]
		public void Release()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xDA6E10", Offset = "0xDA6E10", VA = "0xDA6E10")]
		private void ReleaseRenderTextures()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xDA70E8", Offset = "0xDA70E8", VA = "0xDA70E8")]
		private void ConstructRenderTextures()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xDA7810", Offset = "0xDA7810", VA = "0xDA7810")]
		private bool CheckRenderTexturesValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xDA7D0C", Offset = "0xDA7D0C", VA = "0xDA7D0C")]
		private int FindBeforeFrameIndex(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xDA7F34", Offset = "0xDA7F34", VA = "0xDA7F34")]
		private int FindClosestFrame(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xDA814C", Offset = "0xDA814C", VA = "0xDA814C")]
		private void PointUpdate()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xDA8380", Offset = "0xDA8380", VA = "0xDA8380")]
		private void SampleFrame(int frameIdx, int bufferIdx)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xDA8568", Offset = "0xDA8568", VA = "0xDA8568")]
		private void SampleFrames(int bufferIdx, int frameIdx1, int frameIdx2, float t)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xDA891C", Offset = "0xDA891C", VA = "0xDA891C")]
		private void LinearUpdate()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xDA6CAC", Offset = "0xDA6CAC", VA = "0xDA6CAC")]
		private void InvalidateBuffer()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xDA8B84", Offset = "0xDA8B84", VA = "0xDA8B84")]
		private float GuessFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xD9EAE8", Offset = "0xD9EAE8", VA = "0xD9EAE8")]
		public void Update()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xD9FB44", Offset = "0xD9FB44", VA = "0xD9FB44")]
		public void UpdateTimestamp()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public abstract class Stream
	{
		[Token(Token = "0x2000402")]
		public struct Chunk
		{
			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;
		}

		[Token(Token = "0x17000366")]
		public abstract int Width
		{
			[Token(Token = "0x60019E2")]
			get;
		}

		[Token(Token = "0x17000367")]
		public abstract int Height
		{
			[Token(Token = "0x60019E3")]
			get;
		}

		[Token(Token = "0x17000368")]
		public abstract int Bandwidth
		{
			[Token(Token = "0x60019E4")]
			get;
		}

		[Token(Token = "0x17000369")]
		public abstract string URL
		{
			[Token(Token = "0x60019E5")]
			get;
		}

		[Token(Token = "0x60019E6")]
		public abstract List<Chunk> GetAllChunks();

		[Token(Token = "0x60019E7")]
		public abstract List<Chunk> GetChunks();

		[Token(Token = "0x60019E8")]
		public abstract List<Stream> GetAllStreams();

		[Token(Token = "0x60019E9")]
		public abstract List<Stream> GetStreams();

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xD99EBC", Offset = "0xD99EBC", VA = "0xD99EBC")]
		protected Stream()
		{
		}
	}
}
namespace Chronus.Common
{
	[Serializable]
	[Token(Token = "0x2000403")]
	public class StaticEasy
	{
		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int _id;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int _SealClear01;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _SealClear02;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _SealTime;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _HP_EnemyA01;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _HP_EnemyA02;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _HP_EnemyB02;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _HP_Boss;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _Respawn_EnemyA01;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int _Respawn_EnemyA02;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _Respawn_EnemyB02;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _Speed_EnemyA01;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _Speed_EnemyA02;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int _ShotChargeTime;

		[Token(Token = "0x1700036A")]
		public int id
		{
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x842C7C", Offset = "0x842C7C", VA = "0x842C7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036B")]
		public int SealClear01
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x842C84", Offset = "0x842C84", VA = "0x842C84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036C")]
		public int SealClear02
		{
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x842C8C", Offset = "0x842C8C", VA = "0x842C8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036D")]
		public int SealTime
		{
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0x842C94", Offset = "0x842C94", VA = "0x842C94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036E")]
		public int HP_EnemyA01
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x842C9C", Offset = "0x842C9C", VA = "0x842C9C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036F")]
		public int HP_EnemyA02
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x842CA4", Offset = "0x842CA4", VA = "0x842CA4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000370")]
		public int HP_EnemyB02
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x842CAC", Offset = "0x842CAC", VA = "0x842CAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000371")]
		public int HP_Boss
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x842CB4", Offset = "0x842CB4", VA = "0x842CB4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000372")]
		public int Respawn_EnemyA01
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x842CBC", Offset = "0x842CBC", VA = "0x842CBC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000373")]
		public int Respawn_EnemyA02
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x842CC4", Offset = "0x842CC4", VA = "0x842CC4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000374")]
		public int Respawn_EnemyB02
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x842CCC", Offset = "0x842CCC", VA = "0x842CCC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000375")]
		public float Speed_EnemyA01
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x842CD4", Offset = "0x842CD4", VA = "0x842CD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000376")]
		public float Speed_EnemyA02
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x842CDC", Offset = "0x842CDC", VA = "0x842CDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000377")]
		public int ShotChargeTime
		{
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x842CE4", Offset = "0x842CE4", VA = "0x842CE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x842A80", Offset = "0x842A80", VA = "0x842A80")]
		public static StaticEasy Get(int id)
		{
			return null;
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x842CEC", Offset = "0x842CEC", VA = "0x842CEC")]
		public float ConvFloat(string s)
		{
			return default(float);
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x842E14", Offset = "0x842E14", VA = "0x842E14")]
		public StaticEasy(MasterData.Row row)
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class StaticEasyManager
	{
		[Serializable]
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667850", Offset = "0x667850")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MasterData.Row, StaticEasy> <>9__10_0;

			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<StaticEasy, int> <>9__10_1;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<StaticEasy, StaticEasy> <>9__10_2;

			[Token(Token = "0x6001A03")]
			[Address(RVA = "0x8435D4", Offset = "0x8435D4", VA = "0x8435D4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A04")]
			[Address(RVA = "0x8435DC", Offset = "0x8435DC", VA = "0x8435DC")]
			internal StaticEasy <Reload>b__10_0(MasterData.Row row)
			{
				return null;
			}

			[Token(Token = "0x6001A05")]
			[Address(RVA = "0x84363C", Offset = "0x84363C", VA = "0x84363C")]
			internal int <Reload>b__10_1(StaticEasy m)
			{
				return default(int);
			}

			[Token(Token = "0x6001A06")]
			[Address(RVA = "0x843668", Offset = "0x843668", VA = "0x843668")]
			internal StaticEasy <Reload>b__10_2(StaticEasy m)
			{
				return null;
			}
		}

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StaticEasyManager _instance;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<int, StaticEasy> masterDictionary;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<StaticEasy> masterList;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string assetFile;

		[Token(Token = "0x17000378")]
		public static StaticEasyManager instance
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x842AB4", Offset = "0x842AB4", VA = "0x842AB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x8431E4", Offset = "0x8431E4", VA = "0x8431E4")]
		private StaticEasyManager()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x842B5C", Offset = "0x842B5C", VA = "0x842B5C")]
		public StaticEasy Get(int id)
		{
			return null;
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x8434C0", Offset = "0x8434C0", VA = "0x8434C0")]
		public StaticEasy GetSafe(int id)
		{
			return null;
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x843568", Offset = "0x843568", VA = "0x843568")]
		public List<StaticEasy> GetAll()
		{
			return null;
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x84323C", Offset = "0x84323C", VA = "0x84323C")]
		public void Reload(string assetFile = "")
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000406")]
	public class StaticHard
	{
		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int _id;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int _SealClear01;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _SealClear02;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _SealTime;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _HP_EnemyA01;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _HP_EnemyA02;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _HP_EnemyB02;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _HP_Boss;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _Respawn_EnemyA01;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int _Respawn_EnemyA02;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _Respawn_EnemyB02;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _Speed_EnemyA01;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _Speed_EnemyA02;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int _ShotChargeTime;

		[Token(Token = "0x17000379")]
		public int id
		{
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0x84386C", Offset = "0x84386C", VA = "0x84386C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037A")]
		public int SealClear01
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0x843874", Offset = "0x843874", VA = "0x843874")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037B")]
		public int SealClear02
		{
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x84387C", Offset = "0x84387C", VA = "0x84387C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037C")]
		public int SealTime
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x843884", Offset = "0x843884", VA = "0x843884")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037D")]
		public int HP_EnemyA01
		{
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0x84388C", Offset = "0x84388C", VA = "0x84388C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037E")]
		public int HP_EnemyA02
		{
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x843894", Offset = "0x843894", VA = "0x843894")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037F")]
		public int HP_EnemyB02
		{
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x84389C", Offset = "0x84389C", VA = "0x84389C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000380")]
		public int HP_Boss
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x8438A4", Offset = "0x8438A4", VA = "0x8438A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000381")]
		public int Respawn_EnemyA01
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x8438AC", Offset = "0x8438AC", VA = "0x8438AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000382")]
		public int Respawn_EnemyA02
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x8438B4", Offset = "0x8438B4", VA = "0x8438B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000383")]
		public int Respawn_EnemyB02
		{
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0x8438BC", Offset = "0x8438BC", VA = "0x8438BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000384")]
		public float Speed_EnemyA01
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0x8438C4", Offset = "0x8438C4", VA = "0x8438C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000385")]
		public float Speed_EnemyA02
		{
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0x8438CC", Offset = "0x8438CC", VA = "0x8438CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000386")]
		public int ShotChargeTime
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x8438D4", Offset = "0x8438D4", VA = "0x8438D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x843670", Offset = "0x843670", VA = "0x843670")]
		public static StaticHard Get(int id)
		{
			return null;
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x8438DC", Offset = "0x8438DC", VA = "0x8438DC")]
		public float ConvFloat(string s)
		{
			return default(float);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x843A04", Offset = "0x843A04", VA = "0x843A04")]
		public StaticHard(MasterData.Row row)
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class StaticHardManager
	{
		[Serializable]
		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667860", Offset = "0x667860")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MasterData.Row, StaticHard> <>9__10_0;

			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<StaticHard, int> <>9__10_1;

			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<StaticHard, StaticHard> <>9__10_2;

			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0x8441C4", Offset = "0x8441C4", VA = "0x8441C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x8441CC", Offset = "0x8441CC", VA = "0x8441CC")]
			internal StaticHard <Reload>b__10_0(MasterData.Row row)
			{
				return null;
			}

			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x84422C", Offset = "0x84422C", VA = "0x84422C")]
			internal int <Reload>b__10_1(StaticHard m)
			{
				return default(int);
			}

			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x844258", Offset = "0x844258", VA = "0x844258")]
			internal StaticHard <Reload>b__10_2(StaticHard m)
			{
				return null;
			}
		}

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StaticHardManager _instance;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<int, StaticHard> masterDictionary;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<StaticHard> masterList;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string assetFile;

		[Token(Token = "0x17000387")]
		public static StaticHardManager instance
		{
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0x8436A4", Offset = "0x8436A4", VA = "0x8436A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x843DD4", Offset = "0x843DD4", VA = "0x843DD4")]
		private StaticHardManager()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x84374C", Offset = "0x84374C", VA = "0x84374C")]
		public StaticHard Get(int id)
		{
			return null;
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x8440B0", Offset = "0x8440B0", VA = "0x8440B0")]
		public StaticHard GetSafe(int id)
		{
			return null;
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x844158", Offset = "0x844158", VA = "0x844158")]
		public List<StaticHard> GetAll()
		{
			return null;
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x843E2C", Offset = "0x843E2C", VA = "0x843E2C")]
		public void Reload(string assetFile = "")
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000409")]
	public class StaticHound
	{
		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int _id;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int _SealClear01;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _SealClear02;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _SealTime;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _HP_EnemyA01;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _HP_EnemyA02;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _HP_EnemyB02;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _HP_Boss;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _Respawn_EnemyA01;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int _Respawn_EnemyA02;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _Respawn_EnemyB02;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _Speed_EnemyA01;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _Speed_EnemyA02;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int _ShotChargeTime;

		[Token(Token = "0x17000388")]
		public int id
		{
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x84445C", Offset = "0x84445C", VA = "0x84445C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000389")]
		public int SealClear01
		{
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0x844464", Offset = "0x844464", VA = "0x844464")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038A")]
		public int SealClear02
		{
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x84446C", Offset = "0x84446C", VA = "0x84446C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038B")]
		public int SealTime
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x844474", Offset = "0x844474", VA = "0x844474")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038C")]
		public int HP_EnemyA01
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x84447C", Offset = "0x84447C", VA = "0x84447C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038D")]
		public int HP_EnemyA02
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x844484", Offset = "0x844484", VA = "0x844484")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038E")]
		public int HP_EnemyB02
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x84448C", Offset = "0x84448C", VA = "0x84448C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038F")]
		public int HP_Boss
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x844494", Offset = "0x844494", VA = "0x844494")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000390")]
		public int Respawn_EnemyA01
		{
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x84449C", Offset = "0x84449C", VA = "0x84449C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000391")]
		public int Respawn_EnemyA02
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x8444A4", Offset = "0x8444A4", VA = "0x8444A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000392")]
		public int Respawn_EnemyB02
		{
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x8444AC", Offset = "0x8444AC", VA = "0x8444AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000393")]
		public float Speed_EnemyA01
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x8444B4", Offset = "0x8444B4", VA = "0x8444B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000394")]
		public float Speed_EnemyA02
		{
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x8444BC", Offset = "0x8444BC", VA = "0x8444BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000395")]
		public int ShotChargeTime
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x8444C4", Offset = "0x8444C4", VA = "0x8444C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x844260", Offset = "0x844260", VA = "0x844260")]
		public static StaticHound Get(int id)
		{
			return null;
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x8444CC", Offset = "0x8444CC", VA = "0x8444CC")]
		public float ConvFloat(string s)
		{
			return default(float);
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x8445F4", Offset = "0x8445F4", VA = "0x8445F4")]
		public StaticHound(MasterData.Row row)
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class StaticHoundManager
	{
		[Serializable]
		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667870", Offset = "0x667870")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MasterData.Row, StaticHound> <>9__10_0;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<StaticHound, int> <>9__10_1;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<StaticHound, StaticHound> <>9__10_2;

			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x844DB4", Offset = "0x844DB4", VA = "0x844DB4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x844DBC", Offset = "0x844DBC", VA = "0x844DBC")]
			internal StaticHound <Reload>b__10_0(MasterData.Row row)
			{
				return null;
			}

			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0x844E1C", Offset = "0x844E1C", VA = "0x844E1C")]
			internal int <Reload>b__10_1(StaticHound m)
			{
				return default(int);
			}

			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0x844E48", Offset = "0x844E48", VA = "0x844E48")]
			internal StaticHound <Reload>b__10_2(StaticHound m)
			{
				return null;
			}
		}

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StaticHoundManager _instance;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<int, StaticHound> masterDictionary;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<StaticHound> masterList;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string assetFile;

		[Token(Token = "0x17000396")]
		public static StaticHoundManager instance
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x844294", Offset = "0x844294", VA = "0x844294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x8449C4", Offset = "0x8449C4", VA = "0x8449C4")]
		private StaticHoundManager()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x84433C", Offset = "0x84433C", VA = "0x84433C")]
		public StaticHound Get(int id)
		{
			return null;
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x844CA0", Offset = "0x844CA0", VA = "0x844CA0")]
		public StaticHound GetSafe(int id)
		{
			return null;
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x844D48", Offset = "0x844D48", VA = "0x844D48")]
		public List<StaticHound> GetAll()
		{
			return null;
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x844A1C", Offset = "0x844A1C", VA = "0x844A1C")]
		public void Reload(string assetFile = "")
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040C")]
	public class StaticMaster
	{
		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int _staticid;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _Value;

		[Token(Token = "0x17000397")]
		public int staticid
		{
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0x84504C", Offset = "0x84504C", VA = "0x84504C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000398")]
		public float Value
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0x845054", Offset = "0x845054", VA = "0x845054")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x844E50", Offset = "0x844E50", VA = "0x844E50")]
		public static StaticMaster Get(int id)
		{
			return null;
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x84505C", Offset = "0x84505C", VA = "0x84505C")]
		public float ConvFloat(string s)
		{
			return default(float);
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x845184", Offset = "0x845184", VA = "0x845184")]
		public StaticMaster(MasterData.Row row)
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class StaticMasterManager
	{
		[Serializable]
		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667880", Offset = "0x667880")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MasterData.Row, StaticMaster> <>9__10_0;

			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<StaticMaster, int> <>9__10_1;

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<StaticMaster, StaticMaster> <>9__10_2;

			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x845678", Offset = "0x845678", VA = "0x845678")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x845680", Offset = "0x845680", VA = "0x845680")]
			internal StaticMaster <Reload>b__10_0(MasterData.Row row)
			{
				return null;
			}

			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0x8456E0", Offset = "0x8456E0", VA = "0x8456E0")]
			internal int <Reload>b__10_1(StaticMaster m)
			{
				return default(int);
			}

			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x84570C", Offset = "0x84570C", VA = "0x84570C")]
			internal StaticMaster <Reload>b__10_2(StaticMaster m)
			{
				return null;
			}
		}

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StaticMasterManager _instance;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<int, StaticMaster> masterDictionary;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<StaticMaster> masterList;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string assetFile;

		[Token(Token = "0x17000399")]
		public static StaticMasterManager instance
		{
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0x844E84", Offset = "0x844E84", VA = "0x844E84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x845288", Offset = "0x845288", VA = "0x845288")]
		private StaticMasterManager()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x844F2C", Offset = "0x844F2C", VA = "0x844F2C")]
		public StaticMaster Get(int id)
		{
			return null;
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x845564", Offset = "0x845564", VA = "0x845564")]
		public StaticMaster GetSafe(int id)
		{
			return null;
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x84560C", Offset = "0x84560C", VA = "0x84560C")]
		public List<StaticMaster> GetAll()
		{
			return null;
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x8452E0", Offset = "0x8452E0", VA = "0x8452E0")]
		public void Reload(string assetFile = "")
		{
		}
	}
}
namespace jp.co.sundenshi.mvr.SynthesizedRecording
{
	[Token(Token = "0x200040F")]
	public class SynthesizedMicRecording : MonoBehaviour
	{
		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x667890", Offset = "0x667890")]
		private sealed class <StopRecord>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SynthesizedMicRecording <>4__this;

			[Token(Token = "0x1700039B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A65")]
				[Address(RVA = "0x868A70", Offset = "0x868A70", VA = "0x868A70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A67")]
				[Address(RVA = "0x868AE0", Offset = "0x868AE0", VA = "0x868AE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A62")]
			[Address(RVA = "0x867C04", Offset = "0x867C04", VA = "0x867C04")]
			[DebuggerHidden]
			public <StopRecord>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001A63")]
			[Address(RVA = "0x8689D8", Offset = "0x8689D8", VA = "0x8689D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A64")]
			[Address(RVA = "0x8689DC", Offset = "0x8689DC", VA = "0x8689DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x868A78", Offset = "0x868A78", VA = "0x868A78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6678A0", Offset = "0x6678A0")]
		private sealed class <StartRecordCoroutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SynthesizedMicRecording <>4__this;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float[] <buffer>5__2;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <head>5__3;

			[Token(Token = "0x1700039D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A6C")]
				[Address(RVA = "0x868960", Offset = "0x868960", VA = "0x868960", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A6E")]
				[Address(RVA = "0x8689D0", Offset = "0x8689D0", VA = "0x8689D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x867C30", Offset = "0x867C30", VA = "0x867C30")]
			[DebuggerHidden]
			public <StartRecordCoroutine>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x86844C", Offset = "0x86844C", VA = "0x86844C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x868508", Offset = "0x868508", VA = "0x868508", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x868468", Offset = "0x868468", VA = "0x868468")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0x868968", Offset = "0x868968", VA = "0x868968", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int Frequency;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int MaxLengthSec;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string outputPath;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string filename;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float volumeRate;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent OnFinish;

		[Token(Token = "0x4001BF3")]
		private const int HeaderLength = 44;

		[Token(Token = "0x4001BF4")]
		private const int RescaleFactor = 32767;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FileStream _fileStream;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioClip _audioClip;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _micName;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _recordingCoroutine;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6726B8", Offset = "0x6726B8")]
		private bool <IsRecording>k__BackingField;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SynthesizedMicRecording synthesizedMicRecording;

		[Token(Token = "0x1700039A")]
		public bool IsRecording
		{
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0x867840", Offset = "0x867840", VA = "0x867840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x677F74", Offset = "0x677F74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x867848", Offset = "0x867848", VA = "0x867848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x677F84", Offset = "0x677F84")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x867854", Offset = "0x867854", VA = "0x867854")]
		public static SynthesizedMicRecording GetSynthesizedMicRecording()
		{
			return null;
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x8678BC", Offset = "0x8678BC", VA = "0x8678BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x867924", Offset = "0x867924", VA = "0x867924")]
		public void SetOutputPath(string _path)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x86792C", Offset = "0x86792C", VA = "0x86792C")]
		public string GetOutputPath()
		{
			return null;
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x867934", Offset = "0x867934", VA = "0x867934")]
		public void SetFileName(string _name)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x86793C", Offset = "0x86793C", VA = "0x86793C")]
		public string GetFileName()
		{
			return null;
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x867944", Offset = "0x867944", VA = "0x867944")]
		public void SetVolumeRate(float _volume)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x867960", Offset = "0x867960", VA = "0x867960")]
		public float GetVolumeRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x867968", Offset = "0x867968", VA = "0x867968")]
		public void StartRecord()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x867AF8", Offset = "0x867AF8", VA = "0x867AF8")]
		public void StopRecordNoWait()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x867B90", Offset = "0x867B90", VA = "0x867B90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x677F94", Offset = "0x677F94")]
		public IEnumerator StopRecord()
		{
			return null;
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x867A84", Offset = "0x867A84", VA = "0x867A84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x677FF8", Offset = "0x677FF8")]
		private IEnumerator StartRecordCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x867C5C", Offset = "0x867C5C", VA = "0x867C5C")]
		private static float[] CreateWriteBuffer(int pos, int head, float[] buffer)
		{
			return null;
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x867D90", Offset = "0x867D90", VA = "0x867D90")]
		private void ConvertAndWrite(float[] dataSource)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x867FA8", Offset = "0x867FA8", VA = "0x867FA8")]
		private void WriteWavHeader(FileStream fileStream, int channels, int samplingFrequency)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x8683CC", Offset = "0x8683CC", VA = "0x8683CC")]
		public SynthesizedMicRecording()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class SynthesizedRecording : MonoBehaviour
	{
		[Token(Token = "0x2000413")]
		public enum CameraSize
		{
			[Token(Token = "0x4001C19")]
			W1920_H1080,
			[Token(Token = "0x4001C1A")]
			W1080_H1920,
			[Token(Token = "0x4001C1B")]
			W1280_H720
		}

		[Serializable]
		[Token(Token = "0x2000414")]
		public class ActionForAudioMixer
		{
			[Token(Token = "0x4001C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixer target;

			[Token(Token = "0x4001C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float volume;

			[Token(Token = "0x6001A89")]
			[Address(RVA = "0x86A63C", Offset = "0x86A63C", VA = "0x86A63C")]
			public ActionForAudioMixer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000415")]
		public class ActionForGameObject
		{
			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject target;

			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string sendingMessage;

			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x86A644", Offset = "0x86A644", VA = "0x86A644")]
			public ActionForGameObject()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000416")]
		public class ActionTemplate
		{
			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ActionForAudioMixer audioMixer;

			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ActionForGameObject gameObject;

			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x86A64C", Offset = "0x86A64C", VA = "0x86A64C")]
			public ActionTemplate()
			{
			}
		}

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SynthesizedRecording synthesizedRecording;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6726C8", Offset = "0x6726C8")]
		private Camera firstCamera;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject audioListener;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string outputPath;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string defaultFilename;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string startFlagFilename;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CameraSize movieSize;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private CameraSize captureSize;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CaptureBase.FrameRate fps;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float volumeRate;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ActionTemplate[] startingAction;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ActionTemplate[] endingAction;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6727B4", Offset = "0x6727B4")]
		[SerializeField]
		private Camera secondCamera;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private CaptureFromTexture movieCapture;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SynthesizedRecordingWebCam webCam;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private RawImage renderedCGImage;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RawImage realCameraImage;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool isRecordingOn;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTexture movie_texture;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture capture_texture;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private SynthesizedMicRecording synthesizedMicRecording;

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x867A14", Offset = "0x867A14", VA = "0x867A14")]
		public static SynthesizedRecording GetSynthesizedRecording()
		{
			return null;
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x868AE8", Offset = "0x868AE8", VA = "0x868AE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x868B50", Offset = "0x868B50", VA = "0x868B50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x867A7C", Offset = "0x867A7C", VA = "0x867A7C")]
		public bool IsRecordingOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x868BB8", Offset = "0x868BB8", VA = "0x868BB8")]
		public void SetIsRecordingOn(bool _isOn)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x868BC4", Offset = "0x868BC4", VA = "0x868BC4")]
		public void SetOutputPath(string _output)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x868D10", Offset = "0x868D10", VA = "0x868D10")]
		public string GetOutputPath()
		{
			return null;
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x868D18", Offset = "0x868D18", VA = "0x868D18")]
		public void SetDefaultFileName(string _filename)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x868D20", Offset = "0x868D20", VA = "0x868D20")]
		public string GetDefaultFileName()
		{
			return null;
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x868D28", Offset = "0x868D28", VA = "0x868D28")]
		public void WriteFlagWhenFinishOperation()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x868DD8", Offset = "0x868DD8", VA = "0x868DD8")]
		public void SetFirstCamera(Camera _camera)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x86900C", Offset = "0x86900C", VA = "0x86900C")]
		public void SetVolumeRate(float _volume)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x869028", Offset = "0x869028", VA = "0x869028")]
		public float GetVolumeRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x869030", Offset = "0x869030", VA = "0x869030")]
		public void SetAudioListenerObject(GameObject listener)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x869040", Offset = "0x869040", VA = "0x869040")]
		public void StartRecording(string _filename)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x8697AC", Offset = "0x8697AC", VA = "0x8697AC")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x869C70", Offset = "0x869C70", VA = "0x869C70")]
		public CameraSize GetMovieSize()
		{
			return default(CameraSize);
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x869C78", Offset = "0x869C78", VA = "0x869C78")]
		public void SetMovieSize(CameraSize reso)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x869ECC", Offset = "0x869ECC", VA = "0x869ECC")]
		public void SetCaptureFPS(CaptureBase.FrameRate _fps)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x868DF4", Offset = "0x868DF4", VA = "0x868DF4")]
		public void SetCaptureSize(CameraSize reso)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x869ED4", Offset = "0x869ED4", VA = "0x869ED4")]
		public void ResetCaptureParameter()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x86A528", Offset = "0x86A528", VA = "0x86A528")]
		public static int ExchangeFrameRateToInt(CaptureBase.FrameRate rate)
		{
			return default(int);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x869E8C", Offset = "0x869E8C", VA = "0x869E8C")]
		public static int GetResolutionWidth(CameraSize reso)
		{
			return default(int);
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x869EAC", Offset = "0x869EAC", VA = "0x869EAC")]
		public static int GetResolutionHeight(CameraSize reso)
		{
			return default(int);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x86A5AC", Offset = "0x86A5AC", VA = "0x86A5AC")]
		public SynthesizedRecording()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class SynthesizedRecordingFinishTrigger : MonoBehaviour
	{
		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x86A654", Offset = "0x86A654", VA = "0x86A654")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x86A6BC", Offset = "0x86A6BC", VA = "0x86A6BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x86A724", Offset = "0x86A724", VA = "0x86A724")]
		public SynthesizedRecordingFinishTrigger()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class SynthesizedRecordingFlag : MonoBehaviour
	{
		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SynthesizedRecording synthesizedRecording;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera targetCamera;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject targetAudioListener;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string filename;

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x86A72C", Offset = "0x86A72C", VA = "0x86A72C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x86A794", Offset = "0x86A794", VA = "0x86A794")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x86A7FC", Offset = "0x86A7FC", VA = "0x86A7FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x86A9A8", Offset = "0x86A9A8", VA = "0x86A9A8")]
		public SynthesizedRecordingFlag()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class SynthesizedRecordingMenu : MonoBehaviour
	{
		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string saveParameterFileName;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent actionWhenClosing;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x672880", Offset = "0x672880")]
		[SerializeField]
		private GameObject popup;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text textButtonOpen;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle toggleRecording;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject RecordingMenu;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image movieImageHorizontal;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image movieImageVertical;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InputField interval;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle toggleHipPick;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Slider sliderVolumeCG;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Text textVolumeCG;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Slider sliderVolumeCam;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text textVolumeCam;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool isVertical;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SynthesizedRecording synthesizedRecording;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SynthesizedMicRecording synthesizedMicRecording;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private SynthesizedSnapshot synthesizedSnapshot;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SynthesizedRecordingMenu synthesizedRecordingMenu;

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x86AA00", Offset = "0x86AA00", VA = "0x86AA00")]
		public static SynthesizedRecordingMenu GetSynthesizedRecordingMenu()
		{
			return null;
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x86AA68", Offset = "0x86AA68", VA = "0x86AA68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x86AAF8", Offset = "0x86AAF8", VA = "0x86AAF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x86ABD0", Offset = "0x86ABD0", VA = "0x86ABD0")]
		private void LoadParameters()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x86B4B4", Offset = "0x86B4B4", VA = "0x86B4B4")]
		private void SaveParameters()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x86BAD4", Offset = "0x86BAD4", VA = "0x86BAD4")]
		private string Bool2NumberString(bool val)
		{
			return null;
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x86B914", Offset = "0x86B914", VA = "0x86B914")]
		private bool NumberString2Bool(string num)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x86B3F0", Offset = "0x86B3F0", VA = "0x86B3F0")]
		public void ClosePopup()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x86B980", Offset = "0x86B980", VA = "0x86B980")]
		public void SetInitializeParameter(bool _isRecording, bool _isVertical, int _interval, bool _isHipPick, float _volumeCG, float _volumeCam)
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x86AF94", Offset = "0x86AF94", VA = "0x86AF94")]
		public void UpdateInterface()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x86B230", Offset = "0x86B230", VA = "0x86B230")]
		private void UpdateCaptureParameter()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x86BD3C", Offset = "0x86BD3C", VA = "0x86BD3C")]
		public void OnChangeRecordOn()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x86BD60", Offset = "0x86BD60", VA = "0x86BD60")]
		public void OnClickedVertical()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x86BD8C", Offset = "0x86BD8C", VA = "0x86BD8C")]
		public void OnClickedHorizontal()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x86BC10", Offset = "0x86BC10", VA = "0x86BC10")]
		public void OnChangeVolumeSlider()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x86BB30", Offset = "0x86BB30", VA = "0x86BB30")]
		public bool GetIsVertical()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x86BAA4", Offset = "0x86BAA4", VA = "0x86BAA4")]
		public bool GetIsRecording()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x86BB38", Offset = "0x86BB38", VA = "0x86BB38")]
		public int GetRecordingInterval()
		{
			return default(int);
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x86BB70", Offset = "0x86BB70", VA = "0x86BB70")]
		public bool GetIsHipPick()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x86BBA0", Offset = "0x86BBA0", VA = "0x86BBA0")]
		public float GetCGVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x86BBD8", Offset = "0x86BBD8", VA = "0x86BBD8")]
		public float GetCamVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x86BDB4", Offset = "0x86BDB4", VA = "0x86BDB4")]
		public SynthesizedRecordingMenu()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class SynthesizedRecordingWebCam : MonoBehaviour
	{
		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool playOnStart;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2Int inputSize;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int fps;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RawImage rawImage;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WebCamTexture webCamTexture;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isPlaying;

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x15BE5A8", Offset = "0x15BE5A8", VA = "0x15BE5A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x15BE610", Offset = "0x15BE610", VA = "0x15BE610")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x15BE758", Offset = "0x15BE758", VA = "0x15BE758")]
		public void SetWebCamStatus(Vector2Int _size, int _fps)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x15BE620", Offset = "0x15BE620", VA = "0x15BE620")]
		private void PlayWebCam()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x15BE764", Offset = "0x15BE764", VA = "0x15BE764")]
		public void StopWebCam()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x15BE8EC", Offset = "0x15BE8EC", VA = "0x15BE8EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x15BE928", Offset = "0x15BE928", VA = "0x15BE928")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x15BE964", Offset = "0x15BE964", VA = "0x15BE964")]
		public SynthesizedRecordingWebCam()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class SynthesizedSnapSceneFlag : MonoBehaviour
	{
		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int sceneNumber;

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x15BE974", Offset = "0x15BE974", VA = "0x15BE974")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x15BE9DC", Offset = "0x15BE9DC", VA = "0x15BE9DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x15BEA44", Offset = "0x15BEA44", VA = "0x15BEA44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x15BEBA8", Offset = "0x15BEBA8", VA = "0x15BEBA8")]
		public SynthesizedSnapSceneFlag()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class SynthesizedSnapshot : MonoBehaviour
	{
		[Token(Token = "0x200041D")]
		public class SnapShotCamera
		{
			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SynthesizedSnapShotCamera snapShotCamera;

			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] shotCount;

			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x15BF880", Offset = "0x15BF880", VA = "0x15BF880")]
			public SnapShotCamera(SynthesizedSnapShotCamera _snapShotCamera)
			{
			}

			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x15BFB24", Offset = "0x15BFB24", VA = "0x15BFB24")]
			public void ResetShotCount()
			{
			}
		}

		[Token(Token = "0x200041E")]
		public class ReserveSnapCamera
		{
			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SnapShotCamera snapShotCamera;

			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string filename;

			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int scene;

			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int count;

			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x15BFFFC", Offset = "0x15BFFFC", VA = "0x15BFFFC")]
			public ReserveSnapCamera(SnapShotCamera _snapShotCamera, string _filename, int _scene)
			{
			}

			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0x15BF3C4", Offset = "0x15BF3C4", VA = "0x15BF3C4")]
			public bool Shot()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string outputPath;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string filename;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float cantShotInterval;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6729BC", Offset = "0x6729BC")]
		public int nowSceneNumber;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Camera targetCamera;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SynthesizedSnapshot synthesizedSnapshot;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int MAX_SCENE;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SnapShotCamera> pollingCameras;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastShotTime;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReserveSnapCamera reserveShot;

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x15BEAB4", Offset = "0x15BEAB4", VA = "0x15BEAB4")]
		public static SynthesizedSnapshot GetSynthesizedSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x15BF19C", Offset = "0x15BF19C", VA = "0x15BF19C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x15BF204", Offset = "0x15BF204", VA = "0x15BF204")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x15BF558", Offset = "0x15BF558", VA = "0x15BF558")]
		public void SetOutputPath(string _path)
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x15BF560", Offset = "0x15BF560", VA = "0x15BF560")]
		public string GetOutputPath()
		{
			return null;
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x15BF568", Offset = "0x15BF568", VA = "0x15BF568")]
		public void SetFileName(string _name)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x15BF570", Offset = "0x15BF570", VA = "0x15BF570")]
		public string GetFileName()
		{
			return null;
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x15BF578", Offset = "0x15BF578", VA = "0x15BF578")]
		public void DoSnapOneshot(string _filename)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x15BF6B4", Offset = "0x15BF6B4", VA = "0x15BF6B4")]
		private byte[] GetSnapShot()
		{
			return null;
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x15BED48", Offset = "0x15BED48", VA = "0x15BED48")]
		public void AddSnapShotCamera(SynthesizedSnapShotCamera _camera)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x15BF920", Offset = "0x15BF920", VA = "0x15BF920")]
		private bool CanShot()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x15BF970", Offset = "0x15BF970", VA = "0x15BF970")]
		public void StartSnapShotScene(int sceneNumber)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x15BEB1C", Offset = "0x15BEB1C", VA = "0x15BEB1C")]
		public void StopSnapShotScene()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x15BFBEC", Offset = "0x15BFBEC", VA = "0x15BFBEC")]
		private void ReserveShotCamera(SnapShotCamera _snap)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x15BFC8C", Offset = "0x15BFC8C", VA = "0x15BFC8C")]
		private string MakeSnapFilename(SnapShotCamera snap)
		{
			return null;
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x15BF244", Offset = "0x15BF244", VA = "0x15BF244")]
		private void ForceFirstSnapShot()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x15C011C", Offset = "0x15C011C", VA = "0x15C011C")]
		public void ShotByPlayerTrigger(int _playerId)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x15C0540", Offset = "0x15C0540", VA = "0x15C0540")]
		public SynthesizedSnapshot()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class SynthesizedSnapShotCamera : MonoBehaviour
	{
		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerID;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int cameraPositionID;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int colliderMax;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SynthesizedSnapshot synthesizedSnapshot;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x672A14", Offset = "0x672A14")]
		public Camera localCamera;

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x15BEBB0", Offset = "0x15BEBB0", VA = "0x15BEBB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x15BECCC", Offset = "0x15BECCC", VA = "0x15BECCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x15BEE9C", Offset = "0x15BEE9C", VA = "0x15BEE9C")]
		public bool IsThroughToTheTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x15BF0B4", Offset = "0x15BF0B4", VA = "0x15BF0B4")]
		public SynthesizedSnapShotCamera()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class SynthesizedSnapShotTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int playerID;

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x15BF0C4", Offset = "0x15BF0C4", VA = "0x15BF0C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x15BF12C", Offset = "0x15BF12C", VA = "0x15BF12C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x15BF194", Offset = "0x15BF194", VA = "0x15BF194")]
		public SynthesizedSnapShotTrigger()
		{
		}
	}
}
namespace jp.co.sundenshi.acereal.sdk
{
	[Token(Token = "0x2000421")]
	public class PermissionList : ScriptableObject
	{
		[Token(Token = "0x4001C57")]
		public const string scriptableObjectPath = "Assets/AceReal/SDK/Common/ManifestObservation/Resources/AceReal/PermissionList.asset";

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> permissionList;

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x865004", Offset = "0x865004", VA = "0x865004")]
		public PermissionList()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class PermissionRequest : MonoBehaviour
	{
		[Token(Token = "0x4001C59")]
		private const string RequirePermissionPrefix = "android.permission.";

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x672A5C", Offset = "0x672A5C")]
		private bool onAwake;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] password;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int index;

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x865074", Offset = "0x865074", VA = "0x865074")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x8650B0", Offset = "0x8650B0", VA = "0x8650B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x8650F8", Offset = "0x8650F8", VA = "0x8650F8")]
		private bool IsPasswordOK()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x8651BC", Offset = "0x8651BC", VA = "0x8651BC")]
		private int GetNowFingerPattern()
		{
			return default(int);
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x865098", Offset = "0x865098", VA = "0x865098")]
		private void RunPermission()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x865710", Offset = "0x865710", VA = "0x865710")]
		public bool HasPermission(string permission)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x865570", Offset = "0x865570", VA = "0x865570")]
		public void RequirePermission(string[] permissions)
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x8653B8", Offset = "0x8653B8", VA = "0x8653B8")]
		private string[] LoadPermissionList()
		{
			return null;
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x865828", Offset = "0x865828", VA = "0x865828")]
		public PermissionRequest()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class AndroidActivity
	{
		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass javaClass;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject androidActivity;

		[Token(Token = "0x1700039F")]
		public static AndroidJavaObject Instance
		{
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0x864E34", Offset = "0x864E34", VA = "0x864E34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x864E90", Offset = "0x864E90", VA = "0x864E90")]
		private static AndroidJavaObject GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x864FF8", Offset = "0x864FF8", VA = "0x864FF8")]
		public AndroidActivity()
		{
		}
	}
}
namespace jp.co.sundenshi.acereal.sdk.common.utilities
{
	[Token(Token = "0x2000424")]
	public static class FileUtility
	{
		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string storagePath;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string tempDirPath;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string AceRealSdkResourcePath;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Regex _resourcePathRegex;

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x8658A0", Offset = "0x8658A0", VA = "0x8658A0")]
		public static string Combines(params string[] paths)
		{
			return null;
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x865990", Offset = "0x865990", VA = "0x865990")]
		public static string GetExecuteMethodFilename()
		{
			return null;
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x8659F0", Offset = "0x8659F0", VA = "0x8659F0")]
		public static string GetExecuteMethodFilename(int skipFrame)
		{
			return null;
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x865A6C", Offset = "0x865A6C", VA = "0x865A6C")]
		public static string ReadTextFile(string path)
		{
			return null;
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x865D10", Offset = "0x865D10", VA = "0x865D10")]
		public static byte[] ReadBinaryFile(string path)
		{
			return null;
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x866088", Offset = "0x866088", VA = "0x866088")]
		public static bool WriteBinaryFile(string path, byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x866314", Offset = "0x866314", VA = "0x866314")]
		public static bool AppendBinaryFile(string path, byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x8665E8", Offset = "0x8665E8", VA = "0x8665E8")]
		public static bool IsExistFile(string filename)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x866660", Offset = "0x866660", VA = "0x866660")]
		public static string GetStoragePath()
		{
			return null;
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x866968", Offset = "0x866968", VA = "0x866968")]
		public static string GetTempDirPath()
		{
			return null;
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x866A3C", Offset = "0x866A3C", VA = "0x866A3C")]
		public static string GetResorucePath(params string[] path)
		{
			return null;
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x866AFC", Offset = "0x866AFC", VA = "0x866AFC")]
		public static void MakeFolderIfNotExists(string path)
		{
		}
	}
	[Token(Token = "0x2000425")]
	public static class ScanMediaFile
	{
		[Token(Token = "0x2000426")]
		public enum FileType
		{
			[Token(Token = "0x4001C65")]
			MP4,
			[Token(Token = "0x4001C66")]
			PNG,
			[Token(Token = "0x4001C67")]
			JPEG,
			[Token(Token = "0x4001C68")]
			JPG,
			[Token(Token = "0x4001C69")]
			PDF,
			[Token(Token = "0x4001C6A")]
			TXT
		}

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<FileType, string> MimeExtensionDic;

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x866BE0", Offset = "0x866BE0", VA = "0x866BE0")]
		public static void ScanMedia(string filePath)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x867474", Offset = "0x867474", VA = "0x867474")]
		public static void ScanMedia(string filePath, FileType fileType)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x867590", Offset = "0x867590", VA = "0x867590")]
		public static void ScanMedia(string filePath, string mimeType)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x866CD4", Offset = "0x866CD4", VA = "0x866CD4")]
		private static void ScanMadia(string filePath, string[] mimeType)
		{
		}
	}
}
