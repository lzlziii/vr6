using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using APP.Scripts.Scene;
using App.GameMgr;
using App.Network;
using App.Timeline.Playables;
using Common.Players;
using Cysharp.Threading.Tasks;
using Cysharp.Threading.Tasks.CompilerServices;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using Oculus.Platform.Samples.EntitlementCheck;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using RootMotion.FinalIK;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityStandardAssets.ImageEffects;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[ExecuteInEditMode]
public class DustCamera : MonoBehaviour
{
	[Token(Token = "0x2000003")]
	private enum Pass
	{
		[Token(Token = "0x4000028")]
		Threshold,
		[Token(Token = "0x4000029")]
		Kawase,
		[Token(Token = "0x400002A")]
		Compose,
		[Token(Token = "0x400002B")]
		Gaussian
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] mParticleList;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture m_DustTex;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera DustCam;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action EffectCallBack;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int w;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int h;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Shader Shader_Dirtiness;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material Material_Dirtiness;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int ScreenX;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int ScreenY;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowScreenControls;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool SceneTintsBloom;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int Iterations;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int Downsampling;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RenderTexture LensDistanceTex;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float gain;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float threshold;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float BloomSize;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float Dirtiness;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float BloomIntensity;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color BloomColor;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RenderTexture source;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RenderTexture RTT_BloomThreshold;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public RenderTexture RTT_Bloom_1;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public RenderTexture RTT_Bloom_2;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int Shader_Gain;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int Shader_Threshold;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int Shader_BloomIntensity;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int Shader_Offset;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int Shader_Bloom;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int Shader_Dirtiness_;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int Shader_BloomColor;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int Shader_DirtinessTexture;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int RTT_Width;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int RTT_Height;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector4 offset_x;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector4 offset_y;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float OffsetY;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x26CD018", Offset = "0x26CD018", VA = "0x26CD018")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x26CD16C", Offset = "0x26CD16C", VA = "0x26CD16C")]
	public void Create()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x26CD468", Offset = "0x26CD468", VA = "0x26CD468")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x26CD5A4", Offset = "0x26CD5A4", VA = "0x26CD5A4")]
	private void SetKeyword()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x26CD01C", Offset = "0x26CD01C", VA = "0x26CD01C")]
	private void CreateShaderParam()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x26CD65C", Offset = "0x26CD65C", VA = "0x26CD65C")]
	public void OnPostRender()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x26CDB80", Offset = "0x26CDB80", VA = "0x26CDB80")]
	public DustCamera()
	{
	}
}
[Token(Token = "0x2000004")]
public class AnchiDote : PropItemData
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private cInter WaterLv_Cup;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer InWaterMesh;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material WaterMat;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x2701ABC", Offset = "0x2701ABC", VA = "0x2701ABC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x2701B40", Offset = "0x2701B40", VA = "0x2701B40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x2701AFC", Offset = "0x2701AFC", VA = "0x2701AFC")]
	public void ReStart()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x2701BA8", Offset = "0x2701BA8", VA = "0x2701BA8", Slot = "10")]
	public override void SetWaterLv(float lv)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x2701CB8", Offset = "0x2701CB8", VA = "0x2701CB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x2701DE4", Offset = "0x2701DE4", VA = "0x2701DE4")]
	public AnchiDote()
	{
	}
}
[Token(Token = "0x2000005")]
public class BGMPlayer : MonoBehaviour
{
	[Token(Token = "0x2000006")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDED80", Offset = "0xCDED80")]
	private sealed class <PlayChk>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BGMPlayer <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000022")]
			[Address(RVA = "0x271DECC", Offset = "0x271DECC", VA = "0x271DECC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000024")]
			[Address(RVA = "0x271DF14", Offset = "0x271DF14", VA = "0x271DF14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600001F")]
		[Address(RVA = "0x271DD50", Offset = "0x271DD50", VA = "0x271DD50")]
		[DebuggerHidden]
		public <PlayChk>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000020")]
		[Address(RVA = "0x271DD7C", Offset = "0x271DD7C", VA = "0x271DD7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0x271DD80", Offset = "0x271DD80", VA = "0x271DD80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000023")]
		[Address(RVA = "0x271DED4", Offset = "0x271DED4", VA = "0x271DED4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000007")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDED90", Offset = "0xCDED90")]
	private sealed class <ResumeChk>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BGMPlayer <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000028")]
			[Address(RVA = "0x271E180", Offset = "0x271E180", VA = "0x271E180", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600002A")]
			[Address(RVA = "0x271E1C8", Offset = "0x271E1C8", VA = "0x271E1C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000025")]
		[Address(RVA = "0x271DF1C", Offset = "0x271DF1C", VA = "0x271DF1C")]
		[DebuggerHidden]
		public <ResumeChk>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000026")]
		[Address(RVA = "0x271DF48", Offset = "0x271DF48", VA = "0x271DF48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000027")]
		[Address(RVA = "0x271DF4C", Offset = "0x271DF4C", VA = "0x271DF4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000029")]
		[Address(RVA = "0x271E188", Offset = "0x271E188", VA = "0x271E188", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource Loop_Player;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SoundTable PlayTable;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cInter mVol;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool toStop;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int BGMNo;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsPause;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float stop_time;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x2703754", Offset = "0x2703754", VA = "0x2703754")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x27037AC", Offset = "0x27037AC", VA = "0x27037AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x2703AD0", Offset = "0x2703AD0", VA = "0x2703AD0")]
	private void PlayTblChk()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x27038EC", Offset = "0x27038EC", VA = "0x27038EC")]
	public void ClearBGM()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x2703B58", Offset = "0x2703B58", VA = "0x2703B58")]
	public void Play(AudioClip main, SoundTable playtable, bool is_ioop = true, float vol = 100f, float t = -1f)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x2703D44", Offset = "0x2703D44", VA = "0x2703D44")]
	public bool IsPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x2703D60", Offset = "0x2703D60", VA = "0x2703D60")]
	public void Stop(float fade_time)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x2703DF0", Offset = "0x2703DF0", VA = "0x2703DF0")]
	public bool IsTimeMin(float t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x2703E28", Offset = "0x2703E28", VA = "0x2703E28")]
	public void SetTime(float t)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x2703E5C", Offset = "0x2703E5C", VA = "0x2703E5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCE9D34", Offset = "0xCE9D34")]
	private IEnumerator PlayChk()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x2703EC8", Offset = "0x2703EC8", VA = "0x2703EC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCE9D94", Offset = "0xCE9D94")]
	private IEnumerator ResumeChk()
	{
		return null;
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x2703760", Offset = "0x2703760", VA = "0x2703760")]
	public void Vol(float to, float t)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x2703F34", Offset = "0x2703F34", VA = "0x2703F34")]
	public void Pause()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x2703FF0", Offset = "0x2703FF0", VA = "0x2703FF0")]
	public void Resume()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x27040EC", Offset = "0x27040EC", VA = "0x27040EC")]
	public void OverRideVol(float vol, bool is_master_bgm = true)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x270385C", Offset = "0x270385C", VA = "0x270385C")]
	public void UpdateVol()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x2704194", Offset = "0x2704194", VA = "0x2704194")]
	public BGMPlayer()
	{
	}
}
[Token(Token = "0x2000008")]
public class SoundTable
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Title;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartTime;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float LoopTime;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float EndTime;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x2647D44", Offset = "0x2647D44", VA = "0x2647D44")]
	public SoundTable()
	{
	}
}
[Token(Token = "0x2000009")]
public class CautionWnd : UIInputTree
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public PageLabel mPageLabel;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn JpBtn;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn EnBtn;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn KanBtn;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn HanBtn;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x2712634", Offset = "0x2712634", VA = "0x2712634", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x2712924", Offset = "0x2712924", VA = "0x2712924", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x271299C", Offset = "0x271299C", VA = "0x271299C", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x2712A04", Offset = "0x2712A04", VA = "0x2712A04", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x2712B60", Offset = "0x2712B60", VA = "0x2712B60")]
	private void HideLangTextSel()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x2712BCC", Offset = "0x2712BCC", VA = "0x2712BCC")]
	private void OnJpBtn()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x2712C44", Offset = "0x2712C44", VA = "0x2712C44")]
	private void OnEnBtn()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x2712CBC", Offset = "0x2712CBC", VA = "0x2712CBC")]
	private void OnKanBtn()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x2712D34", Offset = "0x2712D34", VA = "0x2712D34")]
	private void OnHanBtn()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x2712DAC", Offset = "0x2712DAC", VA = "0x2712DAC")]
	private void LastPageCB()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x2712DB8", Offset = "0x2712DB8", VA = "0x2712DB8")]
	public CautionWnd()
	{
	}
}
[Token(Token = "0x200000A")]
public class CharaDirUI : MonoBehaviour
{
	[Token(Token = "0x6000037")]
	[Address(RVA = "0x27130C4", Offset = "0x27130C4", VA = "0x27130C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x27130C8", Offset = "0x27130C8", VA = "0x27130C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x27130CC", Offset = "0x27130CC", VA = "0x27130CC")]
	public CharaDirUI()
	{
	}
}
[Token(Token = "0x200000B")]
public class CreateScene : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE052C", Offset = "0xCE052C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE052C", Offset = "0xCE052C")]
	public float TimelinePer;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float old_timelineper;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0584", Offset = "0xCE0584")]
	public int _water;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0618", Offset = "0xCE0618")]
	public int _fire;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE06AC", Offset = "0xCE06AC")]
	public SceneUnit.eUnit DiveUnit;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TimeLinePacker mTimeLinePacker;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TimelineData MasterTimeLine;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE06E4", Offset = "0xCE06E4")]
	public int _unit;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0778", Offset = "0xCE0778")]
	public int _pos;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<SceneUnit> SceneUnitList;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationClip old_clip;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string old_clip_name;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationClip new_clip;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x26C3CAC", Offset = "0x26C3CAC", VA = "0x26C3CAC")]
	private void _Water()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x26C3D9C", Offset = "0x26C3D9C", VA = "0x26C3D9C")]
	private void _Fire()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x26C3E8C", Offset = "0x26C3E8C", VA = "0x26C3E8C")]
	private void _Pos()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x26C404C", Offset = "0x26C404C", VA = "0x26C404C")]
	private void _Unit()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x26C45C4", Offset = "0x26C45C4", VA = "0x26C45C4")]
	private SceneUnit Search(SceneUnit.eUnit unit)
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x26C47C8", Offset = "0x26C47C8", VA = "0x26C47C8")]
	private void Setup(TimelineData td, SceneUnit unit)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x26C48B4", Offset = "0x26C48B4", VA = "0x26C48B4")]
	public CreateScene()
	{
	}
}
[Token(Token = "0x200000C")]
public class Cup : PropItemData
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private cInter WaterLv_Cup;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer InWaterMesh;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material WaterMat;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x26C492C", Offset = "0x26C492C", VA = "0x26C492C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x26C49AC", Offset = "0x26C49AC", VA = "0x26C49AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x26C496C", Offset = "0x26C496C", VA = "0x26C496C")]
	public void ReStart()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x26C4A14", Offset = "0x26C4A14", VA = "0x26C4A14", Slot = "10")]
	public override void SetWaterLv(float lv)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x26C4B24", Offset = "0x26C4B24", VA = "0x26C4B24")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x26C4C50", Offset = "0x26C4C50", VA = "0x26C4C50")]
	public Cup()
	{
	}
}
[Token(Token = "0x200000D")]
public class DiveScene : SceneData
{
	[Token(Token = "0x200000E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEDA0", Offset = "0xCDEDA0")]
	private sealed class <ClearMode>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000099")]
			[Address(RVA = "0x271F9E8", Offset = "0x271F9E8", VA = "0x271F9E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600009B")]
			[Address(RVA = "0x271FA30", Offset = "0x271FA30", VA = "0x271FA30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x271F6FC", Offset = "0x271F6FC", VA = "0x271F6FC")]
		[DebuggerHidden]
		public <ClearMode>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x271F728", Offset = "0x271F728", VA = "0x271F728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0x271F72C", Offset = "0x271F72C", VA = "0x271F72C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0x271F9F0", Offset = "0x271F9F0", VA = "0x271F9F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEDB0", Offset = "0xCDEDB0")]
	private sealed class <ClearModeDiveEnd>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600009F")]
			[Address(RVA = "0x271FD2C", Offset = "0x271FD2C", VA = "0x271FD2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A1")]
			[Address(RVA = "0x271FD74", Offset = "0x271FD74", VA = "0x271FD74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x271FA38", Offset = "0x271FA38", VA = "0x271FA38")]
		[DebuggerHidden]
		public <ClearModeDiveEnd>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x271FA64", Offset = "0x271FA64", VA = "0x271FA64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x271FA68", Offset = "0x271FA68", VA = "0x271FA68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x271FD34", Offset = "0x271FD34", VA = "0x271FD34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEDC0", Offset = "0xCDEDC0")]
	private sealed class <RecDive>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <r>5__2;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A5")]
			[Address(RVA = "0x2720368", Offset = "0x2720368", VA = "0x2720368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A7")]
			[Address(RVA = "0x27203B0", Offset = "0x27203B0", VA = "0x27203B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x2720218", Offset = "0x2720218", VA = "0x2720218")]
		[DebuggerHidden]
		public <RecDive>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x2720244", Offset = "0x2720244", VA = "0x2720244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x2720248", Offset = "0x2720248", VA = "0x2720248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x2720370", Offset = "0x2720370", VA = "0x2720370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000011")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEDD0", Offset = "0xCDEDD0")]
	private sealed class <_GameClearDive>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000AB")]
			[Address(RVA = "0x2721AC8", Offset = "0x2721AC8", VA = "0x2721AC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000AD")]
			[Address(RVA = "0x2721B10", Offset = "0x2721B10", VA = "0x2721B10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x2721880", Offset = "0x2721880", VA = "0x2721880")]
		[DebuggerHidden]
		public <_GameClearDive>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x27218AC", Offset = "0x27218AC", VA = "0x27218AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x27218B0", Offset = "0x27218B0", VA = "0x27218B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x2721AD0", Offset = "0x2721AD0", VA = "0x2721AD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000012")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEDE0", Offset = "0xCDEDE0")]
	private sealed class <_StartGame>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000B1")]
			[Address(RVA = "0x2722398", Offset = "0x2722398", VA = "0x2722398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B3")]
			[Address(RVA = "0x27223E0", Offset = "0x27223E0", VA = "0x27223E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x2721E54", Offset = "0x2721E54", VA = "0x2721E54")]
		[DebuggerHidden]
		public <_StartGame>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x2721E80", Offset = "0x2721E80", VA = "0x2721E80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x2721E84", Offset = "0x2721E84", VA = "0x2721E84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x27223A0", Offset = "0x27223A0", VA = "0x27223A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEDF0", Offset = "0xCDEDF0")]
	private sealed class <ReCreateTimeline>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000B7")]
			[Address(RVA = "0x27201C8", Offset = "0x27201C8", VA = "0x27201C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B9")]
			[Address(RVA = "0x2720210", Offset = "0x2720210", VA = "0x2720210", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x271FF80", Offset = "0x271FF80", VA = "0x271FF80")]
		[DebuggerHidden]
		public <ReCreateTimeline>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x271FFAC", Offset = "0x271FFAC", VA = "0x271FFAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x271FFB0", Offset = "0x271FFB0", VA = "0x271FFB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x27201D0", Offset = "0x27201D0", VA = "0x27201D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEE00", Offset = "0xCDEE00")]
	private sealed class <RestartGame>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000BD")]
			[Address(RVA = "0x2720A14", Offset = "0x2720A14", VA = "0x2720A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000BF")]
			[Address(RVA = "0x2720A5C", Offset = "0x2720A5C", VA = "0x2720A5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BA")]
		[Address(RVA = "0x27205F8", Offset = "0x27205F8", VA = "0x27205F8")]
		[DebuggerHidden]
		public <RestartGame>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x2720624", Offset = "0x2720624", VA = "0x2720624", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x2720628", Offset = "0x2720628", VA = "0x2720628", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x2720A1C", Offset = "0x2720A1C", VA = "0x2720A1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000015")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEE10", Offset = "0xCDEE10")]
	private sealed class <Wait_RPC_InitWaitMember>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C3")]
			[Address(RVA = "0x2721208", Offset = "0x2721208", VA = "0x2721208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C5")]
			[Address(RVA = "0x2721250", Offset = "0x2721250", VA = "0x2721250", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x2721118", Offset = "0x2721118", VA = "0x2721118")]
		[DebuggerHidden]
		public <Wait_RPC_InitWaitMember>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x2721144", Offset = "0x2721144", VA = "0x2721144", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x2721148", Offset = "0x2721148", VA = "0x2721148", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x2721210", Offset = "0x2721210", VA = "0x2721210", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000016")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEE20", Offset = "0xCDEE20")]
	private sealed class <WaitProc>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C9")]
			[Address(RVA = "0x27210C8", Offset = "0x27210C8", VA = "0x27210C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CB")]
			[Address(RVA = "0x2721110", Offset = "0x2721110", VA = "0x2721110", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x2720E20", Offset = "0x2720E20", VA = "0x2720E20")]
		[DebuggerHidden]
		public <WaitProc>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x2720E4C", Offset = "0x2720E4C", VA = "0x2720E4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x2720E50", Offset = "0x2720E50", VA = "0x2720E50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x27210D0", Offset = "0x27210D0", VA = "0x27210D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000017")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEE30", Offset = "0xCDEE30")]
	private sealed class <_EndGame>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CF")]
			[Address(RVA = "0x27214BC", Offset = "0x27214BC", VA = "0x27214BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D1")]
			[Address(RVA = "0x2721504", Offset = "0x2721504", VA = "0x2721504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x272141C", Offset = "0x272141C", VA = "0x272141C")]
		[DebuggerHidden]
		public <_EndGame>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x2721448", Offset = "0x2721448", VA = "0x2721448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x272144C", Offset = "0x272144C", VA = "0x272144C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x27214C4", Offset = "0x27214C4", VA = "0x27214C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000018")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEE40", Offset = "0xCDEE40")]
	private sealed class <__EndGame>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D5")]
			[Address(RVA = "0x27355D8", Offset = "0x27355D8", VA = "0x27355D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D7")]
			[Address(RVA = "0x2735620", Offset = "0x2735620", VA = "0x2735620", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x2735384", Offset = "0x2735384", VA = "0x2735384")]
		[DebuggerHidden]
		public <__EndGame>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x27353B0", Offset = "0x27353B0", VA = "0x27353B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x27353B4", Offset = "0x27353B4", VA = "0x27353B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x27355E0", Offset = "0x27355E0", VA = "0x27355E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000019")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEE50", Offset = "0xCDEE50")]
	private sealed class <_Retray>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DB")]
			[Address(RVA = "0x2721E04", Offset = "0x2721E04", VA = "0x2721E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DD")]
			[Address(RVA = "0x2721E4C", Offset = "0x2721E4C", VA = "0x2721E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x2721D4C", Offset = "0x2721D4C", VA = "0x2721D4C")]
		[DebuggerHidden]
		public <_Retray>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x2721D78", Offset = "0x2721D78", VA = "0x2721D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x2721D7C", Offset = "0x2721D7C", VA = "0x2721D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x2721E0C", Offset = "0x2721E0C", VA = "0x2721E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200001A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEE60", Offset = "0xCDEE60")]
	private sealed class <MemberWait>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float max_time;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rpc_time;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action RPCAction;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <is_rpc>5__2;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool <is_msg>5__3;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <r>5__4;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0x271FF30", Offset = "0x271FF30", VA = "0x271FF30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E3")]
			[Address(RVA = "0x271FF78", Offset = "0x271FF78", VA = "0x271FF78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x271FD7C", Offset = "0x271FD7C", VA = "0x271FD7C")]
		[DebuggerHidden]
		public <MemberWait>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x271FDA8", Offset = "0x271FDA8", VA = "0x271FDA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x271FDAC", Offset = "0x271FDAC", VA = "0x271FDAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x271FF38", Offset = "0x271FF38", VA = "0x271FF38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200001B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEE70", Offset = "0xCDEE70")]
	private sealed class <StartDiscassion>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E7")]
			[Address(RVA = "0x2720DD0", Offset = "0x2720DD0", VA = "0x2720DD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E9")]
			[Address(RVA = "0x2720E18", Offset = "0x2720E18", VA = "0x2720E18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x2720A64", Offset = "0x2720A64", VA = "0x2720A64")]
		[DebuggerHidden]
		public <StartDiscassion>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x2720A90", Offset = "0x2720A90", VA = "0x2720A90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x2720A94", Offset = "0x2720A94", VA = "0x2720A94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x2720DD8", Offset = "0x2720DD8", VA = "0x2720DD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200001C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEE80", Offset = "0xCDEE80")]
	private sealed class <_ToDive>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000ED")]
			[Address(RVA = "0x2722648", Offset = "0x2722648", VA = "0x2722648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000EF")]
			[Address(RVA = "0x2722690", Offset = "0x2722690", VA = "0x2722690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x27223E8", Offset = "0x27223E8", VA = "0x27223E8")]
		[DebuggerHidden]
		public <_ToDive>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x2722414", Offset = "0x2722414", VA = "0x2722414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x2722418", Offset = "0x2722418", VA = "0x2722418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x2722650", Offset = "0x2722650", VA = "0x2722650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200001D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEE90", Offset = "0xCDEE90")]
	private sealed class <_ToEpiDive>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F3")]
			[Address(RVA = "0x2722880", Offset = "0x2722880", VA = "0x2722880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F5")]
			[Address(RVA = "0x27228C8", Offset = "0x27228C8", VA = "0x27228C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x2722698", Offset = "0x2722698", VA = "0x2722698")]
		[DebuggerHidden]
		public <_ToEpiDive>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x27226C4", Offset = "0x27226C4", VA = "0x27226C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x27226C8", Offset = "0x27226C8", VA = "0x27226C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x2722888", Offset = "0x2722888", VA = "0x2722888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200001E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEEA0", Offset = "0xCDEEA0")]
	private sealed class <_ToVote>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <is_msg>5__2;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <r>5__3;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F9")]
			[Address(RVA = "0x2735334", Offset = "0x2735334", VA = "0x2735334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000FB")]
			[Address(RVA = "0x273537C", Offset = "0x273537C", VA = "0x273537C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x2734D74", Offset = "0x2734D74", VA = "0x2734D74")]
		[DebuggerHidden]
		public <_ToVote>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x2734DA0", Offset = "0x2734DA0", VA = "0x2734DA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x2734DA4", Offset = "0x2734DA4", VA = "0x2734DA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x273533C", Offset = "0x273533C", VA = "0x273533C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200001F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEEB0", Offset = "0xCDEEB0")]
	private sealed class <_OpenSnap>d__96 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SnapData snap_data;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SceneUnit.eUnit unit;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000FF")]
			[Address(RVA = "0x2721CFC", Offset = "0x2721CFC", VA = "0x2721CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000101")]
			[Address(RVA = "0x2721D44", Offset = "0x2721D44", VA = "0x2721D44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x2721B18", Offset = "0x2721B18", VA = "0x2721B18")]
		[DebuggerHidden]
		public <_OpenSnap>d__96(int <>1__state)
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x2721B44", Offset = "0x2721B44", VA = "0x2721B44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x2721B48", Offset = "0x2721B48", VA = "0x2721B48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x2721D04", Offset = "0x2721D04", VA = "0x2721D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000020")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEEC0", Offset = "0xCDEEC0")]
	private sealed class <_CloseSnap>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000105")]
			[Address(RVA = "0x27213CC", Offset = "0x27213CC", VA = "0x27213CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000107")]
			[Address(RVA = "0x2721414", Offset = "0x2721414", VA = "0x2721414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x2721258", Offset = "0x2721258", VA = "0x2721258")]
		[DebuggerHidden]
		public <_CloseSnap>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0x2721284", Offset = "0x2721284", VA = "0x2721284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0x2721288", Offset = "0x2721288", VA = "0x2721288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0x27213D4", Offset = "0x27213D4", VA = "0x27213D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000021")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEED0", Offset = "0xCDEED0")]
	private sealed class <_ToEpiloge>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600010B")]
			[Address(RVA = "0x2722BE0", Offset = "0x2722BE0", VA = "0x2722BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600010D")]
			[Address(RVA = "0x2722C28", Offset = "0x2722C28", VA = "0x2722C28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0x27228D0", Offset = "0x27228D0", VA = "0x27228D0")]
		[DebuggerHidden]
		public <_ToEpiloge>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0x27228FC", Offset = "0x27228FC", VA = "0x27228FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0x2722900", Offset = "0x2722900", VA = "0x2722900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0x2722BE8", Offset = "0x2722BE8", VA = "0x2722BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000022")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEEE0", Offset = "0xCDEEE0")]
	private sealed class <RestProc>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000111")]
			[Address(RVA = "0x27205A8", Offset = "0x27205A8", VA = "0x27205A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000113")]
			[Address(RVA = "0x27205F0", Offset = "0x27205F0", VA = "0x27205F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0x27203B8", Offset = "0x27203B8", VA = "0x27203B8")]
		[DebuggerHidden]
		public <RestProc>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0x27203E4", Offset = "0x27203E4", VA = "0x27203E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x27203E8", Offset = "0x27203E8", VA = "0x27203E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x27205B0", Offset = "0x27205B0", VA = "0x27205B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000023")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEEF0", Offset = "0xCDEEF0")]
	private sealed class <_EpiDiveEnd>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiveScene <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000117")]
			[Address(RVA = "0x2721830", Offset = "0x2721830", VA = "0x2721830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000119")]
			[Address(RVA = "0x2721878", Offset = "0x2721878", VA = "0x2721878", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0x272150C", Offset = "0x272150C", VA = "0x272150C")]
		[DebuggerHidden]
		public <_EpiDiveEnd>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0x2721538", Offset = "0x2721538", VA = "0x2721538", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x272153C", Offset = "0x272153C", VA = "0x272153C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x2721838", Offset = "0x2721838", VA = "0x2721838", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE080C", Offset = "0xCE080C")]
	public int _pastfaild;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE08A0", Offset = "0xCE08A0")]
	public int _debug_destroy;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject DiscassionTree;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DiscussionWnd mDiscussionWnd;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VoteWnd mVoteWnd;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EpilogueWnd mEpilogueWnd;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameClearWnd mGameClearWnd;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int load_bgm_index;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BGM CalmBGM;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BGM TensionBGM;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BGM RoomBGM;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BGM EpiBGM;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool recdive;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rec_timeline_time;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int rec_bgm;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool is_cleardive;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool IsCreateTimeLine;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine WaitRPC;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool PastFaildFlg;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool is_retray;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float r_stick_x;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 v;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 move;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float InputFailMask;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _isRotated;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool is_last;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
	private bool is_to_dive;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCF")]
	private bool is_to_vote;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool IsSnapPos;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool IsWait;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	private bool is_close_snap;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	private bool is_epiloge;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x26C9080", Offset = "0x26C9080", VA = "0x26C9080")]
	private void DebugDestroy()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x26C90E0", Offset = "0x26C90E0", VA = "0x26C90E0", Slot = "18")]
	public override void BGMLoadComp(BGM bgm)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x26C9298", Offset = "0x26C9298", VA = "0x26C9298", Slot = "20")]
	public override void PlaySceneBGM(int bgm_index, float fade_time)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x26C958C", Offset = "0x26C958C", VA = "0x26C958C", Slot = "21")]
	public override void StopSceneBGM(int bgm_index, float fade_time = 0f)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x26C9600", Offset = "0x26C9600", VA = "0x26C9600", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x26C9608", Offset = "0x26C9608", VA = "0x26C9608", Slot = "5")]
	public override void Remove()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x26C96D8", Offset = "0x26C96D8", VA = "0x26C96D8")]
	private void RemoveDiscussionWnd()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x26C9798", Offset = "0x26C9798", VA = "0x26C9798")]
	private void RemoveVoteWnd()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x26C9858", Offset = "0x26C9858", VA = "0x26C9858")]
	private void RemoveEpiWnd()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x26C9918", Offset = "0x26C9918", VA = "0x26C9918")]
	private void RemoveClearWnd()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x26C99D8", Offset = "0x26C99D8", VA = "0x26C99D8", Slot = "15")]
	public override void CallUpdate()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x26C9CA4", Offset = "0x26C9CA4", VA = "0x26C9CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCE9E94", Offset = "0xCE9E94")]
	private IEnumerator ClearMode()
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x26CA3D8", Offset = "0x26CA3D8", VA = "0x26CA3D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCE9EF4", Offset = "0xCE9EF4")]
	private IEnumerator ClearModeDiveEnd()
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x26C9D10", Offset = "0x26C9D10", VA = "0x26C9D10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCE9F54", Offset = "0xCE9F54")]
	private IEnumerator RecDive()
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x26CA444", Offset = "0x26CA444", VA = "0x26CA444")]
	public void Recv_RecDive(int rec_type, int dive_cnt, float dive_t, int bgm_no, int vote_result, bool is_past, int past_point)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x26CA97C", Offset = "0x26CA97C", VA = "0x26CA97C")]
	private void Recreate()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x26CAF40", Offset = "0x26CAF40", VA = "0x26CAF40", Slot = "16")]
	public override void CallLateUpdate()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x26CAFDC", Offset = "0x26CAFDC", VA = "0x26CAFDC", Slot = "17")]
	public override void FrontUIPosUpdate()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x26CB078", Offset = "0x26CB078", VA = "0x26CB078")]
	public void GameClearDive()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x26CB11C", Offset = "0x26CB11C", VA = "0x26CB11C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCE9FB4", Offset = "0xCE9FB4")]
	private IEnumerator _GameClearDive()
	{
		return null;
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x26C9F00", Offset = "0x26C9F00", VA = "0x26C9F00")]
	public void StartGame()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x26CB188", Offset = "0x26CB188", VA = "0x26CB188")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA014", Offset = "0xCEA014")]
	private IEnumerator _StartGame()
	{
		return null;
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x26CB1F4", Offset = "0x26CB1F4", VA = "0x26CB1F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA074", Offset = "0xCEA074")]
	private IEnumerator ReCreateTimeline()
	{
		return null;
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x26CB260", Offset = "0x26CB260", VA = "0x26CB260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA0D4", Offset = "0xCEA0D4")]
	private IEnumerator RestartGame()
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x26CB2CC", Offset = "0x26CB2CC", VA = "0x26CB2CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA134", Offset = "0xCEA134")]
	private IEnumerator Wait_RPC_InitWaitMember()
	{
		return null;
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x26CB328", Offset = "0x26CB328", VA = "0x26CB328")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA194", Offset = "0xCEA194")]
	private IEnumerator WaitProc()
	{
		return null;
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x26CB394", Offset = "0x26CB394", VA = "0x26CB394")]
	public void RPC_GameEnd()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x26CA000", Offset = "0x26CA000", VA = "0x26CA000")]
	private void EndGame()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x26CB398", Offset = "0x26CB398", VA = "0x26CB398")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA1F4", Offset = "0xCEA1F4")]
	private IEnumerator _EndGame()
	{
		return null;
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x26CB404", Offset = "0x26CB404", VA = "0x26CB404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA254", Offset = "0xCEA254")]
	private IEnumerator __EndGame()
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x26CA090", Offset = "0x26CA090", VA = "0x26CA090")]
	private void PastFaild()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x26CB470", Offset = "0x26CB470", VA = "0x26CB470")]
	private void OnRetray()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x26CB474", Offset = "0x26CB474", VA = "0x26CB474")]
	private void OnStop()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x26CB478", Offset = "0x26CB478", VA = "0x26CB478")]
	private void OnRetrayClose(YNDlg yn)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x26CB688", Offset = "0x26CB688", VA = "0x26CB688")]
	private void DestroyYesCB()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x26CB68C", Offset = "0x26CB68C", VA = "0x26CB68C")]
	private void DestroyNoCB()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x26CB690", Offset = "0x26CB690", VA = "0x26CB690")]
	private void DestroyClose(YNDlg yn)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x26CB8D8", Offset = "0x26CB8D8", VA = "0x26CB8D8")]
	public void Retray()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x26CB9DC", Offset = "0x26CB9DC", VA = "0x26CB9DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA2B4", Offset = "0xCEA2B4")]
	private IEnumerator _Retray()
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x26CA228", Offset = "0x26CA228", VA = "0x26CA228")]
	private void DirChk()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x26CA314", Offset = "0x26CA314", VA = "0x26CA314")]
	private void SnapChk()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x26CBA9C", Offset = "0x26CBA9C", VA = "0x26CBA9C")]
	private void MoveProc()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x26CAC38", Offset = "0x26CAC38", VA = "0x26CAC38")]
	private void CreateDiscassion()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x26CBE20", Offset = "0x26CBE20", VA = "0x26CBE20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA314", Offset = "0xCEA314")]
	private IEnumerator MemberWait(Action RPCAction, float rpc_time, float max_time)
	{
		return null;
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x26CBDB4", Offset = "0x26CBDB4", VA = "0x26CBDB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA374", Offset = "0xCEA374")]
	private IEnumerator StartDiscassion()
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x26CB988", Offset = "0x26CB988", VA = "0x26CB988")]
	private void CloseYNWnd()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x26C8088", Offset = "0x26C8088", VA = "0x26C8088")]
	public void RPC_ReDive()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x26C816C", Offset = "0x26C816C", VA = "0x26C816C")]
	public void RPC_ToVote()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x26CBEA0", Offset = "0x26CBEA0", VA = "0x26CBEA0")]
	public void ToDive()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x26CBF54", Offset = "0x26CBF54", VA = "0x26CBF54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA3D4", Offset = "0xCEA3D4")]
	private IEnumerator _ToDive()
	{
		return null;
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x26CAA40", Offset = "0x26CAA40", VA = "0x26CAA40")]
	public void ToEpiDive()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x26CBFC0", Offset = "0x26CBFC0", VA = "0x26CBFC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA434", Offset = "0xCEA434")]
	private IEnumerator _ToEpiDive()
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x26CAB80", Offset = "0x26CAB80", VA = "0x26CAB80")]
	public void ToVote()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x26CC02C", Offset = "0x26CC02C", VA = "0x26CC02C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA494", Offset = "0xCEA494")]
	private IEnumerator _ToVote()
	{
		return null;
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x26CC098", Offset = "0x26CC098", VA = "0x26CC098", Slot = "23")]
	public override void TimeCountStart()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x26C8AE8", Offset = "0x26C8AE8", VA = "0x26C8AE8")]
	public void TimeOut()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x26CC17C", Offset = "0x26CC17C", VA = "0x26CC17C", Slot = "24")]
	public override void TimeOutProc()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x26CC2CC", Offset = "0x26CC2CC", VA = "0x26CC2CC")]
	private void DiveLangCB(SystemMsgWnd wnd)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x26CC3B4", Offset = "0x26CC3B4", VA = "0x26CC3B4")]
	public void VoteTimeOut()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x26CC3B8", Offset = "0x26CC3B8", VA = "0x26CC3B8")]
	public void Vote(int index, bool is_me)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x26CC3D8", Offset = "0x26CC3D8", VA = "0x26CC3D8")]
	public void CanselVote(int index, bool is_me)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x26CC3F8", Offset = "0x26CC3F8", VA = "0x26CC3F8")]
	public void UpdateVoteWnd()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x26CC414", Offset = "0x26CC414", VA = "0x26CC414")]
	public void VoteTimeUp(int vote_cnt)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x26CC430", Offset = "0x26CC430", VA = "0x26CC430")]
	public void VoteResult(int vote)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x26CC44C", Offset = "0x26CC44C", VA = "0x26CC44C")]
	public void RandomVote(int vote)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x26CC468", Offset = "0x26CC468", VA = "0x26CC468", Slot = "22")]
	public override void OpenSnap(SnapData snap_data, SceneUnit.eUnit unit)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x26CC510", Offset = "0x26CC510", VA = "0x26CC510")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA4F4", Offset = "0xCEA4F4")]
	private IEnumerator _OpenSnap(SnapData snap_data, SceneUnit.eUnit unit)
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x26CBA48", Offset = "0x26CBA48", VA = "0x26CBA48")]
	private void CloseSnap()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x26CC590", Offset = "0x26CC590", VA = "0x26CC590")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA554", Offset = "0xCEA554")]
	private IEnumerator _CloseSnap()
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x26CC5FC", Offset = "0x26CC5FC", VA = "0x26CC5FC")]
	private void ResetSnapShow()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x26CBC48", Offset = "0x26CBC48", VA = "0x26CBC48")]
	private void ShowDisscattion()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x26C9D7C", Offset = "0x26C9D7C", VA = "0x26C9D7C")]
	private void HideDisscattion()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x26CAACC", Offset = "0x26CAACC", VA = "0x26CAACC")]
	private void ToEpiloge()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x26CC72C", Offset = "0x26CC72C", VA = "0x26CC72C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA5B4", Offset = "0xCEA5B4")]
	private IEnumerator _ToEpiloge()
	{
		return null;
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x26CC798", Offset = "0x26CC798", VA = "0x26CC798")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA614", Offset = "0xCEA614")]
	private IEnumerator RestProc()
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x26CAA14", Offset = "0x26CAA14", VA = "0x26CAA14")]
	private void EpiDiveEnd()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x26CC7F4", Offset = "0x26CC7F4", VA = "0x26CC7F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEA674", Offset = "0xCEA674")]
	private IEnumerator _EpiDiveEnd()
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x26CC860", Offset = "0x26CC860", VA = "0x26CC860")]
	public void ToEpiDiveEnd()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x26CC864", Offset = "0x26CC864", VA = "0x26CC864")]
	public DiveScene()
	{
	}
}
[Token(Token = "0x2000024")]
public class Door : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0934", Offset = "0xCE0934")]
	public int _portal;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OcclusionPortal mOcclusionPortal;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE09C8", Offset = "0xCE09C8")]
	public int _open_close;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform TargetRot;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float OpenAngle;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private cInter Per;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 v;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x26CC87C", Offset = "0x26CC87C", VA = "0x26CC87C")]
	public void Search()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x26CC91C", Offset = "0x26CC91C", VA = "0x26CC91C")]
	public float GetAngle()
	{
		return default(float);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x26CC940", Offset = "0x26CC940", VA = "0x26CC940")]
	public void SetAngle(float angle)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x26CCA38", Offset = "0x26CCA38", VA = "0x26CCA38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x26CCB6C", Offset = "0x26CCB6C", VA = "0x26CCB6C")]
	public void OpenClose(float dir, float t)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x26CCBA4", Offset = "0x26CCBA4", VA = "0x26CCBA4")]
	public void SnapDoor(float angle, float t, float per_time)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x26CCBFC", Offset = "0x26CCBFC", VA = "0x26CCBFC")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x26CCA6C", Offset = "0x26CCA6C", VA = "0x26CCA6C")]
	private void UpdateRot()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x26CCC8C", Offset = "0x26CCC8C", VA = "0x26CCC8C")]
	public Door()
	{
	}
}
[Token(Token = "0x2000025")]
public class FadeEntity : MonoBehaviour
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite BKSprite;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite WhiteSprite;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public cInter FadeAlpha;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer FadeImg;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public cInter FadeColor;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material FadeMat;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject LoadingTree;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpriteRenderer LogoImg;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpriteRenderer RotImg;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AsyncOperation LoadingAsync;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private cInter LoadingAlpha;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color loading_col;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Camera mCamera;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool IsChk;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x272A024", Offset = "0x272A024", VA = "0x272A024")]
	public void SetAsync(AsyncOperation p)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x272A028", Offset = "0x272A028", VA = "0x272A028")]
	public void ChkUI()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x272A124", Offset = "0x272A124", VA = "0x272A124")]
	public void ShowLoading()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x272A164", Offset = "0x272A164", VA = "0x272A164")]
	public void HideLoading()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x272A18C", Offset = "0x272A18C", VA = "0x272A18C")]
	public bool IsFade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x272A1C4", Offset = "0x272A1C4", VA = "0x272A1C4")]
	public bool IsLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x272A1FC", Offset = "0x272A1FC", VA = "0x272A1FC")]
	public bool IsFadeStop()
	{
		return default(bool);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x272A218", Offset = "0x272A218", VA = "0x272A218")]
	public void Init()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x272A364", Offset = "0x272A364", VA = "0x272A364")]
	public void FadeUpdate(float t)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x272A644", Offset = "0x272A644", VA = "0x272A644")]
	public void SetBKSprite()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x272A688", Offset = "0x272A688", VA = "0x272A688")]
	public void SetWhiteSprite()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x272A548", Offset = "0x272A548", VA = "0x272A548")]
	public void UpdateFadeAlpha()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x272A6CC", Offset = "0x272A6CC", VA = "0x272A6CC")]
	public bool IsCam()
	{
		return default(bool);
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x272A704", Offset = "0x272A704", VA = "0x272A704")]
	public FadeEntity()
	{
	}
}
[Token(Token = "0x2000026")]
public class FadeMsg : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer Bord;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro Label;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer BordU;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer BordD;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material BordMat;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material BordUDMat;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private cInter Per;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private cInter OutPer;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float buffx;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float buffz;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color col;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 v;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x272A7B0", Offset = "0x272A7B0", VA = "0x272A7B0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x272AAD4", Offset = "0x272AAD4", VA = "0x272AAD4")]
	public bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x272AAF8", Offset = "0x272AAF8", VA = "0x272AAF8")]
	public void ChangeLangage()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x272AB60", Offset = "0x272AB60", VA = "0x272AB60")]
	public void Show(Vector3 pos)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x272ACCC", Offset = "0x272ACCC", VA = "0x272ACCC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x272AD28", Offset = "0x272AD28", VA = "0x272AD28")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x272A914", Offset = "0x272A914", VA = "0x272A914")]
	private void UpdateCol()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x272AA08", Offset = "0x272AA08", VA = "0x272AA08")]
	private void UpdateBordPos()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x272AE50", Offset = "0x272AE50", VA = "0x272AE50")]
	public FadeMsg()
	{
	}
}
[Token(Token = "0x2000027")]
public class Finder : MonoBehaviour
{
	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEF00", Offset = "0xCDEF00")]
	private sealed class <_ShatterStart>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Finder <>4__this;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014E")]
			[Address(RVA = "0x2736120", Offset = "0x2736120", VA = "0x2736120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000150")]
			[Address(RVA = "0x2736168", Offset = "0x2736168", VA = "0x2736168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x2735F60", Offset = "0x2735F60", VA = "0x2735F60")]
		[DebuggerHidden]
		public <_ShatterStart>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x2735F8C", Offset = "0x2735F8C", VA = "0x2735F8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x2735F90", Offset = "0x2735F90", VA = "0x2735F90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x2736128", Offset = "0x2736128", VA = "0x2736128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer Closs;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material ClossMat;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer LU;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer RU;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer LD;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer RD;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material FinderMat;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer BordU;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer BordD;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material BordUDMat;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro DayLabel;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform PicTree;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<TextMeshPro> PicTimeLabel;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<MeshRenderer> IconMeshList;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material NormMat;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<MeshRenderer> TextMeshList;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material TextMat;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<GameObject> IconList;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject CurTree;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro DetailLabel;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro IconLabel;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MeshRenderer CurMesh;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material CurMat;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material DetailTextMat;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private cInter CurPosX;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private cInter Per;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private cListInter Shatter;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool IsShatter;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Color col;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Color col_y;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 v;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool is_init;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float update_text;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool is_update;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float offset;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float x_offset;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float y_offset;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x272AEE4", Offset = "0x272AEE4", VA = "0x272AEE4")]
	private void UpdateCurPos()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x272AF68", Offset = "0x272AF68", VA = "0x272AF68")]
	private void SetCurPos(int index, float t)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x272B020", Offset = "0x272B020", VA = "0x272B020")]
	private void UpdatePic()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x272B15C", Offset = "0x272B15C", VA = "0x272B15C")]
	public float GetLast()
	{
		return default(float);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x272B178", Offset = "0x272B178", VA = "0x272B178")]
	public bool IsStop()
	{
		return default(bool);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x272B194", Offset = "0x272B194", VA = "0x272B194")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x272B2C4", Offset = "0x272B2C4", VA = "0x272B2C4")]
	public void ShatterStart()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x272B304", Offset = "0x272B304", VA = "0x272B304")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEADB4", Offset = "0xCEADB4")]
	private IEnumerator _ShatterStart()
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x272B370", Offset = "0x272B370", VA = "0x272B370")]
	public void Init()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x272BBBC", Offset = "0x272BBBC", VA = "0x272BBBC")]
	public void In()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x272BCF8", Offset = "0x272BCF8", VA = "0x272BCF8")]
	public void Out()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x272BD50", Offset = "0x272BD50", VA = "0x272BD50")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x272B7E0", Offset = "0x272B7E0", VA = "0x272B7E0")]
	private void UpdateFocus()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x272BF2C", Offset = "0x272BF2C", VA = "0x272BF2C")]
	private void UpdateShatter()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x272BC2C", Offset = "0x272BC2C", VA = "0x272BC2C")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x272BB30", Offset = "0x272BB30", VA = "0x272BB30")]
	public void ChangeLanguage()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x272C00C", Offset = "0x272C00C", VA = "0x272C00C")]
	public Finder()
	{
	}
}
[Token(Token = "0x2000029")]
public class FireEffect : MonoBehaviour
{
	[Token(Token = "0x200002A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEF10", Offset = "0xCDEF10")]
	private sealed class <_Show>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireEffect <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015B")]
			[Address(RVA = "0x2736264", Offset = "0x2736264", VA = "0x2736264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015D")]
			[Address(RVA = "0x27362AC", Offset = "0x27362AC", VA = "0x27362AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x2736170", Offset = "0x2736170", VA = "0x2736170")]
		[DebuggerHidden]
		public <_Show>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x273619C", Offset = "0x273619C", VA = "0x273619C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x27361A0", Offset = "0x27361A0", VA = "0x27361A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x273626C", Offset = "0x273626C", VA = "0x273626C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0A5C", Offset = "0xCE0A5C")]
	public int _get;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<FireWall> mFireWall;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem FireParticle;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x272D860", Offset = "0x272D860", VA = "0x272D860")]
	private void _Get()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x272D90C", Offset = "0x272D90C", VA = "0x272D90C")]
	public void ShowSnap()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x272D9EC", Offset = "0x272D9EC", VA = "0x272D9EC")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x272DBAC", Offset = "0x272DBAC", VA = "0x272DBAC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x272DE34", Offset = "0x272DE34", VA = "0x272DE34")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x272DDC8", Offset = "0x272DDC8", VA = "0x272DDC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEAE64", Offset = "0xCEAE64")]
	private IEnumerator _Show()
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x272E034", Offset = "0x272E034", VA = "0x272E034")]
	public FireEffect()
	{
	}
}
[Token(Token = "0x200002B")]
public class FireWall : MonoBehaviour
{
	[Token(Token = "0x200002C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEF20", Offset = "0xCDEF20")]
	private sealed class <_Show>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireWall <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000169")]
			[Address(RVA = "0x2736454", Offset = "0x2736454", VA = "0x2736454", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016B")]
			[Address(RVA = "0x273649C", Offset = "0x273649C", VA = "0x273649C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x27362B4", Offset = "0x27362B4", VA = "0x27362B4")]
		[DebuggerHidden]
		public <_Show>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x27362E0", Offset = "0x27362E0", VA = "0x27362E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x27362E4", Offset = "0x27362E4", VA = "0x27362E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x273645C", Offset = "0x273645C", VA = "0x273645C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer FireMesh;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material Mat;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cInter FireAlpha;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cInter FireR;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private cInter FireG;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private cInter FireB;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool is_update;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x272E0AC", Offset = "0x272E0AC", VA = "0x272E0AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x272DFA0", Offset = "0x272DFA0", VA = "0x272DFA0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x272E1D4", Offset = "0x272E1D4", VA = "0x272E1D4")]
	private void GetMat()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x272E0B0", Offset = "0x272E0B0", VA = "0x272E0B0")]
	private void UpdateMat()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x272E260", Offset = "0x272E260", VA = "0x272E260")]
	public void Show()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x272E2B8", Offset = "0x272E2B8", VA = "0x272E2B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEAF14", Offset = "0xCEAF14")]
	private IEnumerator _Show()
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x272E324", Offset = "0x272E324", VA = "0x272E324")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x272E4A0", Offset = "0x272E4A0", VA = "0x272E4A0")]
	public FireWall()
	{
	}
}
[Token(Token = "0x200002D")]
public class FrontUICam : MonoBehaviour
{
	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer BGRender;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material SpriteMat;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x2730960", Offset = "0x2730960", VA = "0x2730960")]
	public void SetTex(RenderTexture p)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x2730A0C", Offset = "0x2730A0C", VA = "0x2730A0C")]
	public FrontUICam()
	{
	}
}
[Token(Token = "0x200002E")]
public class GrabArea : MonoBehaviour
{
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AreaFlg;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x268C608", Offset = "0x268C608", VA = "0x268C608")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x268C6F4", Offset = "0x268C6F4", VA = "0x268C6F4")]
	public GrabArea()
	{
	}
}
[Token(Token = "0x200002F")]
public class ItemIcon : MonoBehaviour
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Height;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cListInter PosY;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cListInter Rot;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Cube;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PropItemData TargetItem;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer CubeMesh;

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x26F4050", Offset = "0x26F4050", VA = "0x26F4050")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x26F4164", Offset = "0x26F4164", VA = "0x26F4164")]
	public void Set(PropItemData p)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x26F4224", Offset = "0x26F4224", VA = "0x26F4224")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x26F44CC", Offset = "0x26F44CC", VA = "0x26F44CC")]
	public void SetMat(Material mat)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x26F4570", Offset = "0x26F4570", VA = "0x26F4570")]
	public ItemIcon()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class SysMsgTbl
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Type;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int Index;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] Msg;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x2648D84", Offset = "0x2648D84", VA = "0x2648D84")]
	public void SwitchTbl()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x2648E94", Offset = "0x2648E94", VA = "0x2648E94")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x2648EEC", Offset = "0x2648EEC", VA = "0x2648EEC")]
	public SysMsgTbl()
	{
	}
}
[Token(Token = "0x2000031")]
public class LocalizeMgr : MonoBehaviour
{
	[Token(Token = "0x2000032")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEF30", Offset = "0xCDEF30")]
	private sealed class <LoadSysMsg>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizeMgr <>4__this;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> <list>5__2;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] <t>5__3;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000186")]
			[Address(RVA = "0x265C234", Offset = "0x265C234", VA = "0x265C234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000188")]
			[Address(RVA = "0x265C27C", Offset = "0x265C27C", VA = "0x265C27C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x265BE80", Offset = "0x265BE80", VA = "0x265BE80")]
		[DebuggerHidden]
		public <LoadSysMsg>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x265BEAC", Offset = "0x265BEAC", VA = "0x265BEAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x265BEB0", Offset = "0x265BEB0", VA = "0x265BEB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x265C23C", Offset = "0x265C23C", VA = "0x265C23C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000033")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEF40", Offset = "0xCDEF40")]
	private sealed class <LoadVoTbl>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizeMgr <>4__this;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> <list>5__2;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] <t>5__3;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018C")]
			[Address(RVA = "0x265C554", Offset = "0x265C554", VA = "0x265C554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018E")]
			[Address(RVA = "0x265C59C", Offset = "0x265C59C", VA = "0x265C59C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x265C284", Offset = "0x265C284", VA = "0x265C284")]
		[DebuggerHidden]
		public <LoadVoTbl>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x265C2B0", Offset = "0x265C2B0", VA = "0x265C2B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x265C2B4", Offset = "0x265C2B4", VA = "0x265C2B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x265C55C", Offset = "0x265C55C", VA = "0x265C55C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Language;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Vo;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset JpFont;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material JpNormMat;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material JpOutlineMat;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_FontAsset OtherFont;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material OtherNormMat;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material OtherOutlineMat;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<SysMsgTbl> mSysMsgTbl;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SysMsgTbl> mVoTbl;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x26F9B48", Offset = "0x26F9B48", VA = "0x26F9B48")]
	private void RemoveVoTbl()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x26F9C04", Offset = "0x26F9C04", VA = "0x26F9C04")]
	public SysMsgTbl SearchSysMsg(int type, int index)
	{
		return null;
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x26F9DD4", Offset = "0x26F9DD4", VA = "0x26F9DD4")]
	public string SearchSysMsgString(int type, int index)
	{
		return null;
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x26F9E78", Offset = "0x26F9E78", VA = "0x26F9E78")]
	private void LoadSysMsg(AssetBundleRequest load_data)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x26FA4C4", Offset = "0x26FA4C4", VA = "0x26FA4C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEAFC4", Offset = "0xCEAFC4")]
	public IEnumerator LoadSysMsg()
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x26FA530", Offset = "0x26FA530", VA = "0x26FA530")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB024", Offset = "0xCEB024")]
	public IEnumerator LoadVoTbl()
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x26FA59C", Offset = "0x26FA59C", VA = "0x26FA59C")]
	private SysMsgTbl ReadTbl(string[] stream_t)
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x26FA860", Offset = "0x26FA860", VA = "0x26FA860")]
	public SysMsgTbl SearchVoTbl(string audio_file)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x26FAA34", Offset = "0x26FAA34", VA = "0x26FAA34")]
	public string GetVoAudioFile(int type, int index)
	{
		return null;
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x26FACAC", Offset = "0x26FACAC", VA = "0x26FACAC")]
	public string GetVoMsg(int type, int index)
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x26FAF8C", Offset = "0x26FAF8C", VA = "0x26FAF8C")]
	public LocalizeMgr()
	{
	}
}
[Token(Token = "0x2000034")]
public class LogMgr : MonoBehaviour
{
	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEF50", Offset = "0xCDEF50")]
	private sealed class <_Send>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LogMgr <>4__this;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityWebRequest www;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000196")]
			[Address(RVA = "0x265C6D4", Offset = "0x265C6D4", VA = "0x265C6D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000198")]
			[Address(RVA = "0x265C71C", Offset = "0x265C71C", VA = "0x265C71C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0x265C5A4", Offset = "0x265C5A4", VA = "0x265C5A4")]
		[DebuggerHidden]
		public <_Send>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0x265C5D0", Offset = "0x265C5D0", VA = "0x265C5D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0x265C5D4", Offset = "0x265C5D4", VA = "0x265C5D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0x265C6DC", Offset = "0x265C6DC", VA = "0x265C6DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> SendLogList;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool IsSending;

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x26FB024", Offset = "0x26FB024", VA = "0x26FB024")]
	public void Send(string str)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x26FB0C4", Offset = "0x26FB0C4", VA = "0x26FB0C4")]
	private void _Send(string str)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x26FB194", Offset = "0x26FB194", VA = "0x26FB194")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB124", Offset = "0xCEB124")]
	private IEnumerator _Send(UnityWebRequest www)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x26FB20C", Offset = "0x26FB20C", VA = "0x26FB20C")]
	public LogMgr()
	{
	}
}
[Token(Token = "0x2000036")]
public class MainCam : MonoBehaviour
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mCam;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture MainCamColorTex;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x26FBD98", Offset = "0x26FBD98", VA = "0x26FBD98")]
	public void Create(RenderTexture color_tex, RenderTexture depth_tex)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x26FBE30", Offset = "0x26FBE30", VA = "0x26FBE30")]
	public MainCam()
	{
	}
}
[Token(Token = "0x2000037")]
public class NGMgr : MonoBehaviour
{
	[Token(Token = "0x600019B")]
	[Address(RVA = "0x26FD79C", Offset = "0x26FD79C", VA = "0x26FD79C")]
	public static bool Chk(string chk_text, out string ret)
	{
		return default(bool);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x26FD7F4", Offset = "0x26FD7F4", VA = "0x26FD7F4")]
	public NGMgr()
	{
	}
}
[Token(Token = "0x2000038")]
public class NextWnd : UIInputTree
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public PageLabel mPageLabel;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x2666258", Offset = "0x2666258", VA = "0x2666258", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x2666328", Offset = "0x2666328", VA = "0x2666328", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x26663A0", Offset = "0x26663A0", VA = "0x26663A0", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x2666528", Offset = "0x2666528", VA = "0x2666528")]
	private void LastPageCB()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x2666534", Offset = "0x2666534", VA = "0x2666534")]
	public NextWnd()
	{
	}
}
[Token(Token = "0x2000039")]
public class OVRCinema : MonoBehaviour
{
	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRMgr mMgr;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer UpBar;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer BtmBar;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer LeftBar;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer RightBar;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private cInter UpBarY;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private cInter BtmBarY;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private cInter Per;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private cInter RotY;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 rot;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int target_rot_y;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x266653C", Offset = "0x266653C", VA = "0x266653C")]
	public void CallLateUpdate()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x2666990", Offset = "0x2666990", VA = "0x2666990")]
	public void CinemaOut(float t = 0.5f)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x2666A18", Offset = "0x2666A18", VA = "0x2666A18")]
	public void CinemaIn(float t = 0.5f)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x2666934", Offset = "0x2666934", VA = "0x2666934")]
	private void UpdateRot()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x26667AC", Offset = "0x26667AC", VA = "0x26667AC")]
	private void UpdateBar()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x2666AA0", Offset = "0x2666AA0", VA = "0x2666AA0")]
	public OVRCinema()
	{
	}
}
[Token(Token = "0x200003A")]
public class OVRMgr : MonoBehaviour
{
	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0AF0", Offset = "0xCE0AF0")]
	public int _reset;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject RigObj;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CinemaObj;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SteamRig;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SwitchObj;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OVRCameraRig Rig;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OVRManager Mgr;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OVRCinema Cinema;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform LAnchorTree;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform RAnchorTree;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform OVR_L_Bone;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform OVR_R_Bone;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform SteamLAchor;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform SteamRAchor;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform Steam_L_Bone;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform Steam_R_Bone;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform LRay;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform RRay;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform LRayTarget;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform RRayTarget;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 r;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 chk_pos;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform TrackingSpace;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x2666B54", Offset = "0x2666B54", VA = "0x2666B54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x2666E90", Offset = "0x2666E90", VA = "0x2666E90")]
	public void Init()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x2666E94", Offset = "0x2666E94", VA = "0x2666E94")]
	public void SetOVRRot(Quaternion rot)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x2667020", Offset = "0x2667020", VA = "0x2667020")]
	public Transform RightAnchor()
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x266703C", Offset = "0x266703C", VA = "0x266703C")]
	public Transform R_HandBone()
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x2667044", Offset = "0x2667044", VA = "0x2667044")]
	public Transform LeftAnchor()
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x2667060", Offset = "0x2667060", VA = "0x2667060")]
	public Transform L_HandBone()
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x2666908", Offset = "0x2666908", VA = "0x2666908")]
	public Transform CamT()
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x2667068", Offset = "0x2667068", VA = "0x2667068")]
	private void VrFocusAcquired()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x26670BC", Offset = "0x26670BC", VA = "0x26670BC")]
	private void VRFocusLost()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x2667110", Offset = "0x2667110", VA = "0x2667110")]
	private void VRApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x2667178", Offset = "0x2667178", VA = "0x2667178")]
	private void UpdatedAnchors(OVRCameraRig rig)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x26672C4", Offset = "0x26672C4", VA = "0x26672C4")]
	public void SetCamBG_Solid(Color col)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x2667398", Offset = "0x2667398", VA = "0x2667398")]
	public void SetCamBG_Sky()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x26673F4", Offset = "0x26673F4", VA = "0x26673F4")]
	public void CallLateUpdate()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x26673F8", Offset = "0x26673F8", VA = "0x26673F8")]
	public void ResetRig()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x26674F8", Offset = "0x26674F8", VA = "0x26674F8")]
	public OVRMgr()
	{
	}
}
[Token(Token = "0x200003B")]
public class OVROffset : MonoBehaviour
{
	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0B84", Offset = "0xCE0B84")]
	public int _reset;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform OVRTarget;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SteamTarget;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform SwitchTarget;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x2667500", Offset = "0x2667500", VA = "0x2667500")]
	public void PosReset()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x26675B0", Offset = "0x26675B0", VA = "0x26675B0")]
	public OVROffset()
	{
	}
}
[Token(Token = "0x200003C")]
public class PhotonDebugScene : SceneData
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonDebugWnd mPhotonDebugWnd;

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x266ADC8", Offset = "0x266ADC8", VA = "0x266ADC8", Slot = "5")]
	public override void Remove()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x266AE9C", Offset = "0x266AE9C", VA = "0x266AE9C", Slot = "15")]
	public override void CallUpdate()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x266AF94", Offset = "0x266AF94", VA = "0x266AF94")]
	private void CreateWnd()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x266B06C", Offset = "0x266B06C", VA = "0x266B06C", Slot = "6")]
	public override void Disconnected()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x266B1A0", Offset = "0x266B1A0", VA = "0x266B1A0", Slot = "7")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x266B2D4", Offset = "0x266B2D4", VA = "0x266B2D4", Slot = "8")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x266B3E0", Offset = "0x266B3E0", VA = "0x266B3E0", Slot = "10")]
	public override void OnJoinRoomFailed()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x266B510", Offset = "0x266B510", VA = "0x266B510")]
	public PhotonDebugScene()
	{
	}
}
[Token(Token = "0x200003D")]
public class PicData : MonoBehaviour
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Index;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UI_OverBtn Btn;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UI_OverBtn ShareBtn;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image Pic;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SnapData mSnapData;

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x2675AD4", Offset = "0x2675AD4", VA = "0x2675AD4")]
	public void Init()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x2675BE4", Offset = "0x2675BE4", VA = "0x2675BE4")]
	public void ShowShareBtn(bool flg)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x2675C7C", Offset = "0x2675C7C", VA = "0x2675C7C")]
	public void SetPicData(float snap_time)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x2675E34", Offset = "0x2675E34", VA = "0x2675E34")]
	public PicData()
	{
	}
}
[Token(Token = "0x200003E")]
public class Piecher : PropItemData
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MeshRenderer InWaterMesh;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform WaterPos;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material WaterMat;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private cInter WaterLv;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private cInter WaterScale;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color top;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color btm;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Color math_top;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Color math_btm;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public cInter ColorPer;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool IsChangeColor;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x2675E3C", Offset = "0x2675E3C", VA = "0x2675E3C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x267608C", Offset = "0x267608C", VA = "0x267608C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x2675F74", Offset = "0x2675F74", VA = "0x2675F74")]
	public void ReStart()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x26760F4", Offset = "0x26760F4", VA = "0x26760F4", Slot = "10")]
	public override void SetWaterLv(float lv)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x2676204", Offset = "0x2676204", VA = "0x2676204")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x26768B8", Offset = "0x26768B8", VA = "0x26768B8")]
	public void ChangeColor()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x2676900", Offset = "0x2676900", VA = "0x2676900")]
	public Piecher()
	{
	}
}
[Token(Token = "0x200003F")]
public class PropItemBag : PropItemData
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0C18", Offset = "0xCE0C18")]
	public int _open_close;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform Rot;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public cInter RotX;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 rot;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x26788F0", Offset = "0x26788F0", VA = "0x26788F0")]
	private void OpenClose()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x267892C", Offset = "0x267892C", VA = "0x267892C", Slot = "8")]
	public override void Open(float t = 2f)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x2678A14", Offset = "0x2678A14", VA = "0x2678A14", Slot = "9")]
	public override void Close(float t = 2f)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x2678A74", Offset = "0x2678A74", VA = "0x2678A74")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x2678970", Offset = "0x2678970", VA = "0x2678970")]
	private void UpdateRot()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x2678B04", Offset = "0x2678B04", VA = "0x2678B04")]
	private float GetAngle()
	{
		return default(float);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x2678B2C", Offset = "0x2678B2C", VA = "0x2678B2C")]
	public PropItemBag()
	{
	}
}
[Token(Token = "0x2000040")]
public class PropItemCheker : MonoBehaviour
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody TargetRigid;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 BasePos;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Quaternion BaseAngle;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Length;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float ChkTime;

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x2678B8C", Offset = "0x2678B8C", VA = "0x2678B8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x2678BE8", Offset = "0x2678BE8", VA = "0x2678BE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x2678CB0", Offset = "0x2678CB0", VA = "0x2678CB0")]
	public void ResetPos()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x2678D24", Offset = "0x2678D24", VA = "0x2678D24")]
	public PropItemCheker()
	{
	}
}
[Token(Token = "0x2000041")]
public class PropItemData : MonoBehaviour
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ItemNo;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int StringType;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int StringIndex;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsHave;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool ReleaseFlg;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool ItemIconFlg;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ItemIcon mIcon;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SceneUnit ParentUnit;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float BaseDir;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public cInter BtmDir;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsRev;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool InRevPoint;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int InRevIndex;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem mParticle;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer LiquidMesh;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material LiquidMat;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Collider[] MCol;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float hit_distance;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 hit_pos;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 ItemUp;

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x2678D38", Offset = "0x2678D38", VA = "0x2678D38")]
	public void GetCol()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x2675E78", Offset = "0x2675E78", VA = "0x2675E78", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x2678D9C", Offset = "0x2678D9C", VA = "0x2678D9C", Slot = "5")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x2678DA8", Offset = "0x2678DA8", VA = "0x2678DA8", Slot = "6")]
	public virtual void Have([Optional] SceneUnit unit)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x2678DB8", Offset = "0x2678DB8", VA = "0x2678DB8", Slot = "7")]
	public virtual void Release()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x2676500", Offset = "0x2676500", VA = "0x2676500")]
	public void ChkUpDir()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x2678DC8", Offset = "0x2678DC8", VA = "0x2678DC8", Slot = "8")]
	public virtual void Open(float t)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x2678DCC", Offset = "0x2678DCC", VA = "0x2678DCC", Slot = "9")]
	public virtual void Close(float t)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x2678DD0", Offset = "0x2678DD0", VA = "0x2678DD0", Slot = "10")]
	public virtual void SetWaterLv(float lv)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x2678DD4", Offset = "0x2678DD4", VA = "0x2678DD4", Slot = "11")]
	public virtual void SetBtmDir(float dir)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x2678E0C", Offset = "0x2678E0C", VA = "0x2678E0C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x2676998", Offset = "0x2676998", VA = "0x2676998")]
	public PropItemData()
	{
	}
}
[Token(Token = "0x2000042")]
public class PropItemLadder : PropItemData
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MeshRenderer Base;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x2678F00", Offset = "0x2678F00", VA = "0x2678F00")]
	public PropItemLadder()
	{
	}
}
[Token(Token = "0x2000043")]
public class ReleasePoint : MonoBehaviour
{
	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider mCol;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> ReleasePos;

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x26925AC", Offset = "0x26925AC", VA = "0x26925AC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x26927B0", Offset = "0x26927B0", VA = "0x26927B0")]
	private Transform Search(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x2692B4C", Offset = "0x2692B4C", VA = "0x2692B4C")]
	public ReleasePoint()
	{
	}
}
[Token(Token = "0x2000044")]
public class RevPoint : MonoBehaviour
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider mCol;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Index;

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x2692CE8", Offset = "0x2692CE8", VA = "0x2692CE8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x2692DB8", Offset = "0x2692DB8", VA = "0x2692DB8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x2692E70", Offset = "0x2692E70", VA = "0x2692E70")]
	public RevPoint()
	{
	}
}
[Token(Token = "0x2000045")]
public class RoomScene : SceneData
{
	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEF60", Offset = "0xCDEF60")]
	private sealed class <_MemberUpdate>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomScene <>4__this;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021D")]
			[Address(RVA = "0x265F798", Offset = "0x265F798", VA = "0x265F798", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021F")]
			[Address(RVA = "0x265F7E0", Offset = "0x265F7E0", VA = "0x265F7E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x265F3B0", Offset = "0x265F3B0", VA = "0x265F3B0")]
		[DebuggerHidden]
		public <_MemberUpdate>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x265F3DC", Offset = "0x265F3DC", VA = "0x265F3DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x265F3E0", Offset = "0x265F3E0", VA = "0x265F3E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x265F7A0", Offset = "0x265F7A0", VA = "0x265F7A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000047")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEF70", Offset = "0xCDEF70")]
	private sealed class <_ToRoom>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomScene <>4__this;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000223")]
			[Address(RVA = "0x26604E0", Offset = "0x26604E0", VA = "0x26604E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000225")]
			[Address(RVA = "0x2660528", Offset = "0x2660528", VA = "0x2660528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0x26603E0", Offset = "0x26603E0", VA = "0x26603E0")]
		[DebuggerHidden]
		public <_ToRoom>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x266040C", Offset = "0x266040C", VA = "0x266040C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0x2660410", Offset = "0x2660410", VA = "0x2660410", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0x26604E8", Offset = "0x26604E8", VA = "0x26604E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000048")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEF80", Offset = "0xCDEF80")]
	private sealed class <RoomUnitProc>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomScene <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000229")]
			[Address(RVA = "0x265F360", Offset = "0x265F360", VA = "0x265F360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600022B")]
			[Address(RVA = "0x265F3A8", Offset = "0x265F3A8", VA = "0x265F3A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000226")]
		[Address(RVA = "0x265EF10", Offset = "0x265EF10", VA = "0x265EF10")]
		[DebuggerHidden]
		public <RoomUnitProc>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x265EF3C", Offset = "0x265EF3C", VA = "0x265EF3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x265EF40", Offset = "0x265EF40", VA = "0x265EF40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0x265F368", Offset = "0x265F368", VA = "0x265F368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEF90", Offset = "0xCDEF90")]
	private sealed class <_RetLobby>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomScene <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022F")]
			[Address(RVA = "0x265FFC0", Offset = "0x265FFC0", VA = "0x265FFC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000231")]
			[Address(RVA = "0x2660008", Offset = "0x2660008", VA = "0x2660008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0x265FB94", Offset = "0x265FB94", VA = "0x265FB94")]
		[DebuggerHidden]
		public <_RetLobby>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0x265FBC0", Offset = "0x265FBC0", VA = "0x265FBC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0x265FBC4", Offset = "0x265FBC4", VA = "0x265FBC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0x265FFC8", Offset = "0x265FFC8", VA = "0x265FFC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEFA0", Offset = "0xCDEFA0")]
	private sealed class <_Tips>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomScene <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000235")]
			[Address(RVA = "0x26601B0", Offset = "0x26601B0", VA = "0x26601B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000237")]
			[Address(RVA = "0x26601F8", Offset = "0x26601F8", VA = "0x26601F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0x2660010", Offset = "0x2660010", VA = "0x2660010")]
		[DebuggerHidden]
		public <_Tips>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0x266003C", Offset = "0x266003C", VA = "0x266003C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0x2660040", Offset = "0x2660040", VA = "0x2660040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000236")]
		[Address(RVA = "0x26601B8", Offset = "0x26601B8", VA = "0x26601B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEFB0", Offset = "0xCDEFB0")]
	private sealed class <_Prologe>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomScene <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600023B")]
			[Address(RVA = "0x265FB44", Offset = "0x265FB44", VA = "0x265FB44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600023D")]
			[Address(RVA = "0x265FB8C", Offset = "0x265FB8C", VA = "0x265FB8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x265F7E8", Offset = "0x265F7E8", VA = "0x265F7E8")]
		[DebuggerHidden]
		public <_Prologe>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x265F814", Offset = "0x265F814", VA = "0x265F814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x265F818", Offset = "0x265F818", VA = "0x265F818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x265FB4C", Offset = "0x265FB4C", VA = "0x265FB4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEFC0", Offset = "0xCDEFC0")]
	private sealed class <_ToDive>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomScene <>4__this;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000241")]
			[Address(RVA = "0x2660390", Offset = "0x2660390", VA = "0x2660390", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000243")]
			[Address(RVA = "0x26603D8", Offset = "0x26603D8", VA = "0x26603D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x2660200", Offset = "0x2660200", VA = "0x2660200")]
		[DebuggerHidden]
		public <_ToDive>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0x266022C", Offset = "0x266022C", VA = "0x266022C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0x2660230", Offset = "0x2660230", VA = "0x2660230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x2660398", Offset = "0x2660398", VA = "0x2660398", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject TableTree;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LobbyWnd mLobbyWnd;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WaitWnd mWaitWnd;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetUnitWnd mSetUnitWnd;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PrologeWnd mPrologeWnd;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BGM RoomBGM;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<PropItemData> PropItemList;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<PropItemCheker> ItemChkerList;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0CAC", Offset = "0xCE0CAC")]
	public int _item;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool IsMember;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool is_wait;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool is_to_room;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	private bool is_tips;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool is_prologe;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool is_scene_change;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string other_player_name;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x2695820", Offset = "0x2695820", VA = "0x2695820")]
	private void SearchItem()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x2695B7C", Offset = "0x2695B7C", VA = "0x2695B7C")]
	public void ResetItemPos()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x2695C8C", Offset = "0x2695C8C", VA = "0x2695C8C")]
	public void EnableTable()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x2695D08", Offset = "0x2695D08", VA = "0x2695D08")]
	public void DisableTable()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x2695D7C", Offset = "0x2695D7C", VA = "0x2695D7C")]
	private void MemberUpdate()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x2695DB4", Offset = "0x2695DB4", VA = "0x2695DB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB1D4", Offset = "0xCEB1D4")]
	private IEnumerator _MemberUpdate()
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x2695E20", Offset = "0x2695E20", VA = "0x2695E20")]
	private void ToTips()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x2695EBC", Offset = "0x2695EBC", VA = "0x2695EBC")]
	private void CreateWnd()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x26960CC", Offset = "0x26960CC", VA = "0x26960CC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x26960DC", Offset = "0x26960DC", VA = "0x26960DC", Slot = "5")]
	public override void Remove()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x2696234", Offset = "0x2696234", VA = "0x2696234")]
	private void RemoveWnd()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x26963D4", Offset = "0x26963D4", VA = "0x26963D4")]
	private void StartProloge()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x269614C", Offset = "0x269614C", VA = "0x269614C")]
	private void RemoveProloge()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x26964F4", Offset = "0x26964F4", VA = "0x26964F4", Slot = "15")]
	public override void CallUpdate()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x2696A04", Offset = "0x2696A04", VA = "0x2696A04", Slot = "25")]
	public override void ShowMasterUI()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x2696ABC", Offset = "0x2696ABC", VA = "0x2696ABC", Slot = "16")]
	public override void CallLateUpdate()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x2696B40", Offset = "0x2696B40", VA = "0x2696B40")]
	private void SnapChk()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x2696C48", Offset = "0x2696C48", VA = "0x2696C48", Slot = "18")]
	public override void BGMLoadComp(BGM bgm)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x2696CD4", Offset = "0x2696CD4", VA = "0x2696CD4")]
	public void ToRoom()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x2696DA0", Offset = "0x2696DA0", VA = "0x2696DA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB234", Offset = "0xCEB234")]
	private IEnumerator _ToRoom()
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x2696998", Offset = "0x2696998", VA = "0x2696998")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB294", Offset = "0xCEB294")]
	private IEnumerator RoomUnitProc()
	{
		return null;
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x2696E0C", Offset = "0x2696E0C", VA = "0x2696E0C")]
	private void OpenWaitWnd()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x2696F20", Offset = "0x2696F20", VA = "0x2696F20")]
	private void CloseWaitWnd()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x2696FBC", Offset = "0x2696FBC", VA = "0x2696FBC")]
	private void ReCreate()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x2697174", Offset = "0x2697174", VA = "0x2697174")]
	private void RetLobby()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x26971B0", Offset = "0x26971B0", VA = "0x26971B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB2F4", Offset = "0xCEB2F4")]
	private IEnumerator _RetLobby()
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x2695E84", Offset = "0x2695E84", VA = "0x2695E84")]
	public void ShowTips()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x269721C", Offset = "0x269721C", VA = "0x269721C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB354", Offset = "0xCEB354")]
	private IEnumerator _Tips()
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x2697288", Offset = "0x2697288", VA = "0x2697288")]
	public void TipsSkip(int skip)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x269732C", Offset = "0x269732C", VA = "0x269732C")]
	public void ToProloge()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x2697364", Offset = "0x2697364", VA = "0x2697364")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB3B4", Offset = "0xCEB3B4")]
	private IEnumerator _Prologe()
	{
		return null;
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x26973D0", Offset = "0x26973D0", VA = "0x26973D0")]
	public bool ToDive()
	{
		return default(bool);
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x269741C", Offset = "0x269741C", VA = "0x269741C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB414", Offset = "0xCEB414")]
	private IEnumerator _ToDive()
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x2697488", Offset = "0x2697488", VA = "0x2697488", Slot = "6")]
	public override void Disconnected()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x26975F4", Offset = "0x26975F4", VA = "0x26975F4", Slot = "7")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x2697740", Offset = "0x2697740", VA = "0x2697740", Slot = "8")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x2697810", Offset = "0x2697810", VA = "0x2697810", Slot = "10")]
	public override void OnJoinRoomFailed()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x26978A8", Offset = "0x26978A8", VA = "0x26978A8", Slot = "9")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x2697950", Offset = "0x2697950", VA = "0x2697950", Slot = "11")]
	public override void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x2697A1C", Offset = "0x2697A1C", VA = "0x2697A1C", Slot = "12")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x2697AA0", Offset = "0x2697AA0", VA = "0x2697AA0", Slot = "13")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x2697C58", Offset = "0x2697C58", VA = "0x2697C58")]
	private void LeftRoomLangCB(SystemMsgWnd wnd)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x2697CF4", Offset = "0x2697CF4", VA = "0x2697CF4", Slot = "14")]
	public override void CngMaxPlayer()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x2697CF8", Offset = "0x2697CF8", VA = "0x2697CF8")]
	public void ClearRoomUnit()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x2697E9C", Offset = "0x2697E9C", VA = "0x2697E9C")]
	public void SetSceneUnit(Player player, SceneUnit.eUnit unit)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x2697F50", Offset = "0x2697F50", VA = "0x2697F50")]
	public RoomScene()
	{
	}
}
[Token(Token = "0x200004D")]
public class RoomUnitMgr : MonoBehaviour
{
	[Token(Token = "0x200004E")]
	public class SpeakIcon
	{
		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VoChat Vo;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneText Target;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] d;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float vol;

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x2660E74", Offset = "0x2660E74", VA = "0x2660E74")]
		public SpeakIcon(VoChat vo, SceneText target)
		{
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x2660EE8", Offset = "0x2660EE8", VA = "0x2660EE8")]
		public void Chk()
		{
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x2660A78", Offset = "0x2660A78", VA = "0x2660A78")]
		public bool IsSpeak()
		{
			return default(bool);
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x266101C", Offset = "0x266101C", VA = "0x266101C")]
		private bool IsSpeaking()
		{
			return default(bool);
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x2661190", Offset = "0x2661190", VA = "0x2661190")]
		private bool IsRecording()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200004F")]
	public class AnimeTimeline
	{
		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneUnit pUnit;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player pPlayer;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeakIcon mSpeakIcon;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsVR;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TimelineData StandTimeline;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TimelineData TalkTimeline;

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x2660530", Offset = "0x2660530", VA = "0x2660530")]
		public void ChkVR()
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x266074C", Offset = "0x266074C", VA = "0x266074C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x2660884", Offset = "0x2660884", VA = "0x2660884")]
		public void Set(SceneUnit unit, Player p, SpeakIcon icon)
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x2660A10", Offset = "0x2660A10", VA = "0x2660A10")]
		public void Chk()
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x2660B94", Offset = "0x2660B94", VA = "0x2660B94")]
		private void PlayStand()
		{
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0x2660D00", Offset = "0x2660D00", VA = "0x2660D00")]
		private void PlayTalk()
		{
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x2660E6C", Offset = "0x2660E6C", VA = "0x2660E6C")]
		public AnimeTimeline()
		{
		}
	}

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0D40", Offset = "0xCE0D40")]
	public int _reset;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PosNo;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TimelineData StandTimeLinePrefab;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TimelineData TalkTimeLinePrefab;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AnimeTimeline> mAnimeTimelineList;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SceneUnit PlayerUnit;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Transform> UnitPos;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Action> ResetCB;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool is_callplaystyle;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SpeakIcon> mIconList;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float chk_t;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float mic_chk_t;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float mic_chk_t_;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float mic_sum;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0DD4", Offset = "0xCE0DD4")]
	public int _openchkwnd;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x2698010", Offset = "0x2698010", VA = "0x2698010")]
	private void _ResetPos()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x26985EC", Offset = "0x26985EC", VA = "0x26985EC")]
	public void ShowPos()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x269869C", Offset = "0x269869C", VA = "0x269869C")]
	public void HidePos()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x269874C", Offset = "0x269874C", VA = "0x269874C")]
	public void AddResetCB(Action cb)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x269883C", Offset = "0x269883C", VA = "0x269883C")]
	public void DelResetCB(Action cb)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x2698018", Offset = "0x2698018", VA = "0x2698018")]
	public void ResetPos(bool is_all_reset = false)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x26989D8", Offset = "0x26989D8", VA = "0x26989D8")]
	public void ResetUserName()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x26992E0", Offset = "0x26992E0", VA = "0x26992E0")]
	private void ResetMotion()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x2699AF8", Offset = "0x2699AF8", VA = "0x2699AF8")]
	public void CreateAnimeTimeline()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x26991E4", Offset = "0x26991E4", VA = "0x26991E4")]
	private void ResetAnimeTimeline()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x2699A04", Offset = "0x2699A04", VA = "0x2699A04")]
	private void ActiveAnimeTimeline(int index, SpeakIcon icon)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x2699F18", Offset = "0x2699F18", VA = "0x2699F18")]
	private void ActiveAnimeTimeline(int index, SceneUnit unit, Player player, SpeakIcon icon)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x269A038", Offset = "0x269A038", VA = "0x269A038")]
	public Transform GetUnitPos(int index)
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x2697D50", Offset = "0x2697D50", VA = "0x2697D50")]
	public void ClearRoomUnit()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x269A2E4", Offset = "0x269A2E4", VA = "0x269A2E4")]
	private void SetPlayerMdl(GameObject p)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x269A114", Offset = "0x269A114", VA = "0x269A114")]
	public void SwapMdl(string path)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x2697050", Offset = "0x2697050", VA = "0x2697050")]
	public void CreateMe()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x26988A0", Offset = "0x26988A0", VA = "0x26988A0")]
	public void ChangePlayStyle()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x269AB14", Offset = "0x269AB14", VA = "0x269AB14")]
	private AnimeTimeline Search(Player player)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x269AC40", Offset = "0x269AC40", VA = "0x269AC40")]
	private AnimeTimeline Search(SceneUnit unit)
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x269AEA8", Offset = "0x269AEA8", VA = "0x269AEA8")]
	public void ChkMotion()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x2699458", Offset = "0x2699458", VA = "0x2699458")]
	public void UpdateVRUnit()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x269AEAC", Offset = "0x269AEAC", VA = "0x269AEAC")]
	public SceneUnit SetVRPer(SceneUnit.eUnit unit, float per, float t)
	{
		return null;
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x269928C", Offset = "0x269928C", VA = "0x269928C")]
	public void ClearIconList()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x269AF84", Offset = "0x269AF84", VA = "0x269AF84")]
	public void AddIcon(SpeakIcon icon)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x269AFFC", Offset = "0x269AFFC", VA = "0x269AFFC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x269B4A0", Offset = "0x269B4A0", VA = "0x269B4A0")]
	public void MicChk()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x269B5B4", Offset = "0x269B5B4", VA = "0x269B5B4")]
	private void _OpenChkWnd()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x269B608", Offset = "0x269B608", VA = "0x269B608")]
	public RoomUnitMgr()
	{
	}
}
[Token(Token = "0x2000050")]
public class RotCam : MonoBehaviour
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CamTarget;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform RotY;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RotX;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Offset;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera Cam;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float AddY;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x269B75C", Offset = "0x269B75C", VA = "0x269B75C")]
	public void CallLateUpdate()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x269B828", Offset = "0x269B828", VA = "0x269B828")]
	public RotCam()
	{
	}
}
[Token(Token = "0x2000051")]
public class SaveMgr : MonoBehaviour
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool IsSave;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string room_id;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string master_id;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x269DE00", Offset = "0x269DE00", VA = "0x269DE00")]
	public static bool Init()
	{
		return default(bool);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x269DE08", Offset = "0x269DE08", VA = "0x269DE08")]
	public static void LoadSaveData()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x269DE0C", Offset = "0x269DE0C", VA = "0x269DE0C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x269DE10", Offset = "0x269DE10", VA = "0x269DE10")]
	public static void SaveName(string player_name)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x269DEA4", Offset = "0x269DEA4", VA = "0x269DEA4")]
	public static string LoadName()
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x269DF0C", Offset = "0x269DF0C", VA = "0x269DF0C")]
	public static void SaveUniqueID(string uniqueid)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x269DFA0", Offset = "0x269DFA0", VA = "0x269DFA0")]
	public static string LoadUniqueID()
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x269E008", Offset = "0x269E008", VA = "0x269E008")]
	public static void SaveMicDevice(string mic)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x269E09C", Offset = "0x269E09C", VA = "0x269E09C")]
	public static string LoadMicDevice()
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x269E104", Offset = "0x269E104", VA = "0x269E104")]
	public static void SaveRegion(string reg)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x269E198", Offset = "0x269E198", VA = "0x269E198")]
	public static string LoadRegion()
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x269E200", Offset = "0x269E200", VA = "0x269E200")]
	public static void SetBGMVol(int _save_bgm_vol)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x269E294", Offset = "0x269E294", VA = "0x269E294")]
	public static int GetBGMVol(int _save_bgm_vol)
	{
		return default(int);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x269E2E4", Offset = "0x269E2E4", VA = "0x269E2E4")]
	public static void SetVoVol(int _save_vo_vol)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x269E378", Offset = "0x269E378", VA = "0x269E378")]
	public static int GetVoVol(int _save_vo_vol)
	{
		return default(int);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x269E3C8", Offset = "0x269E3C8", VA = "0x269E3C8")]
	public static void SetSEVol(int _save_se_vol)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x269E45C", Offset = "0x269E45C", VA = "0x269E45C")]
	public static int GetSEVol(int _save_se_vol)
	{
		return default(int);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x269E4AC", Offset = "0x269E4AC", VA = "0x269E4AC")]
	public static void SetChatVol(int _save_chat_vol)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x269E540", Offset = "0x269E540", VA = "0x269E540")]
	public static int GetChatVol(int _save_chat_vol)
	{
		return default(int);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x269E590", Offset = "0x269E590", VA = "0x269E590")]
	public static void SetStyle(int style)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x269E624", Offset = "0x269E624", VA = "0x269E624")]
	public static int GetStyle(int _save_style)
	{
		return default(int);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x269E674", Offset = "0x269E674", VA = "0x269E674")]
	public static void SetSwCam(int cam_spd)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x269E708", Offset = "0x269E708", VA = "0x269E708")]
	public static int GetSwCam(int _cam_spd)
	{
		return default(int);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x269E758", Offset = "0x269E758", VA = "0x269E758")]
	public static void SetLangText(int lang)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x269E7EC", Offset = "0x269E7EC", VA = "0x269E7EC")]
	public static int GetLangText(int lang)
	{
		return default(int);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x269E83C", Offset = "0x269E83C", VA = "0x269E83C")]
	public static void SetLangVo(int vo)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x269E8D0", Offset = "0x269E8D0", VA = "0x269E8D0")]
	public static int GetLangVo(int vo)
	{
		return default(int);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x269E920", Offset = "0x269E920", VA = "0x269E920")]
	public static void SetLangBln(int bln)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x269E9B4", Offset = "0x269E9B4", VA = "0x269E9B4")]
	public static int GetLangBln(int bln)
	{
		return default(int);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x269EA04", Offset = "0x269EA04", VA = "0x269EA04")]
	public static void SetMatchLang(int lang)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x269EA98", Offset = "0x269EA98", VA = "0x269EA98")]
	public static int GetMatchLang(int lang)
	{
		return default(int);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x269EAE8", Offset = "0x269EAE8", VA = "0x269EAE8")]
	public static void SetGameClearFlg(int flg)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x269EB7C", Offset = "0x269EB7C", VA = "0x269EB7C")]
	public static int LoadGameClearFlg()
	{
		return default(int);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x269EBC8", Offset = "0x269EBC8", VA = "0x269EBC8")]
	public static void SetPastClearFlg(int flg)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x269EC5C", Offset = "0x269EC5C", VA = "0x269EC5C")]
	public static int LoadPastClearFlg()
	{
		return default(int);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x269ECA8", Offset = "0x269ECA8", VA = "0x269ECA8")]
	public static void SetOpenMailFlg()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x269ED38", Offset = "0x269ED38", VA = "0x269ED38")]
	public static int LoadOpenMail()
	{
		return default(int);
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x269ED84", Offset = "0x269ED84", VA = "0x269ED84")]
	public static void SetClearInfo()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x269EE14", Offset = "0x269EE14", VA = "0x269EE14")]
	public static int LoadClearInfo()
	{
		return default(int);
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x269EE60", Offset = "0x269EE60", VA = "0x269EE60")]
	public static void RemoveUserData()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x269EE7C", Offset = "0x269EE7C", VA = "0x269EE7C")]
	public static void SaveRoomName(string room_name)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x269EED4", Offset = "0x269EED4", VA = "0x269EED4")]
	public static string LoadRoomName()
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x269EF3C", Offset = "0x269EF3C", VA = "0x269EF3C")]
	public static void ClearRoomName()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x269EF84", Offset = "0x269EF84", VA = "0x269EF84")]
	public static void SaveRoomMasterID(string id)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x269EFDC", Offset = "0x269EFDC", VA = "0x269EFDC")]
	public static string LoadRoomMasterID()
	{
		return null;
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x269F044", Offset = "0x269F044", VA = "0x269F044")]
	public static void ClearRoomMasterID()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x269F08C", Offset = "0x269F08C", VA = "0x269F08C")]
	public SaveMgr()
	{
	}
}
[Token(Token = "0x2000052")]
public class SceneCamMgr : MonoBehaviour
{
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsDustCam;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture m_ColorTex;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture m_DepthTex;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture m_LastTex;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material Mat;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer FrontUIBG;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MainCam mMainCam;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FrontUICam mFrontUICam;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DustCamera mDustCam;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BloomOptimized mBloom;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int w;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int h;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x269F124", Offset = "0x269F124", VA = "0x269F124")]
	public void Create()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x269F300", Offset = "0x269F300", VA = "0x269F300")]
	public void ReCreateRenderTex()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x269F67C", Offset = "0x269F67C", VA = "0x269F67C")]
	public void CallEffect()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x269F718", Offset = "0x269F718", VA = "0x269F718")]
	public SceneCamMgr()
	{
	}
}
[Token(Token = "0x2000053")]
public class SceneData : MonoBehaviour
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsInit;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool IsSceneComp;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform SceneTree;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform VRTree;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform VRSlowTree;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x269F720", Offset = "0x269F720", VA = "0x269F720")]
	public void ShowSceneTree(bool flg)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x269F75C", Offset = "0x269F75C", VA = "0x269F75C")]
	public void ShowVRTree(bool flg)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x269F798", Offset = "0x269F798", VA = "0x269F798")]
	public void ShowVRSlowTree(bool flg)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x26960D4", Offset = "0x26960D4", VA = "0x26960D4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x2696148", Offset = "0x2696148", VA = "0x2696148", Slot = "5")]
	public virtual void Remove()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x269F7D4", Offset = "0x269F7D4", VA = "0x269F7D4", Slot = "6")]
	public virtual void Disconnected()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x269F828", Offset = "0x269F828", VA = "0x269F828", Slot = "7")]
	public virtual void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x269F87C", Offset = "0x269F87C", VA = "0x269F87C", Slot = "8")]
	public virtual void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x269F8E0", Offset = "0x269F8E0", VA = "0x269F8E0", Slot = "9")]
	public virtual void OnLeftRoom()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x269F960", Offset = "0x269F960", VA = "0x269F960", Slot = "10")]
	public virtual void OnJoinRoomFailed()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x2697A18", Offset = "0x2697A18", VA = "0x2697A18", Slot = "11")]
	public virtual void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x269F9E0", Offset = "0x269F9E0", VA = "0x269F9E0", Slot = "12")]
	public virtual void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x269F9E4", Offset = "0x269F9E4", VA = "0x269F9E4", Slot = "13")]
	public virtual void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x269F9E8", Offset = "0x269F9E8", VA = "0x269F9E8", Slot = "14")]
	public virtual void CngMaxPlayer()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x2696994", Offset = "0x2696994", VA = "0x2696994", Slot = "15")]
	public virtual void CallUpdate()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x2696AC0", Offset = "0x2696AC0", VA = "0x2696AC0", Slot = "16")]
	public virtual void CallLateUpdate()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x269F9EC", Offset = "0x269F9EC", VA = "0x269F9EC", Slot = "17")]
	public virtual void FrontUIPosUpdate()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x269F9F0", Offset = "0x269F9F0", VA = "0x269F9F0", Slot = "18")]
	public virtual void BGMLoadComp(BGM bgm)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x269F9F4", Offset = "0x269F9F4", VA = "0x269F9F4", Slot = "19")]
	public virtual void BGMLoadFiald()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x269F9F8", Offset = "0x269F9F8", VA = "0x269F9F8", Slot = "20")]
	public virtual void PlaySceneBGM(int bgm_index, float fade_time = 0f)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x269F9FC", Offset = "0x269F9FC", VA = "0x269F9FC", Slot = "21")]
	public virtual void StopSceneBGM(int bgm_index, float fade_time = 0f)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x269FA00", Offset = "0x269FA00", VA = "0x269FA00", Slot = "22")]
	public virtual void OpenSnap(SnapData snap_data, SceneUnit.eUnit unit)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x269FA04", Offset = "0x269FA04", VA = "0x269FA04", Slot = "23")]
	public virtual void TimeCountStart()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x269FA08", Offset = "0x269FA08", VA = "0x269FA08", Slot = "24")]
	public virtual void TimeOutProc()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x269FA0C", Offset = "0x269FA0C", VA = "0x269FA0C", Slot = "25")]
	public virtual void ShowMasterUI()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x2698008", Offset = "0x2698008", VA = "0x2698008")]
	public SceneData()
	{
	}
}
[Token(Token = "0x2000054")]
public class SceneMgr : MonoBehaviour
{
	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x269FA10", Offset = "0x269FA10", VA = "0x269FA10")]
	public SceneMgr()
	{
	}
}
[Token(Token = "0x2000055")]
public class SceneRoot : MonoBehaviour
{
	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0E68", Offset = "0xCE0E68")]
	public int _none_col;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0EFC", Offset = "0xCE0EFC")]
	public int _none_mesh;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE0F90", Offset = "0xCE0F90")]
	public int _door;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Door> DoorList;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1024", Offset = "0xCE1024")]
	public int _item;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<PropItemData> PropItemList;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE10B8", Offset = "0xCE10B8")]
	public int _shadowmesh;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE114C", Offset = "0xCE114C")]
	public int _searchrvs;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE11E0", Offset = "0xCE11E0")]
	public int _searchc;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> SearchTarget;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FireEffect mFireEffect;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<PlayableDirector> TimelineEffect;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RendererViewSwitcher mRendererViewSwitcher;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x269FA18", Offset = "0x269FA18", VA = "0x269FA18")]
	private void NoneCol()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x269FB70", Offset = "0x269FB70", VA = "0x269FB70")]
	private void NoneMesh()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x269FE58", Offset = "0x269FE58", VA = "0x269FE58")]
	private void SearchDoor()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x269FFD8", Offset = "0x269FFD8", VA = "0x269FFD8")]
	private void SearchItem()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x26A0234", Offset = "0x26A0234", VA = "0x26A0234")]
	public void SearchFireEffect()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x26A02B0", Offset = "0x26A02B0", VA = "0x26A02B0")]
	private void ShadowMesh()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x26A03E4", Offset = "0x26A03E4", VA = "0x26A03E4")]
	private void SearchRVS()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x26A04F4", Offset = "0x26A04F4", VA = "0x26A04F4")]
	private void SearchC()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x26A0604", Offset = "0x26A0604", VA = "0x26A0604")]
	public void ShowFireEffect()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x26A0694", Offset = "0x26A0694", VA = "0x26A0694")]
	public void HideFireEffect()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x26A0724", Offset = "0x26A0724", VA = "0x26A0724")]
	public void FireSnap()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x26A07B4", Offset = "0x26A07B4", VA = "0x26A07B4")]
	public void FirePause()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x26A0844", Offset = "0x26A0844", VA = "0x26A0844")]
	public SceneRoot()
	{
	}
}
[Token(Token = "0x2000056")]
public class SceneUnit : MonoBehaviour
{
	[Token(Token = "0x2000057")]
	public enum eUnit
	{
		[Token(Token = "0x400022D")]
		Doctor,
		[Token(Token = "0x400022E")]
		President,
		[Token(Token = "0x400022F")]
		Son,
		[Token(Token = "0x4000230")]
		Researcher,
		[Token(Token = "0x4000231")]
		Assistant,
		[Token(Token = "0x4000232")]
		Millionaire,
		[Token(Token = "0x4000233")]
		MobA,
		[Token(Token = "0x4000234")]
		MobB,
		[Token(Token = "0x4000235")]
		MobC,
		[Token(Token = "0x4000236")]
		Mob,
		[Token(Token = "0x4000237")]
		Max
	}

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1274", Offset = "0xCE1274")]
	public int _item_R;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1308", Offset = "0xCE1308")]
	public int _item_l;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE139C", Offset = "0xCE139C")]
	public int _searchmesh;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public eUnit mUnitType;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool IsSilentVoice;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool IsCamTarget;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator mAnimtor;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SceneUnitAnimator mSceneUnitAnimator;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator SubAnimtor;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SceneUnitAnimator SubSceneUnitAnimator;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TimelineData Parent;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SkinnedMeshRenderer mMesh;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SkinnedMeshRenderer mSubMesh;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material[] Mat;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material[] SubMat;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private cInter SubMdlScale;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource AudioPlayer;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource SEPlayer;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform CamPos;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform MotionCamPos;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private cInter MotionCamPosPer;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform ItemHavePoint;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<PropItemData> HaveItemList;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private cListInter HaveItemPosY;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float pos_x;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float pos_y;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VRIK mVRIK;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AvaterAim mAim;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public PhotonChildTransformView PhotonVR;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private cInter VRHeadPer;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private cInter VRLPer;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private cInter VRRPer;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform NameTree;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform BlnTree;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform L_HaveTree;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform R_HaveTree;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject HaveItem_L;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject HaveItem_R;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private PropItemData LProp;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PropItemData RProp;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float base_campos;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float base_motioncampos;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool update_vr;

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x26A3E44", Offset = "0x26A3E44", VA = "0x26A3E44")]
	private void ItemR()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x26A3ED8", Offset = "0x26A3ED8", VA = "0x26A3ED8")]
	private void ItemL()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x269ADA0", Offset = "0x269ADA0", VA = "0x269ADA0")]
	public bool Equals(SceneUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x26A3F6C", Offset = "0x26A3F6C", VA = "0x26A3F6C")]
	public static eUnit GetUnitType(string str)
	{
		return default(eUnit);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x26A4038", Offset = "0x26A4038", VA = "0x26A4038")]
	public void SetUnitType(eUnit unit_type)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x26A4040", Offset = "0x26A4040", VA = "0x26A4040")]
	public void OpenCloseDoor(float dir, float t)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x26A40CC", Offset = "0x26A40CC", VA = "0x26A40CC")]
	public void OpenCloseBag(float dir, float t)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x26A3E4C", Offset = "0x26A3E4C", VA = "0x26A3E4C")]
	public void CreateR(int item_index)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x26A3EE0", Offset = "0x26A3EE0", VA = "0x26A3EE0")]
	public void CreateL(int item_index)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x26A4740", Offset = "0x26A4740", VA = "0x26A4740")]
	private void HaveTreeOffset_L(int item_index)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x26A4420", Offset = "0x26A4420", VA = "0x26A4420")]
	private void HaveTreeOffset_R(int item_index)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x26A4A70", Offset = "0x26A4A70", VA = "0x26A4A70")]
	public void GrabR(int item_no)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x26A4B98", Offset = "0x26A4B98", VA = "0x26A4B98")]
	public void GrabL(int item_no)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x26A4560", Offset = "0x26A4560", VA = "0x26A4560")]
	private void HaveR(GameObject item, Transform parent)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x26A4890", Offset = "0x26A4890", VA = "0x26A4890")]
	private void HaveL(GameObject item, Transform parent)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x26A4320", Offset = "0x26A4320", VA = "0x26A4320")]
	private void OpenBag(PropItemBag bag, float dir, float t)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x26A4FA8", Offset = "0x26A4FA8", VA = "0x26A4FA8")]
	public void SetAudioLength(float min_len, float max_len)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x26A50C4", Offset = "0x26A50C4", VA = "0x26A50C4")]
	public void Set2DPlayer()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x26A50D0", Offset = "0x26A50D0", VA = "0x26A50D0")]
	public void ChangeCamTarget(bool flg)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x26A501C", Offset = "0x26A501C", VA = "0x26A501C")]
	private void UpdateVoiceVol()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x26A5108", Offset = "0x26A5108", VA = "0x26A5108")]
	private void SetVoVol(float vol)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x26A5124", Offset = "0x26A5124", VA = "0x26A5124")]
	private void _SearchMesh()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x269A5E4", Offset = "0x269A5E4", VA = "0x269A5E4")]
	public void MeshCullMode(bool flg)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x26A5220", Offset = "0x26A5220", VA = "0x26A5220")]
	public void InitSubScale()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x26A53A0", Offset = "0x26A53A0", VA = "0x26A53A0")]
	public Animator ChgMdl(TimelineData p)
	{
		return null;
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x26A55AC", Offset = "0x26A55AC", VA = "0x26A55AC")]
	public Animator CngMdl(bool is_main, TimelineData p)
	{
		return null;
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x26A56CC", Offset = "0x26A56CC", VA = "0x26A56CC")]
	public bool IsMainMdl()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x26A5270", Offset = "0x26A5270", VA = "0x26A5270")]
	private void UpdateSubMdlScale()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x26A5380", Offset = "0x26A5380", VA = "0x26A5380")]
	public void SetCamPer(float per, float t)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x26A56F8", Offset = "0x26A56F8", VA = "0x26A56F8")]
	public Vector3 GetCamPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x26A5840", Offset = "0x26A5840", VA = "0x26A5840")]
	public void HaveItem(int item_no)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x26A5A44", Offset = "0x26A5A44", VA = "0x26A5A44")]
	public void RemoveItem(int item_no)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x26A5B84", Offset = "0x26A5B84", VA = "0x26A5B84")]
	private void CreateHaveItemAnim()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x26A5C20", Offset = "0x26A5C20", VA = "0x26A5C20")]
	private void HaveItemUpdate()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x269A4E8", Offset = "0x269A4E8", VA = "0x269A4E8")]
	public void SetVR(float per, float t)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x26A5E6C", Offset = "0x26A5E6C", VA = "0x26A5E6C")]
	public void SetVRHead(float per, float t)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x26A5DFC", Offset = "0x26A5DFC", VA = "0x26A5DFC")]
	public void SetVRL(float per, float t)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x26A5E34", Offset = "0x26A5E34", VA = "0x26A5E34")]
	public void SetVRR(float per, float t)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x26A5EA4", Offset = "0x26A5EA4", VA = "0x26A5EA4")]
	private void UpdateVR()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x26A60AC", Offset = "0x26A60AC", VA = "0x26A60AC")]
	public bool RemoveHaveItem(int item_no)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x26A4EB0", Offset = "0x26A4EB0", VA = "0x26A4EB0")]
	public void HaveItem_Left(GameObject p)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x26A4DB8", Offset = "0x26A4DB8", VA = "0x26A4DB8")]
	public void HaveItem_Right(GameObject p)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x26A6520", Offset = "0x26A6520", VA = "0x26A6520")]
	public void SetReleaseFlg(int item_no)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x26A62B4", Offset = "0x26A62B4", VA = "0x26A62B4")]
	public void Release_L()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x26A649C", Offset = "0x26A649C", VA = "0x26A649C")]
	public void Release_R()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x26A6338", Offset = "0x26A6338", VA = "0x26A6338")]
	private void Have(GameObject p)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x26A66A8", Offset = "0x26A66A8", VA = "0x26A66A8")]
	private void Release(GameObject p)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x269293C", Offset = "0x269293C", VA = "0x269293C")]
	public void ReleasePoint(GameObject p)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x26A6868", Offset = "0x26A6868", VA = "0x26A6868")]
	public void Remove()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x26A686C", Offset = "0x26A686C", VA = "0x26A686C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x269A940", Offset = "0x269A940", VA = "0x269A940")]
	public void ChangeCamHeight()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x26A69F4", Offset = "0x26A69F4", VA = "0x26A69F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x26A6D3C", Offset = "0x26A6D3C", VA = "0x26A6D3C")]
	public SceneUnit()
	{
	}
}
[Token(Token = "0x2000058")]
public class SceneUnitAnimator : MonoBehaviour
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int inq;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x26A6E74", Offset = "0x26A6E74", VA = "0x26A6E74")]
	public void SetMoveInq(int _inq)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x26A6E7C", Offset = "0x26A6E7C", VA = "0x26A6E7C")]
	public SceneUnitAnimator()
	{
	}
}
[Token(Token = "0x2000059")]
public class ScreeenCapture : MonoBehaviour
{
	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string FileName;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Date;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsCap;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ScreenCaptureChk> CapList;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D _tex;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private byte[] _bytes;

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x26424C0", Offset = "0x26424C0", VA = "0x26424C0")]
	public void AddCapChk(ScreenCaptureChk p)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x2642670", Offset = "0x2642670", VA = "0x2642670")]
	private int CamDepthSort(ScreenCaptureChk cam1, ScreenCaptureChk cam2)
	{
		return default(int);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x2642704", Offset = "0x2642704", VA = "0x2642704")]
	public void Take(ScreenCaptureChk cap)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x2642C68", Offset = "0x2642C68", VA = "0x2642C68")]
	public ScreeenCapture()
	{
	}
}
[Token(Token = "0x200005A")]
public class ScreenCaptureChk : MonoBehaviour
{
	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera ChkCam;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScreeenCapture mScreeenCapture;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x2642CE0", Offset = "0x2642CE0", VA = "0x2642CE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x2642DD8", Offset = "0x2642DD8", VA = "0x2642DD8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x2642E8C", Offset = "0x2642E8C", VA = "0x2642E8C")]
	public ScreenCaptureChk()
	{
	}
}
[Token(Token = "0x200005B")]
public class SingletonMonoBehaviour<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x1700004B")]
	public static T Instance
	{
		[Token(Token = "0x6000309")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600030A")]
	public SingletonMonoBehaviour()
	{
	}
}
[Token(Token = "0x200005C")]
public class TLView : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string TLString;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableAsset TargetTimeline;

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x2649FCC", Offset = "0x2649FCC", VA = "0x2649FCC")]
	public void SearchTL()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x264A348", Offset = "0x264A348", VA = "0x264A348")]
	private void CreateVoData(List<TimelineClip> clips)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x264A614", Offset = "0x264A614", VA = "0x264A614")]
	public TLView()
	{
	}
}
[Token(Token = "0x200005D")]
public class TimeLineEditor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200005E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEFD0", Offset = "0xCDEFD0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<TlCmdData> <>9__19_0;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<TimelineAudio> <>9__20_0;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<TimelineClip> <>9__49_0;

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x26641CC", Offset = "0x26641CC", VA = "0x26641CC")]
		public <>c()
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x26641D4", Offset = "0x26641D4", VA = "0x26641D4")]
		internal int <CreateTLCmd>b__19_0(TlCmdData a, TlCmdData b)
		{
			return default(int);
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x2664218", Offset = "0x2664218", VA = "0x2664218")]
		internal int <CreateAudio>b__20_0(TimelineAudio a, TimelineAudio b)
		{
			return default(int);
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x266425C", Offset = "0x266425C", VA = "0x266425C")]
		internal int <GetClip>b__49_0(TimelineClip a, TimelineClip b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200005F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEFE0", Offset = "0xCDEFE0")]
	private sealed class <LoadWaitPlayVo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int type;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int index;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TimeLineEditor <>4__this;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TimelineData p;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float t;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000345")]
			[Address(RVA = "0x2664594", Offset = "0x2664594", VA = "0x2664594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000347")]
			[Address(RVA = "0x26645DC", Offset = "0x26645DC", VA = "0x26645DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x266429C", Offset = "0x266429C", VA = "0x266429C")]
		[DebuggerHidden]
		public <LoadWaitPlayVo>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x26642C8", Offset = "0x26642C8", VA = "0x26642C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x26642CC", Offset = "0x26642CC", VA = "0x26642CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x266459C", Offset = "0x266459C", VA = "0x266459C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1430", Offset = "0xCE1430")]
	public int _vo;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string VoiceFiles;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform PositionAnchorsTree;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayableDirector TargetDirector;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayableAsset TargetTimeline;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int loadclip_type;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int loadclip_index;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE14C4", Offset = "0xCE14C4")]
	public int _search;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1558", Offset = "0xCE1558")]
	public int _set;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE15EC", Offset = "0xCE15EC")]
	public int _root;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsShowRoot;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<TimelineAnimeData> mAnimeDataList;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<TimelineMoveData> mMoveDataList;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<TimelineLookData> mLookDataList;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<TlCmdData> mTlCmdDataList;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<TimelineAudio> mAudioList;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TimelineAudio NextAudio;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vodata> mVodataList;

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x2650860", Offset = "0x2650860", VA = "0x2650860")]
	private void _Vo()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x2650C04", Offset = "0x2650C04", VA = "0x2650C04")]
	public void SetupTimeLineEditor()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x2651014", Offset = "0x2651014", VA = "0x2651014")]
	public bool ChkTransform(float t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x2651130", Offset = "0x2651130", VA = "0x2651130")]
	public Vector3 GetClipTransform(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x26513F8", Offset = "0x26513F8", VA = "0x26513F8")]
	public Vector3 GetPos(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x265163C", Offset = "0x265163C", VA = "0x265163C")]
	public void ChkCmdTime(float t)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x265189C", Offset = "0x265189C", VA = "0x265189C")]
	public void SceneSetUp(TimelineData p)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x2651AEC", Offset = "0x2651AEC", VA = "0x2651AEC")]
	public void ChangeVoLang(float t, PlayableData p)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x26518C4", Offset = "0x26518C4", VA = "0x26518C4")]
	public void ChkAudio(float t, SceneUnit.eUnit unit)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x2652138", Offset = "0x2652138", VA = "0x2652138")]
	private void LoadClip(AudioClip clip)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x2652258", Offset = "0x2652258", VA = "0x2652258")]
	public void _Search()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x2650D10", Offset = "0x2650D10", VA = "0x2650D10")]
	private void CreateTLCmd()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x2650ED4", Offset = "0x2650ED4", VA = "0x2650ED4")]
	private void CreateAudio()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x2651CAC", Offset = "0x2651CAC", VA = "0x2651CAC")]
	private TimelineAudio SearchAudio(float t)
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x2650C30", Offset = "0x2650C30", VA = "0x2650C30")]
	private void _Set()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x2653B68", Offset = "0x2653B68", VA = "0x2653B68")]
	private void SetPosAnc()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x2653CA0", Offset = "0x2653CA0", VA = "0x2653CA0")]
	private void SetMoveData(TimelineMoveData p)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x2652578", Offset = "0x2652578", VA = "0x2652578")]
	private void RenamePosAnc()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x2654170", Offset = "0x2654170", VA = "0x2654170")]
	private void _Root()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x265417C", Offset = "0x265417C", VA = "0x265417C")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x2651E2C", Offset = "0x2651E2C", VA = "0x2651E2C")]
	private Vodata SearchVoData(int type, int index, int vo)
	{
		return null;
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x26532D4", Offset = "0x26532D4", VA = "0x26532D4")]
	public List<PlayableBinding> GetBind()
	{
		return null;
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x264A0A8", Offset = "0x264A0A8", VA = "0x264A0A8")]
	public static List<PlayableBinding> GetBind(PlayableAsset p)
	{
		return null;
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x26526C0", Offset = "0x26526C0", VA = "0x26526C0")]
	private AnimationTrack SearchAnimatorTrack()
	{
		return null;
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x2650920", Offset = "0x2650920", VA = "0x2650920")]
	private AudioTrack SearchAudioTrack()
	{
		return null;
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x2652910", Offset = "0x2652910", VA = "0x2652910")]
	private TransformTweenTrack SearchTransformTrack()
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x2652C88", Offset = "0x2652C88", VA = "0x2652C88")]
	private TweenLookAtTrack SearchLookatTrack()
	{
		return null;
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x2654180", Offset = "0x2654180", VA = "0x2654180")]
	private PlayableBinding SearchBind(string track_name)
	{
		return default(PlayableBinding);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x26541C4", Offset = "0x26541C4", VA = "0x26541C4")]
	public PlayableBinding SearchBind(List<PlayableBinding> p, string track_name)
	{
		return default(PlayableBinding);
	}

	[Token(Token = "0x600032B")]
	public static T SearchBind<T>(List<PlayableBinding> p) where T : class
	{
		return null;
	}

	[Token(Token = "0x600032C")]
	public static T[] SearchBinds<T>(List<PlayableBinding> p) where T : class
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x264A1A4", Offset = "0x264A1A4", VA = "0x264A1A4")]
	public static List<TimelineClip> GetClip(TrackAsset p)
	{
		return null;
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x26542CC", Offset = "0x26542CC", VA = "0x26542CC")]
	private void ReNameAnimeClip(List<TimelineClip> clips)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x2652710", Offset = "0x2652710", VA = "0x2652710")]
	private void CreateAnimeClip(List<TimelineClip> clips)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x2652960", Offset = "0x2652960", VA = "0x2652960")]
	private void CreateMoveData(List<TimelineClip> clips)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x2653DCC", Offset = "0x2653DCC", VA = "0x2653DCC")]
	private void BindMoveData(List<TimelineClip> clips)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x2652CD8", Offset = "0x2652CD8", VA = "0x2652CD8")]
	private void CreateLookData(List<TimelineClip> clips)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x26538F0", Offset = "0x26538F0", VA = "0x26538F0")]
	private void CreateCmdData(List<TimelineClip> clips)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x26533D4", Offset = "0x26533D4", VA = "0x26533D4")]
	private void CreateVoTrack(TlCmdTrack track)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x2653710", Offset = "0x2653710", VA = "0x2653710")]
	private void RenameCmdData(List<TimelineClip> clips)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x2652F54", Offset = "0x2652F54", VA = "0x2652F54")]
	private void CreateAudioData(List<TimelineClip> clips)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x2650970", Offset = "0x2650970", VA = "0x2650970")]
	private void CreateVoData(List<TimelineClip> clips)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x265443C", Offset = "0x265443C", VA = "0x265443C")]
	public void CallLateUpdate(PlayableData p)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x2651F94", Offset = "0x2651F94", VA = "0x2651F94")]
	public void PlayVo(TimelineData p, int type, int index, float t)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x26546E0", Offset = "0x26546E0", VA = "0x26546E0")]
	private void PlayVo(Vodata v, TimelineData p, float t)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x2654644", Offset = "0x2654644", VA = "0x2654644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB6A4", Offset = "0xCEB6A4")]
	private IEnumerator LoadWaitPlayVo(TimelineData p, int type, int index, float t)
	{
		return null;
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x265483C", Offset = "0x265483C", VA = "0x265483C")]
	public TimeLineEditor()
	{
	}
}
[Serializable]
[Token(Token = "0x2000060")]
public class TimelineAnimeData
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string animeclip_name;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x26A8290", Offset = "0x26A8290", VA = "0x26A8290")]
	public TimelineAnimeData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000061")]
public class TimelineMoveData
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string StartPos;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string EndPos;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform StartT;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform EndT;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float StartTime;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float EndTime;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x26B5CB0", Offset = "0x26B5CB0", VA = "0x26B5CB0")]
	public TimelineMoveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000062")]
public class TimelineLookData
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartTime;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float EndTime;

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x26ADC5C", Offset = "0x26ADC5C", VA = "0x26ADC5C")]
	public TimelineLookData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public class TlCmdData
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TlCmdBehaviour.eTLCmd cmd;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float param0;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float param1;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartTime;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float EndTime;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x26B9804", Offset = "0x26B9804", VA = "0x26B9804")]
	public TlCmdData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000064")]
public class TimelineAudio
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TimelineClip parentclip;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioPlayableAsset clip;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TlCmdClip cmd_clip;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string AudioName;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float start;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float end;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int Type;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int Index;

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x26A8298", Offset = "0x26A8298", VA = "0x26A8298")]
	public TimelineAudio()
	{
	}
}
[Serializable]
[Token(Token = "0x2000065")]
public class Vodata
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioClip clip;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int VoLang;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Type;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Index;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x26127B0", Offset = "0x26127B0", VA = "0x26127B0")]
	public Vodata()
	{
	}
}
[Token(Token = "0x2000066")]
public class TimeLineEffect : MonoBehaviour
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public double StartTime;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double EndTime;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayableDirector[] PlayableList;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem[] ParticleList;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1680", Offset = "0xCE1680")]
	public int _get;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x26A6FFC", Offset = "0x26A6FFC", VA = "0x26A6FFC")]
	private void _Get()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x26A7098", Offset = "0x26A7098", VA = "0x26A7098")]
	public TimeLineEffect()
	{
	}
}
[Token(Token = "0x2000067")]
public class TimeLinePacker : MonoBehaviour
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1714", Offset = "0xCE1714")]
	public int _pakking;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform PositionAnchorsTree;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TimelineData DocterTimeline;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TimelineData AssistantTimeline;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TimelineData PresidentTimeline;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineData ResearcherTimeline;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TimelineData SonTimeline;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TimelineData MillionaireTimeline;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TimelineData MobATimeline;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TimelineData MobBTimeline;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimelineData MobCTimeline;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimeLineEditor DocterTimeLineEditor;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TimeLineEditor AssistantTimeLineEditor;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TimeLineEditor PresidentTimeLineEditor;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TimeLineEditor ResearcherTimeLineEditor;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TimeLineEditor SonTimeLineEditor;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TimeLineEditor MillionaireTimeLineEditor;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TimeLineEditor MobATimeLineEditor;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TimeLineEditor MobBTimeLineEditor;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TimeLineEditor MobCTimeLineEditor;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x26A70A0", Offset = "0x26A70A0", VA = "0x26A70A0")]
	public void PosChk()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x26A7218", Offset = "0x26A7218", VA = "0x26A7218")]
	private void _Pakking()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x26A798C", Offset = "0x26A798C", VA = "0x26A798C")]
	private TimelineData GetTimeline(GameObject p)
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x26A75E4", Offset = "0x26A75E4", VA = "0x26A75E4")]
	private GameObject SearchTimelineEditor(string timeline_name, string director_name, out TimeLineEditor editer)
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x26A79E0", Offset = "0x26A79E0", VA = "0x26A79E0")]
	public TimeLinePacker()
	{
	}
}
[Token(Token = "0x2000068")]
public class TimelineData : MonoBehaviour
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE17A8", Offset = "0xCE17A8")]
	public int _sub;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE183C", Offset = "0xCE183C")]
	public int _searchtle;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TimeLineEffect> BaseTimelineEffectList;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<TimeLineEffect> FireTimelineList;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayableDirector mTimeLine;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<PlayableDirector> SubTimeline;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool Is_Blind;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform Target;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SceneUnit mAvaterUnit;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform SceneUnitTree;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnitDirBehaviour first_dir;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimeLineEditor mTimeLineEditor;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 targetrot;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public cInter rot_y;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SceneUnit.eUnit TargetDirUnit;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int TargetItemIndex;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PropItemData target_propitem;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int TargetPosIndex;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int TargetDoorIndex;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SceneText BlnText;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float DirUpdateTime;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public cListInter JumpY;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 v;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 wpos;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int MoveInq;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int vo_type;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x26A82A0", Offset = "0x26A82A0", VA = "0x26A82A0")]
	public void SearchSubTimeline()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x26A836C", Offset = "0x26A836C", VA = "0x26A836C")]
	private void SearchTimeLineEffect()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x26A8498", Offset = "0x26A8498", VA = "0x26A8498")]
	public void SetFireEffect(bool flg)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x26A85F0", Offset = "0x26A85F0", VA = "0x26A85F0")]
	public void SetupSubTimeline()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x26A86B0", Offset = "0x26A86B0", VA = "0x26A86B0")]
	public void BindTimelineEffect(TimeLineEffect p)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x26A8BD4", Offset = "0x26A8BD4", VA = "0x26A8BD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x26A8C3C", Offset = "0x26A8C3C", VA = "0x26A8C3C")]
	public void Remove()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x26A8D10", Offset = "0x26A8D10", VA = "0x26A8D10")]
	public void Play(double t)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x26A9104", Offset = "0x26A9104", VA = "0x26A9104")]
	public void Pause()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x26A92EC", Offset = "0x26A92EC", VA = "0x26A92EC")]
	public void Recvery()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x26A92F0", Offset = "0x26A92F0", VA = "0x26A92F0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x26A930C", Offset = "0x26A930C", VA = "0x26A930C")]
	public void SetTime(double t, bool is_play = true)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x26A993C", Offset = "0x26A993C", VA = "0x26A993C")]
	public void ChkResume(double t)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x26A9C44", Offset = "0x26A9C44", VA = "0x26A9C44")]
	public void SetTargetPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x26A9C60", Offset = "0x26A9C60", VA = "0x26A9C60")]
	public void SetupWaitAnime(TimelineData unit, string track_name)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x26A9D84", Offset = "0x26A9D84", VA = "0x26A9D84")]
	public void SetupRestAnime(SceneUnit unit, string track_name)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x26A9D9C", Offset = "0x26A9D9C", VA = "0x26A9D9C")]
	public void SetUp()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x26AA630", Offset = "0x26AA630", VA = "0x26AA630")]
	public void SceneSetUp(TimeLineEditor p)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x26AA830", Offset = "0x26AA830", VA = "0x26AA830")]
	public void SceneSetUpLate()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x26AA0FC", Offset = "0x26AA0FC", VA = "0x26AA0FC")]
	public void TLCmdBind()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x26AACE0", Offset = "0x26AACE0", VA = "0x26AACE0")]
	public void SetTargetRot(Vector3 rot)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x26AAD64", Offset = "0x26AAD64", VA = "0x26AAD64")]
	private void Jump(float h, float t)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x26AADEC", Offset = "0x26AADEC", VA = "0x26AADEC")]
	private void SetTargetUnit(SceneUnit.eUnit unit)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x26AAF2C", Offset = "0x26AAF2C", VA = "0x26AAF2C")]
	private void SetTargetItem(int index)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x26AB22C", Offset = "0x26AB22C", VA = "0x26AB22C")]
	private void SetTargetPos(int index)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x26AB24C", Offset = "0x26AB24C", VA = "0x26AB24C")]
	private void SetTargetDoor()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x26AAF0C", Offset = "0x26AAF0C", VA = "0x26AAF0C")]
	public void InitDir()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x26AA284", Offset = "0x26AA284", VA = "0x26AA284")]
	public void UpdateRot(float t)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x26AB608", Offset = "0x26AB608", VA = "0x26AB608")]
	public void CallLateUpdate(bool is_update)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x26AB794", Offset = "0x26AB794", VA = "0x26AB794")]
	public void Camtarget(bool flg)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x26AA79C", Offset = "0x26AA79C", VA = "0x26AA79C")]
	private void WposUpdate()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x26AB8B4", Offset = "0x26AB8B4", VA = "0x26AB8B4")]
	public void MoveStart(TransformTweenBehaviour p)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x26ABAB8", Offset = "0x26ABAB8", VA = "0x26ABAB8")]
	public void MoveEnd()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x26ABB60", Offset = "0x26ABB60", VA = "0x26ABB60")]
	public void TLCmd(TlCmdBehaviour p)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x26AD204", Offset = "0x26AD204", VA = "0x26AD204")]
	public void ChangeBind(Animator animator)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x26AA864", Offset = "0x26AA864", VA = "0x26AA864")]
	public void TLDir(UnitDirBehaviour p)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x26AD278", Offset = "0x26AD278", VA = "0x26AD278")]
	public void TrackBind(string target_name, PlayableAsset p)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x26A9C84", Offset = "0x26A9C84", VA = "0x26A9C84")]
	public void Bind(Animator animator, string steam_name)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x26A9EFC", Offset = "0x26A9EFC", VA = "0x26A9EFC")]
	public void Bind(AudioSource audio, string steam_name)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x26A9FFC", Offset = "0x26A9FFC", VA = "0x26A9FFC")]
	public void Bind(Transform t, string steam_name)
	{
	}

	[Token(Token = "0x600037D")]
	public T Bind<T>(TimelineData p) where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x600037E")]
	public T[] Binds<T>(TimelineData p) where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x600037F")]
	public T[] Binds<T>(Transform t) where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x26AA918", Offset = "0x26AA918", VA = "0x26AA918")]
	private void BindClip(TimelineData p, TrackAsset track)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x26ACEDC", Offset = "0x26ACEDC", VA = "0x26ACEDC")]
	public void _Bind(PlayableAsset _pa, Animator animator, string steam_name)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x26AD678", Offset = "0x26AD678", VA = "0x26AD678")]
	private void _Bind(PlayableAsset _pa, AudioSource audio, string steam_name)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x26AD78C", Offset = "0x26AD78C", VA = "0x26AD78C")]
	private void _Bind(PlayableAsset _pa, Transform t, string steam_name)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x26AD378", Offset = "0x26AD378", VA = "0x26AD378")]
	private void _TrackBind(PlayableAsset _pa, string target_name, PlayableAsset child_pa)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x26A87E4", Offset = "0x26A87E4", VA = "0x26A87E4")]
	private void _TrackBind(PlayableAsset _pa, string target_name, string clip_name, PlayableDirector child_pa, TimeLineEffect p)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x26AD924", Offset = "0x26AD924", VA = "0x26AD924")]
	public PlayableBinding SearchBind(List<PlayableBinding> p, string track_name)
	{
		return default(PlayableBinding);
	}

	[Token(Token = "0x6000387")]
	public T SearchBind<T>(List<PlayableBinding> p) where T : class
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	public T SearchBind<T>(List<PlayableBinding> p, string track_name) where T : class
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x26ADA30", Offset = "0x26ADA30", VA = "0x26ADA30")]
	public List<PlayableBinding> GetBind()
	{
		return null;
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x26AD828", Offset = "0x26AD828", VA = "0x26AD828")]
	public List<PlayableBinding> GetBind(PlayableAsset p)
	{
		return null;
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x26ADB18", Offset = "0x26ADB18", VA = "0x26ADB18")]
	public TimelineData()
	{
	}
}
[Token(Token = "0x2000069")]
public class TimelineMgr : MonoBehaviour
{
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDEFF0", Offset = "0xCDEFF0")]
	private sealed class <CreateDiveTimeline>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimelineMgr <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0x26648D0", Offset = "0x26648D0", VA = "0x26648D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E7")]
			[Address(RVA = "0x2664918", Offset = "0x2664918", VA = "0x2664918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x26645E4", Offset = "0x26645E4", VA = "0x26645E4")]
		[DebuggerHidden]
		public <CreateDiveTimeline>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x2664610", Offset = "0x2664610", VA = "0x2664610", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x2664614", Offset = "0x2664614", VA = "0x2664614", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x26648D8", Offset = "0x26648D8", VA = "0x26648D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF000", Offset = "0xCDF000")]
	private sealed class <RecreateMasterTimeLine>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimelineMgr <>4__this;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003EB")]
			[Address(RVA = "0x27462EC", Offset = "0x27462EC", VA = "0x27462EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003ED")]
			[Address(RVA = "0x2746334", Offset = "0x2746334", VA = "0x2746334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x2746060", Offset = "0x2746060", VA = "0x2746060")]
		[DebuggerHidden]
		public <RecreateMasterTimeLine>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x274608C", Offset = "0x274608C", VA = "0x274608C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x2746090", Offset = "0x2746090", VA = "0x2746090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x27462F4", Offset = "0x27462F4", VA = "0x27462F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF010", Offset = "0xCDF010")]
	private sealed class <CreatePlayableDataList>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimelineMgr <>4__this;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<PlayableBinding> <p>5__2;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F1")]
			[Address(RVA = "0x2665208", Offset = "0x2665208", VA = "0x2665208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F3")]
			[Address(RVA = "0x2665250", Offset = "0x2665250", VA = "0x2665250", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x2664E70", Offset = "0x2664E70", VA = "0x2664E70")]
		[DebuggerHidden]
		public <CreatePlayableDataList>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x2664E9C", Offset = "0x2664E9C", VA = "0x2664E9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x2664EA0", Offset = "0x2664EA0", VA = "0x2664EA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x2665210", Offset = "0x2665210", VA = "0x2665210", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF020", Offset = "0xCDF020")]
	private sealed class <LoadItemTbl>d__129 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimelineMgr <>4__this;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> <list>5__2;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] <t>5__3;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0x2746010", Offset = "0x2746010", VA = "0x2746010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x2746058", Offset = "0x2746058", VA = "0x2746058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x2745C94", Offset = "0x2745C94", VA = "0x2745C94")]
		[DebuggerHidden]
		public <LoadItemTbl>d__129(int <>1__state)
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x2745CC0", Offset = "0x2745CC0", VA = "0x2745CC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x2745CC4", Offset = "0x2745CC4", VA = "0x2745CC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x2746018", Offset = "0x2746018", VA = "0x2746018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF030", Offset = "0xCDF030")]
	private sealed class <CreateItemPrefab>d__130 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimelineMgr <>4__this;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0x2664E20", Offset = "0x2664E20", VA = "0x2664E20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003FF")]
			[Address(RVA = "0x2664E68", Offset = "0x2664E68", VA = "0x2664E68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x2664920", Offset = "0x2664920", VA = "0x2664920")]
		[DebuggerHidden]
		public <CreateItemPrefab>d__130(int <>1__state)
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x266494C", Offset = "0x266494C", VA = "0x266494C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x2664950", Offset = "0x2664950", VA = "0x2664950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x2664E28", Offset = "0x2664E28", VA = "0x2664E28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneUnit.eUnit MailUnit;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE18D0", Offset = "0xCE18D0")]
	public int _mail0;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1964", Offset = "0xCE1964")]
	public int _mail1;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE19F8", Offset = "0xCE19F8")]
	public int _mail2;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource MuteAudio;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ObjectTree;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TimelineData WaitTimeline;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineData RestTimeline;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TimelineData MasterTimeLine;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<TimelineData> UnitTimeLine;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject PosAnchors;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Transform> PosList;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimelineData TimelinePrefab;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<PlayableData> PlayableDataList;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject GideDirPrefab;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject CufsL;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject CufsR;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Door> DoorList;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<PropItemData> BasePropItemList;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<PropItemData> PropItemList;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<PropItemData> HaveItemListL;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<PropItemData> HaveItemListR;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float min_len;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PropItemData ret_prop;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Ray ItemRay;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RaycastHit ray_hit;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private PropItemData old_min_item;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PropItemData min_item;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private PropItemData old_r_min_item;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private PropItemData old_l_min_item;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public PropItemData r_min_item;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public PropItemData l_min_item;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public ItemIcon ItemIconPrefab;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Material ItemIconMat;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Material ItemIconOrangeMat;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Material ItemAreaMat;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public List<ItemIcon> ItemIconList;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool IsFire;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public List<Vector3> TargetUnitPos;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float DirUpdateTime;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float TimeLineMaxTime;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public double TimeLineTime;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool IsSnap;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool IsPause;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
	private bool IsRecvery;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
	private bool IsAdChk;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private bool IsWaterChkFlg;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private TimelineData scene_unit;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<PropItem> mItemTbl;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x26ADC64", Offset = "0x26ADC64", VA = "0x26ADC64")]
	private void _Mail0()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x26ADCFC", Offset = "0x26ADCFC", VA = "0x26ADCFC")]
	private void _Mail1()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x26ADD94", Offset = "0x26ADD94", VA = "0x26ADD94")]
	private void _Mail2()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x26ADE50", Offset = "0x26ADE50", VA = "0x26ADE50")]
	public void SetFireEffect(bool flg)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x26ADEF0", Offset = "0x26ADEF0", VA = "0x26ADEF0")]
	private void CreateCuffs()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x26AE044", Offset = "0x26AE044", VA = "0x26AE044")]
	public PropItemData GetLengthItem(Ray ray, HandGrab.eHandGrab eHandGrab)
	{
		return null;
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x26AE09C", Offset = "0x26AE09C", VA = "0x26AE09C")]
	public PropItemData GetLengthItem(Ray ray, List<PropItemData> p)
	{
		return null;
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x26AE538", Offset = "0x26AE538", VA = "0x26AE538")]
	public void AddLengthItem(PropItemData p, HandGrab.eHandGrab eHandGrab)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x26AE64C", Offset = "0x26AE64C", VA = "0x26AE64C")]
	public void DelLengthItem(PropItemData p, HandGrab.eHandGrab eHandGrab)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x26AE71C", Offset = "0x26AE71C", VA = "0x26AE71C")]
	public void ChkLengthItem(Vector3 pos)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x26AEA38", Offset = "0x26AEA38", VA = "0x26AEA38")]
	public PropItemData GetMinItem(HandGrab.eHandGrab hand)
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x26AE994", Offset = "0x26AE994", VA = "0x26AE994")]
	private void EnableMat(PropItemData p)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x26AE494", Offset = "0x26AE494", VA = "0x26AE494")]
	private void DisableMat(PropItemData p)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x26AEA60", Offset = "0x26AEA60", VA = "0x26AEA60")]
	private void AreaMat(PropItemData p)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x26AEB04", Offset = "0x26AEB04", VA = "0x26AEB04")]
	public void InItem(PropItemData p, HandGrab.eHandGrab eHandGrab)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x26AEBD8", Offset = "0x26AEBD8", VA = "0x26AEBD8")]
	public void HaveItem(PropItemData p, HandGrab.eHandGrab eHandGrab)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x26AEBDC", Offset = "0x26AEBDC", VA = "0x26AEBDC")]
	public void OutItem(PropItemData p, HandGrab.eHandGrab eHandGrab)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x26AECB0", Offset = "0x26AECB0", VA = "0x26AECB0")]
	public void ReleaseItem(PropItemData p, HandGrab.eHandGrab eHandGrab)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x26AB26C", Offset = "0x26AB26C", VA = "0x26AB26C")]
	public Vector3 GetTargetUnitPos(SceneUnit.eUnit unit)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x26AECB4", Offset = "0x26AECB4", VA = "0x26AECB4")]
	public void InitPos()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x26AEDA8", Offset = "0x26AEDA8", VA = "0x26AEDA8")]
	public void UpdateUnitPos()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x26AEEA0", Offset = "0x26AEEA0", VA = "0x26AEEA0")]
	public void ChangeLangVo()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x26AEFB4", Offset = "0x26AEFB4", VA = "0x26AEFB4")]
	public void SceneSetUp()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x26AF8F8", Offset = "0x26AF8F8", VA = "0x26AF8F8")]
	public void PlayRestAnime(SceneUnit.eUnit unit)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x26AFC5C", Offset = "0x26AFC5C", VA = "0x26AFC5C")]
	public void Play()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x26AFE1C", Offset = "0x26AFE1C", VA = "0x26AFE1C")]
	public void SetSpeed(float t)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x26AFE20", Offset = "0x26AFE20", VA = "0x26AFE20")]
	public void SetTime(double t)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x26B01C8", Offset = "0x26B01C8", VA = "0x26B01C8")]
	public void Snap(SnapData snap_data, SceneUnit.eUnit unit)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x26B09F8", Offset = "0x26B09F8", VA = "0x26B09F8")]
	private void CreateSnapItem(float[] itemdata)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x26B0F6C", Offset = "0x26B0F6C", VA = "0x26B0F6C")]
	public GameObject CreateSnapItem(int item_no, Vector3 pos, Vector3 rot)
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x26B164C", Offset = "0x26B164C", VA = "0x26B164C")]
	public PropItemData CreateHaveItem(int item_no)
	{
		return null;
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x26B1868", Offset = "0x26B1868", VA = "0x26B1868")]
	public void Pause()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x26B1984", Offset = "0x26B1984", VA = "0x26B1984")]
	public void Recvery()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x26B1A70", Offset = "0x26B1A70", VA = "0x26B1A70")]
	public bool IsAllStop()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x26B1B7C", Offset = "0x26B1B7C", VA = "0x26B1B7C")]
	public bool IsADChk()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x26B1C28", Offset = "0x26B1C28", VA = "0x26B1C28")]
	public bool IsWaterChk()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x26B1CD4", Offset = "0x26B1CD4", VA = "0x26B1CD4")]
	public void Stop()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x26B1E08", Offset = "0x26B1E08", VA = "0x26B1E08")]
	public void ResetTimeline()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x26B1E50", Offset = "0x26B1E50", VA = "0x26B1E50")]
	public void Create()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x26B2194", Offset = "0x26B2194", VA = "0x26B2194")]
	public void ShowItemIcon_Room()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x26B22B4", Offset = "0x26B22B4", VA = "0x26B22B4")]
	public void HideItemIcon_Room()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x26B22B8", Offset = "0x26B22B8", VA = "0x26B22B8")]
	private void HideItemIcon()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x26B244C", Offset = "0x26B244C", VA = "0x26B244C")]
	private ItemIcon SearchIcon()
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x26B25F8", Offset = "0x26B25F8", VA = "0x26B25F8")]
	public void UpdatePosAnchor()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x26B269C", Offset = "0x26B269C", VA = "0x26B269C")]
	public void InitSceneObject()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x26B2A4C", Offset = "0x26B2A4C", VA = "0x26B2A4C")]
	public void ReCreatePropItem()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x26B2F34", Offset = "0x26B2F34", VA = "0x26B2F34")]
	public void AddRoomItem(List<PropItemData> item_list)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x26B0868", Offset = "0x26B0868", VA = "0x26B0868")]
	public void RemovePropItem()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x26B2E5C", Offset = "0x26B2E5C", VA = "0x26B2E5C")]
	public void SetItemIcon(PropItemData item)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x26ACF78", Offset = "0x26ACF78", VA = "0x26ACF78")]
	public void PicherHave()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x26AD074", Offset = "0x26AD074", VA = "0x26AD074")]
	public void ADHave()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x26B3028", Offset = "0x26B3028", VA = "0x26B3028")]
	public void VisibleItem(SceneUnit.eUnit unit, int item_no)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x26B315C", Offset = "0x26B315C", VA = "0x26B315C")]
	public void InVisibleItem(SceneUnit.eUnit unit, int item_no)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x26B3218", Offset = "0x26B3218", VA = "0x26B3218")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB754", Offset = "0xCEB754")]
	public IEnumerator CreateDiveTimeline()
	{
		return null;
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x26B3284", Offset = "0x26B3284", VA = "0x26B3284")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB7B4", Offset = "0xCEB7B4")]
	private IEnumerator RecreateMasterTimeLine()
	{
		return null;
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x26B32F0", Offset = "0x26B32F0", VA = "0x26B32F0")]
	private TimelineData CreateTimeLine(string timeline_name)
	{
		return null;
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x26B33C8", Offset = "0x26B33C8", VA = "0x26B33C8")]
	private TimeLineEditor CreateTimeLineEditor(TimelineData p)
	{
		return null;
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x26B35F0", Offset = "0x26B35F0", VA = "0x26B35F0")]
	private PlayableData SearchPlayableData(SceneUnit.eUnit unit)
	{
		return null;
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x26B37B0", Offset = "0x26B37B0", VA = "0x26B37B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB814", Offset = "0xCEB814")]
	private IEnumerator CreatePlayableDataList()
	{
		return null;
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x26B381C", Offset = "0x26B381C", VA = "0x26B381C")]
	public void AllCloseDoor()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x26B38C4", Offset = "0x26B38C4", VA = "0x26B38C4")]
	public void OpenDoor(Transform unit, float dir, float t)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x26AB470", Offset = "0x26AB470", VA = "0x26AB470")]
	public Door GetDoor(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x26AB358", Offset = "0x26AB358", VA = "0x26AB358")]
	public Vector3 GetPos(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x26AB060", Offset = "0x26AB060", VA = "0x26AB060")]
	public PropItemData SearchPropItem(int item_no)
	{
		return null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x26B399C", Offset = "0x26B399C", VA = "0x26B399C")]
	public GameObject SearchPropItem(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x26ACD60", Offset = "0x26ACD60", VA = "0x26ACD60")]
	public void RemovePropItem(int item_no)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x26ACC58", Offset = "0x26ACC58", VA = "0x26ACC58")]
	public void UpdatePropItemList()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x26B3BD0", Offset = "0x26B3BD0", VA = "0x26B3BD0")]
	public SnapData GetSnapData(SnapData p)
	{
		return null;
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x26B42FC", Offset = "0x26B42FC", VA = "0x26B42FC")]
	public void Remove()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x26B4688", Offset = "0x26B4688", VA = "0x26B4688")]
	public void CreateUnit(SceneUnit.eUnit unit_type)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x26B0C60", Offset = "0x26B0C60", VA = "0x26B0C60")]
	public void CreateUnitComp(bool assi_flg = true, bool fugo_flg = true, bool is_fire = false)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x26B4924", Offset = "0x26B4924", VA = "0x26B4924")]
	public void ChangeSceneUnit()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x26B4BBC", Offset = "0x26B4BBC", VA = "0x26B4BBC")]
	public void ChangePlayStyle()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x26B4C54", Offset = "0x26B4C54", VA = "0x26B4C54")]
	public void UpdateSceneUnitCam()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x26B4D1C", Offset = "0x26B4D1C", VA = "0x26B4D1C")]
	public void FrontUIPosUpdate()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x26AF7E4", Offset = "0x26AF7E4", VA = "0x26AF7E4")]
	public void UpdateUnitDir()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x26AF638", Offset = "0x26AF638", VA = "0x26AF638")]
	public TimelineData Search(SceneUnit.eUnit unit)
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x26B4DD0", Offset = "0x26B4DD0", VA = "0x26B4DD0")]
	public void CallLateUpdate()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x26B5140", Offset = "0x26B5140", VA = "0x26B5140")]
	private void ChkShowItem()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x26B53F8", Offset = "0x26B53F8", VA = "0x26B53F8")]
	private void LoadItemTbl(AssetBundleRequest load_data)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x26B57C4", Offset = "0x26B57C4", VA = "0x26B57C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB874", Offset = "0xCEB874")]
	public IEnumerator LoadItemTbl()
	{
		return null;
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x26B5830", Offset = "0x26B5830", VA = "0x26B5830")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEB8D4", Offset = "0xCEB8D4")]
	public IEnumerator CreateItemPrefab()
	{
		return null;
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x26B589C", Offset = "0x26B589C", VA = "0x26B589C")]
	private void RemoveTbl()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x26B293C", Offset = "0x26B293C", VA = "0x26B293C")]
	private PropItem SearchItemTbl(int id)
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x26B12B4", Offset = "0x26B12B4", VA = "0x26B12B4")]
	public GameObject CreatePropItem(int index)
	{
		return null;
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x26B59B4", Offset = "0x26B59B4", VA = "0x26B59B4")]
	public TimelineMgr()
	{
	}
}
[Token(Token = "0x200006F")]
public class PlayableData
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SceneUnit.eUnit unit;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimelineData asset;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TimeLineEditor TimeLineEditor;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x2676A0C", Offset = "0x2676A0C", VA = "0x2676A0C")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x2676B5C", Offset = "0x2676B5C", VA = "0x2676B5C")]
	public PlayableData()
	{
	}
}
[Token(Token = "0x2000070")]
[SerializeField]
public class PropItem
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Index;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ItemName;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int IsCreate;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int StringType;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int StringIndex;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Item;

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x2678838", Offset = "0x2678838", VA = "0x2678838")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x26788E0", Offset = "0x26788E0", VA = "0x26788E0")]
	public PropItem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000071")]
public class SnapData
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int DiveCnt;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float snap_time;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] rot_y;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] door_angle;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float light_per;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float light_pow;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool AssiMdl;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool FugoMdl;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool IsFire;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] propitem;

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x26476F4", Offset = "0x26476F4", VA = "0x26476F4")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x264771C", Offset = "0x264771C", VA = "0x264771C")]
	public SnapData()
	{
	}
}
[Token(Token = "0x2000072")]
public class TitleScene : SceneData
{
	[Token(Token = "0x2000073")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF050", Offset = "0xCDF050")]
	private sealed class <LogoProc>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TitleScene <>4__this;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <r>5__2;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000428")]
			[Address(RVA = "0x2747B78", Offset = "0x2747B78", VA = "0x2747B78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600042A")]
			[Address(RVA = "0x2747BC0", Offset = "0x2747BC0", VA = "0x2747BC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x27476C8", Offset = "0x27476C8", VA = "0x27476C8")]
		[DebuggerHidden]
		public <LogoProc>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x27476F4", Offset = "0x27476F4", VA = "0x27476F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x27476F8", Offset = "0x27476F8", VA = "0x27476F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x2747B80", Offset = "0x2747B80", VA = "0x2747B80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000074")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF060", Offset = "0xCDF060")]
	private sealed class <ShowLogo>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TitleScene <>4__this;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <r>5__2;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600042E")]
			[Address(RVA = "0x274837C", Offset = "0x274837C", VA = "0x274837C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000430")]
			[Address(RVA = "0x27483C4", Offset = "0x27483C4", VA = "0x27483C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x27481B8", Offset = "0x27481B8", VA = "0x27481B8")]
		[DebuggerHidden]
		public <ShowLogo>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x27481E4", Offset = "0x27481E4", VA = "0x27481E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x27481E8", Offset = "0x27481E8", VA = "0x27481E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x2748384", Offset = "0x2748384", VA = "0x2748384", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000075")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF070", Offset = "0xCDF070")]
	private sealed class <LogoComp>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TitleScene <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x2747678", Offset = "0x2747678", VA = "0x2747678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000436")]
			[Address(RVA = "0x27476C0", Offset = "0x27476C0", VA = "0x27476C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x27473B8", Offset = "0x27473B8", VA = "0x27473B8")]
		[DebuggerHidden]
		public <LogoComp>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x27473E4", Offset = "0x27473E4", VA = "0x27473E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x27473E8", Offset = "0x27473E8", VA = "0x27473E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x2747680", Offset = "0x2747680", VA = "0x2747680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000076")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF080", Offset = "0xCDF080")]
	private sealed class <ShowTitle>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TitleScene <>4__this;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600043A")]
			[Address(RVA = "0x274863C", Offset = "0x274863C", VA = "0x274863C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043C")]
			[Address(RVA = "0x2748684", Offset = "0x2748684", VA = "0x2748684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x27483CC", Offset = "0x27483CC", VA = "0x27483CC")]
		[DebuggerHidden]
		public <ShowTitle>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x27483F8", Offset = "0x27483F8", VA = "0x27483F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x27483FC", Offset = "0x27483FC", VA = "0x27483FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x2748644", Offset = "0x2748644", VA = "0x2748644", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000077")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF090", Offset = "0xCDF090")]
	private sealed class <RoomRec>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TitleScene <>4__this;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000440")]
			[Address(RVA = "0x2748168", Offset = "0x2748168", VA = "0x2748168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000442")]
			[Address(RVA = "0x27481B0", Offset = "0x27481B0", VA = "0x27481B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x2747FC8", Offset = "0x2747FC8", VA = "0x2747FC8")]
		[DebuggerHidden]
		public <RoomRec>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x2747FF4", Offset = "0x2747FF4", VA = "0x2747FF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x2747FF8", Offset = "0x2747FF8", VA = "0x2747FF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x2748170", Offset = "0x2748170", VA = "0x2748170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000078")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF0A0", Offset = "0xCDF0A0")]
	private sealed class <FadeToRoom>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0x2747368", Offset = "0x2747368", VA = "0x2747368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000448")]
			[Address(RVA = "0x27473B0", Offset = "0x27473B0", VA = "0x27473B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x2747250", Offset = "0x2747250", VA = "0x2747250")]
		[DebuggerHidden]
		public <FadeToRoom>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x274727C", Offset = "0x274727C", VA = "0x274727C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x2747280", Offset = "0x2747280", VA = "0x2747280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x2747370", Offset = "0x2747370", VA = "0x2747370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF0B0", Offset = "0xCDF0B0")]
	private sealed class <RecRoomUserData>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TitleScene <>4__this;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] uniqueid;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <r>5__2;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <is_ok>5__3;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600044C")]
			[Address(RVA = "0x2747F78", Offset = "0x2747F78", VA = "0x2747F78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600044E")]
			[Address(RVA = "0x2747FC0", Offset = "0x2747FC0", VA = "0x2747FC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x2747BC8", Offset = "0x2747BC8", VA = "0x2747BC8")]
		[DebuggerHidden]
		public <RecRoomUserData>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x2747BF4", Offset = "0x2747BF4", VA = "0x2747BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x2747BF8", Offset = "0x2747BF8", VA = "0x2747BF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x2747F80", Offset = "0x2747F80", VA = "0x2747F80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF0C0", Offset = "0xCDF0C0")]
	private sealed class <_ToRoom>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000452")]
			[Address(RVA = "0x2748A94", Offset = "0x2748A94", VA = "0x2748A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000454")]
			[Address(RVA = "0x2748ADC", Offset = "0x2748ADC", VA = "0x2748ADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x2748838", Offset = "0x2748838", VA = "0x2748838")]
		[DebuggerHidden]
		public <_ToRoom>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x2748864", Offset = "0x2748864", VA = "0x2748864", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x2748868", Offset = "0x2748868", VA = "0x2748868", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x2748A9C", Offset = "0x2748A9C", VA = "0x2748A9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF0D0", Offset = "0xCDF0D0")]
	private sealed class <_ToRecDive>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000458")]
			[Address(RVA = "0x27487E8", Offset = "0x27487E8", VA = "0x27487E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600045A")]
			[Address(RVA = "0x2748830", Offset = "0x2748830", VA = "0x2748830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x274868C", Offset = "0x274868C", VA = "0x274868C")]
		[DebuggerHidden]
		public <_ToRecDive>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x27486B8", Offset = "0x27486B8", VA = "0x27486B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x27486BC", Offset = "0x27486BC", VA = "0x27486BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x27487F0", Offset = "0x27487F0", VA = "0x27487F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer Logo;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayableDirector TitleDirector;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Sprite> LogoSPList;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private cInter LogoAlpha;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CautionWnd mCautionWnd;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParentalWnd mParentalWnd;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SetupWnd mSetupWnd;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TitleWnd mTitleWnd;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public DeviceWnd mDeviceWnd;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LoadingWnd mLoadingWnd;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BGM TitleBGM;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool is_timeout;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int _tips_page;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color logo_color;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool is_scene_change;

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x26B6B48", Offset = "0x26B6B48", VA = "0x26B6B48", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x26B6C3C", Offset = "0x26B6C3C", VA = "0x26B6C3C", Slot = "5")]
	public override void Remove()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x26B6F6C", Offset = "0x26B6F6C", VA = "0x26B6F6C", Slot = "15")]
	public override void CallUpdate()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x26B7600", Offset = "0x26B7600", VA = "0x26B7600")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEBAC4", Offset = "0xCEBAC4")]
	private IEnumerator LogoProc()
	{
		return null;
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x26B76AC", Offset = "0x26B76AC", VA = "0x26B76AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEBB24", Offset = "0xCEBB24")]
	private IEnumerator ShowLogo(int index)
	{
		return null;
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x26B7594", Offset = "0x26B7594", VA = "0x26B7594")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEBB84", Offset = "0xCEBB84")]
	private IEnumerator LogoComp()
	{
		return null;
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x26B7728", Offset = "0x26B7728", VA = "0x26B7728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEBBE4", Offset = "0xCEBBE4")]
	private IEnumerator ShowTitle()
	{
		return null;
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x26B7528", Offset = "0x26B7528", VA = "0x26B7528")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEBC44", Offset = "0xCEBC44")]
	private IEnumerator RoomRec()
	{
		return null;
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x26B7794", Offset = "0x26B7794", VA = "0x26B7794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEBCA4", Offset = "0xCEBCA4")]
	private IEnumerator FadeToRoom()
	{
		return null;
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x26B77F0", Offset = "0x26B77F0", VA = "0x26B77F0")]
	private void Timeout()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x26B7968", Offset = "0x26B7968", VA = "0x26B7968")]
	private void Retray()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x26B7A70", Offset = "0x26B7A70", VA = "0x26B7A70")]
	private void Cansel()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x26B7AA8", Offset = "0x26B7AA8", VA = "0x26B7AA8")]
	private void CloseRetray()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x26B7B3C", Offset = "0x26B7B3C", VA = "0x26B7B3C", Slot = "6")]
	public override void Disconnected()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x26B7BB8", Offset = "0x26B7BB8", VA = "0x26B7BB8")]
	private void ToRecErr()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x26B7C8C", Offset = "0x26B7C8C", VA = "0x26B7C8C", Slot = "7")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x26B7D28", Offset = "0x26B7D28", VA = "0x26B7D28", Slot = "8")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x26B7D2C", Offset = "0x26B7D2C", VA = "0x26B7D2C")]
	public void RecRoom(int progress, string[] uniqueid, int tips_page, bool is_past)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x26B7ED4", Offset = "0x26B7ED4", VA = "0x26B7ED4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEBD04", Offset = "0xCEBD04")]
	private IEnumerator RecRoomUserData(string[] uniqueid)
	{
		return null;
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x26B7F4C", Offset = "0x26B7F4C", VA = "0x26B7F4C")]
	private void RecOK()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x26B80EC", Offset = "0x26B80EC", VA = "0x26B80EC")]
	private void RecErr()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x26B815C", Offset = "0x26B815C", VA = "0x26B815C", Slot = "10")]
	public override void OnJoinRoomFailed()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x26B8160", Offset = "0x26B8160", VA = "0x26B8160", Slot = "9")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x26B766C", Offset = "0x26B766C", VA = "0x26B766C")]
	private void UpdateLogoColor()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x26B8164", Offset = "0x26B8164", VA = "0x26B8164", Slot = "18")]
	public override void BGMLoadComp(BGM bgm)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x26B81F0", Offset = "0x26B81F0", VA = "0x26B81F0", Slot = "19")]
	public override void BGMLoadFiald()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x26B7E94", Offset = "0x26B7E94", VA = "0x26B7E94")]
	public void ToRoom()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x26B81F4", Offset = "0x26B81F4", VA = "0x26B81F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEBD64", Offset = "0xCEBD64")]
	private IEnumerator _ToRoom()
	{
		return null;
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x26B80AC", Offset = "0x26B80AC", VA = "0x26B80AC")]
	public void ToRecDive()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x26B8250", Offset = "0x26B8250", VA = "0x26B8250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEBDC4", Offset = "0xCEBDC4")]
	private IEnumerator _ToRecDive()
	{
		return null;
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x26B82AC", Offset = "0x26B82AC", VA = "0x26B82AC")]
	public TitleScene()
	{
	}
}
[Token(Token = "0x200007C")]
public class UIInputTree : MonoBehaviour
{
	[Token(Token = "0x200007D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF0E0", Offset = "0xCDF0E0")]
	private sealed class <_open>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIInputTree <>4__this;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool is_imm;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000493")]
			[Address(RVA = "0x27492A0", Offset = "0x27492A0", VA = "0x27492A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000495")]
			[Address(RVA = "0x27492E8", Offset = "0x27492E8", VA = "0x27492E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x274902C", Offset = "0x274902C", VA = "0x274902C")]
		[DebuggerHidden]
		public <_open>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x2749058", Offset = "0x2749058", VA = "0x2749058", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x274905C", Offset = "0x274905C", VA = "0x274905C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x27492A8", Offset = "0x27492A8", VA = "0x27492A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF0F0", Offset = "0xCDF0F0")]
	private sealed class <_close>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIInputTree <>4__this;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000499")]
			[Address(RVA = "0x2748FDC", Offset = "0x2748FDC", VA = "0x2748FDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600049B")]
			[Address(RVA = "0x2749024", Offset = "0x2749024", VA = "0x2749024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x2748AE4", Offset = "0x2748AE4", VA = "0x2748AE4")]
		[DebuggerHidden]
		public <_close>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x2748B10", Offset = "0x2748B10", VA = "0x2748B10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x2748B14", Offset = "0x2748B14", VA = "0x2748B14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x2748FE4", Offset = "0x2748FE4", VA = "0x2748FE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1A8C", Offset = "0xCE1A8C")]
	public int _setmat;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIInputTree ParentUITree;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<UIInputTree> ChildTreeList;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1B20", Offset = "0xCE1B20")]
	public int _search_panel;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1BB4", Offset = "0xCE1BB4")]
	public int _search_fucus;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1C48", Offset = "0xCE1C48")]
	public int _search_fucusmgr;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform UI3DTreeParent;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform OffsetPos;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public cInter OffsetZ;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Canvas;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public cInter CanvasScale;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform UIScaleTree;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private cListInter Scale;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UI_Collider BlockCollider;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<UI_OverBtn> BtnList;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<FocusGrp> GrpList;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<FocusCurMgr> CurMgrList;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int Index;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int Priority;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public cBit32 UIFlg;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isinit;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool is_awake;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 local_scale;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool IsXScale;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool Is_Imm;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject NowTree;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject NextTree;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool CngTree;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Action CloseTree_Closeed;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Action CloseTree_Open;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Action CloseTree_Opened;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool Is_Imm_Close;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool block_free;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private RaycastHit ray_hit;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector3[] UIHit_World_Pos;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool[] IsHitRayCast;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool[] IsBlockHit;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private UI_OverBtn[] hit_btn;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private UI_OverBtn[] old_hit_btn;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int mMode;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x2605A84", Offset = "0x2605A84", VA = "0x2605A84")]
	public void SetMat()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x2605B78", Offset = "0x2605B78", VA = "0x2605B78")]
	public void SearchPanel()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x2605E6C", Offset = "0x2605E6C", VA = "0x2605E6C")]
	public void AddBtn(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x2605DC0", Offset = "0x2605DC0", VA = "0x2605DC0")]
	public void SearchFocus()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x2605F10", Offset = "0x2605F10", VA = "0x2605F10")]
	public void SearchFocusMgr()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x2605FBC", Offset = "0x2605FBC", VA = "0x2605FBC")]
	public Canvas GetCanvas()
	{
		return null;
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x2606060", Offset = "0x2606060", VA = "0x2606060")]
	public bool IsScaleStop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x260607C", Offset = "0x260607C", VA = "0x260607C")]
	public void InitFocus()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x2606118", Offset = "0x2606118", VA = "0x2606118")]
	private void InitFocus(FocusGrp p)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x26062C0", Offset = "0x26062C0", VA = "0x26062C0")]
	public void SetMouseInputFlg(bool flg)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x26062E4", Offset = "0x26062E4", VA = "0x26062E4")]
	public void SetLeftInputFlg(bool flg)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x2606308", Offset = "0x2606308", VA = "0x2606308")]
	public void SetRightInputFlg(bool flg)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x260632C", Offset = "0x260632C", VA = "0x260632C")]
	public void SetFingerInputFlg(bool flg)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x2606350", Offset = "0x2606350", VA = "0x2606350")]
	public void SetDefaultInput()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x2606394", Offset = "0x2606394", VA = "0x2606394")]
	public void SetFingerInput()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x26063D8", Offset = "0x26063D8", VA = "0x26063D8", Slot = "4")]
	public virtual void ChangeLangage()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x26064EC", Offset = "0x26064EC", VA = "0x26064EC")]
	public int GetPriority()
	{
		return default(int);
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x2606538", Offset = "0x2606538", VA = "0x2606538", Slot = "5")]
	public virtual void UpdateInit()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x2606760", Offset = "0x2606760", VA = "0x2606760", Slot = "6")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x2606954", Offset = "0x2606954", VA = "0x2606954")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x26069EC", Offset = "0x26069EC", VA = "0x26069EC")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x2606A80", Offset = "0x2606A80", VA = "0x2606A80", Slot = "7")]
	public virtual void OpenWnd()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x2606AA0", Offset = "0x2606AA0", VA = "0x2606AA0", Slot = "8")]
	public virtual void OpenWnd(bool is_imm = false)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x2606CA4", Offset = "0x2606CA4", VA = "0x2606CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC0F4", Offset = "0xCEC0F4")]
	private IEnumerator _open(bool is_imm = false)
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x2606D24", Offset = "0x2606D24", VA = "0x2606D24", Slot = "9")]
	public virtual void OnOpen()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x26069D8", Offset = "0x26069D8", VA = "0x26069D8")]
	public void FreeTree()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x2606D28", Offset = "0x2606D28", VA = "0x2606D28", Slot = "10")]
	public virtual void CloseTree(GameObject now_tree, GameObject next_tree, [Optional] Action closed_cb, [Optional] Action open_cb, [Optional] Action opend_cb)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x2606D38", Offset = "0x2606D38", VA = "0x2606D38")]
	private void Close()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x2606E68", Offset = "0x2606E68", VA = "0x2606E68", Slot = "11")]
	public virtual void CloseWnd()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x2606DFC", Offset = "0x2606DFC", VA = "0x2606DFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC154", Offset = "0xCEC154")]
	private IEnumerator _close()
	{
		return null;
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x2606E7C", Offset = "0x2606E7C", VA = "0x2606E7C", Slot = "12")]
	public virtual void OnClose()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x2606F30", Offset = "0x2606F30", VA = "0x2606F30", Slot = "13")]
	public virtual void ClosedChildWnd()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x2606F34", Offset = "0x2606F34", VA = "0x2606F34", Slot = "14")]
	public virtual bool ChkRayHit(Ray ray, float distance, int chk_ray_type)
	{
		return default(bool);
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x2607294", Offset = "0x2607294", VA = "0x2607294")]
	private void _ChkRayHit(Ray ray, float distance, int chk_ray_type)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x260713C", Offset = "0x260713C", VA = "0x260713C")]
	public bool IsChildRayHit(int chk_ray_type)
	{
		return default(bool);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x26076FC", Offset = "0x26076FC", VA = "0x26076FC", Slot = "15")]
	public virtual void BtnExecute(int btn_press, int chk_ray_type)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x26078B8", Offset = "0x26078B8", VA = "0x26078B8")]
	private void BtnExecute(UI_OverBtn btn, int btn_press)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x2607A90", Offset = "0x2607A90", VA = "0x2607A90")]
	private void BtnExecute(UI_OverBtn old_btn, UI_OverBtn btn)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x2607BB8", Offset = "0x2607BB8", VA = "0x2607BB8", Slot = "16")]
	public virtual void UIUpdate()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x2607C5C", Offset = "0x2607C5C", VA = "0x2607C5C", Slot = "17")]
	public virtual void PlayHoverSound()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x2607CB8", Offset = "0x2607CB8", VA = "0x2607CB8", Slot = "18")]
	public virtual bool OnLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x2607E2C", Offset = "0x2607E2C", VA = "0x2607E2C", Slot = "19")]
	public virtual bool OnRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x2607FA0", Offset = "0x2607FA0", VA = "0x2607FA0", Slot = "20")]
	public virtual bool OnUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x2608114", Offset = "0x2608114", VA = "0x2608114", Slot = "21")]
	public virtual bool OnDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x2608288", Offset = "0x2608288", VA = "0x2608288", Slot = "22")]
	public virtual bool OnEnter()
	{
		return default(bool);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x26083FC", Offset = "0x26083FC", VA = "0x26083FC", Slot = "23")]
	public virtual bool OnReturn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x2608570", Offset = "0x2608570", VA = "0x2608570", Slot = "24")]
	public virtual bool OnBtn(int btn_index)
	{
		return default(bool);
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x26086EC", Offset = "0x26086EC", VA = "0x26086EC")]
	public void StartMode()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x26086F4", Offset = "0x26086F4", VA = "0x26086F4")]
	public void EndMode()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x2608700", Offset = "0x2608700", VA = "0x2608700")]
	public void DeActiveMode()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x260870C", Offset = "0x260870C", VA = "0x260870C")]
	public bool IsActiveMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x260871C", Offset = "0x260871C", VA = "0x260871C", Slot = "25")]
	public virtual void Remove()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x2608720", Offset = "0x2608720", VA = "0x2608720")]
	public UIInputTree()
	{
	}
}
[Token(Token = "0x200007F")]
public class Unit : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	public enum eUnit
	{
		[Token(Token = "0x400036C")]
		Doctor,
		[Token(Token = "0x400036D")]
		President,
		[Token(Token = "0x400036E")]
		Son,
		[Token(Token = "0x400036F")]
		Researcher,
		[Token(Token = "0x4000370")]
		Assistant,
		[Token(Token = "0x4000371")]
		Millionaire,
		[Token(Token = "0x4000372")]
		Max
	}

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eUnit mUnitType;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator mAnimtor;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource AudioPlayer;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRIK mVRIK;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AvaterAim mAim;

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x260A858", Offset = "0x260A858", VA = "0x260A858")]
	public static eUnit GetUnitType(string str)
	{
		return default(eUnit);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x260A924", Offset = "0x260A924", VA = "0x260A924")]
	public void SetUnitType(eUnit unit_type)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x260A92C", Offset = "0x260A92C", VA = "0x260A92C")]
	public void Remove()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x260A930", Offset = "0x260A930", VA = "0x260A930")]
	public Unit()
	{
	}
}
[Token(Token = "0x2000081")]
public class VoChat : MonoBehaviour
{
	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource Vo;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhotonVoiceView VV;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Player VoPlayer;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x26126C0", Offset = "0x26126C0", VA = "0x26126C0")]
	public void SetMute(bool flg)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x26126E0", Offset = "0x26126E0", VA = "0x26126E0")]
	public void FindPlayer()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x26127A8", Offset = "0x26127A8", VA = "0x26127A8")]
	public VoChat()
	{
	}
}
[Token(Token = "0x2000082")]
public class VoiceChatMgr : MonoBehaviour
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhotonVoiceNetwork mPhotonVoiceNetwork;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x26127C0", Offset = "0x26127C0", VA = "0x26127C0")]
	public Recorder GetRecoder()
	{
		return null;
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x26127DC", Offset = "0x26127DC", VA = "0x26127DC")]
	public VoiceChatMgr()
	{
	}
}
[Token(Token = "0x2000083")]
public class cAssetLoader : MonoBehaviour
{
	[Token(Token = "0x2000084")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF100", Offset = "0xCDF100")]
	private sealed class <LoadAsync>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string asset_name;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public cAssetLoader <>4__this;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<AssetBundleRequest> compfunc;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AssetBundle <ab>5__2;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <request>5__3;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetBundleRequest <load_data>5__4;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B9")]
			[Address(RVA = "0x274ED0C", Offset = "0x274ED0C", VA = "0x274ED0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004BB")]
			[Address(RVA = "0x274ED54", Offset = "0x274ED54", VA = "0x274ED54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x274E994", Offset = "0x274E994", VA = "0x274E994")]
		[DebuggerHidden]
		public <LoadAsync>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x274E9C0", Offset = "0x274E9C0", VA = "0x274E9C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x274E9C4", Offset = "0x274E9C4", VA = "0x274E9C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x274ED14", Offset = "0x274ED14", VA = "0x274ED14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF110", Offset = "0xCDF110")]
	private sealed class <LoadVoAsync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string file_name;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneUnit.eUnit unit;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<AudioClip> cb;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ResourceRequest <req>5__2;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004BF")]
			[Address(RVA = "0x274F240", Offset = "0x274F240", VA = "0x274F240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004C1")]
			[Address(RVA = "0x274F288", Offset = "0x274F288", VA = "0x274F288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x274ED5C", Offset = "0x274ED5C", VA = "0x274ED5C")]
		[DebuggerHidden]
		public <LoadVoAsync>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x274ED88", Offset = "0x274ED88", VA = "0x274ED88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x274ED8C", Offset = "0x274ED8C", VA = "0x274ED8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x274F248", Offset = "0x274F248", VA = "0x274F248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetBundle LoadBundle;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AssetBundle> mAssetBundleList;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoad;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x2714548", Offset = "0x2714548", VA = "0x2714548")]
	public void UnLoadAll()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x27146D4", Offset = "0x27146D4", VA = "0x27146D4")]
	public void OutofAssetList(string asset_name)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x271488C", Offset = "0x271488C", VA = "0x271488C")]
	public AssetBundle GetAssetBundle(string asset_name)
	{
		return null;
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x2714AA0", Offset = "0x2714AA0", VA = "0x2714AA0")]
	public void UnloadAssetBundle(string asset_name)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x2714CA0", Offset = "0x2714CA0", VA = "0x2714CA0")]
	public bool FileChk(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x2714CAC", Offset = "0x2714CAC", VA = "0x2714CAC")]
	public bool FileChk(string path, long file_size)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x2714D48", Offset = "0x2714D48", VA = "0x2714D48")]
	private void Init()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x2714E2C", Offset = "0x2714E2C", VA = "0x2714E2C")]
	public void LoadBGM(string bgm_name, BGM bgm)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x2715330", Offset = "0x2715330", VA = "0x2715330")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC254", Offset = "0xCEC254")]
	public IEnumerator LoadAsync(string asset_name, Action<AssetBundleRequest> compfunc)
	{
		return null;
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x27153B0", Offset = "0x27153B0", VA = "0x27153B0")]
	public Sprite LoadSprite(string file_name)
	{
		return null;
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x27153FC", Offset = "0x27153FC", VA = "0x27153FC")]
	public void LoadBGMRes(string bgm_name, Action<string, BGM> cb)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x2715764", Offset = "0x2715764", VA = "0x2715764")]
	public void LoadBGMAsync(string bgm_name, AssetBundleRequest load_data, Action<string, BGM> cb)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x2715C74", Offset = "0x2715C74", VA = "0x2715C74")]
	public string LoadString(string asset_name, string file_name)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x2715D78", Offset = "0x2715D78", VA = "0x2715D78")]
	public AudioClip LoadNa(string file_name)
	{
		return null;
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x2715E64", Offset = "0x2715E64", VA = "0x2715E64")]
	public AudioClip LoadVo(SceneUnit.eUnit unit, string file_name)
	{
		return null;
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x2715FC4", Offset = "0x2715FC4", VA = "0x2715FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC2B4", Offset = "0xCEC2B4")]
	public IEnumerator LoadVoAsync(SceneUnit.eUnit unit, string file_name, Action<AudioClip> cb)
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x2716048", Offset = "0x2716048", VA = "0x2716048")]
	public cAssetLoader()
	{
	}
}
[Serializable]
[Token(Token = "0x2000086")]
public class cBit32
{
	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private uint m_Flg;

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x27160C0", Offset = "0x27160C0", VA = "0x27160C0")]
	public void Init()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x27160C8", Offset = "0x27160C8", VA = "0x27160C8")]
	public bool ChkFlg(uint flg)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x27160D8", Offset = "0x27160D8", VA = "0x27160D8")]
	public void SetFlg(uint flg, bool b = true)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x27160F4", Offset = "0x27160F4", VA = "0x27160F4")]
	public uint GetFlg()
	{
		return default(uint);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x27160FC", Offset = "0x27160FC", VA = "0x27160FC")]
	public void Set(uint f)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x2716104", Offset = "0x2716104", VA = "0x2716104")]
	public cBit32()
	{
	}
}
[Serializable]
[Token(Token = "0x2000087")]
public class cBit32Array
{
	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private cBit32[] m_BitArray;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_Flg_Cnt;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x271610C", Offset = "0x271610C", VA = "0x271610C")]
	public void Set(uint[] p)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x27163A4", Offset = "0x27163A4", VA = "0x27163A4")]
	public cBit32Array(int cnt)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x27161D4", Offset = "0x27161D4", VA = "0x27161D4")]
	public void Create(int cnt)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x27163D4", Offset = "0x27163D4", VA = "0x27163D4")]
	public void Init()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x2716438", Offset = "0x2716438", VA = "0x2716438")]
	public uint[] Get()
	{
		return null;
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x27164F4", Offset = "0x27164F4", VA = "0x27164F4")]
	public bool ChkFlg(int p)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x27165EC", Offset = "0x27165EC", VA = "0x27165EC")]
	public uint GetFlg(int no)
	{
		return default(uint);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x2716360", Offset = "0x2716360", VA = "0x2716360")]
	public void Set(int p, uint flg)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x27166B8", Offset = "0x27166B8", VA = "0x27166B8")]
	public void SetFlg(int p, bool flg)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x27167B8", Offset = "0x27167B8", VA = "0x27167B8")]
	public cBit32 pBit(int no)
	{
		return null;
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x2716884", Offset = "0x2716884", VA = "0x2716884")]
	private void Release()
	{
	}
}
[Serializable]
[Token(Token = "0x2000088")]
public class cInter
{
	[Token(Token = "0x2000089")]
	public enum eInter
	{
		[Token(Token = "0x4000395")]
		eFlat,
		[Token(Token = "0x4000396")]
		eAdd,
		[Token(Token = "0x4000397")]
		eSub,
		[Token(Token = "0x4000398")]
		eAdd2,
		[Token(Token = "0x4000399")]
		eSub2,
		[Token(Token = "0x400039A")]
		eAdd4,
		[Token(Token = "0x400039B")]
		eSub4,
		[Token(Token = "0x400039C")]
		eAddSub,
		[Token(Token = "0x400039D")]
		eSubAdd,
		[Token(Token = "0x400039E")]
		eAddSub2,
		[Token(Token = "0x400039F")]
		eSubAdd2,
		[Token(Token = "0x40003A0")]
		eAddSub4,
		[Token(Token = "0x40003A1")]
		eSubAdd4,
		[Token(Token = "0x40003A2")]
		eSin
	}

	[Token(Token = "0x400038B")]
	private const uint INTER_FLG_NONE = 0u;

	[Token(Token = "0x400038C")]
	private const uint INTER_LOOP = 1u;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private eInter m_Inter_type;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float m_Start;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_End;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_Time_All;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_Time;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_Pos;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private cBit32 m_InterFlg;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x27173F0", Offset = "0x27173F0", VA = "0x27173F0")]
	public void Copy(cInter p)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x2717438", Offset = "0x2717438", VA = "0x2717438")]
	public void Set(eInter inter_type, float start, float end, float frame)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x271763C", Offset = "0x271763C", VA = "0x271763C")]
	public void Set(eInter inter_type, float end, float frame)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x271765C", Offset = "0x271765C", VA = "0x271765C")]
	public void Set(float s)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x2717678", Offset = "0x2717678", VA = "0x2717678")]
	public void Set()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x271768C", Offset = "0x271768C", VA = "0x271768C")]
	public void AddEnd(eInter inter_type, float add, float frame)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x27176B4", Offset = "0x27176B4", VA = "0x27176B4")]
	public void AddAll(float add)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x27176D4", Offset = "0x27176D4", VA = "0x27176D4")]
	public void ChangeStart(float start)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x27176E0", Offset = "0x27176E0", VA = "0x27176E0")]
	public void ChangeEnd(eInter inter_type, float end, float frame)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x2717700", Offset = "0x2717700", VA = "0x2717700")]
	public float NormRot(float rot)
	{
		return default(float);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x2717760", Offset = "0x2717760", VA = "0x2717760")]
	public void MathChangeEnd(eInter inter_type, float end, float frame, bool is_rot = false)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x2717820", Offset = "0x2717820", VA = "0x2717820")]
	public void SetTime(float t)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x2717828", Offset = "0x2717828", VA = "0x2717828")]
	public void SetChkFrame(eInter inter_type, float end, float frame)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x2717458", Offset = "0x2717458", VA = "0x2717458")]
	public void UpDate(float rate)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x2717A08", Offset = "0x2717A08", VA = "0x2717A08")]
	public float GetPer(float per)
	{
		return default(float);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x2717B34", Offset = "0x2717B34", VA = "0x2717B34")]
	public bool IsStop()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x2717B44", Offset = "0x2717B44", VA = "0x2717B44")]
	public float Get()
	{
		return default(float);
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x2717B4C", Offset = "0x2717B4C", VA = "0x2717B4C")]
	public float GetTime()
	{
		return default(float);
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x2717B54", Offset = "0x2717B54", VA = "0x2717B54")]
	public float GetAllTime()
	{
		return default(float);
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x2717B5C", Offset = "0x2717B5C", VA = "0x2717B5C")]
	public float GetStart()
	{
		return default(float);
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x2717B64", Offset = "0x2717B64", VA = "0x2717B64")]
	public float GetLast()
	{
		return default(float);
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x2717B6C", Offset = "0x2717B6C", VA = "0x2717B6C")]
	public void SetLoop(bool f)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x2717B9C", Offset = "0x2717B9C", VA = "0x2717B9C")]
	public void End()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x2717854", Offset = "0x2717854", VA = "0x2717854")]
	private float Flat(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x2717868", Offset = "0x2717868", VA = "0x2717868")]
	private float Add(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x2717880", Offset = "0x2717880", VA = "0x2717880")]
	private float Add2(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x271789C", Offset = "0x271789C", VA = "0x271789C")]
	private float Add4(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x27178BC", Offset = "0x27178BC", VA = "0x27178BC")]
	private float Sub(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x27178D8", Offset = "0x27178D8", VA = "0x27178D8")]
	private float Sub2(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x27178F8", Offset = "0x27178F8", VA = "0x27178F8")]
	private float Sub4(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x271791C", Offset = "0x271791C", VA = "0x271791C")]
	private float AddSub(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x2717968", Offset = "0x2717968", VA = "0x2717968")]
	private float AddSub2(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x2717BA8", Offset = "0x2717BA8", VA = "0x2717BA8")]
	private float AddSub4(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x27179BC", Offset = "0x27179BC", VA = "0x27179BC")]
	private float SubAdd(float Start, float End, float TimeAll, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x2717C04", Offset = "0x2717C04", VA = "0x2717C04")]
	public void ReStart()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x2717C10", Offset = "0x2717C10", VA = "0x2717C10")]
	public cInter()
	{
	}
}
[Serializable]
[Token(Token = "0x200008A")]
public class cInter2D
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private cInter m_X;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private cInter m_Y;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x2717C74", Offset = "0x2717C74", VA = "0x2717C74")]
	public void Set(cInter.eInter inter_type, Vector2 start, Vector2 end, float frame)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x2717CD0", Offset = "0x2717CD0", VA = "0x2717CD0")]
	public void Set(cInter.eInter inter_type, Vector2 end, float frame)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x2717D2C", Offset = "0x2717D2C", VA = "0x2717D2C")]
	public void Set(Vector2 end)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x2717D7C", Offset = "0x2717D7C", VA = "0x2717D7C")]
	public void Set(float x, float y)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x2717DCC", Offset = "0x2717DCC", VA = "0x2717DCC")]
	public void SetX(float x)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x2717DFC", Offset = "0x2717DFC", VA = "0x2717DFC")]
	public void SetY(float y)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x2717E2C", Offset = "0x2717E2C", VA = "0x2717E2C")]
	public void Set()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x2717E6C", Offset = "0x2717E6C", VA = "0x2717E6C")]
	public void ChangeStart(Vector2 start)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x2717EA0", Offset = "0x2717EA0", VA = "0x2717EA0")]
	public void MathChangeEnd(cInter.eInter inter_type, Vector2 end, float frame)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x2717F14", Offset = "0x2717F14", VA = "0x2717F14")]
	public void UpDate(float update_speed)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x2717F58", Offset = "0x2717F58", VA = "0x2717F58")]
	public void SetTime(float t)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x2717F84", Offset = "0x2717F84", VA = "0x2717F84")]
	public void End()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x2717FB8", Offset = "0x2717FB8", VA = "0x2717FB8")]
	public bool IsStop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x2718000", Offset = "0x2718000", VA = "0x2718000")]
	public Vector2 Get()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x271802C", Offset = "0x271802C", VA = "0x271802C")]
	public Vector2 GetStart()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x2718058", Offset = "0x2718058", VA = "0x2718058")]
	public Vector2 GetLast()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x2718084", Offset = "0x2718084", VA = "0x2718084")]
	public float Get_X()
	{
		return default(float);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x27180A0", Offset = "0x27180A0", VA = "0x27180A0")]
	public float Get_Y()
	{
		return default(float);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x27180BC", Offset = "0x27180BC", VA = "0x27180BC")]
	public float GetTime()
	{
		return default(float);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x27180D8", Offset = "0x27180D8", VA = "0x27180D8")]
	public cInter2D()
	{
	}
}
[Serializable]
[Token(Token = "0x200008B")]
public class cInter3D
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public cInter m_X;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public cInter m_Y;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public cInter m_Z;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x2718154", Offset = "0x2718154", VA = "0x2718154")]
	public void Set(cInter.eInter inter_type, Vector3 start, Vector3 end, float frame)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x27181D4", Offset = "0x27181D4", VA = "0x27181D4")]
	public void Set(cInter.eInter inter_type, Vector3 end, float frame)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x2718254", Offset = "0x2718254", VA = "0x2718254")]
	public void Set(Vector3 end)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x27182C4", Offset = "0x27182C4", VA = "0x27182C4")]
	public void Set()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x271831C", Offset = "0x271831C", VA = "0x271831C")]
	public void ChangeStart(Vector3 start)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x2718360", Offset = "0x2718360", VA = "0x2718360")]
	public void MathChangeEnd(cInter.eInter inter_type, Vector3 end, float frame, bool is_rot = false)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x27183F8", Offset = "0x27183F8", VA = "0x27183F8")]
	public void UpDate(float update_speed)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x271844C", Offset = "0x271844C", VA = "0x271844C")]
	public void SetTime(float t)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x2718484", Offset = "0x2718484", VA = "0x2718484")]
	public void End()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x27184C8", Offset = "0x27184C8", VA = "0x27184C8")]
	public bool IsStop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x2718524", Offset = "0x2718524", VA = "0x2718524")]
	public Vector3 Get()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x271855C", Offset = "0x271855C", VA = "0x271855C")]
	public Vector3 GetStart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x2718594", Offset = "0x2718594", VA = "0x2718594")]
	public Vector3 GetLast()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x27185CC", Offset = "0x27185CC", VA = "0x27185CC")]
	public float Get_X()
	{
		return default(float);
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x27185E8", Offset = "0x27185E8", VA = "0x27185E8")]
	public float Get_Y()
	{
		return default(float);
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x2718604", Offset = "0x2718604", VA = "0x2718604")]
	public float Get_Z()
	{
		return default(float);
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x2718620", Offset = "0x2718620", VA = "0x2718620")]
	public float GetTime()
	{
		return default(float);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x271863C", Offset = "0x271863C", VA = "0x271863C")]
	public cInter3D()
	{
	}
}
[Serializable]
[Token(Token = "0x200008C")]
public class cListInter
{
	[Token(Token = "0x40003A8")]
	private const ulong INTER_LIST_NONE = 0uL;

	[Token(Token = "0x40003A9")]
	private const ulong INTER_LIST_LOOP = 1uL;

	[Token(Token = "0x40003AA")]
	private const ulong INTER_LIST_END = 2uL;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action NextAction;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_ListCnt;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_NowList;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ulong m_Flg;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public cInter[] m_pListInter;

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x27186CC", Offset = "0x27186CC", VA = "0x27186CC")]
	public void Create(int max)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x2718858", Offset = "0x2718858", VA = "0x2718858")]
	public void Set(int no, cInter.eInter inter_type, float start, float end, float frame)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x271891C", Offset = "0x271891C", VA = "0x271891C")]
	public void Set(int no, cInter.eInter inter_type, float end, float frame)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x2718980", Offset = "0x2718980", VA = "0x2718980")]
	public void Set(int no, float s)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x271881C", Offset = "0x271881C", VA = "0x271881C")]
	public void Set(int no)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x2718810", Offset = "0x2718810", VA = "0x2718810")]
	public void Release()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x27188C8", Offset = "0x27188C8", VA = "0x27188C8")]
	public cInter pListInter(int no)
	{
		return null;
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x27189D0", Offset = "0x27189D0", VA = "0x27189D0")]
	public void UpDate(float update_speed)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x2718BAC", Offset = "0x2718BAC", VA = "0x2718BAC")]
	public float Get()
	{
		return default(float);
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x2718BE4", Offset = "0x2718BE4", VA = "0x2718BE4")]
	public bool IsEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x2718BF0", Offset = "0x2718BF0", VA = "0x2718BF0")]
	public void SetEnd()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x2718C1C", Offset = "0x2718C1C", VA = "0x2718C1C")]
	public void SetLoop(bool flg)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x2718C38", Offset = "0x2718C38", VA = "0x2718C38")]
	public void ReStart()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x2718C8C", Offset = "0x2718C8C", VA = "0x2718C8C")]
	public bool IsFirst()
	{
		return default(bool);
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x2718AD8", Offset = "0x2718AD8", VA = "0x2718AD8")]
	private void NextList()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x2718AC8", Offset = "0x2718AC8", VA = "0x2718AC8")]
	public bool GetFlg(ulong flg)
	{
		return default(bool);
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x2718C00", Offset = "0x2718C00", VA = "0x2718C00")]
	public void SetFlg(ulong flg, bool b = true)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x2718C9C", Offset = "0x2718C9C", VA = "0x2718C9C")]
	public float GetLast()
	{
		return default(float);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x2718CC4", Offset = "0x2718CC4", VA = "0x2718CC4")]
	public cListInter()
	{
	}
}
[Serializable]
[Token(Token = "0x200008D")]
public class BGM
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Title;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip loop;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundTable sound_table;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x2703474", Offset = "0x2703474", VA = "0x2703474")]
	public BGM(string t)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x27034A0", Offset = "0x27034A0", VA = "0x27034A0", Slot = "1")]
	~BGM()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x27034A8", Offset = "0x27034A8", VA = "0x27034A8")]
	public void SetBGM(AudioClip p)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x27035E4", Offset = "0x27035E4", VA = "0x27035E4")]
	public void Release()
	{
	}
}
[Serializable]
[Token(Token = "0x200008E")]
public class AsyncBGM
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int index;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string file_name;

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x2702018", Offset = "0x2702018", VA = "0x2702018")]
	public AsyncBGM()
	{
	}
}
[Token(Token = "0x200008F")]
public class cSoundMgr : MonoBehaviour
{
	[Token(Token = "0x2000090")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF120", Offset = "0xCDF120")]
	private sealed class <loadbgm_async>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cSoundMgr <>4__this;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string music;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <isload_wait>5__2;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000566")]
			[Address(RVA = "0x274F50C", Offset = "0x274F50C", VA = "0x274F50C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0x274F554", Offset = "0x274F554", VA = "0x274F554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x274F2FC", Offset = "0x274F2FC", VA = "0x274F2FC")]
		[DebuggerHidden]
		public <loadbgm_async>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x274F328", Offset = "0x274F328", VA = "0x274F328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x274F32C", Offset = "0x274F32C", VA = "0x274F32C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x274F514", Offset = "0x274F514", VA = "0x274F514", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000091")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF130", Offset = "0xCDF130")]
	private sealed class <>c
	{
		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<string, BGM> <>9__68_0;

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x274F2F0", Offset = "0x274F2F0", VA = "0x274F2F0")]
		public <>c()
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x274F2F8", Offset = "0x274F2F8", VA = "0x274F2F8")]
		internal void <.ctor>b__68_0(string <p0>, BGM <p1>)
		{
		}
	}

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BGMPlayer[] BGM_Player;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource SysSE_Player;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource SysVo_Player;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AudioSource> TimeLine_Vo_Player;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioMixer VoMixer;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip UIClip_OK;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip UIClip_NO;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip UIClip_Open;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip UIClip_Close;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip UIClip_Focus;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip Shatter_SE;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public cInter MasterBGMVol;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public cInter MasterSEVol;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public cInter MasterVoVol;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public cInter MasterVoChatVol;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public cInter SceneVoVol;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public cInter SceneVoChatVol;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool vo_update;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AsyncBGM load_wait_bgm;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Action<BGM> SyncLoadBGM;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Action LoadBGMFiald;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Action<string, BGM> LoadBGMComp;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string async_load_bgm;

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x2718CCC", Offset = "0x2718CCC", VA = "0x2718CCC")]
	public void ClearBGM()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x2718D38", Offset = "0x2718D38", VA = "0x2718D38")]
	public void AddVo(AudioSource vo)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x2718DF4", Offset = "0x2718DF4", VA = "0x2718DF4")]
	public void UpdateVoList()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x2718E64", Offset = "0x2718E64", VA = "0x2718E64")]
	public void UpdateTimeLineVo()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x2718F9C", Offset = "0x2718F9C", VA = "0x2718F9C")]
	public void UpdateVoChat()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x271904C", Offset = "0x271904C", VA = "0x271904C")]
	public void PlayUI_Vo(AudioClip clip)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x2719068", Offset = "0x2719068", VA = "0x2719068")]
	public void StopUI_Vo()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x2719084", Offset = "0x2719084", VA = "0x2719084")]
	public bool IsPlayUI_Vo()
	{
		return default(bool);
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x27190A0", Offset = "0x27190A0", VA = "0x27190A0")]
	public void PlayUI_SE(AudioClip clip)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x27190BC", Offset = "0x27190BC", VA = "0x27190BC")]
	public void StopUI_SE()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x27190D8", Offset = "0x27190D8", VA = "0x27190D8")]
	public bool IsPlayUI_SE()
	{
		return default(bool);
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x2714474", Offset = "0x2714474", VA = "0x2714474")]
	public void PlayUI_OK()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x271451C", Offset = "0x271451C", VA = "0x271451C")]
	public void PlayUI_NO()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x27190F4", Offset = "0x27190F4", VA = "0x27190F4")]
	public void PlayUI_Open()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x2719118", Offset = "0x2719118", VA = "0x2719118")]
	public void PlayUI_Close()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x271913C", Offset = "0x271913C", VA = "0x271913C")]
	public void PlayUI_Focus()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x2719160", Offset = "0x2719160", VA = "0x2719160")]
	public void PlayShatter_SE()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x2719184", Offset = "0x2719184", VA = "0x2719184")]
	public void SceneVol(float vol, float t)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x27191BC", Offset = "0x27191BC", VA = "0x27191BC")]
	public void SetSceneVoChat(float vol, float t)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x271925C", Offset = "0x271925C", VA = "0x271925C")]
	public void SetBGMVol(int vol)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x271950C", Offset = "0x271950C", VA = "0x271950C")]
	public void SetSEVol(int vol)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x27195B4", Offset = "0x27195B4", VA = "0x27195B4")]
	public void SetVoVol(int vol)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x2719658", Offset = "0x2719658", VA = "0x2719658")]
	public void SetVoChatVol(int vol)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x27196F4", Offset = "0x27196F4", VA = "0x27196F4")]
	public void InitSoundMgr()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x2719774", Offset = "0x2719774", VA = "0x2719774")]
	public void UpdateSoundMgr()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x271977C", Offset = "0x271977C", VA = "0x271977C")]
	public void Remove()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x2719304", Offset = "0x2719304", VA = "0x2719304")]
	public void UpdateMasterVol(bool is_abs = false)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x2719828", Offset = "0x2719828", VA = "0x2719828")]
	public void LoadBGMAsync(int index, string file_name, Action<BGM> comp_cb, Action fiald_cb)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x271996C", Offset = "0x271996C", VA = "0x271996C")]
	private void AsyncLoadEndBGM(string bgm_name, BGM bgm)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x2719BCC", Offset = "0x2719BCC", VA = "0x2719BCC")]
	public void LoadStartBGM(string bgm_name, Action<BGM> comp_cb)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x2719C90", Offset = "0x2719C90", VA = "0x2719C90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC3B4", Offset = "0xCEC3B4")]
	private IEnumerator loadbgm_async(string music)
	{
		return null;
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x2719D08", Offset = "0x2719D08", VA = "0x2719D08")]
	private void LoadCompBGMAsync(AssetBundleRequest p)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x2719D78", Offset = "0x2719D78", VA = "0x2719D78")]
	private BGMPlayer SearchPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x2719EEC", Offset = "0x2719EEC", VA = "0x2719EEC")]
	public BGMPlayer ChkPlayer(int bgm_no)
	{
		return null;
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x271A01C", Offset = "0x271A01C", VA = "0x271A01C")]
	public BGMPlayer PlayBGM(int bgm_no, BGM bgm, bool is_loop = true, float vol = 100f, float t = -1f, bool is_play_abs = false)
	{
		return null;
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x271A248", Offset = "0x271A248", VA = "0x271A248")]
	public BGMPlayer PlayBGMTime(int bgm_no, BGM bgm, float start_time, bool is_loop = true, float vol = 100f)
	{
		return null;
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x271A41C", Offset = "0x271A41C", VA = "0x271A41C")]
	public void ChangeBGMVol(int bgm_no, float to, float t)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x271A50C", Offset = "0x271A50C", VA = "0x271A50C")]
	public void PauseBGM(int bgm_no, int flg)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x271A618", Offset = "0x271A618", VA = "0x271A618")]
	public bool IsBGMPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x271A694", Offset = "0x271A694", VA = "0x271A694")]
	public bool IsBGMPlay(int player_no)
	{
		return default(bool);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x271A6D8", Offset = "0x271A6D8", VA = "0x271A6D8")]
	public void StopBGM(int bgm_no, float fade_time)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x271A7B4", Offset = "0x271A7B4", VA = "0x271A7B4")]
	public void StopAllBGM(float fade_time)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x271978C", Offset = "0x271978C", VA = "0x271978C")]
	public void UpdateBGMVol()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x27197F8", Offset = "0x27197F8", VA = "0x27197F8")]
	public void UpdateSEVol()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x2719824", Offset = "0x2719824", VA = "0x2719824")]
	public void UpdateVoVol()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x271A830", Offset = "0x271A830", VA = "0x271A830")]
	public cSoundMgr()
	{
	}
}
[Token(Token = "0x2000092")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xCDF140", Offset = "0xCDF140")]
public sealed class ButtonAttribute : PropertyAttribute
{
	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE1CDC", Offset = "0xCE1CDC")]
	private string <Function>k__BackingField;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE1CEC", Offset = "0xCE1CEC")]
	private string <Name>k__BackingField;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE1CFC", Offset = "0xCE1CFC")]
	private object[] <Parameters>k__BackingField;

	[Token(Token = "0x17000074")]
	public string Function
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x2710478", Offset = "0x2710478", VA = "0x2710478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEC464", Offset = "0xCEC464")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056D")]
		[Address(RVA = "0x2710480", Offset = "0x2710480", VA = "0x2710480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEC474", Offset = "0xCEC474")]
		private set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public string Name
	{
		[Token(Token = "0x600056E")]
		[Address(RVA = "0x2710488", Offset = "0x2710488", VA = "0x2710488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEC484", Offset = "0xCEC484")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056F")]
		[Address(RVA = "0x2710490", Offset = "0x2710490", VA = "0x2710490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEC494", Offset = "0xCEC494")]
		private set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public object[] Parameters
	{
		[Token(Token = "0x6000570")]
		[Address(RVA = "0x2710498", Offset = "0x2710498", VA = "0x2710498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEC4A4", Offset = "0xCEC4A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000571")]
		[Address(RVA = "0x27104A0", Offset = "0x27104A0", VA = "0x27104A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEC4B4", Offset = "0xCEC4B4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x27104A8", Offset = "0x27104A8", VA = "0x27104A8")]
	public ButtonAttribute(string function, string name, params object[] parameters)
	{
	}
}
[Token(Token = "0x2000093")]
public class AvaterAim : MonoBehaviour
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AimIK mAimIK;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TargetT;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform PinT;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private cInter Weight;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform[] child_list;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x2702830", Offset = "0x2702830", VA = "0x2702830")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x270284C", Offset = "0x270284C", VA = "0x270284C")]
	public void SetWeight(float per, float t)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x270286C", Offset = "0x270286C", VA = "0x270286C")]
	public void UpdateIK(float t)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x27028CC", Offset = "0x27028CC", VA = "0x27028CC")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x2702A58", Offset = "0x2702A58", VA = "0x2702A58")]
	public bool SetUpLeftArm(Transform target_avater)
	{
		return default(bool);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x2702F78", Offset = "0x2702F78", VA = "0x2702F78")]
	public bool SetUpRightArm(Transform target_avater)
	{
		return default(bool);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x2702AF8", Offset = "0x2702AF8", VA = "0x2702AF8")]
	private Transform Search(Transform[] t_list, string search_name)
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x2702B9C", Offset = "0x2702B9C", VA = "0x2702B9C")]
	private bool SetUp(Transform target_avater, Transform t)
	{
		return default(bool);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x2703018", Offset = "0x2703018", VA = "0x2703018")]
	public AvaterAim()
	{
	}
}
[Token(Token = "0x2000094")]
public class IK_Space : MonoBehaviour
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Pin;

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x2301EF4", Offset = "0x2301EF4", VA = "0x2301EF4")]
	public IK_Space()
	{
	}
}
[Token(Token = "0x2000095")]
public class FocusCur : MonoBehaviour
{
	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image CurImg;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 from_pos;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FocusTarget to;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 sub;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private cInter Per;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 from_cur_size;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 sub_cur_size;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x272E554", Offset = "0x272E554", VA = "0x272E554")]
	public void Setpos(FocusTarget _from)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x272E558", Offset = "0x272E558", VA = "0x272E558")]
	public void To(FocusTarget _to, float t)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x272E55C", Offset = "0x272E55C", VA = "0x272E55C")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x272E560", Offset = "0x272E560", VA = "0x272E560")]
	private void UpdateCur()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x272E5F8", Offset = "0x272E5F8", VA = "0x272E5F8")]
	private void UpdateActive()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x272E6C8", Offset = "0x272E6C8", VA = "0x272E6C8")]
	public FocusCur()
	{
	}
}
[Token(Token = "0x2000096")]
public class FocusCurMgr : MonoBehaviour
{
	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1D0C", Offset = "0xCE1D0C")]
	public int _search_target;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<FocusGrp> TargetGrp;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FocusCur Cur;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FocusTarget now_target;

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x272E72C", Offset = "0x272E72C", VA = "0x272E72C")]
	private void SearchTarget()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x272E848", Offset = "0x272E848", VA = "0x272E848")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x272E850", Offset = "0x272E850", VA = "0x272E850")]
	public void ShowCur(FocusTarget target)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x272E854", Offset = "0x272E854", VA = "0x272E854")]
	public void SetToTarget(FocusTarget p, bool is_abs = false, float move_time = 0.2f)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x272E84C", Offset = "0x272E84C", VA = "0x272E84C")]
	private void UpdateCur()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x272E8EC", Offset = "0x272E8EC", VA = "0x272E8EC")]
	public FocusCurMgr()
	{
	}
}
[Token(Token = "0x2000097")]
public class FocusGrp : MonoBehaviour
{
	[Token(Token = "0x2000098")]
	public enum FocusMove
	{
		[Token(Token = "0x40003F8")]
		LR,
		[Token(Token = "0x40003F9")]
		UD,
		[Token(Token = "0x40003FA")]
		LRUD
	}

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIInputTree ParentUI;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1DA0", Offset = "0xCE1DA0")]
	public int _search_target;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1E34", Offset = "0xCE1E34")]
	public int _auto;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FocusCurMgr mFocusMgr;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FocusGrp Parent;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int Index;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int Priority;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FocusMove FocusType;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool IsLoop;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool IsDisable;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<FocusTarget> TargetList;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FocusTarget now_focus;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FocusTarget old_focus;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<FocusTarget> FocusUpdateCB;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action Push_B_CB;

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x272E964", Offset = "0x272E964", VA = "0x272E964")]
	public int GetUIPri()
	{
		return default(int);
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x272E9F0", Offset = "0x272E9F0", VA = "0x272E9F0")]
	private void SearchTarget()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x272EAA0", Offset = "0x272EAA0", VA = "0x272EAA0")]
	private void Auto()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x272EB68", Offset = "0x272EB68", VA = "0x272EB68")]
	private void AutoFocus(FocusTarget p)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x272F640", Offset = "0x272F640", VA = "0x272F640")]
	private FocusTarget GetTarget(FocusTarget p, int target_type)
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x272FAF4", Offset = "0x272FAF4", VA = "0x272FAF4")]
	public FocusTarget GetFirstTarget(bool is_sel = false)
	{
		return null;
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x272FFD8", Offset = "0x272FFD8", VA = "0x272FFD8")]
	public void InitCur()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x2730074", Offset = "0x2730074", VA = "0x2730074")]
	public bool IsNoFucus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x273014C", Offset = "0x273014C", VA = "0x273014C")]
	public void OpenWndFocus()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x273015C", Offset = "0x273015C", VA = "0x273015C")]
	public void FocusUpdate()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x2730160", Offset = "0x2730160", VA = "0x2730160")]
	public void SetNowFocus(FocusTarget p)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x273027C", Offset = "0x273027C", VA = "0x273027C")]
	private void FocusUD()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x2730280", Offset = "0x2730280", VA = "0x2730280")]
	private void FocusLR()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x2730284", Offset = "0x2730284", VA = "0x2730284")]
	private void FocusLRUD()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x2730288", Offset = "0x2730288", VA = "0x2730288")]
	public void ChkCur()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x273038C", Offset = "0x273038C", VA = "0x273038C")]
	private bool IsChangeFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x2730154", Offset = "0x2730154", VA = "0x2730154")]
	private void SearchFocus()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x273042C", Offset = "0x273042C", VA = "0x273042C")]
	public void PushCansel()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x2730440", Offset = "0x2730440", VA = "0x2730440")]
	public int GetNowFocusIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x27305BC", Offset = "0x27305BC", VA = "0x27305BC")]
	public FocusGrp()
	{
	}
}
[Token(Token = "0x2000099")]
public class FocusTarget : MonoBehaviour
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FocusGrp ParentGrp;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UI_OverBtn Target;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 CurSize;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int Index;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FocusTarget U;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FocusTarget D;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FocusTarget L;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FocusTarget R;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Func<bool> U_CB;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Func<bool> D_CB;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Func<bool> L_CB;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Func<bool> R_CB;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool IsFocus;

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x2730070", Offset = "0x2730070", VA = "0x2730070")]
	public void SetFocus(bool flg)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x273063C", Offset = "0x273063C", VA = "0x273063C")]
	public FocusTarget SetFocusUD(float y)
	{
		return null;
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x2730770", Offset = "0x2730770", VA = "0x2730770")]
	public FocusTarget SetFocusLR(float x)
	{
		return null;
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x27308A4", Offset = "0x27308A4", VA = "0x27308A4")]
	public FocusTarget FocusUD(float y)
	{
		return null;
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x27308A8", Offset = "0x27308A8", VA = "0x27308A8")]
	public FocusTarget FocusLR(float x)
	{
		return null;
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x27308AC", Offset = "0x27308AC", VA = "0x27308AC")]
	public FocusTarget FocusLRUD(float x, float y)
	{
		return null;
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x27308B0", Offset = "0x27308B0", VA = "0x27308B0")]
	public void TouchBtn(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x2730930", Offset = "0x2730930", VA = "0x2730930")]
	public FocusTarget()
	{
	}
}
[Token(Token = "0x200009A")]
public class PageLabel : MonoBehaviour
{
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIInputTree Parent;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UI_OverBtn NextBtn;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UI_OverBtn PrevBtn;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI Label;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI PageNoLabel;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int Text_Type;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int Text_Index;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int Next_Type;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int Next_Index;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NextLast_Type;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int NextLast_Index;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int PageIndex;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action LastPageCB;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<string> PageText;

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x2668904", Offset = "0x2668904", VA = "0x2668904")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x2666314", Offset = "0x2666314", VA = "0x2666314")]
	public void SetLabel(int type, int index, int next_btn_type, int next_btn_index, int next_btn_last_type, int next_btn_last_index)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x26663D0", Offset = "0x26663D0", VA = "0x26663D0")]
	public void ChangeLangage()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x2668AE8", Offset = "0x2668AE8", VA = "0x2668AE8")]
	private void SetTextLabel()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x2668DB8", Offset = "0x2668DB8", VA = "0x2668DB8")]
	private void OnNextBtn()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x2668EC8", Offset = "0x2668EC8", VA = "0x2668EC8")]
	private void OnPrevBtn()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x2668F3C", Offset = "0x2668F3C", VA = "0x2668F3C")]
	public PageLabel()
	{
	}
}
[Token(Token = "0x200009B")]
public class SceneText : MonoBehaviour
{
	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI t;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI unit_t;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SceneUnit.eUnit scene_unit;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UI_WndBaseData BG;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform target;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float OffsetY;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandGrab Grab;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image Mic;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image Spe;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject BlnTree;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image NameBG;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int BlnType;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int BlnIndex;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float BlnLength;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private cInter BlnScale;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TimelineData mTimelineData;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2 size;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float sc;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float len_scale;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 v;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float chk_t;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float cam_length;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 campos_pos;

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x26A097C", Offset = "0x26A097C", VA = "0x26A097C")]
	public void ResetBlnTree()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x26A0A5C", Offset = "0x26A0A5C", VA = "0x26A0A5C")]
	public bool IsShowBln()
	{
		return default(bool);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x26A0A7C", Offset = "0x26A0A7C", VA = "0x26A0A7C")]
	private void ShowBln()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x26A0BFC", Offset = "0x26A0BFC", VA = "0x26A0BFC")]
	public void HideBln()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x26A0C1C", Offset = "0x26A0C1C", VA = "0x26A0C1C")]
	public void UpdateUnitName()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x26A0CCC", Offset = "0x26A0CCC", VA = "0x26A0CCC")]
	public void SetItemText(int type, int index)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x26A0CD4", Offset = "0x26A0CD4", VA = "0x26A0CD4")]
	public void UpdateItem()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x26A0DB0", Offset = "0x26A0DB0", VA = "0x26A0DB0")]
	private void Disable()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x26A0DF8", Offset = "0x26A0DF8", VA = "0x26A0DF8")]
	public void SetBln(int type, int index, int length_type = 0)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x26A0E60", Offset = "0x26A0E60", VA = "0x26A0E60")]
	public void UpdateBln()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x26A1184", Offset = "0x26A1184", VA = "0x26A1184")]
	public void HideChk()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x26A12A8", Offset = "0x26A12A8", VA = "0x26A12A8")]
	public void SetMic(bool flg)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x26A1358", Offset = "0x26A1358", VA = "0x26A1358")]
	public void SetSpe(bool flg)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x26A0AB0", Offset = "0x26A0AB0", VA = "0x26A0AB0")]
	public void ShowBG()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x26A1408", Offset = "0x26A1408", VA = "0x26A1408")]
	public void HideBG()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x26A1554", Offset = "0x26A1554", VA = "0x26A1554")]
	public void SetScale(float scale)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x26A112C", Offset = "0x26A112C", VA = "0x26A112C")]
	private void UpdateLength(float t)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x26A1594", Offset = "0x26A1594", VA = "0x26A1594")]
	private void UpdateBlnScale()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x26A16A4", Offset = "0x26A16A4", VA = "0x26A16A4")]
	public void UpdateSceneText(Transform campos, bool is_y_only = false)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x26A1B40", Offset = "0x26A1B40", VA = "0x26A1B40")]
	public SceneText()
	{
	}
}
[Token(Token = "0x200009C")]
public class ServerInfo : MonoBehaviour
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI ServerLabel;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI PingLabel;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x2642E94", Offset = "0x2642E94", VA = "0x2642E94")]
	public ServerInfo()
	{
	}
}
[Token(Token = "0x200009D")]
public class SwitchCamMgr : MonoBehaviour
{
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Offset;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform RotX;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RotY;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform WatchT;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 rot;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private cInter OffsetRotY;

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x2647D64", Offset = "0x2647D64", VA = "0x2647D64")]
	public void InitRot()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x2647E10", Offset = "0x2647E10", VA = "0x2647E10")]
	public void AddRotY(float y)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x2647E3C", Offset = "0x2647E3C", VA = "0x2647E3C")]
	public void SwitchMove()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x2648140", Offset = "0x2648140", VA = "0x2648140")]
	public float GetX()
	{
		return default(float);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x2648184", Offset = "0x2648184", VA = "0x2648184")]
	public SwitchCamMgr()
	{
	}
}
[Token(Token = "0x200009E")]
public class ConfigWnd : UIInputTree
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UI_OverBtn SoundBtn;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn LangBtn;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn StyleBtn;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn MicBtn;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn LetterBtn;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public UI_OverBtn SwCamBtn;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject SoundTree;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject LangTree;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject StyleTree;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject MicTree;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject LetterTree;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject FirstLetterTree;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject SwCamTree;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public TextMeshProUGUI BGMLabel;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public UI_OverBtn BGM_Min_Btn;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public UI_OverBtn BGM_Norm_Btn;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public UI_OverBtn BGM_Max_Btn;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public TextMeshProUGUI VoLabel;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public UI_OverBtn Vo_Min_Btn;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public UI_OverBtn Vo_Norm_Btn;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public UI_OverBtn Vo_Max_Btn;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public TextMeshProUGUI SELabel;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public UI_OverBtn SE_Min_Btn;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public UI_OverBtn SE_Norm_Btn;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public UI_OverBtn SE_Max_Btn;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public TextMeshProUGUI ChatLabel;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public UI_OverBtn Chat_Min_Btn;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public UI_OverBtn Chat_Norm_Btn;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public UI_OverBtn Chat_Max_Btn;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public UI_OverBtn MicRecreateBtn;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public TextMeshProUGUI StyleLabel;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public UI_OverBtn Style_Up_Btn;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public TextMeshProUGUI MicText;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Text MicDeviceText;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public UI_OverBtn MicUpBtn;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public UI_OverBtn MicBtmBtn;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public TextMeshProUGUI SwCamLabel;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public TextMeshProUGUI SwCamDetailLabel;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public UI_OverBtn SwCam_Min_Btn;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public UI_OverBtn SwCam_Norm_Btn;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public UI_OverBtn SwCam_Max_Btn;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public UI_OverBtn FirstLetterBtn;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public UI_OverBtn[] LetterBtnList;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public UI_OverBtn TrueLetterBtn;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public LaterWnd mLetterWnd;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public TextMeshProUGUI LangTextLabel;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public UI_OverBtn Lang_Jp_Btn;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public UI_OverBtn Lang_En_Btn;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public UI_OverBtn Lang_Kan_Btn;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public UI_OverBtn Lang_Han_Btn;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public TextMeshProUGUI LangVoLabel;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public UI_OverBtn LangVo_Jp_Btn;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public UI_OverBtn LangVo_En_Btn;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public UI_OverBtn LangVo_Chi_Btn;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public TextMeshProUGUI LangBlnLabel;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public UI_OverBtn LangBln_On_Btn;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public UI_OverBtn LangBln_Off_Btn;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public FocusTarget LangBtm0;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public FocusTarget LangBtm1;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public FocusTarget LangUp0;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public FocusTarget LangUp1;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public FocusGrp ConfigFocus;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public FocusGrp ConfigWndFocus;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public FocusGrp LangWndFocus;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public FocusGrp StyleTreeFocus;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public FocusGrp MicTreeFocus;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public FocusGrp MailTreeFocus;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public FocusGrp FirstMailTreeFocus;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public FocusGrp MailDetailFocus;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public FocusGrp SwCamFocus;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public FocusTarget MicBtnFT;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public FocusTarget MailBtnFT;

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x26BED6C", Offset = "0x26BED6C", VA = "0x26BED6C", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x26C03F8", Offset = "0x26C03F8", VA = "0x26C03F8")]
	private void OnSoundBtn()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x26C04B0", Offset = "0x26C04B0", VA = "0x26C04B0")]
	private void OnLangBtn()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x26C0568", Offset = "0x26C0568", VA = "0x26C0568")]
	private void OnStyleBtn()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x26C0618", Offset = "0x26C0618", VA = "0x26C0618")]
	private void OnMicBtn()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x26C0734", Offset = "0x26C0734", VA = "0x26C0734")]
	private void OnSwCamBtn()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x26C0738", Offset = "0x26C0738", VA = "0x26C0738")]
	private void OnLetterBtn()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x26C0868", Offset = "0x26C0868", VA = "0x26C0868")]
	private void OnCloseBtn()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x26C08D8", Offset = "0x26C08D8", VA = "0x26C08D8", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x26C0AC8", Offset = "0x26C0AC8", VA = "0x26C0AC8")]
	public void HideLetterWnd()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x26C0B68", Offset = "0x26C0B68", VA = "0x26C0B68")]
	public void FirstFocus(float cur_move_time = 0.2f)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x26C0974", Offset = "0x26C0974", VA = "0x26C0974")]
	public void ChkMailBtn()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x26C0BD8", Offset = "0x26C0BD8", VA = "0x26C0BD8")]
	private bool IsShowMailBtn()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x26C0C58", Offset = "0x26C0C58", VA = "0x26C0C58", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x26C1634", Offset = "0x26C1634", VA = "0x26C1634")]
	private void HideTree()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x26C0518", Offset = "0x26C0518", VA = "0x26C0518")]
	private void ShowLangPage()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x26C0460", Offset = "0x26C0460", VA = "0x26C0460")]
	private void ShowSoundPage()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x26C05D0", Offset = "0x26C05D0", VA = "0x26C05D0")]
	private void ShowStylePage()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x26C06DC", Offset = "0x26C06DC", VA = "0x26C06DC")]
	private void ShowMicPage()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x26C1D98", Offset = "0x26C1D98", VA = "0x26C1D98")]
	private void ShowSwCamPage()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x26C07B4", Offset = "0x26C07B4", VA = "0x26C07B4")]
	private void ShowLetterPage()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x26C15B8", Offset = "0x26C15B8", VA = "0x26C15B8")]
	private void ShowTrueEndLetter()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x26C19B0", Offset = "0x26C19B0", VA = "0x26C19B0")]
	private void SaveData_to_SoundUI()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x26C185C", Offset = "0x26C185C", VA = "0x26C185C")]
	private void SaveData_to_LangUI()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x26C1EFC", Offset = "0x26C1EFC", VA = "0x26C1EFC")]
	private void HideLangTextSel()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x26C1F68", Offset = "0x26C1F68", VA = "0x26C1F68")]
	private void HideLangVoSel()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x26C1FC0", Offset = "0x26C1FC0", VA = "0x26C1FC0")]
	private void HideLangBlnSel()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x26C2004", Offset = "0x26C2004", VA = "0x26C2004")]
	private void SaveData_to_SwCamUI()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x26C1B30", Offset = "0x26C1B30", VA = "0x26C1B30")]
	private void Save_to_StyleUI()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x26C1B34", Offset = "0x26C1B34", VA = "0x26C1B34")]
	private void DeviceUpdate()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x26C2100", Offset = "0x26C2100", VA = "0x26C2100")]
	private void SetDeviceName(string str)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x26C069C", Offset = "0x26C069C", VA = "0x26C069C")]
	private bool IsNoMicDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x26C1C30", Offset = "0x26C1C30", VA = "0x26C1C30")]
	private void ShowSelBtn()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x26C2314", Offset = "0x26C2314", VA = "0x26C2314")]
	private void ChangeDevice()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x26C1D9C", Offset = "0x26C1D9C", VA = "0x26C1D9C")]
	private void HideBGMSel()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x26C2508", Offset = "0x26C2508", VA = "0x26C2508")]
	private void OnBGMMin()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x26C2580", Offset = "0x26C2580", VA = "0x26C2580")]
	private void OnBGMNorm()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x26C25F8", Offset = "0x26C25F8", VA = "0x26C25F8")]
	private void OnBGMMax()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x26C1DF4", Offset = "0x26C1DF4", VA = "0x26C1DF4")]
	private void HideVoSel()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x26C2670", Offset = "0x26C2670", VA = "0x26C2670")]
	private void OnVoMin()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x26C26E8", Offset = "0x26C26E8", VA = "0x26C26E8")]
	private void OnVoNorm()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x26C2760", Offset = "0x26C2760", VA = "0x26C2760")]
	private void OnVoMax()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x26C1E4C", Offset = "0x26C1E4C", VA = "0x26C1E4C")]
	private void HideSESel()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x26C27D8", Offset = "0x26C27D8", VA = "0x26C27D8")]
	private void OnSEMin()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x26C2850", Offset = "0x26C2850", VA = "0x26C2850")]
	private void OnSENorm()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x26C28C8", Offset = "0x26C28C8", VA = "0x26C28C8")]
	private void OnSEMax()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x26C1EA4", Offset = "0x26C1EA4", VA = "0x26C1EA4")]
	private void HideChatSel()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x26C2940", Offset = "0x26C2940", VA = "0x26C2940")]
	private void OnChatMin()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x26C29B8", Offset = "0x26C29B8", VA = "0x26C29B8")]
	private void OnChatNorm()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x26C2A30", Offset = "0x26C2A30", VA = "0x26C2A30")]
	private void OnChatMax()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x26C20A8", Offset = "0x26C20A8", VA = "0x26C20A8")]
	private void HideSwCamSel()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x26C2AA8", Offset = "0x26C2AA8", VA = "0x26C2AA8")]
	private void OnSwCamMin()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x26C2B20", Offset = "0x26C2B20", VA = "0x26C2B20")]
	private void OnSwCamNorm()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x26C2B98", Offset = "0x26C2B98", VA = "0x26C2B98")]
	private void OnSwCamMax()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x26C2C10", Offset = "0x26C2C10", VA = "0x26C2C10")]
	private void OnMicCreate()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x26C2C78", Offset = "0x26C2C78", VA = "0x26C2C78")]
	private void OnStyleUp()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x26C2CF0", Offset = "0x26C2CF0", VA = "0x26C2CF0")]
	private void OnMicUp()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x26C2D70", Offset = "0x26C2D70", VA = "0x26C2D70")]
	private void OnMicBtm()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x26C2DF0", Offset = "0x26C2DF0", VA = "0x26C2DF0")]
	private void OnSelLetter(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x26C2E9C", Offset = "0x26C2E9C", VA = "0x26C2E9C")]
	private void OnFirstLetter()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x26C2F50", Offset = "0x26C2F50", VA = "0x26C2F50")]
	private void OnTrueLetter()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x26C2FE4", Offset = "0x26C2FE4", VA = "0x26C2FE4")]
	public void CloseMailDetailWnd()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x26C2FE8", Offset = "0x26C2FE8", VA = "0x26C2FE8")]
	private void OnLangJpBtn()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x26C3060", Offset = "0x26C3060", VA = "0x26C3060")]
	private void OnLangEnBtn()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x26C30D8", Offset = "0x26C30D8", VA = "0x26C30D8")]
	private void OnLangKanBtn()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x26C3150", Offset = "0x26C3150", VA = "0x26C3150")]
	private void OnLangHanBtn()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x26C31C8", Offset = "0x26C31C8", VA = "0x26C31C8")]
	private void OnLangVoJpBtn()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x26C3240", Offset = "0x26C3240", VA = "0x26C3240")]
	private void OnLangVoEnBtn()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x26C32B8", Offset = "0x26C32B8", VA = "0x26C32B8")]
	private void OnLangVoChiBtn()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x26C3330", Offset = "0x26C3330", VA = "0x26C3330")]
	private void OnLangBlnOnBtn()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x26C33A8", Offset = "0x26C33A8", VA = "0x26C33A8")]
	private void OnLangBlnOffBtn()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x26C3420", Offset = "0x26C3420", VA = "0x26C3420")]
	public ConfigWnd()
	{
	}
}
[Token(Token = "0x200009F")]
public class DebugWnd : UIInputTree
{
	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF178", Offset = "0xCDF178")]
	private sealed class <ReCreateMic>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000629")]
			[Address(RVA = "0x271F614", Offset = "0x271F614", VA = "0x271F614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062B")]
			[Address(RVA = "0x271F65C", Offset = "0x271F65C", VA = "0x271F65C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x271F4D4", Offset = "0x271F4D4", VA = "0x271F4D4")]
		[DebuggerHidden]
		public <ReCreateMic>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x271F500", Offset = "0x271F500", VA = "0x271F500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x271F504", Offset = "0x271F504", VA = "0x271F504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x271F61C", Offset = "0x271F61C", VA = "0x271F61C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject RoomTree;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn DelBtn;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn AddBtn_;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TextMeshProUGUI CntLabel;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject GameTree;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public UI_OverBtn RetBtn;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public TextMeshProUGUI TimeLineLabel;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public UI_OverBtn TimeBar;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Image OverBar;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject SeekTree;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public TextMeshProUGUI SeekText;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public UI_OverBtn DoctorBtn;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public UI_OverBtn PreBtn;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public UI_OverBtn ResBtn;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public UI_OverBtn AssiBtn;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public UI_OverBtn SunBtn;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public UI_OverBtn Speedx0_Btn;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public UI_OverBtn Speedx50_Btn;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public UI_OverBtn Speedx100_Btn;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public UI_OverBtn LightBtn;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public UI_OverBtn RotCamBtn;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public UI_OverBtn TimeBtn;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public UI_OverBtn Past0Btn;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public UI_OverBtn Past1Btn;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public UI_OverBtn Past2Btn;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public UI_OverBtn Past3Btn;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public UI_OverBtn Past4Btn;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Vector3 v;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float time_per;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private float t;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private float wait_sec;

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x26C53B0", Offset = "0x26C53B0", VA = "0x26C53B0", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x26C5EC8", Offset = "0x26C5EC8", VA = "0x26C5EC8")]
	private void OnCloseBtn()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x26C5F38", Offset = "0x26C5F38", VA = "0x26C5F38")]
	private void OnHoverTimeBar()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x26C6070", Offset = "0x26C6070", VA = "0x26C6070")]
	private void ShowBarTime(bool flg)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x26C614C", Offset = "0x26C614C", VA = "0x26C614C")]
	private void OnTimeBar()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x26C61DC", Offset = "0x26C61DC", VA = "0x26C61DC")]
	private void OnSpeed0()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x26C623C", Offset = "0x26C623C", VA = "0x26C623C")]
	private void OnSpeed50()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x26C629C", Offset = "0x26C629C", VA = "0x26C629C")]
	private void OnSpeed100()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x26C62FC", Offset = "0x26C62FC", VA = "0x26C62FC")]
	private void OnRotCam()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x26C6328", Offset = "0x26C6328", VA = "0x26C6328")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC4C4", Offset = "0xCEC4C4")]
	private IEnumerator ReCreateMic()
	{
		return null;
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x26C6384", Offset = "0x26C6384", VA = "0x26C6384")]
	private void OnTimeBtn()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x26C6388", Offset = "0x26C6388", VA = "0x26C6388")]
	private void OnPast0()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x26C638C", Offset = "0x26C638C", VA = "0x26C638C")]
	private void OnPast1()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x26C6390", Offset = "0x26C6390", VA = "0x26C6390")]
	private void OnPast2()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x26C6394", Offset = "0x26C6394", VA = "0x26C6394")]
	private void OnPast3()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x26C6398", Offset = "0x26C6398", VA = "0x26C6398")]
	private void OnPast4()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x26C639C", Offset = "0x26C639C", VA = "0x26C639C")]
	private void OnPlayerDel()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x26C6450", Offset = "0x26C6450", VA = "0x26C6450")]
	private void OnPlayerAdd()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x26C6504", Offset = "0x26C6504", VA = "0x26C6504")]
	private void OnCam(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x26C65D0", Offset = "0x26C65D0", VA = "0x26C65D0")]
	private void DisableCamBtn()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x26C6650", Offset = "0x26C6650", VA = "0x26C6650")]
	private void OnLight()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x26C67F0", Offset = "0x26C67F0", VA = "0x26C67F0", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x26C69C4", Offset = "0x26C69C4", VA = "0x26C69C4", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x26C6AE4", Offset = "0x26C6AE4", VA = "0x26C6AE4")]
	public DebugWnd()
	{
	}
}
[Token(Token = "0x20000A1")]
public class DeviceWnd : UIInputTree
{
	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshProUGUI InfoText;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Text DeviceText;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn UpBtn;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn BtmBtn;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn OKBtn;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public SetupWnd mSetupWnd;

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x26C6E48", Offset = "0x26C6E48", VA = "0x26C6E48", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x26C7054", Offset = "0x26C7054", VA = "0x26C7054", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x26C70E0", Offset = "0x26C70E0", VA = "0x26C70E0", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x26C71A8", Offset = "0x26C71A8", VA = "0x26C71A8", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x26C7230", Offset = "0x26C7230", VA = "0x26C7230")]
	private void DeviceUpdate()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x26C7408", Offset = "0x26C7408", VA = "0x26C7408")]
	private void SetDeviceName(string str)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x26C72B4", Offset = "0x26C72B4", VA = "0x26C72B4")]
	private void ShowSelBtn()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x26C761C", Offset = "0x26C761C", VA = "0x26C761C")]
	private void ChangeDevice()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x26C7828", Offset = "0x26C7828", VA = "0x26C7828")]
	private void OnUpBtn()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x26C78A8", Offset = "0x26C78A8", VA = "0x26C78A8")]
	private void OnBtmBtn()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x26C7928", Offset = "0x26C7928", VA = "0x26C7928")]
	private void OnOKBtn()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x26C79A0", Offset = "0x26C79A0", VA = "0x26C79A0")]
	public DeviceWnd()
	{
	}
}
[Token(Token = "0x20000A2")]
public class DiscussionWnd : UIInputTree
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public DiveScene mDiveScene;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform TimeTree;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshProUGUI DiscussionLabel;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TextMeshProUGUI TimeLabel;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TextMeshProUGUI DiveLabel;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TextMeshProUGUI CountLabel;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TextMeshProUGUI VoteLabel;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject MsgTree;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public TextMeshProUGUI MsgLabel;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject PreMsgTree;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public TextMeshProUGUI PreMsgLabel;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject MasterTree;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public UI_OverBtn DiveBtn;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public TextMeshProUGUI DiveDetail;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public UI_OverBtn VoteBtn;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public TextMeshProUGUI VoteDetail;

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x26C79A8", Offset = "0x26C79A8", VA = "0x26C79A8", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x26C7B84", Offset = "0x26C7B84", VA = "0x26C7B84")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x26C7CD8", Offset = "0x26C7CD8", VA = "0x26C7CD8")]
	private void OnDiveYNWnd()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x26C7E30", Offset = "0x26C7E30", VA = "0x26C7E30")]
	private void DiveLangCB(YNDlg wnd)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x26C7F18", Offset = "0x26C7F18", VA = "0x26C7F18")]
	private void OnVoteYNWnd()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x26C801C", Offset = "0x26C801C", VA = "0x26C801C")]
	private void OnDive()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x26C8100", Offset = "0x26C8100", VA = "0x26C8100")]
	private void OnVote()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x26C81E4", Offset = "0x26C81E4", VA = "0x26C81E4", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x26C85C8", Offset = "0x26C85C8", VA = "0x26C85C8", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x26C83D4", Offset = "0x26C83D4", VA = "0x26C83D4")]
	public void SetPlayerDir()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x26C87F4", Offset = "0x26C87F4", VA = "0x26C87F4")]
	public void TimeCountStart()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x26C8964", Offset = "0x26C8964", VA = "0x26C8964")]
	private void UpdateTimeLabel()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x26C8A38", Offset = "0x26C8A38", VA = "0x26C8A38")]
	private void ChkCountDown()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x26C8AD0", Offset = "0x26C8AD0", VA = "0x26C8AD0")]
	private void TimeOut()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x26C8B98", Offset = "0x26C8B98", VA = "0x26C8B98")]
	public DiscussionWnd()
	{
	}
}
[Token(Token = "0x20000A3")]
public class EpilogueWnd : UIInputTree
{
	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF188", Offset = "0xCDF188")]
	private sealed class <_InfoClose>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EpilogueWnd <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000661")]
			[Address(RVA = "0x2735998", Offset = "0x2735998", VA = "0x2735998", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000663")]
			[Address(RVA = "0x27359E0", Offset = "0x27359E0", VA = "0x27359E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x2735854", Offset = "0x2735854", VA = "0x2735854")]
		[DebuggerHidden]
		public <_InfoClose>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x2735880", Offset = "0x2735880", VA = "0x2735880", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x2735884", Offset = "0x2735884", VA = "0x2735884", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x27359A0", Offset = "0x27359A0", VA = "0x27359A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1EC8", Offset = "0xCE1EC8")]
	public int _setplayerdir;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public DiveScene mDiveScene;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform InfoTree;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshProUGUI InfoText;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Image ED_Img;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public PageLabel mPageLabel;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int LabelIndex;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int LabelMax;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool is_end;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public cInter InfoScale;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private SceneUnit.eUnit SetImageUnit;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool last;

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x272307C", Offset = "0x272307C", VA = "0x272307C")]
	private void OpenInfo(float t)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x27232B0", Offset = "0x27232B0", VA = "0x27232B0")]
	private void CloseInfo()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x2723248", Offset = "0x2723248", VA = "0x2723248")]
	private void UpdateInfoScale()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x27232F0", Offset = "0x27232F0", VA = "0x27232F0", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x2723448", Offset = "0x2723448", VA = "0x2723448")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x272359C", Offset = "0x272359C", VA = "0x272359C")]
	private void ShowED()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x27237EC", Offset = "0x27237EC", VA = "0x27237EC")]
	private void HideED()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x272391C", Offset = "0x272391C", VA = "0x272391C", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x2723B1C", Offset = "0x2723B1C", VA = "0x2723B1C", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x2723DD0", Offset = "0x2723DD0", VA = "0x2723DD0")]
	private void LastPageCB()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x2723EBC", Offset = "0x2723EBC", VA = "0x2723EBC")]
	private void OnInfoClose()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x27241B4", Offset = "0x27241B4", VA = "0x27241B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC574", Offset = "0xCEC574")]
	private IEnumerator _InfoClose()
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x2724220", Offset = "0x2724220", VA = "0x2724220")]
	private void InqLabelIndex()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x2724300", Offset = "0x2724300", VA = "0x2724300")]
	private void EndEpiloge()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x272444C", Offset = "0x272444C", VA = "0x272444C", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x27230CC", Offset = "0x27230CC", VA = "0x27230CC")]
	public void SetPlayerDir()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x27244E8", Offset = "0x27244E8", VA = "0x27244E8")]
	private void DestroyYesCB()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x27244EC", Offset = "0x27244EC", VA = "0x27244EC")]
	private void DestroyNoCB()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x27244F0", Offset = "0x27244F0", VA = "0x27244F0")]
	private void DestroyClose(YNDlg yn)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x2724590", Offset = "0x2724590", VA = "0x2724590")]
	private void ExitYesCB()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x27245EC", Offset = "0x27245EC", VA = "0x27245EC")]
	private void ExitNoCB()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x27245F0", Offset = "0x27245F0", VA = "0x27245F0")]
	private void ExitClose(YNDlg yn)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x272468C", Offset = "0x272468C", VA = "0x272468C")]
	public EpilogueWnd()
	{
	}
}
[Token(Token = "0x20000A5")]
public class GameClearWnd : UIInputTree
{
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public DiveScene mDiveScene;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn DiveBtn;

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x27311E8", Offset = "0x27311E8", VA = "0x27311E8", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x27312E4", Offset = "0x27312E4", VA = "0x27312E4", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x273136C", Offset = "0x273136C", VA = "0x273136C", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x27313DC", Offset = "0x27313DC", VA = "0x27313DC")]
	private void OnDive()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x273144C", Offset = "0x273144C", VA = "0x273144C")]
	public GameClearWnd()
	{
	}
}
[Token(Token = "0x20000A6")]
public class GameInfoWnd : UIInputTree
{
	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UI_OverBtn PicBtn;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public List<PicData> PicDataList;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn InfoBtn;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn PrevBtn;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn NextBtn;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TextMeshProUGUI InfoLabel;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public int Page;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public TextMeshProUGUI PageLabel;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public TextMeshProUGUI PicLabel;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject PicTree;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject InfoTree;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform CurTree;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public TextMeshProUGUI IconLabel;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public cInter CurPosX;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public FocusGrp BtnFocusGrp;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public FocusGrp PicFocusGrp;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public FocusGrp InfoFocusGrp;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool is_sharebtn;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x2732144", Offset = "0x2732144", VA = "0x2732144")]
	private void UpdateCurPos()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x27321C8", Offset = "0x27321C8", VA = "0x27321C8")]
	public void SetCurPos(int index, float t)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x2732304", Offset = "0x2732304", VA = "0x2732304", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x2732870", Offset = "0x2732870", VA = "0x2732870", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x2732A58", Offset = "0x2732A58", VA = "0x2732A58")]
	public void InitPicData()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x2732B68", Offset = "0x2732B68", VA = "0x2732B68")]
	public void SetPicData(float pic_time)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x2732C60", Offset = "0x2732C60", VA = "0x2732C60")]
	private PicData GetMinPic()
	{
		return null;
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x2732ED0", Offset = "0x2732ED0", VA = "0x2732ED0")]
	public void ShowShareBtn(bool flg)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x2733018", Offset = "0x2733018", VA = "0x2733018", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x2733234", Offset = "0x2733234", VA = "0x2733234", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x27332D0", Offset = "0x27332D0", VA = "0x27332D0")]
	public void ForcusReset()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x27332E8", Offset = "0x27332E8", VA = "0x27332E8")]
	public void FirstFocus(float cur_move_time = 0.2f)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x27331CC", Offset = "0x27331CC", VA = "0x27331CC")]
	private void OnInfoBtn()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x2733358", Offset = "0x2733358", VA = "0x2733358")]
	private void ShowInfoPage()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x2733164", Offset = "0x2733164", VA = "0x2733164")]
	private void OnPicBtn()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x273366C", Offset = "0x273366C", VA = "0x273366C")]
	private void ShowPicPage()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x2733790", Offset = "0x2733790", VA = "0x2733790")]
	private bool ToInfoFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x2733800", Offset = "0x2733800", VA = "0x2733800")]
	private bool ToPicFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x2733884", Offset = "0x2733884", VA = "0x2733884")]
	private void OnPrevBtn()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x2733898", Offset = "0x2733898", VA = "0x2733898")]
	private void OnNextBtn()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x27333D0", Offset = "0x27333D0", VA = "0x27333D0")]
	private void UpdateInfoText()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x2733954", Offset = "0x2733954", VA = "0x2733954")]
	private void OnCloseBtn()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x2733960", Offset = "0x2733960", VA = "0x2733960")]
	private void OnSnapBtn(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x2733B08", Offset = "0x2733B08", VA = "0x2733B08")]
	private void OnSnapShareBtn(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x2733CD0", Offset = "0x2733CD0", VA = "0x2733CD0")]
	public GameInfoWnd()
	{
	}
}
[Token(Token = "0x20000A7")]
public class KenriWnd : UIInputTree
{
	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TitleWnd mTitleWnd;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn PrevBtn;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn NextBtn;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TextMeshProUGUI InfoText;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TextMeshProUGUI PageText;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject mScroll;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UI_OverBtn ScrollRect;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public TextMeshProUGUI ScrollText;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Image Bar;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Image BarBG;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public int PageIndex;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector2 bar_size;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float max_pos_y;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool is_hover_r;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Vector3 start_pos_r;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 now_pos_r;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float sub_y_r;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Vector3 start_text_pos_r;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private bool is_hover_l;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Vector3 start_pos_l;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private Vector3 now_pos_l;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float sub_y_l;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private Vector3 start_text_pos_l;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float bar_pos_y;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float move_per;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float key_v;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float key_x;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x26F4600", Offset = "0x26F4600", VA = "0x26F4600", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x26F484C", Offset = "0x26F484C", VA = "0x26F484C")]
	private void PushB_CB()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x26F4850", Offset = "0x26F4850", VA = "0x26F4850")]
	private void OnCloseBtn()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x26F48C0", Offset = "0x26F48C0", VA = "0x26F48C0")]
	private void OnPrevBtn()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x26F4BE0", Offset = "0x26F4BE0", VA = "0x26F4BE0")]
	private void OnNextBtn()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x26F4BFC", Offset = "0x26F4BFC", VA = "0x26F4BFC", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x26F4C78", Offset = "0x26F4C78", VA = "0x26F4C78", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x26F4CE0", Offset = "0x26F4CE0", VA = "0x26F4CE0", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x26F48D4", Offset = "0x26F48D4", VA = "0x26F48D4")]
	private void SetPageText()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x26F4D08", Offset = "0x26F4D08", VA = "0x26F4D08")]
	private void SetMovePer()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x26F4DD0", Offset = "0x26F4DD0", VA = "0x26F4DD0", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x26F4DD8", Offset = "0x26F4DD8", VA = "0x26F4DD8")]
	private void OnHoverScroll()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x26F526C", Offset = "0x26F526C", VA = "0x26F526C")]
	public KenriWnd()
	{
	}
}
[Token(Token = "0x20000A8")]
public class LangWnd : UIInputTree
{
	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public SetupWnd mSetupWnd;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshProUGUI LangTextLabel;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn Lang_Jp_Btn;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn Lang_En_Btn;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn Lang_Kan_Btn;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public UI_OverBtn Lang_Han_Btn;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TextMeshProUGUI LangVoLabel;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UI_OverBtn LangVo_Jp_Btn;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public UI_OverBtn LangVo_En_Btn;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public UI_OverBtn LangVo_Chi_Btn;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public TextMeshProUGUI LangBlnLabel;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public UI_OverBtn LangBln_On_Btn;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public UI_OverBtn LangBln_Off_Btn;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public UI_OverBtn OkBtn;

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x26F5274", Offset = "0x26F5274", VA = "0x26F5274", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x26F5A64", Offset = "0x26F5A64", VA = "0x26F5A64", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x26F5BF0", Offset = "0x26F5BF0", VA = "0x26F5BF0", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x26F609C", Offset = "0x26F609C", VA = "0x26F609C", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x26F5A9C", Offset = "0x26F5A9C", VA = "0x26F5A9C")]
	private void SaveData_to_LangUI()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x26F60D0", Offset = "0x26F60D0", VA = "0x26F60D0")]
	private void HideLangTextSel()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x26F613C", Offset = "0x26F613C", VA = "0x26F613C")]
	private void HideLangVoSel()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x26F6194", Offset = "0x26F6194", VA = "0x26F6194")]
	private void HideLangBlnSel()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x26F61D8", Offset = "0x26F61D8", VA = "0x26F61D8")]
	private void OnLangJpBtn()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x26F6250", Offset = "0x26F6250", VA = "0x26F6250")]
	private void OnLangEnBtn()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x26F62C8", Offset = "0x26F62C8", VA = "0x26F62C8")]
	private void OnLangKanBtn()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x26F6340", Offset = "0x26F6340", VA = "0x26F6340")]
	private void OnLangHanBtn()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x26F63B8", Offset = "0x26F63B8", VA = "0x26F63B8")]
	private void OnLangVoJpBtn()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x26F6430", Offset = "0x26F6430", VA = "0x26F6430")]
	private void OnLangVoEnBtn()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x26F64A8", Offset = "0x26F64A8", VA = "0x26F64A8")]
	private void OnLangVoChiBtn()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x26F6520", Offset = "0x26F6520", VA = "0x26F6520")]
	private void OnLangBlnOnBtn()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x26F6598", Offset = "0x26F6598", VA = "0x26F6598")]
	private void OnLangBlnOffBtn()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x26F6610", Offset = "0x26F6610", VA = "0x26F6610")]
	private void OnOKBtn()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x26F661C", Offset = "0x26F661C", VA = "0x26F661C")]
	public LangWnd()
	{
	}
}
[Token(Token = "0x20000A9")]
public class LaterWnd : UIInputTree
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public ConfigWnd mParent;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int TitleIndex;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshProUGUI TitleLabel;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int LabelIndex;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TextMeshProUGUI Label;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x26F66FC", Offset = "0x26F66FC", VA = "0x26F66FC", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x26F6804", Offset = "0x26F6804", VA = "0x26F6804", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x26F6890", Offset = "0x26F6890", VA = "0x26F6890")]
	private void OnCloseBtn()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x26F6900", Offset = "0x26F6900", VA = "0x26F6900", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x26F6934", Offset = "0x26F6934", VA = "0x26F6934", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x26F6A14", Offset = "0x26F6A14", VA = "0x26F6A14")]
	public LaterWnd()
	{
	}
}
[Token(Token = "0x20000AA")]
public class LoadingWnd : UIInputTree
{
	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject MattingTree;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private cInter MattingWndScale;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshProUGUI MattingLabel;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Image LoadingTex0;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Image LoadingTex1;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Image LoadingTex2;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private cListInter LoadingRot;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private cListInter LoadingSubRot;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float ShowTime;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Action TimeoutCB;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Vector3 v;

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x26F7A9C", Offset = "0x26F7A9C", VA = "0x26F7A9C", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x26F7C50", Offset = "0x26F7C50", VA = "0x26F7C50")]
	public void OpenWnd(Action timeoutcb)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x26F7C88", Offset = "0x26F7C88", VA = "0x26F7C88")]
	public void RemoveTimeout()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x26F7C90", Offset = "0x26F7C90", VA = "0x26F7C90", Slot = "11")]
	public override void CloseWnd()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x26F7C9C", Offset = "0x26F7C9C", VA = "0x26F7C9C", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x26F7D14", Offset = "0x26F7D14", VA = "0x26F7D14", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x26F7ECC", Offset = "0x26F7ECC", VA = "0x26F7ECC")]
	private void OnOpenMattingWnd()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x26F7EAC", Offset = "0x26F7EAC", VA = "0x26F7EAC")]
	private void OnCloseMattingWnd()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x26F7ED0", Offset = "0x26F7ED0", VA = "0x26F7ED0")]
	private void UpdateLoading()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x26F7BD4", Offset = "0x26F7BD4", VA = "0x26F7BD4")]
	private void UpdateMattingScale()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x26F7FBC", Offset = "0x26F7FBC", VA = "0x26F7FBC")]
	public LoadingWnd()
	{
	}
}
[Token(Token = "0x20000AB")]
public class LobbyWnd : UIInputTree
{
	[Token(Token = "0x20000AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF198", Offset = "0xCDF198")]
	private sealed class <FadeToRandRoom>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyWnd <>4__this;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x265BB58", Offset = "0x265BB58", VA = "0x265BB58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x265BBA0", Offset = "0x265BBA0", VA = "0x265BBA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x265B9D4", Offset = "0x265B9D4", VA = "0x265B9D4")]
		[DebuggerHidden]
		public <FadeToRandRoom>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x265BA00", Offset = "0x265BA00", VA = "0x265BA00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x265BA04", Offset = "0x265BA04", VA = "0x265BA04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x265BB60", Offset = "0x265BB60", VA = "0x265BB60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF1A8", Offset = "0xCDF1A8")]
	private sealed class <FadeToCreateRoom>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyWnd <>4__this;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x265B984", Offset = "0x265B984", VA = "0x265B984", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E2")]
			[Address(RVA = "0x265B9CC", Offset = "0x265B9CC", VA = "0x265B9CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x265B88C", Offset = "0x265B88C", VA = "0x265B88C")]
		[DebuggerHidden]
		public <FadeToCreateRoom>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x265B8B8", Offset = "0x265B8B8", VA = "0x265B8B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x265B8BC", Offset = "0x265B8BC", VA = "0x265B8BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x265B98C", Offset = "0x265B98C", VA = "0x265B98C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF1B8", Offset = "0xCDF1B8")]
	private sealed class <FadeToCreateKeyRoom>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyWnd <>4__this;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string key;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E6")]
			[Address(RVA = "0x265B83C", Offset = "0x265B83C", VA = "0x265B83C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E8")]
			[Address(RVA = "0x265B884", Offset = "0x265B884", VA = "0x265B884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x265B6E0", Offset = "0x265B6E0", VA = "0x265B6E0")]
		[DebuggerHidden]
		public <FadeToCreateKeyRoom>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x265B70C", Offset = "0x265B70C", VA = "0x265B70C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x265B710", Offset = "0x265B710", VA = "0x265B710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x265B844", Offset = "0x265B844", VA = "0x265B844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF1C8", Offset = "0xCDF1C8")]
	private sealed class <FadeToRoom>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyWnd <>4__this;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string room_name;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006EC")]
			[Address(RVA = "0x265BCB4", Offset = "0x265BCB4", VA = "0x265BCB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0x265BCFC", Offset = "0x265BCFC", VA = "0x265BCFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x265BBA8", Offset = "0x265BBA8", VA = "0x265BBA8")]
		[DebuggerHidden]
		public <FadeToRoom>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x265BBD4", Offset = "0x265BBD4", VA = "0x265BBD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x265BBD8", Offset = "0x265BBD8", VA = "0x265BBD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x265BCBC", Offset = "0x265BCBC", VA = "0x265BCBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF1D8", Offset = "0xCDF1D8")]
	private sealed class <_ToTitle>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0x265BE30", Offset = "0x265BE30", VA = "0x265BE30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0x265BE78", Offset = "0x265BE78", VA = "0x265BE78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x265BD04", Offset = "0x265BD04", VA = "0x265BD04")]
		[DebuggerHidden]
		public <_ToTitle>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x265BD30", Offset = "0x265BD30", VA = "0x265BD30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x265BD34", Offset = "0x265BD34", VA = "0x265BD34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x265BE38", Offset = "0x265BE38", VA = "0x265BE38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public RoomScene mRoomScene;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn InRoomBtn;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshProUGUI InRoom_DetailLabel;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn NoBtn;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TextMeshProUGUI No_DetailLabel;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public UI_OverBtn CreateBtn;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TextMeshProUGUI Create_DetailLabel;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UI_OverBtn RetBtn;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public UI_OverBtn MatchLangBtn;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public UI_OverBtn UIBlock;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject MattingTree;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private cInter MattingWndScale;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public TextMeshProUGUI MattingLabel;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Image LoadingTex0;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Image LoadingTex1;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Image LoadingTex2;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private cListInter LoadingRot;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private cListInter LoadingSubRot;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public RoomCreateWnd mRoomCreateWnd;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public RoomNoWnd mRoomNoWnd;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public VNo mVNo;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public MatchLangWnd mMatchLangWnd;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector3 v;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private bool IsFindRoom;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
	private bool is_to_title;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20E")]
	public bool DontMoveCur;

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x26F8080", Offset = "0x26F8080", VA = "0x26F8080")]
	public void OpenRoomNoWnd(bool is_keyroom_create = false)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x26F80DC", Offset = "0x26F80DC", VA = "0x26F80DC")]
	public void CloseRoomNoWnd()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x26F8120", Offset = "0x26F8120", VA = "0x26F8120")]
	public void PutRoomNo(string str)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x26F82D0", Offset = "0x26F82D0", VA = "0x26F82D0", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x26F8774", Offset = "0x26F8774", VA = "0x26F8774", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x26F88E4", Offset = "0x26F88E4", VA = "0x26F88E4")]
	private void UpdateLoading()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x26F86F8", Offset = "0x26F86F8", VA = "0x26F86F8")]
	private void UpdateMattingScale()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x26F89D0", Offset = "0x26F89D0", VA = "0x26F89D0")]
	private void OnRoom()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x26F8B80", Offset = "0x26F8B80", VA = "0x26F8B80")]
	public void OnCreateRoom()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x26F8CB0", Offset = "0x26F8CB0", VA = "0x26F8CB0")]
	public void OnCreateKeyRoom(string key)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x26F8180", Offset = "0x26F8180", VA = "0x26F8180")]
	public void SearchInRoom(string key)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x26F8B14", Offset = "0x26F8B14", VA = "0x26F8B14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC624", Offset = "0xCEC624")]
	private IEnumerator FadeToRandRoom()
	{
		return null;
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x26F8C44", Offset = "0x26F8C44", VA = "0x26F8C44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC684", Offset = "0xCEC684")]
	private IEnumerator FadeToCreateRoom()
	{
		return null;
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x26F8EC8", Offset = "0x26F8EC8", VA = "0x26F8EC8")]
	private void CreateRoom()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x26F8DD8", Offset = "0x26F8DD8", VA = "0x26F8DD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC6E4", Offset = "0xCEC6E4")]
	private IEnumerator FadeToCreateKeyRoom(string key)
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x26F8E50", Offset = "0x26F8E50", VA = "0x26F8E50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC744", Offset = "0xCEC744")]
	private IEnumerator FadeToRoom(string room_name)
	{
		return null;
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x26F8F70", Offset = "0x26F8F70", VA = "0x26F8F70")]
	private void OnNo()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x26F900C", Offset = "0x26F900C", VA = "0x26F900C")]
	private void OnCreate()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x26F9084", Offset = "0x26F9084", VA = "0x26F9084")]
	private void OnRet()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x26F9120", Offset = "0x26F9120", VA = "0x26F9120")]
	private void OnMatchLangBtn()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x26F9140", Offset = "0x26F9140", VA = "0x26F9140")]
	private void ShowLangWnd()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x26F90C4", Offset = "0x26F90C4", VA = "0x26F90C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC7A4", Offset = "0xCEC7A4")]
	private IEnumerator _ToTitle()
	{
		return null;
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x26F9160", Offset = "0x26F9160", VA = "0x26F9160")]
	private void ShowMattingWnd()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x26F920C", Offset = "0x26F920C", VA = "0x26F920C")]
	private void CloseMattingWnd()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x26F9250", Offset = "0x26F9250", VA = "0x26F9250")]
	private void ShowCreateRoomWnd()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x26F92FC", Offset = "0x26F92FC", VA = "0x26F92FC")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x26F9394", Offset = "0x26F9394", VA = "0x26F9394")]
	public void OnJoinRoomFailed()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x26F9430", Offset = "0x26F9430", VA = "0x26F9430")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x26F88E0", Offset = "0x26F88E0", VA = "0x26F88E0")]
	private void OnOpenMattingWnd()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x26F88B8", Offset = "0x26F88B8", VA = "0x26F88B8")]
	private void OnCloseMattingWnd()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x26F9494", Offset = "0x26F9494", VA = "0x26F9494", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x26F966C", Offset = "0x26F966C", VA = "0x26F966C", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x26F99A4", Offset = "0x26F99A4", VA = "0x26F99A4")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x26F9A08", Offset = "0x26F9A08", VA = "0x26F9A08")]
	public void Disconnected()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x26F97DC", Offset = "0x26F97DC", VA = "0x26F97DC")]
	public void UpdateRoomCnt()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x26F9A84", Offset = "0x26F9A84", VA = "0x26F9A84")]
	public LobbyWnd()
	{
	}
}
[Token(Token = "0x20000B1")]
public class MatchLangWnd : UIInputTree
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshProUGUI DetailLabel;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn JpBtn;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn EnBtn;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn ChiBtn;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn OKBtn;

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x26FBE38", Offset = "0x26FBE38", VA = "0x26FBE38", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x26FC0C8", Offset = "0x26FC0C8", VA = "0x26FC0C8")]
	private void Push_B_CB()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x26FC13C", Offset = "0x26FC13C", VA = "0x26FC13C", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x26FC274", Offset = "0x26FC274", VA = "0x26FC274", Slot = "9")]
	public override void OnOpen()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x26FC2DC", Offset = "0x26FC2DC", VA = "0x26FC2DC", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x26FC1D0", Offset = "0x26FC1D0", VA = "0x26FC1D0")]
	private void LoadMatchLang()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x26FC3D4", Offset = "0x26FC3D4", VA = "0x26FC3D4")]
	private void HideBtnSel()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x26FC42C", Offset = "0x26FC42C", VA = "0x26FC42C")]
	private void OnJp()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x26FC4C0", Offset = "0x26FC4C0", VA = "0x26FC4C0")]
	private void OnEn()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x26FC554", Offset = "0x26FC554", VA = "0x26FC554")]
	private void OnChi()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x26FC0CC", Offset = "0x26FC0CC", VA = "0x26FC0CC")]
	private void OnOK()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x26FC5E8", Offset = "0x26FC5E8", VA = "0x26FC5E8", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x26FC650", Offset = "0x26FC650", VA = "0x26FC650")]
	public MatchLangWnd()
	{
	}
}
[Token(Token = "0x20000B2")]
public class MicChkWnd : UIInputTree
{
	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshProUGUI InfoText;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Text DeviceText;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn UpBtn;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn BtmBtn;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn MicBtn;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public UI_OverBtn OKBtn;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public FocusTarget OKFocusTarget;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public FocusGrp mGrp;

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x26FC658", Offset = "0x26FC658", VA = "0x26FC658", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x26FC8E8", Offset = "0x26FC8E8", VA = "0x26FC8E8", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x26FC974", Offset = "0x26FC974", VA = "0x26FC974", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x26FC9DC", Offset = "0x26FC9DC", VA = "0x26FC9DC", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x26FCAA4", Offset = "0x26FCAA4", VA = "0x26FCAA4")]
	private void DeviceUpdate()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x26FCC7C", Offset = "0x26FCC7C", VA = "0x26FCC7C")]
	private void SetDeviceName(string str)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x26FCB28", Offset = "0x26FCB28", VA = "0x26FCB28")]
	private void ShowSelBtn()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x26FCE90", Offset = "0x26FCE90", VA = "0x26FCE90")]
	private void ChangeDevice()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x26FD09C", Offset = "0x26FD09C", VA = "0x26FD09C")]
	private void OnUpBtn()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x26FD11C", Offset = "0x26FD11C", VA = "0x26FD11C")]
	private void OnBtmBtn()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x26FD19C", Offset = "0x26FD19C", VA = "0x26FD19C")]
	private void OnOKBtn()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x26FD20C", Offset = "0x26FD20C", VA = "0x26FD20C")]
	private void OnMicBtn()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x26FD288", Offset = "0x26FD288", VA = "0x26FD288")]
	public MicChkWnd()
	{
	}
}
[Token(Token = "0x20000B3")]
public class NameWnd : UIInputTree
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshProUGUI NameText;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshProUGUI NameLabel;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshProUGUI NGWordLabel;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TitleWnd mTitleWnd;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public SetupWnd mSetupWnd;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public UI_OverBtn OKBtn;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UI_OverBtn SwitchKyebordBtn;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Image Bar;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private cListInter BarAlpha;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Color NameBtnBaseColor;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Color col;

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x26FD7FC", Offset = "0x26FD7FC", VA = "0x26FD7FC", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x26FDAC4", Offset = "0x26FDAC4", VA = "0x26FDAC4", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x26FDB8C", Offset = "0x26FDB8C", VA = "0x26FDB8C")]
	private void ShowNG()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x26FDC2C", Offset = "0x26FDC2C", VA = "0x26FDC2C")]
	private void HideNG()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x26FDCCC", Offset = "0x26FDCCC", VA = "0x26FDCCC")]
	private void OnOKBtn()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x26FDEB0", Offset = "0x26FDEB0", VA = "0x26FDEB0")]
	private void NameLangCB(SystemMsgWnd wnd)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x26FDF78", Offset = "0x26FDF78", VA = "0x26FDF78")]
	private void OnCloseBtn()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x26FE084", Offset = "0x26FE084", VA = "0x26FE084")]
	private void OnKeybordBtn()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x26FE08C", Offset = "0x26FE08C", VA = "0x26FE08C", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x26FE1CC", Offset = "0x26FE1CC", VA = "0x26FE1CC")]
	public void CallOpen()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x26FE1D0", Offset = "0x26FE1D0", VA = "0x26FE1D0")]
	public void CallOpend()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x26FE088", Offset = "0x26FE088", VA = "0x26FE088")]
	private void ShowKyebord()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x26FE1D4", Offset = "0x26FE1D4", VA = "0x26FE1D4", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x26FE300", Offset = "0x26FE300", VA = "0x26FE300")]
	public void OnKey(string key)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x26FE3E0", Offset = "0x26FE3E0", VA = "0x26FE3E0")]
	public void OnDel()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x26FE148", Offset = "0x26FE148", VA = "0x26FE148")]
	private void ChkName()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x26FE4A4", Offset = "0x26FE4A4", VA = "0x26FE4A4")]
	private void RemoveErrText()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x26FEF04", Offset = "0x26FEF04", VA = "0x26FEF04", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x26FF020", Offset = "0x26FF020", VA = "0x26FF020")]
	public NameWnd()
	{
	}
}
[Token(Token = "0x20000B4")]
public class OmowakuWnd : UIInputTree
{
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public int StrType;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public int StrIndex;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float ShowTime;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshProUGUI DetailLabel;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform OffsetRotTree;

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x266803C", Offset = "0x266803C", VA = "0x266803C")]
	private void ChkSwRot()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x2668040", Offset = "0x2668040", VA = "0x2668040")]
	public void SetIndex(int index)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x26680C4", Offset = "0x26680C4", VA = "0x26680C4")]
	public void Open(int index, float show_time)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x26680E8", Offset = "0x26680E8", VA = "0x26680E8")]
	public void Open(int type, int index, float show_time)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x2668100", Offset = "0x2668100", VA = "0x2668100")]
	public void Open(string msg, float show_time)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x2668150", Offset = "0x2668150", VA = "0x2668150", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x2668180", Offset = "0x2668180", VA = "0x2668180", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x26681F8", Offset = "0x26681F8", VA = "0x26681F8", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x266829C", Offset = "0x266829C", VA = "0x266829C")]
	public OmowakuWnd()
	{
	}
}
[Token(Token = "0x20000B5")]
public class OneBtnDlg : UIInputTree
{
	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UI_OverBtn OKBtn;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Action OKCb;

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x26682A4", Offset = "0x26682A4", VA = "0x26682A4", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x266833C", Offset = "0x266833C", VA = "0x266833C", Slot = "9")]
	public override void OnOpen()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x2668374", Offset = "0x2668374", VA = "0x2668374", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x26683AC", Offset = "0x26683AC", VA = "0x26683AC")]
	private void OnOK()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x26683C0", Offset = "0x26683C0", VA = "0x26683C0")]
	public OneBtnDlg()
	{
	}
}
[Token(Token = "0x20000B6")]
public class OpemMenuTree : MonoBehaviour
{
	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LoadingHideTree;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject NormMenuTree;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image YIcon;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI Norm_YText;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI Norm_YText_BK;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI Norm_XText;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI Norm_XText_BK;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject OpenMenuTree;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI Open_YText;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI Open_YText_BK;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI Open_XText;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI Open_XText_BK;

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x26683C8", Offset = "0x26683C8", VA = "0x26683C8")]
	public void ShowSnapMenu()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x2668538", Offset = "0x2668538", VA = "0x2668538")]
	public void HideSnapMenu()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x26685A4", Offset = "0x26685A4", VA = "0x26685A4")]
	public void ChangeLanguage()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x2668728", Offset = "0x2668728", VA = "0x2668728")]
	private bool IsLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x26687B4", Offset = "0x26687B4", VA = "0x26687B4")]
	public void ChkLoading()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x2668434", Offset = "0x2668434", VA = "0x2668434")]
	private void ChkPast()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x26687F8", Offset = "0x26687F8", VA = "0x26687F8")]
	public void Norm()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x266885C", Offset = "0x266885C", VA = "0x266885C")]
	public void Open()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x26688C0", Offset = "0x26688C0", VA = "0x26688C0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x26688FC", Offset = "0x26688FC", VA = "0x26688FC")]
	public OpemMenuTree()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ParentalWnd : UIInputTree
{
	[Token(Token = "0x20000B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF1E8", Offset = "0xCDF1E8")]
	private sealed class <ChkAndClose>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000749")]
			[Address(RVA = "0x265CF60", Offset = "0x265CF60", VA = "0x265CF60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600074B")]
			[Address(RVA = "0x265CFA8", Offset = "0x265CFA8", VA = "0x265CFA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x265CF18", Offset = "0x265CF18", VA = "0x265CF18")]
		[DebuggerHidden]
		public <ChkAndClose>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x265CF44", Offset = "0x265CF44", VA = "0x265CF44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x265CF48", Offset = "0x265CF48", VA = "0x265CF48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x265CF68", Offset = "0x265CF68", VA = "0x265CF68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public PageLabel mPageLabel;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn JpBtn;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn EnBtn;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn KanBtn;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn HanBtn;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool is_close;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x2668FBC", Offset = "0x2668FBC", VA = "0x2668FBC", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x26692A8", Offset = "0x26692A8", VA = "0x26692A8", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x2669328", Offset = "0x2669328", VA = "0x2669328", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x2669390", Offset = "0x2669390", VA = "0x2669390", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x26694E8", Offset = "0x26694E8", VA = "0x26694E8")]
	private void HideLangTextSel()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x2669554", Offset = "0x2669554", VA = "0x2669554")]
	private void OnJpBtn()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x26695CC", Offset = "0x26695CC", VA = "0x26695CC")]
	private void OnEnBtn()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x2669644", Offset = "0x2669644", VA = "0x2669644")]
	private void OnKanBtn()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x26696BC", Offset = "0x26696BC", VA = "0x26696BC")]
	private void OnHanBtn()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x2669734", Offset = "0x2669734", VA = "0x2669734")]
	private void LastPageCB()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x2669754", Offset = "0x2669754", VA = "0x2669754")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEC994", Offset = "0xCEC994")]
	private IEnumerator ChkAndClose()
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x26697B0", Offset = "0x26697B0", VA = "0x26697B0")]
	public ParentalWnd()
	{
	}
}
[Token(Token = "0x20000B9")]
public class PhotonDebugWnd : UIInputTree
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public PhotonDebugScene mPhotonDebugScene;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn LobbyBtn;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn RoomBtn;

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x266B518", Offset = "0x266B518", VA = "0x266B518", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x266B6E0", Offset = "0x266B6E0", VA = "0x266B6E0")]
	private void OnLobbyBtn()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x266B848", Offset = "0x266B848", VA = "0x266B848")]
	private void OnRoomBtn()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x266B234", Offset = "0x266B234", VA = "0x266B234")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x266B100", Offset = "0x266B100", VA = "0x266B100")]
	public void Disconnected()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x266B940", Offset = "0x266B940", VA = "0x266B940")]
	public void UpdateRoomCnt()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x266B368", Offset = "0x266B368", VA = "0x266B368")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x266B474", Offset = "0x266B474", VA = "0x266B474")]
	public void OnJoinRoomFailed()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x266BA88", Offset = "0x266BA88", VA = "0x266BA88")]
	public PhotonDebugWnd()
	{
	}
}
[Token(Token = "0x20000BA")]
public class PrologeWnd : UIInputTree
{
	[Token(Token = "0x20000BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF1F8", Offset = "0xCDF1F8")]
	private sealed class <ShowFade>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrologeWnd <>4__this;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <show_sprite_index>5__2;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <r>5__3;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600076B")]
			[Address(RVA = "0x265E448", Offset = "0x265E448", VA = "0x265E448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0x265E490", Offset = "0x265E490", VA = "0x265E490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x265DD90", Offset = "0x265DD90", VA = "0x265DD90")]
		[DebuggerHidden]
		public <ShowFade>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x265DDBC", Offset = "0x265DDBC", VA = "0x265DDBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x265DDC0", Offset = "0x265DDC0", VA = "0x265DDC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x265E450", Offset = "0x265E450", VA = "0x265E450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF208", Offset = "0xCDF208")]
	private sealed class <PlaySounds>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PrologeWnd <>4__this;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PageSound <p>5__2;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0x265DD40", Offset = "0x265DD40", VA = "0x265DD40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000773")]
			[Address(RVA = "0x265DD88", Offset = "0x265DD88", VA = "0x265DD88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x265D890", Offset = "0x265D890", VA = "0x265D890")]
		[DebuggerHidden]
		public <PlaySounds>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x265D8BC", Offset = "0x265D8BC", VA = "0x265D8BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x265D8C0", Offset = "0x265D8C0", VA = "0x265D8C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x265DD48", Offset = "0x265DD48", VA = "0x265DD48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UI_OverBtn DebugSkipBtn;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public List<Sprite> PrologeSprite;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public List<PageSound> PageSoundList;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_FadeImg PrologeFade;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Image Bar;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TextMeshProUGUI DetailLabel;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Image MsgBG;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int detail_index;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private Vector2 size;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public bool IsStart;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
	public bool IsEnd;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<AudioClip> PlayList;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool is_push;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x2677B20", Offset = "0x2677B20", VA = "0x2677B20")]
	private void SetDetailMsg(int index)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x2677C88", Offset = "0x2677C88", VA = "0x2677C88")]
	public void ShowMasterUI()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x2677D3C", Offset = "0x2677D3C", VA = "0x2677D3C", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x2677E9C", Offset = "0x2677E9C", VA = "0x2677E9C")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x2677EB8", Offset = "0x2677EB8", VA = "0x2677EB8")]
	private void UpdateBar()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x2677F70", Offset = "0x2677F70", VA = "0x2677F70", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x2677FA0", Offset = "0x2677FA0", VA = "0x2677FA0", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x267805C", Offset = "0x267805C", VA = "0x267805C", Slot = "9")]
	public override void OnOpen()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x2678100", Offset = "0x2678100", VA = "0x2678100")]
	private Sprite GetSprite(int index)
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x2678190", Offset = "0x2678190", VA = "0x2678190")]
	private void ShowNextBtn()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x2678250", Offset = "0x2678250", VA = "0x2678250")]
	private void HideNextBtn()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x2678094", Offset = "0x2678094", VA = "0x2678094")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCECA44", Offset = "0xCECA44")]
	private IEnumerator ShowFade()
	{
		return null;
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x26782E4", Offset = "0x26782E4", VA = "0x26782E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCECAA4", Offset = "0xCECAA4")]
	private IEnumerator PlaySounds(int index)
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x2678360", Offset = "0x2678360", VA = "0x2678360")]
	private void PrologeEnd()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x26784A0", Offset = "0x26784A0", VA = "0x26784A0")]
	private void OnDiveBtn()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x2678684", Offset = "0x2678684", VA = "0x2678684")]
	private void OnDiveYes()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x2678688", Offset = "0x2678688", VA = "0x2678688")]
	private void OnDiveNo()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x267868C", Offset = "0x267868C", VA = "0x267868C")]
	private void OnDiveClose(YNDlg yn)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x2678738", Offset = "0x2678738", VA = "0x2678738")]
	public PrologeWnd()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BD")]
public class PageSound
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<AudioClip> Sounds;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x2668FB4", Offset = "0x2668FB4", VA = "0x2668FB4")]
	public PageSound()
	{
	}
}
[Token(Token = "0x20000BE")]
public class RoomCreateWnd : UIInputTree
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public LobbyWnd mLobbyWnd;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshProUGUI DetailText;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn CreateBtn;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn KeyCreateBtn;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x2692E78", Offset = "0x2692E78", VA = "0x2692E78", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x2693084", Offset = "0x2693084", VA = "0x2693084", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x26930FC", Offset = "0x26930FC", VA = "0x26930FC", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x26931D4", Offset = "0x26931D4", VA = "0x26931D4")]
	private void Push_B_CB()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x26931EC", Offset = "0x26931EC", VA = "0x26931EC")]
	private void OnCreateBtn()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x2693208", Offset = "0x2693208", VA = "0x2693208")]
	private void OnKeyCreateBtn()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x26931E0", Offset = "0x26931E0", VA = "0x26931E0")]
	private void OnCloseBtn()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x2693228", Offset = "0x2693228", VA = "0x2693228", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x2693290", Offset = "0x2693290", VA = "0x2693290")]
	public void PutRoomNo(string key)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x26932AC", Offset = "0x26932AC", VA = "0x26932AC")]
	public RoomCreateWnd()
	{
	}
}
[Token(Token = "0x20000BF")]
public class RoomInfoWnd : UIInputTree
{
	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshProUGUI RoomName;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn ExitBtn;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn OpenBtn;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public FocusGrp BtnFocusGrp;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public FocusTarget ExitBtnFocus;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public FocusTarget OpenBtnFocus;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<TextMeshProUGUI> NameList;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public List<UI_OverBtn> KickBtnList;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private List<Player> PlayerList;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int kick_index;

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x26932B4", Offset = "0x26932B4", VA = "0x26932B4", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x2693584", Offset = "0x2693584", VA = "0x2693584")]
	private void Push_B_CB()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x26935E0", Offset = "0x26935E0", VA = "0x26935E0")]
	private bool RetFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x2693644", Offset = "0x2693644", VA = "0x2693644")]
	private void OnCloseBtn()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x2693650", Offset = "0x2693650", VA = "0x2693650")]
	private void OnExitBtn()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x26938B8", Offset = "0x26938B8", VA = "0x26938B8")]
	private void OnOpenBtn()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x26939CC", Offset = "0x26939CC", VA = "0x26939CC", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x2693C60", Offset = "0x2693C60", VA = "0x2693C60")]
	public void ForcusReset()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x2693C7C", Offset = "0x2693C7C", VA = "0x2693C7C")]
	public void FirstFocus(float cur_move_time = 0.2f)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x2693CEC", Offset = "0x2693CEC", VA = "0x2693CEC", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x2693DCC", Offset = "0x2693DCC", VA = "0x2693DCC")]
	private void DestroyYesCB()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x2693DD0", Offset = "0x2693DD0", VA = "0x2693DD0")]
	private void DestroyNoCB()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x2693DD4", Offset = "0x2693DD4", VA = "0x2693DD4")]
	private void DestroyClose(YNDlg yn)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x2693E74", Offset = "0x2693E74", VA = "0x2693E74")]
	private void ExitYesCB()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x2693ED0", Offset = "0x2693ED0", VA = "0x2693ED0")]
	private void ExitNoCB()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x2693ED4", Offset = "0x2693ED4", VA = "0x2693ED4")]
	private void ExitClose(YNDlg yn)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x2693F70", Offset = "0x2693F70", VA = "0x2693F70")]
	private void OpenYesCB()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x2693FCC", Offset = "0x2693FCC", VA = "0x2693FCC")]
	private void OpenNoCB()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x2693FD0", Offset = "0x2693FD0", VA = "0x2693FD0")]
	public void UpdateRoomInfo(List<Player> players)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x26945C8", Offset = "0x26945C8", VA = "0x26945C8")]
	private void SetPlayer(int index, Player p)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x269447C", Offset = "0x269447C", VA = "0x269447C")]
	private void HideAllUserName()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x26948F8", Offset = "0x26948F8", VA = "0x26948F8")]
	private void OnKick(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x2694AA8", Offset = "0x2694AA8", VA = "0x2694AA8")]
	private void KickLangCB(YNDlg wnd)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x2694BD0", Offset = "0x2694BD0", VA = "0x2694BD0")]
	private void KickYesCB()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x2694CAC", Offset = "0x2694CAC", VA = "0x2694CAC")]
	private void KickNoCB()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x2694CB0", Offset = "0x2694CB0", VA = "0x2694CB0")]
	public RoomInfoWnd()
	{
	}
}
[Token(Token = "0x20000C0")]
public class RoomNoWnd : UIInputTree
{
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public LobbyWnd mLobbyWnd;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshProUGUI RoomNoText;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshProUGUI NameLabel;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TextMeshProUGUI RoomListLabel;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn OKBtn;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public UI_OverBtn SwitchKyebordBtn;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Image Bar;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private cListInter BarAlpha;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Color col;

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x2694DB0", Offset = "0x2694DB0", VA = "0x2694DB0", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x269507C", Offset = "0x269507C", VA = "0x269507C")]
	private void OnKeybordBtn()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x2695084", Offset = "0x2695084", VA = "0x2695084")]
	private void OnOKBtn()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x26950D0", Offset = "0x26950D0", VA = "0x26950D0")]
	private void OnCloseBtn()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x26950EC", Offset = "0x26950EC", VA = "0x26950EC", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x2695154", Offset = "0x2695154", VA = "0x2695154", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x2695224", Offset = "0x2695224", VA = "0x2695224", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x2695304", Offset = "0x2695304", VA = "0x2695304")]
	public void SetCreateBtnLabel()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x2695368", Offset = "0x2695368", VA = "0x2695368")]
	public void OnKey(string key)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x2695504", Offset = "0x2695504", VA = "0x2695504")]
	public void OnDel()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x2695684", Offset = "0x2695684", VA = "0x2695684", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x26957A0", Offset = "0x26957A0", VA = "0x26957A0")]
	public void CallOpend()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x2695080", Offset = "0x2695080", VA = "0x2695080")]
	private void ShowKyebord()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x26957A4", Offset = "0x26957A4", VA = "0x26957A4")]
	public RoomNoWnd()
	{
	}
}
[Token(Token = "0x20000C1")]
public class SceneTextWnd : UIInputTree
{
	[Serializable]
	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF218", Offset = "0xCDF218")]
	private sealed class <>c
	{
		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<SceneText> <>9__28_0;

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x26616BC", Offset = "0x26616BC", VA = "0x26616BC")]
		public <>c()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x26616C4", Offset = "0x26616C4", VA = "0x26616C4")]
		internal int <CallLateUpdate>b__28_0(SceneText a, SceneText b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public SceneText NamePrefab;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public SceneText ItemNamePrefab;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public SceneText BlnPrefab;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public SceneText InfoPrefab;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public List<SceneText> NameList;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public List<SceneText> ItemNameList;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public List<SceneText> BlnList;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<SceneText> InfoList;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int index;

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x26A1BB0", Offset = "0x26A1BB0", VA = "0x26A1BB0", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x26A1D58", Offset = "0x26A1D58", VA = "0x26A1D58")]
	public SceneText SetUserName(string user_name, SceneUnit.eUnit unit, Transform target, float offset_y)
	{
		return null;
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x26A20A8", Offset = "0x26A20A8", VA = "0x26A20A8")]
	public void ResetBlnTree()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x26A2144", Offset = "0x26A2144", VA = "0x26A2144")]
	public SceneText SetBln(TimelineData timeline, SceneUnit.eUnit unit, Transform target)
	{
		return null;
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x26A24D4", Offset = "0x26A24D4", VA = "0x26A24D4", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x26A2708", Offset = "0x26A2708", VA = "0x26A2708")]
	public void ChangeLangBln()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x26A27E4", Offset = "0x26A27E4", VA = "0x26A27E4")]
	public void AllHide()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x26A2948", Offset = "0x26A2948", VA = "0x26A2948")]
	public void HideInfoBln()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x26A1EDC", Offset = "0x26A1EDC", VA = "0x26A1EDC")]
	public SceneText SearchName()
	{
		return null;
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x26A29F8", Offset = "0x26A29F8", VA = "0x26A29F8")]
	public SceneText SearchItem()
	{
		return null;
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x26A2308", Offset = "0x26A2308", VA = "0x26A2308")]
	public SceneText SearchBln()
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x26A2C48", Offset = "0x26A2C48", VA = "0x26A2C48")]
	public SceneText SearchInfo()
	{
		return null;
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x26A2E7C", Offset = "0x26A2E7C", VA = "0x26A2E7C")]
	public void ShowItem(PropItemData item)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x26A2FC0", Offset = "0x26A2FC0", VA = "0x26A2FC0")]
	public SceneText SearchItem(HandGrab grab)
	{
		return null;
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x26A316C", Offset = "0x26A316C", VA = "0x26A316C")]
	public SceneText SearchItem(Transform t)
	{
		return null;
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x26A3318", Offset = "0x26A3318", VA = "0x26A3318")]
	public void HaveItem(HandGrab grab, PropItemData item)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x26A34D0", Offset = "0x26A34D0", VA = "0x26A34D0")]
	public void HaveItem(Transform t, PropItemData item)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x26A3614", Offset = "0x26A3614", VA = "0x26A3614")]
	public void ReleaseItem(HandGrab grab, PropItemData item)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x26A36E4", Offset = "0x26A36E4", VA = "0x26A36E4")]
	public void ReleaseItem(Transform t, PropItemData item)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x26A37B4", Offset = "0x26A37B4", VA = "0x26A37B4")]
	public void CallLateUpdate(Transform campos)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x26A3D7C", Offset = "0x26A3D7C", VA = "0x26A3D7C")]
	public SceneTextWnd()
	{
	}
}
[Token(Token = "0x20000C3")]
public class ServerWnd : UIInputTree
{
	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF228", Offset = "0xCDF228")]
	private sealed class <_PingChk>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerWnd <>4__this;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D4")]
			[Address(RVA = "0x26619A0", Offset = "0x26619A0", VA = "0x26619A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0x26619E8", Offset = "0x26619E8", VA = "0x26619E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x2661718", Offset = "0x2661718", VA = "0x2661718")]
		[DebuggerHidden]
		public <_PingChk>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x2661744", Offset = "0x2661744", VA = "0x2661744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x2661748", Offset = "0x2661748", VA = "0x2661748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x26619A8", Offset = "0x26619A8", VA = "0x26619A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn UpBtn;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn BtmBtn;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Image LoadingImg;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject DataTree;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TextMeshProUGUI InfoLabel;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TextMeshProUGUI TargetLabel;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public TextMeshProUGUI PingLabel;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public List<UI_OverBtn> ServerSelBtnList;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public TitleWnd mTitleWnd;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public SetupWnd mSetupWnd;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public FocusTarget OKFocusTarget;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public FocusTarget BtnTopFocus;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float btn_show_time;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private bool pingchk;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public int ServerIndex;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private string setcode;

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x2642E9C", Offset = "0x2642E9C", VA = "0x2642E9C", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x2643198", Offset = "0x2643198", VA = "0x2643198")]
	private void PushB_CB()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x264319C", Offset = "0x264319C", VA = "0x264319C")]
	private void OnCloseBtn()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x26432E8", Offset = "0x26432E8", VA = "0x26432E8")]
	private void OnUpBtn()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x2643698", Offset = "0x2643698", VA = "0x2643698")]
	private void OnBtmBtn()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x26432FC", Offset = "0x26432FC", VA = "0x26432FC")]
	private void UpdateServerBtn()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x2643758", Offset = "0x2643758", VA = "0x2643758", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x264382C", Offset = "0x264382C", VA = "0x264382C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCECBA4", Offset = "0xCECBA4")]
	private IEnumerator _PingChk()
	{
		return null;
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x2643898", Offset = "0x2643898", VA = "0x2643898")]
	private void PingChkErr()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x264390C", Offset = "0x264390C", VA = "0x264390C")]
	private void CreatePingList()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x26439F4", Offset = "0x26439F4", VA = "0x26439F4")]
	private void OnServerBtn(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x2643B4C", Offset = "0x2643B4C", VA = "0x2643B4C")]
	private void NoSelServerBtn()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x2643BF0", Offset = "0x2643BF0", VA = "0x2643BF0", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x2643D24", Offset = "0x2643D24", VA = "0x2643D24", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x2643E14", Offset = "0x2643E14", VA = "0x2643E14", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x2644014", Offset = "0x2644014", VA = "0x2644014")]
	public void CallOpen()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x2644020", Offset = "0x2644020", VA = "0x2644020")]
	public void CallOpend()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x2644054", Offset = "0x2644054", VA = "0x2644054")]
	public ServerWnd()
	{
	}
}
[Token(Token = "0x20000C5")]
public class SetUnitWnd : UIInputTree
{
	[Token(Token = "0x20000C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF238", Offset = "0xCDF238")]
	private sealed class <IsStart>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetUnitWnd <>4__this;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x2661BFC", Offset = "0x2661BFC", VA = "0x2661BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x2661C44", Offset = "0x2661C44", VA = "0x2661C44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x26619F0", Offset = "0x26619F0", VA = "0x26619F0")]
		[DebuggerHidden]
		public <IsStart>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x2661A1C", Offset = "0x2661A1C", VA = "0x2661A1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x2661A20", Offset = "0x2661A20", VA = "0x2661A20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x2661C04", Offset = "0x2661C04", VA = "0x2661C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF248", Offset = "0xCDF248")]
	private sealed class <ShowInfo>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetUnitWnd <>4__this;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0x2661DCC", Offset = "0x2661DCC", VA = "0x2661DCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0x2661E14", Offset = "0x2661E14", VA = "0x2661E14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x2661C4C", Offset = "0x2661C4C", VA = "0x2661C4C")]
		[DebuggerHidden]
		public <ShowInfo>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x2661C78", Offset = "0x2661C78", VA = "0x2661C78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x2661C7C", Offset = "0x2661C7C", VA = "0x2661C7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x2661DD4", Offset = "0x2661DD4", VA = "0x2661DD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1F5C", Offset = "0xCE1F5C")]
	public int _setplayerdir;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public RoomScene mRoomScene;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TipsTree mTipsTree;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool is_tips;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform InfoTree;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TextMeshProUGUI InfoText;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform VoteTree;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public cInter InfoScale;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public cInter VoteScale;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Sprite CircleSprite;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public int prog;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public List<UI_OverBtn> UnitBtn;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public List<TextMeshProUGUI> NameList;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool is_start;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int UnitSetTextIndex;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private SceneUnit.eUnit setscene_unit;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x26440F8", Offset = "0x26440F8", VA = "0x26440F8")]
	public void ToTips()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x26441E0", Offset = "0x26441E0", VA = "0x26441E0")]
	public void ShowTips()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x2644250", Offset = "0x2644250", VA = "0x2644250")]
	public void TipsSkip(int skip)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x264426C", Offset = "0x264426C", VA = "0x264426C")]
	private void OpenInfo(float t)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x2644160", Offset = "0x2644160", VA = "0x2644160")]
	private void CloseInfo(float t = 0.5f)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x26445EC", Offset = "0x26445EC", VA = "0x26445EC")]
	private void UpdateInfoScale()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x2644654", Offset = "0x2644654", VA = "0x2644654")]
	private void OpenVote()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x26441A0", Offset = "0x26441A0", VA = "0x26441A0")]
	private void CloseVote(float t = 0.5f)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x26446F0", Offset = "0x26446F0", VA = "0x26446F0")]
	private void UpdateVoteScale()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x2644300", Offset = "0x2644300", VA = "0x2644300")]
	public void SetPlayerDir()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x2644758", Offset = "0x2644758", VA = "0x2644758")]
	private void HideUnitBtn()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x26447FC", Offset = "0x26447FC", VA = "0x26447FC")]
	private void ShowUnitBtn()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x26449D4", Offset = "0x26449D4", VA = "0x26449D4", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x2644B50", Offset = "0x2644B50", VA = "0x2644B50")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x2644CA4", Offset = "0x2644CA4", VA = "0x2644CA4", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x2644DCC", Offset = "0x2644DCC", VA = "0x2644DCC")]
	private void ProgNext()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x2644E7C", Offset = "0x2644E7C", VA = "0x2644E7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCECC54", Offset = "0xCECC54")]
	private IEnumerator IsStart()
	{
		return null;
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x2644EE8", Offset = "0x2644EE8", VA = "0x2644EE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCECCB4", Offset = "0xCECCB4")]
	private IEnumerator ShowInfo()
	{
		return null;
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x2644F54", Offset = "0x2644F54", VA = "0x2644F54", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x2645008", Offset = "0x2645008", VA = "0x2645008", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x264543C", Offset = "0x264543C", VA = "0x264543C", Slot = "9")]
	public override void OnOpen()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x26455C4", Offset = "0x26455C4", VA = "0x26455C4", Slot = "11")]
	public override void CloseWnd()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x26454EC", Offset = "0x26454EC", VA = "0x26454EC")]
	private void SelectStart()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x2645618", Offset = "0x2645618", VA = "0x2645618")]
	private void SetInfoMsg()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x2645798", Offset = "0x2645798", VA = "0x2645798")]
	private void OnUnit(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x26457B0", Offset = "0x26457B0", VA = "0x26457B0")]
	private void _OnUnit(int player_index)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x26458F4", Offset = "0x26458F4", VA = "0x26458F4")]
	public void SetSceneUnit(Player player, SceneUnit.eUnit unit)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x26450F0", Offset = "0x26450F0", VA = "0x26450F0")]
	private void UpdateSelBtnLabel()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x2645AD0", Offset = "0x2645AD0", VA = "0x2645AD0")]
	private void UnitYesCB()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x2645AD4", Offset = "0x2645AD4", VA = "0x2645AD4")]
	private void UnitNoCB()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x2645AD8", Offset = "0x2645AD8", VA = "0x2645AD8")]
	private void UnitClose(YNDlg yn)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x2645BFC", Offset = "0x2645BFC", VA = "0x2645BFC")]
	public void Disconnected()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x2645C08", Offset = "0x2645C08", VA = "0x2645C08")]
	public SetUnitWnd()
	{
	}
}
[Token(Token = "0x20000C8")]
public class SetupWnd : UIInputTree
{
	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF258", Offset = "0xCDF258")]
	private sealed class <MsgWaitToOpenLangWnd>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetupWnd <>4__this;

		[Token(Token = "0x17000091")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000811")]
			[Address(RVA = "0x2661EF8", Offset = "0x2661EF8", VA = "0x2661EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000813")]
			[Address(RVA = "0x2661F40", Offset = "0x2661F40", VA = "0x2661F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x2661E1C", Offset = "0x2661E1C", VA = "0x2661E1C")]
		[DebuggerHidden]
		public <MsgWaitToOpenLangWnd>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x2661E48", Offset = "0x2661E48", VA = "0x2661E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x2661E4C", Offset = "0x2661E4C", VA = "0x2661E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x2661F00", Offset = "0x2661F00", VA = "0x2661F00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TitleWnd mTitleWnd;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public NameWnd mNameWnd;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public VK mVK;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public LangWnd mLangWnd;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public DeviceWnd mDeviceWnd;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public ServerWnd mServerWnd;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x2645D0C", Offset = "0x2645D0C", VA = "0x2645D0C", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x2645DD0", Offset = "0x2645DD0", VA = "0x2645DD0", Slot = "9")]
	public override void OnOpen()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x2645DD8", Offset = "0x2645DD8", VA = "0x2645DD8")]
	public void OpenNameWnd()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x2645E40", Offset = "0x2645E40", VA = "0x2645E40")]
	public void CloseNameWnd()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x2645E84", Offset = "0x2645E84", VA = "0x2645E84")]
	public void OnCloseNameWnd()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x2645EB0", Offset = "0x2645EB0", VA = "0x2645EB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCECDB4", Offset = "0xCECDB4")]
	private IEnumerator MsgWaitToOpenLangWnd()
	{
		return null;
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x2645F1C", Offset = "0x2645F1C", VA = "0x2645F1C")]
	public void OnCloseLangWnd()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x2645FE8", Offset = "0x2645FE8", VA = "0x2645FE8")]
	public void OnCloseDeviceWnd()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x2643D04", Offset = "0x2643D04", VA = "0x2643D04")]
	public void OnCloseServerWnd()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x26460B4", Offset = "0x26460B4", VA = "0x26460B4")]
	public SetupWnd()
	{
	}
}
[Token(Token = "0x20000CA")]
public class SwitchInputWnd : UIInputTree
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshProUGUI TextField;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform LeftAnalogKey;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform RightAnalogKey;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn OKBtn;

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x26481E8", Offset = "0x26481E8", VA = "0x26481E8", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x26482E4", Offset = "0x26482E4", VA = "0x26482E4")]
	private void OnOKBtn()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x26482E8", Offset = "0x26482E8", VA = "0x26482E8", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x2648D7C", Offset = "0x2648D7C", VA = "0x2648D7C")]
	public SwitchInputWnd()
	{
	}
}
[Token(Token = "0x20000CB")]
public class SystemMsgWnd : UIInputTree
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshProUGUI DetailLabel;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn OKBtn;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float now_time;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float ShowTime;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Image TimeBarImg;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public int ShowMsgType;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public int ShowMsgIndex;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public List<SystemMsgData> StockMsg;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Action<SystemMsgWnd> LangCB;

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x2648F04", Offset = "0x2648F04", VA = "0x2648F04")]
	private void SetShowMsg(int type, int index)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x2648F10", Offset = "0x2648F10", VA = "0x2648F10")]
	public void SetMsgOpen(int type, int index, int pri = -1, float show_time = -1f, bool is_stock = true, [Optional] Action<SystemMsgWnd> langcb)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x2649354", Offset = "0x2649354", VA = "0x2649354")]
	public void SetMsgOpen(string str, int pri = -1, float show_time = -1f, bool is_stock = true)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x26490F4", Offset = "0x26490F4", VA = "0x26490F4")]
	private void CreateStok(int type, int index, int pri, float show_time)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x26494FC", Offset = "0x26494FC", VA = "0x26494FC")]
	private void CreateStok(string str, int pri, float show_time)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x26495B0", Offset = "0x26495B0", VA = "0x26495B0")]
	private void InseartStok(string str, int pri, float show_time, bool is_page = false)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x26491D8", Offset = "0x26491D8", VA = "0x26491D8")]
	private string SplitPage(string str, int pri, float show_time)
	{
		return null;
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x264967C", Offset = "0x264967C", VA = "0x264967C")]
	private void RemovePageMsg()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x2649748", Offset = "0x2649748", VA = "0x2649748")]
	public void RemoveStockMsg(int pri)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x2649824", Offset = "0x2649824", VA = "0x2649824")]
	private void UpdateTimeBar()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x2649868", Offset = "0x2649868", VA = "0x2649868", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x2649964", Offset = "0x2649964", VA = "0x2649964", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x2649A20", Offset = "0x2649A20", VA = "0x2649A20")]
	private void ShowTimeOver()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x2649A90", Offset = "0x2649A90", VA = "0x2649A90")]
	private void OnOK()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x2649B00", Offset = "0x2649B00", VA = "0x2649B00", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x2649BAC", Offset = "0x2649BAC", VA = "0x2649BAC", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x2649D10", Offset = "0x2649D10", VA = "0x2649D10", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x2649F54", Offset = "0x2649F54", VA = "0x2649F54")]
	public SystemMsgWnd()
	{
	}
}
[Token(Token = "0x20000CC")]
public class SystemMsgData
{
	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int type;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int index;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string str;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float show_time;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int pri;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool is_page;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x2648EF4", Offset = "0x2648EF4", VA = "0x2648EF4")]
	public SystemMsgData()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TipsTree : MonoBehaviour
{
	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF268", Offset = "0xCDF268")]
	private sealed class <ShowFade>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TipsTree <>4__this;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <spritecnt>5__2;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0x2746964", Offset = "0x2746964", VA = "0x2746964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x27469AC", Offset = "0x27469AC", VA = "0x27469AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x274633C", Offset = "0x274633C", VA = "0x274633C")]
		[DebuggerHidden]
		public <ShowFade>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x2746368", Offset = "0x2746368", VA = "0x2746368", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x274636C", Offset = "0x274636C", VA = "0x274636C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x274696C", Offset = "0x274696C", VA = "0x274696C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF278", Offset = "0xCDF278")]
	private sealed class <ShowProc>d__27 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TipsTree <>4__this;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0x2746C5C", Offset = "0x2746C5C", VA = "0x2746C5C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x2746CA4", Offset = "0x2746CA4", VA = "0x2746CA4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x27469B4", Offset = "0x27469B4", VA = "0x27469B4")]
		[DebuggerHidden]
		public <ShowProc>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x27469EC", Offset = "0x27469EC", VA = "0x27469EC", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x27469F0", Offset = "0x27469F0", VA = "0x27469F0", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x2746C64", Offset = "0x2746C64", VA = "0x2746C64", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x2746CAC", Offset = "0x2746CAC", VA = "0x2746CAC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x2746D54", Offset = "0x2746D54", VA = "0x2746D54", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF288", Offset = "0xCDF288")]
	private sealed class <ShowSkip>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TipsTree <>4__this;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0x2746EE8", Offset = "0x2746EE8", VA = "0x2746EE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x2746F30", Offset = "0x2746F30", VA = "0x2746F30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x2746D58", Offset = "0x2746D58", VA = "0x2746D58")]
		[DebuggerHidden]
		public <ShowSkip>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x2746D84", Offset = "0x2746D84", VA = "0x2746D84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x2746D88", Offset = "0x2746D88", VA = "0x2746D88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x2746EF0", Offset = "0x2746EF0", VA = "0x2746EF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF298", Offset = "0xCDF298")]
	private sealed class <WaitAll>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TipsTree <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x2747200", Offset = "0x2747200", VA = "0x2747200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x2747248", Offset = "0x2747248", VA = "0x2747248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x2746F38", Offset = "0x2746F38", VA = "0x2746F38")]
		[DebuggerHidden]
		public <WaitAll>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x2746F64", Offset = "0x2746F64", VA = "0x2746F64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x2746F68", Offset = "0x2746F68", VA = "0x2746F68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x2747208", Offset = "0x2747208", VA = "0x2747208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomScene mRoomScene;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas ParentCanvas;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UI_OverBtn SkipBtn;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Sprite> TipsSprite;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Sprite> TipsSprite_NS;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Sprite> PastTipisSprite;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Sprite> PastTipisSprite_NS;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UI_FadeImg PrologeFade;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image Bar;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject Col;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool IsStart;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool IsEnd;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Coroutine proc;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI TipsTitleLabel;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI TipsDetailLabel;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool IsShowBar;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int show_sprite_index;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int rpc_skip;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int tips_label_index;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float wait_start_time;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool send_rpc_flg;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool is_skip;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x26B5CB8", Offset = "0x26B5CB8", VA = "0x26B5CB8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x26B5E10", Offset = "0x26B5E10", VA = "0x26B5E10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x26B5E24", Offset = "0x26B5E24", VA = "0x26B5E24")]
	private void PlayHoverSound()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x26B5E80", Offset = "0x26B5E80", VA = "0x26B5E80")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x26B5EB4", Offset = "0x26B5EB4", VA = "0x26B5EB4")]
	private void UpdateBar()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x26B5F90", Offset = "0x26B5F90", VA = "0x26B5F90")]
	public void Show(RoomScene scene)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x26B610C", Offset = "0x26B610C", VA = "0x26B610C")]
	public void TipsSkip(int skip)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x26B6114", Offset = "0x26B6114", VA = "0x26B6114")]
	private Sprite GetSprite(int index)
	{
		return null;
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x26B60A0", Offset = "0x26B60A0", VA = "0x26B60A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCECE64", Offset = "0xCECE64")]
	private IEnumerator ShowFade()
	{
		return null;
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x26B61D8", Offset = "0x26B61D8", VA = "0x26B61D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCECEC4", Offset = "0xCECEC4")]
	private IEnumerable ShowProc()
	{
		return null;
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x26B6244", Offset = "0x26B6244", VA = "0x26B6244")]
	private void SetTipsLabel(int index)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x26B6384", Offset = "0x26B6384", VA = "0x26B6384")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCECF24", Offset = "0xCECF24")]
	private IEnumerator ShowSkip()
	{
		return null;
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x26B63F0", Offset = "0x26B63F0", VA = "0x26B63F0")]
	private bool Is_Online()
	{
		return default(bool);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x26B644C", Offset = "0x26B644C", VA = "0x26B644C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCECF84", Offset = "0xCECF84")]
	private IEnumerator WaitAll()
	{
		return null;
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x26B64B8", Offset = "0x26B64B8", VA = "0x26B64B8")]
	private void TipsEnd()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x26B659C", Offset = "0x26B659C", VA = "0x26B659C")]
	private void OnSkipBtn()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x26B67CC", Offset = "0x26B67CC", VA = "0x26B67CC")]
	private void OnPastDive()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x26B6844", Offset = "0x26B6844", VA = "0x26B6844")]
	private void IsRoomBreake()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x26B6848", Offset = "0x26B6848", VA = "0x26B6848")]
	private void IsRoomBreakeClose(YNDlg yn)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x26B69D0", Offset = "0x26B69D0", VA = "0x26B69D0")]
	private void DestroyYesCB()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x26B69D4", Offset = "0x26B69D4", VA = "0x26B69D4")]
	private void DestroyNoCB()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x26B69D8", Offset = "0x26B69D8", VA = "0x26B69D8")]
	private void DestroyClose(YNDlg yn)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x26B6A70", Offset = "0x26B6A70", VA = "0x26B6A70")]
	public void ChangeLanguage()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x26B6A78", Offset = "0x26B6A78", VA = "0x26B6A78")]
	public TipsTree()
	{
	}
}
[Token(Token = "0x20000D2")]
public class TitleWnd : UIInputTree
{
	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UI_OverBtn StartBtn;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn DiveBtn;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UI_OverBtn KenriBtn;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UI_OverBtn NameChangeBtn;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UI_OverBtn ServerBtn;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TextMeshProUGUI VerLabel;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public UI_OverBtn DebugDiveBtn;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UI_OverBtn PastDiveBtn;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public UI_OverBtn RemoveBtn;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public UI_OverBtn PastBtn;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public UI_OverBtn PastClearBtn;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject TitleMainTree;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject KenriTree;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject NameTree;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject ServerTree;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public KenriWnd mKenriWnd;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public NameWnd mNameWnd;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public VK mVK;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public ServerWnd mServerWnd;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public TitleScene mTitleScene;

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x26B8360", Offset = "0x26B8360", VA = "0x26B8360")]
	public void CloseKenriWnd()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x26B837C", Offset = "0x26B837C", VA = "0x26B837C", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x26B8768", Offset = "0x26B8768", VA = "0x26B8768")]
	private bool ChkSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x26B8B3C", Offset = "0x26B8B3C", VA = "0x26B8B3C")]
	private void SetPast()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x26B8BB4", Offset = "0x26B8BB4", VA = "0x26B8BB4")]
	private void OnStartBtn()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x26B8CC0", Offset = "0x26B8CC0", VA = "0x26B8CC0")]
	private void OnDiveBtn()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x26B8D8C", Offset = "0x26B8D8C", VA = "0x26B8D8C")]
	private void OnKenriBtn()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x26B8890", Offset = "0x26B8890", VA = "0x26B8890")]
	private void OnNameBtn()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x26B8A08", Offset = "0x26B8A08", VA = "0x26B8A08")]
	private void OnServerBtn()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x26B8E84", Offset = "0x26B8E84", VA = "0x26B8E84")]
	private void OpendKenriWnd()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x26B8EE0", Offset = "0x26B8EE0", VA = "0x26B8EE0")]
	private void ActiveNameTree()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x26B8EFC", Offset = "0x26B8EFC", VA = "0x26B8EFC")]
	private void OpendNameTree()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x26B8F18", Offset = "0x26B8F18", VA = "0x26B8F18")]
	private void ActiveServerTree()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x26B8F34", Offset = "0x26B8F34", VA = "0x26B8F34")]
	private void OpendServerTree()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x26B8F50", Offset = "0x26B8F50", VA = "0x26B8F50")]
	private void OpenMic()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x26B8F7C", Offset = "0x26B8F7C", VA = "0x26B8F7C", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x26B9148", Offset = "0x26B9148", VA = "0x26B9148")]
	private void ChkPast()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x26B93A8", Offset = "0x26B93A8", VA = "0x26B93A8", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x26B9578", Offset = "0x26B9578", VA = "0x26B9578")]
	public void OpenNameWnd()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x26B95BC", Offset = "0x26B95BC", VA = "0x26B95BC")]
	public void CloseNameWnd()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x26B95DC", Offset = "0x26B95DC", VA = "0x26B95DC")]
	public void OnCloseServerWnd()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x26B95FC", Offset = "0x26B95FC", VA = "0x26B95FC")]
	public TitleWnd()
	{
	}
}
[Token(Token = "0x20000D3")]
public class VK : UIInputTree
{
	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public NameWnd mNameWnd;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE1FF0", Offset = "0xCE1FF0")]
	public int _get;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public List<UI_OverBtn> KeyList;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x260BFD8", Offset = "0x260BFD8", VA = "0x260BFD8")]
	private void _Get()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x260C4E8", Offset = "0x260C4E8", VA = "0x260C4E8")]
	private string Key(int btn_index)
	{
		return null;
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x260C7E8", Offset = "0x260C7E8", VA = "0x260C7E8", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x260C968", Offset = "0x260C968", VA = "0x260C968")]
	private void OnKey(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x260C9C4", Offset = "0x260C9C4", VA = "0x260C9C4")]
	public VK()
	{
	}
}
[Token(Token = "0x20000D4")]
public class VNo : UIInputTree
{
	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public RoomNoWnd mRoomNoWnd;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE2084", Offset = "0xCE2084")]
	public int _get;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public List<UI_OverBtn> KeyList;

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x260CA38", Offset = "0x260CA38", VA = "0x260CA38")]
	private void _Get()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x260CE40", Offset = "0x260CE40", VA = "0x260CE40", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x260CF5C", Offset = "0x260CF5C", VA = "0x260CF5C")]
	private void OnKey(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x260D020", Offset = "0x260D020", VA = "0x260D020")]
	public VNo()
	{
	}
}
[Token(Token = "0x20000D5")]
public class VoteWnd : UIInputTree
{
	[Token(Token = "0x20000D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF2A8", Offset = "0xCDF2A8")]
	private sealed class <_InfoClose>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoteWnd <>4__this;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <is_msg>5__2;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <r>5__3;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0x274D8E8", Offset = "0x274D8E8", VA = "0x274D8E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x274D930", Offset = "0x274D930", VA = "0x274D930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x274D618", Offset = "0x274D618", VA = "0x274D618")]
		[DebuggerHidden]
		public <_InfoClose>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x274D644", Offset = "0x274D644", VA = "0x274D644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x274D648", Offset = "0x274D648", VA = "0x274D648", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x274D8F0", Offset = "0x274D8F0", VA = "0x274D8F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF2B8", Offset = "0xCDF2B8")]
	private sealed class <_VoteTimeUp>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoteWnd <>4__this;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <is_msg>5__2;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <r>5__3;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x274DD5C", Offset = "0x274DD5C", VA = "0x274DD5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x274DDA4", Offset = "0x274DDA4", VA = "0x274DDA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x274D938", Offset = "0x274D938", VA = "0x274D938")]
		[DebuggerHidden]
		public <_VoteTimeUp>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x274D964", Offset = "0x274D964", VA = "0x274D964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x274D968", Offset = "0x274D968", VA = "0x274D968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x274DD64", Offset = "0x274DD64", VA = "0x274DD64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE2118", Offset = "0xCE2118")]
	public int _setplayerdir;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public DiveScene mDiveScene;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform DirTree;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform InfoTree;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TextMeshProUGUI InfoText;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int LabelIndex;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public UI_OverBtn CloseBtn;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Transform TimeTree;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public TextMeshProUGUI TimeLabel;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public TextMeshProUGUI DiscussionLabel;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public TextMeshProUGUI DiveLabel;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public TextMeshProUGUI CountLabel;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public TextMeshProUGUI VoteLabel;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject MsgTree;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public TextMeshProUGUI MsgLabel;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject PreMsgTree;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public TextMeshProUGUI PreMsgLabel;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Transform VoteTree;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public cInter InfoScale;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public cInter VoteScale;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public List<UI_OverBtn> VoteBtn;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public List<int> VoteCnt;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int vote_index;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public List<TextMeshProUGUI> NameList;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private int old_vote;

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x26127EC", Offset = "0x26127EC", VA = "0x26127EC")]
	private void OpenInfo(float t)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x2612BA8", Offset = "0x2612BA8", VA = "0x2612BA8")]
	private void CloseInfo()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x2612BE8", Offset = "0x2612BE8", VA = "0x2612BE8")]
	private void OpenVote(float t = 0.5f)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x2612F34", Offset = "0x2612F34", VA = "0x2612F34")]
	private void CloseVote(float t = 0.5f)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x2612B40", Offset = "0x2612B40", VA = "0x2612B40")]
	private void UpdateInfoScale()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x2612ECC", Offset = "0x2612ECC", VA = "0x2612ECC")]
	private void UpdateVoteScale()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x2612F74", Offset = "0x2612F74", VA = "0x2612F74", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x2613170", Offset = "0x2613170", VA = "0x2613170")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x26132C4", Offset = "0x26132C4", VA = "0x26132C4", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x261283C", Offset = "0x261283C", VA = "0x261283C")]
	public void SetPlayerDir()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x26133A4", Offset = "0x26133A4", VA = "0x26133A4")]
	private void EnableCur()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x261348C", Offset = "0x261348C", VA = "0x261348C")]
	private void DisableCur()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x2613538", Offset = "0x2613538", VA = "0x2613538")]
	private void InitVoteCnt()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x2613670", Offset = "0x2613670", VA = "0x2613670")]
	private void UpdateVote()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x26137A0", Offset = "0x26137A0", VA = "0x26137A0")]
	private int GetVote()
	{
		return default(int);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x26138E0", Offset = "0x26138E0", VA = "0x26138E0")]
	private void OnInfoClose()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x261390C", Offset = "0x261390C", VA = "0x261390C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED144", Offset = "0xCED144")]
	private IEnumerator _InfoClose()
	{
		return null;
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x2613978", Offset = "0x2613978", VA = "0x2613978")]
	private void OnVote(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x2613A48", Offset = "0x2613A48", VA = "0x2613A48")]
	public void Vote(int index, bool is_me)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x2613CBC", Offset = "0x2613CBC", VA = "0x2613CBC")]
	public void CanselVote(int index, bool is_me)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x2613B4C", Offset = "0x2613B4C", VA = "0x2613B4C")]
	private void AddVoteCnt(int index, int add_cnt)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x2613D64", Offset = "0x2613D64", VA = "0x2613D64")]
	public void UpdateVoteWnd()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x2613F5C", Offset = "0x2613F5C", VA = "0x2613F5C", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x26140AC", Offset = "0x26140AC", VA = "0x26140AC", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x2614284", Offset = "0x2614284", VA = "0x2614284")]
	private void InqLabelIndex()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x2614304", Offset = "0x2614304", VA = "0x2614304")]
	public void TimeCountStart()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x2614490", Offset = "0x2614490", VA = "0x2614490")]
	private void UpdateTimeLabel()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x2614564", Offset = "0x2614564", VA = "0x2614564")]
	private void ChkCountDown()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x2614628", Offset = "0x2614628", VA = "0x2614628")]
	private void TimeOut()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x2614684", Offset = "0x2614684", VA = "0x2614684")]
	public void VoteTimeUp(int vote_cnt)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x2614738", Offset = "0x2614738", VA = "0x2614738")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED1A4", Offset = "0xCED1A4")]
	private IEnumerator _VoteTimeUp()
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x26147A4", Offset = "0x26147A4", VA = "0x26147A4")]
	private string GetVoteUnit()
	{
		return null;
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x2614868", Offset = "0x2614868", VA = "0x2614868")]
	private void VoteSec()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x26149F0", Offset = "0x26149F0", VA = "0x26149F0")]
	private void VoteRandam()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x2614E40", Offset = "0x2614E40", VA = "0x2614E40")]
	public void VoteResult(int vote)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x2615010", Offset = "0x2615010", VA = "0x2615010")]
	public void RandomVote(int vote)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x2615128", Offset = "0x2615128", VA = "0x2615128")]
	private void VoteLangCB(SystemMsgWnd wnd)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x26151C4", Offset = "0x26151C4", VA = "0x26151C4")]
	public VoteWnd()
	{
	}
}
[Token(Token = "0x20000D8")]
public class WaitWnd : UIInputTree
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform DirTree;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshProUGUI InfoText;

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x2615310", Offset = "0x2615310", VA = "0x2615310", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x26153CC", Offset = "0x26153CC", VA = "0x26153CC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x2615520", Offset = "0x2615520", VA = "0x2615520", Slot = "11")]
	public override void CloseWnd()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x2615564", Offset = "0x2615564", VA = "0x2615564")]
	public void SetPlayerDir()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x26156F8", Offset = "0x26156F8", VA = "0x26156F8", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x26157BC", Offset = "0x26157BC", VA = "0x26157BC", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x2615830", Offset = "0x2615830", VA = "0x2615830")]
	public WaitWnd()
	{
	}
}
[Token(Token = "0x20000D9")]
public class WatchesUI : UIInputTree
{
	[Token(Token = "0x20000DA")]
	public enum BtnType
	{
		[Token(Token = "0x4000688")]
		None,
		[Token(Token = "0x4000689")]
		Config,
		[Token(Token = "0x400068A")]
		RoomInfo,
		[Token(Token = "0x400068B")]
		GameInfo
	}

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform TargetTransform;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ConfigWnd mConfigWnd;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public RoomInfoWnd mRoomInfoWnd;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameInfoWnd mGameInfoWnd;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject BtnTree;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject EpiBtnTree;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject IconTree;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform Btn0Tree;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform EndBtnLeftTree;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Image Icon;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public TextMeshProUGUI UnitLabel;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public TextMeshProUGUI DetailLabel;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public TextMeshProUGUI RoomMasterLabel;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public TextMeshProUGUI PhotonDebugLabel;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private string debug_str;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private SceneUnit.eUnit uniticon;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public int SnapIndex;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public UI_OverBtn[] Btn;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public List<BtnType> BtnTypeList;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public UI_OverBtn CamBtn;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public List<UI_OverBtn> EpiBtn;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public UI_OverBtn EndBtn;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public OpemMenuTree mOpemMenuTree;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject OpenMenuTree;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Image XIcon;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject RevTree;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public TextMeshProUGUI RevLabel;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public TextMeshProUGUI RevLabel_BK;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject SwitchSnapTree;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public TextMeshProUGUI ALabel;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public TextMeshProUGUI BLabel;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public TextMeshProUGUI ALabel_BK;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public TextMeshProUGUI BLabel_BK;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public FocusTarget[] BtnFocusTarget;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public FocusGrp BtnTreeFocusGrp;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private int sel_btn;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private bool IsEpiIcon;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x265")]
	public bool IsMenuOK;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private int ShowBtnCnt;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x2615D4C", Offset = "0x2615D4C", VA = "0x2615D4C")]
	private void ShowDebugPhoton()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x2615FF4", Offset = "0x2615FF4", VA = "0x2615FF4")]
	public void SetDetailLabel(string str)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x2616018", Offset = "0x2616018", VA = "0x2616018")]
	public void ClearDetailLabel()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x2616080", Offset = "0x2616080", VA = "0x2616080")]
	public void ChkMailBtn()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x261609C", Offset = "0x261609C", VA = "0x261609C")]
	public void SetUnitIcon(SceneUnit.eUnit unit)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x26161B8", Offset = "0x26161B8", VA = "0x26161B8")]
	public void ChkRoomMaster()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x26162A0", Offset = "0x26162A0", VA = "0x26162A0", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x2616934", Offset = "0x2616934", VA = "0x2616934")]
	public void InitPicData()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x2616958", Offset = "0x2616958", VA = "0x2616958")]
	public void ShowShareBtn(bool flg)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x2616978", Offset = "0x2616978", VA = "0x2616978")]
	public void CloseAllWnd()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x2616A3C", Offset = "0x2616A3C", VA = "0x2616A3C")]
	public void CloseOtherWnd(BtnType open_btn)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x2616BA8", Offset = "0x2616BA8", VA = "0x2616BA8")]
	public void Set2DOffset(Transform target)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x2616C14", Offset = "0x2616C14", VA = "0x2616C14")]
	public void SetVROffset(Transform target)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x2616C88", Offset = "0x2616C88", VA = "0x2616C88")]
	public void ChkLoading()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x2616D18", Offset = "0x2616D18", VA = "0x2616D18")]
	public void ShowOpenMenuTree()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x2616DB4", Offset = "0x2616DB4", VA = "0x2616DB4")]
	public void HideOpenMenuTree()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x2616E48", Offset = "0x2616E48", VA = "0x2616E48")]
	public void ShowRev(bool flg)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x2616EEC", Offset = "0x2616EEC", VA = "0x2616EEC")]
	public void ShowSwitchMenu()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x2616F7C", Offset = "0x2616F7C", VA = "0x2616F7C")]
	public void HideSwitchMenu()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x2617014", Offset = "0x2617014", VA = "0x2617014")]
	public void ShowSnapMenu()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x2617018", Offset = "0x2617018", VA = "0x2617018")]
	public void HideSnapMenu()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x261701C", Offset = "0x261701C", VA = "0x261701C")]
	public void RetBtnTree()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x2617020", Offset = "0x2617020", VA = "0x2617020")]
	public void OnBtn0()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x26172F4", Offset = "0x26172F4", VA = "0x26172F4")]
	public void OnBtn1()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x26172FC", Offset = "0x26172FC", VA = "0x26172FC")]
	public void OnBtn2()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x2617304", Offset = "0x2617304", VA = "0x2617304")]
	public void OnBtn3()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x2617028", Offset = "0x2617028", VA = "0x2617028")]
	private void ChkOpenBtn(int btn_index)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x261730C", Offset = "0x261730C", VA = "0x261730C", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x2616880", Offset = "0x2616880", VA = "0x2616880")]
	public void ShowCamBtn(bool flg)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x26177C4", Offset = "0x26177C4", VA = "0x26177C4")]
	private void HoverCam()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x2617834", Offset = "0x2617834", VA = "0x2617834")]
	private void HoverEndCam()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x2617888", Offset = "0x2617888", VA = "0x2617888")]
	private void OnCam()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x2617928", Offset = "0x2617928", VA = "0x2617928")]
	public void ShowEpiBtn(bool flg)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x2617CBC", Offset = "0x2617CBC", VA = "0x2617CBC")]
	private void DisableCamBtn()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x2617D68", Offset = "0x2617D68", VA = "0x2617D68")]
	private void OnEpiBtn(UI_OverBtn btn)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x2617E1C", Offset = "0x2617E1C", VA = "0x2617E1C")]
	private void OnEnd()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x2617F20", Offset = "0x2617F20", VA = "0x2617F20")]
	private void OnDiveEnd()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x2617F74", Offset = "0x2617F74", VA = "0x2617F74")]
	public void CloseMenuUI()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x2617F78", Offset = "0x2617F78", VA = "0x2617F78", Slot = "13")]
	public override void ClosedChildWnd()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x261801C", Offset = "0x261801C", VA = "0x261801C")]
	public void SetBtn(BtnType type0, BtnType type1, BtnType type2, BtnType type3 = BtnType.None)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x261834C", Offset = "0x261834C", VA = "0x261834C")]
	public void ChkMenuBtnColor()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x26183EC", Offset = "0x26183EC", VA = "0x26183EC")]
	private void SetMenuGrayColor(bool flg)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x26183FC", Offset = "0x26183FC", VA = "0x26183FC")]
	private void SetSnapGrayColor(bool flg)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x26173B4", Offset = "0x26173B4", VA = "0x26173B4")]
	private void SetBtnLabel()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x2618400", Offset = "0x2618400", VA = "0x2618400", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x26184FC", Offset = "0x26184FC", VA = "0x26184FC")]
	public int GetShowBtnCnt()
	{
		return default(int);
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x261818C", Offset = "0x261818C", VA = "0x261818C")]
	public void SetShowCnt(int show_cnt)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x2618504", Offset = "0x2618504", VA = "0x2618504")]
	public void HideAllBtn()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x26185A4", Offset = "0x26185A4", VA = "0x26185A4", Slot = "5")]
	public override void UpdateInit()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x261868C", Offset = "0x261868C", VA = "0x261868C", Slot = "16")]
	public override void UIUpdate()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x2618690", Offset = "0x2618690", VA = "0x2618690")]
	public void Snap(float snap_time)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x26186AC", Offset = "0x26186AC", VA = "0x26186AC")]
	public WatchesUI()
	{
	}
}
[Token(Token = "0x20000DB")]
public class YNDlg : UIInputTree
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UI_OverBtn YesBtn;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UI_OverBtn NoBtn;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshProUGUI DetailText;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Action YesCB;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Action NoCB;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Action<YNDlg> CloseCB;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Action<YNDlg> LangCB;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public int ID;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public int SelYN;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int YesType;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int YesIndex;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int NoType;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int NoIndex;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int DetailType;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private int DetailIndex;

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x2713E14", Offset = "0x2713E14", VA = "0x2713E14", Slot = "6")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x2713F9C", Offset = "0x2713F9C", VA = "0x2713F9C", Slot = "4")]
	public override void ChangeLangage()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x27140B8", Offset = "0x27140B8", VA = "0x27140B8")]
	public void Open(int y_type, int y_index, int n_type, int n_index, int detail_type, int detail_index, Action yes_cb, Action no_cb, [Optional] Action<YNDlg> closecb, int wnd_id = -1, [Optional] Action<YNDlg> langcb)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x2713FD8", Offset = "0x2713FD8", VA = "0x2713FD8")]
	private void SetLabel()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x2714120", Offset = "0x2714120", VA = "0x2714120")]
	public void Open(string yes_btn_text, string no_btn_text, string detail_text, Action yes_cb, Action no_cb, [Optional] Action<YNDlg> closecb, int wnd_id = -1)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x2714234", Offset = "0x2714234", VA = "0x2714234", Slot = "7")]
	public override void OpenWnd()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x271429C", Offset = "0x271429C", VA = "0x271429C")]
	public void Close(int wnd_id)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x27142D8", Offset = "0x27142D8", VA = "0x27142D8", Slot = "9")]
	public override void OnOpen()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x2714324", Offset = "0x2714324", VA = "0x2714324", Slot = "12")]
	public override void OnClose()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x27143F4", Offset = "0x27143F4", VA = "0x27143F4")]
	private void OnYes()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x2714498", Offset = "0x2714498", VA = "0x2714498")]
	private void OnNo()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x2714540", Offset = "0x2714540", VA = "0x2714540")]
	public YNDlg()
	{
	}
}
[Token(Token = "0x20000DC")]
public class UI_BtnBaseData : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	public enum BtnType
	{
		[Token(Token = "0x400069D")]
		Custam,
		[Token(Token = "0x400069E")]
		Close,
		[Token(Token = "0x400069F")]
		Norm,
		[Token(Token = "0x40006A0")]
		Watches,
		[Token(Token = "0x40006A1")]
		SoundVol,
		[Token(Token = "0x40006A2")]
		LetterIcon,
		[Token(Token = "0x40006A3")]
		Rare,
		[Token(Token = "0x40006A4")]
		Yes,
		[Token(Token = "0x40006A5")]
		No
	}

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BtnType mBtnType;

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x26088D8", Offset = "0x26088D8", VA = "0x26088D8")]
	public void SetDefaultColor()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x2608968", Offset = "0x2608968", VA = "0x2608968")]
	public UI_BtnBaseData()
	{
	}
}
[Token(Token = "0x20000DE")]
public class UI_Button : UI_Collider
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int BtnIndex;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action PressCallBack;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<int, int> PressCallBackBtn;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<int> ClickEvent;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<int, bool> HoverEvent;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<int, bool> PressEvent;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<int> DoubleClickEvent;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<int, bool> SelectEvent;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<int, Vector2> DragEvent;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<int, float> ScrollEvent;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<int> DragStartEvent;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<int> DragEndEvent;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<int> DragOverEvent;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action<int> DragOutEvent;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x2608970", Offset = "0x2608970", VA = "0x2608970")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x2608A1C", Offset = "0x2608A1C", VA = "0x2608A1C")]
	private void OnHover(bool isover)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x2608A90", Offset = "0x2608A90", VA = "0x2608A90")]
	private void OnPress(bool pressed)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x2608B18", Offset = "0x2608B18", VA = "0x2608B18")]
	private void OnPressBtn(int btn)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x2608B8C", Offset = "0x2608B8C", VA = "0x2608B8C")]
	private void OnDoubleClick()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x2608C38", Offset = "0x2608C38", VA = "0x2608C38")]
	private void OnSelect(bool selected)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x2608CF8", Offset = "0x2608CF8", VA = "0x2608CF8")]
	private void OnDrag(Vector2 delta)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x2608DC0", Offset = "0x2608DC0", VA = "0x2608DC0")]
	private void OnScroll(float delta)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x2608E80", Offset = "0x2608E80", VA = "0x2608E80")]
	private void OnDragStart()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x2608F2C", Offset = "0x2608F2C", VA = "0x2608F2C")]
	private void OnDragEnd()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x2608FD8", Offset = "0x2608FD8", VA = "0x2608FD8")]
	private void OnDragOver()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x2609084", Offset = "0x2609084", VA = "0x2609084")]
	private void OnDragOut()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x26090E4", Offset = "0x26090E4", VA = "0x26090E4")]
	public UI_Button()
	{
	}
}
[Token(Token = "0x20000DF")]
public class UI_Collider : MonoBehaviour
{
	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE21AC", Offset = "0xCE21AC")]
	public int _search_panel;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider UICollider;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x26090F4", Offset = "0x26090F4", VA = "0x26090F4")]
	public void SearchCol()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x2609158", Offset = "0x2609158", VA = "0x2609158")]
	public void SetCol(bool flg)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x2609178", Offset = "0x2609178", VA = "0x2609178")]
	public bool IsCol()
	{
		return default(bool);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x26090EC", Offset = "0x26090EC", VA = "0x26090EC")]
	public UI_Collider()
	{
	}
}
[Token(Token = "0x20000E0")]
public class UI_FadeImg : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image BaseImg;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image FrontImg;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public cInter BaseImgAlpha;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public cInter FrontImgAlpha;

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x2609194", Offset = "0x2609194", VA = "0x2609194")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x26091E4", Offset = "0x26091E4", VA = "0x26091E4")]
	public void ShowBase(float t)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x260920C", Offset = "0x260920C", VA = "0x260920C")]
	public void ShowFront(float t)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x2609234", Offset = "0x2609234", VA = "0x2609234")]
	public void HideBase(float t)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x260925C", Offset = "0x260925C", VA = "0x260925C")]
	public void HideFront(float t)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x2609284", Offset = "0x2609284", VA = "0x2609284")]
	public bool IsShowBase()
	{
		return default(bool);
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x26092AC", Offset = "0x26092AC", VA = "0x26092AC")]
	public bool IsShowFront()
	{
		return default(bool);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x2609198", Offset = "0x2609198", VA = "0x2609198")]
	public void Init()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x26093F4", Offset = "0x26093F4", VA = "0x26093F4")]
	public void CallUpdate()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x26092D4", Offset = "0x26092D4", VA = "0x26092D4")]
	private void UpdateAlpha()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x26094C8", Offset = "0x26094C8", VA = "0x26094C8")]
	public UI_FadeImg()
	{
	}
}
[Token(Token = "0x20000E1")]
public class UI_OverBtn : UI_Button
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Color disableColor;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI BtnLabel;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<Image> LabelImage;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool is_enable;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float UIBlockTime;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public cInter HoverAlpha;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Image BGSprite;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image OverSprite;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform OffsetTree;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector3 Offset;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float OverScale;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 scale;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public cInter HoverScale;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool is_hover;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Action HoverChkPressEvent;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Action<UI_OverBtn> HoverChkPressEventBtn;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Action HoverStartCB;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Action HoverUpdateCB;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Action HoverEndCB;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public FocusTarget mFocusTarget;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool is_sel;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool is_cur;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	public bool IsKeyUpCB;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public cInter SelAlpha;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Color BaseTextCol;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool is_awake_init;

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x260954C", Offset = "0x260954C", VA = "0x260954C")]
	public Vector2 GetCurSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x2606268", Offset = "0x2606268", VA = "0x2606268")]
	public void InitFocus()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x260974C", Offset = "0x260974C", VA = "0x260974C")]
	public void SetLabel(string t)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x2609874", Offset = "0x2609874", VA = "0x2609874")]
	public void SetEnable()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x2609924", Offset = "0x2609924", VA = "0x2609924")]
	public void SetDisable()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x26099C8", Offset = "0x26099C8", VA = "0x26099C8")]
	public bool IsHover()
	{
		return default(bool);
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x26099D0", Offset = "0x26099D0", VA = "0x26099D0")]
	public bool IsSel()
	{
		return default(bool);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x26099D8", Offset = "0x26099D8", VA = "0x26099D8")]
	public bool IsCur()
	{
		return default(bool);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x26099E0", Offset = "0x26099E0", VA = "0x26099E0")]
	public void SetSel(bool flg)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x2609D6C", Offset = "0x2609D6C", VA = "0x2609D6C")]
	public void SetCur(bool flg)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x2609CA0", Offset = "0x2609CA0", VA = "0x2609CA0")]
	private void ChkAlpha()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x2609D9C", Offset = "0x2609D9C", VA = "0x2609D9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x2609A10", Offset = "0x2609A10", VA = "0x2609A10")]
	public void AwakeInit()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x2609E50", Offset = "0x2609E50", VA = "0x2609E50")]
	public void CallPressEvent()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x2609F8C", Offset = "0x2609F8C", VA = "0x2609F8C")]
	public void SetPressBtnEvent()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x260A018", Offset = "0x260A018", VA = "0x260A018")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x260A01C", Offset = "0x260A01C", VA = "0x260A01C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x260A12C", Offset = "0x260A12C", VA = "0x260A12C")]
	public void Copy(cInter alpha, cInter copy)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x260A1A0", Offset = "0x260A1A0", VA = "0x260A1A0")]
	private void _OnPress(int btn_index, bool pressed)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x260A3D8", Offset = "0x260A3D8", VA = "0x260A3D8")]
	private void _OnPressBtn(int btn_index, int btn_data)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x2609E58", Offset = "0x2609E58", VA = "0x2609E58")]
	private void PushCallBack(bool is_call = false)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x260A4AC", Offset = "0x260A4AC", VA = "0x260A4AC", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x2609674", Offset = "0x2609674", VA = "0x2609674")]
	private void UpdateAlpha()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x2609DA0", Offset = "0x2609DA0", VA = "0x2609DA0")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x260A5C8", Offset = "0x260A5C8", VA = "0x260A5C8")]
	private void OnHoverEvent(int btn_index, bool _is_hover)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x260A6B0", Offset = "0x260A6B0", VA = "0x260A6B0")]
	private void DragStart(int btn_index)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x260A6B4", Offset = "0x260A6B4", VA = "0x260A6B4")]
	private void DragEnd(int btn_index)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x260A6B8", Offset = "0x260A6B8", VA = "0x260A6B8")]
	private void _OnDragOver(int btn_index)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x260A6BC", Offset = "0x260A6BC", VA = "0x260A6BC")]
	private void _OnDragOut(int btn_index)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x260A6C0", Offset = "0x260A6C0", VA = "0x260A6C0")]
	public void ScaleStart()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x260A6E8", Offset = "0x260A6E8", VA = "0x260A6E8")]
	public void ScaleEnd()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x260A224", Offset = "0x260A224", VA = "0x260A224")]
	private void StartDragAction()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x260A2FC", Offset = "0x260A2FC", VA = "0x260A2FC")]
	private void EndDragAction()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x260A710", Offset = "0x260A710", VA = "0x260A710")]
	public UI_OverBtn()
	{
	}
}
[Token(Token = "0x20000E2")]
public class UI_WndBaseData : MonoBehaviour
{
	[Token(Token = "0x20000E3")]
	public enum WndType
	{
		[Token(Token = "0x40006D8")]
		Custam,
		[Token(Token = "0x40006D9")]
		Norm
	}

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image WndBG;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image WndFrame;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WndType mWndType;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x260A84C", Offset = "0x260A84C", VA = "0x260A84C")]
	public void SetDefaultColor()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x260A850", Offset = "0x260A850", VA = "0x260A850")]
	public UI_WndBaseData()
	{
	}
}
[Token(Token = "0x20000E4")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x1700009F")]
	public static bool Initialized
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0x2647D54", Offset = "0x2647D54", VA = "0x2647D54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x2647D5C", Offset = "0x2647D5C", VA = "0x2647D5C")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20000E5")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x26BE7F4", Offset = "0x26BE7F4", VA = "0x26BE7F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x26BE8B8", Offset = "0x26BE8B8", VA = "0x26BE8B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x26BE97C", Offset = "0x26BE97C", VA = "0x26BE97C")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x26BED5C", Offset = "0x26BED5C", VA = "0x26BED5C")]
	public ChatController()
	{
	}
}
[Token(Token = "0x20000E6")]
public class DropdownSample : MonoBehaviour
{
	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Dropdown dropdownWithoutPlaceholder;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Dropdown dropdownWithPlaceholder;

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x26CCF04", Offset = "0x26CCF04", VA = "0x26CCF04")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x26CD010", Offset = "0x26CD010", VA = "0x26CD010")]
	public DropdownSample()
	{
	}
}
[Token(Token = "0x20000E7")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF2D8", Offset = "0xCDF2D8")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x170000A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x2735804", Offset = "0x2735804", VA = "0x2735804", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x273584C", Offset = "0x273584C", VA = "0x273584C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x2735628", Offset = "0x2735628", VA = "0x2735628")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x2735654", Offset = "0x2735654", VA = "0x2735654", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x2735658", Offset = "0x2735658", VA = "0x2735658", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x273580C", Offset = "0x273580C", VA = "0x273580C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x2722F98", Offset = "0x2722F98", VA = "0x2722F98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x2723008", Offset = "0x2723008", VA = "0x2723008")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED2A4", Offset = "0xCED2A4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x2723074", Offset = "0x2723074", VA = "0x2723074")]
	public EnvMapAnimator()
	{
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x20000E9")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x264A61C", Offset = "0x264A61C", VA = "0x264A61C", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x264A694", Offset = "0x264A694", VA = "0x264A694")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EA")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x600094A")]
		[Address(RVA = "0x264AF00", Offset = "0x264AF00", VA = "0x264AF00", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x264B308", Offset = "0x264B308", VA = "0x264B308")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x20000EC")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x2662FAC", Offset = "0x2662FAC", VA = "0x2662FAC")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000ED")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x2663090", Offset = "0x2663090", VA = "0x2663090")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000EE")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x26630DC", Offset = "0x26630DC", VA = "0x26630DC")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000EF")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x2662FF8", Offset = "0x2662FF8", VA = "0x2662FF8")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000F0")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x2663044", Offset = "0x2663044", VA = "0x2663044")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x170000A2")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x264C464", Offset = "0x264C464", VA = "0x264C464")]
			get
			{
				return null;
			}
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x264C46C", Offset = "0x264C46C", VA = "0x264C46C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x264C474", Offset = "0x264C474", VA = "0x264C474")]
			get
			{
				return null;
			}
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x264C47C", Offset = "0x264C47C", VA = "0x264C47C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x264C484", Offset = "0x264C484", VA = "0x264C484")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x264C48C", Offset = "0x264C48C", VA = "0x264C48C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x264C494", Offset = "0x264C494", VA = "0x264C494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x264C49C", Offset = "0x264C49C", VA = "0x264C49C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x264C4A4", Offset = "0x264C4A4", VA = "0x264C4A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x264C4AC", Offset = "0x264C4AC", VA = "0x264C4AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x264C4B4", Offset = "0x264C4B4", VA = "0x264C4B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x264C648", Offset = "0x264C648", VA = "0x264C648")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x264CD88", Offset = "0x264CD88", VA = "0x264CD88", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x264CD8C", Offset = "0x264CD8C", VA = "0x264CD8C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x264CAF4", Offset = "0x264CAF4", VA = "0x264CAF4")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x264CB6C", Offset = "0x264CB6C", VA = "0x264CB6C")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x264CBE4", Offset = "0x264CBE4", VA = "0x264CBE4")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x264CC70", Offset = "0x264CC70", VA = "0x264CC70")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x264CCFC", Offset = "0x264CCFC", VA = "0x264CCFC")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x264CD90", Offset = "0x264CD90", VA = "0x264CD90")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x20000F1")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x20000F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF2E8", Offset = "0xCDF2E8")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4000700")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600096A")]
				[Address(RVA = "0x271E778", Offset = "0x271E778", VA = "0x271E778", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600096C")]
				[Address(RVA = "0x271E7C0", Offset = "0x271E7C0", VA = "0x271E7C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000967")]
			[Address(RVA = "0x271E1D0", Offset = "0x271E1D0", VA = "0x271E1D0")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000968")]
			[Address(RVA = "0x271E1FC", Offset = "0x271E1FC", VA = "0x271E1FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000969")]
			[Address(RVA = "0x271E200", Offset = "0x271E200", VA = "0x271E200", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600096B")]
			[Address(RVA = "0x271E780", Offset = "0x271E780", VA = "0x271E780", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40006F9")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x40006FA")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x2707264", Offset = "0x2707264", VA = "0x2707264")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED354", Offset = "0xCED354")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x27072D0", Offset = "0x27072D0", VA = "0x27072D0")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x20000F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF2F8", Offset = "0xCDF2F8")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400070B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400070C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400070D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x400070E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000972")]
				[Address(RVA = "0x271EC6C", Offset = "0x271EC6C", VA = "0x271EC6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000974")]
				[Address(RVA = "0x271ECB4", Offset = "0x271ECB4", VA = "0x271ECB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600096F")]
			[Address(RVA = "0x271E7C8", Offset = "0x271E7C8", VA = "0x271E7C8")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000970")]
			[Address(RVA = "0x271E7F4", Offset = "0x271E7F4", VA = "0x271E7F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000971")]
			[Address(RVA = "0x271E7F8", Offset = "0x271E7F8", VA = "0x271E7F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000973")]
			[Address(RVA = "0x271EC74", Offset = "0x271EC74", VA = "0x271EC74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x4000707")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x4000708")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x27072D8", Offset = "0x27072D8", VA = "0x27072D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED404", Offset = "0xCED404")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x2707344", Offset = "0x2707344", VA = "0x2707344")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x270734C", Offset = "0x270734C", VA = "0x270734C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x2707944", Offset = "0x2707944", VA = "0x2707944")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x20000F7")]
		public enum BenchmarkType
		{
			[Token(Token = "0x4000716")]
			TMP_SDF_MOBILE,
			[Token(Token = "0x4000717")]
			TMP_SDF__MOBILE_SSD,
			[Token(Token = "0x4000718")]
			TMP_SDF,
			[Token(Token = "0x4000719")]
			TMP_BITMAP_MOBILE,
			[Token(Token = "0x400071A")]
			TEXTMESH_BITMAP
		}

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int NumberOfSamples;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BenchmarkType Benchmark;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font SourceFontFile;

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x2707954", Offset = "0x2707954", VA = "0x2707954")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x2707958", Offset = "0x2707958", VA = "0x2707958")]
		private void Start()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x2707E14", Offset = "0x2707E14", VA = "0x2707E14")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x2707E24", Offset = "0x2707E24", VA = "0x2707E24")]
		private void Start()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x2708138", Offset = "0x2708138", VA = "0x2708138")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x20000FA")]
		public enum CameraModes
		{
			[Token(Token = "0x400073A")]
			Follow,
			[Token(Token = "0x400073B")]
			Isometric,
			[Token(Token = "0x400073C")]
			Free
		}

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x4000737")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x4000738")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x2711480", Offset = "0x2711480", VA = "0x2711480")]
		private void Awake()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x2711504", Offset = "0x2711504", VA = "0x2711504")]
		private void Start()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x27115D0", Offset = "0x27115D0", VA = "0x27115D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x27118E8", Offset = "0x27118E8", VA = "0x27118E8")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x2712094", Offset = "0x2712094", VA = "0x2712094")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x20000FC")]
		public enum MotionType
		{
			[Token(Token = "0x4000748")]
			Rotation,
			[Token(Token = "0x4000749")]
			BackAndForth,
			[Token(Token = "0x400074A")]
			Translation
		}

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x26675B8", Offset = "0x26675B8", VA = "0x26675B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x26676D8", Offset = "0x26676D8", VA = "0x26676D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x2667814", Offset = "0x2667814", VA = "0x2667814")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x20000FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF308", Offset = "0xCDF308")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400074F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x170000AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600098B")]
				[Address(RVA = "0x26620D8", Offset = "0x26620D8", VA = "0x26620D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600098D")]
				[Address(RVA = "0x2662120", Offset = "0x2662120", VA = "0x2662120", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000988")]
			[Address(RVA = "0x2661F48", Offset = "0x2661F48", VA = "0x2661F48")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000989")]
			[Address(RVA = "0x2661F74", Offset = "0x2661F74", VA = "0x2661F74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600098A")]
			[Address(RVA = "0x2661F78", Offset = "0x2661F78", VA = "0x2661F78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600098C")]
			[Address(RVA = "0x26620E0", Offset = "0x26620E0", VA = "0x26620E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x26460BC", Offset = "0x26460BC", VA = "0x26460BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x2646124", Offset = "0x2646124", VA = "0x2646124")]
		private void Start()
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x2646150", Offset = "0x2646150", VA = "0x2646150")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED4B4", Offset = "0xCED4B4")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x26461BC", Offset = "0x26461BC", VA = "0x26461BC")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000753")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x2646F28", Offset = "0x2646F28", VA = "0x2646F28")]
		private void Start()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x2646FE0", Offset = "0x2646FE0", VA = "0x2646FE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x2647078", Offset = "0x2647078", VA = "0x2647078")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000101")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF318", Offset = "0xCDF318")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400075A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400075B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x400075C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x400075D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x400075E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x170000AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000999")]
				[Address(RVA = "0x26629A4", Offset = "0x26629A4", VA = "0x26629A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600099B")]
				[Address(RVA = "0x26629EC", Offset = "0x26629EC", VA = "0x26629EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000996")]
			[Address(RVA = "0x2662128", Offset = "0x2662128", VA = "0x2662128")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000997")]
			[Address(RVA = "0x2662154", Offset = "0x2662154", VA = "0x2662154", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000998")]
			[Address(RVA = "0x2662158", Offset = "0x2662158", VA = "0x2662158", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600099A")]
			[Address(RVA = "0x26629AC", Offset = "0x26629AC", VA = "0x26629AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x2647080", Offset = "0x2647080", VA = "0x2647080")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x26470E4", Offset = "0x26470E4", VA = "0x26470E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x264717C", Offset = "0x264717C", VA = "0x264717C")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x2647110", Offset = "0x2647110", VA = "0x2647110")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED564", Offset = "0xCED564")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x2647200", Offset = "0x2647200", VA = "0x2647200")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x2000103")]
		public enum objectType
		{
			[Token(Token = "0x4000765")]
			TextMeshPro,
			[Token(Token = "0x4000766")]
			TextMeshProUGUI
		}

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x4000762")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x264A69C", Offset = "0x264A69C", VA = "0x264A69C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x264A8B4", Offset = "0x264A8B4", VA = "0x264A8B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x264A94C", Offset = "0x264A94C", VA = "0x264A94C")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x2000105")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000772")]
			TopLeft,
			[Token(Token = "0x4000773")]
			BottomLeft,
			[Token(Token = "0x4000774")]
			TopRight,
			[Token(Token = "0x4000775")]
			BottomRight
		}

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x400076C")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x264A954", Offset = "0x264A954", VA = "0x264A954")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x264AD5C", Offset = "0x264AD5C", VA = "0x264AD5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x264AD88", Offset = "0x264AD88", VA = "0x264AD88")]
		private void Update()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x264AB54", Offset = "0x264AB54", VA = "0x264AB54")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x264AEE8", Offset = "0x264AEE8", VA = "0x264AEE8")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x264B310", Offset = "0x264B310", VA = "0x264B310")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x264B614", Offset = "0x264B614", VA = "0x264B614")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x264B8F0", Offset = "0x264B8F0", VA = "0x264B8F0")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x264BAE8", Offset = "0x264BAE8", VA = "0x264BAE8")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x264BCE0", Offset = "0x264BCE0", VA = "0x264BCE0")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x264BF40", Offset = "0x264BF40", VA = "0x264BF40")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x264C1A0", Offset = "0x264C1A0", VA = "0x264C1A0")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x264C45C", Offset = "0x264C45C", VA = "0x264C45C")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x264CEAC", Offset = "0x264CEAC", VA = "0x264CEAC")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x264CEB4", Offset = "0x264CEB4", VA = "0x264CEB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x264CF44", Offset = "0x264CF44", VA = "0x264CF44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x264D664", Offset = "0x264D664", VA = "0x264D664", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x264D6E8", Offset = "0x264D6E8", VA = "0x264D6E8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x264D768", Offset = "0x264D768", VA = "0x264D768")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x4000781")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4000782")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x264D780", Offset = "0x264D780", VA = "0x264D780")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x264D90C", Offset = "0x264D90C", VA = "0x264D90C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x264D9FC", Offset = "0x264D9FC", VA = "0x264D9FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x264DAEC", Offset = "0x264DAEC", VA = "0x264DAEC")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x264DB8C", Offset = "0x264DB8C", VA = "0x264DB8C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x264F084", Offset = "0x264F084", VA = "0x264F084", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x264F090", Offset = "0x264F090", VA = "0x264F090", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x264F098", Offset = "0x264F098", VA = "0x264F098", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x264F09C", Offset = "0x264F09C", VA = "0x264F09C", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x264E7F4", Offset = "0x264E7F4", VA = "0x264E7F4")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x264F0A0", Offset = "0x264F0A0", VA = "0x264F0A0")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200010B")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000796")]
			TopLeft,
			[Token(Token = "0x4000797")]
			BottomLeft,
			[Token(Token = "0x4000798")]
			TopRight,
			[Token(Token = "0x4000799")]
			BottomRight
		}

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000791")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x264F0B8", Offset = "0x264F0B8", VA = "0x264F0B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x264F4FC", Offset = "0x264F4FC", VA = "0x264F4FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x264F528", Offset = "0x264F528", VA = "0x264F528")]
		private void Update()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x264F2B8", Offset = "0x264F2B8", VA = "0x264F2B8")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x264F688", Offset = "0x264F688", VA = "0x264F688")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x200010D")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x40007A1")]
			TopLeft,
			[Token(Token = "0x40007A2")]
			BottomLeft,
			[Token(Token = "0x40007A3")]
			TopRight,
			[Token(Token = "0x40007A4")]
			BottomRight
		}

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x400079B")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x264F6A0", Offset = "0x264F6A0", VA = "0x264F6A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x264F8EC", Offset = "0x264F8EC", VA = "0x264F8EC")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x264FA14", Offset = "0x264FA14", VA = "0x264FA14")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x200010F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF328", Offset = "0xCDF328")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x40007AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x40007AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x170000AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009CB")]
				[Address(RVA = "0x2663388", Offset = "0x2663388", VA = "0x2663388", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009CD")]
				[Address(RVA = "0x26633D0", Offset = "0x26633D0", VA = "0x26633D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x2663128", Offset = "0x2663128", VA = "0x2663128")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60009C9")]
			[Address(RVA = "0x2663154", Offset = "0x2663154", VA = "0x2663154", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009CA")]
			[Address(RVA = "0x2663158", Offset = "0x2663158", VA = "0x2663158", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009CC")]
			[Address(RVA = "0x2663390", Offset = "0x2663390", VA = "0x2663390", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x264FA94", Offset = "0x264FA94", VA = "0x264FA94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x264FB28", Offset = "0x264FB28", VA = "0x264FB28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED614", Offset = "0xCED614")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x264FB94", Offset = "0x264FB94", VA = "0x264FB94")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x2000111")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF338", Offset = "0xCDF338")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x40007B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x40007B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40007B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x40007B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x170000B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009D9")]
				[Address(RVA = "0x266356C", Offset = "0x266356C", VA = "0x266356C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009DB")]
				[Address(RVA = "0x26635B4", Offset = "0x26635B4", VA = "0x26635B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009D6")]
			[Address(RVA = "0x26633D8", Offset = "0x26633D8", VA = "0x26633D8")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60009D7")]
			[Address(RVA = "0x2663404", Offset = "0x2663404", VA = "0x2663404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x2663408", Offset = "0x2663408", VA = "0x2663408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x2663574", Offset = "0x2663574", VA = "0x2663574", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000112")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF348", Offset = "0xCDF348")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x40007B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x40007BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x40007BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x40007BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x170000B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009DF")]
				[Address(RVA = "0x26637D4", Offset = "0x26637D4", VA = "0x26637D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009E1")]
				[Address(RVA = "0x266381C", Offset = "0x266381C", VA = "0x266381C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x26635BC", Offset = "0x26635BC", VA = "0x26635BC")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x26635E8", Offset = "0x26635E8", VA = "0x26635E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x26635EC", Offset = "0x26635EC", VA = "0x26635EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x26637DC", Offset = "0x26637DC", VA = "0x26637DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x264FC04", Offset = "0x264FC04", VA = "0x264FC04")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x264FC68", Offset = "0x264FC68", VA = "0x264FC68")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x264FD10", Offset = "0x264FD10", VA = "0x264FD10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x264FE00", Offset = "0x264FE00", VA = "0x264FE00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x264FEF0", Offset = "0x264FEF0", VA = "0x264FEF0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x264FC98", Offset = "0x264FC98", VA = "0x264FC98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED6C4", Offset = "0xCED6C4")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x264FEFC", Offset = "0x264FEFC", VA = "0x264FEFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED724", Offset = "0xCED724")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x264FF68", Offset = "0x264FF68", VA = "0x264FF68")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x2000114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF358", Offset = "0xCDF358")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x40007CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x40007CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x40007CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x40007CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x40007CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x40007CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x40007D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170000B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009EA")]
				[Address(RVA = "0x266411C", Offset = "0x266411C", VA = "0x266411C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009EC")]
				[Address(RVA = "0x2664164", Offset = "0x2664164", VA = "0x2664164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x2663CBC", Offset = "0x2663CBC", VA = "0x2663CBC")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x2663CE8", Offset = "0x2663CE8", VA = "0x2663CE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x2663CEC", Offset = "0x2663CEC", VA = "0x2663CEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x2664124", Offset = "0x2664124", VA = "0x2664124", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000115")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF368", Offset = "0xCDF368")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x40007D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x40007D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x40007D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x40007D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x40007D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x40007D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x40007DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170000B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009F0")]
				[Address(RVA = "0x2663C6C", Offset = "0x2663C6C", VA = "0x2663C6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009F2")]
				[Address(RVA = "0x2663CB4", Offset = "0x2663CB4", VA = "0x2663CB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x2663824", Offset = "0x2663824", VA = "0x2663824")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x2663850", Offset = "0x2663850", VA = "0x2663850", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x2663854", Offset = "0x2663854", VA = "0x2663854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x2663C74", Offset = "0x2663C74", VA = "0x2663C74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x264FF70", Offset = "0x264FF70", VA = "0x264FF70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x2650038", Offset = "0x2650038", VA = "0x2650038")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x2650410", Offset = "0x2650410", VA = "0x2650410")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED824", Offset = "0xCED824")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x265047C", Offset = "0x265047C", VA = "0x265047C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED884", Offset = "0xCED884")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x26504E8", Offset = "0x26504E8", VA = "0x26504E8")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x265052C", Offset = "0x265052C", VA = "0x265052C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x2650530", Offset = "0x2650530", VA = "0x2650530")]
		private void Start()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x2650850", Offset = "0x2650850", VA = "0x2650850")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x2000118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF378", Offset = "0xCDF378")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x40007E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40007E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x170000B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009FD")]
				[Address(RVA = "0x274A750", Offset = "0x274A750", VA = "0x274A750", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009FF")]
				[Address(RVA = "0x274A798", Offset = "0x274A798", VA = "0x274A798", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x274A468", Offset = "0x274A468", VA = "0x274A468")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x274A494", Offset = "0x274A494", VA = "0x274A494", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x274A498", Offset = "0x274A498", VA = "0x274A498", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x274A758", Offset = "0x274A758", VA = "0x274A758", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x2611844", Offset = "0x2611844", VA = "0x2611844")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x2611898", Offset = "0x2611898", VA = "0x2611898")]
		private void Start()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x26118C4", Offset = "0x26118C4", VA = "0x26118C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCED984", Offset = "0xCED984")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x2611930", Offset = "0x2611930", VA = "0x2611930")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x200011A")]
		private struct VertexAnim
		{
			[Token(Token = "0x40007EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x40007EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x40007EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x200011B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF388", Offset = "0xCDF388")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x40007F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40007F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x40007F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x40007F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x170000BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A0A")]
				[Address(RVA = "0x274B008", Offset = "0x274B008", VA = "0x274B008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A0C")]
				[Address(RVA = "0x274B050", Offset = "0x274B050", VA = "0x274B050", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A07")]
			[Address(RVA = "0x274A7A0", Offset = "0x274A7A0", VA = "0x274A7A0")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000A08")]
			[Address(RVA = "0x274A7CC", Offset = "0x274A7CC", VA = "0x274A7CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A09")]
			[Address(RVA = "0x274A7D0", Offset = "0x274A7D0", VA = "0x274A7D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x274B010", Offset = "0x274B010", VA = "0x274B010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x2611938", Offset = "0x2611938", VA = "0x2611938")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x261198C", Offset = "0x261198C", VA = "0x261198C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x2611A7C", Offset = "0x2611A7C", VA = "0x2611A7C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x2611B6C", Offset = "0x2611B6C", VA = "0x2611B6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x2611C04", Offset = "0x2611C04", VA = "0x2611C04")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x2611B98", Offset = "0x2611B98", VA = "0x2611B98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEDA34", Offset = "0xCEDA34")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x2611C8C", Offset = "0x2611C8C", VA = "0x2611C8C")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x200011D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF398", Offset = "0xCDF398")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x40007FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40007FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170000BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A17")]
				[Address(RVA = "0x274BA58", Offset = "0x274BA58", VA = "0x274BA58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A19")]
				[Address(RVA = "0x274BAA0", Offset = "0x274BAA0", VA = "0x274BAA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A14")]
			[Address(RVA = "0x274B058", Offset = "0x274B058", VA = "0x274B058")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x274B084", Offset = "0x274B084", VA = "0x274B084", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A16")]
			[Address(RVA = "0x274B088", Offset = "0x274B088", VA = "0x274B088", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A18")]
			[Address(RVA = "0x274BA60", Offset = "0x274BA60", VA = "0x274BA60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x2611CA4", Offset = "0x2611CA4", VA = "0x2611CA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x2611CF8", Offset = "0x2611CF8", VA = "0x2611CF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x2611DE8", Offset = "0x2611DE8", VA = "0x2611DE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x2611ED8", Offset = "0x2611ED8", VA = "0x2611ED8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x2611F70", Offset = "0x2611F70", VA = "0x2611F70")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x2611F04", Offset = "0x2611F04", VA = "0x2611F04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEDAE4", Offset = "0xCEDAE4")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x2611FE8", Offset = "0x2611FE8", VA = "0x2611FE8")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x200011F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF3A8", Offset = "0xCDF3A8")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x4000807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170000BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A24")]
				[Address(RVA = "0x274C93C", Offset = "0x274C93C", VA = "0x274C93C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A26")]
				[Address(RVA = "0x274C984", Offset = "0x274C984", VA = "0x274C984", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x274BAA8", Offset = "0x274BAA8", VA = "0x274BAA8")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x274BAD4", Offset = "0x274BAD4", VA = "0x274BAD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x274BAD8", Offset = "0x274BAD8", VA = "0x274BAD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x274C944", Offset = "0x274C944", VA = "0x274C944", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x2611FF8", Offset = "0x2611FF8", VA = "0x2611FF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x261204C", Offset = "0x261204C", VA = "0x261204C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x261213C", Offset = "0x261213C", VA = "0x261213C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x261222C", Offset = "0x261222C", VA = "0x261222C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x26122C4", Offset = "0x26122C4", VA = "0x26122C4")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x2612258", Offset = "0x2612258", VA = "0x2612258")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEDB94", Offset = "0xCEDB94")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x261233C", Offset = "0x261233C", VA = "0x261233C")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x2000121")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF3B8", Offset = "0xCDF3B8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400080E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x400080F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x274C98C", Offset = "0x274C98C", VA = "0x274C98C")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x274C994", Offset = "0x274C994", VA = "0x274C994")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000122")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF3C8", Offset = "0xCDF3C8")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x4000813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4000814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4000816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x170000C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A33")]
				[Address(RVA = "0x274D5C8", Offset = "0x274D5C8", VA = "0x274D5C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A35")]
				[Address(RVA = "0x274D610", Offset = "0x274D610", VA = "0x274D610", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x274CA54", Offset = "0x274CA54", VA = "0x274CA54")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x274CA80", Offset = "0x274CA80", VA = "0x274CA80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x274CA84", Offset = "0x274CA84", VA = "0x274CA84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x274D5D0", Offset = "0x274D5D0", VA = "0x274D5D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x2612354", Offset = "0x2612354", VA = "0x2612354")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x26123A8", Offset = "0x26123A8", VA = "0x26123A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x2612498", Offset = "0x2612498", VA = "0x2612498")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x2612588", Offset = "0x2612588", VA = "0x2612588")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x2612620", Offset = "0x2612620", VA = "0x2612620")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x26125B4", Offset = "0x26125B4", VA = "0x26125B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEDC44", Offset = "0xCEDC44")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x26126A8", Offset = "0x26126A8", VA = "0x26126A8")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF3D8", Offset = "0xCDF3D8")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400081C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400081D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400081E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x400081F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4000820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x170000C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A3E")]
				[Address(RVA = "0x274E944", Offset = "0x274E944", VA = "0x274E944", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A40")]
				[Address(RVA = "0x274E98C", Offset = "0x274E98C", VA = "0x274E98C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x274E160", Offset = "0x274E160", VA = "0x274E160")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x274E18C", Offset = "0x274E18C", VA = "0x274E18C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x274E190", Offset = "0x274E190", VA = "0x274E190", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0x274E94C", Offset = "0x274E94C", VA = "0x274E94C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x261598C", Offset = "0x261598C", VA = "0x261598C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x26159F0", Offset = "0x26159F0", VA = "0x26159F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x2615A88", Offset = "0x2615A88", VA = "0x2615A88")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x2615A1C", Offset = "0x2615A1C", VA = "0x2615A1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEDCF4", Offset = "0xCEDCF4")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x2615B0C", Offset = "0x2615B0C", VA = "0x2615B0C")]
		public WarpTextExample()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x2000125")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF3E8", Offset = "0xCDF3E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF3E8", Offset = "0xCDF3E8")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000126")]
		public enum Mode
		{
			[Token(Token = "0x4000830")]
			AnimationClips,
			[Token(Token = "0x4000831")]
			AnimationStates,
			[Token(Token = "0x4000832")]
			PlayableDirector,
			[Token(Token = "0x4000833")]
			Realtime
		}

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE22D0", Offset = "0xCE22D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE22D0", Offset = "0xCE22D0")]
		public int frameRate;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2328", Offset = "0xCE2328")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE2328", Offset = "0xCE2328")]
		public float keyReductionError;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2380", Offset = "0xCE2380")]
		public Mode mode;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE23B8", Offset = "0xCE23B8")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE23F0", Offset = "0xCE23F0")]
		public string[] animationStates;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2428", Offset = "0xCE2428")]
		public bool loop;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2460", Offset = "0xCE2460")]
		public string saveToFolder;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2498", Offset = "0xCE2498")]
		public string appendName;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE24D0", Offset = "0xCE24D0")]
		public string saveName;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE2508", Offset = "0xCE2508")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE2518", Offset = "0xCE2518")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE2548", Offset = "0xCE2548")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x170000C5")]
		public bool isBaking
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x2704320", Offset = "0x2704320", VA = "0x2704320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDE84", Offset = "0xCEDE84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x2704328", Offset = "0x2704328", VA = "0x2704328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDE94", Offset = "0xCEDE94")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public float bakingProgress
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x2704334", Offset = "0x2704334", VA = "0x2704334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDEA4", Offset = "0xCEDEA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x270433C", Offset = "0x270433C", VA = "0x270433C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDEB4", Offset = "0xCEDEB4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		protected float clipLength
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x2704344", Offset = "0x2704344", VA = "0x2704344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDEC4", Offset = "0xCEDEC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x270434C", Offset = "0x270434C", VA = "0x270434C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDED4", Offset = "0xCEDED4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x2704200", Offset = "0x2704200", VA = "0x2704200")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEDDA4", Offset = "0xCEDDA4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x2704248", Offset = "0x2704248", VA = "0x2704248")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEDDDC", Offset = "0xCEDDDC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x2704290", Offset = "0x2704290", VA = "0x2704290")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEDE14", Offset = "0xCEDE14")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x27042D8", Offset = "0x27042D8", VA = "0x27042D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEDE4C", Offset = "0xCEDE4C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A49")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x6000A4A")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x6000A4B")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x6000A4C")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x6000A4D")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x2704354", Offset = "0x2704354", VA = "0x2704354")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x2704358", Offset = "0x2704358", VA = "0x2704358")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x270435C", Offset = "0x270435C", VA = "0x270435C")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x2704360", Offset = "0x2704360", VA = "0x2704360")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2558", Offset = "0xCE2558")]
		public bool markAsLegacy;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2590", Offset = "0xCE2590")]
		public Transform root;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE25C8", Offset = "0xCE25C8")]
		public Transform rootNode;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2600", Offset = "0xCE2600")]
		public Transform[] ignoreList;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2638", Offset = "0xCE2638")]
		public Transform[] bakePositionList;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x268BA2C", Offset = "0x268BA2C", VA = "0x268BA2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x268BE1C", Offset = "0x268BE1C", VA = "0x268BE1C", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x268BE24", Offset = "0x268BE24", VA = "0x268BE24", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x268BF34", Offset = "0x268BF34", VA = "0x268BF34", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x268BFB0", Offset = "0x268BFB0", VA = "0x268BFB0", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x268C02C", Offset = "0x268C02C", VA = "0x268C02C", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x268BC74", Offset = "0x268BC74", VA = "0x268BC74")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x268BD48", Offset = "0x268BD48", VA = "0x268BD48")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x268C0A8", Offset = "0x268C0A8", VA = "0x268C0A8")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class TQ
	{
		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x264FA24", Offset = "0x264FA24", VA = "0x264FA24")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class AvatarUtility
	{
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x2702020", Offset = "0x2702020", VA = "0x2702020")]
		public static Quaternion GetPostRotation(Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x270227C", Offset = "0x270227C", VA = "0x270227C")]
		public static TQ GetIKGoalTQ(Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x270225C", Offset = "0x270225C", VA = "0x270225C")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x2702828", Offset = "0x2702828", VA = "0x2702828")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public static class BakerUtilities
	{
		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x27055DC", Offset = "0x27055DC", VA = "0x27055DC")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x2706E94", Offset = "0x2706E94", VA = "0x2706E94")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x2705030", Offset = "0x2705030", VA = "0x2705030")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x2705624", Offset = "0x2705624", VA = "0x2705624")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x2704B60", Offset = "0x2704B60", VA = "0x2704B60")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200012B")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x270444C", Offset = "0x270444C", VA = "0x270444C")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x27046B8", Offset = "0x27046B8", VA = "0x27046B8")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x27045B0", Offset = "0x27045B0", VA = "0x27045B0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x2704834", Offset = "0x2704834", VA = "0x2704834")]
		public void SetIKKeyframes(float time, Avatar avatar, Transform root, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x2704DC4", Offset = "0x2704DC4", VA = "0x2704DC4")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x2704EC0", Offset = "0x2704EC0", VA = "0x2704EC0")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x2704FBC", Offset = "0x2704FBC", VA = "0x2704FBC")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x2704F34", Offset = "0x2704F34", VA = "0x2704F34")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x2705228", Offset = "0x2705228", VA = "0x2705228")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x27052DC", Offset = "0x27052DC", VA = "0x27052DC")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012C")]
	public class BakerMuscle
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x2705628", Offset = "0x2705628", VA = "0x2705628")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x2705698", Offset = "0x2705698", VA = "0x2705698")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x270612C", Offset = "0x270612C", VA = "0x270612C")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x27061E0", Offset = "0x27061E0", VA = "0x27061E0")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x27060D0", Offset = "0x27060D0", VA = "0x27060D0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x27062D8", Offset = "0x27062D8", VA = "0x27062D8")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x2706320", Offset = "0x2706320", VA = "0x2706320")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012D")]
	public class BakerTransform
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x2706328", Offset = "0x2706328", VA = "0x2706328")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x27064B4", Offset = "0x27064B4", VA = "0x27064B4")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x27064C8", Offset = "0x27064C8", VA = "0x27064C8")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x27067B4", Offset = "0x27067B4", VA = "0x27067B4")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x27063C0", Offset = "0x27063C0", VA = "0x27063C0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x2706A68", Offset = "0x2706A68", VA = "0x2706A68")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x2706ADC", Offset = "0x2706ADC", VA = "0x2706ADC")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x2706C90", Offset = "0x2706C90", VA = "0x2706C90")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2670", Offset = "0xCE2670")]
		public bool bakeHandIK;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE26A8", Offset = "0xCE26A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE26A8", Offset = "0xCE26A8")]
		public float IKKeyReductionError;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE2700", Offset = "0xCE2700")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2700", Offset = "0xCE2700")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x2754C48", Offset = "0x2754C48", VA = "0x2754C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x2755124", Offset = "0x2755124", VA = "0x2755124", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x2755140", Offset = "0x2755140", VA = "0x2755140", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x275521C", Offset = "0x275521C", VA = "0x275521C", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x27552F8", Offset = "0x27552F8", VA = "0x27552F8", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x27554C8", Offset = "0x27554C8", VA = "0x27554C8", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x2755800", Offset = "0x2755800", VA = "0x2755800")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x27558DC", Offset = "0x27558DC", VA = "0x27558DC")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000130")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000897")]
			Update,
			[Token(Token = "0x4000898")]
			FixedUpdate,
			[Token(Token = "0x4000899")]
			LateUpdate,
			[Token(Token = "0x400089A")]
			FixedLateUpdate
		}

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE2754", Offset = "0xCE2754")]
		public bool smoothFollow;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE278C", Offset = "0xCE278C")]
		public float rotationSensitivity;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE27C4", Offset = "0xCE27C4")]
		public float distance;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE27FC", Offset = "0xCE27FC")]
		public LayerMask blockingLayers;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float blockingOriginOffset;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE2834", Offset = "0xCE2834")]
		public float blockedOffset;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE284C", Offset = "0xCE284C")]
		private float <x>k__BackingField;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE285C", Offset = "0xCE285C")]
		private float <y>k__BackingField;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE286C", Offset = "0xCE286C")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 targetDistance;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 position;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion rotation;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 smoothPosition;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x170000C8")]
		public float x
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0x2710A80", Offset = "0x2710A80", VA = "0x2710A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDEE4", Offset = "0xCEDEE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0x2710A88", Offset = "0x2710A88", VA = "0x2710A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDEF4", Offset = "0xCEDEF4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public float y
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0x2710A90", Offset = "0x2710A90", VA = "0x2710A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDF04", Offset = "0xCEDF04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x2710A98", Offset = "0x2710A98", VA = "0x2710A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDF14", Offset = "0xCEDF14")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public float distanceTarget
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x2710AA0", Offset = "0x2710AA0", VA = "0x2710AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDF24", Offset = "0xCEDF24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x2710AA8", Offset = "0x2710AA8", VA = "0x2710AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDF34", Offset = "0xCEDF34")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		private float zoomAdd
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x2711364", Offset = "0x2711364", VA = "0x2711364")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x2710AB0", Offset = "0x2710AB0", VA = "0x2710AB0")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x2710AEC", Offset = "0x2710AEC", VA = "0x2710AEC")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x2710AF4", Offset = "0x2710AF4", VA = "0x2710AF4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x2710BF8", Offset = "0x2710BF8", VA = "0x2710BF8", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x2710C54", Offset = "0x2710C54", VA = "0x2710C54", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x2710CBC", Offset = "0x2710CBC", VA = "0x2710CBC", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x2710D20", Offset = "0x2710D20", VA = "0x2710D20")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x2710C2C", Offset = "0x2710C2C", VA = "0x2710C2C")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x2710E80", Offset = "0x2710E80", VA = "0x2710E80")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x2711334", Offset = "0x2711334", VA = "0x2711334")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x27113D4", Offset = "0x27113D4", VA = "0x27113D4")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x27120F8", Offset = "0x27120F8", VA = "0x27120F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x2712130", Offset = "0x2712130", VA = "0x2712130")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x27122CC", Offset = "0x27122CC", VA = "0x27122CC")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x27122FC", Offset = "0x27122FC", VA = "0x27122FC")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000132")]
	public enum Axis
	{
		[Token(Token = "0x40008A1")]
		X,
		[Token(Token = "0x40008A2")]
		Y,
		[Token(Token = "0x40008A3")]
		Z
	}
	[Token(Token = "0x2000133")]
	public class AxisTools
	{
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x270307C", Offset = "0x270307C", VA = "0x270307C")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x27030A0", Offset = "0x27030A0", VA = "0x27030A0")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x27030D8", Offset = "0x27030D8", VA = "0x27030D8")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x27031C8", Offset = "0x27031C8", VA = "0x27031C8")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x2703170", Offset = "0x2703170", VA = "0x2703170")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x2703260", Offset = "0x2703260", VA = "0x2703260")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x27032A8", Offset = "0x27032A8", VA = "0x27032A8")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x270346C", Offset = "0x270346C", VA = "0x270346C")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000134")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x2000135")]
		public class LimbOrientation
		{
			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x40008AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x271ECBC", Offset = "0x271ECBC", VA = "0x271ECBC")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x170000CC")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x27092D4", Offset = "0x27092D4", VA = "0x27092D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x2709540", Offset = "0x2709540", VA = "0x2709540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x2709288", Offset = "0x2709288", VA = "0x2709288")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x2000136")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x2000137")]
		public enum BoneType
		{
			[Token(Token = "0x40008BE")]
			Unassigned,
			[Token(Token = "0x40008BF")]
			Spine,
			[Token(Token = "0x40008C0")]
			Head,
			[Token(Token = "0x40008C1")]
			Arm,
			[Token(Token = "0x40008C2")]
			Leg,
			[Token(Token = "0x40008C3")]
			Tail,
			[Token(Token = "0x40008C4")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x2000138")]
		public enum BoneSide
		{
			[Token(Token = "0x40008C6")]
			Center,
			[Token(Token = "0x40008C7")]
			Left,
			[Token(Token = "0x40008C8")]
			Right
		}

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x27097AC", Offset = "0x27097AC", VA = "0x27097AC")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x2709AC8", Offset = "0x2709AC8", VA = "0x2709AC8")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x2709D34", Offset = "0x2709D34", VA = "0x2709D34")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x2709DB4", Offset = "0x2709DB4", VA = "0x2709DB4")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x2709E5C", Offset = "0x2709E5C", VA = "0x2709E5C")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x270997C", Offset = "0x270997C", VA = "0x270997C")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x2709C98", Offset = "0x2709C98", VA = "0x2709C98")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x270A68C", Offset = "0x270A68C", VA = "0x270A68C")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x270A494", Offset = "0x270A494", VA = "0x270A494")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x270A590", Offset = "0x270A590", VA = "0x270A590")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x270A074", Offset = "0x270A074", VA = "0x270A074")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x270A124", Offset = "0x270A124", VA = "0x270A124")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x270A1D4", Offset = "0x270A1D4", VA = "0x270A1D4")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x270A284", Offset = "0x270A284", VA = "0x270A284")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x270A334", Offset = "0x270A334", VA = "0x270A334")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x270A3E4", Offset = "0x270A3E4", VA = "0x270A3E4")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x270A894", Offset = "0x270A894", VA = "0x270A894")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x2709F8C", Offset = "0x2709F8C", VA = "0x2709F8C")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x270A804", Offset = "0x270A804", VA = "0x270A804")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x270A900", Offset = "0x270A900", VA = "0x270A900")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x270A9D4", Offset = "0x270A9D4", VA = "0x270A9D4")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x270A78C", Offset = "0x270A78C", VA = "0x270A78C")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x270A718", Offset = "0x270A718", VA = "0x270A718")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000139")]
	public class BipedReferences
	{
		[Token(Token = "0x200013A")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x170000D0")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x6000ADB")]
				[Address(RVA = "0x271ED48", Offset = "0x271ED48", VA = "0x271ED48")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x271ED34", Offset = "0x271ED34", VA = "0x271ED34")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x170000CE")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x270CA18", Offset = "0x270CA18", VA = "0x270CA18", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CF")]
		public bool isEmpty
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x270CE00", Offset = "0x270CE00", VA = "0x270CE00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x270CE10", Offset = "0x270CE10", VA = "0x270CE10", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x270D238", Offset = "0x270D238", VA = "0x270D238", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x270D66C", Offset = "0x270D66C", VA = "0x270D66C")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x270DC58", Offset = "0x270DC58", VA = "0x270DC58")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x270D880", Offset = "0x270D880", VA = "0x270D880")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x2708A84", Offset = "0x2708A84", VA = "0x2708A84")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x270E458", Offset = "0x270E458", VA = "0x270E458")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x270E9B8", Offset = "0x270E9B8", VA = "0x270E9B8")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x270E7AC", Offset = "0x270E7AC", VA = "0x270E7AC")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x270E628", Offset = "0x270E628", VA = "0x270E628")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x270E4F8", Offset = "0x270E4F8", VA = "0x270E4F8")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x270E8B8", Offset = "0x270E8B8", VA = "0x270E8B8")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x270EAB0", Offset = "0x270EAB0", VA = "0x270EAB0")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x270F5D4", Offset = "0x270F5D4", VA = "0x270F5D4")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x270F05C", Offset = "0x270F05C", VA = "0x270F05C")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x270F87C", Offset = "0x270F87C", VA = "0x270F87C")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x270F3C8", Offset = "0x270F3C8", VA = "0x270F3C8")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x270F884", Offset = "0x270F884", VA = "0x270F884")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x270F88C", Offset = "0x270F88C", VA = "0x270F88C")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x270FA54", Offset = "0x270FA54", VA = "0x270FA54")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x270FC10", Offset = "0x270FC10", VA = "0x270FC10")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x2708EE0", Offset = "0x2708EE0", VA = "0x2708EE0")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x26BED64", Offset = "0x26BED64", VA = "0x26BED64")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x26C6CCC", Offset = "0x26C6CCC", VA = "0x26C6CCC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x26C6E14", Offset = "0x26C6E14", VA = "0x26C6E14")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class Hierarchy
	{
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x27533D4", Offset = "0x27533D4", VA = "0x27533D4")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x27535C0", Offset = "0x27535C0", VA = "0x27535C0")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x275346C", Offset = "0x275346C", VA = "0x275346C")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x27536E0", Offset = "0x27536E0", VA = "0x27536E0")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x275380C", Offset = "0x275380C", VA = "0x275380C")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x2753A58", Offset = "0x2753A58", VA = "0x2753A58")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x2753B60", Offset = "0x2753B60", VA = "0x2753B60")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x2753CD4", Offset = "0x2753CD4", VA = "0x2753CD4")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x27540B0", Offset = "0x27540B0", VA = "0x27540B0")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x2753E74", Offset = "0x2753E74", VA = "0x2753E74")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x2754264", Offset = "0x2754264", VA = "0x2754264")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x230226C", Offset = "0x230226C", VA = "0x230226C")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x23022D8", Offset = "0x23022D8", VA = "0x23022D8")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013F")]
	public enum InterpolationMode
	{
		[Token(Token = "0x40008E2")]
		None,
		[Token(Token = "0x40008E3")]
		InOutCubic,
		[Token(Token = "0x40008E4")]
		InOutQuintic,
		[Token(Token = "0x40008E5")]
		InOutSine,
		[Token(Token = "0x40008E6")]
		InQuintic,
		[Token(Token = "0x40008E7")]
		InQuartic,
		[Token(Token = "0x40008E8")]
		InCubic,
		[Token(Token = "0x40008E9")]
		InQuadratic,
		[Token(Token = "0x40008EA")]
		InElastic,
		[Token(Token = "0x40008EB")]
		InElasticSmall,
		[Token(Token = "0x40008EC")]
		InElasticBig,
		[Token(Token = "0x40008ED")]
		InSine,
		[Token(Token = "0x40008EE")]
		InBack,
		[Token(Token = "0x40008EF")]
		OutQuintic,
		[Token(Token = "0x40008F0")]
		OutQuartic,
		[Token(Token = "0x40008F1")]
		OutCubic,
		[Token(Token = "0x40008F2")]
		OutInCubic,
		[Token(Token = "0x40008F3")]
		OutInQuartic,
		[Token(Token = "0x40008F4")]
		OutElastic,
		[Token(Token = "0x40008F5")]
		OutElasticSmall,
		[Token(Token = "0x40008F6")]
		OutElasticBig,
		[Token(Token = "0x40008F7")]
		OutSine,
		[Token(Token = "0x40008F8")]
		OutBack,
		[Token(Token = "0x40008F9")]
		OutBackCubic,
		[Token(Token = "0x40008FA")]
		OutBackQuartic,
		[Token(Token = "0x40008FB")]
		BackInCubic,
		[Token(Token = "0x40008FC")]
		BackInQuartic
	}
	[Token(Token = "0x2000140")]
	public class Interp
	{
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x26ED788", Offset = "0x26ED788", VA = "0x26ED788")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x26F3E80", Offset = "0x26F3E80", VA = "0x26F3E80")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x26F3EF4", Offset = "0x26F3EF4", VA = "0x26F3EF4")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x26F38E8", Offset = "0x26F38E8", VA = "0x26F38E8")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x26F38F4", Offset = "0x26F38F4", VA = "0x26F38F4")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x26F3918", Offset = "0x26F3918", VA = "0x26F3918")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x26F3954", Offset = "0x26F3954", VA = "0x26F3954")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x26F396C", Offset = "0x26F396C", VA = "0x26F396C")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x26F3980", Offset = "0x26F3980", VA = "0x26F3980")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x26F3994", Offset = "0x26F3994", VA = "0x26F3994")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x26F39A4", Offset = "0x26F39A4", VA = "0x26F39A4")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x26F39EC", Offset = "0x26F39EC", VA = "0x26F39EC")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x26F3A24", Offset = "0x26F3A24", VA = "0x26F3A24")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x26F3A4C", Offset = "0x26F3A4C", VA = "0x26F3A4C")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x26F3F80", Offset = "0x26F3F80", VA = "0x26F3F80")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x26F3A80", Offset = "0x26F3A80", VA = "0x26F3A80")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x26F3AA8", Offset = "0x26F3AA8", VA = "0x26F3AA8")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x26F3AD8", Offset = "0x26F3AD8", VA = "0x26F3AD8")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x26F3B0C", Offset = "0x26F3B0C", VA = "0x26F3B0C")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x26F3B50", Offset = "0x26F3B50", VA = "0x26F3B50")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x26F3BB4", Offset = "0x26F3BB4", VA = "0x26F3BB4")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x26F3C18", Offset = "0x26F3C18", VA = "0x26F3C18")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x26F3C6C", Offset = "0x26F3C6C", VA = "0x26F3C6C")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x26F3CC0", Offset = "0x26F3CC0", VA = "0x26F3CC0")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x26F3CFC", Offset = "0x26F3CFC", VA = "0x26F3CFC")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x26F3D34", Offset = "0x26F3D34", VA = "0x26F3D34")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x26F3FB4", Offset = "0x26F3FB4", VA = "0x26F3FB4")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x26F3D7C", Offset = "0x26F3D7C", VA = "0x26F3D7C")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x26F3E10", Offset = "0x26F3E10", VA = "0x26F3E10")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x26F3E40", Offset = "0x26F3E40", VA = "0x26F3E40")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x26F4048", Offset = "0x26F4048", VA = "0x26F4048")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x26F6624", Offset = "0x26F6624", VA = "0x26F6624")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x26F6690", Offset = "0x26F6690", VA = "0x26F6690")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x2000142")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x26F6A1C", Offset = "0x26F6A1C", VA = "0x26F6A1C")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x26F6A74", Offset = "0x26F6A74", VA = "0x26F6A74")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x26F6B40", Offset = "0x26F6B40", VA = "0x26F6B40")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x26F6A8C", Offset = "0x26F6A8C", VA = "0x26F6A8C")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x26F6B58", Offset = "0x26F6B58", VA = "0x26F6B58")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x26F6BFC", Offset = "0x26F6BFC", VA = "0x26F6BFC")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x26F6C28", Offset = "0x26F6C28", VA = "0x26F6C28")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x26F6C78", Offset = "0x26F6C78", VA = "0x26F6C78")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x26F6CE4", Offset = "0x26F6CE4", VA = "0x26F6CE4")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x26F6DF8", Offset = "0x26F6DF8", VA = "0x26F6DF8")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x26F6EF0", Offset = "0x26F6EF0", VA = "0x26F6EF0")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x26F6F4C", Offset = "0x26F6F4C", VA = "0x26F6F4C")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x2000143")]
	public static class QuaTools
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x2678F04", Offset = "0x2678F04", VA = "0x2678F04")]
		public static float GetYaw(Quaternion space, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x2678F60", Offset = "0x2678F60", VA = "0x2678F60")]
		public static float GetPitch(Quaternion space, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x2678FF0", Offset = "0x2678FF0", VA = "0x2678FF0")]
		public static float GetBank(Quaternion space, Vector3 forward, Vector3 up)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x2679150", Offset = "0x2679150", VA = "0x2679150")]
		public static float GetYaw(Quaternion space, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x267920C", Offset = "0x267920C", VA = "0x267920C")]
		public static float GetPitch(Quaternion space, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x26792C8", Offset = "0x26792C8", VA = "0x26792C8")]
		public static float GetBank(Quaternion space, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x2679474", Offset = "0x2679474", VA = "0x2679474")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x26794C4", Offset = "0x26794C4", VA = "0x26794C4")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x2679514", Offset = "0x2679514", VA = "0x2679514")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x26795BC", Offset = "0x26795BC", VA = "0x26795BC")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x2679664", Offset = "0x2679664", VA = "0x2679664")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x2679744", Offset = "0x2679744", VA = "0x2679744")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x2679798", Offset = "0x2679798", VA = "0x2679798")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x267986C", Offset = "0x267986C", VA = "0x267986C")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x267997C", Offset = "0x267997C", VA = "0x267997C")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x2679B0C", Offset = "0x2679B0C", VA = "0x2679B0C")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x2679C00", Offset = "0x2679C00", VA = "0x2679C00")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x2679D0C", Offset = "0x2679D0C", VA = "0x2679D0C")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x2679DF8", Offset = "0x2679DF8", VA = "0x2679DF8")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000144")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x170000D1")]
		public static T instance
		{
			[Token(Token = "0x6000B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B2D")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B2E")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE288C", Offset = "0xCE288C")]
		public bool fixTransforms;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x170000D2")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x2647870", Offset = "0x2647870", VA = "0x2647870")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D3")]
		private bool isAnimated
		{
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x2647B7C", Offset = "0x2647B7C", VA = "0x2647B7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x264772C", Offset = "0x264772C", VA = "0x264772C")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x26477CC", Offset = "0x26477CC", VA = "0x26477CC", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x26477D0", Offset = "0x26477D0", VA = "0x26477D0", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x26477D4", Offset = "0x26477D4", VA = "0x26477D4", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x26477D8", Offset = "0x26477D8", VA = "0x26477D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x2647868", Offset = "0x2647868", VA = "0x2647868")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x264786C", Offset = "0x264786C", VA = "0x264786C")]
		public void CallInitiate()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x2647810", Offset = "0x2647810", VA = "0x2647810")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x2647B30", Offset = "0x2647B30", VA = "0x2647B30")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x264795C", Offset = "0x264795C", VA = "0x264795C")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x2647C34", Offset = "0x2647C34", VA = "0x2647C34")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x2647C90", Offset = "0x2647C90", VA = "0x2647C90")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x2647CEC", Offset = "0x2647CEC", VA = "0x2647CEC")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x2647D34", Offset = "0x2647D34", VA = "0x2647D34")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x2603F24", Offset = "0x2603F24", VA = "0x2603F24")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x2603FE4", Offset = "0x2603FE4", VA = "0x2603FE4")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x26040A4", Offset = "0x26040A4", VA = "0x26040A4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x2604164", Offset = "0x2604164", VA = "0x2604164")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public static class V2Tools
	{
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x260B0D0", Offset = "0x260B0D0", VA = "0x260B0D0")]
		public static Vector2 XZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x260B0D8", Offset = "0x260B0D8", VA = "0x260B0D8")]
		public static float DeltaAngle(Vector2 dir1, Vector2 dir2)
		{
			return default(float);
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x260B128", Offset = "0x260B128", VA = "0x260B128")]
		public static float DeltaAngleXZ(Vector3 dir1, Vector3 dir2)
		{
			return default(float);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x260B17C", Offset = "0x260B17C", VA = "0x260B17C")]
		public static bool LineCircleIntersect(Vector2 p1, Vector2 p2, Vector2 c, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x260B254", Offset = "0x260B254", VA = "0x260B254")]
		public static bool RayCircleIntersect(Vector2 p1, Vector2 dir, Vector2 c, float r)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000148")]
	public static class V3Tools
	{
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x260B2E8", Offset = "0x260B2E8", VA = "0x260B2E8")]
		public static float GetYaw(Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x260B30C", Offset = "0x260B30C", VA = "0x260B30C")]
		public static float GetPitch(Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x260B354", Offset = "0x260B354", VA = "0x260B354")]
		public static float GetBank(Vector3 forward, Vector3 up)
		{
			return default(float);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x260B3E0", Offset = "0x260B3E0", VA = "0x260B3E0")]
		public static float GetYaw(Vector3 spaceForward, Vector3 spaceUp, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x260B440", Offset = "0x260B440", VA = "0x260B440")]
		public static float GetPitch(Vector3 spaceForward, Vector3 spaceUp, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x260B4A0", Offset = "0x260B4A0", VA = "0x260B4A0")]
		public static float GetBank(Vector3 spaceForward, Vector3 spaceUp, Vector3 forward, Vector3 up)
		{
			return default(float);
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x260B5BC", Offset = "0x260B5BC", VA = "0x260B5BC")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x260B65C", Offset = "0x260B65C", VA = "0x260B65C")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x260B698", Offset = "0x260B698", VA = "0x260B698")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x260B6DC", Offset = "0x260B6DC", VA = "0x260B6DC")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x260B778", Offset = "0x260B778", VA = "0x260B778")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x260B8D4", Offset = "0x260B8D4", VA = "0x260B8D4")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x260BA50", Offset = "0x260BA50", VA = "0x260BA50")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x260BBD4", Offset = "0x260BBD4", VA = "0x260BBD4")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x260BC90", Offset = "0x260BC90", VA = "0x260BC90")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x260BD90", Offset = "0x260BD90", VA = "0x260BD90")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x260BE18", Offset = "0x260BE18", VA = "0x260BE18")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x260BEB4", Offset = "0x260BEB4", VA = "0x260BEB4")]
		public static Vector3 InverseTransformPoint(Vector3 tPos, Quaternion tRot, Vector3 tScale, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x260BF58", Offset = "0x260BF58", VA = "0x260BF58")]
		public static Vector3 TransformPoint(Vector3 tPos, Quaternion tRot, Vector3 tScale, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x260BF48", Offset = "0x260BF48", VA = "0x260BF48")]
		public static Vector3 Div(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000149")]
	public static class Warning
	{
		[Token(Token = "0x200014A")]
		public delegate void Logger(string message);

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x2615834", Offset = "0x2615834", VA = "0x2615834")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x26158CC", Offset = "0x26158CC", VA = "0x26158CC")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x200014B")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x170000D4")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x27130F8", Offset = "0x27130F8", VA = "0x27130F8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x27130D4", Offset = "0x27130D4", VA = "0x27130D4", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x2713100", Offset = "0x2713100", VA = "0x2713100")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x2713164", Offset = "0x2713164", VA = "0x2713164", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x27132FC", Offset = "0x27132FC", VA = "0x27132FC", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x2713520", Offset = "0x2713520", VA = "0x2713520", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x271330C", Offset = "0x271330C", VA = "0x271330C")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x2713530", Offset = "0x2713530", VA = "0x2713530")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x2713548", Offset = "0x2713548", VA = "0x2713548", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x27135A4", Offset = "0x27135A4", VA = "0x27135A4", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x2713640", Offset = "0x2713640", VA = "0x2713640")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x2713758", Offset = "0x2713758", VA = "0x2713758")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE28F4", Offset = "0xCE28F4")]
		private float animSpeedMultiplier;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x400091A")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x400091B")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float jumpLeg;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastJump;

		[Token(Token = "0x170000D5")]
		public override bool animationGrounded
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x271380C", Offset = "0x271380C", VA = "0x271380C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x2713770", Offset = "0x2713770", VA = "0x2713770", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x27137F0", Offset = "0x27137F0", VA = "0x27137F0", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x2713904", Offset = "0x2713904", VA = "0x2713904", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x2713CE8", Offset = "0x2713CE8", VA = "0x2713CE8")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x2713DF0", Offset = "0x2713DF0", VA = "0x2713DF0")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE2938", Offset = "0xCE2938")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2938", Offset = "0xCE2938")]
		public Transform gravityTarget;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2998", Offset = "0xCE2998")]
		public float gravityMultiplier;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x4000929")]
		protected const float half = 0.5f;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x6000B75")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x26BC1CC", Offset = "0x26BC1CC", VA = "0x26BC1CC")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x26BC2FC", Offset = "0x26BC2FC", VA = "0x26BC2FC", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x26BC4B4", Offset = "0x26BC4B4", VA = "0x26BC4B4", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x26BC664", Offset = "0x26BC664", VA = "0x26BC664")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x26BC6C8", Offset = "0x26BC6C8", VA = "0x26BC6C8")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x26BC7E8", Offset = "0x26BC7E8", VA = "0x26BC7E8")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x26BC90C", Offset = "0x26BC90C", VA = "0x26BC90C")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x26BC930", Offset = "0x26BC930", VA = "0x26BC930")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x26BC954", Offset = "0x26BC954", VA = "0x26BC954")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x26BC9B4", Offset = "0x26BC9B4", VA = "0x26BC9B4")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x2000150")]
		public enum MoveMode
		{
			[Token(Token = "0x4000967")]
			Directional,
			[Token(Token = "0x4000968")]
			Strafe
		}

		[Token(Token = "0x2000151")]
		public struct AnimState
		{
			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x400096A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x400096B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x400096C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x400096D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x400096E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x400096F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x2000152")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDF458", Offset = "0xCDF458")]
		private sealed class <JumpSmooth>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x4000973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x4000974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x4000975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x170000D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B95")]
				[Address(RVA = "0x271F484", Offset = "0x271F484", VA = "0x271F484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B97")]
				[Address(RVA = "0x271F4CC", Offset = "0x271F4CC", VA = "0x271F4CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x271F360", Offset = "0x271F360", VA = "0x271F360")]
			[DebuggerHidden]
			public <JumpSmooth>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x271F38C", Offset = "0x271F38C", VA = "0x271F38C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x271F390", Offset = "0x271F390", VA = "0x271F390", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x271F48C", Offset = "0x271F48C", VA = "0x271F48C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE29D0", Offset = "0xCE29D0")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE2A08", Offset = "0xCE2A08")]
		public MoveMode moveMode;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE2A40", Offset = "0xCE2A40")]
		public bool lookInCameraDirection;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE2A78", Offset = "0xCE2A78")]
		public bool smoothJump;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE2AB0", Offset = "0xCE2AB0")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE2AE8", Offset = "0xCE2AE8")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE2B20", Offset = "0xCE2B20")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private float fixedDeltaTime;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool fixedFrame;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float wallRunEndTime;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Vector3 gravity;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private float velocityY;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private bool doubleJumped;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
		private bool jumpReleased;

		[Token(Token = "0x170000D6")]
		public bool onGround
		{
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x26BC9D4", Offset = "0x26BC9D4", VA = "0x26BC9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDFB4", Offset = "0xCEDFB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x26BC9DC", Offset = "0x26BC9DC", VA = "0x26BC9DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEDFC4", Offset = "0xCEDFC4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x26BC9E8", Offset = "0x26BC9E8", VA = "0x26BC9E8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x26BCB28", Offset = "0x26BCB28", VA = "0x26BCB28")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x26BCBB8", Offset = "0x26BCBB8", VA = "0x26BCBB8", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x26BCC80", Offset = "0x26BCC80", VA = "0x26BCC80")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x26BD884", Offset = "0x26BD884", VA = "0x26BD884", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x26BDADC", Offset = "0x26BDADC", VA = "0x26BDADC", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x26BD178", Offset = "0x26BD178", VA = "0x26BD178")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x26BDBC0", Offset = "0x26BDBC0", VA = "0x26BDBC0")]
		private void WallRun()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x26BE068", Offset = "0x26BE068", VA = "0x26BE068")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x26BD90C", Offset = "0x26BD90C", VA = "0x26BD90C")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x26BE108", Offset = "0x26BE108", VA = "0x26BE108", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x26BE444", Offset = "0x26BE444", VA = "0x26BE444")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x26BE534", Offset = "0x26BE534", VA = "0x26BE534", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x26BE694", Offset = "0x26BE694", VA = "0x26BE694")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEDFD4", Offset = "0xCEDFD4")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x26BD4DC", Offset = "0x26BD4DC", VA = "0x26BD4DC")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x26BE724", Offset = "0x26BE724", VA = "0x26BE724")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000154")]
		public enum RotationMode
		{
			[Token(Token = "0x4000984")]
			Smooth,
			[Token(Token = "0x4000985")]
			Linear
		}

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2B30", Offset = "0xCE2B30")]
		public CameraController cameraController;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2B68", Offset = "0xCE2B68")]
		public float accelerationTime;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2BA0", Offset = "0xCE2BA0")]
		public float turnTime;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2BD8", Offset = "0xCE2BD8")]
		public bool walkByDefault;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2C10", Offset = "0xCE2C10")]
		public RotationMode rotationMode;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2C48", Offset = "0xCE2C48")]
		public float moveSpeed;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE2C80", Offset = "0xCE2C80")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x170000D9")]
		public bool isGrounded
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x2646840", Offset = "0x2646840", VA = "0x2646840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE084", Offset = "0xCEE084")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x2646848", Offset = "0x2646848", VA = "0x2646848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE094", Offset = "0xCEE094")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x2646854", Offset = "0x2646854", VA = "0x2646854")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x26468E4", Offset = "0x26468E4", VA = "0x26468E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x2646DA4", Offset = "0x2646DA4", VA = "0x2646DA4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x2646938", Offset = "0x2646938", VA = "0x2646938")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x2646BB8", Offset = "0x2646BB8", VA = "0x2646BB8")]
		private void Move()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x2646DE0", Offset = "0x2646DE0", VA = "0x2646DE0")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x2646E7C", Offset = "0x2646E7C", VA = "0x2646E7C")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x2646F00", Offset = "0x2646F00", VA = "0x2646F00")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x260ABA0", Offset = "0x260ABA0", VA = "0x260ABA0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x260AC1C", Offset = "0x260AC1C", VA = "0x260AC1C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x260ADE0", Offset = "0x260ADE0", VA = "0x260ADE0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x260AE08", Offset = "0x260AE08", VA = "0x260AE08")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x2000157")]
		public struct State
		{
			[Token(Token = "0x400098F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x4000990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x4000991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x4000992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x4000993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x260ABE4", Offset = "0x260ABE4", VA = "0x260ABE4", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x260AE34", Offset = "0x260AE34", VA = "0x260AE34", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x260AE24", Offset = "0x260AE24", VA = "0x260AE24")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x2701E48", Offset = "0x2701E48", VA = "0x2701E48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x2701E84", Offset = "0x2701E84", VA = "0x2701E84")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x26475F4", Offset = "0x26475F4", VA = "0x26475F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x2647628", Offset = "0x2647628", VA = "0x2647628")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x26476D8", Offset = "0x26476D8", VA = "0x26476D8")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015A")]
	public class Navigator
	{
		[Token(Token = "0x200015B")]
		public enum State
		{
			[Token(Token = "0x40009A7")]
			Idle,
			[Token(Token = "0x40009A8")]
			Seeking,
			[Token(Token = "0x40009A9")]
			OnPath
		}

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2C90", Offset = "0xCE2C90")]
		public bool activeTargetSeeking;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2CC8", Offset = "0xCE2CC8")]
		public float cornerRadius;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2D00", Offset = "0xCE2D00")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2D38", Offset = "0xCE2D38")]
		public float maxSampleDistance;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2D70", Offset = "0xCE2D70")]
		public float nextPathInterval;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE2DA8", Offset = "0xCE2DA8")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE2DB8", Offset = "0xCE2DB8")]
		private State <state>k__BackingField;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x170000DA")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x26FF09C", Offset = "0x26FF09C", VA = "0x26FF09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE0A4", Offset = "0xCEE0A4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x26FF0A8", Offset = "0x26FF0A8", VA = "0x26FF0A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE0B4", Offset = "0xCEE0B4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public State state
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x26FF0B4", Offset = "0x26FF0B4", VA = "0x26FF0B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE0C4", Offset = "0xCEE0C4")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x26FF0BC", Offset = "0x26FF0BC", VA = "0x26FF0BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE0D4", Offset = "0xCEE0D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x26FF0C4", Offset = "0x26FF0C4", VA = "0x26FF0C4")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x26FF174", Offset = "0x26FF174", VA = "0x26FF174")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x26FF560", Offset = "0x26FF560", VA = "0x26FF560")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x26FF5DC", Offset = "0x26FF5DC", VA = "0x26FF5DC")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x26FF51C", Offset = "0x26FF51C", VA = "0x26FF51C")]
		private void Stop()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x26FF54C", Offset = "0x26FF54C", VA = "0x26FF54C")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x26FF728", Offset = "0x26FF728", VA = "0x26FF728")]
		public void Visualize()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x26FF8D8", Offset = "0x26FF8D8", VA = "0x26FF8D8")]
		public Navigator()
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF468", Offset = "0xCDF468")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF468", Offset = "0xCDF468")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x2708164", Offset = "0x2708164", VA = "0x2708164")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE0E4", Offset = "0xCEE0E4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x27081AC", Offset = "0x27081AC", VA = "0x27081AC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE11C", Offset = "0xCEE11C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x27081F4", Offset = "0x27081F4", VA = "0x27081F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE154", Offset = "0xCEE154")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x270823C", Offset = "0x270823C", VA = "0x270823C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE18C", Offset = "0xCEE18C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x2708284", Offset = "0x2708284", VA = "0x2708284")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x2708320", Offset = "0x2708320", VA = "0x2708320")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x2708340", Offset = "0x2708340", VA = "0x2708340")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x2708370", Offset = "0x2708370", VA = "0x2708370")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x27083A0", Offset = "0x27083A0", VA = "0x27083A0")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x27083E0", Offset = "0x27083E0", VA = "0x27083E0")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x2708424", Offset = "0x2708424", VA = "0x2708424")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x2708448", Offset = "0x2708448", VA = "0x2708448")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x270846C", Offset = "0x270846C", VA = "0x270846C")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x2708494", Offset = "0x2708494", VA = "0x2708494")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x27084C0", Offset = "0x27084C0", VA = "0x27084C0")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x27084EC", Offset = "0x27084EC", VA = "0x27084EC")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x27082A4", Offset = "0x27082A4", VA = "0x27082A4")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x2708514", Offset = "0x2708514", VA = "0x2708514")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x2708520", Offset = "0x2708520", VA = "0x2708520")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x270852C", Offset = "0x270852C", VA = "0x270852C")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x2708810", Offset = "0x2708810", VA = "0x2708810", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x27088B8", Offset = "0x27088B8", VA = "0x27088B8", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x2708C98", Offset = "0x2708C98", VA = "0x2708C98", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x2708E24", Offset = "0x2708E24", VA = "0x2708E24")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x2708E58", Offset = "0x2708E58", VA = "0x2708E58")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015D")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x170000DC")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x27086CC", Offset = "0x27086CC", VA = "0x27086CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0x27090C0", Offset = "0x27090C0", VA = "0x27090C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x2708B74", Offset = "0x2708B74", VA = "0x2708B74")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x2708F4C", Offset = "0x2708F4C", VA = "0x2708F4C")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015E")]
	public abstract class Constraint
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x170000DE")]
		public bool isValid
		{
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0x26C3428", Offset = "0x26C3428", VA = "0x26C3428")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BD8")]
		public abstract void UpdateConstraint();

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x26C3494", Offset = "0x26C3494", VA = "0x26C3494")]
		protected Constraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015F")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 position;

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x26C349C", Offset = "0x26C349C", VA = "0x26C349C", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x26C355C", Offset = "0x26C355C", VA = "0x26C355C")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x26C3564", Offset = "0x26C3564", VA = "0x26C3564")]
		public ConstraintPosition(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000160")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastLocalPosition;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x170000DF")]
		private bool positionChanged
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x26C3698", Offset = "0x26C3698", VA = "0x26C3698")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x26C3590", Offset = "0x26C3590", VA = "0x26C3590", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x26C36D4", Offset = "0x26C36D4", VA = "0x26C36D4")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x26C36DC", Offset = "0x26C36DC", VA = "0x26C36DC")]
		public ConstraintPositionOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000161")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x26C3708", Offset = "0x26C3708", VA = "0x26C3708", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x26C3788", Offset = "0x26C3788", VA = "0x26C3788")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x26C3790", Offset = "0x26C3790", VA = "0x26C3790")]
		public ConstraintRotation(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000162")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x170000E0")]
		private bool rotationChanged
		{
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x26C38C4", Offset = "0x26C38C4", VA = "0x26C38C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x26C37BC", Offset = "0x26C37BC", VA = "0x26C37BC", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x26C3900", Offset = "0x26C3900", VA = "0x26C3900")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x26C3908", Offset = "0x26C3908", VA = "0x26C3908")]
		public ConstraintRotationOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	public class Constraints
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE2DC8", Offset = "0xCE2DC8")]
		public float positionWeight;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE2DE0", Offset = "0xCE2DE0")]
		public float rotationWeight;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x26C3934", Offset = "0x26C3934", VA = "0x26C3934")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x26C39A0", Offset = "0x26C39A0", VA = "0x26C39A0")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x26C39F4", Offset = "0x26C39F4", VA = "0x26C39F4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x26C3CA4", Offset = "0x26C3CA4", VA = "0x26C3CA4")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x2000165")]
		public enum DOF
		{
			[Token(Token = "0x40009DF")]
			One,
			[Token(Token = "0x40009E0")]
			Three
		}

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2DF8", Offset = "0xCE2DF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE2DF8", Offset = "0xCE2DF8")]
		public float weight;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2E4C", Offset = "0xCE2E4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE2E4C", Offset = "0xCE2E4C")]
		public float rotationWeight;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2EA0", Offset = "0xCE2EA0")]
		public DOF rotationDOF;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2ED8", Offset = "0xCE2ED8")]
		public bool fixBone1Twist;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2F10", Offset = "0xCE2F10")]
		public Transform bone1;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2F48", Offset = "0xCE2F48")]
		public Transform bone2;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2F80", Offset = "0xCE2F80")]
		public Transform bone3;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2FB8", Offset = "0xCE2FB8")]
		public Transform tip;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE2FF0", Offset = "0xCE2FF0")]
		public Transform target;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3028", Offset = "0xCE3028")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 bone1TwistAxis;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 defaultBendNormal;

		[Token(Token = "0x170000E1")]
		public bool initiated
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x272C1D0", Offset = "0x272C1D0", VA = "0x272C1D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE1C4", Offset = "0xCEE1C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x272C1D8", Offset = "0x272C1D8", VA = "0x272C1D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE1D4", Offset = "0xCEE1D4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x272C1E4", Offset = "0x272C1E4", VA = "0x272C1E4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x272C204", Offset = "0x272C204", VA = "0x272C204")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x272C224", Offset = "0x272C224", VA = "0x272C224")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x272C244", Offset = "0x272C244", VA = "0x272C244")]
			set
			{
			}
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x272C264", Offset = "0x272C264", VA = "0x272C264")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x272C36C", Offset = "0x272C36C", VA = "0x272C36C")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x272C8E4", Offset = "0x272C8E4", VA = "0x272C8E4")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x272C9BC", Offset = "0x272C9BC", VA = "0x272C9BC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x272CA80", Offset = "0x272CA80", VA = "0x272CA80")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x272CF04", Offset = "0x272CF04", VA = "0x272CF04")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3038", Offset = "0xCE3038")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE3038", Offset = "0xCE3038")]
		public float weight;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE308C", Offset = "0xCE308C")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x170000E4")]
		public bool initiated
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0x272CF14", Offset = "0x272CF14", VA = "0x272CF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE1E4", Offset = "0xCEE1E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x272CF1C", Offset = "0x272CF1C", VA = "0x272CF1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE1F4", Offset = "0xCEE1F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x272CF28", Offset = "0x272CF28", VA = "0x272CF28")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x272CFB0", Offset = "0x272CFB0", VA = "0x272CFB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE204", Offset = "0xCEE204")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x272D2E8", Offset = "0x272D2E8", VA = "0x272D2E8")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x272D460", Offset = "0x272D460", VA = "0x272D460")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x272D1EC", Offset = "0x272D1EC", VA = "0x272D1EC")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x272D5D0", Offset = "0x272D5D0", VA = "0x272D5D0", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x272D690", Offset = "0x272D690", VA = "0x272D690")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x272D708", Offset = "0x272D708", VA = "0x272D708")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x272D77C", Offset = "0x272D77C", VA = "0x272D77C")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x272D7E4", Offset = "0x272D7E4", VA = "0x272D7E4", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x272D7E8", Offset = "0x272D7E8", VA = "0x272D7E8", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x272D7FC", Offset = "0x272D7FC", VA = "0x272D7FC")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x2000168")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE309C", Offset = "0xCE309C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE309C", Offset = "0xCE309C")]
		public float weight;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE30F0", Offset = "0xCE30F0")]
		public Grounding solver;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3128", Offset = "0xCE3128")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x170000E5")]
		public bool initiated
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x268C6FC", Offset = "0x268C6FC", VA = "0x268C6FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE23C", Offset = "0xCEE23C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x268C704", Offset = "0x268C704", VA = "0x268C704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE24C", Offset = "0xCEE24C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000C06")]
		public abstract void ResetPosition();

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x268C710", Offset = "0x268C710", VA = "0x268C710")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x268C8BC", Offset = "0x268C8BC", VA = "0x268C8BC")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x268C7BC", Offset = "0x268C7BC", VA = "0x268C7BC")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x268C8F0", Offset = "0x268C8F0", VA = "0x268C8F0")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C0D")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000C0E")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x268CA2C", Offset = "0x268CA2C", VA = "0x268CA2C")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF4C8", Offset = "0xCDF4C8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF4C8", Offset = "0xCDF4C8")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3138", Offset = "0xCE3138")]
		public BipedIK ik;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3170", Offset = "0xCE3170")]
		public float spineBend;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE31A8", Offset = "0xCE31A8")]
		public float spineSpeed;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x268CA98", Offset = "0x268CA98", VA = "0x268CA98", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE25C", Offset = "0xCEE25C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x268CAE0", Offset = "0x268CAE0", VA = "0x268CAE0", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE294", Offset = "0xCEE294")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x268CB28", Offset = "0x268CB28", VA = "0x268CB28", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x268CB68", Offset = "0x268CB68", VA = "0x268CB68")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x268CC14", Offset = "0x268CC14", VA = "0x268CC14")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x268CC74", Offset = "0x268CC74", VA = "0x268CC74")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x268CF38", Offset = "0x268CF38", VA = "0x268CF38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x268CF8C", Offset = "0x268CF8C", VA = "0x268CF8C")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x268D3A8", Offset = "0x268D3A8", VA = "0x268D3A8")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x268D47C", Offset = "0x268D47C", VA = "0x268D47C")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x268D5BC", Offset = "0x268D5BC", VA = "0x268D5BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x268D74C", Offset = "0x268D74C", VA = "0x268D74C")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF528", Offset = "0xCDF528")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF528", Offset = "0xCDF528")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x200016B")]
		public class SpineEffector
		{
			[Token(Token = "0x40009F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3288", Offset = "0xCE3288")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE32C0", Offset = "0xCE32C0")]
			public float horizontalWeight;

			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE32F8", Offset = "0xCE32F8")]
			public float verticalWeight;

			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0x2738538", Offset = "0x2738538", VA = "0x2738538")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x2738548", Offset = "0x2738548", VA = "0x2738548")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE31E0", Offset = "0xCE31E0")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3218", Offset = "0xCE3218")]
		public float spineBend;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3250", Offset = "0xCE3250")]
		public float spineSpeed;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x268D7D4", Offset = "0x268D7D4", VA = "0x268D7D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE2CC", Offset = "0xCEE2CC")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x268D81C", Offset = "0x268D81C", VA = "0x268D81C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE304", Offset = "0xCEE304")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x268D864", Offset = "0x268D864", VA = "0x268D864", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE33C", Offset = "0xCEE33C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x268D8AC", Offset = "0x268D8AC", VA = "0x268D8AC", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x268D8EC", Offset = "0x268D8EC", VA = "0x268D8EC")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x268D980", Offset = "0x268D980", VA = "0x268D980")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x268DC00", Offset = "0x268DC00", VA = "0x268DC00")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x268DC0C", Offset = "0x268DC0C", VA = "0x268DC0C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x268D9E8", Offset = "0x268D9E8", VA = "0x268D9E8")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x268DC18", Offset = "0x268DC18", VA = "0x268DC18")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x268DF38", Offset = "0x268DF38", VA = "0x268DF38")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x268E048", Offset = "0x268E048", VA = "0x268E048")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x268E1A0", Offset = "0x268E1A0", VA = "0x268E1A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x268E2B4", Offset = "0x268E2B4", VA = "0x268E2B4")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF588", Offset = "0xCDF588")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF588", Offset = "0xCDF588")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3330", Offset = "0xCE3330")]
		public Transform pelvis;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3368", Offset = "0xCE3368")]
		public Transform characterRoot;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE33A0", Offset = "0xCE33A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE33A0", Offset = "0xCE33A0")]
		public float rootRotationWeight;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE33F4", Offset = "0xCE33F4")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE342C", Offset = "0xCE342C")]
		public float maxRootRotationAngle;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x268E33C", Offset = "0x268E33C", VA = "0x268E33C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE374", Offset = "0xCEE374")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x268E384", Offset = "0x268E384", VA = "0x268E384", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE3AC", Offset = "0xCEE3AC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x268E3CC", Offset = "0x268E3CC", VA = "0x268E3CC", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x268E3E8", Offset = "0x268E3E8", VA = "0x268E3E8")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x268E61C", Offset = "0x268E61C", VA = "0x268E61C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x268E718", Offset = "0x268E718", VA = "0x268E718")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x268EB6C", Offset = "0x268EB6C", VA = "0x268EB6C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x268EF78", Offset = "0x268EF78", VA = "0x268EF78")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x268F108", Offset = "0x268F108", VA = "0x268F108")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x268F40C", Offset = "0x268F40C", VA = "0x268F40C")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x268F558", Offset = "0x268F558", VA = "0x268F558")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x268F740", Offset = "0x268F740", VA = "0x268F740")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF5E8", Offset = "0xCDF5E8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF5E8", Offset = "0xCDF5E8")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x200016E")]
		public struct Foot
		{
			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x2738590", Offset = "0x2738590", VA = "0x2738590")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3464", Offset = "0xCE3464")]
		public Grounding forelegSolver;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE349C", Offset = "0xCE349C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE349C", Offset = "0xCE349C")]
		public float rootRotationWeight;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE34F0", Offset = "0xCE34F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE34F0", Offset = "0xCE34F0")]
		public float minRootRotation;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3548", Offset = "0xCE3548")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE3548", Offset = "0xCE3548")]
		public float maxRootRotation;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE35A0", Offset = "0xCE35A0")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE35D8", Offset = "0xCE35D8")]
		public float maxLegOffset;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3610", Offset = "0xCE3610")]
		public float maxForeLegOffset;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3648", Offset = "0xCE3648")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE3648", Offset = "0xCE3648")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE369C", Offset = "0xCE369C")]
		public Transform characterRoot;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE36D4", Offset = "0xCE36D4")]
		public Transform pelvis;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE370C", Offset = "0xCE370C")]
		public Transform lastSpineBone;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3744", Offset = "0xCE3744")]
		public Transform head;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x268F7C8", Offset = "0x268F7C8", VA = "0x268F7C8", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE3E4", Offset = "0xCEE3E4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x268F810", Offset = "0x268F810", VA = "0x268F810", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE41C", Offset = "0xCEE41C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x268F858", Offset = "0x268F858", VA = "0x268F858", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x268F894", Offset = "0x268F894", VA = "0x268F894")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x268F9C0", Offset = "0x268F9C0", VA = "0x268F9C0")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x268FBC4", Offset = "0x268FBC4", VA = "0x268FBC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x268FC2C", Offset = "0x268FC2C", VA = "0x268FC2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x268FC90", Offset = "0x268FC90", VA = "0x268FC90")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x268FFC4", Offset = "0x268FFC4", VA = "0x268FFC4")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x2690308", Offset = "0x2690308", VA = "0x2690308")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x2690400", Offset = "0x2690400", VA = "0x2690400")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x26907CC", Offset = "0x26907CC", VA = "0x26907CC")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x2690DF0", Offset = "0x2690DF0", VA = "0x2690DF0")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x2690FC0", Offset = "0x2690FC0", VA = "0x2690FC0")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x269109C", Offset = "0x269109C", VA = "0x269109C")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x26912E4", Offset = "0x26912E4", VA = "0x26912E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x269131C", Offset = "0x269131C", VA = "0x269131C")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x26914FC", Offset = "0x26914FC", VA = "0x26914FC")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x200016F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF648", Offset = "0xCDF648")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF648", Offset = "0xCDF648")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE378C", Offset = "0xCE378C")]
		public VRIK ik;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x274FAB0", Offset = "0x274FAB0", VA = "0x274FAB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE454", Offset = "0xCEE454")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x274FAF8", Offset = "0x274FAF8", VA = "0x274FAF8", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE48C", Offset = "0xCEE48C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x274FB40", Offset = "0x274FB40", VA = "0x274FB40", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE4C4", Offset = "0xCEE4C4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x274FB88", Offset = "0x274FB88", VA = "0x274FB88", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x274FC2C", Offset = "0x274FC2C", VA = "0x274FC2C")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x274FCC0", Offset = "0x274FCC0", VA = "0x274FCC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x274FD20", Offset = "0x274FD20", VA = "0x274FD20")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x27501C8", Offset = "0x27501C8", VA = "0x27501C8")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x2750628", Offset = "0x2750628", VA = "0x2750628")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x27506B8", Offset = "0x27506B8", VA = "0x27506B8")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x2750874", Offset = "0x2750874", VA = "0x2750874")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x27509CC", Offset = "0x27509CC", VA = "0x27509CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x2750B4C", Offset = "0x2750B4C", VA = "0x2750B4C")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000170")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x2000171")]
		public enum Quality
		{
			[Token(Token = "0x4000A46")]
			Fastest,
			[Token(Token = "0x4000A47")]
			Simple,
			[Token(Token = "0x4000A48")]
			Best
		}

		[Token(Token = "0x2000172")]
		public class Leg
		{
			[Token(Token = "0x4000A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3C70", Offset = "0xCE3C70")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x4000A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3C80", Offset = "0xCE3C80")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x4000A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x4000A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3C90", Offset = "0xCE3C90")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3CA0", Offset = "0xCE3CA0")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3CB0", Offset = "0xCE3CB0")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3CC0", Offset = "0xCE3CC0")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3CD0", Offset = "0xCE3CD0")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x4000A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x4000A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3CE0", Offset = "0xCE3CE0")]
			private RaycastHit <heelHit>k__BackingField;

			[Token(Token = "0x4000A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3CF0", Offset = "0xCE3CF0")]
			private RaycastHit <capsuleHit>k__BackingField;

			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Grounding grounding;

			[Token(Token = "0x4000A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float lastTime;

			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private float deltaTime;

			[Token(Token = "0x4000A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Vector3 lastPosition;

			[Token(Token = "0x4000A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private Quaternion toHitNormal;

			[Token(Token = "0x4000A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Quaternion r;

			[Token(Token = "0x4000A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 up;

			[Token(Token = "0x4000A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private bool doOverrideFootPosition;

			[Token(Token = "0x4000A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Vector3 overrideFootPosition;

			[Token(Token = "0x4000A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 transformPosition;

			[Token(Token = "0x170000EE")]
			public bool isGrounded
			{
				[Token(Token = "0x6000C74")]
				[Address(RVA = "0x27385D0", Offset = "0x27385D0", VA = "0x27385D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE59C", Offset = "0xCEE59C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000C75")]
				[Address(RVA = "0x27385D8", Offset = "0x27385D8", VA = "0x27385D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE5AC", Offset = "0xCEE5AC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000EF")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x6000C76")]
				[Address(RVA = "0x27385E4", Offset = "0x27385E4", VA = "0x27385E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE5BC", Offset = "0xCEE5BC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000C77")]
				[Address(RVA = "0x27385F0", Offset = "0x27385F0", VA = "0x27385F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE5CC", Offset = "0xCEE5CC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F0")]
			public bool initiated
			{
				[Token(Token = "0x6000C78")]
				[Address(RVA = "0x27385FC", Offset = "0x27385FC", VA = "0x27385FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE5DC", Offset = "0xCEE5DC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000C79")]
				[Address(RVA = "0x2738604", Offset = "0x2738604", VA = "0x2738604")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE5EC", Offset = "0xCEE5EC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F1")]
			public float heightFromGround
			{
				[Token(Token = "0x6000C7A")]
				[Address(RVA = "0x2738610", Offset = "0x2738610", VA = "0x2738610")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE5FC", Offset = "0xCEE5FC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000C7B")]
				[Address(RVA = "0x2738618", Offset = "0x2738618", VA = "0x2738618")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE60C", Offset = "0xCEE60C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F2")]
			public Vector3 velocity
			{
				[Token(Token = "0x6000C7C")]
				[Address(RVA = "0x2738620", Offset = "0x2738620", VA = "0x2738620")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE61C", Offset = "0xCEE61C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000C7D")]
				[Address(RVA = "0x273862C", Offset = "0x273862C", VA = "0x273862C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE62C", Offset = "0xCEE62C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F3")]
			public Transform transform
			{
				[Token(Token = "0x6000C7E")]
				[Address(RVA = "0x2738638", Offset = "0x2738638", VA = "0x2738638")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE63C", Offset = "0xCEE63C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000C7F")]
				[Address(RVA = "0x2738640", Offset = "0x2738640", VA = "0x2738640")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE64C", Offset = "0xCEE64C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F4")]
			public float IKOffset
			{
				[Token(Token = "0x6000C80")]
				[Address(RVA = "0x2738648", Offset = "0x2738648", VA = "0x2738648")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE65C", Offset = "0xCEE65C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000C81")]
				[Address(RVA = "0x2738650", Offset = "0x2738650", VA = "0x2738650")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE66C", Offset = "0xCEE66C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F5")]
			public RaycastHit heelHit
			{
				[Token(Token = "0x6000C82")]
				[Address(RVA = "0x2738658", Offset = "0x2738658", VA = "0x2738658")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE67C", Offset = "0xCEE67C")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x6000C83")]
				[Address(RVA = "0x2738670", Offset = "0x2738670", VA = "0x2738670")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE68C", Offset = "0xCEE68C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F6")]
			public RaycastHit capsuleHit
			{
				[Token(Token = "0x6000C84")]
				[Address(RVA = "0x2738690", Offset = "0x2738690", VA = "0x2738690")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE69C", Offset = "0xCEE69C")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x6000C85")]
				[Address(RVA = "0x27386A8", Offset = "0x27386A8", VA = "0x27386A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE6AC", Offset = "0xCEE6AC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F7")]
			public RaycastHit GetHitPoint
			{
				[Token(Token = "0x6000C86")]
				[Address(RVA = "0x27386C8", Offset = "0x27386C8", VA = "0x27386C8")]
				get
				{
					return default(RaycastHit);
				}
			}

			[Token(Token = "0x170000F8")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x6000C8C")]
				[Address(RVA = "0x2739890", Offset = "0x2739890", VA = "0x2739890")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170000F9")]
			private float rootYOffset
			{
				[Token(Token = "0x6000C95")]
				[Address(RVA = "0x27399F4", Offset = "0x27399F4", VA = "0x27399F4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x2738710", Offset = "0x2738710", VA = "0x2738710")]
			public void SetFootPosition(Vector3 position)
			{
			}

			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x2738724", Offset = "0x2738724", VA = "0x2738724")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x2738798", Offset = "0x2738798", VA = "0x2738798")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x27387E4", Offset = "0x27387E4", VA = "0x27387E4")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x2738854", Offset = "0x2738854", VA = "0x2738854")]
			public void Process()
			{
			}

			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x2739504", Offset = "0x2739504", VA = "0x2739504")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x27390A0", Offset = "0x27390A0", VA = "0x27390A0")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x2739924", Offset = "0x2739924", VA = "0x2739924")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x2739340", Offset = "0x2739340", VA = "0x2739340")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x27393CC", Offset = "0x27393CC", VA = "0x27393CC")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x2739994", Offset = "0x2739994", VA = "0x2739994")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x27398B8", Offset = "0x27398B8", VA = "0x27398B8")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x2739A88", Offset = "0x2739A88", VA = "0x2739A88")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x2739B14", Offset = "0x2739B14", VA = "0x2739B14")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x2000173")]
		public class Pelvis
		{
			[Token(Token = "0x4000A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3D00", Offset = "0xCE3D00")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x4000A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3D10", Offset = "0xCE3D10")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x4000A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x4000A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x170000FA")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x6000C97")]
				[Address(RVA = "0x2739B58", Offset = "0x2739B58", VA = "0x2739B58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE6BC", Offset = "0xCEE6BC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000C98")]
				[Address(RVA = "0x2739B64", Offset = "0x2739B64", VA = "0x2739B64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE6CC", Offset = "0xCEE6CC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000FB")]
			public float heightOffset
			{
				[Token(Token = "0x6000C99")]
				[Address(RVA = "0x2739B70", Offset = "0x2739B70", VA = "0x2739B70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE6DC", Offset = "0xCEE6DC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000C9A")]
				[Address(RVA = "0x2739B78", Offset = "0x2739B78", VA = "0x2739B78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE6EC", Offset = "0xCEE6EC")]
				private set
				{
				}
			}

			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x2739B80", Offset = "0x2739B80", VA = "0x2739B80")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x2739BF0", Offset = "0x2739BF0", VA = "0x2739BF0")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x2739B90", Offset = "0x2739B90", VA = "0x2739B90")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x2739C5C", Offset = "0x2739C5C", VA = "0x2739C5C")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x2739DFC", Offset = "0x2739DFC", VA = "0x2739DFC")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE37C4", Offset = "0xCE37C4")]
		public LayerMask layers;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE37FC", Offset = "0xCE37FC")]
		public float maxStep;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3834", Offset = "0xCE3834")]
		public float heightOffset;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE386C", Offset = "0xCE386C")]
		public float footSpeed;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE38A4", Offset = "0xCE38A4")]
		public float footRadius;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE38DC", Offset = "0xCE38DC")]
		[HideInInspector]
		public float footCenterOffset;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3928", Offset = "0xCE3928")]
		public float prediction;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE3960", Offset = "0xCE3960")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3960", Offset = "0xCE3960")]
		public float footRotationWeight;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE39B4", Offset = "0xCE39B4")]
		public float footRotationSpeed;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE39EC", Offset = "0xCE39EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE39EC", Offset = "0xCE39EC")]
		public float maxFootRotationAngle;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3A44", Offset = "0xCE3A44")]
		public bool rotateSolver;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3A7C", Offset = "0xCE3A7C")]
		public float pelvisSpeed;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3AB4", Offset = "0xCE3AB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE3AB4", Offset = "0xCE3AB4")]
		public float pelvisDamper;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3B08", Offset = "0xCE3B08")]
		public float lowerPelvisWeight;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3B40", Offset = "0xCE3B40")]
		public float liftPelvisWeight;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3B78", Offset = "0xCE3B78")]
		public float rootSphereCastRadius;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3BB0", Offset = "0xCE3BB0")]
		public bool overstepFallsDown;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3BE8", Offset = "0xCE3BE8")]
		public Quality quality;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3C20", Offset = "0xCE3C20")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3C30", Offset = "0xCE3C30")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3C40", Offset = "0xCE3C40")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3C50", Offset = "0xCE3C50")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE3C60", Offset = "0xCE3C60")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initiated;

		[Token(Token = "0x170000E6")]
		public Leg[] legs
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x2750BA8", Offset = "0x2750BA8", VA = "0x2750BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE4FC", Offset = "0xCEE4FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x2750BB0", Offset = "0x2750BB0", VA = "0x2750BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE50C", Offset = "0xCEE50C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public Pelvis pelvis
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x2750BB8", Offset = "0x2750BB8", VA = "0x2750BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE51C", Offset = "0xCEE51C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x2750BC0", Offset = "0x2750BC0", VA = "0x2750BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE52C", Offset = "0xCEE52C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public bool isGrounded
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x2750BC8", Offset = "0x2750BC8", VA = "0x2750BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE53C", Offset = "0xCEE53C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x2750BD0", Offset = "0x2750BD0", VA = "0x2750BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE54C", Offset = "0xCEE54C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public Transform root
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x2750BDC", Offset = "0x2750BDC", VA = "0x2750BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE55C", Offset = "0xCEE55C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x2750BE4", Offset = "0x2750BE4", VA = "0x2750BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE56C", Offset = "0xCEE56C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x2750BEC", Offset = "0x2750BEC", VA = "0x2750BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE57C", Offset = "0xCEE57C")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x2750C04", Offset = "0x2750C04", VA = "0x2750C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEE58C", Offset = "0xCEE58C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public bool rootGrounded
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x2750C24", Offset = "0x2750C24", VA = "0x2750C24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		public Vector3 up
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0x2750EC4", Offset = "0x2750EC4", VA = "0x2750EC4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000ED")]
		private bool useRootRotation
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x2751188", Offset = "0x2751188", VA = "0x2751188")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x2750C78", Offset = "0x2750C78", VA = "0x2750C78")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x2750F08", Offset = "0x2750F08", VA = "0x2750F08")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x274FF40", Offset = "0x274FF40", VA = "0x274FF40")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x27503B8", Offset = "0x27503B8", VA = "0x27503B8")]
		public void Update()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x2751028", Offset = "0x2751028", VA = "0x2751028")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x274FBA0", Offset = "0x274FBA0", VA = "0x274FBA0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x2751010", Offset = "0x2751010", VA = "0x2751010")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x2751208", Offset = "0x2751208", VA = "0x2751208")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x2751298", Offset = "0x2751298", VA = "0x2751298")]
		public Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x2751354", Offset = "0x2751354", VA = "0x2751354")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x27513D0", Offset = "0x27513D0", VA = "0x27513D0")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF6A8", Offset = "0xCDF6A8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF6A8", Offset = "0xCDF6A8")]
	public class AimIK : IK
	{
		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x27015E4", Offset = "0x27015E4", VA = "0x27015E4", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE6FC", Offset = "0xCEE6FC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x270162C", Offset = "0x270162C", VA = "0x270162C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE734", Offset = "0xCEE734")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x2701674", Offset = "0x2701674", VA = "0x2701674")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE76C", Offset = "0xCEE76C")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x27016BC", Offset = "0x27016BC", VA = "0x27016BC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE7A4", Offset = "0xCEE7A4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x2701704", Offset = "0x2701704", VA = "0x2701704")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE7DC", Offset = "0xCEE7DC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x270174C", Offset = "0x270174C", VA = "0x270174C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x2701754", Offset = "0x2701754", VA = "0x2701754")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF708", Offset = "0xCDF708")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF708", Offset = "0xCDF708")]
	public class ArmIK : IK
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x2701E8C", Offset = "0x2701E8C", VA = "0x2701E8C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE814", Offset = "0xCEE814")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x2701ED4", Offset = "0x2701ED4", VA = "0x2701ED4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE84C", Offset = "0xCEE84C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x2701F1C", Offset = "0x2701F1C", VA = "0x2701F1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE884", Offset = "0xCEE884")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x2701F64", Offset = "0x2701F64", VA = "0x2701F64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE8BC", Offset = "0xCEE8BC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x2701FAC", Offset = "0x2701FAC", VA = "0x2701FAC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x2701FB4", Offset = "0x2701FB4", VA = "0x2701FB4")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF768", Offset = "0xCDF768")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF768", Offset = "0xCDF768")]
	public class CCDIK : IK
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x27108F4", Offset = "0x27108F4", VA = "0x27108F4", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE8F4", Offset = "0xCEE8F4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x271093C", Offset = "0x271093C", VA = "0x271093C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE92C", Offset = "0xCEE92C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x2710984", Offset = "0x2710984", VA = "0x2710984")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE964", Offset = "0xCEE964")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x27109CC", Offset = "0x27109CC", VA = "0x27109CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE99C", Offset = "0xCEE99C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x2710A14", Offset = "0x2710A14", VA = "0x2710A14", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x2710A1C", Offset = "0x2710A1C", VA = "0x2710A1C")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF7C8", Offset = "0xCDF7C8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF7C8", Offset = "0xCDF7C8")]
	public class FABRIK : IK
	{
		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x2724700", Offset = "0x2724700", VA = "0x2724700", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEE9D4", Offset = "0xCEE9D4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x2724748", Offset = "0x2724748", VA = "0x2724748", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEA0C", Offset = "0xCEEA0C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x2724790", Offset = "0x2724790", VA = "0x2724790")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEA44", Offset = "0xCEEA44")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x27247D8", Offset = "0x27247D8", VA = "0x27247D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEA7C", Offset = "0xCEEA7C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x2724820", Offset = "0x2724820", VA = "0x2724820", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x2724828", Offset = "0x2724828", VA = "0x2724828")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF828", Offset = "0xCDF828")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF828", Offset = "0xCDF828")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x2724D4C", Offset = "0x2724D4C", VA = "0x2724D4C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEAB4", Offset = "0xCEEAB4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x2724D94", Offset = "0x2724D94", VA = "0x2724D94", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEAEC", Offset = "0xCEEAEC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x2724DDC", Offset = "0x2724DDC", VA = "0x2724DDC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEB24", Offset = "0xCEEB24")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x2724E24", Offset = "0x2724E24", VA = "0x2724E24")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEB5C", Offset = "0xCEEB5C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x2724E6C", Offset = "0x2724E6C", VA = "0x2724E6C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x2724E74", Offset = "0x2724E74", VA = "0x2724E74")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF888", Offset = "0xCDF888")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF888", Offset = "0xCDF888")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x2730A14", Offset = "0x2730A14", VA = "0x2730A14", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEB94", Offset = "0xCEEB94")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x2730A5C", Offset = "0x2730A5C", VA = "0x2730A5C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEBCC", Offset = "0xCEEBCC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x2730AA4", Offset = "0x2730AA4", VA = "0x2730AA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEC04", Offset = "0xCEEC04")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x2730AEC", Offset = "0x2730AEC", VA = "0x2730AEC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEC3C", Offset = "0xCEEC3C")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x2730B34", Offset = "0x2730B34", VA = "0x2730B34")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEC74", Offset = "0xCEEC74")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x2730B7C", Offset = "0x2730B7C", VA = "0x2730B7C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEECAC", Offset = "0xCEECAC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x2730BC4", Offset = "0x2730BC4", VA = "0x2730BC4")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x2730BE8", Offset = "0x2730BE8", VA = "0x2730BE8", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x2730BF0", Offset = "0x2730BF0", VA = "0x2730BF0")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x2730DCC", Offset = "0x2730DCC", VA = "0x2730DCC")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x2731060", Offset = "0x2731060", VA = "0x2731060")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEECE4", Offset = "0xCEECE4")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x2731080", Offset = "0x2731080", VA = "0x2731080")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEED1C", Offset = "0xCEED1C")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x2731158", Offset = "0x2731158", VA = "0x2731158")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x6000CCC")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x275596C", Offset = "0x275596C", VA = "0x275596C", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x2755A60", Offset = "0x2755A60", VA = "0x2755A60", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x2755C4C", Offset = "0x2755C4C", VA = "0x2755C4C", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000CD0")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000CD1")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x2755CAC", Offset = "0x2755CAC", VA = "0x2755CAC")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3D20", Offset = "0xCE3D20")]
		public IK[] IKComponents;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3D58", Offset = "0xCE3D58")]
		public Animator animator;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x170000FC")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x27581D0", Offset = "0x27581D0", VA = "0x27581D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x2758268", Offset = "0x2758268", VA = "0x2758268")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x27582D8", Offset = "0x27582D8", VA = "0x27582D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x2758394", Offset = "0x2758394", VA = "0x2758394")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x27583D0", Offset = "0x27583D0", VA = "0x27583D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x275830C", Offset = "0x275830C", VA = "0x275830C")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x275845C", Offset = "0x275845C", VA = "0x275845C")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF8E8", Offset = "0xCDF8E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF8E8", Offset = "0xCDF8E8")]
	public class LegIK : IK
	{
		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x26F6F7C", Offset = "0x26F6F7C", VA = "0x26F6F7C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEED54", Offset = "0xCEED54")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x26F6FC4", Offset = "0x26F6FC4", VA = "0x26F6FC4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEED8C", Offset = "0xCEED8C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x26F700C", Offset = "0x26F700C", VA = "0x26F700C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEDC4", Offset = "0xCEEDC4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x26F7054", Offset = "0x26F7054", VA = "0x26F7054")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEDFC", Offset = "0xCEEDFC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x26F709C", Offset = "0x26F709C", VA = "0x26F709C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x26F70A4", Offset = "0x26F70A4", VA = "0x26F70A4")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF948", Offset = "0xCDF948")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF948", Offset = "0xCDF948")]
	public class LimbIK : IK
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x26F7910", Offset = "0x26F7910", VA = "0x26F7910", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEE34", Offset = "0xCEEE34")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x26F7958", Offset = "0x26F7958", VA = "0x26F7958", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEE6C", Offset = "0xCEEE6C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x26F79A0", Offset = "0x26F79A0", VA = "0x26F79A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEEA4", Offset = "0xCEEEA4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x26F79E8", Offset = "0x26F79E8", VA = "0x26F79E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEEDC", Offset = "0xCEEEDC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x26F7A30", Offset = "0x26F7A30", VA = "0x26F7A30", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x26F7A38", Offset = "0x26F7A38", VA = "0x26F7A38")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDF9A8", Offset = "0xCDF9A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDF9A8", Offset = "0xCDF9A8")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x26FBC0C", Offset = "0x26FBC0C", VA = "0x26FBC0C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEF14", Offset = "0xCEEF14")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x26FBC54", Offset = "0x26FBC54", VA = "0x26FBC54", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEF4C", Offset = "0xCEEF4C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x26FBC9C", Offset = "0x26FBC9C", VA = "0x26FBC9C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEF84", Offset = "0xCEEF84")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x26FBCE4", Offset = "0x26FBCE4", VA = "0x26FBCE4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEFBC", Offset = "0xCEEFBC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x26FBD2C", Offset = "0x26FBD2C", VA = "0x26FBD2C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x26FBD34", Offset = "0x26FBD34", VA = "0x26FBD34")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDFA08", Offset = "0xCDFA08")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDFA08", Offset = "0xCDFA08")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x260416C", Offset = "0x260416C", VA = "0x260416C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEEFF4", Offset = "0xCEEFF4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x26041B4", Offset = "0x26041B4", VA = "0x26041B4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF02C", Offset = "0xCEF02C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x26041FC", Offset = "0x26041FC", VA = "0x26041FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF064", Offset = "0xCEF064")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x2604244", Offset = "0x2604244", VA = "0x2604244")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF09C", Offset = "0xCEF09C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x260428C", Offset = "0x260428C", VA = "0x260428C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x2604294", Offset = "0x2604294", VA = "0x2604294")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDFA68", Offset = "0xCDFA68")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x2000181")]
		public class References
		{
			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3E3C", Offset = "0xCE3E3C")]
			public Transform chest;

			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3E74", Offset = "0xCE3E74")]
			public Transform neck;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3EAC", Offset = "0xCE3EAC")]
			public Transform leftShoulder;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3EE4", Offset = "0xCE3EE4")]
			public Transform rightShoulder;

			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x4000A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3F1C", Offset = "0xCE3F1C")]
			public Transform leftThigh;

			[Token(Token = "0x4000A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3F54", Offset = "0xCE3F54")]
			public Transform leftCalf;

			[Token(Token = "0x4000A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3F8C", Offset = "0xCE3F8C")]
			public Transform leftFoot;

			[Token(Token = "0x4000A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3FC4", Offset = "0xCE3FC4")]
			public Transform leftToes;

			[Token(Token = "0x4000A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3FFC", Offset = "0xCE3FFC")]
			public Transform rightThigh;

			[Token(Token = "0x4000A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4034", Offset = "0xCE4034")]
			public Transform rightCalf;

			[Token(Token = "0x4000A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE406C", Offset = "0xCE406C")]
			public Transform rightFoot;

			[Token(Token = "0x4000A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE40A4", Offset = "0xCE40A4")]
			public Transform rightToes;

			[Token(Token = "0x170000FD")]
			public bool isFilled
			{
				[Token(Token = "0x6000CFC")]
				[Address(RVA = "0x2749738", Offset = "0x2749738", VA = "0x2749738")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000FE")]
			public bool isEmpty
			{
				[Token(Token = "0x6000CFD")]
				[Address(RVA = "0x2749BB0", Offset = "0x2749BB0", VA = "0x2749BB0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x27492F0", Offset = "0x27492F0", VA = "0x27492F0")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x274A028", Offset = "0x274A028", VA = "0x274A028")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x274A3C4", Offset = "0x274A3C4", VA = "0x274A3C4")]
			public References()
			{
			}
		}

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3D90", Offset = "0xCE3D90")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0xCE3D90", Offset = "0xCE3D90")]
		public References references;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE3E04", Offset = "0xCE3E04")]
		public IKSolverVR solver;

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x260D094", Offset = "0x260D094", VA = "0x260D094", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF0D4", Offset = "0xCEF0D4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x260D0DC", Offset = "0x260D0DC", VA = "0x260D0DC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF10C", Offset = "0xCEF10C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x260D124", Offset = "0x260D124", VA = "0x260D124")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF144", Offset = "0xCEF144")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x260D16C", Offset = "0x260D16C", VA = "0x260D16C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF17C", Offset = "0xCEF17C")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x260D198", Offset = "0x260D198", VA = "0x260D198")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF1B4", Offset = "0xCEF1B4")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x260D1C0", Offset = "0x260D1C0", VA = "0x260D1C0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x260D1C8", Offset = "0x260D1C8", VA = "0x260D1C8", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x260D248", Offset = "0x260D248", VA = "0x260D248", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x260D3B4", Offset = "0x260D3B4", VA = "0x260D3B4")]
		public VRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000182")]
	public class FABRIKChain
	{
		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE40DC", Offset = "0xCE40DC")]
		public float pull;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE40F4", Offset = "0xCE40F4")]
		public float pin;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x272488C", Offset = "0x272488C", VA = "0x272488C")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x272495C", Offset = "0x272495C", VA = "0x272495C")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x272497C", Offset = "0x272497C", VA = "0x272497C")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x2724BF0", Offset = "0x2724BF0", VA = "0x2724BF0")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x2724A50", Offset = "0x2724A50", VA = "0x2724A50")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x2724CE8", Offset = "0x2724CE8", VA = "0x2724CE8")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x2724ED8", Offset = "0x2724ED8", VA = "0x2724ED8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x272533C", Offset = "0x272533C", VA = "0x272533C")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x27254F8", Offset = "0x27254F8", VA = "0x27254F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x2725604", Offset = "0x2725604", VA = "0x2725604")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000185")]
		public class BendBone
		{
			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE474C", Offset = "0xCE474C")]
			public Transform transform;

			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4784", Offset = "0xCE4784")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4784", Offset = "0xCE4784")]
			public float weight;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x27359E8", Offset = "0x27359E8", VA = "0x27359E8")]
			public BendBone()
			{
			}

			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x2735A24", Offset = "0x2735A24", VA = "0x2735A24")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x2735A7C", Offset = "0x2735A7C", VA = "0x2735A7C")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x2735AB4", Offset = "0x2735AB4", VA = "0x2735AB4")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE410C", Offset = "0xCE410C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4144", Offset = "0xCE4144")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xCE4144", Offset = "0xCE4144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4144", Offset = "0xCE4144")]
		public float positionWeight;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE41BC", Offset = "0xCE41BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE41BC", Offset = "0xCE41BC")]
		public float bodyWeight;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4210", Offset = "0xCE4210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4210", Offset = "0xCE4210")]
		public float thighWeight;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4264", Offset = "0xCE4264")]
		public bool handsPullBody;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE429C", Offset = "0xCE429C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xCE429C", Offset = "0xCE429C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE429C", Offset = "0xCE429C")]
		public float rotationWeight;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4314", Offset = "0xCE4314")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4314", Offset = "0xCE4314")]
		public float bodyClampWeight;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4368", Offset = "0xCE4368")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4368", Offset = "0xCE4368")]
		public float headClampWeight;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE43BC", Offset = "0xCE43BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE43BC", Offset = "0xCE43BC")]
		public float bendWeight;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4410", Offset = "0xCE4410")]
		public BendBone[] bendBones;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4448", Offset = "0xCE4448")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4448", Offset = "0xCE4448")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xCE4448", Offset = "0xCE4448")]
		public float CCDWeight;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE44C0", Offset = "0xCE44C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE44C0", Offset = "0xCE44C0")]
		public float roll;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4514", Offset = "0xCE4514")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4514", Offset = "0xCE4514")]
		public float damper;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE456C", Offset = "0xCE456C")]
		public Transform[] CCDBones;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE45A4", Offset = "0xCE45A4")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xCE45A4", Offset = "0xCE45A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE45A4", Offset = "0xCE45A4")]
		public float postStretchWeight;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE461C", Offset = "0xCE461C")]
		public float maxStretch;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4654", Offset = "0xCE4654")]
		public float stretchDamper;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE468C", Offset = "0xCE468C")]
		public bool fixHead;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE46C4", Offset = "0xCE46C4")]
		public Transform[] stretchBones;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xCE46FC", Offset = "0xCE46FC")]
		public Vector3 chestDirection;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4734", Offset = "0xCE4734")]
		public float chestDirectionWeight;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x272560C", Offset = "0x272560C", VA = "0x272560C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x2725940", Offset = "0x2725940", VA = "0x2725940")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x2725DE0", Offset = "0x2725DE0", VA = "0x2725DE0")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x27261AC", Offset = "0x27261AC", VA = "0x27261AC")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x2726938", Offset = "0x2726938", VA = "0x2726938")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x2726C18", Offset = "0x2726C18", VA = "0x2726C18")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x2726F1C", Offset = "0x2726F1C", VA = "0x2726F1C")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x27276F0", Offset = "0x27276F0", VA = "0x27276F0")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x272671C", Offset = "0x272671C", VA = "0x272671C")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x27278B8", Offset = "0x27278B8", VA = "0x27278B8")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x2727608", Offset = "0x2727608", VA = "0x2727608")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x272753C", Offset = "0x272753C", VA = "0x272753C")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x2727B3C", Offset = "0x2727B3C", VA = "0x2727B3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x2727E0C", Offset = "0x2727E0C", VA = "0x2727E0C")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000186")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x2000187")]
		public class ChildConstraint
		{
			[Token(Token = "0x4000ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x4000AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE4870", Offset = "0xCE4870")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE4880", Offset = "0xCE4880")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x170000FF")]
			public float nominalDistance
			{
				[Token(Token = "0x6000D30")]
				[Address(RVA = "0x2735ADC", Offset = "0x2735ADC", VA = "0x2735ADC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF1EC", Offset = "0xCEF1EC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000D31")]
				[Address(RVA = "0x2735AE4", Offset = "0x2735AE4", VA = "0x2735AE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF1FC", Offset = "0xCEF1FC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000100")]
			public bool isRigid
			{
				[Token(Token = "0x6000D32")]
				[Address(RVA = "0x2735AEC", Offset = "0x2735AEC", VA = "0x2735AEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF20C", Offset = "0xCEF20C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000D33")]
				[Address(RVA = "0x2735AF4", Offset = "0x2735AF4", VA = "0x2735AF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF21C", Offset = "0xCEF21C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x2735B00", Offset = "0x2735B00", VA = "0x2735B00")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x2735B4C", Offset = "0x2735B4C", VA = "0x2735B4C")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x2735BA4", Offset = "0x2735BA4", VA = "0x2735BA4")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x2735D48", Offset = "0x2735D48", VA = "0x2735D48")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000188")]
		public enum Smoothing
		{
			[Token(Token = "0x4000AEA")]
			None,
			[Token(Token = "0x4000AEB")]
			Exponential,
			[Token(Token = "0x4000AEC")]
			Cubic
		}

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE47D8", Offset = "0xCE47D8")]
		public float pin;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE47F0", Offset = "0xCE47F0")]
		public float pull;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4808", Offset = "0xCE4808")]
		public float push;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4820", Offset = "0xCE4820")]
		public float pushParent;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4838", Offset = "0xCE4838")]
		public float reach;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x4000ADE")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x2727F88", Offset = "0x2727F88", VA = "0x2727F88")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x2728074", Offset = "0x2728074", VA = "0x2728074")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x27281A0", Offset = "0x27281A0", VA = "0x27281A0")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x27282CC", Offset = "0x27282CC", VA = "0x27282CC")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x27283A4", Offset = "0x27283A4", VA = "0x27283A4")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x27284BC", Offset = "0x27284BC", VA = "0x27284BC")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x2728B38", Offset = "0x2728B38", VA = "0x2728B38")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x272864C", Offset = "0x272864C", VA = "0x272864C")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x2728F28", Offset = "0x2728F28", VA = "0x2728F28")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x2729188", Offset = "0x2729188", VA = "0x2729188")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x27293F4", Offset = "0x27293F4", VA = "0x27293F4")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x2729798", Offset = "0x2729798", VA = "0x2729798")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x2729C2C", Offset = "0x2729C2C", VA = "0x2729C2C")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x2729E50", Offset = "0x2729E50", VA = "0x2729E50")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x2729BBC", Offset = "0x2729BBC", VA = "0x2729BBC")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x2729624", Offset = "0x2729624", VA = "0x2729624")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x2729B40", Offset = "0x2729B40", VA = "0x2729B40")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x2729F38", Offset = "0x2729F38", VA = "0x2729F38")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x2729A60", Offset = "0x2729A60", VA = "0x2729A60")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x2729D38", Offset = "0x2729D38", VA = "0x2729D38")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000189")]
	public class IKConstraintBend
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4890", Offset = "0xCE4890")]
		public float weight;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE48A8", Offset = "0xCE48A8")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x17000101")]
		public bool initiated
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x2755E9C", Offset = "0x2755E9C", VA = "0x2755E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF22C", Offset = "0xCEF22C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x2755EA4", Offset = "0x2755EA4", VA = "0x2755EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF23C", Offset = "0xCEF23C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x2755CB4", Offset = "0x2755CB4", VA = "0x2755CB4")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x2755EB0", Offset = "0x2755EB0", VA = "0x2755EB0")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x2755EF0", Offset = "0x2755EF0", VA = "0x2755EF0")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x2755F50", Offset = "0x2755F50", VA = "0x2755F50")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x2755F5C", Offset = "0x2755F5C", VA = "0x2755F5C")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x2756270", Offset = "0x2756270", VA = "0x2756270")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower, Vector3 last)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x2756460", Offset = "0x2756460", VA = "0x2756460")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x27567AC", Offset = "0x27567AC", VA = "0x27567AC")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x2756120", Offset = "0x2756120", VA = "0x2756120")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x27561C8", Offset = "0x27561C8", VA = "0x27561C8")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200018A")]
	public class IKEffector
	{
		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE48B8", Offset = "0xCE48B8")]
		public float positionWeight;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE48D0", Offset = "0xCE48D0")]
		public float rotationWeight;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE48E8", Offset = "0xCE48E8")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE48F8", Offset = "0xCE48F8")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x17000102")]
		public bool isEndEffector
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x2756C48", Offset = "0x2756C48", VA = "0x2756C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF24C", Offset = "0xCEF24C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x2756C50", Offset = "0x2756C50", VA = "0x2756C50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF25C", Offset = "0xCEF25C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x2756BE0", Offset = "0x2756BE0", VA = "0x2756BE0")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x2756C5C", Offset = "0x2756C5C", VA = "0x2756C5C")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x2756CEC", Offset = "0x2756CEC", VA = "0x2756CEC")]
		public IKEffector()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x2756E00", Offset = "0x2756E00", VA = "0x2756E00")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x2756F30", Offset = "0x2756F30", VA = "0x2756F30")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x275724C", Offset = "0x275724C", VA = "0x275724C")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x27574E0", Offset = "0x27574E0", VA = "0x27574E0")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x27575B4", Offset = "0x27575B4", VA = "0x27575B4")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x275765C", Offset = "0x275765C", VA = "0x275765C")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x2757B98", Offset = "0x2757B98", VA = "0x2757B98")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x2757BC4", Offset = "0x2757BC4", VA = "0x2757BC4")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x2757D24", Offset = "0x2757D24", VA = "0x2757D24")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x2757FB0", Offset = "0x2757FB0", VA = "0x2757FB0")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200018B")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x200018C")]
		public class BoneMap
		{
			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x17000103")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x6000D59")]
				[Address(RVA = "0x273BAFC", Offset = "0x273BAFC", VA = "0x273BAFC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000104")]
			public bool isNodeBone
			{
				[Token(Token = "0x6000D5C")]
				[Address(RVA = "0x273BBD8", Offset = "0x273BBD8", VA = "0x273BBD8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000105")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x6000D70")]
				[Address(RVA = "0x273BF7C", Offset = "0x273BF7C", VA = "0x273BF7C")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x273BAD0", Offset = "0x273BAD0", VA = "0x273BAD0")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x273BB38", Offset = "0x273BB38", VA = "0x273BB38")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x273BB88", Offset = "0x273BB88", VA = "0x273BB88")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x273BBE8", Offset = "0x273BBE8", VA = "0x273BBE8")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x273BC70", Offset = "0x273BC70", VA = "0x273BC70")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x273BC78", Offset = "0x273BC78", VA = "0x273BC78")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x273BD50", Offset = "0x273BD50", VA = "0x273BD50")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x273BDC8", Offset = "0x273BDC8", VA = "0x273BDC8")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x273BE60", Offset = "0x273BE60", VA = "0x273BE60")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x273C0BC", Offset = "0x273C0BC", VA = "0x273C0BC")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x273C0F4", Offset = "0x273C0F4", VA = "0x273C0F4")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x6000D65")]
			[Address(RVA = "0x273C12C", Offset = "0x273C12C", VA = "0x273C12C")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x6000D66")]
			[Address(RVA = "0x273C154", Offset = "0x273C154", VA = "0x273C154")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x6000D67")]
			[Address(RVA = "0x273C240", Offset = "0x273C240", VA = "0x273C240")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000D68")]
			[Address(RVA = "0x273C3CC", Offset = "0x273C3CC", VA = "0x273C3CC")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6000D69")]
			[Address(RVA = "0x273C3FC", Offset = "0x273C3FC", VA = "0x273C3FC")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x273C4C4", Offset = "0x273C4C4", VA = "0x273C4C4")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0x273C534", Offset = "0x273C534", VA = "0x273C534")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x273C684", Offset = "0x273C684", VA = "0x273C684")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x273C7D4", Offset = "0x273C7D4", VA = "0x273C7D4")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x273C854", Offset = "0x273C854", VA = "0x273C854")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x273C2BC", Offset = "0x273C2BC", VA = "0x273C2BC")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000D71")]
			[Address(RVA = "0x273C98C", Offset = "0x273C98C", VA = "0x273C98C")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x2758464", Offset = "0x2758464", VA = "0x2758464", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x275846C", Offset = "0x275846C", VA = "0x275846C", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x2758470", Offset = "0x2758470", VA = "0x2758470")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x27585B4", Offset = "0x27585B4", VA = "0x27585B4")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x2758624", Offset = "0x2758624", VA = "0x2758624")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018D")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4910", Offset = "0xCE4910")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x275862C", Offset = "0x275862C", VA = "0x275862C", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x27586D4", Offset = "0x27586D4", VA = "0x27586D4")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x2758740", Offset = "0x2758740", VA = "0x2758740")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x27587C0", Offset = "0x27587C0", VA = "0x27587C0")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x27587DC", Offset = "0x27587DC", VA = "0x27587DC")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x27587FC", Offset = "0x27587FC", VA = "0x27587FC", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x2758884", Offset = "0x2758884", VA = "0x2758884")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x27588A0", Offset = "0x27588A0", VA = "0x27588A0")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018E")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x200018F")]
		public enum BoneMapType
		{
			[Token(Token = "0x4000B44")]
			Parent,
			[Token(Token = "0x4000B45")]
			Bone1,
			[Token(Token = "0x4000B46")]
			Bone2,
			[Token(Token = "0x4000B47")]
			Bone3
		}

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4928", Offset = "0xCE4928")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4940", Offset = "0xCE4940")]
		public float weight;

		[NonSerialized]
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updatePlaneRotations;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMapParent;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap1;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap2;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap boneMap3;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x27588C8", Offset = "0x27588C8", VA = "0x27588C8", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x275894C", Offset = "0x275894C", VA = "0x275894C")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x2758A28", Offset = "0x2758A28", VA = "0x2758A28")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x2758C4C", Offset = "0x2758C4C", VA = "0x2758C4C")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x2758D10", Offset = "0x2758D10", VA = "0x2758D10")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x2758E00", Offset = "0x2758E00", VA = "0x2758E00")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x2758E0C", Offset = "0x2758E0C", VA = "0x2758E0C")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x2758EC0", Offset = "0x2758EC0", VA = "0x2758EC0")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x2758F84", Offset = "0x2758F84", VA = "0x2758F84", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x27591C4", Offset = "0x27591C4", VA = "0x27591C4")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x2759238", Offset = "0x2759238", VA = "0x2759238")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000190")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4958", Offset = "0xCE4958")]
		public int iterations;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4970", Offset = "0xCE4970")]
		public float twistWeight;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x27593B8", Offset = "0x27593B8", VA = "0x27593B8", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x275971C", Offset = "0x275971C", VA = "0x275971C")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x2759800", Offset = "0x2759800", VA = "0x2759800")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x2759918", Offset = "0x2759918", VA = "0x2759918")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x2759928", Offset = "0x2759928", VA = "0x2759928")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x2759994", Offset = "0x2759994", VA = "0x2759994")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x2759A18", Offset = "0x2759A18", VA = "0x2759A18", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x2759FF0", Offset = "0x2759FF0", VA = "0x2759FF0")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x275A028", Offset = "0x275A028", VA = "0x275A028")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x275A2AC", Offset = "0x275A2AC", VA = "0x275A2AC")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x275A5B4", Offset = "0x275A5B4", VA = "0x275A5B4")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x275A6A0", Offset = "0x275A6A0", VA = "0x275A6A0")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x275A768", Offset = "0x275A768", VA = "0x275A768")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000191")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000192")]
		public class Point
		{
			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4A44", Offset = "0xCE4A44")]
			public float weight;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x273D498", Offset = "0x273D498", VA = "0x273D498")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x273D4E8", Offset = "0x273D4E8", VA = "0x273D4E8")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x273D588", Offset = "0x273D588", VA = "0x273D588")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x273D5C0", Offset = "0x273D5C0", VA = "0x273D5C0")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x273D5F8", Offset = "0x273D5F8", VA = "0x273D5F8")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x273D648", Offset = "0x273D648", VA = "0x273D648")]
			public void UpdateSolverLocalState()
			{
			}

			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x273D078", Offset = "0x273D078", VA = "0x273D078")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000193")]
		public class Bone : Point
		{
			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x17000107")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x6000DAF")]
				[Address(RVA = "0x273C9A8", Offset = "0x273C9A8", VA = "0x273C9A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000DB0")]
				[Address(RVA = "0x273CAA4", Offset = "0x273CAA4", VA = "0x273CAA4")]
				set
				{
				}
			}

			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x273CB28", Offset = "0x273CB28", VA = "0x273CB28")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x273CCD8", Offset = "0x273CCD8", VA = "0x273CCD8")]
			public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x273CEAC", Offset = "0x273CEAC", VA = "0x273CEAC")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x273D00C", Offset = "0x273D00C", VA = "0x273D00C")]
			public void SetToSolverPosition()
			{
			}

			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x273D034", Offset = "0x273D034", VA = "0x273D034")]
			public Bone()
			{
			}

			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x273D0B4", Offset = "0x273D0B4", VA = "0x273D0B4")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x273D104", Offset = "0x273D104", VA = "0x273D104")]
			public Bone(Transform transform, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000194")]
		public class Node : Point
		{
			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x273D434", Offset = "0x273D434", VA = "0x273D434")]
			public Node()
			{
			}

			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x273D438", Offset = "0x273D438", VA = "0x273D438")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x273D460", Offset = "0x273D460", VA = "0x273D460")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x2000195")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x2000196")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool executedInEditor;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE49A8", Offset = "0xCE49A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE49A8", Offset = "0xCE49A8")]
		public float IKPositionWeight;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE49FC", Offset = "0xCE49FC")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool firstInitiation;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		[SerializeField]
		protected Transform root;

		[Token(Token = "0x17000106")]
		public bool initiated
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x275B440", Offset = "0x275B440", VA = "0x275B440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF26C", Offset = "0xCEF26C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x275B448", Offset = "0x275B448", VA = "0x275B448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF27C", Offset = "0xCEF27C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x275B370", Offset = "0x275B370", VA = "0x275B370")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D93")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x2755AD0", Offset = "0x2755AD0", VA = "0x2755AD0")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x27559F0", Offset = "0x27559F0", VA = "0x27559F0")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x275B3E8", Offset = "0x275B3E8", VA = "0x275B3E8", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x275B3F4", Offset = "0x275B3F4", VA = "0x275B3F4")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x275B400", Offset = "0x275B400", VA = "0x275B400")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x275B408", Offset = "0x275B408", VA = "0x275B408")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x275B438", Offset = "0x275B438", VA = "0x275B438")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x6000D9D")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x6000D9E")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x6000D9F")]
		public abstract void FixTransforms();

		[Token(Token = "0x6000DA0")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x6000DA1")]
		protected abstract void OnInitiate();

		[Token(Token = "0x6000DA2")]
		protected abstract void OnUpdate();

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x275B454", Offset = "0x275B454", VA = "0x275B454")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x275B46C", Offset = "0x275B46C", VA = "0x275B46C")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x275B5A4", Offset = "0x275B5A4", VA = "0x275B5A4")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x275B64C", Offset = "0x275B64C", VA = "0x275B64C")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x275B8D4", Offset = "0x275B8D4", VA = "0x275B8D4")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000197")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4A5C", Offset = "0xCE4A5C")]
		public float poleWeight;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4A74", Offset = "0xCE4A74")]
		public float clampWeight;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4A8C", Offset = "0xCE4A8C")]
		public int clampSmoothing;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x17000108")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x275B968", Offset = "0x275B968", VA = "0x275B968")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000109")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x275B9A4", Offset = "0x275B9A4", VA = "0x275B9A4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700010A")]
		protected override int minBones
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x275C434", Offset = "0x275C434", VA = "0x275C434", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010B")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x275C818", Offset = "0x275C818", VA = "0x275C818", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x275B8EC", Offset = "0x275B8EC", VA = "0x275B8EC")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x275B9E0", Offset = "0x275B9E0", VA = "0x275B9E0", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x275BC00", Offset = "0x275BC00", VA = "0x275BC00", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x275C380", Offset = "0x275C380", VA = "0x275C380")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x275C110", Offset = "0x275C110", VA = "0x275C110")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x275C43C", Offset = "0x275C43C", VA = "0x275C43C")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x275C88C", Offset = "0x275C88C", VA = "0x275C88C")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000198")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4AA4", Offset = "0xCE4AA4")]
		public float IKRotationWeight;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x275C8E0", Offset = "0x275C8E0", VA = "0x275C8E0", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x275CC7C", Offset = "0x275CC7C", VA = "0x275CC7C")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x275CCE8", Offset = "0x275CCE8", VA = "0x275CCE8", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x275CE40", Offset = "0x275CE40", VA = "0x275CE40", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x275CFD4", Offset = "0x275CFD4", VA = "0x275CFD4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x275D030", Offset = "0x275D030", VA = "0x275D030", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x275D0A0", Offset = "0x275D0A0", VA = "0x275D0A0", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x275D410", Offset = "0x275D410", VA = "0x275D410", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x275D43C", Offset = "0x275D43C", VA = "0x275D43C")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x275D104", Offset = "0x275D104", VA = "0x275D104")]
		private void Read()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x275D4AC", Offset = "0x275D4AC", VA = "0x275D4AC")]
		private void Write()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x275D638", Offset = "0x275D638", VA = "0x275D638")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000199")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x275D79C", Offset = "0x275D79C", VA = "0x275D79C")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x275D84C", Offset = "0x275D84C", VA = "0x275D84C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x275D8D0", Offset = "0x275D8D0", VA = "0x275D8D0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x275DB00", Offset = "0x275DB00", VA = "0x275DB00")]
		protected void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x275E0DC", Offset = "0x275E0DC", VA = "0x275E0DC")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019A")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x1700010C")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x275EFEC", Offset = "0x275EFEC", VA = "0x275EFEC", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x275E0E4", Offset = "0x275E0E4", VA = "0x275E0E4")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x275E6A8", Offset = "0x275E6A8", VA = "0x275E6A8")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x275E7E8", Offset = "0x275E7E8", VA = "0x275E7E8", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x275E87C", Offset = "0x275E87C", VA = "0x275E87C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x275ED58", Offset = "0x275ED58", VA = "0x275ED58", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x275EFF4", Offset = "0x275EFF4", VA = "0x275EFF4")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x275E1C0", Offset = "0x275E1C0", VA = "0x275E1C0")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x275E794", Offset = "0x275E794", VA = "0x275E794")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x275EF90", Offset = "0x275EF90", VA = "0x275EF90")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x275E51C", Offset = "0x275E51C", VA = "0x275E51C")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x275F644", Offset = "0x275F644", VA = "0x275F644")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x275F6B8", Offset = "0x275F6B8", VA = "0x275F6B8")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x275F780", Offset = "0x275F780", VA = "0x275F780")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x275F830", Offset = "0x275F830", VA = "0x275F830")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x275EB08", Offset = "0x275EB08", VA = "0x275EB08")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x275EC30", Offset = "0x275EC30", VA = "0x275EC30")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x275F934", Offset = "0x275F934", VA = "0x275F934")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x275F214", Offset = "0x275F214", VA = "0x275F214")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x275E784", Offset = "0x275E784", VA = "0x275E784")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x275FEC4", Offset = "0x275FEC4", VA = "0x275FEC4")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x275FA78", Offset = "0x275FA78", VA = "0x275FA78")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x275F070", Offset = "0x275F070", VA = "0x275F070")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x275F150", Offset = "0x275F150", VA = "0x275F150")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x275FF90", Offset = "0x275FF90", VA = "0x275FF90")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019B")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4ABC", Offset = "0xCE4ABC")]
		public float rootPin;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x2760010", Offset = "0x2760010", VA = "0x2760010", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x2760650", Offset = "0x2760650", VA = "0x2760650", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x27606E8", Offset = "0x27606E8", VA = "0x27606E8", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x2760788", Offset = "0x2760788", VA = "0x2760788", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x2760884", Offset = "0x2760884", VA = "0x2760884")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x2760920", Offset = "0x2760920", VA = "0x2760920", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x2760D50", Offset = "0x2760D50", VA = "0x2760D50", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x2760F48", Offset = "0x2760F48", VA = "0x2760F48", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x2760DFC", Offset = "0x2760DFC", VA = "0x2760DFC")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x2760B0C", Offset = "0x2760B0C", VA = "0x2760B0C")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x2760FE0", Offset = "0x2760FE0", VA = "0x2760FE0")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019C")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4AD4", Offset = "0xCE4AD4")]
		public int iterations;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x22F392C", Offset = "0x22F392C", VA = "0x22F392C")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x22F3A1C", Offset = "0x22F3A1C", VA = "0x22F3A1C")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x22F3A78", Offset = "0x22F3A78", VA = "0x22F3A78")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x22F3BA8", Offset = "0x22F3BA8", VA = "0x22F3BA8")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x22F3C04", Offset = "0x22F3C04", VA = "0x22F3C04")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x22F3C84", Offset = "0x22F3C84", VA = "0x22F3C84", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x22F3E28", Offset = "0x22F3E28", VA = "0x22F3E28", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x22F3F98", Offset = "0x22F3F98", VA = "0x22F3F98", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x22F41A4", Offset = "0x22F41A4", VA = "0x22F41A4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x22F427C", Offset = "0x22F427C", VA = "0x22F427C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x22F4368", Offset = "0x22F4368", VA = "0x22F4368", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x22F44DC", Offset = "0x22F44DC", VA = "0x22F44DC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x22F4634", Offset = "0x22F4634", VA = "0x22F4634", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x22F4880", Offset = "0x22F4880", VA = "0x22F4880", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x22F4B5C", Offset = "0x22F4B5C", VA = "0x22F4B5C", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x22F4BA0", Offset = "0x22F4BA0", VA = "0x22F4BA0", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x22F4C90", Offset = "0x22F4C90", VA = "0x22F4C90")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019D")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x4000BA1")]
		Body,
		[Token(Token = "0x4000BA2")]
		LeftShoulder,
		[Token(Token = "0x4000BA3")]
		RightShoulder,
		[Token(Token = "0x4000BA4")]
		LeftThigh,
		[Token(Token = "0x4000BA5")]
		RightThigh,
		[Token(Token = "0x4000BA6")]
		LeftHand,
		[Token(Token = "0x4000BA7")]
		RightHand,
		[Token(Token = "0x4000BA8")]
		LeftFoot,
		[Token(Token = "0x4000BA9")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x200019E")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x4000BAB")]
		LeftArm,
		[Token(Token = "0x4000BAC")]
		RightArm,
		[Token(Token = "0x4000BAD")]
		LeftLeg,
		[Token(Token = "0x4000BAE")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x200019F")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4AEC", Offset = "0xCE4AEC")]
		public float spineStiffness;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4B04", Offset = "0xCE4B04")]
		public float pullBodyVertical;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4B1C", Offset = "0xCE4B1C")]
		public float pullBodyHorizontal;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE4B34", Offset = "0xCE4B34")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x1700010D")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x22F4D94", Offset = "0x22F4D94", VA = "0x22F4D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x22F4EDC", Offset = "0x22F4EDC", VA = "0x22F4EDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x22F4EE4", Offset = "0x22F4EE4", VA = "0x22F4EE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x22F4EEC", Offset = "0x22F4EEC", VA = "0x22F4EEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x22F4EF4", Offset = "0x22F4EF4", VA = "0x22F4EF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x22F4EFC", Offset = "0x22F4EFC", VA = "0x22F4EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x22F4F04", Offset = "0x22F4F04", VA = "0x22F4F04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x22F4F0C", Offset = "0x22F4F0C", VA = "0x22F4F0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x22F4F14", Offset = "0x22F4F14", VA = "0x22F4F14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x22F4F1C", Offset = "0x22F4F1C", VA = "0x22F4F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x22F4F54", Offset = "0x22F4F54", VA = "0x22F4F54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x22F4F8C", Offset = "0x22F4F8C", VA = "0x22F4F8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x22F4FC4", Offset = "0x22F4FC4", VA = "0x22F4FC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x22F4FFC", Offset = "0x22F4FFC", VA = "0x22F4FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x22F5030", Offset = "0x22F5030", VA = "0x22F5030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x22F5068", Offset = "0x22F5068", VA = "0x22F5068")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x22F50A0", Offset = "0x22F50A0", VA = "0x22F50A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x22F50D8", Offset = "0x22F50D8", VA = "0x22F50D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x22F6FA0", Offset = "0x22F6FA0", VA = "0x22F6FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF28C", Offset = "0xCEF28C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x22F6FAC", Offset = "0x22F6FAC", VA = "0x22F6FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF29C", Offset = "0xCEF29C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x22F510C", Offset = "0x22F510C", VA = "0x22F510C")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x22F5218", Offset = "0x22F5218", VA = "0x22F5218")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x22F5160", Offset = "0x22F5160", VA = "0x22F5160")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x22F52A4", Offset = "0x22F52A4", VA = "0x22F52A4")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x22F4D9C", Offset = "0x22F4D9C", VA = "0x22F4D9C")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x22F5374", Offset = "0x22F5374", VA = "0x22F5374")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x22F542C", Offset = "0x22F542C", VA = "0x22F542C")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x22F54E0", Offset = "0x22F54E0", VA = "0x22F54E0")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x22F5594", Offset = "0x22F5594", VA = "0x22F5594")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x22F559C", Offset = "0x22F559C", VA = "0x22F559C")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x22F55D0", Offset = "0x22F55D0", VA = "0x22F55D0")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x22F5698", Offset = "0x22F5698", VA = "0x22F5698", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x22F583C", Offset = "0x22F583C", VA = "0x22F583C")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x22F6A1C", Offset = "0x22F6A1C", VA = "0x22F6A1C")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x22F6E30", Offset = "0x22F6E30", VA = "0x22F6E30")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x22F6E90", Offset = "0x22F6E90", VA = "0x22F6E90")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x22F6CB8", Offset = "0x22F6CB8", VA = "0x22F6CB8")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x22F6D74", Offset = "0x22F6D74", VA = "0x22F6D74")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x22F6FB8", Offset = "0x22F6FB8", VA = "0x22F6FB8")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x22F7090", Offset = "0x22F7090", VA = "0x22F7090", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x22F718C", Offset = "0x22F718C", VA = "0x22F718C")]
		private void PullBody()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x22F72B4", Offset = "0x22F72B4", VA = "0x22F72B4")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x22F73F8", Offset = "0x22F73F8", VA = "0x22F73F8")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x22F7528", Offset = "0x22F7528", VA = "0x22F7528", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x22F7768", Offset = "0x22F7768", VA = "0x22F7768", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x22F77EC", Offset = "0x22F77EC", VA = "0x22F77EC")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A0")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x17000120")]
		protected virtual int minBones
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x22F8058", Offset = "0x22F8058", VA = "0x22F8058", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000121")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x22F8060", Offset = "0x22F8060", VA = "0x22F8060", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000122")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x22F8068", Offset = "0x22F8068", VA = "0x22F8068", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000123")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x22F84F0", Offset = "0x22F84F0", VA = "0x22F84F0", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000124")]
		protected float positionOffset
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x22F85B8", Offset = "0x22F85B8", VA = "0x22F85B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x22F77F8", Offset = "0x22F77F8", VA = "0x22F77F8")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x22F7994", Offset = "0x22F7994", VA = "0x22F7994")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x22F7ACC", Offset = "0x22F7ACC", VA = "0x22F7ACC", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x22F7B38", Offset = "0x22F7B38", VA = "0x22F7B38", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x22F7BB8", Offset = "0x22F7BB8", VA = "0x22F7BB8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x22F7F60", Offset = "0x22F7F60", VA = "0x22F7F60", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x22F7F68", Offset = "0x22F7F68", VA = "0x22F7F68", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x22F8070", Offset = "0x22F8070", VA = "0x22F8070", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x22F8074", Offset = "0x22F8074", VA = "0x22F8074", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x22F8078", Offset = "0x22F8078", VA = "0x22F8078")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x22F860C", Offset = "0x22F860C", VA = "0x22F860C")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x22F8924", Offset = "0x22F8924", VA = "0x22F8924")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x22F8B18", Offset = "0x22F8B18", VA = "0x22F8B18")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A1")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4B44", Offset = "0xCE4B44")]
		public float IKRotationWeight;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x22F8B84", Offset = "0x22F8B84", VA = "0x22F8B84", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x22F8F24", Offset = "0x22F8F24", VA = "0x22F8F24")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x22F8F94", Offset = "0x22F8F94", VA = "0x22F8F94", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x22F90EC", Offset = "0x22F90EC", VA = "0x22F90EC", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x22F9280", Offset = "0x22F9280", VA = "0x22F9280", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x22F92DC", Offset = "0x22F92DC", VA = "0x22F92DC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x22F934C", Offset = "0x22F934C", VA = "0x22F934C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x22F96BC", Offset = "0x22F96BC", VA = "0x22F96BC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x22F96E8", Offset = "0x22F96E8", VA = "0x22F96E8")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x22F93B0", Offset = "0x22F93B0", VA = "0x22F93B0")]
		private void Read()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x22F9780", Offset = "0x22F9780", VA = "0x22F9780")]
		private void Write()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x22F990C", Offset = "0x22F990C", VA = "0x22F990C")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A2")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x20001A3")]
		public enum BendModifier
		{
			[Token(Token = "0x4000BD9")]
			Animation,
			[Token(Token = "0x4000BDA")]
			Target,
			[Token(Token = "0x4000BDB")]
			Parent,
			[Token(Token = "0x4000BDC")]
			Arm,
			[Token(Token = "0x4000BDD")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x20001A4")]
		public struct AxisDirection
		{
			[Token(Token = "0x4000BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x4000BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x4000BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x273D8EC", Offset = "0x273D8EC", VA = "0x273D8EC")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4B5C", Offset = "0xCE4B5C")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4B74", Offset = "0xCE4B74")]
		public float bendModifierWeight;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x17000125")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x22FAB88", Offset = "0x22FAB88", VA = "0x22FAB88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x22F9A64", Offset = "0x22F9A64", VA = "0x22F9A64")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x22F9AB4", Offset = "0x22F9AB4", VA = "0x22F9AB4")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x22F9B00", Offset = "0x22F9B00", VA = "0x22F9B00", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x22F9FD4", Offset = "0x22F9FD4", VA = "0x22F9FD4", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x22FA91C", Offset = "0x22FA91C", VA = "0x22FA91C", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x22FA9C8", Offset = "0x22FA9C8", VA = "0x22FA9C8")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x22FAB04", Offset = "0x22FAB04", VA = "0x22FAB04")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x22F9DFC", Offset = "0x22F9DFC", VA = "0x22F9DFC")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x22FA0B8", Offset = "0x22FA0B8", VA = "0x22FA0B8")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20001A5")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20001A6")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x4000BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 baseForwardOffsetEuler;

			[Token(Token = "0x1700012C")]
			public Vector3 forward
			{
				[Token(Token = "0x6000E8A")]
				[Address(RVA = "0x273DB78", Offset = "0x273DB78", VA = "0x273DB78")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x273D94C", Offset = "0x273D94C", VA = "0x273D94C")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x273D950", Offset = "0x273D950", VA = "0x273D950")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x273D978", Offset = "0x273D978", VA = "0x273D978")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x273DA70", Offset = "0x273DA70", VA = "0x273DA70")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4B8C", Offset = "0xCE4B8C")]
		public float bodyWeight;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4BA4", Offset = "0xCE4BA4")]
		public float headWeight;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4BBC", Offset = "0xCE4BBC")]
		public float eyesWeight;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4BD4", Offset = "0xCE4BD4")]
		public float clampWeight;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4BEC", Offset = "0xCE4BEC")]
		public float clampWeightHead;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4C04", Offset = "0xCE4C04")]
		public float clampWeightEyes;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4C1C", Offset = "0xCE4C1C")]
		public int clampSmoothing;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Vector3[] spineForwards;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3[] headForwards;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3[] eyeForward;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool isDirty;

		[Token(Token = "0x17000126")]
		protected bool spineIsValid
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x22FB338", Offset = "0x22FB338", VA = "0x22FB338")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000127")]
		protected bool spineIsEmpty
		{
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x22FB508", Offset = "0x22FB508", VA = "0x22FB508")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000128")]
		protected bool headIsValid
		{
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x22FB418", Offset = "0x22FB418", VA = "0x22FB418")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000129")]
		protected bool headIsEmpty
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x22FB52C", Offset = "0x22FB52C", VA = "0x22FB52C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012A")]
		protected bool eyesIsValid
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x22FB428", Offset = "0x22FB428", VA = "0x22FB428")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012B")]
		protected bool eyesIsEmpty
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x22FB5A4", Offset = "0x22FB5A4", VA = "0x22FB5A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x22FABA4", Offset = "0x22FABA4", VA = "0x22FABA4")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x22FABD4", Offset = "0x22FABD4", VA = "0x22FABD4")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x22FAC2C", Offset = "0x22FAC2C", VA = "0x22FAC2C")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x22FACA8", Offset = "0x22FACA8", VA = "0x22FACA8")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x22FAD40", Offset = "0x22FAD40", VA = "0x22FAD40")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x22FAE00", Offset = "0x22FAE00", VA = "0x22FAE00")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x22FAEFC", Offset = "0x22FAEFC", VA = "0x22FAEFC", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x22FB028", Offset = "0x22FB028", VA = "0x22FB028")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x22FB034", Offset = "0x22FB034", VA = "0x22FB034", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x22FB178", Offset = "0x22FB178", VA = "0x22FB178", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x22FB5C8", Offset = "0x22FB5C8", VA = "0x22FB5C8", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x22FB808", Offset = "0x22FB808", VA = "0x22FB808", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x22FB9A4", Offset = "0x22FB9A4", VA = "0x22FB9A4")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x22FBBD4", Offset = "0x22FBBD4", VA = "0x22FBBD4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x22FBEA8", Offset = "0x22FBEA8", VA = "0x22FBEA8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x22FBF78", Offset = "0x22FBF78", VA = "0x22FBF78")]
		protected void SolveSpine()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x22FC118", Offset = "0x22FC118", VA = "0x22FC118")]
		protected void SolveHead()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x22FC33C", Offset = "0x22FC33C", VA = "0x22FC33C")]
		protected void SolveEyes()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x22FC6F0", Offset = "0x22FC6F0", VA = "0x22FC6F0")]
		protected Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x22FBA50", Offset = "0x22FBA50", VA = "0x22FBA50")]
		protected void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x22FC960", Offset = "0x22FC960", VA = "0x22FC960")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A7")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20001A8")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x4000BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x4000BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x273DBB4", Offset = "0x273DBB4", VA = "0x273DBB4")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x273DCB0", Offset = "0x273DCB0", VA = "0x273DCB0")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x273DCE0", Offset = "0x273DCE0", VA = "0x273DCE0")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x273DD1C", Offset = "0x273DD1C", VA = "0x273DD1C")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4C34", Offset = "0xCE4C34")]
		public float IKRotationWeight;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x22FCB6C", Offset = "0x22FCB6C", VA = "0x22FCB6C")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x22FCCC8", Offset = "0x22FCCC8", VA = "0x22FCCC8")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x22FCE0C", Offset = "0x22FCE0C", VA = "0x22FCE0C")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x22FCE18", Offset = "0x22FCE18", VA = "0x22FCE18")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x22FCE48", Offset = "0x22FCE48", VA = "0x22FCE48")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x22FCE54", Offset = "0x22FCE54", VA = "0x22FCE54")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x22FCE5C", Offset = "0x22FCE5C", VA = "0x22FCE5C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x22FCF5C", Offset = "0x22FCF5C", VA = "0x22FCF5C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x22FD078", Offset = "0x22FD078", VA = "0x22FD078", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x22FD0C4", Offset = "0x22FD0C4", VA = "0x22FD0C4", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x22FD124", Offset = "0x22FD124", VA = "0x22FD124", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x22FD4EC", Offset = "0x22FD4EC", VA = "0x22FD4EC")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x22FD544", Offset = "0x22FD544", VA = "0x22FD544")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, Vector3 targetPosition, Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x22FD900", Offset = "0x22FD900", VA = "0x22FD900")]
		private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x22FDA68", Offset = "0x22FDA68", VA = "0x22FDA68", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x22FDBD0", Offset = "0x22FDBD0", VA = "0x22FDBD0")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x22FDB44", Offset = "0x22FDB44", VA = "0x22FDB44")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x22FDCD4", Offset = "0x22FDCD4", VA = "0x22FDCD4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x22FE4A8", Offset = "0x22FE4A8", VA = "0x22FE4A8", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x22FE4AC", Offset = "0x22FE4AC", VA = "0x22FE4AC", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x22FE4B0", Offset = "0x22FE4B0", VA = "0x22FE4B0", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x22FE2C0", Offset = "0x22FE2C0", VA = "0x22FE2C0")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x22FAA38", Offset = "0x22FAA38", VA = "0x22FAA38")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A9")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20001AA")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x20001AB")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x4000C41")]
				YawPitch,
				[Token(Token = "0x4000C42")]
				FromTo
			}

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4E70", Offset = "0xCE4E70")]
			public Transform target;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4EA8", Offset = "0xCE4EA8")]
			public Transform bendGoal;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4EE0", Offset = "0xCE4EE0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4EE0", Offset = "0xCE4EE0")]
			public float positionWeight;

			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4F34", Offset = "0xCE4F34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4F34", Offset = "0xCE4F34")]
			public float rotationWeight;

			[Token(Token = "0x4000C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4F88", Offset = "0xCE4F88")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x4000C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4FC0", Offset = "0xCE4FC0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4FC0", Offset = "0xCE4FC0")]
			public float shoulderRotationWeight;

			[Token(Token = "0x4000C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5014", Offset = "0xCE5014")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5014", Offset = "0xCE5014")]
			public float shoulderTwistWeight;

			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5068", Offset = "0xCE5068")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5068", Offset = "0xCE5068")]
			public float bendGoalWeight;

			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE50BC", Offset = "0xCE50BC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE50BC", Offset = "0xCE50BC")]
			public float swivelOffset;

			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5118", Offset = "0xCE5118")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5150", Offset = "0xCE5150")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5188", Offset = "0xCE5188")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5188", Offset = "0xCE5188")]
			public float armLengthMlp;

			[Token(Token = "0x4000C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE51E0", Offset = "0xCE51E0")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4000C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4000C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4000C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x4000C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x4000C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE5258", Offset = "0xCE5258")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x4000C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE5268", Offset = "0xCE5268")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x4000C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x4000C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x4000C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x4000C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x4000C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x4000C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x4000C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x4000C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			private Vector3 upperArmBendAxis;

			[Token(Token = "0x4000C3E")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x4000C3F")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x1700012E")]
			public Vector3 position
			{
				[Token(Token = "0x6000EC2")]
				[Address(RVA = "0x273DD20", Offset = "0x273DD20", VA = "0x273DD20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF2CC", Offset = "0xCEF2CC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000EC3")]
				[Address(RVA = "0x273DD2C", Offset = "0x273DD2C", VA = "0x273DD2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF2DC", Offset = "0xCEF2DC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700012F")]
			public Quaternion rotation
			{
				[Token(Token = "0x6000EC4")]
				[Address(RVA = "0x273DD38", Offset = "0x273DD38", VA = "0x273DD38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF2EC", Offset = "0xCEF2EC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000EC5")]
				[Address(RVA = "0x273DD44", Offset = "0x273DD44", VA = "0x273DD44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF2FC", Offset = "0xCEF2FC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000130")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x6000EC6")]
				[Address(RVA = "0x273DD50", Offset = "0x273DD50", VA = "0x273DD50")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000131")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x6000EC7")]
				[Address(RVA = "0x273DD84", Offset = "0x273DD84", VA = "0x273DD84")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000132")]
			private VirtualBone forearm
			{
				[Token(Token = "0x6000EC8")]
				[Address(RVA = "0x273DDC4", Offset = "0x273DDC4", VA = "0x273DDC4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000133")]
			private VirtualBone hand
			{
				[Token(Token = "0x6000EC9")]
				[Address(RVA = "0x273DE10", Offset = "0x273DE10", VA = "0x273DE10")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x273DE5C", Offset = "0x273DE5C", VA = "0x273DE5C", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x273E71C", Offset = "0x273E71C", VA = "0x273E71C", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x273E8D8", Offset = "0x273E8D8", VA = "0x273E8D8", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x273E8FC", Offset = "0x273E8FC", VA = "0x273E8FC")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x273EB9C", Offset = "0x273EB9C", VA = "0x273EB9C")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x274010C", Offset = "0x274010C", VA = "0x274010C", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x2740138", Offset = "0x2740138", VA = "0x2740138", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x273FB48", Offset = "0x273FB48", VA = "0x273FB48")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x273FBC4", Offset = "0x273FBC4", VA = "0x273FBC4")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x2740358", Offset = "0x2740358", VA = "0x2740358")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, Color color)
			{
			}

			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x274047C", Offset = "0x274047C", VA = "0x274047C")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001AC")]
		public abstract class BodyPart
		{
			[Token(Token = "0x4000C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE5278", Offset = "0xCE5278")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x4000C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE5288", Offset = "0xCE5288")]
			private float <mag>k__BackingField;

			[Token(Token = "0x4000C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x4000C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x4000C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x4000C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x4000C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x4000C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			protected int LOD;

			[Token(Token = "0x17000134")]
			public float sqrMag
			{
				[Token(Token = "0x6000EDA")]
				[Address(RVA = "0x27405D4", Offset = "0x27405D4", VA = "0x27405D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF30C", Offset = "0xCEF30C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000EDB")]
				[Address(RVA = "0x27405DC", Offset = "0x27405DC", VA = "0x27405DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF31C", Offset = "0xCEF31C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000135")]
			public float mag
			{
				[Token(Token = "0x6000EDC")]
				[Address(RVA = "0x27405E4", Offset = "0x27405E4", VA = "0x27405E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF32C", Offset = "0xCEF32C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000EDD")]
				[Address(RVA = "0x27405EC", Offset = "0x27405EC", VA = "0x27405EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF33C", Offset = "0xCEF33C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000ED5")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x6000ED6")]
			public abstract void PreSolve();

			[Token(Token = "0x6000ED7")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x6000ED8")]
			public abstract void ApplyOffsets(float scale);

			[Token(Token = "0x6000ED9")]
			public abstract void ResetOffsets();

			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x27405F4", Offset = "0x27405F4", VA = "0x27405F4")]
			public void SetLOD(int LOD)
			{
			}

			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x27405FC", Offset = "0x27405FC", VA = "0x27405FC")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x27406D0", Offset = "0x27406D0", VA = "0x27406D0")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x2740764", Offset = "0x2740764", VA = "0x2740764")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x2740810", Offset = "0x2740810", VA = "0x2740810")]
			public void Translate(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x2740864", Offset = "0x2740864", VA = "0x2740864")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x273FFC8", Offset = "0x273FFC8", VA = "0x273FFC8")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x27409A0", Offset = "0x27409A0", VA = "0x27409A0")]
			public void Visualize(Color color)
			{
			}

			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x2740AE0", Offset = "0x2740AE0", VA = "0x2740AE0")]
			public void Visualize()
			{
			}

			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x2740560", Offset = "0x2740560", VA = "0x2740560")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001AD")]
		public class Footstep
		{
			[Token(Token = "0x4000C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x4000C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x4000C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x4000C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x4000C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x4000C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
			public bool relaxFlag;

			[Token(Token = "0x4000C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE52A8", Offset = "0xCE52A8")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x4000C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x4000C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x4000C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x4000C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x4000C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x4000C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x4000C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x17000136")]
			public bool isStepping
			{
				[Token(Token = "0x6000EE8")]
				[Address(RVA = "0x2740B08", Offset = "0x2740B08", VA = "0x2740B08")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000137")]
			public float stepProgress
			{
				[Token(Token = "0x6000EE9")]
				[Address(RVA = "0x2740B1C", Offset = "0x2740B1C", VA = "0x2740B1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF34C", Offset = "0xCEF34C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000EEA")]
				[Address(RVA = "0x2740B24", Offset = "0x2740B24", VA = "0x2740B24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF35C", Offset = "0xCEF35C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x2740B2C", Offset = "0x2740B2C", VA = "0x2740B2C")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x2740C64", Offset = "0x2740C64", VA = "0x2740C64")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x2740CAC", Offset = "0x2740CAC", VA = "0x2740CAC")]
			public void StepTo(Vector3 p, Quaternion rootRotation, float stepThreshold)
			{
			}

			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x2740E78", Offset = "0x2740E78", VA = "0x2740E78")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x2740FEC", Offset = "0x2740FEC", VA = "0x2740FEC")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x2741144", Offset = "0x2741144", VA = "0x2741144")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001AE")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x4000C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE52B8", Offset = "0xCE52B8")]
			public Transform target;

			[Token(Token = "0x4000C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE52F0", Offset = "0xCE52F0")]
			public Transform bendGoal;

			[Token(Token = "0x4000C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5328", Offset = "0xCE5328")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5328", Offset = "0xCE5328")]
			public float positionWeight;

			[Token(Token = "0x4000C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE537C", Offset = "0xCE537C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE537C", Offset = "0xCE537C")]
			public float rotationWeight;

			[Token(Token = "0x4000C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE53D0", Offset = "0xCE53D0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE53D0", Offset = "0xCE53D0")]
			public float bendGoalWeight;

			[Token(Token = "0x4000C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5424", Offset = "0xCE5424")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5424", Offset = "0xCE5424")]
			public float swivelOffset;

			[Token(Token = "0x4000C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5480", Offset = "0xCE5480")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5480", Offset = "0xCE5480")]
			public float bendToTargetWeight;

			[Token(Token = "0x4000C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE54D4", Offset = "0xCE54D4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE54D4", Offset = "0xCE54D4")]
			public float legLengthMlp;

			[Token(Token = "0x4000C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE552C", Offset = "0xCE552C")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4000C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4000C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4000C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x4000C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public bool useAnimatedBendNormal;

			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE55D4", Offset = "0xCE55D4")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE55E4", Offset = "0xCE55E4")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE55F4", Offset = "0xCE55F4")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE5604", Offset = "0xCE5604")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private Vector3 footPosition;

			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Quaternion footRotation;

			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private Vector3 bendNormal;

			[Token(Token = "0x4000C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x4000C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x17000138")]
			public Vector3 position
			{
				[Token(Token = "0x6000EF1")]
				[Address(RVA = "0x2741280", Offset = "0x2741280", VA = "0x2741280")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF36C", Offset = "0xCEF36C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000EF2")]
				[Address(RVA = "0x274128C", Offset = "0x274128C", VA = "0x274128C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF37C", Offset = "0xCEF37C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000139")]
			public Quaternion rotation
			{
				[Token(Token = "0x6000EF3")]
				[Address(RVA = "0x2741298", Offset = "0x2741298", VA = "0x2741298")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF38C", Offset = "0xCEF38C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000EF4")]
				[Address(RVA = "0x27412A4", Offset = "0x27412A4", VA = "0x27412A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF39C", Offset = "0xCEF39C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700013A")]
			public bool hasToes
			{
				[Token(Token = "0x6000EF5")]
				[Address(RVA = "0x27412B0", Offset = "0x27412B0", VA = "0x27412B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF3AC", Offset = "0xCEF3AC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000EF6")]
				[Address(RVA = "0x27412B8", Offset = "0x27412B8", VA = "0x27412B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF3BC", Offset = "0xCEF3BC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700013B")]
			public VirtualBone thigh
			{
				[Token(Token = "0x6000EF7")]
				[Address(RVA = "0x27412C4", Offset = "0x27412C4", VA = "0x27412C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013C")]
			private VirtualBone calf
			{
				[Token(Token = "0x6000EF8")]
				[Address(RVA = "0x27412F8", Offset = "0x27412F8", VA = "0x27412F8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013D")]
			private VirtualBone foot
			{
				[Token(Token = "0x6000EF9")]
				[Address(RVA = "0x2741330", Offset = "0x2741330", VA = "0x2741330")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013E")]
			private VirtualBone toes
			{
				[Token(Token = "0x6000EFA")]
				[Address(RVA = "0x2741368", Offset = "0x2741368", VA = "0x2741368")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013F")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x6000EFB")]
				[Address(RVA = "0x27413A0", Offset = "0x27413A0", VA = "0x27413A0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000140")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x6000EFC")]
				[Address(RVA = "0x27413E0", Offset = "0x27413E0", VA = "0x27413E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF3CC", Offset = "0xCEF3CC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000EFD")]
				[Address(RVA = "0x27413EC", Offset = "0x27413EC", VA = "0x27413EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF3DC", Offset = "0xCEF3DC")]
				private set
				{
				}
			}

			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x27413F8", Offset = "0x27413F8", VA = "0x27413F8", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x2741A2C", Offset = "0x2741A2C", VA = "0x2741A2C", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x2742000", Offset = "0x2742000", VA = "0x2742000", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x2741FB0", Offset = "0x2741FB0", VA = "0x2741FB0")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x2741E40", Offset = "0x2741E40", VA = "0x2741E40")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x27423E8", Offset = "0x27423E8", VA = "0x27423E8")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x27428AC", Offset = "0x27428AC", VA = "0x27428AC")]
			private void FixTwistRotations()
			{
			}

			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x274258C", Offset = "0x274258C", VA = "0x274258C")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x2742BA4", Offset = "0x2742BA4", VA = "0x2742BA4", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x2742DC0", Offset = "0x2742DC0", VA = "0x2742DC0", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x2742E0C", Offset = "0x2742E0C", VA = "0x2742E0C")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001AF")]
		public class Locomotion
		{
			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5614", Offset = "0xCE5614")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5614", Offset = "0xCE5614")]
			public float weight;

			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5668", Offset = "0xCE5668")]
			public float footDistance;

			[Token(Token = "0x4000C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE56A0", Offset = "0xCE56A0")]
			public float stepThreshold;

			[Token(Token = "0x4000C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE56D8", Offset = "0xCE56D8")]
			public float angleThreshold;

			[Token(Token = "0x4000C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5710", Offset = "0xCE5710")]
			public float comAngleMlp;

			[Token(Token = "0x4000C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5748", Offset = "0xCE5748")]
			public float maxVelocity;

			[Token(Token = "0x4000C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5780", Offset = "0xCE5780")]
			public float velocityFactor;

			[Token(Token = "0x4000C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE57B8", Offset = "0xCE57B8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE57B8", Offset = "0xCE57B8")]
			public float maxLegStretch;

			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5810", Offset = "0xCE5810")]
			public float rootSpeed;

			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5848", Offset = "0xCE5848")]
			public float stepSpeed;

			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5880", Offset = "0xCE5880")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE58B8", Offset = "0xCE58B8")]
			public float maxBodyYOffset;

			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE58F0", Offset = "0xCE58F0")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5928", Offset = "0xCE5928")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5928", Offset = "0xCE5928")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5980", Offset = "0xCE5980")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE59B8", Offset = "0xCE59B8")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE59F0", Offset = "0xCE59F0")]
			public Vector3 offset;

			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x4000C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x4000C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x4000C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5A68", Offset = "0xCE5A68")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x4000C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5AA0", Offset = "0xCE5AA0")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE5AD8", Offset = "0xCE5AD8")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Footstep[] footsteps;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Vector3 lastComPosition;

			[Token(Token = "0x4000C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private Vector3 comVelocity;

			[Token(Token = "0x4000C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int leftFootIndex;

			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int rightFootIndex;

			[Token(Token = "0x17000141")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x6000F09")]
				[Address(RVA = "0x2742EDC", Offset = "0x2742EDC", VA = "0x2742EDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF3EC", Offset = "0xCEF3EC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000F0A")]
				[Address(RVA = "0x2742EE8", Offset = "0x2742EE8", VA = "0x2742EE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF3FC", Offset = "0xCEF3FC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000142")]
			public Vector3 leftFootstepPosition
			{
				[Token(Token = "0x6000F11")]
				[Address(RVA = "0x2744A94", Offset = "0x2744A94", VA = "0x2744A94")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000143")]
			public Vector3 rightFootstepPosition
			{
				[Token(Token = "0x6000F12")]
				[Address(RVA = "0x2744AD4", Offset = "0x2744AD4", VA = "0x2744AD4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000144")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x6000F13")]
				[Address(RVA = "0x2744B18", Offset = "0x2744B18", VA = "0x2744B18")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x17000145")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x6000F14")]
				[Address(RVA = "0x2744B58", Offset = "0x2744B58", VA = "0x2744B58")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x2742EF4", Offset = "0x2742EF4", VA = "0x2742EF4")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes, float scale)
			{
			}

			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x27431B0", Offset = "0x27431B0", VA = "0x27431B0")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x2743380", Offset = "0x2743380", VA = "0x2743380")]
			public void Relax()
			{
			}

			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x27433E4", Offset = "0x27433E4", VA = "0x27433E4")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x274362C", Offset = "0x274362C", VA = "0x274362C")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x27436F0", Offset = "0x27436F0", VA = "0x27436F0")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset, float scale)
			{
			}

			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x274480C", Offset = "0x274480C", VA = "0x274480C")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x2744944", Offset = "0x2744944", VA = "0x2744944")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x27449C8", Offset = "0x27449C8", VA = "0x27449C8")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x2744B9C", Offset = "0x2744B9C", VA = "0x2744B9C")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001B0")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x4000C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5AE8", Offset = "0xCE5AE8")]
			public Transform headTarget;

			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5B20", Offset = "0xCE5B20")]
			public Transform pelvisTarget;

			[Token(Token = "0x4000C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5B58", Offset = "0xCE5B58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5B58", Offset = "0xCE5B58")]
			public float positionWeight;

			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5BAC", Offset = "0xCE5BAC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5BAC", Offset = "0xCE5BAC")]
			public float rotationWeight;

			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5C00", Offset = "0xCE5C00")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5C00", Offset = "0xCE5C00")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5C54", Offset = "0xCE5C54")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5C54", Offset = "0xCE5C54")]
			public float pelvisRotationWeight;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5CA8", Offset = "0xCE5CA8")]
			public Transform chestGoal;

			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5CE0", Offset = "0xCE5CE0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5CE0", Offset = "0xCE5CE0")]
			public float chestGoalWeight;

			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5D34", Offset = "0xCE5D34")]
			public float minHeadHeight;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5D6C", Offset = "0xCE5D6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5D6C", Offset = "0xCE5D6C")]
			public float bodyPosStiffness;

			[Token(Token = "0x4000C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5DC0", Offset = "0xCE5DC0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5DC0", Offset = "0xCE5DC0")]
			public float bodyRotStiffness;

			[Token(Token = "0x4000C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5E14", Offset = "0xCE5E14")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCE5E14", Offset = "0xCE5E14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5E14", Offset = "0xCE5E14")]
			public float neckStiffness;

			[Token(Token = "0x4000C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5E8C", Offset = "0xCE5E8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5E8C", Offset = "0xCE5E8C")]
			public float rotateChestByHands;

			[Token(Token = "0x4000C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5EE0", Offset = "0xCE5EE0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5EE0", Offset = "0xCE5EE0")]
			public float chestClampWeight;

			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5F34", Offset = "0xCE5F34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5F34", Offset = "0xCE5F34")]
			public float headClampWeight;

			[Token(Token = "0x4000CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5F88", Offset = "0xCE5F88")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x4000CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE5FC0", Offset = "0xCE5FC0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE5FC0", Offset = "0xCE5FC0")]
			public float maintainPelvisPosition;

			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE6014", Offset = "0xCE6014")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6014", Offset = "0xCE6014")]
			public float maxRootAngle;

			[Token(Token = "0x4000CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE606C", Offset = "0xCE606C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE606C", Offset = "0xCE606C")]
			public float rootHeadingOffset;

			[NonSerialized]
			[Token(Token = "0x4000CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x4000CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x4000CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x4000CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x4000CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE61A8", Offset = "0xCE61A8")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE61B8", Offset = "0xCE61B8")]
			private Quaternion <anchorRelativeToHead>k__BackingField;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			private Quaternion headRotation;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x4000CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x4000CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x4000CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int pelvisIndex;

			[Token(Token = "0x4000CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int spineIndex;

			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int chestIndex;

			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int neckIndex;

			[Token(Token = "0x4000CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private int headIndex;

			[Token(Token = "0x4000CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private float length;

			[Token(Token = "0x4000CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private bool hasChest;

			[Token(Token = "0x4000CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
			private bool hasNeck;

			[Token(Token = "0x4000CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
			private bool hasLegs;

			[Token(Token = "0x4000CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float headHeight;

			[Token(Token = "0x4000CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private float sizeMlp;

			[Token(Token = "0x4000CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
			private Vector3 chestForward;

			[Token(Token = "0x17000146")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x6000F19")]
				[Address(RVA = "0x26559F4", Offset = "0x26559F4", VA = "0x26559F4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000147")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x6000F1A")]
				[Address(RVA = "0x2655A34", Offset = "0x2655A34", VA = "0x2655A34")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000148")]
			public VirtualBone chest
			{
				[Token(Token = "0x6000F1B")]
				[Address(RVA = "0x2655A74", Offset = "0x2655A74", VA = "0x2655A74")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000149")]
			private VirtualBone neck
			{
				[Token(Token = "0x6000F1C")]
				[Address(RVA = "0x2655AC8", Offset = "0x2655AC8", VA = "0x2655AC8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014A")]
			public VirtualBone head
			{
				[Token(Token = "0x6000F1D")]
				[Address(RVA = "0x2655B08", Offset = "0x2655B08", VA = "0x2655B08")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014B")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x6000F1E")]
				[Address(RVA = "0x2655B48", Offset = "0x2655B48", VA = "0x2655B48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF40C", Offset = "0xCEF40C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000F1F")]
				[Address(RVA = "0x2655B5C", Offset = "0x2655B5C", VA = "0x2655B5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF41C", Offset = "0xCEF41C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700014C")]
			public Quaternion anchorRelativeToHead
			{
				[Token(Token = "0x6000F20")]
				[Address(RVA = "0x2655B70", Offset = "0x2655B70", VA = "0x2655B70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF42C", Offset = "0xCEF42C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000F21")]
				[Address(RVA = "0x2655B84", Offset = "0x2655B84", VA = "0x2655B84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF43C", Offset = "0xCEF43C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x2655B98", Offset = "0x2655B98", VA = "0x2655B98", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x2656640", Offset = "0x2656640", VA = "0x2656640", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x265684C", Offset = "0x265684C", VA = "0x265684C", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x2656C98", Offset = "0x2656C98", VA = "0x2656C98")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x26570D4", Offset = "0x26570D4", VA = "0x26570D4")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms, float scale)
			{
			}

			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x2657848", Offset = "0x2657848", VA = "0x2657848")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp, float weight)
			{
			}

			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x2657ECC", Offset = "0x2657ECC", VA = "0x2657ECC")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x2658854", Offset = "0x2658854", VA = "0x2658854", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x2658A30", Offset = "0x2658A30", VA = "0x2658A30", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x2656E30", Offset = "0x2656E30", VA = "0x2656E30")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x2657C18", Offset = "0x2657C18", VA = "0x2657C18")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x26574EC", Offset = "0x26574EC", VA = "0x26574EC")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation, float scale)
			{
			}

			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x2658AC8", Offset = "0x2658AC8", VA = "0x2658AC8")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x2657CF8", Offset = "0x2657CF8", VA = "0x2657CF8")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x26579C4", Offset = "0x26579C4", VA = "0x26579C4")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x2658DF0", Offset = "0x2658DF0", VA = "0x2658DF0")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001B1")]
		public enum PositionOffset
		{
			[Token(Token = "0x4000CCA")]
			Pelvis,
			[Token(Token = "0x4000CCB")]
			Chest,
			[Token(Token = "0x4000CCC")]
			Head,
			[Token(Token = "0x4000CCD")]
			LeftHand,
			[Token(Token = "0x4000CCE")]
			RightHand,
			[Token(Token = "0x4000CCF")]
			LeftFoot,
			[Token(Token = "0x4000CD0")]
			RightFoot,
			[Token(Token = "0x4000CD1")]
			LeftHeel,
			[Token(Token = "0x4000CD2")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x20001B2")]
		public enum RotationOffset
		{
			[Token(Token = "0x4000CD4")]
			Pelvis,
			[Token(Token = "0x4000CD5")]
			Chest,
			[Token(Token = "0x4000CD6")]
			Head
		}

		[Serializable]
		[Token(Token = "0x20001B3")]
		public class VirtualBone
		{
			[Token(Token = "0x4000CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x4000CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x4000CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4000CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x4000CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x4000CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x26565A4", Offset = "0x26565A4", VA = "0x26565A4")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x2656620", Offset = "0x2656620", VA = "0x2656620")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x2658F64", Offset = "0x2658F64", VA = "0x2658F64")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x26590E8", Offset = "0x26590E8", VA = "0x26590E8")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x2658CC8", Offset = "0x2658CC8", VA = "0x2658CC8")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x26592D8", Offset = "0x26592D8", VA = "0x26592D8")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x2659438", Offset = "0x2659438", VA = "0x2659438")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x2659574", Offset = "0x2659574", VA = "0x2659574")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x2658450", Offset = "0x2658450", VA = "0x2658450")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x265962C", Offset = "0x265962C", VA = "0x265962C")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x26580C0", Offset = "0x26580C0", VA = "0x26580C0")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x2659794", Offset = "0x2659794", VA = "0x2659794")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x2659804", Offset = "0x2659804", VA = "0x2659804")]
			public static void SolveCCD(VirtualBone[] bones, Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int lastLOD;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE4C4C", Offset = "0xCE4C4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4C4C", Offset = "0xCE4C4C")]
		public int LOD;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4CA0", Offset = "0xCE4CA0")]
		public float scale;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4CD8", Offset = "0xCE4CD8")]
		public bool plantFeet;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE4D10", Offset = "0xCE4D10")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4D20", Offset = "0xCE4D20")]
		public Spine spine;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4D58", Offset = "0xCE4D58")]
		public Arm leftArm;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4D90", Offset = "0xCE4D90")]
		public Arm rightArm;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4DC8", Offset = "0xCE4DC8")]
		public Leg leftLeg;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4E00", Offset = "0xCE4E00")]
		public Leg rightLeg;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE4E38", Offset = "0xCE4E38")]
		public Locomotion locomotion;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Leg[] legs;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Arm[] arms;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 headPosition;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 lastOffset;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 debugPos1;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 debugPos2;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 debugPos3;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector3 debugPos4;

		[Token(Token = "0x1700012D")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x2301CB0", Offset = "0x2301CB0", VA = "0x2301CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF2AC", Offset = "0xCEF2AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x2301CB8", Offset = "0x2301CB8", VA = "0x2301CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF2BC", Offset = "0xCEF2BC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x22FE4B4", Offset = "0x22FE4B4", VA = "0x22FE4B4")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x22FE918", Offset = "0x22FE918", VA = "0x22FE918")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x22FE7C4", Offset = "0x22FE7C4", VA = "0x22FE7C4")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x22FEC7C", Offset = "0x22FEC7C", VA = "0x22FEC7C")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x22FEDC0", Offset = "0x22FEDC0", VA = "0x22FEDC0")]
		public void AddRotationOffset(RotationOffset rotationOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x22FEDF0", Offset = "0x22FEDF0", VA = "0x22FEDF0")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x22FEEA0", Offset = "0x22FEEA0", VA = "0x22FEEA0")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x22FEF88", Offset = "0x22FEF88", VA = "0x22FEF88")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x22FF6F0", Offset = "0x22FF6F0", VA = "0x22FF6F0", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x22FF860", Offset = "0x22FF860", VA = "0x22FF860", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x22FFA64", Offset = "0x22FFA64", VA = "0x22FFA64", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x22FFAE0", Offset = "0x22FFAE0", VA = "0x22FFAE0", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x22FFB5C", Offset = "0x22FFB5C", VA = "0x22FFB5C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x22FFD34", Offset = "0x22FFD34", VA = "0x22FFD34")]
		private Vector3 GetNormal(Transform[] transforms)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x22FEB5C", Offset = "0x22FEB5C", VA = "0x22FEB5C")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x22FF07C", Offset = "0x22FF07C", VA = "0x22FF07C")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x22FFEF4", Offset = "0x22FFEF4", VA = "0x22FFEF4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x22FFF3C", Offset = "0x22FFF3C", VA = "0x22FFF3C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x23013E0", Offset = "0x23013E0", VA = "0x23013E0")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x22FF1E0", Offset = "0x22FF1E0", VA = "0x22FF1E0")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x23002B0", Offset = "0x23002B0", VA = "0x23002B0")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x2301790", Offset = "0x2301790", VA = "0x2301790")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x23017D8", Offset = "0x23017D8", VA = "0x23017D8")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x2301290", Offset = "0x2301290", VA = "0x2301290")]
		private void Write()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x230181C", Offset = "0x230181C", VA = "0x230181C")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x2301CC0", Offset = "0x2301CC0", VA = "0x2301CC0")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE61C8", Offset = "0xCE61C8")]
		public TwistSolver[] twistSolvers;

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x2604C98", Offset = "0x2604C98", VA = "0x2604C98")]
		public void Start()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x260531C", Offset = "0x260531C", VA = "0x260531C")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x26057AC", Offset = "0x26057AC", VA = "0x26057AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x2605870", Offset = "0x2605870", VA = "0x2605870")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x2605988", Offset = "0x2605988", VA = "0x2605988")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B5")]
	public class TwistSolver
	{
		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6200", Offset = "0xCE6200")]
		public Transform transform;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6238", Offset = "0xCE6238")]
		public Transform parent;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6270", Offset = "0xCE6270")]
		public Transform[] children;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE62A8", Offset = "0xCE62A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE62A8", Offset = "0xCE62A8")]
		public float weight;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE62FC", Offset = "0xCE62FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE62FC", Offset = "0xCE62FC")]
		public float parentChildCrossfade;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6350", Offset = "0xCE6350")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE6350", Offset = "0xCE6350")]
		public float twistAngleOffset;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 twistAxis;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 axis;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion[] childRotations;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool inititated;

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x26059E4", Offset = "0x26059E4", VA = "0x26059E4")]
		public TwistSolver()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x2604E74", Offset = "0x2604E74", VA = "0x2604E74")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x26053E0", Offset = "0x26053E0", VA = "0x26053E0")]
		public void Relax()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B6")]
	public class InteractionEffector
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE63AC", Offset = "0xCE63AC")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE63BC", Offset = "0xCE63BC")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE63CC", Offset = "0xCE63CC")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultBendGoalWeight;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float resetTimer;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool positionWeightUsed;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rotationWeightUsed;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pullUsed;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool reachUsed;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pushUsed;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool pushParentUsed;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool bendGoalWeightUsed;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		private bool pickedUp;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool defaults;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform target;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<bool> triggered;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool started;

		[Token(Token = "0x1700014D")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x6000F47")]
			[Address(RVA = "0x2302344", Offset = "0x2302344", VA = "0x2302344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF44C", Offset = "0xCEF44C")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x230234C", Offset = "0x230234C", VA = "0x230234C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF45C", Offset = "0xCEF45C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public bool isPaused
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x2302354", Offset = "0x2302354", VA = "0x2302354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF46C", Offset = "0xCEF46C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x230235C", Offset = "0x230235C", VA = "0x230235C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF47C", Offset = "0xCEF47C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x2302368", Offset = "0x2302368", VA = "0x2302368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF48C", Offset = "0xCEF48C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x2302370", Offset = "0x2302370", VA = "0x2302370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF49C", Offset = "0xCEF49C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public bool inInteraction
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x2302378", Offset = "0x2302378", VA = "0x2302378")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000151")]
		public float progress
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x2303B4C", Offset = "0x2303B4C", VA = "0x2303B4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x23023E4", Offset = "0x23023E4", VA = "0x23023E4")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x2302470", Offset = "0x2302470", VA = "0x2302470")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x2302504", Offset = "0x2302504", VA = "0x2302504")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x2302660", Offset = "0x2302660", VA = "0x2302660")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x230299C", Offset = "0x230299C", VA = "0x230299C")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x2302A58", Offset = "0x2302A58", VA = "0x2302A58")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x2302AB0", Offset = "0x2302AB0", VA = "0x2302AB0")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x2302EE0", Offset = "0x2302EE0", VA = "0x2302EE0")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x2303528", Offset = "0x2303528", VA = "0x2303528")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x230376C", Offset = "0x230376C", VA = "0x230376C")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x23039F4", Offset = "0x23039F4", VA = "0x23039F4")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x2303B88", Offset = "0x2303B88", VA = "0x2303B88")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B7")]
	public class InteractionLookAt
	{
		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE63DC", Offset = "0xCE63DC")]
		public LookAtIK ik;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6414", Offset = "0xCE6414")]
		public float lerpSpeed;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE644C", Offset = "0xCE644C")]
		public float weightSpeed;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x26ED3A4", Offset = "0x26ED3A4", VA = "0x26ED3A4")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x26ED4C0", Offset = "0x26ED4C0", VA = "0x26ED4C0")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x26ED564", Offset = "0x26ED564", VA = "0x26ED564")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x26EDB9C", Offset = "0x26EDB9C", VA = "0x26EDB9C")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x26EDC90", Offset = "0x26EDC90", VA = "0x26EDC90")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x26EDD58", Offset = "0x26EDD58", VA = "0x26EDD58")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDFAA0", Offset = "0xCDFAA0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDFAA0", Offset = "0xCDFAA0")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001B9")]
		public class InteractionEvent
		{
			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE655C", Offset = "0xCE655C")]
			public float time;

			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6594", Offset = "0xCE6594")]
			public bool pause;

			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE65CC", Offset = "0xCE65CC")]
			public bool pickUp;

			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6604", Offset = "0xCE6604")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE663C", Offset = "0xCE663C")]
			public Message[] messages;

			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6674", Offset = "0xCE6674")]
			public UnityEvent unityEvent;

			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x2659FB0", Offset = "0x2659FB0", VA = "0x2659FB0")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x265A184", Offset = "0x265A184", VA = "0x265A184")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001BA")]
		public class Message
		{
			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE66AC", Offset = "0xCE66AC")]
			public string function;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE66E4", Offset = "0xCE66E4")]
			public GameObject recipient;

			[Token(Token = "0x4000D29")]
			private const string empty = "";

			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x265A080", Offset = "0x265A080", VA = "0x265A080")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x265A18C", Offset = "0x265A18C", VA = "0x265A18C")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001BB")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE671C", Offset = "0xCE671C")]
			public Animator animator;

			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6754", Offset = "0xCE6754")]
			public Animation animation;

			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE678C", Offset = "0xCE678C")]
			public string animationState;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE67C4", Offset = "0xCE67C4")]
			public float crossfadeTime;

			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE67FC", Offset = "0xCE67FC")]
			public int layer;

			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6834", Offset = "0xCE6834")]
			public bool resetNormalizedTime;

			[Token(Token = "0x4000D30")]
			private const string empty = "";

			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x2659D1C", Offset = "0x2659D1C", VA = "0x2659D1C")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x2659E0C", Offset = "0x2659E0C", VA = "0x2659E0C")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x2659EC0", Offset = "0x2659EC0", VA = "0x2659EC0")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x2659F9C", Offset = "0x2659F9C", VA = "0x2659F9C")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001BC")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x20001BD")]
			public enum Type
			{
				[Token(Token = "0x4000D34")]
				PositionWeight,
				[Token(Token = "0x4000D35")]
				RotationWeight,
				[Token(Token = "0x4000D36")]
				PositionOffsetX,
				[Token(Token = "0x4000D37")]
				PositionOffsetY,
				[Token(Token = "0x4000D38")]
				PositionOffsetZ,
				[Token(Token = "0x4000D39")]
				Pull,
				[Token(Token = "0x4000D3A")]
				Reach,
				[Token(Token = "0x4000D3B")]
				RotateBoneWeight,
				[Token(Token = "0x4000D3C")]
				Push,
				[Token(Token = "0x4000D3D")]
				PushParent,
				[Token(Token = "0x4000D3E")]
				PoserWeight,
				[Token(Token = "0x4000D3F")]
				BendGoalWeight
			}

			[Token(Token = "0x4000D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE686C", Offset = "0xCE686C")]
			public Type type;

			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE68A4", Offset = "0xCE68A4")]
			public AnimationCurve curve;

			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x265A1D0", Offset = "0x265A1D0", VA = "0x265A1D0")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x265A1FC", Offset = "0x265A1FC", VA = "0x265A1FC")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001BE")]
		public class Multiplier
		{
			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE68DC", Offset = "0xCE68DC")]
			public WeightCurve.Type curve;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6914", Offset = "0xCE6914")]
			public float multiplier;

			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE694C", Offset = "0xCE694C")]
			public WeightCurve.Type result;

			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x265A194", Offset = "0x265A194", VA = "0x265A194")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x265A1EC", Offset = "0x265A1EC", VA = "0x265A1EC")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6494", Offset = "0xCE6494")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE64CC", Offset = "0xCE64CC")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6504", Offset = "0xCE6504")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE653C", Offset = "0xCE653C")]
		private float <length>k__BackingField;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE654C", Offset = "0xCE654C")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x17000152")]
		public float length
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x26EDFAC", Offset = "0x26EDFAC", VA = "0x26EDFAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF66C", Offset = "0xCEF66C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x26EDFB4", Offset = "0x26EDFB4", VA = "0x26EDFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF67C", Offset = "0xCEF67C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x26EDFBC", Offset = "0x26EDFBC", VA = "0x26EDFBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF68C", Offset = "0xCEF68C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x26EDFC4", Offset = "0x26EDFC4", VA = "0x26EDFC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF69C", Offset = "0xCEF69C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x26EE218", Offset = "0x26EE218", VA = "0x26EE218")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		public Transform targetsRoot
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0x26EE18C", Offset = "0x26EE18C", VA = "0x26EE18C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x26EDD6C", Offset = "0x26EDD6C", VA = "0x26EDD6C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF4AC", Offset = "0xCEF4AC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x26EDDB4", Offset = "0x26EDDB4", VA = "0x26EDDB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF4E4", Offset = "0xCEF4E4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x26EDDFC", Offset = "0x26EDDFC", VA = "0x26EDDFC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF51C", Offset = "0xCEF51C")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x26EDE44", Offset = "0x26EDE44", VA = "0x26EDE44")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF554", Offset = "0xCEF554")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x26EDE8C", Offset = "0x26EDE8C", VA = "0x26EDE8C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF58C", Offset = "0xCEF58C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x26EDED4", Offset = "0x26EDED4", VA = "0x26EDED4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF5C4", Offset = "0xCEF5C4")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x26EDF1C", Offset = "0x26EDF1C", VA = "0x26EDF1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF5FC", Offset = "0xCEF5FC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x26EDF64", Offset = "0x26EDF64", VA = "0x26EDF64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF634", Offset = "0xCEF634")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x26EDFCC", Offset = "0x26EDFCC", VA = "0x26EDFCC")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x26EE2A4", Offset = "0x26EE2A4", VA = "0x26EE2A4")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x26EE410", Offset = "0x26EE410", VA = "0x26EE410")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x26EE4C4", Offset = "0x26EE4C4", VA = "0x26EE4C4")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x26EE4CC", Offset = "0x26EE4CC", VA = "0x26EE4CC")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x26EE680", Offset = "0x26EE680", VA = "0x26EE680")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x26EE688", Offset = "0x26EE688", VA = "0x26EE688")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x26EF050", Offset = "0x26EF050", VA = "0x26EF050")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x26EF270", Offset = "0x26EF270", VA = "0x26EF270")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x26EEB54", Offset = "0x26EEB54", VA = "0x26EEB54")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x26EE610", Offset = "0x26EE610", VA = "0x26EE610")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x26EEFE8", Offset = "0x26EEFE8", VA = "0x26EEFE8")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x26EF274", Offset = "0x26EF274", VA = "0x26EF274")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x26EF2DC", Offset = "0x26EF2DC", VA = "0x26EF2DC")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDFB00", Offset = "0xCDFB00")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDFB00", Offset = "0xCDFB00")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x20001C0")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x20001C1")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6984", Offset = "0xCE6984")]
		public string targetTag;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE69BC", Offset = "0xCE69BC")]
		public float fadeInTime;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE69F4", Offset = "0xCE69F4")]
		public float speed;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6A2C", Offset = "0xCE6A2C")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6A64", Offset = "0xCE6A64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE6A64", Offset = "0xCE6A64")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCE6A64", Offset = "0xCE6A64")]
		public Collider characterCollider;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6AE8", Offset = "0xCE6AE8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCE6AE8", Offset = "0xCE6AE8")]
		public Transform FPSCamera;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6B48", Offset = "0xCE6B48")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6B80", Offset = "0xCE6B80")]
		public float camRaycastDistance;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE6BB8", Offset = "0xCE6BB8")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCE6BC8", Offset = "0xCE6BC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6BC8", Offset = "0xCE6BC8")]
		[SerializeField]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6C28", Offset = "0xCE6C28")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE6C60", Offset = "0xCE6C60")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x17000156")]
		public bool inInteraction
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x26EF578", Offset = "0x26EF578", VA = "0x26EF578")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000157")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x26F121C", Offset = "0x26F121C", VA = "0x26F121C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x26F1224", Offset = "0x26F1224", VA = "0x26F1224")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x26F122C", Offset = "0x26F122C", VA = "0x26F122C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF86C", Offset = "0xCEF86C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x26F1234", Offset = "0x26F1234", VA = "0x26F1234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF87C", Offset = "0xCEF87C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public bool initiated
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x26F123C", Offset = "0x26F123C", VA = "0x26F123C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF88C", Offset = "0xCEF88C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x26F1244", Offset = "0x26F1244", VA = "0x26F1244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEF89C", Offset = "0xCEF89C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x26EF338", Offset = "0x26EF338", VA = "0x26EF338")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF6AC", Offset = "0xCEF6AC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x26EF380", Offset = "0x26EF380", VA = "0x26EF380")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF6E4", Offset = "0xCEF6E4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x26EF3C8", Offset = "0x26EF3C8", VA = "0x26EF3C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF71C", Offset = "0xCEF71C")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x26EF410", Offset = "0x26EF410", VA = "0x26EF410")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF754", Offset = "0xCEF754")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x26EF458", Offset = "0x26EF458", VA = "0x26EF458")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF78C", Offset = "0xCEF78C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x26EF4A0", Offset = "0x26EF4A0", VA = "0x26EF4A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF7C4", Offset = "0xCEF7C4")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x26EF4E8", Offset = "0x26EF4E8", VA = "0x26EF4E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF7FC", Offset = "0xCEF7FC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x26EF530", Offset = "0x26EF530", VA = "0x26EF530")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF834", Offset = "0xCEF834")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x26EF720", Offset = "0x26EF720", VA = "0x26EF720")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x26EF7F0", Offset = "0x26EF7F0", VA = "0x26EF7F0")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x26EF8C0", Offset = "0x26EF8C0", VA = "0x26EF8C0")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x26EF970", Offset = "0x26EF970", VA = "0x26EF970")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x26EFA6C", Offset = "0x26EFA6C", VA = "0x26EFA6C")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x26EFB88", Offset = "0x26EFB88", VA = "0x26EFB88")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x26EFC1C", Offset = "0x26EFC1C", VA = "0x26EFC1C")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x26EFCB0", Offset = "0x26EFCB0", VA = "0x26EFCB0")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x26EFD44", Offset = "0x26EFD44", VA = "0x26EFD44")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x26EFDBC", Offset = "0x26EFDBC", VA = "0x26EFDBC")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x26EFE34", Offset = "0x26EFE34", VA = "0x26EFE34")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x26EFEA0", Offset = "0x26EFEA0", VA = "0x26EFEA0")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x26EFF2C", Offset = "0x26EFF2C", VA = "0x26EFF2C")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x26EFFC0", Offset = "0x26EFFC0", VA = "0x26EFFC0")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x26F008C", Offset = "0x26F008C", VA = "0x26F008C")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x26F0364", Offset = "0x26F0364", VA = "0x26F0364")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x26F0544", Offset = "0x26F0544", VA = "0x26F0544")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x26F07D8", Offset = "0x26F07D8", VA = "0x26F07D8")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x26F0AB0", Offset = "0x26F0AB0", VA = "0x26F0AB0")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x26F0AF4", Offset = "0x26F0AF4", VA = "0x26F0AF4")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x26F0B6C", Offset = "0x26F0B6C", VA = "0x26F0B6C")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x26F0C88", Offset = "0x26F0C88", VA = "0x26F0C88")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x26F0E2C", Offset = "0x26F0E2C", VA = "0x26F0E2C")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x26F10D0", Offset = "0x26F10D0", VA = "0x26F10D0")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x26F08EC", Offset = "0x26F08EC", VA = "0x26F08EC")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x26F1250", Offset = "0x26F1250", VA = "0x26F1250")]
		public void Start()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x26F19C0", Offset = "0x26F19C0", VA = "0x26F19C0")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x26F19E0", Offset = "0x26F19E0", VA = "0x26F19E0")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x26F19FC", Offset = "0x26F19FC", VA = "0x26F19FC")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x26F1A18", Offset = "0x26F1A18", VA = "0x26F1A18")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x26F1A78", Offset = "0x26F1A78", VA = "0x26F1A78")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x26F1BB4", Offset = "0x26F1BB4", VA = "0x26F1BB4")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x26F1CC4", Offset = "0x26F1CC4", VA = "0x26F1CC4")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x26F2068", Offset = "0x26F2068", VA = "0x26F2068")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x26F2168", Offset = "0x26F2168", VA = "0x26F2168")]
		public void Update()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x26F23C4", Offset = "0x26F23C4", VA = "0x26F23C4")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x26F1724", Offset = "0x26F1724", VA = "0x26F1724")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x26F2500", Offset = "0x26F2500", VA = "0x26F2500")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x26F2630", Offset = "0x26F2630", VA = "0x26F2630")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x26F26C4", Offset = "0x26F26C4", VA = "0x26F26C4")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x26F279C", Offset = "0x26F279C", VA = "0x26F279C")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x26F27B4", Offset = "0x26F27B4", VA = "0x26F27B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x26EF628", Offset = "0x26EF628", VA = "0x26EF628")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x26F0234", Offset = "0x26F0234", VA = "0x26F0234")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x26F2B1C", Offset = "0x26F2B1C", VA = "0x26F2B1C")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDFB60", Offset = "0xCDFB60")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDFB60", Offset = "0xCDFB60")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001C3")]
		public enum RotationMode
		{
			[Token(Token = "0x4000D68")]
			TwoDOF,
			[Token(Token = "0x4000D69")]
			ThreeDOF
		}

		[Serializable]
		[Token(Token = "0x20001C4")]
		public class Multiplier
		{
			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6EBC", Offset = "0xCE6EBC")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6EF4", Offset = "0xCE6EF4")]
			public float multiplier;

			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x265A868", Offset = "0x265A868", VA = "0x265A868")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6C70", Offset = "0xCE6C70")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6CA8", Offset = "0xCE6CA8")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6CE0", Offset = "0xCE6CE0")]
		public float interactionSpeedMlp;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6D18", Offset = "0xCE6D18")]
		public Transform pivot;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6D50", Offset = "0xCE6D50")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6D88", Offset = "0xCE6D88")]
		public Vector3 twistAxis;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6DC0", Offset = "0xCE6DC0")]
		public float twistWeight;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6DF8", Offset = "0xCE6DF8")]
		public float swingWeight;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6E30", Offset = "0xCE6E30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE6E30", Offset = "0xCE6E30")]
		public float threeDOFWeight;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6E84", Offset = "0xCE6E84")]
		public bool rotateOnce;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastPivot;

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x26F2EE4", Offset = "0x26F2EE4", VA = "0x26F2EE4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF8AC", Offset = "0xCEF8AC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x26F2F2C", Offset = "0x26F2F2C", VA = "0x26F2F2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF8E4", Offset = "0xCEF8E4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x26F2F74", Offset = "0x26F2F74", VA = "0x26F2F74")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF91C", Offset = "0xCEF91C")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x26F2FBC", Offset = "0x26F2FBC", VA = "0x26F2FBC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF954", Offset = "0xCEF954")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x26F3004", Offset = "0x26F3004", VA = "0x26F3004")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF98C", Offset = "0xCEF98C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x26F304C", Offset = "0x26F304C", VA = "0x26F304C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF9C4", Offset = "0xCEF9C4")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x26F3094", Offset = "0x26F3094", VA = "0x26F3094")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEF9FC", Offset = "0xCEF9FC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x26F30DC", Offset = "0x26F30DC", VA = "0x26F30DC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFA34", Offset = "0xCEFA34")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x26EEAE4", Offset = "0x26EEAE4", VA = "0x26EEAE4")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x26F3124", Offset = "0x26F3124", VA = "0x26F3124")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x26F31BC", Offset = "0x26F31BC", VA = "0x26F31BC")]
		public void RotateTo(Transform bone)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x26F36D8", Offset = "0x26F36D8", VA = "0x26F36D8")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDFBC0", Offset = "0xCDFBC0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDFBC0", Offset = "0xCDFBC0")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001C6")]
		public class CharacterPosition
		{
			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6F64", Offset = "0xCE6F64")]
			public bool use;

			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6F9C", Offset = "0xCE6F9C")]
			public Vector2 offset;

			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE6FD4", Offset = "0xCE6FD4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6FD4", Offset = "0xCE6FD4")]
			public float angleOffset;

			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7030", Offset = "0xCE7030")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE7030", Offset = "0xCE7030")]
			public float maxAngle;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7088", Offset = "0xCE7088")]
			public float radius;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE70C0", Offset = "0xCE70C0")]
			public bool orbit;

			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE70F8", Offset = "0xCE70F8")]
			public bool fixYAxis;

			[Token(Token = "0x1700015A")]
			public Vector3 offset3D
			{
				[Token(Token = "0x6000FE1")]
				[Address(RVA = "0x265ABD8", Offset = "0x265ABD8", VA = "0x265ABD8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700015B")]
			public Vector3 direction3D
			{
				[Token(Token = "0x6000FE2")]
				[Address(RVA = "0x265ABE4", Offset = "0x265ABE4", VA = "0x265ABE4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x265AC6C", Offset = "0x265AC6C", VA = "0x265AC6C")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x265B0B0", Offset = "0x265B0B0", VA = "0x265B0B0")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001C7")]
		public class CameraPosition
		{
			[Token(Token = "0x4000D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7130", Offset = "0xCE7130")]
			public Collider lookAtTarget;

			[Token(Token = "0x4000D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7168", Offset = "0xCE7168")]
			public Vector3 direction;

			[Token(Token = "0x4000D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE71A0", Offset = "0xCE71A0")]
			public float maxDistance;

			[Token(Token = "0x4000D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE71D8", Offset = "0xCE71D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE71D8", Offset = "0xCE71D8")]
			public float maxAngle;

			[Token(Token = "0x4000D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7230", Offset = "0xCE7230")]
			public bool fixYAxis;

			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0x265A870", Offset = "0x265A870", VA = "0x265A870")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x265A964", Offset = "0x265A964", VA = "0x265A964")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x265AB8C", Offset = "0x265AB8C", VA = "0x265AB8C")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001C8")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x20001C9")]
			public class Interaction
			{
				[Token(Token = "0x4000D7E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7330", Offset = "0xCE7330")]
				public InteractionObject interactionObject;

				[Token(Token = "0x4000D7F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7368", Offset = "0xCE7368")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x6000FEA")]
				[Address(RVA = "0x274F978", Offset = "0x274F978", VA = "0x274F978")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x4000D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4000D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public bool show;

			[Token(Token = "0x4000D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7288", Offset = "0xCE7288")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE72C0", Offset = "0xCE72C0")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x4000D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE72F8", Offset = "0xCE72F8")]
			public Interaction[] interactions;

			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x265B0C4", Offset = "0x265B0C4", VA = "0x265B0C4")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x265B178", Offset = "0x265B178", VA = "0x265B178")]
			public Range()
			{
			}
		}

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE6F2C", Offset = "0xCE6F2C")]
		public Range[] ranges;

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x26F3724", Offset = "0x26F3724", VA = "0x26F3724")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFA6C", Offset = "0xCEFA6C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x26F376C", Offset = "0x26F376C", VA = "0x26F376C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFAA4", Offset = "0xCEFAA4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x26F37B4", Offset = "0x26F37B4", VA = "0x26F37B4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFADC", Offset = "0xCEFADC")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x26F37FC", Offset = "0x26F37FC", VA = "0x26F37FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFB14", Offset = "0xCEFB14")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x26F3844", Offset = "0x26F3844", VA = "0x26F3844")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFB4C", Offset = "0xCEFB4C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x26F1E94", Offset = "0x26F1E94", VA = "0x26F1E94")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x26F388C", Offset = "0x26F388C", VA = "0x26F388C")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x20001CB")]
		public class Map
		{
			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x4000D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4000D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x4000D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x27380DC", Offset = "0x27380DC", VA = "0x27380DC")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x2738118", Offset = "0x2738118", VA = "0x2738118")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x2738168", Offset = "0x2738168", VA = "0x2738168")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x27381B4", Offset = "0x27381B4", VA = "0x27381B4")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x268C10C", Offset = "0x268C10C", VA = "0x268C10C", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFB84", Offset = "0xCEFB84")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x268C488", Offset = "0x268C488", VA = "0x268C488", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x268C48C", Offset = "0x268C48C", VA = "0x268C48C", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x268C594", Offset = "0x268C594", VA = "0x268C594", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x268C41C", Offset = "0x268C41C", VA = "0x268C41C")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x268C37C", Offset = "0x268C37C", VA = "0x268C37C")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x268C600", Offset = "0x268C600", VA = "0x268C600")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x2752CEC", Offset = "0x2752CEC", VA = "0x2752CEC", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x2752DB4", Offset = "0x2752DB4", VA = "0x2752DB4", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x2752F70", Offset = "0x2752F70", VA = "0x2752F70", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x275306C", Offset = "0x275306C", VA = "0x275306C", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x2752E0C", Offset = "0x2752E0C", VA = "0x2752E0C")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x27533CC", Offset = "0x27533CC", VA = "0x27533CC")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE73A0", Offset = "0xCE73A0")]
		public float weight;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE73B8", Offset = "0xCE73B8")]
		public float localRotationWeight;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE73D0", Offset = "0xCE73D0")]
		public float localPositionWeight;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x6000FFC")]
		public abstract void AutoMapping();

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x2676B64", Offset = "0x2676B64", VA = "0x2676B64")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x6000FFE")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x6000FFF")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x6001000")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x2676B70", Offset = "0x2676B70", VA = "0x2676B70", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x2676BC4", Offset = "0x2676BC4", VA = "0x2676BC4", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x2676C00", Offset = "0x2676C00", VA = "0x2676C00", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x2676C18", Offset = "0x2676C18", VA = "0x2676C18")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x20001CF")]
		public class Rigidbone
		{
			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6001017")]
			[Address(RVA = "0x265E8F4", Offset = "0x265E8F4", VA = "0x265E8F4")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6001018")]
			[Address(RVA = "0x265EA64", Offset = "0x265EA64", VA = "0x265EA64")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6001019")]
			[Address(RVA = "0x265EB44", Offset = "0x265EB44", VA = "0x265EB44")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x20001D0")]
		public class Child
		{
			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x600101A")]
			[Address(RVA = "0x265E704", Offset = "0x265E704", VA = "0x265E704")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x600101B")]
			[Address(RVA = "0x265E764", Offset = "0x265E764", VA = "0x265E764")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x600101C")]
			[Address(RVA = "0x265E8A4", Offset = "0x265E8A4", VA = "0x265E8A4")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x20001D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDFC20", Offset = "0xCDFC20")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x1700015E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001020")]
				[Address(RVA = "0x265E6B4", Offset = "0x265E6B4", VA = "0x265E6B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001022")]
				[Address(RVA = "0x265E6FC", Offset = "0x265E6FC", VA = "0x265E6FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600101D")]
			[Address(RVA = "0x265E498", Offset = "0x265E498", VA = "0x265E498")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600101E")]
			[Address(RVA = "0x265E4C4", Offset = "0x265E4C4", VA = "0x265E4C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600101F")]
			[Address(RVA = "0x265E4C8", Offset = "0x265E4C8", VA = "0x265E4C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001021")]
			[Address(RVA = "0x265E6BC", Offset = "0x265E6BC", VA = "0x265E6BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE73E8", Offset = "0xCE73E8")]
		public IK ik;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7420", Offset = "0xCE7420")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7458", Offset = "0xCE7458")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7490", Offset = "0xCE7490")]
		public float applyVelocity;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE74C8", Offset = "0xCE74C8")]
		public float applyAngularVelocity;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x1700015C")]
		private bool isRagdoll
		{
			[Token(Token = "0x6001010")]
			[Address(RVA = "0x2679E8C", Offset = "0x2679E8C", VA = "0x2679E8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015D")]
		private bool ikUsed
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x267A814", Offset = "0x267A814", VA = "0x267A814")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x2679E54", Offset = "0x2679E54", VA = "0x2679E54")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x2679F04", Offset = "0x2679F04", VA = "0x2679F04")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x267A034", Offset = "0x267A034", VA = "0x267A034")]
		public void Start()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x2679FC8", Offset = "0x2679FC8", VA = "0x2679FC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCEFBBC", Offset = "0xCEFBBC")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x267A450", Offset = "0x267A450", VA = "0x267A450")]
		private void Update()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x267A69C", Offset = "0x267A69C", VA = "0x267A69C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x267A758", Offset = "0x267A758", VA = "0x267A758")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x267A994", Offset = "0x267A994", VA = "0x267A994")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x267A7D8", Offset = "0x267A7D8", VA = "0x267A7D8")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x267A950", Offset = "0x267A950", VA = "0x267A950")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x267AA34", Offset = "0x267AA34", VA = "0x267AA34")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x267A9C8", Offset = "0x267A9C8", VA = "0x267A9C8")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x2679F5C", Offset = "0x2679F5C", VA = "0x2679F5C")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x267A6DC", Offset = "0x267A6DC", VA = "0x267A6DC")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x267AC60", Offset = "0x267AC60", VA = "0x267AC60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x267AD78", Offset = "0x267AD78", VA = "0x267AD78")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE7510", Offset = "0xCE7510")]
		private bool <defaultLocalRotationOverride>k__BackingField;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool initiated;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool applicationQuit;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x17000160")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0x269BB38", Offset = "0x269BB38", VA = "0x269BB38")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000161")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x269BB44", Offset = "0x269BB44", VA = "0x269BB44")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000162")]
		public bool defaultLocalRotationOverride
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x269BB60", Offset = "0x269BB60", VA = "0x269BB60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEFC6C", Offset = "0xCEFC6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x269BB68", Offset = "0x269BB68", VA = "0x269BB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCEFC7C", Offset = "0xCEFC7C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x269B838", Offset = "0x269B838", VA = "0x269B838")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x269B880", Offset = "0x269B880", VA = "0x269B880")]
		public void SetDefaultLocalRotation(Quaternion localRotation)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x269B898", Offset = "0x269B898", VA = "0x269B898")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x269BA90", Offset = "0x269BA90", VA = "0x269BA90")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x269BB00", Offset = "0x269BB00", VA = "0x269BB00")]
		public void Disable()
		{
		}

		[Token(Token = "0x600102C")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x269B9B8", Offset = "0x269B9B8", VA = "0x269B9B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x269BB74", Offset = "0x269BB74", VA = "0x269BB74")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x269BB78", Offset = "0x269BB78", VA = "0x269BB78")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x269BBAC", Offset = "0x269BBAC", VA = "0x269BBAC")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x269BC28", Offset = "0x269BC28", VA = "0x269BC28")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x269BDBC", Offset = "0x269BDBC", VA = "0x269BDBC")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x269BE2C", Offset = "0x269BE2C", VA = "0x269BE2C")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDFC30", Offset = "0xCDFC30")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDFC30", Offset = "0xCDFC30")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE7520", Offset = "0xCE7520")]
		public float limit;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE753C", Offset = "0xCE753C")]
		public float twistLimit;

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x269BE60", Offset = "0x269BE60", VA = "0x269BE60")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFC8C", Offset = "0xCEFC8C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x269BEA8", Offset = "0x269BEA8", VA = "0x269BEA8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFCC4", Offset = "0xCEFCC4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x269BEF0", Offset = "0x269BEF0", VA = "0x269BEF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFCFC", Offset = "0xCEFCFC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x269BF38", Offset = "0x269BF38", VA = "0x269BF38")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFD34", Offset = "0xCEFD34")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x269BF80", Offset = "0x269BF80", VA = "0x269BF80", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x269BFC4", Offset = "0x269BFC4", VA = "0x269BFC4")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x269C184", Offset = "0x269C184", VA = "0x269C184")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDFC90", Offset = "0xCDFC90")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDFC90", Offset = "0xCDFC90")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLimits;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float min;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float max;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastAngle;

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x269C1C4", Offset = "0x269C1C4", VA = "0x269C1C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFD6C", Offset = "0xCEFD6C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x269C20C", Offset = "0x269C20C", VA = "0x269C20C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFDA4", Offset = "0xCEFDA4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x269C254", Offset = "0x269C254", VA = "0x269C254")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFDDC", Offset = "0xCEFDDC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x269C29C", Offset = "0x269C29C", VA = "0x269C29C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFE14", Offset = "0xCEFE14")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x269C2E4", Offset = "0x269C2E4", VA = "0x269C2E4", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x269C2E8", Offset = "0x269C2E8", VA = "0x269C2E8")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x269C46C", Offset = "0x269C46C", VA = "0x269C46C")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDFCF0", Offset = "0xCDFCF0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDFCF0", Offset = "0xCDFCF0")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x20001D6")]
		public class ReachCone
		{
			[Token(Token = "0x4000DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x4000DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x4000DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x4000DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x17000163")]
			public Vector3 o
			{
				[Token(Token = "0x6001052")]
				[Address(RVA = "0x26612D4", Offset = "0x26612D4", VA = "0x26612D4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000164")]
			public Vector3 a
			{
				[Token(Token = "0x6001053")]
				[Address(RVA = "0x266130C", Offset = "0x266130C", VA = "0x266130C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000165")]
			public Vector3 b
			{
				[Token(Token = "0x6001054")]
				[Address(RVA = "0x2661348", Offset = "0x2661348", VA = "0x2661348")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000166")]
			public Vector3 c
			{
				[Token(Token = "0x6001055")]
				[Address(RVA = "0x2661384", Offset = "0x2661384", VA = "0x2661384")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000167")]
			public bool isValid
			{
				[Token(Token = "0x6001057")]
				[Address(RVA = "0x26614FC", Offset = "0x26614FC", VA = "0x26614FC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x26613C0", Offset = "0x26613C0", VA = "0x26613C0")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x6001058")]
			[Address(RVA = "0x266150C", Offset = "0x266150C", VA = "0x266150C")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001D7")]
		public class LimitPoint
		{
			[Token(Token = "0x4000DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x4000DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x6001059")]
			[Address(RVA = "0x2661298", Offset = "0x2661298", VA = "0x2661298")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE7568", Offset = "0xCE7568")]
		public float twistLimit;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE7584", Offset = "0xCE7584")]
		public int smoothIterations;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3[] P;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x269C4B4", Offset = "0x269C4B4", VA = "0x269C4B4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFE4C", Offset = "0xCEFE4C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x269C4FC", Offset = "0x269C4FC", VA = "0x269C4FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFE84", Offset = "0xCEFE84")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x269C544", Offset = "0x269C544", VA = "0x269C544")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFEBC", Offset = "0xCEFEBC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x269C58C", Offset = "0x269C58C", VA = "0x269C58C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFEF4", Offset = "0xCEFEF4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x269C5D4", Offset = "0x269C5D4", VA = "0x269C5D4")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x269CA74", Offset = "0x269CA74", VA = "0x269CA74", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x269CB08", Offset = "0x269CB08", VA = "0x269CB08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x269D034", Offset = "0x269D034", VA = "0x269D034")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x269C670", Offset = "0x269C670", VA = "0x269C670")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x269D3B4", Offset = "0x269D3B4", VA = "0x269D3B4")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x269D7C0", Offset = "0x269D7C0", VA = "0x269D7C0")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x269D804", Offset = "0x269D804", VA = "0x269D804")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x269D864", Offset = "0x269D864", VA = "0x269D864")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x269CDC4", Offset = "0x269CDC4", VA = "0x269CDC4")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x269D8D0", Offset = "0x269D8D0", VA = "0x269D8D0")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x269D9AC", Offset = "0x269D9AC", VA = "0x269D9AC")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCDFD50", Offset = "0xCDFD50")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCDFD50", Offset = "0xCDFD50")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE75CC", Offset = "0xCE75CC")]
		public float twistLimit;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x269DA20", Offset = "0x269DA20", VA = "0x269DA20")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFF2C", Offset = "0xCEFF2C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x269DA68", Offset = "0x269DA68", VA = "0x269DA68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFF64", Offset = "0xCEFF64")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x269DAB0", Offset = "0x269DAB0", VA = "0x269DAB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFF9C", Offset = "0xCEFF9C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x269DAF8", Offset = "0x269DAF8", VA = "0x269DAF8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCEFFD4", Offset = "0xCEFFD4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x269DB40", Offset = "0x269DB40", VA = "0x269DB40")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x269DB5C", Offset = "0x269DB5C", VA = "0x269DB5C", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x269DBA0", Offset = "0x269DBA0", VA = "0x269DBA0")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x269DDC4", Offset = "0x269DDC4", VA = "0x269DDC4")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x20001DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDFDB0", Offset = "0xCDFDB0")]
		private sealed class <TurnToTarget>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x17000169")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600106C")]
				[Address(RVA = "0x271D7FC", Offset = "0x271D7FC", VA = "0x271D7FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600106E")]
				[Address(RVA = "0x271D844", Offset = "0x271D844", VA = "0x271D844", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001069")]
			[Address(RVA = "0x271D70C", Offset = "0x271D70C", VA = "0x271D70C")]
			[DebuggerHidden]
			public <TurnToTarget>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x600106A")]
			[Address(RVA = "0x271D738", Offset = "0x271D738", VA = "0x271D738", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600106B")]
			[Address(RVA = "0x271D73C", Offset = "0x271D73C", VA = "0x271D73C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600106D")]
			[Address(RVA = "0x271D804", Offset = "0x271D804", VA = "0x271D804", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE75F8", Offset = "0xCE75F8")]
		public AimIK ik;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE7630", Offset = "0xCE7630")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7630", Offset = "0xCE7630")]
		public float weight;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE7684", Offset = "0xCE7684")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7684", Offset = "0xCE7684")]
		public Transform target;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE76E4", Offset = "0xCE76E4")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE771C", Offset = "0xCE771C")]
		public float weightSmoothTime;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE7754", Offset = "0xCE7754")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7754", Offset = "0xCE7754")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE77B4", Offset = "0xCE77B4")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE77EC", Offset = "0xCE77EC")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7824", Offset = "0xCE7824")]
		public float slerpSpeed;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE785C", Offset = "0xCE785C")]
		public float smoothDampTime;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7894", Offset = "0xCE7894")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE78CC", Offset = "0xCE78CC")]
		public float minDistance;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7904", Offset = "0xCE7904")]
		public Vector3 offset;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE793C", Offset = "0xCE793C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE793C", Offset = "0xCE793C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE793C", Offset = "0xCE793C")]
		public float maxRootAngle;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE79B8", Offset = "0xCE79B8")]
		public bool turnToTarget;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE79F0", Offset = "0xCE79F0")]
		public float turnToTargetTime;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE7A28", Offset = "0xCE7A28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7A28", Offset = "0xCE7A28")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7A88", Offset = "0xCE7A88")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform lastTarget;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float switchWeight;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float switchWeightV;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float weightV;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 dir;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool turningToTarget;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float turnToTargetMlp;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float turnToTargetMlpV;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float yawV;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float pitchV;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float dirMagV;

		[Token(Token = "0x17000168")]
		private Vector3 pivot
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x2700A48", Offset = "0x2700A48", VA = "0x2700A48")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x27009C0", Offset = "0x27009C0", VA = "0x27009C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x2700AD8", Offset = "0x2700AD8", VA = "0x2700AD8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x27011AC", Offset = "0x27011AC", VA = "0x27011AC")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x2701298", Offset = "0x2701298", VA = "0x2701298")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x27014E8", Offset = "0x27014E8", VA = "0x27014E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF000C", Offset = "0xCF000C")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x2701554", Offset = "0x2701554", VA = "0x2701554")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001DC")]
		public class Pose
		{
			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x6001072")]
			[Address(RVA = "0x271D84C", Offset = "0x271D84C", VA = "0x271D84C")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x6001073")]
			[Address(RVA = "0x271D9D8", Offset = "0x271D9D8", VA = "0x271D9D8")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x6001074")]
			[Address(RVA = "0x271D9E0", Offset = "0x271D9E0", VA = "0x271D9E0")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x27017B8", Offset = "0x27017B8", VA = "0x27017B8")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x2701898", Offset = "0x2701898", VA = "0x2701898")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x2701904", Offset = "0x2701904", VA = "0x2701904")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001DE")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x20001DF")]
			public class EffectorLink
			{
				[Token(Token = "0x4000DFE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7C48", Offset = "0xCE7C48")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000DFF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7C80", Offset = "0xCE7C80")]
				public float weight;

				[Token(Token = "0x600107A")]
				[Address(RVA = "0x274F55C", Offset = "0x274F55C", VA = "0x274F55C")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7AF8", Offset = "0xCE7AF8")]
			public Transform transform;

			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7B30", Offset = "0xCE7B30")]
			public Transform relativeTo;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7B68", Offset = "0xCE7B68")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7BA0", Offset = "0xCE7BA0")]
			public float verticalWeight;

			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7BD8", Offset = "0xCE7BD8")]
			public float horizontalWeight;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7C10", Offset = "0xCE7C10")]
			public float speed;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x6001077")]
			[Address(RVA = "0x271D9FC", Offset = "0x271D9FC", VA = "0x271D9FC")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0x271DD28", Offset = "0x271DD28", VA = "0x271DD28")]
			private static Vector3 Multiply(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001079")]
			[Address(RVA = "0x271DD38", Offset = "0x271DD38", VA = "0x271DD38")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7AC0", Offset = "0xCE7AC0")]
		public Body[] bodies;

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x2701968", Offset = "0x2701968", VA = "0x2701968", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x2701AB4", Offset = "0x2701AB4", VA = "0x2701AB4")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7CB8", Offset = "0xCE7CB8")]
		public float tiltSpeed;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7CF0", Offset = "0xCE7CF0")]
		public float tiltSensitivity;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7D28", Offset = "0xCE7D28")]
		public OffsetPose poseLeft;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7D60", Offset = "0xCE7D60")]
		public OffsetPose poseRight;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x2710264", Offset = "0x2710264", VA = "0x2710264", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x27102AC", Offset = "0x27102AC", VA = "0x27102AC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x2710464", Offset = "0x2710464", VA = "0x2710464")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class CCDBendGoal : MonoBehaviour
	{
		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CCDIK ik;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE7D98", Offset = "0xCE7D98")]
		public float weight;

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x27104E8", Offset = "0x27104E8", VA = "0x27104E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x27105B0", Offset = "0x27105B0", VA = "0x27105B0")]
		private void BeforeIK()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x27107D8", Offset = "0x27107D8", VA = "0x27107D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x27108E4", Offset = "0x27108E4", VA = "0x27108E4")]
		public CCDBendGoal()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	[ExecuteInEditMode]
	public class EditorIK : MonoBehaviour
	{
		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7DB0", Offset = "0xCE7DB0")]
		public Animator animator;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7DE8", Offset = "0xCE7DE8")]
		public EditorIKPose defaultPose;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] bones;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE7E30", Offset = "0xCE7E30")]
		private IK <ik>k__BackingField;

		[Token(Token = "0x1700016B")]
		public IK ik
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0x26CDC04", Offset = "0x26CDC04", VA = "0x26CDC04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF00BC", Offset = "0xCF00BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001083")]
			[Address(RVA = "0x26CDC0C", Offset = "0x26CDC0C", VA = "0x26CDC0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF00CC", Offset = "0xCF00CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x26CDC14", Offset = "0x26CDC14", VA = "0x26CDC14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x26CDDB0", Offset = "0x26CDDB0", VA = "0x26CDDB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x26CDEB0", Offset = "0x26CDEB0", VA = "0x26CDEB0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x26CE000", Offset = "0x26CE000", VA = "0x26CE000")]
		public void StoreDefaultPose()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x26CE07C", Offset = "0x26CE07C", VA = "0x26CE07C")]
		public bool Initiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x26CE2AC", Offset = "0x26CE2AC", VA = "0x26CE2AC")]
		public void Update()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x26CE54C", Offset = "0x26CE54C", VA = "0x26CE54C")]
		public EditorIK()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCDFDD0", Offset = "0xCDFDD0")]
	public class EditorIKPose : ScriptableObject
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] localPositions;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion[] localRotations;

		[Token(Token = "0x1700016C")]
		public bool poseStored
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x2722C30", Offset = "0x2722C30", VA = "0x2722C30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x2722C54", Offset = "0x2722C54", VA = "0x2722C54")]
		public void Store(Transform[] T)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x2722DA8", Offset = "0x2722DA8", VA = "0x2722DA8")]
		public bool Restore(Transform[] T)
		{
			return default(bool);
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x2722F18", Offset = "0x2722F18", VA = "0x2722F18")]
		public EditorIKPose()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001E5")]
		public abstract class HitPoint
		{
			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7EB0", Offset = "0xCE7EB0")]
			public string name;

			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7EE8", Offset = "0xCE7EE8")]
			public Collider collider;

			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7F20", Offset = "0xCE7F20")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE7F6C", Offset = "0xCE7F6C")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE7F7C", Offset = "0xCE7F7C")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE7F8C", Offset = "0xCE7F8C")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE7F9C", Offset = "0xCE7F9C")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4000E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4000E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x1700016E")]
			public bool inProgress
			{
				[Token(Token = "0x6001093")]
				[Address(RVA = "0x273A2B8", Offset = "0x273A2B8", VA = "0x273A2B8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700016F")]
			protected float crossFader
			{
				[Token(Token = "0x6001094")]
				[Address(RVA = "0x273A2CC", Offset = "0x273A2CC", VA = "0x273A2CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF00DC", Offset = "0xCF00DC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001095")]
				[Address(RVA = "0x273A2D4", Offset = "0x273A2D4", VA = "0x273A2D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF00EC", Offset = "0xCF00EC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000170")]
			protected float timer
			{
				[Token(Token = "0x6001096")]
				[Address(RVA = "0x273A2DC", Offset = "0x273A2DC", VA = "0x273A2DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF00FC", Offset = "0xCF00FC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001097")]
				[Address(RVA = "0x273A2E4", Offset = "0x273A2E4", VA = "0x273A2E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF010C", Offset = "0xCF010C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000171")]
			protected Vector3 force
			{
				[Token(Token = "0x6001098")]
				[Address(RVA = "0x273A2EC", Offset = "0x273A2EC", VA = "0x273A2EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF011C", Offset = "0xCF011C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001099")]
				[Address(RVA = "0x273A2F8", Offset = "0x273A2F8", VA = "0x273A2F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF012C", Offset = "0xCF012C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000172")]
			protected Vector3 point
			{
				[Token(Token = "0x600109A")]
				[Address(RVA = "0x273A304", Offset = "0x273A304", VA = "0x273A304")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF013C", Offset = "0xCF013C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600109B")]
				[Address(RVA = "0x273A310", Offset = "0x273A310", VA = "0x273A310")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF014C", Offset = "0xCF014C")]
				private set
				{
				}
			}

			[Token(Token = "0x600109C")]
			[Address(RVA = "0x273A31C", Offset = "0x273A31C", VA = "0x273A31C")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x600109D")]
			[Address(RVA = "0x273A450", Offset = "0x273A450", VA = "0x273A450")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x600109E")]
			protected abstract float GetLength();

			[Token(Token = "0x600109F")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x60010A0")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x273A524", Offset = "0x273A524", VA = "0x273A524")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E6")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x20001E7")]
			public class EffectorLink
			{
				[Token(Token = "0x4000E1D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8054", Offset = "0xCE8054")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000E1E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE808C", Offset = "0xCE808C")]
				public float weight;

				[Token(Token = "0x4000E1F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4000E20")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x60010A6")]
				[Address(RVA = "0x274F6CC", Offset = "0x274F6CC", VA = "0x274F6CC")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x60010A7")]
				[Address(RVA = "0x274F77C", Offset = "0x274F77C", VA = "0x274F77C")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x60010A8")]
				[Address(RVA = "0x274F790", Offset = "0x274F790", VA = "0x274F790")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7FAC", Offset = "0xCE7FAC")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x4000E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7FE4", Offset = "0xCE7FE4")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE801C", Offset = "0xCE801C")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x273A850", Offset = "0x273A850", VA = "0x273A850", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x273A980", Offset = "0x273A980", VA = "0x273A980", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x273A9EC", Offset = "0x273A9EC", VA = "0x273A9EC", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x60010A5")]
			[Address(RVA = "0x273AB54", Offset = "0x273AB54", VA = "0x273AB54")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E8")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x20001E9")]
			public class BoneLink
			{
				[Token(Token = "0x4000E24")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8134", Offset = "0xCE8134")]
				public Transform bone;

				[Token(Token = "0x4000E25")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE816C", Offset = "0xCE816C")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE816C", Offset = "0xCE816C")]
				public float weight;

				[Token(Token = "0x4000E26")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x4000E27")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x60010AD")]
				[Address(RVA = "0x274F564", Offset = "0x274F564", VA = "0x274F564")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x60010AE")]
				[Address(RVA = "0x274F67C", Offset = "0x274F67C", VA = "0x274F67C")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x60010AF")]
				[Address(RVA = "0x274F688", Offset = "0x274F688", VA = "0x274F688")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE80C4", Offset = "0xCE80C4")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE80FC", Offset = "0xCE80FC")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x273A538", Offset = "0x273A538", VA = "0x273A538", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x273A5DC", Offset = "0x273A5DC", VA = "0x273A5DC", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x60010AB")]
			[Address(RVA = "0x273A648", Offset = "0x273A648", VA = "0x273A648", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x273A83C", Offset = "0x273A83C", VA = "0x273A83C")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7E40", Offset = "0xCE7E40")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE7E78", Offset = "0xCE7E78")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x1700016D")]
		public bool inProgress
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x275426C", Offset = "0x275426C", VA = "0x275426C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x275433C", Offset = "0x275433C", VA = "0x275433C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x2754418", Offset = "0x2754418", VA = "0x2754418")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x2754674", Offset = "0x2754674", VA = "0x2754674")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x20001EB")]
		public abstract class Offset
		{
			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8230", Offset = "0xCE8230")]
			public string name;

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8268", Offset = "0xCE8268")]
			public Collider collider;

			[Token(Token = "0x4000E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE82A0", Offset = "0xCE82A0")]
			private float crossFadeTime;

			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE82EC", Offset = "0xCE82EC")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4000E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE82FC", Offset = "0xCE82FC")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4000E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE830C", Offset = "0xCE830C")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4000E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE831C", Offset = "0xCE831C")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4000E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4000E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000173")]
			protected float crossFader
			{
				[Token(Token = "0x60010B3")]
				[Address(RVA = "0x273AB68", Offset = "0x273AB68", VA = "0x273AB68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF015C", Offset = "0xCF015C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60010B4")]
				[Address(RVA = "0x273AB70", Offset = "0x273AB70", VA = "0x273AB70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF016C", Offset = "0xCF016C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000174")]
			protected float timer
			{
				[Token(Token = "0x60010B5")]
				[Address(RVA = "0x273AB78", Offset = "0x273AB78", VA = "0x273AB78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF017C", Offset = "0xCF017C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60010B6")]
				[Address(RVA = "0x273AB80", Offset = "0x273AB80", VA = "0x273AB80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF018C", Offset = "0xCF018C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000175")]
			protected Vector3 force
			{
				[Token(Token = "0x60010B7")]
				[Address(RVA = "0x273AB88", Offset = "0x273AB88", VA = "0x273AB88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF019C", Offset = "0xCF019C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60010B8")]
				[Address(RVA = "0x273AB94", Offset = "0x273AB94", VA = "0x273AB94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF01AC", Offset = "0xCF01AC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000176")]
			protected Vector3 point
			{
				[Token(Token = "0x60010B9")]
				[Address(RVA = "0x273ABA0", Offset = "0x273ABA0", VA = "0x273ABA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF01BC", Offset = "0xCF01BC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60010BA")]
				[Address(RVA = "0x273ABAC", Offset = "0x273ABAC", VA = "0x273ABAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF01CC", Offset = "0xCF01CC")]
				private set
				{
				}
			}

			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x273ABB8", Offset = "0x273ABB8", VA = "0x273ABB8")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x273AD00", Offset = "0x273AD00", VA = "0x273AD00")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x60010BD")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x60010BE")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x60010BF")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x273ADE8", Offset = "0x273ADE8", VA = "0x273ADE8")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001EC")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x20001ED")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4000E38")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE83D4", Offset = "0xCE83D4")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x4000E39")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE840C", Offset = "0xCE840C")]
				public float weight;

				[Token(Token = "0x4000E3A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4000E3B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x60010C5")]
				[Address(RVA = "0x274F798", Offset = "0x274F798", VA = "0x274F798")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x60010C6")]
				[Address(RVA = "0x274F828", Offset = "0x274F828", VA = "0x274F828")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x60010C7")]
				[Address(RVA = "0x274F83C", Offset = "0x274F83C", VA = "0x274F83C")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x4000E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE832C", Offset = "0xCE832C")]
			public int forceDirCurveIndex;

			[Token(Token = "0x4000E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8364", Offset = "0xCE8364")]
			public int upDirCurveIndex;

			[Token(Token = "0x4000E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE839C", Offset = "0xCE839C")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x273ADFC", Offset = "0x273ADFC", VA = "0x273ADFC", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x273AFAC", Offset = "0x273AFAC", VA = "0x273AFAC", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x273B018", Offset = "0x273B018", VA = "0x273B018", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x273B1B8", Offset = "0x273B1B8", VA = "0x273B1B8")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001EE")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x20001EF")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x4000E3F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE84B4", Offset = "0xCE84B4")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x4000E40")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE84EC", Offset = "0xCE84EC")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE84EC", Offset = "0xCE84EC")]
				public float weight;

				[Token(Token = "0x4000E41")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x4000E42")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x60010CC")]
				[Address(RVA = "0x274F844", Offset = "0x274F844", VA = "0x274F844")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x60010CD")]
				[Address(RVA = "0x274F920", Offset = "0x274F920", VA = "0x274F920")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x60010CE")]
				[Address(RVA = "0x274F92C", Offset = "0x274F92C", VA = "0x274F92C")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8444", Offset = "0xCE8444")]
			public int curveIndex;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE847C", Offset = "0xCE847C")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x273B1D4", Offset = "0x273B1D4", VA = "0x273B1D4", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x273B2B8", Offset = "0x273B2B8", VA = "0x273B2B8", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x273B324", Offset = "0x273B324", VA = "0x273B324", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x273B5D8", Offset = "0x273B5D8", VA = "0x273B5D8")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE81C0", Offset = "0xCE81C0")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE81F8", Offset = "0xCE81F8")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x275467C", Offset = "0x275467C", VA = "0x275467C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x2754750", Offset = "0x2754750", VA = "0x2754750")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x27549B4", Offset = "0x27549B4", VA = "0x27549B4")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001F1")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x20001F2")]
			public class EffectorLink
			{
				[Token(Token = "0x4000E50")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE871C", Offset = "0xCE871C")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000E51")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8754", Offset = "0xCE8754")]
				public float weight;

				[Token(Token = "0x60010D5")]
				[Address(RVA = "0x274F970", Offset = "0x274F970", VA = "0x274F970")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE85B0", Offset = "0xCE85B0")]
			public Transform transform;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE85E8", Offset = "0xCE85E8")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8620", Offset = "0xCE8620")]
			public float speed;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8658", Offset = "0xCE8658")]
			public float acceleration;

			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE8690", Offset = "0xCE8690")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8690", Offset = "0xCE8690")]
			public float matchVelocity;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE86E4", Offset = "0xCE86E4")]
			public float gravity;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x265998C", Offset = "0x265998C", VA = "0x265998C")]
			public void Reset()
			{
			}

			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x2659A44", Offset = "0x2659A44", VA = "0x2659A44")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x2659D00", Offset = "0x2659D00", VA = "0x2659D00")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8540", Offset = "0xCE8540")]
		public Body[] bodies;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8578", Offset = "0xCE8578")]
		public OffsetLimits[] limits;

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x2302128", Offset = "0x2302128", VA = "0x2302128")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x23021A4", Offset = "0x23021A4", VA = "0x23021A4", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x2302264", Offset = "0x2302264", VA = "0x2302264")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE878C", Offset = "0xCE878C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE878C", Offset = "0xCE878C")]
		public Transform target;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE87EC", Offset = "0xCE87EC")]
		public float weight;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8804", Offset = "0xCE8804")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE883C", Offset = "0xCE883C")]
		public float weightSmoothTime;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE8874", Offset = "0xCE8874")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8874", Offset = "0xCE8874")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE88D4", Offset = "0xCE88D4")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE890C", Offset = "0xCE890C")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8944", Offset = "0xCE8944")]
		public float slerpSpeed;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE897C", Offset = "0xCE897C")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE89B4", Offset = "0xCE89B4")]
		public float minDistance;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE89EC", Offset = "0xCE89EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE89EC", Offset = "0xCE89EC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE89EC", Offset = "0xCE89EC")]
		public float maxRootAngle;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x17000177")]
		private Vector3 pivot
		{
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0x26FB2F8", Offset = "0x26FB2F8", VA = "0x26FB2F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x26FB284", Offset = "0x26FB284", VA = "0x26FB284")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x26FB388", Offset = "0x26FB388", VA = "0x26FB388")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x26FB8B8", Offset = "0x26FB8B8", VA = "0x26FB8B8")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x26FB9A4", Offset = "0x26FB9A4", VA = "0x26FB9A4")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x26FBB9C", Offset = "0x26FBB9C", VA = "0x26FBB9C")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001F5")]
		public class OffsetLimits
		{
			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8AD8", Offset = "0xCE8AD8")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8B10", Offset = "0xCE8B10")]
			public float spring;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8B48", Offset = "0xCE8B48")]
			public bool x;

			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8B80", Offset = "0xCE8B80")]
			public bool y;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8BB8", Offset = "0xCE8BB8")]
			public bool z;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8BF0", Offset = "0xCE8BF0")]
			public float minX;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8C28", Offset = "0xCE8C28")]
			public float maxX;

			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8C60", Offset = "0xCE8C60")]
			public float minY;

			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8C98", Offset = "0xCE8C98")]
			public float maxY;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8CD0", Offset = "0xCE8CD0")]
			public float minZ;

			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8D08", Offset = "0xCE8D08")]
			public float maxZ;

			[Token(Token = "0x60010E4")]
			[Address(RVA = "0x265C8F4", Offset = "0x265C8F4", VA = "0x265C8F4")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x265CA4C", Offset = "0x265CA4C", VA = "0x265CA4C")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x265CAC4", Offset = "0x265CAC4", VA = "0x265CAC4")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x265CB1C", Offset = "0x265CB1C", VA = "0x265CB1C")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x20001F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDFE24", Offset = "0xCDFE24")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x17000179")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010EB")]
				[Address(RVA = "0x265C8A4", Offset = "0x265C8A4", VA = "0x265C8A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010ED")]
				[Address(RVA = "0x265C8EC", Offset = "0x265C8EC", VA = "0x265C8EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x265C724", Offset = "0x265C724", VA = "0x265C724")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x265C750", Offset = "0x265C750", VA = "0x265C750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010EA")]
			[Address(RVA = "0x265C754", Offset = "0x265C754", VA = "0x265C754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x265C8AC", Offset = "0x265C8AC", VA = "0x265C8AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8A68", Offset = "0xCE8A68")]
		public float weight;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8AA0", Offset = "0xCE8AA0")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x17000178")]
		protected float deltaTime
		{
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0x2667828", Offset = "0x2667828", VA = "0x2667828")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010DD")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x2667854", Offset = "0x2667854", VA = "0x2667854", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x2667880", Offset = "0x2667880", VA = "0x2667880")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF01DC", Offset = "0xCF01DC")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x26678EC", Offset = "0x26678EC", VA = "0x26678EC")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x26679C8", Offset = "0x26679C8", VA = "0x26679C8")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x2667A88", Offset = "0x2667A88", VA = "0x2667A88", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x2667B94", Offset = "0x2667B94", VA = "0x2667B94")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x20001F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDFE34", Offset = "0xCDFE34")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x1700017C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010F8")]
				[Address(RVA = "0x265CCA4", Offset = "0x265CCA4", VA = "0x265CCA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010FA")]
				[Address(RVA = "0x265CCEC", Offset = "0x265CCEC", VA = "0x265CCEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x265CB24", Offset = "0x265CB24", VA = "0x265CB24")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x265CB50", Offset = "0x265CB50", VA = "0x265CB50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x265CB54", Offset = "0x265CB54", VA = "0x265CB54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x265CCAC", Offset = "0x265CCAC", VA = "0x265CCAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8D40", Offset = "0xCE8D40")]
		public float weight;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8D78", Offset = "0xCE8D78")]
		public VRIK ik;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x1700017B")]
		protected float deltaTime
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x2667BA4", Offset = "0x2667BA4", VA = "0x2667BA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010EF")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x2667BD0", Offset = "0x2667BD0", VA = "0x2667BD0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x2667BFC", Offset = "0x2667BFC", VA = "0x2667BFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF028C", Offset = "0xCF028C")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x2667C68", Offset = "0x2667C68", VA = "0x2667C68")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x2667D44", Offset = "0x2667D44", VA = "0x2667D44", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x2667E50", Offset = "0x2667E50", VA = "0x2667E50")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001FA")]
		public class EffectorLink
		{
			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x4000E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x265CCF4", Offset = "0x265CCF4", VA = "0x265CCF4")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x265CF10", Offset = "0x265CF10", VA = "0x265CF10")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x2667E60", Offset = "0x2667E60", VA = "0x2667E60")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x2667F24", Offset = "0x2667F24", VA = "0x2667F24")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x2667FE0", Offset = "0x2667FE0", VA = "0x2667FE0")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001FC")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x20001FD")]
			public class EffectorLink
			{
				[Token(Token = "0x4000E8D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8F8C", Offset = "0xCE8F8C")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000E8E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8FC4", Offset = "0xCE8FC4")]
				public float weight;

				[Token(Token = "0x6001106")]
				[Address(RVA = "0x274F980", Offset = "0x274F980", VA = "0x274F980")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8DE8", Offset = "0xCE8DE8")]
			public Transform[] raycastFrom;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8E20", Offset = "0xCE8E20")]
			public Transform raycastTo;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE8E58", Offset = "0xCE8E58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8E58", Offset = "0xCE8E58")]
			public float raycastRadius;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8EAC", Offset = "0xCE8EAC")]
			public EffectorLink[] effectors;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8EE4", Offset = "0xCE8EE4")]
			public float smoothTimeIn;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8F1C", Offset = "0xCE8F1C")]
			public float smoothTimeOut;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8F54", Offset = "0xCE8F54")]
			public LayerMask layers;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x6001102")]
			[Address(RVA = "0x265CFB0", Offset = "0x265CFB0", VA = "0x265CFB0")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6001103")]
			[Address(RVA = "0x265D0F4", Offset = "0x265D0F4", VA = "0x265D0F4")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001104")]
			[Address(RVA = "0x265D1EC", Offset = "0x265D1EC", VA = "0x265D1EC")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001105")]
			[Address(RVA = "0x265D3BC", Offset = "0x265D3BC", VA = "0x265D3BC")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8DB0", Offset = "0xCE8DB0")]
		public Avoider[] avoiders;

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x26699A0", Offset = "0x26699A0", VA = "0x26699A0", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x2669A28", Offset = "0x2669A28", VA = "0x2669A28")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20001FF")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x2000200")]
			public class EffectorLink
			{
				[Token(Token = "0x4000EAC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9350", Offset = "0xCE9350")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000EAD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9388", Offset = "0xCE9388")]
				public float weight;

				[Token(Token = "0x6001116")]
				[Address(RVA = "0x274F988", Offset = "0x274F988", VA = "0x274F988")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9254", Offset = "0xCE9254")]
			public Vector3 offset;

			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE928C", Offset = "0xCE928C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE928C", Offset = "0xCE928C")]
			public float additivity;

			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE92E0", Offset = "0xCE92E0")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9318", Offset = "0xCE9318")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x6001113")]
			[Address(RVA = "0x265ECE8", Offset = "0x265ECE8", VA = "0x265ECE8")]
			public void Start()
			{
			}

			[Token(Token = "0x6001114")]
			[Address(RVA = "0x265ED38", Offset = "0x265ED38", VA = "0x265ED38")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x6001115")]
			[Address(RVA = "0x265EEFC", Offset = "0x265EEFC", VA = "0x265EEFC")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000201")]
		public enum Handedness
		{
			[Token(Token = "0x4000EAF")]
			Right,
			[Token(Token = "0x4000EB0")]
			Left
		}

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE8FFC", Offset = "0xCE8FFC")]
		public AimIK aimIK;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9034", Offset = "0xCE9034")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE906C", Offset = "0xCE906C")]
		public Handedness handedness;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE90A4", Offset = "0xCE90A4")]
		public bool twoHanded;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE90DC", Offset = "0xCE90DC")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9114", Offset = "0xCE9114")]
		public float magnitudeRandom;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE914C", Offset = "0xCE914C")]
		public Vector3 rotationRandom;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9184", Offset = "0xCE9184")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE91BC", Offset = "0xCE91BC")]
		public float blendTime;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCE91F4", Offset = "0xCE91F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE91F4", Offset = "0xCE91F4")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x1700017E")]
		public bool isFinished
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x267AE64", Offset = "0x267AE64", VA = "0x267AE64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017F")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x267B8DC", Offset = "0x267B8DC", VA = "0x267B8DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x267B91C", Offset = "0x267B91C", VA = "0x267B91C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private Transform primaryHand
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x267B89C", Offset = "0x267B89C", VA = "0x267B89C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		private Transform secondaryHand
		{
			[Token(Token = "0x6001110")]
			[Address(RVA = "0x267B8BC", Offset = "0x267B8BC", VA = "0x267B8BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x267AE94", Offset = "0x267AE94", VA = "0x267AE94")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x267AEC0", Offset = "0x267AEC0", VA = "0x267AEC0")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x267B008", Offset = "0x267B008", VA = "0x267B008", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x267B95C", Offset = "0x267B95C", VA = "0x267B95C")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x267BA10", Offset = "0x267BA10", VA = "0x267BA10")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x267BA4C", Offset = "0x267BA4C", VA = "0x267BA4C", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x267BC04", Offset = "0x267BC04", VA = "0x267BC04")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE93C0", Offset = "0xCE93C0")]
		public float weight;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE93F8", Offset = "0xCE93F8")]
		public float offset;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x26461C4", Offset = "0x26461C4", VA = "0x26461C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x26462AC", Offset = "0x26462AC", VA = "0x26462AC")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x2646394", Offset = "0x2646394", VA = "0x2646394")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x26466E8", Offset = "0x26466E8", VA = "0x26466E8")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x2646720", Offset = "0x2646720", VA = "0x2646720")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x264682C", Offset = "0x264682C", VA = "0x264682C")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x2000204")]
		public class Settings
		{
			[Token(Token = "0x4000EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9430", Offset = "0xCE9430")]
			public float scaleMlp;

			[Token(Token = "0x4000EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9468", Offset = "0xCE9468")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x4000EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE94A0", Offset = "0xCE94A0")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x4000EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE94D8", Offset = "0xCE94D8")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x4000EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9510", Offset = "0xCE9510")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9548", Offset = "0xCE9548")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9580", Offset = "0xCE9580")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE95B8", Offset = "0xCE95B8")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCE95B8", Offset = "0xCE95B8")]
			public Vector3 headOffset;

			[Token(Token = "0x4000EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9608", Offset = "0xCE9608")]
			public Vector3 handOffset;

			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9640", Offset = "0xCE9640")]
			public float footForwardOffset;

			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE9678", Offset = "0xCE9678")]
			public float footInwardOffset;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCE96B0", Offset = "0xCE96B0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE96B0", Offset = "0xCE96B0")]
			public float footHeadingOffset;

			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE970C", Offset = "0xCE970C")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE9724", Offset = "0xCE9724")]
			public float pelvisRotationWeight;

			[Token(Token = "0x600112C")]
			[Address(RVA = "0x274A3D4", Offset = "0x274A3D4", VA = "0x274A3D4")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000205")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x2000206")]
			public class Target
			{
				[Token(Token = "0x4000ECF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x4000ED0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x4000ED1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x600112E")]
				[Address(RVA = "0x274F990", Offset = "0x274F990", VA = "0x274F990")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x600112F")]
				[Address(RVA = "0x274FA50", Offset = "0x274FA50", VA = "0x274FA50")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x600112D")]
			[Address(RVA = "0x274A3CC", Offset = "0x274A3CC", VA = "0x274A3CC")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x260D444", Offset = "0x260D444", VA = "0x260D444")]
		public static void RecalibrateScale(VRIK ik, CalibrationData data, Settings settings)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x260D45C", Offset = "0x260D45C", VA = "0x260D45C")]
		public static void RecalibrateScale(VRIK ik, CalibrationData data, float scaleMlp)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x260D594", Offset = "0x260D594", VA = "0x260D594")]
		private static void CalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x260D4A8", Offset = "0x260D4A8", VA = "0x260D4A8")]
		private static void CalibrateScale(VRIK ik, float scaleMlp = 1f)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x260D5AC", Offset = "0x260D5AC", VA = "0x260D5AC")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x260E7B8", Offset = "0x260E7B8", VA = "0x260E7B8")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x260EFA4", Offset = "0x260EFA4", VA = "0x260EFA4")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x260FA8C", Offset = "0x260FA8C", VA = "0x260FA8C")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x260FE9C", Offset = "0x260FE9C", VA = "0x260FE9C")]
		public static CalibrationData Calibrate(VRIK ik, Transform centerEyeAnchor, Transform leftHandAnchor, Transform rightHandAnchor, Vector3 centerEyePositionOffset, Vector3 centerEyeRotationOffset, Vector3 handPositionOffset, Vector3 handRotationOffset, float scaleMlp = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x26100B0", Offset = "0x26100B0", VA = "0x26100B0")]
		public static void CalibrateHead(VRIK ik, Transform centerEyeAnchor, Vector3 anchorPositionOffset, Vector3 anchorRotationOffset)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x2610754", Offset = "0x2610754", VA = "0x2610754")]
		public static void CalibrateBody(VRIK ik, Transform pelvisTracker, Vector3 trackerPositionOffset, Vector3 trackerRotationOffset)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x2610500", Offset = "0x2610500", VA = "0x2610500")]
		public static void CalibrateHands(VRIK ik, Transform leftHandAnchor, Transform rightHandAnchor, Vector3 anchorPositionOffset, Vector3 anchorRotationOffset)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x26109C4", Offset = "0x26109C4", VA = "0x26109C4")]
		private static void CalibrateHand(Transform hand, Transform forearm, Transform target, Transform anchor, Vector3 positionOffset, Vector3 rotationOffset, bool isLeft)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x2610C20", Offset = "0x2610C20", VA = "0x2610C20")]
		public static Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x2610D10", Offset = "0x2610D10", VA = "0x2610D10")]
		public static Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000207")]
	public class VRIKLODController : MonoBehaviour
	{
		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer LODRenderer;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LODDistance;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allowCulled;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRIK ik;

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x261102C", Offset = "0x261102C", VA = "0x261102C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x2611080", Offset = "0x2611080", VA = "0x2611080")]
		private void Update()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x26110B4", Offset = "0x26110B4", VA = "0x26110B4")]
		private int GetLODLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x26111F0", Offset = "0x26111F0", VA = "0x26111F0")]
		public VRIKLODController()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE973C", Offset = "0xCE973C")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x17000183")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x2611208", Offset = "0x2611208", VA = "0x2611208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF033C", Offset = "0xCF033C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x2611214", Offset = "0x2611214", VA = "0x2611214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF034C", Offset = "0xCF034C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x2611220", Offset = "0x2611220", VA = "0x2611220")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x260EDAC", Offset = "0x260EDAC", VA = "0x260EDAC")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x260FD18", Offset = "0x260FD18", VA = "0x260FD18")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x261130C", Offset = "0x261130C", VA = "0x261130C")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x2611728", Offset = "0x2611728", VA = "0x2611728")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x2611834", Offset = "0x2611834", VA = "0x2611834")]
		public VRIKRootController()
		{
		}
	}
}
namespace NexPlugin
{
	[Token(Token = "0x2000209")]
	public static class Common
	{
		[Token(Token = "0x200020A")]
		[Flags]
		public enum ThreadMode
		{
			[Token(Token = "0x4000EDD")]
			ThreadModeSafeTransportBuffer = 1,
			[Token(Token = "0x4000EDE")]
			ThreadModeUnsafeTransportBuffer = 2
		}

		[Token(Token = "0x200020B")]
		[Flags]
		public enum DispachFlag
		{
			[Token(Token = "0x4000EE0")]
			ContinueWhenEmpty = 1,
			[Token(Token = "0x4000EE1")]
			DispatchKeepAliveOnly = 2
		}

		[Token(Token = "0x200020C")]
		public enum NotificationEvents
		{
			[Token(Token = "0x4000EE3")]
			ParticipationEvent = 3,
			[Token(Token = "0x4000EE4")]
			OwnershipChangeEvent = 4,
			[Token(Token = "0x4000EE5")]
			GatheringUnregistered = 109,
			[Token(Token = "0x4000EE6")]
			HostChangeEvent = 110,
			[Token(Token = "0x4000EE7")]
			GameNotificationLogout = 111,
			[Token(Token = "0x4000EE8")]
			SubscriptionEvent = 112,
			[Token(Token = "0x4000EE9")]
			GameServerMaintenance = 113,
			[Token(Token = "0x4000EEA")]
			MaintenanceAnnouncement = 114,
			[Token(Token = "0x4000EEB")]
			RoundStarted = 116,
			[Token(Token = "0x4000EEC")]
			FirstRoundReportReceived = 117,
			[Token(Token = "0x4000EED")]
			RoundSummarized = 118,
			[Token(Token = "0x4000EEE")]
			MatchmakeSystemConfigurationNotification = 119,
			[Token(Token = "0x4000EEF")]
			MatchmakeSessionSystemPasswordSet = 120,
			[Token(Token = "0x4000EF0")]
			MatchmakeSessionSystemPasswordClear = 121,
			[Token(Token = "0x4000EF1")]
			AddedToGathering = 122,
			[Token(Token = "0x4000EF2")]
			UserStatusUpdatedEvent = 128
		}

		[Token(Token = "0x200020D")]
		public enum ParticipationEvents
		{
			[Token(Token = "0x4000EF4")]
			Participate = 1,
			[Token(Token = "0x4000EF5")]
			Disconnect = 7,
			[Token(Token = "0x4000EF6")]
			EndParticipation = 8
		}

		[Token(Token = "0x4000EDB")]
		public const uint INFINITE_TIME_INTERVAL = 2147483647u;
	}
	[Token(Token = "0x200020E")]
	public static class DataStore
	{
		[Token(Token = "0x200020F")]
		public enum Permission
		{
			[Token(Token = "0x4000F11")]
			PERMISSION_PUBLIC,
			[Token(Token = "0x4000F12")]
			PERMISSION_FRIEND,
			[Token(Token = "0x4000F13")]
			PERMISSION_SPECIFIED,
			[Token(Token = "0x4000F14")]
			PERMISSION_PRIVATE,
			[Token(Token = "0x4000F15")]
			PERMISSION_SPECIFIED_FRIEND
		}

		[Token(Token = "0x2000210")]
		[Flags]
		public enum DataFlag
		{
			[Token(Token = "0x4000F17")]
			DATA_FLAG_NONE = 0,
			[Token(Token = "0x4000F18")]
			DATA_FLAG_NEED_REVIEW = 1,
			[Token(Token = "0x4000F19")]
			DATA_FLAG_PERIOD_FROM_LAST_REFERRED = 2,
			[Token(Token = "0x4000F1A")]
			DATA_FLAG_USE_READ_LOCK = 4,
			[Token(Token = "0x4000F1B")]
			DATA_FLAG_USE_NOTIFICATION_ON_POST = 8,
			[Token(Token = "0x4000F1C")]
			DATA_FLAG_USE_NOTIFICATION_ON_UPDATE = 0x10,
			[Token(Token = "0x4000F1D")]
			DATA_FLAG_NOT_USE_FILESERVER = 0x20,
			[Token(Token = "0x4000F1E")]
			DATA_FLAG_NEED_COMPLETION = 0x40
		}

		[Token(Token = "0x2000211")]
		[Flags]
		public enum ModificationFlag
		{
			[Token(Token = "0x4000F20")]
			MODIFICATION_FLAG_NONE = 0,
			[Token(Token = "0x4000F21")]
			MODIFICATION_FLAG_NAME = 1,
			[Token(Token = "0x4000F22")]
			MODIFICATION_FLAG_ACCESS_PERMISSION = 2,
			[Token(Token = "0x4000F23")]
			MODIFICATION_FLAG_UPDATE_PERMISSION = 4,
			[Token(Token = "0x4000F24")]
			MODIFICATION_FLAG_PERIOD = 8,
			[Token(Token = "0x4000F25")]
			MODIFICATION_FLAG_METABINARY = 0x10,
			[Token(Token = "0x4000F26")]
			MODIFICATION_FLAG_TAGS = 0x20,
			[Token(Token = "0x4000F27")]
			MODIFICATION_FLAG_UPDATED_TIME = 0x40,
			[Token(Token = "0x4000F28")]
			MODIFICATION_FLAG_DATA_TYPE = 0x80,
			[Token(Token = "0x4000F29")]
			MODIFICATION_FLAG_STATUS = 0x200
		}

		[Token(Token = "0x2000212")]
		public enum DataStatus
		{
			[Token(Token = "0x4000F2B")]
			DATA_STATUS_NONE = 0,
			[Token(Token = "0x4000F2C")]
			DATA_STATUS_PENDING = 2,
			[Token(Token = "0x4000F2D")]
			DATA_STATUS_REJECTED = 5
		}

		[Token(Token = "0x2000213")]
		[Flags]
		public enum ComparisonFlag
		{
			[Token(Token = "0x4000F2F")]
			COMPARISON_FLAG_NONE = 0,
			[Token(Token = "0x4000F30")]
			COMPARISON_FLAG_NAME = 1,
			[Token(Token = "0x4000F31")]
			COMPARISON_FLAG_ACCESS_PERMISSION = 2,
			[Token(Token = "0x4000F32")]
			COMPARISON_FLAG_UPDATE_PERMISSION = 4,
			[Token(Token = "0x4000F33")]
			COMPARISON_FLAG_PERIOD = 8,
			[Token(Token = "0x4000F34")]
			COMPARISON_FLAG_METABINARY = 0x10,
			[Token(Token = "0x4000F35")]
			COMPARISON_FLAG_TAGS = 0x20,
			[Token(Token = "0x4000F36")]
			COMPARISON_FLAG_DATA_TYPE = 0x40,
			[Token(Token = "0x4000F37")]
			COMPARISON_FLAG_STATUS = 0x100,
			[Token(Token = "0x4000F38")]
			COMPARISON_FLAG_ALL = 0xFFFF
		}

		[Token(Token = "0x2000214")]
		public enum SearchType
		{
			[Token(Token = "0x4000F3A")]
			SEARCH_TYPE_PUBLIC = 1,
			[Token(Token = "0x4000F3B")]
			SEARCH_TYPE_SEND_FRIEND = 2,
			[Token(Token = "0x4000F3C")]
			SEARCH_TYPE_SEND_SPECIFIED = 3,
			[Token(Token = "0x4000F3D")]
			SEARCH_TYPE_SEND_SPECIFIED_FRIEND = 4,
			[Token(Token = "0x4000F3E")]
			SEARCH_TYPE_SEND = 5,
			[Token(Token = "0x4000F3F")]
			SEARCH_TYPE_FRIEND = 6,
			[Token(Token = "0x4000F40")]
			SEARCH_TYPE_RECEIVED_SPECIFIED = 7,
			[Token(Token = "0x4000F41")]
			SEARCH_TYPE_RECEIVED = 8,
			[Token(Token = "0x4000F42")]
			SEARCH_TYPE_PRIVATE = 9,
			[Token(Token = "0x4000F43")]
			SEARCH_TYPE_OWN = 10,
			[Token(Token = "0x4000F44")]
			SEARCH_TYPE_OWN_PENDING = 12,
			[Token(Token = "0x4000F45")]
			SEARCH_TYPE_OWN_REJECTED = 13,
			[Token(Token = "0x4000F46")]
			SEARCH_TYPE_OWN_ALL = 14
		}

		[Token(Token = "0x2000215")]
		public enum SearchTarget
		{
			[Token(Token = "0x4000F48")]
			SEARCH_TARGET_ANYBODY,
			[Token(Token = "0x4000F49")]
			SEARCH_TARGET_FRIEND
		}

		[Token(Token = "0x2000216")]
		public enum SearchSortColumn
		{
			[Token(Token = "0x4000F4B")]
			SEARCH_SORT_COLUMN_DATAID = 0,
			[Token(Token = "0x4000F4C")]
			SEARCH_SORT_COLUMN_CREATED_TIME = 5,
			[Token(Token = "0x4000F4D")]
			SEARCH_SORT_COLUMN_UPDATED_TIME = 6,
			[Token(Token = "0x4000F4E")]
			SEARCH_SORT_COLUMN_RATING0 = 64,
			[Token(Token = "0x4000F4F")]
			SEARCH_SORT_COLUMN_RATING1 = 65,
			[Token(Token = "0x4000F50")]
			SEARCH_SORT_COLUMN_RATING2 = 66,
			[Token(Token = "0x4000F51")]
			SEARCH_SORT_COLUMN_RATING3 = 67,
			[Token(Token = "0x4000F52")]
			SEARCH_SORT_COLUMN_RATING4 = 68,
			[Token(Token = "0x4000F53")]
			SEARCH_SORT_COLUMN_RATING5 = 69,
			[Token(Token = "0x4000F54")]
			SEARCH_SORT_COLUMN_RATING6 = 70,
			[Token(Token = "0x4000F55")]
			SEARCH_SORT_COLUMN_RATING7 = 71,
			[Token(Token = "0x4000F56")]
			SEARCH_SORT_COLUMN_RATING8 = 72,
			[Token(Token = "0x4000F57")]
			SEARCH_SORT_COLUMN_RATING9 = 73,
			[Token(Token = "0x4000F58")]
			SEARCH_SORT_COLUMN_RATING10 = 74,
			[Token(Token = "0x4000F59")]
			SEARCH_SORT_COLUMN_RATING11 = 75,
			[Token(Token = "0x4000F5A")]
			SEARCH_SORT_COLUMN_RATING12 = 76,
			[Token(Token = "0x4000F5B")]
			SEARCH_SORT_COLUMN_RATING13 = 77,
			[Token(Token = "0x4000F5C")]
			SEARCH_SORT_COLUMN_RATING14 = 78,
			[Token(Token = "0x4000F5D")]
			SEARCH_SORT_COLUMN_RATING15 = 79,
			[Token(Token = "0x4000F5E")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE0 = 96,
			[Token(Token = "0x4000F5F")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE1 = 97,
			[Token(Token = "0x4000F60")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE2 = 98,
			[Token(Token = "0x4000F61")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE3 = 99,
			[Token(Token = "0x4000F62")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE4 = 100,
			[Token(Token = "0x4000F63")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE5 = 101,
			[Token(Token = "0x4000F64")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE6 = 102,
			[Token(Token = "0x4000F65")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE7 = 103,
			[Token(Token = "0x4000F66")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE8 = 104,
			[Token(Token = "0x4000F67")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE9 = 105,
			[Token(Token = "0x4000F68")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE10 = 106,
			[Token(Token = "0x4000F69")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE11 = 107,
			[Token(Token = "0x4000F6A")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE12 = 108,
			[Token(Token = "0x4000F6B")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE13 = 109,
			[Token(Token = "0x4000F6C")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE14 = 110,
			[Token(Token = "0x4000F6D")]
			SEARCH_SORT_COLUMN_RATING_AVERAGE15 = 111
		}

		[Token(Token = "0x2000217")]
		public enum SearchSortOrder
		{
			[Token(Token = "0x4000F6F")]
			SEARCH_SORT_ORDER_ASC,
			[Token(Token = "0x4000F70")]
			SEARCH_SORT_ORDER_DESC
		}

		[Token(Token = "0x2000218")]
		[Flags]
		public enum ResultFlag
		{
			[Token(Token = "0x4000F72")]
			RESULT_FLAG_TAGS = 1,
			[Token(Token = "0x4000F73")]
			RESULT_FLAG_RATINGS = 2,
			[Token(Token = "0x4000F74")]
			RESULT_FLAG_METABINARY = 4,
			[Token(Token = "0x4000F75")]
			RESULT_FLAG_PERMITTED_IDS = 8
		}

		[Token(Token = "0x2000219")]
		public enum RatingLockType
		{
			[Token(Token = "0x4000F77")]
			RATING_LOCK_NONE,
			[Token(Token = "0x4000F78")]
			RATING_LOCK_INTERVAL,
			[Token(Token = "0x4000F79")]
			RATING_LOCK_PERIOD,
			[Token(Token = "0x4000F7A")]
			RATING_LOCK_PERMANENT
		}

		[Token(Token = "0x200021A")]
		public enum RatingFlag
		{
			[Token(Token = "0x4000F7C")]
			RATING_FLAG_MODIFIABLE = 4,
			[Token(Token = "0x4000F7D")]
			RATING_FLAG_ROUND_MINUS = 8,
			[Token(Token = "0x4000F7E")]
			RATING_FLAG_DISABLE_SELF_RATING = 0x10
		}

		[Token(Token = "0x200021B")]
		[Flags]
		internal enum RatingInternalFlag
		{
			[Token(Token = "0x4000F80")]
			RATING_INTERNAL_FLAG_USE_RANGE_MIN = 2,
			[Token(Token = "0x4000F81")]
			RATING_INTERNAL_FLAG_USE_RANGE_MAX = 4
		}

		[Token(Token = "0x200021C")]
		public enum RatingLockPeriod
		{
			[Token(Token = "0x4000F83")]
			RATING_LOCK_PERIOD_MON = -1,
			[Token(Token = "0x4000F84")]
			RATING_LOCK_PERIOD_TUE = -2,
			[Token(Token = "0x4000F85")]
			RATING_LOCK_PERIOD_WED = -3,
			[Token(Token = "0x4000F86")]
			RATING_LOCK_PERIOD_THU = -4,
			[Token(Token = "0x4000F87")]
			RATING_LOCK_PERIOD_FRI = -5,
			[Token(Token = "0x4000F88")]
			RATING_LOCK_PERIOD_SAT = -6,
			[Token(Token = "0x4000F89")]
			RATING_LOCK_PERIOD_SUN = -7,
			[Token(Token = "0x4000F8A")]
			RATING_LOCK_PERIOD_DAY1 = -17
		}

		[Token(Token = "0x200021D")]
		public enum SearchResultTotalCountType
		{
			[Token(Token = "0x4000F8C")]
			SEARCH_RESULT_TOTAL_EXACT,
			[Token(Token = "0x4000F8D")]
			SEARCH_RESULT_TOTAL_MINIMUM,
			[Token(Token = "0x4000F8E")]
			SEARCH_RESULT_TOTAL_ESTIMATE,
			[Token(Token = "0x4000F8F")]
			SEARCH_RESULT_TOTAL_DISABLED
		}

		[Token(Token = "0x4000EF7")]
		public const ulong INVALID_DATAID = 0uL;

		[Token(Token = "0x4000EF8")]
		public const ushort INVALID_DATA_TYPE = ushort.MaxValue;

		[Token(Token = "0x4000EF9")]
		public const ulong INVALID_PASSWORD = 0uL;

		[Token(Token = "0x4000EFA")]
		public const uint MAX_NAME_LENGTH = 64u;

		[Token(Token = "0x4000EFB")]
		public const uint MAX_SEARCH_RESULT_SIZE = 100u;

		[Token(Token = "0x4000EFC")]
		public const uint MAX_SEARCH_ANY_RESULT_SIZE = 20u;

		[Token(Token = "0x4000EFD")]
		public const uint MAX_SEARCH_DATA_TYPE_SIZE = 10u;

		[Token(Token = "0x4000EFE")]
		public const uint NUM_TAG_SLOT = 16u;

		[Token(Token = "0x4000EFF")]
		public const uint RATING_SLOT_MAX = 15u;

		[Token(Token = "0x4000F00")]
		public const uint NUM_RATING_SLOT = 16u;

		[Token(Token = "0x4000F01")]
		public const uint MAX_TAG_LENGTH = 24u;

		[Token(Token = "0x4000F02")]
		public const ushort DEFAULT_PERIOD = 90;

		[Token(Token = "0x4000F03")]
		public const uint DEFAULT_HTTP_THREAD_PRIORITY = 16u;

		[Token(Token = "0x4000F04")]
		public const uint DEFAULT_RELAY_BUFFER_SIZE = 16384u;

		[Token(Token = "0x4000F05")]
		public const uint DEFAULT_HTTP_BUFFER_SIZE = 32768u;

		[Token(Token = "0x4000F06")]
		public const uint DEFAULT_DATA_TRANSFER_TIMEOUT_BYTES_PER_SECOND = 167u;

		[Token(Token = "0x4000F07")]
		public const int DEFAULT_DATA_TRANSFER_MINIMUM_TIMEOUT = 60000;

		[Token(Token = "0x4000F08")]
		public const uint DEFAULT_HTTP_SEND_SOCKET_BUFFER_SIZE = 65536u;

		[Token(Token = "0x4000F09")]
		public const uint DEFAULT_HTTP_RECV_SOCKET_BUFFER_SIZE = 65536u;

		[Token(Token = "0x4000F0A")]
		public const ushort INVALID_PERSISTENCE_SLOT_ID = ushort.MaxValue;

		[Token(Token = "0x4000F0B")]
		public const ushort NUM_PERSISTENCE_SLOT = 16;

		[Token(Token = "0x4000F0C")]
		public const uint BATCH_PROCESSING_CAPACITY_POST_OBJECT = 16u;

		[Token(Token = "0x4000F0D")]
		public const uint BATCH_PROCESSING_CAPACITY = 100u;

		[Token(Token = "0x4000F0E")]
		public const ulong RESULTRANGE_ANY_OFFSET = 4294967295uL;

		[Token(Token = "0x4000F0F")]
		public const uint RESULTRANGE_DEFAULT_SIZE = 20u;
	}
	[Token(Token = "0x200021E")]
	public static class Ranking
	{
		[Token(Token = "0x200021F")]
		public enum RankingMode
		{
			[Token(Token = "0x4000F94")]
			RANKING_MODE_RANGE,
			[Token(Token = "0x4000F95")]
			RANKING_MODE_NEAR,
			[Token(Token = "0x4000F96")]
			RANKING_MODE_FRIEND_RANGE,
			[Token(Token = "0x4000F97")]
			RANKING_MODE_FRIEND_NEAR,
			[Token(Token = "0x4000F98")]
			RANKING_MODE_USER
		}

		[Token(Token = "0x2000220")]
		public enum FilterGroupIndex
		{
			[Token(Token = "0x4000F9A")]
			FILTER_GROUP_INDEX_0 = 0,
			[Token(Token = "0x4000F9B")]
			FILTER_GROUP_INDEX_1 = 1,
			[Token(Token = "0x4000F9C")]
			FILTER_GROUP_INDEX_2 = 2,
			[Token(Token = "0x4000F9D")]
			FILTER_GROUP_INDEX_3 = 3,
			[Token(Token = "0x4000F9E")]
			FILTER_GROUP_INDEX_NONE = 255
		}

		[Token(Token = "0x2000221")]
		public enum OrderBy
		{
			[Token(Token = "0x4000FA0")]
			ORDER_BY_ASC,
			[Token(Token = "0x4000FA1")]
			ORDER_BY_DESC
		}

		[Token(Token = "0x2000222")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000FA3")]
			UPDATE_MODE_NORMAL,
			[Token(Token = "0x4000FA4")]
			UPDATE_MODE_DELETE_OLD
		}

		[Token(Token = "0x2000223")]
		public enum OrderCalculation
		{
			[Token(Token = "0x4000FA6")]
			ORDER_CALCULATION_113,
			[Token(Token = "0x4000FA7")]
			ORDER_CALCULATION_123
		}

		[Token(Token = "0x2000224")]
		public enum TimeScope
		{
			[Token(Token = "0x4000FA9")]
			TIME_SCOPE_CUSTOM_0,
			[Token(Token = "0x4000FAA")]
			TIME_SCOPE_CUSTOM_1,
			[Token(Token = "0x4000FAB")]
			TIME_SCOPE_ALL
		}

		[Token(Token = "0x2000225")]
		[Flags]
		public enum ModificationFlag
		{
			[Token(Token = "0x4000FAD")]
			MODIFICATION_FLAG_NONE = 0,
			[Token(Token = "0x4000FAE")]
			MODIFICATION_FLAG_GROUP0 = 1,
			[Token(Token = "0x4000FAF")]
			MODIFICATION_FLAG_GROUP1 = 2,
			[Token(Token = "0x4000FB0")]
			MODIFICATION_FLAG_GROUP2 = 4,
			[Token(Token = "0x4000FB1")]
			MODIFICATION_FLAG_GROUP3 = 8,
			[Token(Token = "0x4000FB2")]
			MODIFICATION_FLAG_PARAM = 0x10
		}

		[Token(Token = "0x2000226")]
		[Flags]
		public enum StatsFlag
		{
			[Token(Token = "0x4000FB4")]
			STATS_FLAG_TOTAL = 1,
			[Token(Token = "0x4000FB5")]
			STATS_FLAG_SUM = 2,
			[Token(Token = "0x4000FB6")]
			STATS_FLAG_MIN = 4,
			[Token(Token = "0x4000FB7")]
			STATS_FLAG_MAX = 8,
			[Token(Token = "0x4000FB8")]
			STATS_FLAG_AVERAGE = 0x10
		}

		[Token(Token = "0x4000F90")]
		public const byte MAX_COMMON_DATA_SIZE = byte.MaxValue;

		[Token(Token = "0x4000F91")]
		public const uint MAX_RANGE_RANKING_ORDER = 1000u;

		[Token(Token = "0x4000F92")]
		public const uint MAX_ACCURATE_ORDER = 5000u;
	}
	[Token(Token = "0x2000227")]
	public static class Ranking2
	{
		[Token(Token = "0x2000228")]
		public enum Ranking2SortFlags
		{
			[Token(Token = "0x4000FC1")]
			NOTHING = 0,
			[Token(Token = "0x4000FC2")]
			MOVE_TO_TOP_IN_TIE = 4
		}

		[Token(Token = "0x2000229")]
		public enum Ranking2GetOptionFlags
		{
			[Token(Token = "0x4000FC4")]
			NOTHING,
			[Token(Token = "0x4000FC5")]
			MII_REQUIRED
		}

		[Token(Token = "0x200022A")]
		public enum Ranking2Mode : byte
		{
			[Token(Token = "0x4000FC7")]
			USER_RANKING = 0,
			[Token(Token = "0x4000FC8")]
			NEAR_RANKING = 1,
			[Token(Token = "0x4000FC9")]
			RANGE_RANKING = 2,
			[Token(Token = "0x4000FCA")]
			FRIEND_RANKING = 3,
			[Token(Token = "0x4000FCB")]
			MIN = 0,
			[Token(Token = "0x4000FCC")]
			MAX = 3
		}

		[Token(Token = "0x200022B")]
		public enum Ranking2ResetMode : byte
		{
			[Token(Token = "0x4000FCE")]
			NOTHING = 0,
			[Token(Token = "0x4000FCF")]
			EVERYDAY = 1,
			[Token(Token = "0x4000FD0")]
			EVERYWEEK = 2,
			[Token(Token = "0x4000FD1")]
			MULTI_MONTH = 3,
			[Token(Token = "0x4000FD2")]
			MULTI_MONTH_WEEKDAY = 4,
			[Token(Token = "0x4000FD3")]
			MIN = 0,
			[Token(Token = "0x4000FD4")]
			MAX = 4
		}

		[Token(Token = "0x4000FB9")]
		public const int MAX_BINARY_DATA_LENGTH = 100;

		[Token(Token = "0x4000FBA")]
		public const uint MAX_CHART_GET_LENGTH = 20u;

		[Token(Token = "0x4000FBB")]
		public const uint MAX_PUT_MULTI_SCORES = 20u;

		[Token(Token = "0x4000FBC")]
		public const uint MAX_RANKING_LENGTH = 100u;

		[Token(Token = "0x4000FBD")]
		public const int MAX_USERNAME_LENGTH = 20;

		[Token(Token = "0x4000FBE")]
		public const bool SCORE_ORDER_ASC = false;

		[Token(Token = "0x4000FBF")]
		public const bool SCORE_ORDER_DESC = true;
	}
	[Token(Token = "0x200022C")]
	public static class Subscriber
	{
		[Token(Token = "0x4000FD5")]
		public const uint MAX_TOPIC_CONTENT_SIZE = 100u;

		[Token(Token = "0x4000FD6")]
		public const uint MAX_TIMELINE_CONTENT_SIZE = 100u;

		[Token(Token = "0x4000FD7")]
		public const uint MAX_FOLLOWING_SIZE = 20u;

		[Token(Token = "0x4000FD8")]
		public const uint NUM_RESERVED_TOPICS = 128u;

		[Token(Token = "0x4000FD9")]
		public const uint INVALID_RESERVED_TOPIC_NUM = uint.MaxValue;

		[Token(Token = "0x4000FDA")]
		public const uint MAX_GET_FOLLOWER_SIZE = 1000u;

		[Token(Token = "0x4000FDB")]
		public const uint MAX_CONTENT_MESSAGE_LEN = 140u;

		[Token(Token = "0x4000FDC")]
		public const uint MAX_CONTENT_BINARY_SIZE = 256u;

		[Token(Token = "0x4000FDD")]
		public const uint MAX_POST_CONTENT_TOPIC_SIZE = 10u;

		[Token(Token = "0x4000FDE")]
		public const uint MAX_GET_CONTENT_PARAMS_SIZE = 3u;

		[Token(Token = "0x4000FDF")]
		public const byte STATUS_KEY_SIZE = 8;

		[Token(Token = "0x4000FE0")]
		public const uint MAX_STATUS_BINARY_SIZE = 128u;

		[Token(Token = "0x4000FE1")]
		public const uint MAX_GET_STATUS_USER_SIZE = 100u;

		[Token(Token = "0x4000FE2")]
		public const uint DEFAULT_RMC_INTERVAL = 5000u;
	}
	[Token(Token = "0x200022D")]
	public static class Matchmake
	{
		[Token(Token = "0x200022E")]
		public enum MatchmakeGeoIpResult
		{
			[Token(Token = "0x4000FFA")]
			MATCHMAKE_GEO_IP_RESULT_INVALID,
			[Token(Token = "0x4000FFB")]
			MATCHMAKE_GEO_IP_RESULT_FOUND,
			[Token(Token = "0x4000FFC")]
			MATCHMAKE_GEO_IP_RESULT_NOT_FOUND,
			[Token(Token = "0x4000FFD")]
			MATCHMAKE_GEO_IP_RESULT_UNUSED
		}

		[Token(Token = "0x200022F")]
		public enum MatchmakeSystemType
		{
			[Token(Token = "0x4000FFF")]
			MATCHMAKE_SYSTEM_TYPE_INVALID = 0,
			[Token(Token = "0x4001000")]
			MATCHMAKE_SYSTEM_TYPE_ANYBODY = 1,
			[Token(Token = "0x4001001")]
			MATCHMAKE_SYSTEM_TYPE_PERSISTENT_GATHERING = 5
		}

		[Token(Token = "0x2000230")]
		public enum MatchmakeSelectionMethod
		{
			[Token(Token = "0x4001003")]
			MATCHMAKE_SELECTION_METHOD_RANDOM,
			[Token(Token = "0x4001004")]
			MATCHMAKE_SELECTION_METHOD_NEAREST_NEIGHBOR,
			[Token(Token = "0x4001005")]
			MATCHMAKE_SELECTION_METHOD_BROADEN_RANGE,
			[Token(Token = "0x4001006")]
			MATCHMAKE_SELECTION_METHOD_PROGRESS_SCORE,
			[Token(Token = "0x4001007")]
			MATCHMAKE_SELECTION_METHOD_BROADEN_RANGE_WITH_PROGRESS_SCORE,
			[Token(Token = "0x4001008")]
			MATCHMAKE_SELECTION_METHOD_SCORE_BASED
		}

		[Token(Token = "0x2000231")]
		[Flags]
		public enum GatheringFlags
		{
			[Token(Token = "0x400100A")]
			Nothing = 0,
			[Token(Token = "0x400100B")]
			MigrateOwner = 0x10,
			[Token(Token = "0x400100C")]
			NoPersistentParticipation = 0x40,
			[Token(Token = "0x400100D")]
			AllowNoParticipant = 0x80,
			[Token(Token = "0x400100E")]
			ChangeOwnerByOtherHost = 0x200,
			[Token(Token = "0x400100F")]
			NotifyParticipationEventsToAllParticipants = 0x400,
			[Token(Token = "0x4001010")]
			NotifyParticipationEventsToAllParticipantsReproducibly = 0x800
		}

		[Token(Token = "0x2000232")]
		[Flags]
		public enum MatchmakeSessionOption0 : long
		{
			[Token(Token = "0x4001012")]
			MATCHMAKE_SESSION_OPTION0_NONE = 0L,
			[Token(Token = "0x4001013")]
			MATCHMAKE_SESSION_OPTION0_FORCE_AUTOMATCH_DELAY = 1L,
			[Token(Token = "0x4001014")]
			MATCHMAKE_SESSION_OPTION0_FORCE_AUTOMATCH_NODELAY = 2L
		}

		[Token(Token = "0x2000233")]
		public enum MatchmakeOption
		{
			[Token(Token = "0x4001016")]
			MATCHMAKE_OPTION_NONE,
			[Token(Token = "0x4001017")]
			MATCHMAKE_OPTION_RECORD_LAST_GID_FOR_PARTICIPATION_CHECK,
			[Token(Token = "0x4001018")]
			MATCHMAKE_OPTION_RESERVED_1
		}

		[Token(Token = "0x2000234")]
		public enum AutoMatchmakeOption
		{
			[Token(Token = "0x400101A")]
			AUTO_MATCHMAKE_OPTION_NONE,
			[Token(Token = "0x400101B")]
			AUTO_MATCHMAKE_OPTION_RECORD_LAST_GID_FOR_PARTICIPATION_CHECK,
			[Token(Token = "0x400101C")]
			AUTO_MATCHMAKE_OPTION_UNIQUE_GATHERING_BY_CODEWORD
		}

		[Token(Token = "0x2000235")]
		public enum JoinMatchmakeSessionBehavior
		{
			[Token(Token = "0x400101E")]
			JOIN_MATCHMAKE_SESSION_BEHAVIOR_JOIN_MYSELF,
			[Token(Token = "0x400101F")]
			JOIN_MATCHMAKE_SESSION_BEHAVIOR_IM_ALREADY_JOINED
		}

		[Token(Token = "0x2000236")]
		[Flags]
		public enum FindMatchmakeSessionResultOption
		{
			[Token(Token = "0x4001021")]
			FIND_MATCHMAKESESSION_RESULT_OPTION_NONE = 0,
			[Token(Token = "0x4001022")]
			FIND_MATCHMAKESESSION_RESULT_OPTION_APPLICATION_BUFFER = 1,
			[Token(Token = "0x4001023")]
			FIND_MATCHMAKESESSION_RESULT_OPTION_MATCHMAKE_PARAM = 2
		}

		[Token(Token = "0x2000237")]
		public enum PersistentGatheringType
		{
			[Token(Token = "0x4001025")]
			Open,
			[Token(Token = "0x4001026")]
			PasswordLocked,
			[Token(Token = "0x4001027")]
			Official
		}

		[Token(Token = "0x2000238")]
		[Flags]
		public enum MatchmakeSessionModificationFlag
		{
			[Token(Token = "0x4001029")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_NONE = 0,
			[Token(Token = "0x400102A")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_ATTRIBUTES = 1,
			[Token(Token = "0x400102B")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_OPEN_PARTICIPATION = 2,
			[Token(Token = "0x400102C")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_APPLICATION_BUFFER = 4,
			[Token(Token = "0x400102D")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_PROGRESS_SCORE = 8,
			[Token(Token = "0x400102E")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_OPTION0 = 0x10,
			[Token(Token = "0x400102F")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_MATCHMAKE_PARAM = 0x20,
			[Token(Token = "0x4001030")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_MATCHMAKE_PARAM_OVERRIDE = 0x40,
			[Token(Token = "0x4001031")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_STARTED_TIME = 0x80,
			[Token(Token = "0x4001032")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_USER_PASSWORD = 0x100,
			[Token(Token = "0x4001033")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_GAME_MODE = 0x200,
			[Token(Token = "0x4001034")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_DESCRIPTION = 0x400,
			[Token(Token = "0x4001035")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_MIN_PARTICIPANTS = 0x800,
			[Token(Token = "0x4001036")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_MAX_PARTICIPANTS = 0x1000,
			[Token(Token = "0x4001037")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_MATCHMAKE_SYSTEM_TYPE = 0x2000,
			[Token(Token = "0x4001038")]
			MATCHMAKE_SESSION_MODIFICATION_FLAG_CODEWORD = 0x4000
		}

		[Token(Token = "0x2000239")]
		public enum AnybodyParticipationPolicyArgument
		{
			[Token(Token = "0x400103A")]
			WithoutClose,
			[Token(Token = "0x400103B")]
			CloseOnOwnerMigration
		}

		[Token(Token = "0x4000FE3")]
		public const uint INVALID_GATHERINGID = 0u;

		[Token(Token = "0x4000FE4")]
		public const uint NUM_MATCHMAKE_SESSION_ATTRIBUTES = 6u;

		[Token(Token = "0x4000FE5")]
		public const uint MATCHMAKE_SESSION_NEAREST_NEIGHBOR_ATTRIBUTE_INDEX = 1u;

		[Token(Token = "0x4000FE6")]
		public const uint MATCHMAKE_SESSION_BROADEN_RANGE_ATTRIBUTE_INDEX = 1u;

		[Token(Token = "0x4000FE7")]
		public const ulong INVALID_PERSISTENT_GATHERING_CODE = 0uL;

		[Token(Token = "0x4000FE8")]
		public const uint PERSISTENT_GATHERING_CREATION_MAX = 4u;

		[Token(Token = "0x4000FE9")]
		public const uint PERSISTENT_GATHERING_PARTICIPATION_MAX = 16u;

		[Token(Token = "0x4000FEA")]
		public const ulong PERSISTENT_GATHERING_CHAT_PARTICIPANTS_MAX = 32uL;

		[Token(Token = "0x4000FEB")]
		public const uint SETATTIBUTE_VECTOR_SIZE_MAX = 100u;

		[Token(Token = "0x4000FEC")]
		public const byte MAX_PROGRESS_SCORE = 100;

		[Token(Token = "0x4000FED")]
		public const uint UPDATE_PROGRESS_SCORE_MINIMUM_INTERVAL_TIME = 30u;

		[Token(Token = "0x4000FEE")]
		public const uint MAX_MATCHMAKE_SESSION_USER_PASSWORD_LENGTH = 32u;

		[Token(Token = "0x4000FEF")]
		public const uint MATCHMAKE_SESSION_SYSTEM_PASSWORD_LENGTH = 16u;

		[Token(Token = "0x4000FF0")]
		public const uint MAX_MATCHMAKE_BROWSE_SIZE = 100u;

		[Token(Token = "0x4000FF1")]
		public const uint MAX_PRINCIPALID_SIZE_TO_FIND_MATCHMAKE_SESSION = 300u;

		[Token(Token = "0x4000FF2")]
		public const uint MAX_MATCHMAKE_BROWSE_SIZE_BY_PARTICIPANT = 300u;

		[Token(Token = "0x4000FF3")]
		public const uint MAX_MATCHMAKE_SESSION_BY_PARTICIPANT = 1000u;

		[Token(Token = "0x4000FF4")]
		public const uint MAX_EXTRA_PARTICIPANTS = 4u;

		[Token(Token = "0x4000FF5")]
		public const uint MAX_P2P_SIGNATURE_KEY_LEN = 32u;

		[Token(Token = "0x4000FF6")]
		public const ulong RESULTRANGE_ANY_OFFSET = 4294967295uL;

		[Token(Token = "0x4000FF7")]
		public const uint MATCHMAKE_STRING_MAX_LENGTH = 256u;

		[Token(Token = "0x4000FF8")]
		public const uint MATCHMAKE_BUFFER_MAX_LENGTH = 512u;
	}
	[Token(Token = "0x200023A")]
	public class VSocket
	{
		[Token(Token = "0x200023B")]
		public enum Result
		{
			[Token(Token = "0x4001041")]
			Success,
			[Token(Token = "0x4001042")]
			Error,
			[Token(Token = "0x4001043")]
			WouldBlock,
			[Token(Token = "0x4001044")]
			PacketBufferFull
		}

		[Token(Token = "0x400103C")]
		public const uint MAX_DATA_SIZE = 1250u;

		[Token(Token = "0x400103D")]
		public const uint MARGIN_SIZE = 12u;

		[Token(Token = "0x400103E")]
		public const uint DEFAULT_MAX_RECV_PACKTES = 128u;

		[Token(Token = "0x400103F")]
		public const uint TOTAL_NAT_TRAVERSAL_TIMEOUT_MS = 120000u;

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x261183C", Offset = "0x261183C", VA = "0x261183C")]
		public VSocket()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class StationURL
	{
		[Token(Token = "0x200023D")]
		public enum URLType
		{
			[Token(Token = "0x4001046")]
			unknown,
			[Token(Token = "0x4001047")]
			prudp,
			[Token(Token = "0x4001048")]
			prudps,
			[Token(Token = "0x4001049")]
			udp
		}

		[Token(Token = "0x200023E")]
		public enum Flags
		{
			[Token(Token = "0x400104B")]
			BehindNAT = 1,
			[Token(Token = "0x400104C")]
			Public = 2,
			[Token(Token = "0x400104D")]
			DetectedByNatCheck = 4,
			[Token(Token = "0x400104E")]
			DetectedByNgs = 8
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x2647D4C", Offset = "0x2647D4C", VA = "0x2647D4C")]
		public StationURL()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class SmartDeviceVoiceChat
	{
		[Token(Token = "0x2000240")]
		public enum ShowAppResultStatus
		{
			[Token(Token = "0x4001053")]
			SHOW_APP_RESULT_STATUS_ERROR,
			[Token(Token = "0x4001054")]
			SHOW_APP_RESULT_STATUS_CANCELED
		}

		[Token(Token = "0x400104F")]
		public const uint DEFAULT_CHANNELID = 0u;

		[Token(Token = "0x4001050")]
		public const uint DEFAULT_HTTP_THREAD_PRIORITY = 16u;

		[Token(Token = "0x4001051")]
		public const uint INVALID_ROOMID = 0u;

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x26476EC", Offset = "0x26476EC", VA = "0x26476EC")]
		public SmartDeviceVoiceChat()
		{
		}
	}
}
namespace NexPlugin.SmartDeviceVoiceChatErrorCode
{
	[Token(Token = "0x2000241")]
	public enum ErrorCode
	{
		[Token(Token = "0x4001056")]
		Unknown = 1,
		[Token(Token = "0x4001057")]
		InvalidArgument,
		[Token(Token = "0x4001058")]
		InvalidResponse,
		[Token(Token = "0x4001059")]
		InvalidAccessToken,
		[Token(Token = "0x400105A")]
		Unauthorized,
		[Token(Token = "0x400105B")]
		AccessError,
		[Token(Token = "0x400105C")]
		UserNotFound,
		[Token(Token = "0x400105D")]
		RoomNotFound,
		[Token(Token = "0x400105E")]
		RoomNotActivated,
		[Token(Token = "0x400105F")]
		ApplicationNotSupported,
		[Token(Token = "0x4001060")]
		InternalServerError,
		[Token(Token = "0x4001061")]
		ServiceUnavailable,
		[Token(Token = "0x4001062")]
		UnexpectedError,
		[Token(Token = "0x4001063")]
		UnderMaintenance,
		[Token(Token = "0x4001064")]
		ServiceNoLongerAvailable,
		[Token(Token = "0x4001065")]
		AccountTemporarilyDisabled,
		[Token(Token = "0x4001066")]
		PermissionDenied,
		[Token(Token = "0x4001067")]
		NetworkServiceLicenseRequired,
		[Token(Token = "0x4001068")]
		AccountLibraryError,
		[Token(Token = "0x4001069")]
		GameModeNotFound
	}
}
namespace NexPlugin.Ranking2ErrorCode
{
	[Token(Token = "0x2000242")]
	public enum ErrorCode
	{
		[Token(Token = "0x400106B")]
		Unknown = 1,
		[Token(Token = "0x400106C")]
		InvalidArgument,
		[Token(Token = "0x400106D")]
		InvalidScore
	}
}
namespace NexPlugin.SubscriberErrorCode
{
	[Token(Token = "0x2000243")]
	public enum ErrorCode
	{
		[Token(Token = "0x400106F")]
		Unknown = 1,
		[Token(Token = "0x4001070")]
		InvalidArgument,
		[Token(Token = "0x4001071")]
		OverLimit,
		[Token(Token = "0x4001072")]
		PermissionDenied
	}
}
namespace NexPlugin.DataStoreErrorCode
{
	[Token(Token = "0x2000244")]
	public enum ErrorCode
	{
		[Token(Token = "0x4001074")]
		Unknown = 1,
		[Token(Token = "0x4001075")]
		InvalidArgument,
		[Token(Token = "0x4001076")]
		PermissionDenied,
		[Token(Token = "0x4001077")]
		NotFound,
		[Token(Token = "0x4001078")]
		AlreadyLocked,
		[Token(Token = "0x4001079")]
		UnderReviewing,
		[Token(Token = "0x400107A")]
		Expired,
		[Token(Token = "0x400107B")]
		InvalidCheckToken,
		[Token(Token = "0x400107C")]
		SystemFileError,
		[Token(Token = "0x400107D")]
		OverCapacity,
		[Token(Token = "0x400107E")]
		OperationNotAllowed,
		[Token(Token = "0x400107F")]
		InvalidPassword,
		[Token(Token = "0x4001080")]
		ValueNotEqual
	}
}
namespace NexPlugin.AuthenticationErrorCode
{
	[Token(Token = "0x2000245")]
	public enum ErrorCode
	{
		[Token(Token = "0x4001082")]
		NASAuthenticateError = 1,
		[Token(Token = "0x4001083")]
		TokenParseError,
		[Token(Token = "0x4001084")]
		HttpConnectionError,
		[Token(Token = "0x4001085")]
		HttpDNSError,
		[Token(Token = "0x4001086")]
		HttpGetProxySetting,
		[Token(Token = "0x4001087")]
		TokenExpired,
		[Token(Token = "0x4001088")]
		ValidationFailed,
		[Token(Token = "0x4001089")]
		InvalidParam,
		[Token(Token = "0x400108A")]
		PrincipalIdUnmatched,
		[Token(Token = "0x400108B")]
		MoveCountUnmatch,
		[Token(Token = "0x400108C")]
		UnderMaintenance,
		[Token(Token = "0x400108D")]
		UnsupportedVersion,
		[Token(Token = "0x400108E")]
		ServerVersionIsOld,
		[Token(Token = "0x400108F")]
		Unknown,
		[Token(Token = "0x4001090")]
		ClientVersionIsOld,
		[Token(Token = "0x4001091")]
		AccountLibraryError,
		[Token(Token = "0x4001092")]
		ServiceNoLongerAvailable,
		[Token(Token = "0x4001093")]
		UnknownApplication,
		[Token(Token = "0x4001094")]
		ApplicationVersionIsOld,
		[Token(Token = "0x4001095")]
		OutOfService,
		[Token(Token = "0x4001096")]
		NetworkServiceLicenseRequired,
		[Token(Token = "0x4001097")]
		NetworkServiceLicenseSystemError,
		[Token(Token = "0x4001098")]
		NetworkServiceLicenseError3,
		[Token(Token = "0x4001099")]
		NetworkServiceLicenseError4
	}
}
namespace NexPlugin.RankingErrorCode
{
	[Token(Token = "0x2000246")]
	public enum ErrorCode
	{
		[Token(Token = "0x400109B")]
		NotInitialized = 1,
		[Token(Token = "0x400109C")]
		InvalidArgument = 2,
		[Token(Token = "0x400109D")]
		RegistrationError = 3,
		[Token(Token = "0x400109E")]
		NotFound = 5,
		[Token(Token = "0x400109F")]
		InvalidScore = 6,
		[Token(Token = "0x40010A0")]
		InvalidDataSize = 7,
		[Token(Token = "0x40010A1")]
		PermissionDenied = 9,
		[Token(Token = "0x40010A2")]
		Unknown = 10,
		[Token(Token = "0x40010A3")]
		NotImplemented = 11
	}
}
namespace NexPlugin.TransportErrorCode
{
	[Token(Token = "0x2000247")]
	public enum ErrorCode
	{
		[Token(Token = "0x40010A5")]
		Unknown = 1,
		[Token(Token = "0x40010A6")]
		ConnectionFailure = 2,
		[Token(Token = "0x40010A7")]
		InvalidUrl = 3,
		[Token(Token = "0x40010A8")]
		InvalidKey = 4,
		[Token(Token = "0x40010A9")]
		InvalidURLType = 5,
		[Token(Token = "0x40010AA")]
		DuplicateEndpoint = 6,
		[Token(Token = "0x40010AB")]
		IOError = 7,
		[Token(Token = "0x40010AC")]
		Timeout = 8,
		[Token(Token = "0x40010AD")]
		ConnectionReset = 9,
		[Token(Token = "0x40010AE")]
		IncorrectRemoteAuthentication = 10,
		[Token(Token = "0x40010AF")]
		ServerRequestError = 11,
		[Token(Token = "0x40010B0")]
		DecompressionFailure = 12,
		[Token(Token = "0x40010B1")]
		ReliableSendBufferFullFatal = 13,
		[Token(Token = "0x40010B2")]
		UPnPCannotInit = 14,
		[Token(Token = "0x40010B3")]
		UPnPCannotAddMapping = 15,
		[Token(Token = "0x40010B4")]
		NatPMPCannotInit = 16,
		[Token(Token = "0x40010B5")]
		NatPMPCannotAddMapping = 17,
		[Token(Token = "0x40010B6")]
		UnsupportedNAT = 19,
		[Token(Token = "0x40010B7")]
		DnsError = 20,
		[Token(Token = "0x40010B8")]
		ProxyError = 21,
		[Token(Token = "0x40010B9")]
		DataRemaining = 22,
		[Token(Token = "0x40010BA")]
		NoBuffer = 23,
		[Token(Token = "0x40010BB")]
		NotFound = 24,
		[Token(Token = "0x40010BC")]
		TemporaryServerError = 25,
		[Token(Token = "0x40010BD")]
		PermanentServerError = 26,
		[Token(Token = "0x40010BE")]
		ServiceUnavailable = 27,
		[Token(Token = "0x40010BF")]
		ReliableSendBufferFull = 28,
		[Token(Token = "0x40010C0")]
		InvalidStation = 29,
		[Token(Token = "0x40010C1")]
		InvalidSubStreamID = 30,
		[Token(Token = "0x40010C2")]
		PacketBufferFull = 31,
		[Token(Token = "0x40010C3")]
		NatTraversalError = 32,
		[Token(Token = "0x40010C4")]
		NatCheckError = 33
	}
}
namespace NexPlugin.PythonCoreErrorCode
{
	[Token(Token = "0x2000248")]
	public enum ErrorCode
	{
		[Token(Token = "0x40010C6")]
		Exception = 1,
		[Token(Token = "0x40010C7")]
		TypeError,
		[Token(Token = "0x40010C8")]
		IndexError,
		[Token(Token = "0x40010C9")]
		InvalidReference,
		[Token(Token = "0x40010CA")]
		CallFailure,
		[Token(Token = "0x40010CB")]
		MemoryError,
		[Token(Token = "0x40010CC")]
		KeyError,
		[Token(Token = "0x40010CD")]
		OperationError,
		[Token(Token = "0x40010CE")]
		ConversionError,
		[Token(Token = "0x40010CF")]
		ValidationError
	}
}
namespace NexPlugin.RendezVousErrorCode
{
	[Token(Token = "0x2000249")]
	public enum ErrorCode
	{
		[Token(Token = "0x40010D1")]
		ConnectionFailure = 1,
		[Token(Token = "0x40010D2")]
		NotAuthenticated = 2,
		[Token(Token = "0x40010D3")]
		InvalidUsername = 100,
		[Token(Token = "0x40010D4")]
		InvalidPassword = 101,
		[Token(Token = "0x40010D5")]
		UsernameAlreadyExists = 102,
		[Token(Token = "0x40010D6")]
		AccountDisabled = 103,
		[Token(Token = "0x40010D7")]
		AccountExpired = 104,
		[Token(Token = "0x40010D8")]
		ConcurrentLoginDenied = 105,
		[Token(Token = "0x40010D9")]
		EncryptionFailure = 106,
		[Token(Token = "0x40010DA")]
		InvalidPID = 107,
		[Token(Token = "0x40010DB")]
		MaxConnectionsReached = 108,
		[Token(Token = "0x40010DC")]
		InvalidGID = 109,
		[Token(Token = "0x40010DD")]
		InvalidControlScriptID = 110,
		[Token(Token = "0x40010DE")]
		InvalidOperationInLiveEnvironment = 111,
		[Token(Token = "0x40010DF")]
		DuplicateEntry = 112,
		[Token(Token = "0x40010E0")]
		ControlScriptFailure = 113,
		[Token(Token = "0x40010E1")]
		ClassNotFound = 114,
		[Token(Token = "0x40010E2")]
		SessionVoid = 115,
		[Token(Token = "0x40010E3")]
		DDLMismatch = 117,
		[Token(Token = "0x40010E4")]
		InvalidConfiguration = 118,
		[Token(Token = "0x40010E5")]
		SessionFull = 200,
		[Token(Token = "0x40010E6")]
		InvalidGatheringPassword = 201,
		[Token(Token = "0x40010E7")]
		WithoutParticipationPeriod = 202,
		[Token(Token = "0x40010E8")]
		PersistentGatheringCreationMax = 203,
		[Token(Token = "0x40010E9")]
		PersistentGatheringParticipationMax = 204,
		[Token(Token = "0x40010EA")]
		DeniedByParticipants = 205,
		[Token(Token = "0x40010EB")]
		ParticipantInBlockList = 206,
		[Token(Token = "0x40010EC")]
		GameServerMaintenance = 207,
		[Token(Token = "0x40010ED")]
		OutOfRatingRange = 209,
		[Token(Token = "0x40010EE")]
		ConnectionDisconnected = 210,
		[Token(Token = "0x40010EF")]
		InvalidOperation = 211,
		[Token(Token = "0x40010F0")]
		NotParticipatedGathering = 212,
		[Token(Token = "0x40010F1")]
		MatchmakeSessionUserPasswordUnmatch = 213,
		[Token(Token = "0x40010F2")]
		MatchmakeSessionSystemPasswordUnmatch = 214,
		[Token(Token = "0x40010F3")]
		UserIsOffline = 215,
		[Token(Token = "0x40010F4")]
		AlreadyParticipatedGathering = 216,
		[Token(Token = "0x40010F5")]
		PermissionDenied = 217,
		[Token(Token = "0x40010F6")]
		NotFriend = 218,
		[Token(Token = "0x40010F7")]
		SessionClosed = 219,
		[Token(Token = "0x40010F8")]
		DatabaseTemporarilyUnavailable = 220,
		[Token(Token = "0x40010F9")]
		InvalidUniqueId = 221,
		[Token(Token = "0x40010FA")]
		MatchmakingWithdrawn = 222,
		[Token(Token = "0x40010FB")]
		LimitExceeded = 223,
		[Token(Token = "0x40010FC")]
		AccountTemporarilyDisabled = 224,
		[Token(Token = "0x40010FD")]
		PartiallyServiceClosed = 225,
		[Token(Token = "0x40010FE")]
		ConnectionDisconnectedForConcurrentLogin = 226
	}
}
namespace NexPlugin.CoreErrorCode
{
	[Token(Token = "0x200024A")]
	public enum ErrorCode
	{
		[Token(Token = "0x4001100")]
		Unknown = 1,
		[Token(Token = "0x4001101")]
		NotImplemented = 2,
		[Token(Token = "0x4001102")]
		InvalidPointer = 3,
		[Token(Token = "0x4001103")]
		OperationAborted = 4,
		[Token(Token = "0x4001104")]
		Exception = 5,
		[Token(Token = "0x4001105")]
		AccessDenied = 6,
		[Token(Token = "0x4001106")]
		InvalidIndex = 8,
		[Token(Token = "0x4001107")]
		OutOfMemory = 9,
		[Token(Token = "0x4001108")]
		InvalidArgument = 10,
		[Token(Token = "0x4001109")]
		Timeout = 11,
		[Token(Token = "0x400110A")]
		InitializationFailure = 12,
		[Token(Token = "0x400110B")]
		CallInitiationFailure = 13,
		[Token(Token = "0x400110C")]
		RegistrationError = 14,
		[Token(Token = "0x400110D")]
		BufferOverflow = 15,
		[Token(Token = "0x400110E")]
		InvalidLockState = 16,
		[Token(Token = "0x400110F")]
		InvalidSequence = 17,
		[Token(Token = "0x4001110")]
		SystemError = 18,
		[Token(Token = "0x4001111")]
		Cancelled = 19
	}
}
namespace NexPlugin.qResultFacility
{
	[Token(Token = "0x200024B")]
	public enum Facilities
	{
		[Token(Token = "0x4001113")]
		Core = 1,
		[Token(Token = "0x4001114")]
		RendezVous = 3,
		[Token(Token = "0x4001115")]
		PythonCore = 4,
		[Token(Token = "0x4001116")]
		Transport = 5,
		[Token(Token = "0x4001117")]
		Ranking = 103,
		[Token(Token = "0x4001118")]
		Authentication = 104,
		[Token(Token = "0x4001119")]
		DataStore = 105,
		[Token(Token = "0x400111A")]
		Subscriber = 112,
		[Token(Token = "0x400111B")]
		Ranking2 = 113,
		[Token(Token = "0x400111C")]
		SmartDeviceVoiceChat = 114
	}
}
namespace Shaders.LightSwitch
{
	[Token(Token = "0x200024C")]
	[ExecuteInEditMode]
	public class LightSwitcher : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200024D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDFF24", Offset = "0xCDFF24")]
		private struct <InvokeMaterialUpdate>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LightSwitcher <>4__this;

			[Token(Token = "0x4001129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask<float>.Awaiter <>u__1;

			[Token(Token = "0x6001149")]
			[Address(RVA = "0x265B188", Offset = "0x265B188", VA = "0x265B188", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600114A")]
			[Address(RVA = "0x265B6D4", Offset = "0x265B6D4", VA = "0x265B6D4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Light targetLight;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE975C", Offset = "0xCE975C")]
		private float fade;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer[] targetRenderer;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock[] _targetMaterialPropertyBlocks;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CancellationTokenSource _materialUpdateCts;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector4 _targetLightPos;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color _targetLightColor;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ModLightColor;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int ModLightPos;

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x26F7108", Offset = "0x26F7108", VA = "0x26F7108")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCF035C", Offset = "0xCF035C")]
		private void GetChildRenderers()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x26F71CC", Offset = "0x26F71CC", VA = "0x26F71CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x26F7200", Offset = "0x26F7200", VA = "0x26F7200")]
		private void GetTargetLight()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x26F760C", Offset = "0x26F760C", VA = "0x26F760C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x26F74AC", Offset = "0x26F74AC", VA = "0x26F74AC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xCF0394", Offset = "0xCF0394")]
		private UniTask InvokeMaterialUpdate()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x26F7370", Offset = "0x26F7370", VA = "0x26F7370")]
		private void GetMaterialPropertyBlocks()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x26F7648", Offset = "0x26F7648", VA = "0x26F7648")]
		private void ApplyMaterialProperty(float applyLevel)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x26F77EC", Offset = "0x26F77EC", VA = "0x26F77EC")]
		public LightSwitcher()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x26F7908", Offset = "0x26F7908", VA = "0x26F7908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF03F4", Offset = "0xCF03F4")]
		private float <InvokeMaterialUpdate>b__13_0(LightSwitcher x)
		{
			return default(float);
		}
	}
}
namespace Shaders.k2.DropShadow
{
	[Token(Token = "0x200024E")]
	[ExecuteInEditMode]
	public class DropShadowUpdateInvoker : MonoBehaviour
	{
		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem _particleSystem;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform targetTransform;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<ParticleCollisionEvent> _particleCollisionEvent;

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x26CCCF8", Offset = "0x26CCCF8", VA = "0x26CCCF8")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x26CCE8C", Offset = "0x26CCE8C", VA = "0x26CCE8C")]
		public DropShadowUpdateInvoker()
		{
		}
	}
}
namespace APP.Scripts.Scene
{
	[Token(Token = "0x200024F")]
	public class RendererViewSwitcher : MonoBehaviour
	{
		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string cullName;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Renderer> targetRenderers;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isViewIndoor;

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x2692BC4", Offset = "0x2692BC4", VA = "0x2692BC4")]
		public void SetRender(bool flg)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x2692CE0", Offset = "0x2692CE0", VA = "0x2692CE0")]
		public RendererViewSwitcher()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class SceneAreaDetector : MonoBehaviour
	{
		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool nowInDoor;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Bounds indoorArea;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform targetTransform;

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x269F11C", Offset = "0x269F11C", VA = "0x269F11C")]
		public SceneAreaDetector()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public enum SceneState
	{
		[Token(Token = "0x4001134")]
		Title,
		[Token(Token = "0x4001135")]
		Room,
		[Token(Token = "0x4001136")]
		Dive
	}
}
namespace APP.Scripts.Animations
{
	[Token(Token = "0x2000252")]
	public class HandAnimationController : MonoBehaviour
	{
		[Token(Token = "0x2000253")]
		private enum HandAnimState
		{
			[Token(Token = "0x4001140")]
			Point,
			[Token(Token = "0x4001141")]
			Grab,
			[Token(Token = "0x4001142")]
			Idle,
			[Token(Token = "0x4001143")]
			Pinch
		}

		[StructLayout(3)]
		[Token(Token = "0x2000254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDFF44", Offset = "0xCDFF44")]
		private struct <InvokeHandAnimationUpdate>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4001144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandAnimationController <>4__this;

			[Token(Token = "0x4001148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6001155")]
			[Address(RVA = "0x2739E04", Offset = "0x2739E04", VA = "0x2739E04", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001156")]
			[Address(RVA = "0x273A2AC", Offset = "0x273A2AC", VA = "0x273A2AC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator targetAnimator;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool isRightHand;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private cInputMgr _inputManager;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HandAnimState _currentHandAnimState;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Point;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Grab;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int Idle;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int Pinch;

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x2751424", Offset = "0x2751424", VA = "0x2751424")]
		private void Start()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x275149C", Offset = "0x275149C", VA = "0x275149C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xCF0414", Offset = "0xCF0414")]
		private UniTask InvokeHandAnimationUpdate(CancellationToken cancellationToken)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x275160C", Offset = "0x275160C", VA = "0x275160C")]
		private void UpdateHandAnimationTrigger()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x27517DC", Offset = "0x27517DC", VA = "0x27517DC")]
		public HandAnimationController()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class HumanPoseMirror : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000256")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDFF54", Offset = "0xCDFF54")]
		private struct <InvokeHumanMusclesUpdate>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HumanPoseMirror <>4__this;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x600115A")]
			[Address(RVA = "0x273B5EC", Offset = "0x273B5EC", VA = "0x273B5EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600115B")]
			[Address(RVA = "0x273BAC4", Offset = "0x273BAC4", VA = "0x273BAC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator baseAnimatior;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator targetAnimatior;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HumanPose _baseHumanPose;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HumanPose _targetHumanPose;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HumanPoseHandler _handler;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HumanPoseHandler _targetHandler;

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x27549BC", Offset = "0x27549BC", VA = "0x27549BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x2754AD0", Offset = "0x2754AD0", VA = "0x2754AD0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xCF0484", Offset = "0xCF0484")]
		private UniTask InvokeHumanMusclesUpdate(CancellationToken cancellationToken)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x2754C40", Offset = "0x2754C40", VA = "0x2754C40")]
		public HumanPoseMirror()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public sealed class SkinnedMeshLodSetter : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDFF64", Offset = "0xCDFF64")]
		private struct <InvokeSkinBornLodUpdateLoop>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkinnedMeshRenderer targetMesh;

			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x400115B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform cameraTransform;

			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform ownTransform;

			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SkinQuality <nowBornLevel>5__2;

			[Token(Token = "0x400115E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x600115F")]
			[Address(RVA = "0x26629F4", Offset = "0x26629F4", VA = "0x26629F4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001160")]
			[Address(RVA = "0x2662FA0", Offset = "0x2662FA0", VA = "0x2662FA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer targetSkinnedMesh;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _mainCameraTransform;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _ownTransform;

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x2647438", Offset = "0x2647438", VA = "0x2647438")]
		private void Start()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x2647548", Offset = "0x2647548", VA = "0x2647548")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xCF04F4", Offset = "0xCF04F4")]
		private static UniTaskVoid InvokeSkinBornLodUpdateLoop(Transform cameraTransform, SkinnedMeshRenderer targetMesh, Transform ownTransform, CancellationToken cancellationToken)
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x26475EC", Offset = "0x26475EC", VA = "0x26475EC")]
		public SkinnedMeshLodSetter()
		{
		}
	}
}
namespace Common.Players
{
	[Token(Token = "0x2000259")]
	public class PhotonChildTransformView : MonoBehaviour, IPunObservable
	{
		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> targets;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhotonView photonView;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<PhotonTransformObject> _photonTransformObjects;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _haveCalledCallback;

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x2669A38", Offset = "0x2669A38", VA = "0x2669A38")]
		public void CallUpdate()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x2669D34", Offset = "0x2669D34", VA = "0x2669D34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x2669F38", Offset = "0x2669F38", VA = "0x2669F38")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x2669F40", Offset = "0x2669F40", VA = "0x2669F40")]
		public bool IsMine()
		{
			return default(bool);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x2669F5C", Offset = "0x2669F5C", VA = "0x2669F5C")]
		public void CopyOVR()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x2669A3C", Offset = "0x2669A3C", VA = "0x2669A3C")]
		private void UpdateTargetsTransform()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x266A44C", Offset = "0x266A44C", VA = "0x266A44C", Slot = "4")]
		private void Photon.Pun.IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x266A4A0", Offset = "0x266A4A0", VA = "0x266A4A0")]
		private void SendTransformToPhoton(in PhotonStream stream)
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x266A74C", Offset = "0x266A74C", VA = "0x266A74C")]
		private void OnReceiveTransformByPhoton(in PhotonStream stream, in PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x266AD10", Offset = "0x266AD10", VA = "0x266AD10")]
		public PhotonChildTransformView()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class PhotonTransformObject
	{
		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Distance;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Angle;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Direction;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 NetworkPosition;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 StoredPosition;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion NetworkRotation;

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x2669F30", Offset = "0x2669F30", VA = "0x2669F30")]
		public PhotonTransformObject()
		{
		}
	}
}
namespace App
{
	[Token(Token = "0x200025B")]
	public class Define
	{
		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string PhotonVer;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string GameVer;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string RoomPass;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string Progress;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string PastMode;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string Lang;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string IsVR;

		[Token(Token = "0x4001170")]
		public const float SwitchScreenY = 720f;

		[Token(Token = "0x4001171")]
		public const float MicChkFirstTime = 30f;

		[Token(Token = "0x4001172")]
		public const float MicChkTime = 180f;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static int Shader_Per;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static int Shader_TimeScale;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int Shader_Light_Per;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static int Shader_Light_Pow;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static int WaterLv;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static int TopColor;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static int BtmColor;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static int Shader_Color;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static int Shader_ZWrite;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static int Shader_CullMode;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static int Shader_CameraDepthClear;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static int Shader_FireAlpha;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static int Shader_FireR;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static int Shader_FireG;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static int Shader_FireB;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static int Shader_K2Alpha;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static int PropLayer;

		[Token(Token = "0x4001184")]
		public const string ScreenShotPath = "/ScreenShot/";

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public static Vector3 OVRCamPos;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static float DarkLightPow;

		[Token(Token = "0x4001187")]
		public const int RecRoom = 0;

		[Token(Token = "0x4001188")]
		public const int RecTips = 10;

		[Token(Token = "0x4001189")]
		public const int RecProloge = 20;

		[Token(Token = "0x400118A")]
		public const int RecDive = 30;

		[Token(Token = "0x400118B")]
		public const int RecDiscattion = 40;

		[Token(Token = "0x400118C")]
		public const int RecVote = 50;

		[Token(Token = "0x400118D")]
		public const int RecEpi = 60;

		[Token(Token = "0x400118E")]
		public const int RecEpiAfter = 70;

		[Token(Token = "0x400118F")]
		public const int IsUnitOK = 10;

		[Token(Token = "0x4001190")]
		public const int IsEnd = 100;

		[Token(Token = "0x4001191")]
		public const int ReqSnapWndID = 101;

		[Token(Token = "0x4001192")]
		public const int DiveWndID = 102;

		[Token(Token = "0x4001193")]
		public const int VoteWndID = 103;

		[Token(Token = "0x4001194")]
		public const int RetrayWndID = 104;

		[Token(Token = "0x4001195")]
		public const int DestroyWndID = 105;

		[Token(Token = "0x4001196")]
		public const int ItemTutPage = 1;

		[Token(Token = "0x4001197")]
		public const int SnapTutPage = 3;

		[Token(Token = "0x4001198")]
		public const float ItemGripLength = 1f;

		[Token(Token = "0x4001199")]
		public const float DisscationTime = 15f;

		[Token(Token = "0x400119A")]
		public const float VoteTime = 5f;

		[Token(Token = "0x400119B")]
		public const float CurMoveTime = 0.2f;

		[Token(Token = "0x400119C")]
		public const float MicVol = 0.01f;

		[Token(Token = "0x400119D")]
		public const float SPIconVol = 0.01f;

		[Token(Token = "0x400119E")]
		public const float MicIconVol = 0.01f;

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x26C6AEC", Offset = "0x26C6AEC", VA = "0x26C6AEC")]
		public Define()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class UIInput
	{
		[Token(Token = "0x400119F")]
		public const uint Input_Mouse = 1u;

		[Token(Token = "0x40011A0")]
		public const uint Input_Left = 2u;

		[Token(Token = "0x40011A1")]
		public const uint Input_Right = 4u;

		[Token(Token = "0x40011A2")]
		public const uint Input_Finger = 8u;

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x2605A7C", Offset = "0x2605A7C", VA = "0x2605A7C")]
		public UIInput()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class CanvasAlpha
	{
		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CanvasGroup TargetGrp;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public cInter Alpha;

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x27124A4", Offset = "0x27124A4", VA = "0x27124A4")]
		public void Show(CanvasGroup target, float t)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x27124D4", Offset = "0x27124D4", VA = "0x27124D4")]
		public void Show(CanvasGroup target, float _from, float t)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x2712504", Offset = "0x2712504", VA = "0x2712504")]
		public void Hide(CanvasGroup target, float t)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x2712534", Offset = "0x2712534", VA = "0x2712534")]
		public bool IsUpdateEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x27125D0", Offset = "0x27125D0", VA = "0x27125D0")]
		public CanvasAlpha()
		{
		}
	}
}
namespace App.SharedAssets.TimeLineEffect.Scripts
{
	[Token(Token = "0x200025E")]
	[ExecuteAlways]
	public class ChangeLightmapForBrightness : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200025F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDFF84", Offset = "0xCDFF84")]
		private sealed class <>c
		{
			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ChangeLightmapForBrightness, float> <>9__2_0;

			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<float> <>9__2_1;

			[Token(Token = "0x6001179")]
			[Address(RVA = "0x271F2C8", Offset = "0x271F2C8", VA = "0x271F2C8")]
			public <>c()
			{
			}

			[Token(Token = "0x600117A")]
			[Address(RVA = "0x271F2D0", Offset = "0x271F2D0", VA = "0x271F2D0")]
			internal float <Start>b__2_0(ChangeLightmapForBrightness x)
			{
				return default(float);
			}

			[Token(Token = "0x600117B")]
			[Address(RVA = "0x271F2E8", Offset = "0x271F2E8", VA = "0x271F2E8")]
			internal void <Start>b__2_1(float x)
			{
			}
		}

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float brightness;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int BlendLightMap;

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x2712DC0", Offset = "0x2712DC0", VA = "0x2712DC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x2712FE4", Offset = "0x2712FE4", VA = "0x2712FE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x2713050", Offset = "0x2713050", VA = "0x2713050")]
		public ChangeLightmapForBrightness()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class ParticleController : MonoBehaviour
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem _particleSystem;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isStopParticle;

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x26697B8", Offset = "0x26697B8", VA = "0x26697B8")]
		private void Reset()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x266980C", Offset = "0x266980C", VA = "0x266980C")]
		private void Start()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x2669968", Offset = "0x2669968", VA = "0x2669968")]
		public ParticleController()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x2669970", Offset = "0x2669970", VA = "0x2669970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF0564", Offset = "0xCF0564")]
		private bool <Start>b__3_0(ParticleController x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x2669978", Offset = "0x2669978", VA = "0x2669978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF0574", Offset = "0xCF0574")]
		private void <Start>b__3_1(bool x)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000261")]
	public enum GraphicPlatformPattern
	{
		[Token(Token = "0x40011AD")]
		Quest,
		[Token(Token = "0x40011AE")]
		PcVr,
		[Token(Token = "0x40011AF")]
		Pc,
		[Token(Token = "0x40011B0")]
		Mobile
	}
	[Serializable]
	[Token(Token = "0x2000262")]
	public struct BindPair
	{
		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Animator animator;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GraphicPlatformPattern platformPattern;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject targetGameObject;

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x2708154", Offset = "0x2708154", VA = "0x2708154")]
		public bool IsVr()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCDFF94", Offset = "0xCDFF94")]
	public class TimeLineTrackBindChanger : MonoBehaviour
	{
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GraphicPlatformPattern manualSetPlatformPattern;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayableDirector director;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BindPair[] bindPairs;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string trackName;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GraphicPlatformPattern _pattern;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BindPair _target;

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x26A79E8", Offset = "0x26A79E8", VA = "0x26A79E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x26A7FE0", Offset = "0x26A7FE0", VA = "0x26A7FE0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x26A8048", Offset = "0x26A8048", VA = "0x26A8048")]
		private void CreateBindPattern()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x26A7B08", Offset = "0x26A7B08", VA = "0x26A7B08")]
		private BindPair? GetTargetBindPairByPlatform(GraphicPlatformPattern pattern)
		{
			return null;
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x26A7BFC", Offset = "0x26A7BFC", VA = "0x26A7BFC")]
		private void SetActiveByTargetPlatform(BindPair[] pair, BindPair target)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x26A8234", Offset = "0x26A8234", VA = "0x26A8234")]
		private GraphicPlatformPattern GetTargetPlatform()
		{
			return default(GraphicPlatformPattern);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x26A7C9C", Offset = "0x26A7C9C", VA = "0x26A7C9C")]
		private void BindAnimatorByTrackName(PlayableAsset assets, Animator target)
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x26A823C", Offset = "0x26A823C", VA = "0x26A823C")]
		public TimeLineTrackBindChanger()
		{
		}
	}
}
namespace App.SharedAssets.TimeLineEffect.EffectAssets.ScreenEffect.Script
{
	[Token(Token = "0x2000264")]
	public class CameraTracker : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000265")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCDFFF4", Offset = "0xCDFFF4")]
		private struct <TransformTrackLoop>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40011BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x40011BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CameraTracker <>4__this;

			[Token(Token = "0x40011C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600118E")]
			[Address(RVA = "0x271ED50", Offset = "0x271ED50", VA = "0x271ED50", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600118F")]
			[Address(RVA = "0x271F25C", Offset = "0x271F25C", VA = "0x271F25C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _target;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _cameraTransform;

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x2712318", Offset = "0x2712318", VA = "0x2712318")]
		private void Start()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x27123E8", Offset = "0x27123E8", VA = "0x27123E8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xCF0584", Offset = "0xCF0584")]
		private UniTaskVoid TransformTrackLoop(CancellationToken token)
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x2712474", Offset = "0x2712474", VA = "0x2712474")]
		private void Reset()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x271249C", Offset = "0x271249C", VA = "0x271249C")]
		public CameraTracker()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class DiveEffectChanger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000267")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE0004", Offset = "0xCE0004")]
		private sealed class <>c
		{
			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<DiveEffectChanger, float> <>9__4_0;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<DiveEffectChanger, float> <>9__4_2;

			[Token(Token = "0x6001197")]
			[Address(RVA = "0x271F6C4", Offset = "0x271F6C4", VA = "0x271F6C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001198")]
			[Address(RVA = "0x271F6CC", Offset = "0x271F6CC", VA = "0x271F6CC")]
			internal float <Start>b__4_0(DiveEffectChanger x)
			{
				return default(float);
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0x271F6E4", Offset = "0x271F6E4", VA = "0x271F6E4")]
			internal float <Start>b__4_2(DiveEffectChanger x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE98EC", Offset = "0xCE98EC")]
		[SerializeField]
		private float diveEffectValue;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE992C", Offset = "0xCE992C")]
		[SerializeField]
		private float diveEffectMean;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int DiveOffset;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Dive;

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x26C8BA0", Offset = "0x26C8BA0", VA = "0x26C8BA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x26C8E7C", Offset = "0x26C8E7C", VA = "0x26C8E7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x26C8F00", Offset = "0x26C8F00", VA = "0x26C8F00")]
		public DiveEffectChanger()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x26C8FA0", Offset = "0x26C8FA0", VA = "0x26C8FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF05F4", Offset = "0xCF05F4")]
		private void <Start>b__4_1(float x)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x26C9010", Offset = "0x26C9010", VA = "0x26C9010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCF0604", Offset = "0xCF0604")]
		private void <Start>b__4_3(float x)
		{
		}
	}
}
namespace App.Timeline.Playables
{
	[Serializable]
	[Token(Token = "0x2000268")]
	public class TlCmdBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x2000269")]
		public enum eTLCmd
		{
			[Token(Token = "0x40011CE")]
			通常音声,
			[Token(Token = "0x40011CF")]
			心の声,
			[Token(Token = "0x40011D0")]
			大きな声,
			[Token(Token = "0x40011D1")]
			指定したアイテムを左手で掴む,
			[Token(Token = "0x40011D2")]
			指定したアイテムを右手で掴む,
			[Token(Token = "0x40011D3")]
			生成して左手で持つ,
			[Token(Token = "0x40011D4")]
			生成して右手で持つ,
			[Token(Token = "0x40011D5")]
			掴んでいるものを放す,
			[Token(Token = "0x40011D6")]
			生成した物を消す,
			[Token(Token = "0x40011D7")]
			自分だけ照明を消す,
			[Token(Token = "0x40011D8")]
			近くのドアを開ける,
			[Token(Token = "0x40011D9")]
			助手をグールに,
			[Token(Token = "0x40011DA")]
			富豪の首,
			[Token(Token = "0x40011DB")]
			小さな声,
			[Token(Token = "0x40011DC")]
			BGMフェード再生,
			[Token(Token = "0x40011DD")]
			BGMフェード停止,
			[Token(Token = "0x40011DE")]
			カバンを開ける,
			[Token(Token = "0x40011DF")]
			梯子をかける,
			[Token(Token = "0x40011E0")]
			ジャンプする,
			[Token(Token = "0x40011E1")]
			水位変更,
			[Token(Token = "0x40011E2")]
			上向き制限調整,
			[Token(Token = "0x40011E3")]
			視点マージ,
			[Token(Token = "0x40011E4")]
			炎演出開始,
			[Token(Token = "0x40011E5")]
			思惑を出す,
			[Token(Token = "0x40011E6")]
			声,
			[Token(Token = "0x40011E7")]
			過去改変機能,
			[Token(Token = "0x40011E8")]
			移動ルートを進む
		}

		[NonSerialized]
		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimelineData Parent;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ShowTime;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public eTLCmd Cmd;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Param0;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Param1;

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x26B9604", Offset = "0x26B9604", VA = "0x26B9604", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x26B96DC", Offset = "0x26B96DC", VA = "0x26B96DC")]
		public TlCmdBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026A")]
	public class TlCmdClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TlCmdBehaviour CmdData;

		[Token(Token = "0x17000184")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x26B96E4", Offset = "0x26B96E4", VA = "0x26B96E4", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x26B96EC", Offset = "0x26B96EC", VA = "0x26B96EC", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x26B97A0", Offset = "0x26B97A0", VA = "0x26B97A0")]
		public TlCmdClip()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class TlCmdMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x600119F")]
		[Address(RVA = "0x26B980C", Offset = "0x26B980C", VA = "0x26B980C")]
		public TlCmdMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xCE0014", Offset = "0xCE0014")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xCE0014", Offset = "0xCE0014")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xCE0014", Offset = "0xCE0014")]
	public class TlCmdTrack : TrackAsset
	{
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x26B9814", Offset = "0x26B9814", VA = "0x26B9814")]
		public TlCmdTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	public class TransformParentBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parent;

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x26B9878", Offset = "0x26B9878", VA = "0x26B9878")]
		public TransformParentBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026E")]
	public class TransformParentClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<Transform> parent;

		[Token(Token = "0x17000185")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x26B9880", Offset = "0x26B9880", VA = "0x26B9880", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x26B9888", Offset = "0x26B9888", VA = "0x26B9888", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x26B99B8", Offset = "0x26B99B8", VA = "0x26B99B8")]
		public TransformParentClip()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class TransformParentMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform trackBinding;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _bindingParent;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _previewTransform;

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x26B99C0", Offset = "0x26B99C0", VA = "0x26B99C0", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x26B9A80", Offset = "0x26B9A80", VA = "0x26B9A80", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x26B9AA4", Offset = "0x26B9AA4", VA = "0x26B9AA4", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x26B9CC8", Offset = "0x26B9CC8", VA = "0x26B9CC8")]
		public TransformParentMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xCE00D0", Offset = "0xCE00D0")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xCE00D0", Offset = "0xCE00D0")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xCE00D0", Offset = "0xCE00D0")]
	public class TransformParentTrack : TrackAsset
	{
		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x26B9CD0", Offset = "0x26B9CD0", VA = "0x26B9CD0", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x26B9E50", Offset = "0x26B9E50", VA = "0x26B9E50")]
		public TransformParentTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000271")]
	public class TransformTweenBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x2000272")]
		public enum TweenType
		{
			[Token(Token = "0x40011FD")]
			Linear,
			[Token(Token = "0x40011FE")]
			Deceleration,
			[Token(Token = "0x40011FF")]
			Harmonic,
			[Token(Token = "0x4001200")]
			Custom
		}

		[NonSerialized]
		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimelineData Parent;

		[Token(Token = "0x40011F0")]
		private const float RightAngleInRads = (float)Math.PI / 2f;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startLocation;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform endLocation;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool tweenPosition;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool tweenRotation;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TweenType tweenType;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve customCurve;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 startingPosition;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion startingRotation;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AnimationCurve _linearCurve;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AnimationCurve _decelerationCurve;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AnimationCurve _harmonicCurve;

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x26B9EB4", Offset = "0x26B9EB4", VA = "0x26B9EB4", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x26B9F58", Offset = "0x26B9F58", VA = "0x26B9F58", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x26BA0B8", Offset = "0x26BA0B8", VA = "0x26BA0B8", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x26BA210", Offset = "0x26BA210", VA = "0x26BA210")]
		public float EvaluateCurrentCurve(float time)
		{
			return default(float);
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x26BA2B0", Offset = "0x26BA2B0", VA = "0x26BA2B0")]
		private bool IsCustomCurveNormalised()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x26BA42C", Offset = "0x26BA42C", VA = "0x26BA42C")]
		public TransformTweenBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000273")]
	public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TransformTweenBehaviour template;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExposedReference<Transform> startLocation;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExposedReference<Transform> endLocation;

		[NonSerialized]
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double clipDuration;

		[NonSerialized]
		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double speed;

		[NonSerialized]
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public double distance;

		[Token(Token = "0x17000186")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x26BA604", Offset = "0x26BA604", VA = "0x26BA604", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x26BA60C", Offset = "0x26BA60C", VA = "0x26BA60C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x26BA768", Offset = "0x26BA768", VA = "0x26BA768")]
		public TransformTweenClip()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class TransformTweenMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _firstFrameHappened;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _trackBinding;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPosition;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int inputCount;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float positionTotalWeight;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationTotalWeight;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 blendedPosition;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 blendedEndPosition;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion blendedRotation;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<ScriptPlayable<TransformTweenBehaviour>> playableInput;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<TransformTweenBehaviour> _Inputs;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float inputWeight;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float normalisedTime;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float tweenProgress;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion desiredRotation;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion weightedDefaultRotation;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool _isInitialized;

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x26BA7C8", Offset = "0x26BA7C8", VA = "0x26BA7C8", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x26BB17C", Offset = "0x26BB17C", VA = "0x26BB17C", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x26BB168", Offset = "0x26BB168", VA = "0x26BB168")]
		private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x26BB154", Offset = "0x26BB154", VA = "0x26BB154")]
		private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x26BB184", Offset = "0x26BB184", VA = "0x26BB184")]
		private static float QuaternionMagnitude(Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x26BB0C8", Offset = "0x26BB0C8", VA = "0x26BB0C8")]
		private static Quaternion NormalizeQuaternion(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x26BB1C4", Offset = "0x26BB1C4", VA = "0x26BB1C4")]
		public TransformTweenMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xCE0188", Offset = "0xCE0188")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xCE0188", Offset = "0xCE0188")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xCE0188", Offset = "0xCE0188")]
	public class TransformTweenTrack : TrackAsset
	{
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x2603AA0", Offset = "0x2603AA0", VA = "0x2603AA0", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x2603B4C", Offset = "0x2603B4C", VA = "0x2603B4C", Slot = "32")]
		protected override Playable CreatePlayable(PlayableGraph graph, GameObject gameObject, TimelineClip clip)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x2603EB8", Offset = "0x2603EB8", VA = "0x2603EB8", Slot = "29")]
		public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x2603EC0", Offset = "0x2603EC0", VA = "0x2603EC0")]
		public TransformTweenTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000276")]
	public class TweenLookAtBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x2000277")]
		public enum LookType
		{
			[Token(Token = "0x400121F")]
			LeftForward,
			[Token(Token = "0x4001220")]
			Forward,
			[Token(Token = "0x4001221")]
			RightForward,
			[Token(Token = "0x4001222")]
			Left,
			[Token(Token = "0x4001223")]
			Right,
			[Token(Token = "0x4001224")]
			LeftBackward,
			[Token(Token = "0x4001225")]
			Backward,
			[Token(Token = "0x4001226")]
			RightBackward
		}

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LookType startLookAt;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LookType endLookAt;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startRotation;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 endRotation;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion startingRotation;

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x26042F8", Offset = "0x26042F8", VA = "0x26042F8", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x26044AC", Offset = "0x26044AC", VA = "0x26044AC")]
		public float EvaluateCurrentCurve(float time)
		{
			return default(float);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x2604358", Offset = "0x2604358", VA = "0x2604358")]
		private Vector3 GetLookAtDirection(LookType l)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x26044F0", Offset = "0x26044F0", VA = "0x26044F0")]
		public TweenLookAtBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000278")]
	public class TweenLookAtClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TweenLookAtBehaviour template;

		[Token(Token = "0x17000187")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x2604524", Offset = "0x2604524", VA = "0x2604524", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x260452C", Offset = "0x260452C", VA = "0x260452C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x26045E0", Offset = "0x26045E0", VA = "0x26045E0")]
		public TweenLookAtClip()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class TweenLookAtMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _firstFrameHappened;

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x2604640", Offset = "0x2604640", VA = "0x2604640", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x2604B30", Offset = "0x2604B30", VA = "0x2604B30", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x2604B1C", Offset = "0x2604B1C", VA = "0x2604B1C")]
		private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x2604B08", Offset = "0x2604B08", VA = "0x2604B08")]
		private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x2604B38", Offset = "0x2604B38", VA = "0x2604B38")]
		private static float QuaternionMagnitude(Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x2604A7C", Offset = "0x2604A7C", VA = "0x2604A7C")]
		private static Quaternion NormalizeQuaternion(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x2604B78", Offset = "0x2604B78", VA = "0x2604B78")]
		public TweenLookAtMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xCE0244", Offset = "0xCE0244")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xCE0244", Offset = "0xCE0244")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xCE0244", Offset = "0xCE0244")]
	public class TweenLookAtTrack : TrackAsset
	{
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x2604B80", Offset = "0x2604B80", VA = "0x2604B80", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x2604C2C", Offset = "0x2604C2C", VA = "0x2604C2C", Slot = "29")]
		public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x2604C34", Offset = "0x2604C34", VA = "0x2604C34")]
		public TweenLookAtTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	public class UnitDirBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x200027C")]
		public enum eDir
		{
			[Token(Token = "0x400122F")]
			富豪,
			[Token(Token = "0x4001230")]
			息子,
			[Token(Token = "0x4001231")]
			医者,
			[Token(Token = "0x4001232")]
			社長,
			[Token(Token = "0x4001233")]
			研究者,
			[Token(Token = "0x4001234")]
			助手,
			[Token(Token = "0x4001235")]
			向き解除,
			[Token(Token = "0x4001236")]
			近くのドア,
			[Token(Token = "0x4001237")]
			指定した番号のアイテム,
			[Token(Token = "0x4001238")]
			指定した番号のアンカー
		}

		[NonSerialized]
		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimelineData Parent;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE996C", Offset = "0xCE996C")]
		public eDir Dir;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE99A4", Offset = "0xCE99A4")]
		public int No;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE99DC", Offset = "0xCE99DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE99DC", Offset = "0xCE99DC")]
		public int Param0;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCE9A30", Offset = "0xCE9A30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE9A30", Offset = "0xCE9A30")]
		public float Param1;

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x260A938", Offset = "0x260A938", VA = "0x260A938", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x260AA14", Offset = "0x260AA14", VA = "0x260AA14")]
		public UnitDirBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027D")]
	public class UnitDirClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitDirBehaviour DirData;

		[Token(Token = "0x17000188")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x260AA1C", Offset = "0x260AA1C", VA = "0x260AA1C", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x260AA24", Offset = "0x260AA24", VA = "0x260AA24", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x260AAD8", Offset = "0x260AAD8", VA = "0x260AAD8")]
		public UnitDirClip()
		{
		}
	}
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xCE0300", Offset = "0xCE0300")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xCE0300", Offset = "0xCE0300")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xCE0300", Offset = "0xCE0300")]
	public class UnitDirTrack : TrackAsset
	{
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x260AB3C", Offset = "0x260AB3C", VA = "0x260AB3C")]
		public UnitDirTrack()
		{
		}
	}
}
namespace App.Timeline.Modules
{
	[Token(Token = "0x200027F")]
	public class PositionAnchor : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform to;

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x2676C28", Offset = "0x2676C28", VA = "0x2676C28")]
		public PositionAnchor()
		{
		}
	}
}
namespace App.Network
{
	[Token(Token = "0x2000280")]
	public class PhotonMgr : MonoBehaviourPunCallbacks
	{
		[Serializable]
		[Token(Token = "0x2000281")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE03BC", Offset = "0xCE03BC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Region> <>9__71_0;

			[Token(Token = "0x6001297")]
			[Address(RVA = "0x265D430", Offset = "0x265D430", VA = "0x265D430")]
			public <>c()
			{
			}

			[Token(Token = "0x6001298")]
			[Address(RVA = "0x265D438", Offset = "0x265D438", VA = "0x265D438")]
			internal int <PingComp>b__71_0(Region a, Region b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE03CC", Offset = "0xCE03CC")]
		private sealed class <_ToLeaveRoom>d__113 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PhotonMgr <>4__this;

			[Token(Token = "0x17000189")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600129C")]
				[Address(RVA = "0x265D840", Offset = "0x265D840", VA = "0x265D840", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600129E")]
				[Address(RVA = "0x265D888", Offset = "0x265D888", VA = "0x265D888", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001299")]
			[Address(RVA = "0x265D790", Offset = "0x265D790", VA = "0x265D790")]
			[DebuggerHidden]
			public <_ToLeaveRoom>d__113(int <>1__state)
			{
			}

			[Token(Token = "0x600129A")]
			[Address(RVA = "0x265D7BC", Offset = "0x265D7BC", VA = "0x265D7BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600129B")]
			[Address(RVA = "0x265D7C0", Offset = "0x265D7C0", VA = "0x265D7C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600129D")]
			[Address(RVA = "0x265D848", Offset = "0x265D848", VA = "0x265D848", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000283")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE03DC", Offset = "0xCE03DC")]
		private sealed class <SetupMicDevice>d__212 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PhotonMgr <>4__this;

			[Token(Token = "0x1700018B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012A2")]
				[Address(RVA = "0x265D740", Offset = "0x265D740", VA = "0x265D740", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012A4")]
				[Address(RVA = "0x265D788", Offset = "0x265D788", VA = "0x265D788", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600129F")]
			[Address(RVA = "0x265D478", Offset = "0x265D478", VA = "0x265D478")]
			[DebuggerHidden]
			public <SetupMicDevice>d__212(int <>1__state)
			{
			}

			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x265D4A4", Offset = "0x265D4A4", VA = "0x265D4A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x265D4A8", Offset = "0x265D4A8", VA = "0x265D4A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x265D748", Offset = "0x265D748", VA = "0x265D748", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE9A84", Offset = "0xCE9A84")]
		public int _tolobby;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string find_room_key;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE9B18", Offset = "0xCE9B18")]
		public int _roomsearch;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE9BAC", Offset = "0xCE9BAC")]
		public int _todis;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public App.GameMgr.GameMgr mGameMgr;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RoomInfoWnd mRoomInfoWnd;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject VoiceTree;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PhotonVoiceView PhotonVoiceViewPrefab;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PhotonVoiceView MyVoiceView;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<VoChat> PhotonVoiceViewList;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject UnitTree;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<SceneUnit> SceneUnitList;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Player> RoomPlayer;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int RoomIndex;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int progress;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool is_run;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool is_err;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool to_disconnect;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		private bool IsDestroy;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool IsPingChk;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Action PingChkCompCB;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool IsPingList;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Region> PingList;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool IsPingChkErr;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private TypedLobby _defaultLobby;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<RoomInfo> RoomList;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool plz_vote;

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x266BA90", Offset = "0x266BA90", VA = "0x266BA90")]
		private void _RoomSearch()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x266BB00", Offset = "0x266BB00", VA = "0x266BB00")]
		private void _ToDis()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x266BB0C", Offset = "0x266BB0C", VA = "0x266BB0C")]
		private void GetVoice()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x266BD14", Offset = "0x266BD14", VA = "0x266BD14")]
		public VoChat SearchVoChat(Player p)
		{
			return null;
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x266BEA0", Offset = "0x266BEA0", VA = "0x266BEA0")]
		public void VoChk()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x266BFB0", Offset = "0x266BFB0", VA = "0x266BFB0")]
		public void GetUnit()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x266C1F8", Offset = "0x266C1F8", VA = "0x266C1F8")]
		public SceneUnit SearchRoomUnit(SceneUnit.eUnit unit)
		{
			return null;
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x266C344", Offset = "0x266C344", VA = "0x266C344")]
		public SceneUnit FindRoomUnit(Player p)
		{
			return null;
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x266C4FC", Offset = "0x266C4FC", VA = "0x266C4FC")]
		public void UpdateRoomPlayer()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x266C6A8", Offset = "0x266C6A8", VA = "0x266C6A8")]
		public int GetRoomPlayerCnt()
		{
			return default(int);
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x266C714", Offset = "0x266C714", VA = "0x266C714")]
		public Player Me()
		{
			return null;
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x266C770", Offset = "0x266C770", VA = "0x266C770")]
		public int GetRoomIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x266C7D0", Offset = "0x266C7D0", VA = "0x266C7D0")]
		public int GetRoomIndexPhoton()
		{
			return default(int);
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x266C5B8", Offset = "0x266C5B8", VA = "0x266C5B8")]
		private void UpdateRoomIndex()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x266C828", Offset = "0x266C828", VA = "0x266C828")]
		public int SearchRoomIndex(Player player)
		{
			return default(int);
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x266C8E0", Offset = "0x266C8E0", VA = "0x266C8E0")]
		public Player SearchPlayer(int hash)
		{
			return null;
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x266C9C8", Offset = "0x266C9C8", VA = "0x266C9C8")]
		public bool IsConnect()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x266CA24", Offset = "0x266CA24", VA = "0x266CA24")]
		public bool IsLobby()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x266B9F0", Offset = "0x266B9F0", VA = "0x266B9F0")]
		public string GetRoomCntStr()
		{
			return null;
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x266CA98", Offset = "0x266CA98", VA = "0x266CA98")]
		public int GetRoomCnt()
		{
			return default(int);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x266CAF4", Offset = "0x266CAF4", VA = "0x266CAF4")]
		public bool IsRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x266CB50", Offset = "0x266CB50", VA = "0x266CB50")]
		public bool IsMaster()
		{
			return default(bool);
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x266CBAC", Offset = "0x266CBAC", VA = "0x266CBAC")]
		public string GetRoomName()
		{
			return null;
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x266CC44", Offset = "0x266CC44", VA = "0x266CC44")]
		public string GetRoomKey()
		{
			return null;
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x266CD68", Offset = "0x266CD68", VA = "0x266CD68")]
		public void Init(App.GameMgr.GameMgr mgr)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x266CD78", Offset = "0x266CD78", VA = "0x266CD78")]
		private void ClearErr()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x266CD80", Offset = "0x266CD80", VA = "0x266CD80")]
		public bool PingChk(Action cb)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x266B738", Offset = "0x266B738", VA = "0x266B738")]
		public void ToLobby()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x266CF28", Offset = "0x266CF28", VA = "0x266CF28")]
		private void InitPhoton()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x266CE3C", Offset = "0x266CE3C", VA = "0x266CE3C")]
		public void SetRegion(string str)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x266D198", Offset = "0x266D198", VA = "0x266D198")]
		public string GetRegion()
		{
			return null;
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x266D20C", Offset = "0x266D20C", VA = "0x266D20C")]
		public void SetName()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x266D3E4", Offset = "0x266D3E4", VA = "0x266D3E4", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x266CFD8", Offset = "0x266CFD8", VA = "0x266CFD8")]
		private void InLobby()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x266D530", Offset = "0x266D530", VA = "0x266D530", Slot = "36")]
		public override void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x266D590", Offset = "0x266D590", VA = "0x266D590", Slot = "31")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x266D8B8", Offset = "0x266D8B8", VA = "0x266D8B8", Slot = "37")]
		public override void OnLeftLobby()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x266D8DC", Offset = "0x266D8DC", VA = "0x266D8DC", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x266D954", Offset = "0x266D954", VA = "0x266D954")]
		public void ToLeaveRoom()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x266DA08", Offset = "0x266DA08", VA = "0x266DA08")]
		private void ToLeaveLobby()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x266D4A8", Offset = "0x266D4A8", VA = "0x266D4A8")]
		public void ToDisconnect()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x266D940", Offset = "0x266D940", VA = "0x266D940")]
		private void Disconected()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x266D0C8", Offset = "0x266D0C8", VA = "0x266D0C8")]
		private void PhotonProc(int prog)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x266D514", Offset = "0x266D514", VA = "0x266D514")]
		private void PhotonComp(int prog)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x266D520", Offset = "0x266D520", VA = "0x266D520")]
		private void ToErr(int prog)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x266DA74", Offset = "0x266DA74", VA = "0x266DA74")]
		public void CallUpdate()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x266DBF0", Offset = "0x266DBF0", VA = "0x266DBF0", Slot = "39")]
		public override void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x266DCD0", Offset = "0x266DCD0", VA = "0x266DCD0")]
		private void PingComp(RegionHandler p)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x266DBE0", Offset = "0x266DBE0", VA = "0x266DBE0")]
		private void RecDiscconect()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x266DE34", Offset = "0x266DE34", VA = "0x266DE34")]
		private string[] GetRoomProForLobbyKey()
		{
			return null;
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x266DF78", Offset = "0x266DF78", VA = "0x266DF78")]
		private string[] GetRoomProForLobby()
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x266E0BC", Offset = "0x266E0BC", VA = "0x266E0BC")]
		private OpJoinRandomRoomParams _op_room_param()
		{
			return null;
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x266E128", Offset = "0x266E128", VA = "0x266E128")]
		private RoomOptions CreateRoomOp([Optional] string key)
		{
			return null;
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x266E544", Offset = "0x266E544", VA = "0x266E544")]
		public string GetServerTime()
		{
			return null;
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x266E5B8", Offset = "0x266E5B8", VA = "0x266E5B8")]
		private string CreateRoomName()
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x266E600", Offset = "0x266E600", VA = "0x266E600")]
		private EnterRoomParams CreateRoomParam()
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x266E6CC", Offset = "0x266E6CC", VA = "0x266E6CC")]
		public bool CreateRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x266E75C", Offset = "0x266E75C", VA = "0x266E75C")]
		public bool CreateKeyRoom(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x266E380", Offset = "0x266E380", VA = "0x266E380")]
		private ExitGames.Client.Photon.Hashtable GetHashTbl()
		{
			return null;
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x266E1D4", Offset = "0x266E1D4", VA = "0x266E1D4")]
		private ExitGames.Client.Photon.Hashtable GetKeyHashTbl(string key)
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x266E82C", Offset = "0x266E82C", VA = "0x266E82C")]
		private string GetPastChange()
		{
			return null;
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x266E908", Offset = "0x266E908", VA = "0x266E908")]
		private string GetLangCode()
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x266EAF8", Offset = "0x266EAF8", VA = "0x266EAF8")]
		private string GetRandRoomSQL()
		{
			return null;
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x266B8A0", Offset = "0x266B8A0", VA = "0x266B8A0")]
		public bool JoinRandomRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x266EBA4", Offset = "0x266EBA4", VA = "0x266EBA4", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x266EBA8", Offset = "0x266EBA8", VA = "0x266EBA8")]
		public bool JoinRoom(string room_name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x266EC10", Offset = "0x266EC10", VA = "0x266EC10")]
		public bool FindPrivateRoom(string strRoomCode)
		{
			return default(bool);
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x266EE58", Offset = "0x266EE58", VA = "0x266EE58")]
		public bool FindNoKickedRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x266EED4", Offset = "0x266EED4", VA = "0x266EED4")]
		public void LogoutRoom()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x266EFC0", Offset = "0x266EFC0", VA = "0x266EFC0")]
		public void OpenRoom()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x266F0B8", Offset = "0x266F0B8", VA = "0x266F0B8")]
		public void SetDiveFlg()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x266F1E8", Offset = "0x266F1E8", VA = "0x266F1E8")]
		public void SetVoteFlg()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x266F318", Offset = "0x266F318", VA = "0x266F318")]
		public void SetEpiFlg()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x266F448", Offset = "0x266F448", VA = "0x266F448")]
		public bool IsKickRoom(string room_name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x266F508", Offset = "0x266F508", VA = "0x266F508", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x266F868", Offset = "0x266F868", VA = "0x266F868", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x266F884", Offset = "0x266F884", VA = "0x266F884", Slot = "40")]
		public override void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x266F8FC", Offset = "0x266F8FC", VA = "0x266F8FC")]
		public RoomInfo SearchRoomPass(string pass)
		{
			return null;
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x266FA70", Offset = "0x266FA70", VA = "0x266FA70")]
		public List<RoomInfo> SearchNoKickRoom()
		{
			return null;
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x266FC50", Offset = "0x266FC50", VA = "0x266FC50", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x266FCF0", Offset = "0x266FCF0", VA = "0x266FCF0", Slot = "43")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x266FD3C", Offset = "0x266FD3C", VA = "0x266FD3C", Slot = "46")]
		public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x266FD64", Offset = "0x266FD64", VA = "0x266FD64")]
		private void Log()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x266D600", Offset = "0x266D600", VA = "0x266D600")]
		public void CallUpdateRoomInfo()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x266FEC4", Offset = "0x266FEC4", VA = "0x266FEC4")]
		public void CallUpdateUnitPos()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x266FF18", Offset = "0x266FF18", VA = "0x266FF18")]
		public void RPC_DestroyRoom(bool msg_flg = true)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x26700A4", Offset = "0x26700A4", VA = "0x26700A4")]
		[PunRPC]
		private void DestroyRoom(bool msg_flg)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x267012C", Offset = "0x267012C", VA = "0x267012C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0624", Offset = "0xCF0624")]
		private IEnumerator _ToLeaveRoom()
		{
			return null;
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x2670198", Offset = "0x2670198", VA = "0x2670198")]
		public void RPC_SetSceneUnit(int player_index, SceneUnit.eUnit unit)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x26703E8", Offset = "0x26703E8", VA = "0x26703E8")]
		[PunRPC]
		private void SetSceneUnit(Player player, SceneUnit.eUnit unit)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x2670404", Offset = "0x2670404", VA = "0x2670404")]
		public void RPC_SendUniqueID()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x26704F0", Offset = "0x26704F0", VA = "0x26704F0")]
		[PunRPC]
		private void SendUniqueID(string id, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x266F75C", Offset = "0x266F75C", VA = "0x266F75C")]
		public void RPC_PlzMasterUniqueID()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x2670518", Offset = "0x2670518", VA = "0x2670518")]
		[PunRPC]
		private void PlzMasterUniqueID(PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x2670624", Offset = "0x2670624", VA = "0x2670624")]
		[PunRPC]
		private void MasterUniqueID(string id)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x266F670", Offset = "0x266F670", VA = "0x266F670")]
		public void RPC_RecRoomIn()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x2670640", Offset = "0x2670640", VA = "0x2670640")]
		[PunRPC]
		private void RecRoomIn(string uniqueid, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x2670C44", Offset = "0x2670C44", VA = "0x2670C44")]
		private string[] GetRoomUnitIDList()
		{
			return null;
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x2670DA8", Offset = "0x2670DA8", VA = "0x2670DA8")]
		[PunRPC]
		private void RecRoom(int progress, string[] uniqueid, int tips_page, bool is_past)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x2670DD0", Offset = "0x2670DD0", VA = "0x2670DD0")]
		[PunRPC]
		private void RecErr()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x2670E98", Offset = "0x2670E98", VA = "0x2670E98")]
		public void RPC_PlzUserData(string uniqueid)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x2670F7C", Offset = "0x2670F7C", VA = "0x2670F7C")]
		[PunRPC]
		private void PlzUserData(string uniqueid, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x267116C", Offset = "0x267116C", VA = "0x267116C")]
		[PunRPC]
		private void RecvUserData(string uniqueid, int room_index, int unit, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x26711D0", Offset = "0x26711D0", VA = "0x26711D0")]
		public void RPC_PlzMyData()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x26712BC", Offset = "0x26712BC", VA = "0x26712BC")]
		[PunRPC]
		private void PlzMyData(string uniqueid, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x267153C", Offset = "0x267153C", VA = "0x267153C")]
		[PunRPC]
		private void RecvMyUnit(int room_index, int unit)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x26716D0", Offset = "0x26716D0", VA = "0x26716D0")]
		public void RPC_PlzRecDive()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x26717DC", Offset = "0x26717DC", VA = "0x26717DC")]
		[PunRPC]
		private void PlzRecDive(PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x2671EF4", Offset = "0x2671EF4", VA = "0x2671EF4")]
		[PunRPC]
		private void Recv_RecDive(int rec_type, int dive_cnt, float t, int bgm_no, int vote_result, bool is_past, int past_point)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x2671F14", Offset = "0x2671F14", VA = "0x2671F14")]
		public void RPC_PlzHaveItem()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x2672020", Offset = "0x2672020", VA = "0x2672020")]
		[PunRPC]
		private void PlzHaveItem(PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x26721C8", Offset = "0x26721C8", VA = "0x26721C8")]
		public void RPC_ChkMasterRec()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x26722B4", Offset = "0x26722B4", VA = "0x26722B4")]
		[PunRPC]
		private void ChkMasterRec(string uniqueid, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x2672480", Offset = "0x2672480", VA = "0x2672480")]
		[PunRPC]
		private void SetMaster()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x26724EC", Offset = "0x26724EC", VA = "0x26724EC")]
		[PunRPC]
		private void RecComp()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x2672508", Offset = "0x2672508", VA = "0x2672508")]
		public void RPC_SetMaxPlayer(int cnt)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x2672618", Offset = "0x2672618", VA = "0x2672618")]
		[PunRPC]
		private void SetMaxPlayer(int cnt)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x2672634", Offset = "0x2672634", VA = "0x2672634")]
		public void RPC_StartUnitSel()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x2672758", Offset = "0x2672758", VA = "0x2672758")]
		[PunRPC]
		private void StartUnitSel()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x2672794", Offset = "0x2672794", VA = "0x2672794")]
		public void RPC_KickUser(Player p)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x26728B0", Offset = "0x26728B0", VA = "0x26728B0")]
		[PunRPC]
		private void Kick_User(Player p)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x267292C", Offset = "0x267292C", VA = "0x267292C")]
		public int GetKickRoomCnt()
		{
			return default(int);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x266EEF8", Offset = "0x266EEF8", VA = "0x266EEF8")]
		private void AddKickRoom()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x2672984", Offset = "0x2672984", VA = "0x2672984")]
		public void RPC_TipsSkip(int skip)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x2672A94", Offset = "0x2672A94", VA = "0x2672A94")]
		[PunRPC]
		private void TipsSkip(int skip)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x2672AB0", Offset = "0x2672AB0", VA = "0x2672AB0")]
		public void RoomGameMode()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x2672B38", Offset = "0x2672B38", VA = "0x2672B38")]
		public void RPC_ShowTips()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x2672C48", Offset = "0x2672C48", VA = "0x2672C48")]
		[PunRPC]
		private void ShowTips()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x2672C64", Offset = "0x2672C64", VA = "0x2672C64")]
		public void RPC_SnapTut()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x2672D70", Offset = "0x2672D70", VA = "0x2672D70")]
		[PunRPC]
		private void SnapTut(PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x2672D90", Offset = "0x2672D90", VA = "0x2672D90")]
		public void RPC_AllItemTutComp()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x2672E9C", Offset = "0x2672E9C", VA = "0x2672E9C")]
		[PunRPC]
		private void AllItemTutComp()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x2672EB8", Offset = "0x2672EB8", VA = "0x2672EB8")]
		public void RPC_AllSnapTutComp()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x2672FC4", Offset = "0x2672FC4", VA = "0x2672FC4")]
		[PunRPC]
		private void AllSnapTutComp()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x2672FE0", Offset = "0x2672FE0", VA = "0x2672FE0")]
		public void RPC_RecTips()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x26730EC", Offset = "0x26730EC", VA = "0x26730EC")]
		[PunRPC]
		private void RecTips()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x2673150", Offset = "0x2673150", VA = "0x2673150")]
		public void RPC_Prologe()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x2673260", Offset = "0x2673260", VA = "0x2673260")]
		[PunRPC]
		private void ToProloge()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x267327C", Offset = "0x267327C", VA = "0x267327C")]
		public void RPC_ToDive()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x267338C", Offset = "0x267338C", VA = "0x267338C")]
		[PunRPC]
		private void ToDive()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x26733D8", Offset = "0x26733D8", VA = "0x26733D8")]
		public void RPC_HaveItem(int item_no)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x26734E8", Offset = "0x26734E8", VA = "0x26734E8")]
		[PunRPC]
		private void HaveItem(int item_no, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x2673508", Offset = "0x2673508", VA = "0x2673508")]
		public void RPC_ReleaseItem(int item_no, Vector3 pos, Vector3 rot)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x26736E4", Offset = "0x26736E4", VA = "0x26736E4")]
		[PunRPC]
		private void ReleaseItem(int item_no, Vector3 pos, Vector3 rot, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x2673704", Offset = "0x2673704", VA = "0x2673704")]
		public void RPC_Rev(int item_no, int index)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x267385C", Offset = "0x267385C", VA = "0x267385C")]
		[PunRPC]
		private void ItemRev(int item_no, int index)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x2673878", Offset = "0x2673878", VA = "0x2673878")]
		public void RPC_Retray()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x2673984", Offset = "0x2673984", VA = "0x2673984")]
		[PunRPC]
		private void Retray()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x26739A0", Offset = "0x26739A0", VA = "0x26739A0")]
		public void RPC_InitWaitMember()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x2673AC4", Offset = "0x2673AC4", VA = "0x2673AC4")]
		[PunRPC]
		private void InitWaitMember()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x2673AE0", Offset = "0x2673AE0", VA = "0x2673AE0")]
		public void RPC_AddWaitMember()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x2673BEC", Offset = "0x2673BEC", VA = "0x2673BEC")]
		[PunRPC]
		private void AddWaitMember()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x2673C08", Offset = "0x2673C08", VA = "0x2673C08")]
		public void RPC_SetWaitMenberClear()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x2673D14", Offset = "0x2673D14", VA = "0x2673D14")]
		[PunRPC]
		private void SetWaitMenberClear()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x2673D30", Offset = "0x2673D30", VA = "0x2673D30")]
		public void RPC_GameEnd()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x2673E54", Offset = "0x2673E54", VA = "0x2673E54")]
		[PunRPC]
		private void GameEnd()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x2673E70", Offset = "0x2673E70", VA = "0x2673E70")]
		public void RPC_TimeCountStart()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x2673F7C", Offset = "0x2673F7C", VA = "0x2673F7C")]
		[PunRPC]
		private void TimeCountStart()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x2673F98", Offset = "0x2673F98", VA = "0x2673F98")]
		public void RPC_CountChk(float t)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x26740C0", Offset = "0x26740C0", VA = "0x26740C0")]
		[PunRPC]
		private void CountChk(float t)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x26740DC", Offset = "0x26740DC", VA = "0x26740DC")]
		public void RPC_ReqSnap(SnapData p, SceneUnit.eUnit unit)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x2674430", Offset = "0x2674430", VA = "0x2674430")]
		[PunRPC]
		private void ReqSnap(float snap_time, float[] door, Vector3[] rot, float light_per, float light_pow, bool assi, bool fugo, bool is_fire, float[] propitem, SceneUnit.eUnit unit, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x267452C", Offset = "0x267452C", VA = "0x267452C")]
		public void RPC_TimeOutProc()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x2674638", Offset = "0x2674638", VA = "0x2674638")]
		[PunRPC]
		private void TimeOutProc()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x2674654", Offset = "0x2674654", VA = "0x2674654")]
		[PunRPC]
		private void DebugTimeCount()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x2674658", Offset = "0x2674658", VA = "0x2674658")]
		public void RPC_ReDive()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x2674764", Offset = "0x2674764", VA = "0x2674764")]
		[PunRPC]
		public void ReDive()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x2674780", Offset = "0x2674780", VA = "0x2674780")]
		public void RPC_ToVote()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x2674890", Offset = "0x2674890", VA = "0x2674890")]
		[PunRPC]
		public void ToVote()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x26748AC", Offset = "0x26748AC", VA = "0x26748AC")]
		public void RPC_Vote(int index)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x26749BC", Offset = "0x26749BC", VA = "0x26749BC")]
		[PunRPC]
		public void Vote(int index, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x2674A24", Offset = "0x2674A24", VA = "0x2674A24")]
		public void RPC_CanselVote(int index)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x2674B34", Offset = "0x2674B34", VA = "0x2674B34")]
		[PunRPC]
		public void CanselVote(int index, PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x2674B9C", Offset = "0x2674B9C", VA = "0x2674B9C")]
		public void RPC_VoteTimeUp()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x2674CB8", Offset = "0x2674CB8", VA = "0x2674CB8")]
		[PunRPC]
		private void VoteTimeUp(int vote_cnt)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x2674CD4", Offset = "0x2674CD4", VA = "0x2674CD4")]
		public void RPC_PlzVoteData()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x2674DE8", Offset = "0x2674DE8", VA = "0x2674DE8")]
		[PunRPC]
		private void PlzVoteData(PhotonMessageInfo sender)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x2675010", Offset = "0x2675010", VA = "0x2675010")]
		[PunRPC]
		private void RecvVoteData(int[] votedata)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x26750D8", Offset = "0x26750D8", VA = "0x26750D8")]
		public void RPC_VoteResult(int vote)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x26751E8", Offset = "0x26751E8", VA = "0x26751E8")]
		[PunRPC]
		public void SetVoteResult(int vote)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x2675204", Offset = "0x2675204", VA = "0x2675204")]
		public void RPC_RandomVote(int vote)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x2675314", Offset = "0x2675314", VA = "0x2675314")]
		[PunRPC]
		public void RandomVote(int vote)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x2675330", Offset = "0x2675330", VA = "0x2675330")]
		public void RPC_EpiDive()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x267543C", Offset = "0x267543C", VA = "0x267543C")]
		[PunRPC]
		public void EpiDive()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x2675458", Offset = "0x2675458", VA = "0x2675458")]
		public void CreateVoiceView()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x26755B0", Offset = "0x26755B0", VA = "0x26755B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF09B4", Offset = "0xCF09B4")]
		private IEnumerator SetupMicDevice()
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x267561C", Offset = "0x267561C", VA = "0x267561C")]
		public GameObject CreateUnit(string path, Vector3 pos, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x2675780", Offset = "0x2675780", VA = "0x2675780")]
		private void InstantiateCB(GameObject gameobject)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x267554C", Offset = "0x267554C", VA = "0x267554C")]
		public void DestroyUnit(GameObject unit)
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x266D6A8", Offset = "0x266D6A8", VA = "0x266D6A8")]
		public void DeleteUnit()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x267590C", Offset = "0x267590C", VA = "0x267590C")]
		public PhotonMgr()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000284")]
	public class SceneUnitData
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int RoomIndex;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player pPlayer;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string UniqueID;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneUnit.eUnit mUnit;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IsItemTut;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool IsSnapTut;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool IsVR;

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x26A6E84", Offset = "0x26A6E84", VA = "0x26A6E84")]
		public SceneUnitData()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x26A6F00", Offset = "0x26A6F00", VA = "0x26A6F00")]
		public void SetUniqueID(string id)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x26A6F08", Offset = "0x26A6F08", VA = "0x26A6F08")]
		public void SetVR()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x26A6F14", Offset = "0x26A6F14", VA = "0x26A6F14")]
		public void ItemTutComp()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x26A6F20", Offset = "0x26A6F20", VA = "0x26A6F20")]
		public void SnapTutComp()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x26A6F2C", Offset = "0x26A6F2C", VA = "0x26A6F2C")]
		public void Set(int index, Player p, SceneUnit.eUnit unit)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x26A6F3C", Offset = "0x26A6F3C", VA = "0x26A6F3C")]
		public SceneUnit.eUnit Rec(Player p)
		{
			return default(SceneUnit.eUnit);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x26A6F4C", Offset = "0x26A6F4C", VA = "0x26A6F4C")]
		public bool Rec(int room_index, string uniqueid, Player p, int unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x26A6F5C", Offset = "0x26A6F5C", VA = "0x26A6F5C")]
		public bool IsOK()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000285")]
	public class VoteData
	{
		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneUnit.eUnit Vote;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Index;

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x26127E4", Offset = "0x26127E4", VA = "0x26127E4")]
		public VoteData()
		{
		}
	}
}
namespace App.GameMgr
{
	[Token(Token = "0x2000286")]
	public class DataMgr : MonoBehaviour
	{
		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> InstantiateGameObject;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<UnityEngine.Object> InstantiateObject;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<RenderTexture> RenderTexList;

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x26C4CB4", Offset = "0x26C4CB4", VA = "0x26C4CB4")]
		public GameObject MgrInstantiate(GameObject p)
		{
			return null;
		}

		[Token(Token = "0x60012B0")]
		public T MgrInstantiate<T>(UnityEngine.Object p) where T : class
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x26C4E48", Offset = "0x26C4E48", VA = "0x26C4E48")]
		public void RemoveInstantiateGameObject()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x26C50F4", Offset = "0x26C50F4", VA = "0x26C50F4")]
		public RenderTexture CreateRenderTex(int w, int h, int depth, RenderTextureFormat format)
		{
			return null;
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x26C51B0", Offset = "0x26C51B0", VA = "0x26C51B0")]
		public void ChkRenderTex()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x26C52B8", Offset = "0x26C52B8", VA = "0x26C52B8")]
		public DataMgr()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public static class GameDebug
	{
		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StreamWriter _logFile;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _forwardToDebug;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool _isInitialized;

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x2731454", Offset = "0x2731454", VA = "0x2731454")]
		public static void Initialize(string logfilePath, string logBaseName)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x2731868", Offset = "0x2731868", VA = "0x2731868")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x273197C", Offset = "0x273197C", VA = "0x273197C")]
		private static void LogCallback(string message, string stack, LogType logtype)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x27317A4", Offset = "0x27317A4", VA = "0x27317A4")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x2731E9C", Offset = "0x2731E9C", VA = "0x2731E9C")]
		public static void LogError(string message)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x2731F60", Offset = "0x2731F60", VA = "0x2731F60")]
		public static void LogWarning(string message)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x2731A4C", Offset = "0x2731A4C", VA = "0x2731A4C")]
		private static void _Log(string message)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x2731D30", Offset = "0x2731D30", VA = "0x2731D30")]
		private static void _LogError(string message)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x2731BC4", Offset = "0x2731BC4", VA = "0x2731BC4")]
		private static void _LogWarning(string message)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x2732024", Offset = "0x2732024", VA = "0x2732024")]
		public static void Assert(bool condition)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x2732080", Offset = "0x2732080", VA = "0x2732080")]
		public static void Assert(bool condition, string msg)
		{
		}

		[Token(Token = "0x60012C0")]
		public static void Assert<T>(bool condition, string format, T arg1)
		{
		}

		[Token(Token = "0x60012C1")]
		public static void Assert<T1, T2>(bool condition, string format, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x60012C2")]
		public static void Assert<T1, T2, T3>(bool condition, string format, T1 arg1, T2 arg2, T3 arg3)
		{
		}

		[Token(Token = "0x60012C3")]
		public static void Assert<T1, T2, T3, T4>(bool condition, string format, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
		{
		}

		[Token(Token = "0x60012C4")]
		public static void Assert<T1, T2, T3, T4, T5>(bool condition, string format, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class GameMgr : SingletonMonoBehaviour<GameMgr>
	{
		[Token(Token = "0x2000289")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE03EC", Offset = "0xCE03EC")]
		private sealed class <_Awake>d__120 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x40012F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <r>5__2;

			[Token(Token = "0x1700018F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001440")]
				[Address(RVA = "0x2737234", Offset = "0x2737234", VA = "0x2737234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000190")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001442")]
				[Address(RVA = "0x273727C", Offset = "0x273727C", VA = "0x273727C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600143D")]
			[Address(RVA = "0x2736F98", Offset = "0x2736F98", VA = "0x2736F98")]
			[DebuggerHidden]
			public <_Awake>d__120(int <>1__state)
			{
			}

			[Token(Token = "0x600143E")]
			[Address(RVA = "0x2736FC4", Offset = "0x2736FC4", VA = "0x2736FC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600143F")]
			[Address(RVA = "0x2736FC8", Offset = "0x2736FC8", VA = "0x2736FC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001441")]
			[Address(RVA = "0x273723C", Offset = "0x273723C", VA = "0x273723C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE03FC", Offset = "0xCE03FC")]
		private sealed class <_FadeToTitle>d__134 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x17000191")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001446")]
				[Address(RVA = "0x27374A4", Offset = "0x27374A4", VA = "0x27374A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000192")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001448")]
				[Address(RVA = "0x27374EC", Offset = "0x27374EC", VA = "0x27374EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001443")]
			[Address(RVA = "0x27373BC", Offset = "0x27373BC", VA = "0x27373BC")]
			[DebuggerHidden]
			public <_FadeToTitle>d__134(int <>1__state)
			{
			}

			[Token(Token = "0x6001444")]
			[Address(RVA = "0x27373E8", Offset = "0x27373E8", VA = "0x27373E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001445")]
			[Address(RVA = "0x27373EC", Offset = "0x27373EC", VA = "0x27373EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001447")]
			[Address(RVA = "0x27374AC", Offset = "0x27374AC", VA = "0x27374AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE040C", Offset = "0xCE040C")]
		private sealed class <_ToTitleScene>d__135 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x17000193")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600144C")]
				[Address(RVA = "0x273808C", Offset = "0x273808C", VA = "0x273808C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000194")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600144E")]
				[Address(RVA = "0x27380D4", Offset = "0x27380D4", VA = "0x27380D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001449")]
			[Address(RVA = "0x2737F2C", Offset = "0x2737F2C", VA = "0x2737F2C")]
			[DebuggerHidden]
			public <_ToTitleScene>d__135(int <>1__state)
			{
			}

			[Token(Token = "0x600144A")]
			[Address(RVA = "0x2737F58", Offset = "0x2737F58", VA = "0x2737F58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600144B")]
			[Address(RVA = "0x2737F5C", Offset = "0x2737F5C", VA = "0x2737F5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600144D")]
			[Address(RVA = "0x2738094", Offset = "0x2738094", VA = "0x2738094", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE041C", Offset = "0xCE041C")]
		private sealed class <_FadeToRoom>d__137 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x17000195")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001452")]
				[Address(RVA = "0x273736C", Offset = "0x273736C", VA = "0x273736C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000196")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001454")]
				[Address(RVA = "0x27373B4", Offset = "0x27373B4", VA = "0x27373B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600144F")]
			[Address(RVA = "0x2737284", Offset = "0x2737284", VA = "0x2737284")]
			[DebuggerHidden]
			public <_FadeToRoom>d__137(int <>1__state)
			{
			}

			[Token(Token = "0x6001450")]
			[Address(RVA = "0x27372B0", Offset = "0x27372B0", VA = "0x27372B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001451")]
			[Address(RVA = "0x27372B4", Offset = "0x27372B4", VA = "0x27372B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001453")]
			[Address(RVA = "0x2737374", Offset = "0x2737374", VA = "0x2737374", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE042C", Offset = "0xCE042C")]
		private sealed class <_ToRoomScene>d__139 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x17000197")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001458")]
				[Address(RVA = "0x2737EDC", Offset = "0x2737EDC", VA = "0x2737EDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000198")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600145A")]
				[Address(RVA = "0x2737F24", Offset = "0x2737F24", VA = "0x2737F24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001455")]
			[Address(RVA = "0x2737D7C", Offset = "0x2737D7C", VA = "0x2737D7C")]
			[DebuggerHidden]
			public <_ToRoomScene>d__139(int <>1__state)
			{
			}

			[Token(Token = "0x6001456")]
			[Address(RVA = "0x2737DA8", Offset = "0x2737DA8", VA = "0x2737DA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001457")]
			[Address(RVA = "0x2737DAC", Offset = "0x2737DAC", VA = "0x2737DAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001459")]
			[Address(RVA = "0x2737EE4", Offset = "0x2737EE4", VA = "0x2737EE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE043C", Offset = "0xCE043C")]
		private sealed class <_ToDiveScene>d__141 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x17000199")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600145E")]
				[Address(RVA = "0x2737D2C", Offset = "0x2737D2C", VA = "0x2737D2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001460")]
				[Address(RVA = "0x2737D74", Offset = "0x2737D74", VA = "0x2737D74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600145B")]
			[Address(RVA = "0x2737B58", Offset = "0x2737B58", VA = "0x2737B58")]
			[DebuggerHidden]
			public <_ToDiveScene>d__141(int <>1__state)
			{
			}

			[Token(Token = "0x600145C")]
			[Address(RVA = "0x2737B84", Offset = "0x2737B84", VA = "0x2737B84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600145D")]
			[Address(RVA = "0x2737B88", Offset = "0x2737B88", VA = "0x2737B88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600145F")]
			[Address(RVA = "0x2737D34", Offset = "0x2737D34", VA = "0x2737D34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200028F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE044C", Offset = "0xCE044C")]
		private sealed class <_SceneDestroy>d__143 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string unload_scene;

			[Token(Token = "0x1700019B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001464")]
				[Address(RVA = "0x2737768", Offset = "0x2737768", VA = "0x2737768", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001466")]
				[Address(RVA = "0x27377B0", Offset = "0x27377B0", VA = "0x27377B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001461")]
			[Address(RVA = "0x2737660", Offset = "0x2737660", VA = "0x2737660")]
			[DebuggerHidden]
			public <_SceneDestroy>d__143(int <>1__state)
			{
			}

			[Token(Token = "0x6001462")]
			[Address(RVA = "0x273768C", Offset = "0x273768C", VA = "0x273768C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001463")]
			[Address(RVA = "0x2737690", Offset = "0x2737690", VA = "0x2737690", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001465")]
			[Address(RVA = "0x2737770", Offset = "0x2737770", VA = "0x2737770", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE045C", Offset = "0xCE045C")]
		private sealed class <LoadScene>d__145 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string scene_name;

			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameMgr <>4__this;

			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <p>5__2;

			[Token(Token = "0x1700019D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600146A")]
				[Address(RVA = "0x2736B60", Offset = "0x2736B60", VA = "0x2736B60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600146C")]
				[Address(RVA = "0x2736BA8", Offset = "0x2736BA8", VA = "0x2736BA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001467")]
			[Address(RVA = "0x2736954", Offset = "0x2736954", VA = "0x2736954")]
			[DebuggerHidden]
			public <LoadScene>d__145(int <>1__state)
			{
			}

			[Token(Token = "0x6001468")]
			[Address(RVA = "0x2736980", Offset = "0x2736980", VA = "0x2736980", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001469")]
			[Address(RVA = "0x2736984", Offset = "0x2736984", VA = "0x2736984", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600146B")]
			[Address(RVA = "0x2736B68", Offset = "0x2736B68", VA = "0x2736B68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000291")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE046C", Offset = "0xCE046C")]
		private sealed class <UnloadScene>d__146 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string scene_name;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <p>5__2;

			[Token(Token = "0x1700019F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001470")]
				[Address(RVA = "0x2736E6C", Offset = "0x2736E6C", VA = "0x2736E6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001472")]
				[Address(RVA = "0x2736EB4", Offset = "0x2736EB4", VA = "0x2736EB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600146D")]
			[Address(RVA = "0x2736D28", Offset = "0x2736D28", VA = "0x2736D28")]
			[DebuggerHidden]
			public <UnloadScene>d__146(int <>1__state)
			{
			}

			[Token(Token = "0x600146E")]
			[Address(RVA = "0x2736D54", Offset = "0x2736D54", VA = "0x2736D54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600146F")]
			[Address(RVA = "0x2736D58", Offset = "0x2736D58", VA = "0x2736D58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001471")]
			[Address(RVA = "0x2736E74", Offset = "0x2736E74", VA = "0x2736E74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE047C", Offset = "0xCE047C")]
		private sealed class <CallGC>d__147 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001476")]
				[Address(RVA = "0x2736820", Offset = "0x2736820", VA = "0x2736820", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001478")]
				[Address(RVA = "0x2736868", Offset = "0x2736868", VA = "0x2736868", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001473")]
			[Address(RVA = "0x2736748", Offset = "0x2736748", VA = "0x2736748")]
			[DebuggerHidden]
			public <CallGC>d__147(int <>1__state)
			{
			}

			[Token(Token = "0x6001474")]
			[Address(RVA = "0x2736774", Offset = "0x2736774", VA = "0x2736774", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001475")]
			[Address(RVA = "0x2736778", Offset = "0x2736778", VA = "0x2736778", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001477")]
			[Address(RVA = "0x2736828", Offset = "0x2736828", VA = "0x2736828", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000293")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE048C", Offset = "0xCE048C")]
		private sealed class <PressWait>d__389 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x4001319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time_out_time;

			[Token(Token = "0x400131A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <r>5__2;

			[Token(Token = "0x170001A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600147C")]
				[Address(RVA = "0x2736CD8", Offset = "0x2736CD8", VA = "0x2736CD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600147E")]
				[Address(RVA = "0x2736D20", Offset = "0x2736D20", VA = "0x2736D20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001479")]
			[Address(RVA = "0x2736BB0", Offset = "0x2736BB0", VA = "0x2736BB0")]
			[DebuggerHidden]
			public <PressWait>d__389(int <>1__state)
			{
			}

			[Token(Token = "0x600147A")]
			[Address(RVA = "0x2736BDC", Offset = "0x2736BDC", VA = "0x2736BDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600147B")]
			[Address(RVA = "0x2736BE0", Offset = "0x2736BE0", VA = "0x2736BE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600147D")]
			[Address(RVA = "0x2736CE0", Offset = "0x2736CE0", VA = "0x2736CE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE049C", Offset = "0xCE049C")]
		private sealed class <FadeWait>d__390 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x170001A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001482")]
				[Address(RVA = "0x2736904", Offset = "0x2736904", VA = "0x2736904", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001484")]
				[Address(RVA = "0x273694C", Offset = "0x273694C", VA = "0x273694C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600147F")]
			[Address(RVA = "0x2736870", Offset = "0x2736870", VA = "0x2736870")]
			[DebuggerHidden]
			public <FadeWait>d__390(int <>1__state)
			{
			}

			[Token(Token = "0x6001480")]
			[Address(RVA = "0x273689C", Offset = "0x273689C", VA = "0x273689C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001481")]
			[Address(RVA = "0x27368A0", Offset = "0x27368A0", VA = "0x27368A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001483")]
			[Address(RVA = "0x273690C", Offset = "0x273690C", VA = "0x273690C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE04AC", Offset = "0xCE04AC")]
		private sealed class <WaitSysMsgClose>d__391 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400131F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x170001A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001488")]
				[Address(RVA = "0x2736F48", Offset = "0x2736F48", VA = "0x2736F48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600148A")]
				[Address(RVA = "0x2736F90", Offset = "0x2736F90", VA = "0x2736F90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001485")]
			[Address(RVA = "0x2736EBC", Offset = "0x2736EBC", VA = "0x2736EBC")]
			[DebuggerHidden]
			public <WaitSysMsgClose>d__391(int <>1__state)
			{
			}

			[Token(Token = "0x6001486")]
			[Address(RVA = "0x2736EE8", Offset = "0x2736EE8", VA = "0x2736EE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001487")]
			[Address(RVA = "0x2736EEC", Offset = "0x2736EEC", VA = "0x2736EEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001489")]
			[Address(RVA = "0x2736F50", Offset = "0x2736F50", VA = "0x2736F50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE04BC", Offset = "0xCE04BC")]
		private sealed class <CallBackWait>d__394 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float t;

			[Token(Token = "0x4001325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action cb;

			[Token(Token = "0x4001326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <r>5__2;

			[Token(Token = "0x170001A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600148E")]
				[Address(RVA = "0x27365B0", Offset = "0x27365B0", VA = "0x27365B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001490")]
				[Address(RVA = "0x27365F8", Offset = "0x27365F8", VA = "0x27365F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600148B")]
			[Address(RVA = "0x27364A4", Offset = "0x27364A4", VA = "0x27364A4")]
			[DebuggerHidden]
			public <CallBackWait>d__394(int <>1__state)
			{
			}

			[Token(Token = "0x600148C")]
			[Address(RVA = "0x27364D0", Offset = "0x27364D0", VA = "0x27364D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600148D")]
			[Address(RVA = "0x27364D4", Offset = "0x27364D4", VA = "0x27364D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600148F")]
			[Address(RVA = "0x27365B8", Offset = "0x27365B8", VA = "0x27365B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000297")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE04CC", Offset = "0xCE04CC")]
		private sealed class <CallBackWaitSkip>d__395 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float t;

			[Token(Token = "0x400132A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameMgr <>4__this;

			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action cb;

			[Token(Token = "0x400132C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <r>5__2;

			[Token(Token = "0x170001AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001494")]
				[Address(RVA = "0x27366F8", Offset = "0x27366F8", VA = "0x27366F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001496")]
				[Address(RVA = "0x2736740", Offset = "0x2736740", VA = "0x2736740", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001491")]
			[Address(RVA = "0x2736600", Offset = "0x2736600", VA = "0x2736600")]
			[DebuggerHidden]
			public <CallBackWaitSkip>d__395(int <>1__state)
			{
			}

			[Token(Token = "0x6001492")]
			[Address(RVA = "0x273662C", Offset = "0x273662C", VA = "0x273662C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001493")]
			[Address(RVA = "0x2736630", Offset = "0x2736630", VA = "0x2736630", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001495")]
			[Address(RVA = "0x2736700", Offset = "0x2736700", VA = "0x2736700", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE04DC", Offset = "0xCE04DC")]
		private sealed class <_RecreateMic>d__500 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x170001AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600149A")]
				[Address(RVA = "0x2737610", Offset = "0x2737610", VA = "0x2737610", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600149C")]
				[Address(RVA = "0x2737658", Offset = "0x2737658", VA = "0x2737658", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001497")]
			[Address(RVA = "0x27374F4", Offset = "0x27374F4", VA = "0x27374F4")]
			[DebuggerHidden]
			public <_RecreateMic>d__500(int <>1__state)
			{
			}

			[Token(Token = "0x6001498")]
			[Address(RVA = "0x2737520", Offset = "0x2737520", VA = "0x2737520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001499")]
			[Address(RVA = "0x2737524", Offset = "0x2737524", VA = "0x2737524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600149B")]
			[Address(RVA = "0x2737618", Offset = "0x2737618", VA = "0x2737618", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000299")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCE04EC", Offset = "0xCE04EC")]
		private sealed class <_SetupMic>d__504 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMgr <>4__this;

			[Token(Token = "0x4001333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <r>5__2;

			[Token(Token = "0x170001AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014A0")]
				[Address(RVA = "0x2737B08", Offset = "0x2737B08", VA = "0x2737B08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014A2")]
				[Address(RVA = "0x2737B50", Offset = "0x2737B50", VA = "0x2737B50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600149D")]
			[Address(RVA = "0x27377B8", Offset = "0x27377B8", VA = "0x27377B8")]
			[DebuggerHidden]
			public <_SetupMic>d__504(int <>1__state)
			{
			}

			[Token(Token = "0x600149E")]
			[Address(RVA = "0x27377E4", Offset = "0x27377E4", VA = "0x27377E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600149F")]
			[Address(RVA = "0x27377E8", Offset = "0x27377E8", VA = "0x27377E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x2737B10", Offset = "0x2737B10", VA = "0x2737B10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsInit;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamManager mSteamManager;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject mEntitlementCheckTree;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EntitlementCheck mEntitlementCheck;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject RootGameObject;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DataMgr mDataMgr;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public cSoundMgr SoundMgr;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public cAssetLoader AssetLoader;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public cUIMgr UIMgr;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public cInputMgr InputMgr;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LocalizeMgr mLocalizeMgr;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMgr mIKMgr;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TimelineMgr mTimelineMgr;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PhotonMgr mPhotonMgr;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public VoiceChatMgr mVoiceChatMgr;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RoomUnitMgr mRoomUnitMgr;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SceneCamMgr mSceneCamMgr;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LogMgr mLogMgr;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public FadeEntity mFade;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Finder mFinder;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public FadeMsg mFadeMsg;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public CharaDirUI mCharaDirUI;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public WatchesUI mWatchesUI;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public SceneTextWnd mSceneTextWnd;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public OVROffset mOVROffset;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public OVRMgr mOVRMgr;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Camera SteamVRCam;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Camera SwitchCam;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SwitchCamMgr mSwitchCamMgr;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Bounds InBounds;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool IsIndoor;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool old_inin;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public RendererViewSwitcher mRendererViewSwitcher;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public HandGrab LGrab;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public HandGrab RGrab;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Animator LHand;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Animator RHand;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public HandGrab SwitchGrab;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public RotCam mRotCam;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public List<int> HaveItemList;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public List<Sprite> UnitIcon;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Camera FrontUICam;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public ScreeenCapture mScreeenCapture;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Camera PhotonDebugCam;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Transform SceneTree;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public List<string> KickedRoomName;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public SceneData mSceneData;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public SceneRoot SceneRoot;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public string DataPath;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool is_fade_to_tile;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float UIBlockTime;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Action BlockedCB;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public float DeltaTime;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private string player_name;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private string uniqueid;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public string MicDeviceName;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int save_bgm_vol;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int save_vo_vol;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int save_se_vol;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private int save_chat_vol;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private int save_swcam;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public bool save_game_clear;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1ED")]
		public bool save_clear_info;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EE")]
		public bool save_open_mail;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EF")]
		public bool save_past_clear;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private int save_style;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private int save_langbln;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private int save_match_lang;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public float SwCamSpd;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private int MaxPlayer;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public bool IsLogo;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public int DiveCnt;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public bool IsMicChk;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public int MicDeviceCnt;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public bool RoomLock;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x215")]
		public bool IsTips;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public int TipsPage;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public bool IsTipsComp;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21D")]
		public bool IsPrologeComp;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21E")]
		public bool IsGameStart;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21F")]
		public bool IsPlayTimeLine;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public bool IsGameEnd;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public int PlayBGMNo;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public bool IsSnap;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x229")]
		public bool IsShowItem;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22A")]
		public bool IsChkPing;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22B")]
		public bool IsShowSnap;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public bool IsSnapNow;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22D")]
		public bool IsDiscattion;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22E")]
		public bool IsVote;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public int VoteCnt;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public int VoteResult;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public bool IsEpiloge;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public int FirstLetterTitleIndex;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public int FirstLetterIndex;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public bool EpiDiveEnd;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public int GameInfoType;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public bool IsClearMode;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24D")]
		public bool IsDiveMode;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24E")]
		public bool IsDeviceChk;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24F")]
		public bool IsLR;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public bool IsPastChange;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public int PastChangePoint;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public bool IsOpenMatchLang;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
		public bool IsRec;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public int RecProgress;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public float RecTimer;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private SceneUnit.eUnit _DiveUnit;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public List<SceneUnitData> RoomUnitList;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public cInter LightPer;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public cInter LightPow;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public int NowWaitMember;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public bool WaitMenberClear;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private SnapData open_snap;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private SceneUnit.eUnit open_unit;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private Player ReqSender;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public List<VoteData> mVoteData;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public float PressWaitPer;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private Vector3 v;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public Transform MathTransform;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private FocusTarget _target;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private Color col;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public float TimeCount;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float time_update_frame;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private float time_chk_frame;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private bool IsTimeOut;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Action CoundUpdateCB;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private Action CountChkCB;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Action TimeOutCB;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public bool MemberOutChk;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		public float MemberTimeFrame;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public string DropMemberName;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public int MicDeviceIndex;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private bool _setup_mic;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x315")]
		public bool IsShowMicChk;

		[Token(Token = "0x1700018D")]
		public int LangCode
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x2684960", Offset = "0x2684960", VA = "0x2684960")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018E")]
		public SceneUnit.eUnit DiveUnit
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x2684EF8", Offset = "0x2684EF8", VA = "0x2684EF8")]
			get
			{
				return default(SceneUnit.eUnit);
			}
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x2684EF0", Offset = "0x2684EF0", VA = "0x2684EF0")]
			set
			{
			}
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x267CC74", Offset = "0x267CC74", VA = "0x267CC74")]
		public void CloseWatchesWnd(bool is_btn_hide = false)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x267CD84", Offset = "0x267CD84", VA = "0x267CD84")]
		public void SetWatchesDetailText(string str)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x267CE28", Offset = "0x267CE28", VA = "0x267CE28")]
		public void ClearWatchesDetailText()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x267CEB8", Offset = "0x267CEB8", VA = "0x267CEB8")]
		private void CreateSceneTextWnd()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x267CF84", Offset = "0x267CF84", VA = "0x267CF84")]
		public void AllHideUserName()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x267D060", Offset = "0x267D060", VA = "0x267D060")]
		public void ResetBlnTree()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x267D0F0", Offset = "0x267D0F0", VA = "0x267D0F0")]
		public void CreateTimelineName()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x267D178", Offset = "0x267D178", VA = "0x267D178")]
		private void TimelineSetup(SceneUnit.eUnit unit)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x267D53C", Offset = "0x267D53C", VA = "0x267D53C")]
		public SceneText SetUserName(Player p, Transform target, float offset_y)
		{
			return null;
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x267D2E8", Offset = "0x267D2E8", VA = "0x267D2E8")]
		public void SetUserName(TimelineData p)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x267D508", Offset = "0x267D508", VA = "0x267D508")]
		public SceneText SetBln(TimelineData p)
		{
			return null;
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x267D878", Offset = "0x267D878", VA = "0x267D878")]
		public void SetOVRPos(bool is_all_reset = false)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x267D9A0", Offset = "0x267D9A0", VA = "0x267D9A0")]
		public void SetOVRPos(Vector3 v)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x267D9F4", Offset = "0x267D9F4", VA = "0x267D9F4")]
		public void SetOVRRot(Quaternion rot)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x267D8F4", Offset = "0x267D8F4", VA = "0x267D8F4")]
		public void SetOVRPos(Vector3 v, Quaternion rot, bool is_all_reset = false)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x267DA10", Offset = "0x267DA10", VA = "0x267DA10")]
		public void AddOVRRot(float rot)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x267DAAC", Offset = "0x267DAAC", VA = "0x267DAAC")]
		public void ShowCharaDirUI()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x267DB4C", Offset = "0x267DB4C", VA = "0x267DB4C")]
		public void HideCharaDirUI()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x267DBEC", Offset = "0x267DBEC", VA = "0x267DBEC")]
		public void SetCharaDir(Transform t)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x267DD1C", Offset = "0x267DD1C", VA = "0x267DD1C")]
		public void SetViewSwitcher(RendererViewSwitcher p)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x267DD2C", Offset = "0x267DD2C", VA = "0x267DD2C")]
		private void ChkIn(bool abs = false)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x267DE28", Offset = "0x267DE28", VA = "0x267DE28")]
		public void ShowHand()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x267DE84", Offset = "0x267DE84", VA = "0x267DE84")]
		public void HideHand()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x267DEE0", Offset = "0x267DEE0", VA = "0x267DEE0")]
		public void SetSwitchGrab(bool flg)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x267DF90", Offset = "0x267DF90", VA = "0x267DF90")]
		public void SetRotCam(bool flg)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x267DF94", Offset = "0x267DF94", VA = "0x267DF94")]
		public void InitHaveItem()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x267DFE8", Offset = "0x267DFE8", VA = "0x267DFE8")]
		public void HaveItem(HandGrab grab, PropItemData item, SceneUnit unit)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x267E37C", Offset = "0x267E37C", VA = "0x267E37C")]
		public void HaveItem(Transform t, PropItemData item, SceneUnit unit)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x267E4BC", Offset = "0x267E4BC", VA = "0x267E4BC")]
		public void ReleaseItem(HandGrab grab, PropItemData item)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x267E680", Offset = "0x267E680", VA = "0x267E680")]
		public void ReleaseItem(Transform t, PropItemData item)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x267E76C", Offset = "0x267E76C", VA = "0x267E76C")]
		public Sprite GetIcon(SceneUnit.eUnit unit)
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x267E7FC", Offset = "0x267E7FC", VA = "0x267E7FC")]
		public void ChangeFinder()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x267E864", Offset = "0x267E864", VA = "0x267E864")]
		public bool IsShowFinder()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x267E894", Offset = "0x267E894", VA = "0x267E894")]
		public void FinderOut()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x267E8BC", Offset = "0x267E8BC", VA = "0x267E8BC")]
		public void Snap(float snap_frame)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x267EA24", Offset = "0x267EA24", VA = "0x267EA24")]
		public void Set2DScene()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x267EA28", Offset = "0x267EA28", VA = "0x267EA28")]
		public void SetVRScene()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x267EB64", Offset = "0x267EB64", VA = "0x267EB64")]
		private void UpdateCamState()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x267EB68", Offset = "0x267EB68", VA = "0x267EB68")]
		public void Disconnected()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x267EBFC", Offset = "0x267EBFC", VA = "0x267EBFC")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x267EDAC", Offset = "0x267EDAC", VA = "0x267EDAC")]
		public void SaveRoom(string room_name)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x267EE10", Offset = "0x267EE10", VA = "0x267EE10")]
		public string LoadRoom()
		{
			return null;
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x267EE6C", Offset = "0x267EE6C", VA = "0x267EE6C")]
		public void ClearRoomName()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x267EEC8", Offset = "0x267EEC8", VA = "0x267EEC8")]
		public void SaveRoomMasterID(string id)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x267EF2C", Offset = "0x267EF2C", VA = "0x267EF2C")]
		public string LoadRoomMasterID()
		{
			return null;
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x267EF88", Offset = "0x267EF88", VA = "0x267EF88")]
		public void ClearRoomMasterID()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x267EFE4", Offset = "0x267EFE4", VA = "0x267EFE4")]
		public void ClearKikedRoomName()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x267F038", Offset = "0x267F038", VA = "0x267F038")]
		public void AddKickedRoom(string str)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x267F09C", Offset = "0x267F09C", VA = "0x267F09C")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x267F3BC", Offset = "0x267F3BC", VA = "0x267F3BC")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x267F450", Offset = "0x267F450", VA = "0x267F450")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x267F5A4", Offset = "0x267F5A4", VA = "0x267F5A4")]
		private void HideRoomUI()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x267F634", Offset = "0x267F634", VA = "0x267F634")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x267F6DC", Offset = "0x267F6DC", VA = "0x267F6DC")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x267F784", Offset = "0x267F784", VA = "0x267F784")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x267F830", Offset = "0x267F830", VA = "0x267F830")]
		public void ShowSceneRoot()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x267F8D0", Offset = "0x267F8D0", VA = "0x267F8D0")]
		public void HideSceneRoot()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x267F970", Offset = "0x267F970", VA = "0x267F970")]
		public void ShowFireEffect(bool flg)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x267FA34", Offset = "0x267FA34", VA = "0x267FA34")]
		public void FireSnap()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x267FAC4", Offset = "0x267FAC4", VA = "0x267FAC4")]
		public void FirePause()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x267E2AC", Offset = "0x267E2AC", VA = "0x267E2AC")]
		public void ItemTutComp()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x267FB54", Offset = "0x267FB54", VA = "0x267FB54")]
		public void HaveItem(int item_no, Player sender)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x267FC68", Offset = "0x267FC68", VA = "0x267FC68")]
		public void ReleaseItem(int item_no, Vector3 pos, Vector3 rot, Player sender)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x267FF18", Offset = "0x267FF18", VA = "0x267FF18")]
		public void ItemRev(int item_no, int index)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x2680074", Offset = "0x2680074", VA = "0x2680074")]
		public void ChangeAD()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x26801D0", Offset = "0x26801D0", VA = "0x26801D0")]
		public void Retray()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x26802FC", Offset = "0x26802FC", VA = "0x26802FC")]
		public void ShowSceneTree(bool flg)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x26803B4", Offset = "0x26803B4", VA = "0x26803B4")]
		public void ShowVRTree(bool flg)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x268046C", Offset = "0x268046C", VA = "0x268046C")]
		public void ShowVRSlowTree(bool flg)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x2680524", Offset = "0x2680524", VA = "0x2680524")]
		public string GetAppPath()
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x2680590", Offset = "0x2680590", VA = "0x2680590")]
		private void Awake()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x2680CA8", Offset = "0x2680CA8", VA = "0x2680CA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0AB4", Offset = "0xCF0AB4")]
		private IEnumerator _Awake()
		{
			return null;
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x2680D14", Offset = "0x2680D14", VA = "0x2680D14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x2680E30", Offset = "0x2680E30", VA = "0x2680E30")]
		public void Analytics_Scene(string scene_name)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x267E2FC", Offset = "0x267E2FC", VA = "0x267E2FC")]
		public void Analytics(string event_name)
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x2680E3C", Offset = "0x2680E3C", VA = "0x2680E3C")]
		private void InitSaveData()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x2681564", Offset = "0x2681564", VA = "0x2681564")]
		public void SaveName()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x2680F6C", Offset = "0x2680F6C", VA = "0x2680F6C")]
		public void LoadName()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x26815CC", Offset = "0x26815CC", VA = "0x26815CC")]
		public void SaveUniqueID()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x2680FD4", Offset = "0x2680FD4", VA = "0x2680FD4")]
		public void LoadUniqueID()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x2681634", Offset = "0x2681634", VA = "0x2681634")]
		private void InitUIMgr()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x2681670", Offset = "0x2681670", VA = "0x2681670")]
		private void SetSceneData(SceneData p)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x2681678", Offset = "0x2681678", VA = "0x2681678")]
		public void ToTitleScene()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x2681814", Offset = "0x2681814", VA = "0x2681814")]
		public void FadeToTitle()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x26818E4", Offset = "0x26818E4", VA = "0x26818E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0B14", Offset = "0xCF0B14")]
		private IEnumerator _FadeToTitle()
		{
			return null;
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x26817A8", Offset = "0x26817A8", VA = "0x26817A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0B74", Offset = "0xCF0B74")]
		private IEnumerator _ToTitleScene()
		{
			return null;
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x2681950", Offset = "0x2681950", VA = "0x2681950")]
		public void FadeToRoom()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x268197C", Offset = "0x268197C", VA = "0x268197C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0BD4", Offset = "0xCF0BD4")]
		private IEnumerator _FadeToRoom()
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x26819E8", Offset = "0x26819E8", VA = "0x26819E8")]
		public void ToRoomScene()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x2681A14", Offset = "0x2681A14", VA = "0x2681A14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0C34", Offset = "0xCF0C34")]
		private IEnumerator _ToRoomScene()
		{
			return null;
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x2681A80", Offset = "0x2681A80", VA = "0x2681A80")]
		public void ToDiveScene()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x2681B48", Offset = "0x2681B48", VA = "0x2681B48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0C94", Offset = "0xCF0C94")]
		private IEnumerator _ToDiveScene()
		{
			return null;
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x2681BB4", Offset = "0x2681BB4", VA = "0x2681BB4")]
		public void ToEpiloge()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x2681BD0", Offset = "0x2681BD0", VA = "0x2681BD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0CF4", Offset = "0xCF0CF4")]
		private IEnumerator _SceneDestroy(string unload_scene)
		{
			return null;
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x2681C48", Offset = "0x2681C48", VA = "0x2681C48")]
		public void ToEpiDiveEnd()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x2681D60", Offset = "0x2681D60", VA = "0x2681D60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0D54", Offset = "0xCF0D54")]
		private IEnumerator LoadScene(string scene_name)
		{
			return null;
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x2681DD8", Offset = "0x2681DD8", VA = "0x2681DD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0DB4", Offset = "0xCF0DB4")]
		private IEnumerator UnloadScene(string scene_name)
		{
			return null;
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x2681E44", Offset = "0x2681E44", VA = "0x2681E44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0E14", Offset = "0xCF0E14")]
		private IEnumerator CallGC()
		{
			return null;
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x2681EA0", Offset = "0x2681EA0", VA = "0x2681EA0")]
		public void UnloadTimeLine()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x2680D54", Offset = "0x2680D54", VA = "0x2680D54")]
		private void DestroySceneData()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x2681EBC", Offset = "0x2681EBC", VA = "0x2681EBC")]
		public void InitVRAnchor()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x2681EF0", Offset = "0x2681EF0", VA = "0x2681EF0")]
		private void CreateWatchesUI()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x2682010", Offset = "0x2682010", VA = "0x2682010")]
		public void InitWathesUI()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x2682060", Offset = "0x2682060", VA = "0x2682060")]
		public void RoomWatchesUI()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x26820B0", Offset = "0x26820B0", VA = "0x26820B0")]
		public void DiveSceneWathesUI()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x2682128", Offset = "0x2682128", VA = "0x2682128")]
		public void DiscussionSceneWathesUI()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x2682154", Offset = "0x2682154", VA = "0x2682154")]
		public void VoteSceneWathesUI()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x2682180", Offset = "0x2682180", VA = "0x2682180")]
		public void EpilogeSceneWathesUI()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x26821D0", Offset = "0x26821D0", VA = "0x26821D0")]
		public void ShowWatches()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x26821F0", Offset = "0x26821F0", VA = "0x26821F0")]
		public void SetUIBlockTime(float t = 0.2f, bool is_abs = false)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x2682208", Offset = "0x2682208", VA = "0x2682208")]
		public void UIBlockedCall(float t, Action cb)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x26822C8", Offset = "0x26822C8", VA = "0x26822C8")]
		public void FadeIn(float t)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x2680C60", Offset = "0x2680C60", VA = "0x2680C60")]
		public void FadeOut(float t)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x26823F8", Offset = "0x26823F8", VA = "0x26823F8")]
		public void FadeOut_White(float t)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x26822D4", Offset = "0x26822D4", VA = "0x26822D4")]
		private void SetFadeAlpha(float alpha, float t)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x2682440", Offset = "0x2682440", VA = "0x2682440")]
		public void Update()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x2682748", Offset = "0x2682748", VA = "0x2682748")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x2682534", Offset = "0x2682534", VA = "0x2682534")]
		private void UpdateMgr()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x268283C", Offset = "0x268283C", VA = "0x268283C")]
		private void LateUpdateMgr()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x2682F8C", Offset = "0x2682F8C", VA = "0x2682F8C")]
		public void CallSceneCreate()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x2683064", Offset = "0x2683064", VA = "0x2683064")]
		public void CallSceneDestroy()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x2683140", Offset = "0x2683140", VA = "0x2683140")]
		public void OpenSystemMsg(int type, int index, float time_out = -1f, [Optional] Action<SystemMsgWnd> langcb)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x2683218", Offset = "0x2683218", VA = "0x2683218")]
		public void OpenSystemMsg_Direct(string str, float time_out = -1f)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x26832D0", Offset = "0x26832D0", VA = "0x26832D0")]
		public void OpenYNWnd(int y_type, int y_index, int n_type, int n_index, int detail_type, int detail_index, Action yes_cb, Action no_cb, [Optional] Action<YNDlg> close_cb, int wnd_id = -1, [Optional] Action<YNDlg> langcb)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x26833E0", Offset = "0x26833E0", VA = "0x26833E0")]
		public void OpenYNWnd_Direct(string yes_btn_text, string no_btn_text, string detail_text, Action yes_cb, Action no_cb, [Optional] Action<YNDlg> close_cb, int wnd_id = -1)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x26834D8", Offset = "0x26834D8", VA = "0x26834D8")]
		public void CloseYNWnd(int wnd_id = -1)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x2681894", Offset = "0x2681894", VA = "0x2681894")]
		public void CloseYnWnd()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x268357C", Offset = "0x268357C", VA = "0x268357C")]
		public void OpenOmowaku(int type, int index, float time_out = -1f)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x268363C", Offset = "0x268363C", VA = "0x268363C")]
		public void OpenOmowakuDirect(string msg, float time_out = -1f)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x26836F4", Offset = "0x26836F4", VA = "0x26836F4")]
		public bool IsOpenOmowaku()
		{
			return default(bool);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x2683780", Offset = "0x2683780", VA = "0x2683780")]
		public void CloseOmowaku()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x2683810", Offset = "0x2683810", VA = "0x2683810")]
		public void OpenSystemMsg2(int type, int index, float time_out = -1f, [Optional] Action<SystemMsgWnd> langcb)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x26838E4", Offset = "0x26838E4", VA = "0x26838E4")]
		public void OpenSystemMsg2_Direct(string str, float time_out = -1f)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x268399C", Offset = "0x268399C", VA = "0x268399C")]
		public void CloseSystemMsg2()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x2683A2C", Offset = "0x2683A2C", VA = "0x2683A2C")]
		public void RemoveStockMsg(int pri)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x2683AD0", Offset = "0x2683AD0", VA = "0x2683AD0")]
		public void RemoveStockMsg2(int pri)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x2683B74", Offset = "0x2683B74", VA = "0x2683B74")]
		public void ShowMicChkWnd()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x2683C04", Offset = "0x2683C04", VA = "0x2683C04")]
		public bool IsOpenMicChkWnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x2683C98", Offset = "0x2683C98", VA = "0x2683C98")]
		public void HideMicChkWnd()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x2683D28", Offset = "0x2683D28", VA = "0x2683D28")]
		public void ShowLoading()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x2683D2C", Offset = "0x2683D2C", VA = "0x2683D2C")]
		public void HideLoading()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x2683D30", Offset = "0x2683D30", VA = "0x2683D30")]
		public void ChangeLanguage()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x2683E30", Offset = "0x2683E30", VA = "0x2683E30")]
		public void ChangeLangVo()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x2683E4C", Offset = "0x2683E4C", VA = "0x2683E4C")]
		public void ChangeLangBln()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x2683EDC", Offset = "0x2683EDC", VA = "0x2683EDC")]
		public void Save()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x2683EE0", Offset = "0x2683EE0", VA = "0x2683EE0")]
		public string PlayerName()
		{
			return null;
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x2683F3C", Offset = "0x2683F3C", VA = "0x2683F3C")]
		public void SetPlayerName(string str)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x2683FB4", Offset = "0x2683FB4", VA = "0x2683FB4")]
		public bool IsPlayerName()
		{
			return default(bool);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x267EC98", Offset = "0x267EC98", VA = "0x267EC98")]
		public void CreateUniqueID()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x26840AC", Offset = "0x26840AC", VA = "0x26840AC")]
		public string GetUniqueID()
		{
			return null;
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x26840B4", Offset = "0x26840B4", VA = "0x26840B4")]
		public void SaveMicDevice(string str)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x268140C", Offset = "0x268140C", VA = "0x268140C")]
		public void LoadMicDevice()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x2684148", Offset = "0x2684148", VA = "0x2684148")]
		public void SaveRegion(string str)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x2681474", Offset = "0x2681474", VA = "0x2681474")]
		public string LoadRegion()
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x26841AC", Offset = "0x26841AC", VA = "0x26841AC")]
		public void SetBGMVol(int vol)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x2684238", Offset = "0x2684238", VA = "0x2684238")]
		public void SetVoVol(int vol)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x26842C4", Offset = "0x26842C4", VA = "0x26842C4")]
		public void SetSEVol(int vol)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x2684350", Offset = "0x2684350", VA = "0x2684350")]
		public void SetChatVol(int vol)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x26843DC", Offset = "0x26843DC", VA = "0x26843DC")]
		public void SetSwCam(int cam_spd)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x26811DC", Offset = "0x26811DC", VA = "0x26811DC")]
		public void LoadSound()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x26844A8", Offset = "0x26844A8", VA = "0x26844A8")]
		public int GetBGMVol()
		{
			return default(int);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x26844B0", Offset = "0x26844B0", VA = "0x26844B0")]
		public int GetVoVol()
		{
			return default(int);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x26844B8", Offset = "0x26844B8", VA = "0x26844B8")]
		public int GetSEVol()
		{
			return default(int);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x26844C0", Offset = "0x26844C0", VA = "0x26844C0")]
		public int GetChatVol()
		{
			return default(int);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x26844C8", Offset = "0x26844C8", VA = "0x26844C8")]
		public void SetStyle(int style)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x2684604", Offset = "0x2684604", VA = "0x2684604")]
		public int GetStyle()
		{
			return default(int);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x26812DC", Offset = "0x26812DC", VA = "0x26812DC")]
		public void LoadStyle()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x268460C", Offset = "0x268460C", VA = "0x268460C")]
		public int GetLangBln()
		{
			return default(int);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x2684614", Offset = "0x2684614", VA = "0x2684614")]
		public int GetMatchLang()
		{
			return default(int);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x268447C", Offset = "0x268447C", VA = "0x268447C")]
		public void ChkSwCamSpd()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x26814D0", Offset = "0x26814D0", VA = "0x26814D0")]
		public void LoadSwCam()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x268461C", Offset = "0x268461C", VA = "0x268461C")]
		public int GetSwCam()
		{
			return default(int);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x2684624", Offset = "0x2684624", VA = "0x2684624")]
		public string GetRegion()
		{
			return null;
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x268134C", Offset = "0x268134C", VA = "0x268134C")]
		public void LoadLang()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x2684640", Offset = "0x2684640", VA = "0x2684640")]
		public bool IsGameClear()
		{
			return default(bool);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x2684648", Offset = "0x2684648", VA = "0x2684648")]
		public bool IsPastClear()
		{
			return default(bool);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x2684650", Offset = "0x2684650", VA = "0x2684650")]
		public void SetGameClearFlg(bool flg)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x26810A4", Offset = "0x26810A4", VA = "0x26810A4")]
		public bool LoadGameClearFlg()
		{
			return default(bool);
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x26846DC", Offset = "0x26846DC", VA = "0x26846DC")]
		public void SetPastClearFlg(bool flg)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x2681174", Offset = "0x2681174", VA = "0x2681174")]
		public bool LoadPastClearFlg()
		{
			return default(bool);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x2684768", Offset = "0x2684768", VA = "0x2684768")]
		public bool IsOpenMail()
		{
			return default(bool);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x2684770", Offset = "0x2684770", VA = "0x2684770")]
		public void SetOpenMailFlg(bool flg)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x268110C", Offset = "0x268110C", VA = "0x268110C")]
		public bool LoadOpenMail()
		{
			return default(bool);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x26847F8", Offset = "0x26847F8", VA = "0x26847F8")]
		public bool IsClearInfo()
		{
			return default(bool);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x2684818", Offset = "0x2684818", VA = "0x2684818")]
		public void SetClearInfo(bool flg)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x268103C", Offset = "0x268103C", VA = "0x268103C")]
		public bool LoadClearInfo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x26848A0", Offset = "0x26848A0", VA = "0x26848A0")]
		public int GetMaxPlayer()
		{
			return default(int);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x26848A8", Offset = "0x26848A8", VA = "0x26848A8")]
		public void SetMaxPlayer(int cnt)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x26848B0", Offset = "0x26848B0", VA = "0x26848B0")]
		public bool IsPlayerCnt()
		{
			return default(bool);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x2684920", Offset = "0x2684920", VA = "0x2684920")]
		public void AddDiveCnt()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x2684930", Offset = "0x2684930", VA = "0x2684930")]
		public void SetMicChk(bool flg)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x26816C8", Offset = "0x26816C8", VA = "0x26816C8")]
		public void SetSnap(bool flg)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x2684968", Offset = "0x2684968", VA = "0x2684968")]
		public void InitPastChangePoint()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x267FF84", Offset = "0x267FF84", VA = "0x267FF84")]
		public void AddPastChangePoint(int point)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x26801A0", Offset = "0x26801A0", VA = "0x26801A0")]
		public bool IsAD()
		{
			return default(bool);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x2684970", Offset = "0x2684970", VA = "0x2684970")]
		public bool IsWater()
		{
			return default(bool);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x2684980", Offset = "0x2684980", VA = "0x2684980")]
		public void SetFirstMail()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x26849D4", Offset = "0x26849D4", VA = "0x26849D4")]
		public void SetRec()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x2684A08", Offset = "0x2684A08", VA = "0x2684A08")]
		public void ClearRec()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x2684A20", Offset = "0x2684A20", VA = "0x2684A20")]
		public void RecRoom(int progress, string[] uniqueid, int tips_page, bool is_past)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x2684B74", Offset = "0x2684B74", VA = "0x2684B74")]
		private void RecErrProc()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x2684BC8", Offset = "0x2684BC8", VA = "0x2684BC8")]
		public void RecRoom()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x2684C00", Offset = "0x2684C00", VA = "0x2684C00")]
		public void RecTips()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x2684C58", Offset = "0x2684C58", VA = "0x2684C58")]
		public void RecProloge()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x2684CB4", Offset = "0x2684CB4", VA = "0x2684CB4")]
		public void RecDive()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x2684D14", Offset = "0x2684D14", VA = "0x2684D14")]
		public void RecDiscattion()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x2684D84", Offset = "0x2684D84", VA = "0x2684D84")]
		public void RecVote()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x2684DFC", Offset = "0x2684DFC", VA = "0x2684DFC")]
		public void RecEpi()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x2684E74", Offset = "0x2684E74", VA = "0x2684E74")]
		public void RecEpiAfter()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x2684F00", Offset = "0x2684F00", VA = "0x2684F00")]
		public void SetDiveUnit(SceneUnit.eUnit unit)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x2684F08", Offset = "0x2684F08", VA = "0x2684F08")]
		public void ClearDiveUnit()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x267F184", Offset = "0x267F184", VA = "0x267F184")]
		public void ClearRoomUnit()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x2684F14", Offset = "0x2684F14", VA = "0x2684F14")]
		public void SetRoomUnit(Player player, SceneUnit.eUnit unit)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x2685160", Offset = "0x2685160", VA = "0x2685160")]
		public void SetRoomUniqueID(Player player, string id)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x268520C", Offset = "0x268520C", VA = "0x268520C")]
		public void SetMasterUniqueID(string id)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x2685210", Offset = "0x2685210", VA = "0x2685210")]
		public void SetRoomSnapTut(Player player)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x267D798", Offset = "0x267D798", VA = "0x267D798")]
		public SceneUnitData GetRoomUnit(SceneUnit.eUnit unit)
		{
			return null;
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x26852B8", Offset = "0x26852B8", VA = "0x26852B8")]
		public int GetRoomUnitIndex(SceneUnit.eUnit unit)
		{
			return default(int);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x267D66C", Offset = "0x267D66C", VA = "0x267D66C")]
		public SceneUnitData GetRoomUnit(Player p)
		{
			return null;
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x2685368", Offset = "0x2685368", VA = "0x2685368")]
		public SceneUnitData GetRoomUnit(string uniqueid)
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x26854EC", Offset = "0x26854EC", VA = "0x26854EC")]
		public SceneUnit.eUnit GetRoomUnitIndex(int index)
		{
			return default(SceneUnit.eUnit);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x26855D0", Offset = "0x26855D0", VA = "0x26855D0")]
		public Player GetRoomPlayerIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x26856B4", Offset = "0x26856B4", VA = "0x26856B4")]
		public int GetRoomUnitMeIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x2685820", Offset = "0x2685820", VA = "0x2685820")]
		public void ShowTips()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x2685940", Offset = "0x2685940", VA = "0x2685940")]
		public void TipsSkip(int skip)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x2685A64", Offset = "0x2685A64", VA = "0x2685A64")]
		public bool IsItemTutComp()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x2685B80", Offset = "0x2685B80", VA = "0x2685B80")]
		public void AllItemTutComp()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x2685C20", Offset = "0x2685C20", VA = "0x2685C20")]
		public bool IsSnapTutComp()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x2685D3C", Offset = "0x2685D3C", VA = "0x2685D3C")]
		public void AllSnapTutComp()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x2685E0C", Offset = "0x2685E0C", VA = "0x2685E0C")]
		public void ToProloge()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x2685F2C", Offset = "0x2685F2C", VA = "0x2685F2C")]
		public bool ToDive()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x2686048", Offset = "0x2686048", VA = "0x2686048")]
		public bool IsRoomScene()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x2686160", Offset = "0x2686160", VA = "0x2686160")]
		public bool IsDiveScene()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x2686278", Offset = "0x2686278", VA = "0x2686278")]
		public void SetLightPer(float per, float t)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x2682DA4", Offset = "0x2682DA4", VA = "0x2682DA4")]
		private void UpdateLightPer()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x26862B0", Offset = "0x26862B0", VA = "0x26862B0")]
		public void SetLightPow(float per, float t)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x2682E20", Offset = "0x2682E20", VA = "0x2682E20")]
		private void UpdateLightPow()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x267F514", Offset = "0x267F514", VA = "0x267F514")]
		public void InitProgress()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x26802F0", Offset = "0x26802F0", VA = "0x26802F0")]
		public void InitWaitMember()
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x2686320", Offset = "0x2686320", VA = "0x2686320")]
		public void AddWaitMember()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x2686330", Offset = "0x2686330", VA = "0x2686330")]
		public void SetWaitMenverClear()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x268633C", Offset = "0x268633C", VA = "0x268633C")]
		public bool IsWaitMember()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x26863C0", Offset = "0x26863C0", VA = "0x26863C0")]
		public void ReqSnap(SnapData p, SceneUnit.eUnit unit, Player sender)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x2686724", Offset = "0x2686724", VA = "0x2686724")]
		private void SnapLangCBOpen(SystemMsgWnd wnd)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x2686910", Offset = "0x2686910", VA = "0x2686910")]
		private void SnapLangCB(YNDlg wnd)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x2686A3C", Offset = "0x2686A3C", VA = "0x2686A3C")]
		public void ChkPic(SnapData p)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x26865EC", Offset = "0x26865EC", VA = "0x26865EC")]
		private void OpenPic()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x2686A4C", Offset = "0x2686A4C", VA = "0x2686A4C")]
		private void ClosePic()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x2686A54", Offset = "0x2686A54", VA = "0x2686A54")]
		public void TimeCountStart()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x2686B38", Offset = "0x2686B38", VA = "0x2686B38")]
		public void CountChk(float t)
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x2686C20", Offset = "0x2686C20", VA = "0x2686C20")]
		public void TimeOutProc()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x2686CB8", Offset = "0x2686CB8", VA = "0x2686CB8")]
		public void GameEnd()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x2686DD0", Offset = "0x2686DD0", VA = "0x2686DD0")]
		public void Recv_RecDive(int rec_type, int dive_cnt, float t, int bgm_no, int vote_result, bool is_past, int past_point)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x2686F50", Offset = "0x2686F50", VA = "0x2686F50")]
		public void ReDive()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x2687068", Offset = "0x2687068", VA = "0x2687068")]
		public void ToVote()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x26871AC", Offset = "0x26871AC", VA = "0x26871AC")]
		public void InitVoteData()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x2687200", Offset = "0x2687200", VA = "0x2687200")]
		public void AddVoteData(SceneUnit.eUnit unit, int index)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x268739C", Offset = "0x268739C", VA = "0x268739C")]
		private void RemoveVoteData(SceneUnit.eUnit unit)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x26872BC", Offset = "0x26872BC", VA = "0x26872BC")]
		private VoteData SearchVoteData(SceneUnit.eUnit unit)
		{
			return null;
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x2687420", Offset = "0x2687420", VA = "0x2687420")]
		public void Vote(int index, bool is_me, Player sender)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x2687578", Offset = "0x2687578", VA = "0x2687578")]
		public void CanselVote(int index, bool is_me, Player sender)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x26876CC", Offset = "0x26876CC", VA = "0x26876CC")]
		public void UpdateVoteWnd()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x26877E4", Offset = "0x26877E4", VA = "0x26877E4")]
		public void VoteTimeUp(int vote_cnt)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x2687904", Offset = "0x2687904", VA = "0x2687904")]
		public void SetVoteResult(int vote)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x2687A24", Offset = "0x2687A24", VA = "0x2687A24")]
		public void RandomVote(int vote)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x2687B44", Offset = "0x2687B44", VA = "0x2687B44")]
		public void EpiDive()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x2687C5C", Offset = "0x2687C5C", VA = "0x2687C5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0E74", Offset = "0xCF0E74")]
		public IEnumerator PressWait(float time_out_time = -1f)
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x2687CD8", Offset = "0x2687CD8", VA = "0x2687CD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0ED4", Offset = "0xCF0ED4")]
		public IEnumerator FadeWait()
		{
			return null;
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x2687D44", Offset = "0x2687D44", VA = "0x2687D44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0F34", Offset = "0xCF0F34")]
		public IEnumerator WaitSysMsgClose()
		{
			return null;
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x2687DB0", Offset = "0x2687DB0", VA = "0x2687DB0")]
		public bool IsSysMsgOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x2683214", Offset = "0x2683214", VA = "0x2683214")]
		public void ChkMenuBtnColor()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x2687E50", Offset = "0x2687E50", VA = "0x2687E50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0F94", Offset = "0xCF0F94")]
		public IEnumerator CallBackWait(float t, Action cb)
		{
			return null;
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x2687EDC", Offset = "0x2687EDC", VA = "0x2687EDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF0FF4", Offset = "0xCF0FF4")]
		public IEnumerator CallBackWaitSkip(float t, Action cb)
		{
			return null;
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x2687F64", Offset = "0x2687F64", VA = "0x2687F64")]
		public void PlaySceneBGM(int bgm_index, float fade_time)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x2688024", Offset = "0x2688024", VA = "0x2688024")]
		public void StopSceneBGM(int bgm_index, float fade_time)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x26880E4", Offset = "0x26880E4", VA = "0x26880E4")]
		public void InitTransform(Transform parent, Transform child)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x2688214", Offset = "0x2688214", VA = "0x2688214")]
		public void SetLocalPosX(Transform target, float x)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x268826C", Offset = "0x268826C", VA = "0x268826C")]
		public void SetLocalPosY(Transform target, float y)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x26882C4", Offset = "0x26882C4", VA = "0x26882C4")]
		public void SetLocalPosY(Transform target, float y, Vector3 dir)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x2688338", Offset = "0x2688338", VA = "0x2688338")]
		public void SetLocalPosZ(Transform target, float z)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x267EA84", Offset = "0x267EA84", VA = "0x267EA84")]
		public void SetLocalPos(Transform target, float x, float y, float z)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x2688390", Offset = "0x2688390", VA = "0x2688390")]
		public Vector3 ClampXZ(Vector3 pos, float x, float z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x26883E0", Offset = "0x26883E0", VA = "0x26883E0")]
		public Vector3 ClampXZ(Transform target, float x, float z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x268846C", Offset = "0x268846C", VA = "0x268846C")]
		public void RotateYOnly(Transform target)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x26884E8", Offset = "0x26884E8", VA = "0x26884E8")]
		public void SetLocalRotate(Transform target, float x, float y, float z)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x2688584", Offset = "0x2688584", VA = "0x2688584")]
		public void SetLocalRotate(Transform target, Quaternion local_rot)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x26885A0", Offset = "0x26885A0", VA = "0x26885A0")]
		public void SetLocalRotateX(Transform target, float x)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x2688624", Offset = "0x2688624", VA = "0x2688624")]
		public void SetLocalRotateY(Transform target, float y)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x26886A8", Offset = "0x26886A8", VA = "0x26886A8")]
		public void SetLocalRotateZ(Transform target, float z)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x268872C", Offset = "0x268872C", VA = "0x268872C")]
		public void SetRotateX(Transform target, float x)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x26887B0", Offset = "0x26887B0", VA = "0x26887B0")]
		public void SetRotateY(Transform target, float y)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x2688834", Offset = "0x2688834", VA = "0x2688834")]
		public void AddLocalRotX(Transform target, float x)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x26888B8", Offset = "0x26888B8", VA = "0x26888B8")]
		public void AddLocalRotY(Transform target, float y)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x268893C", Offset = "0x268893C", VA = "0x268893C")]
		public void AddPos(Transform target, Vector3 add_pos)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x267DA58", Offset = "0x267DA58", VA = "0x267DA58")]
		public void AddRotY(Transform target, float add_rot)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x26889AC", Offset = "0x26889AC", VA = "0x26889AC")]
		public void SetScale(Transform target, float scale)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x267EAF4", Offset = "0x267EAF4", VA = "0x267EAF4")]
		public void SetScale(Transform target, float x, float y, float z)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x2688A0C", Offset = "0x2688A0C", VA = "0x2688A0C")]
		public void SetScaleY(Transform target, float y)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x2688A64", Offset = "0x2688A64", VA = "0x2688A64")]
		public Transform GetTransform(Vector3 pos, Vector3 localpos)
		{
			return null;
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x2688AE0", Offset = "0x2688AE0", VA = "0x2688AE0")]
		public Vector3 LookAt(Vector3 pos, Vector3 targetpos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x2688C28", Offset = "0x2688C28", VA = "0x2688C28")]
		public Vector3 LookAt_Forward(Vector3 pos, Vector3 targetpos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x2688D5C", Offset = "0x2688D5C", VA = "0x2688D5C")]
		private Vector3 ToInt(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x2682E9C", Offset = "0x2682E9C", VA = "0x2682E9C")]
		public void CopyTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x2688DBC", Offset = "0x2688DBC", VA = "0x2688DBC")]
		public Vector3 NormAngle(Vector3 r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x2688E64", Offset = "0x2688E64", VA = "0x2688E64")]
		public float NormRot(float rot)
		{
			return default(float);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x2688EA4", Offset = "0x2688EA4", VA = "0x2688EA4")]
		public void SetBtnCallBack(UI_OverBtn btn, Action press_cb, Action hover_cb, [Optional] Action hover_end_cb)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x2688FA0", Offset = "0x2688FA0", VA = "0x2688FA0")]
		public void SetBtnCallBack(UI_OverBtn btn, Action<UI_OverBtn> press_cb, Action hover_cb, [Optional] Action hover_end_cb)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x2689098", Offset = "0x2689098", VA = "0x2689098")]
		public void SetBtnCallBack(List<UI_OverBtn> btn, Action<UI_OverBtn> press_cb, Action hover_cb)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x2689144", Offset = "0x2689144", VA = "0x2689144")]
		public void SetBtnCallBack(UI_OverBtn[] btn, Action<UI_OverBtn> press_cb, Action hover_cb)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x26891D0", Offset = "0x26891D0", VA = "0x26891D0")]
		public string CodeToStr(string code)
		{
			return null;
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x268968C", Offset = "0x268968C", VA = "0x268968C")]
		public void SetBtnLabel(List<UI_OverBtn> btn, int type, int index)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x2689744", Offset = "0x2689744", VA = "0x2689744")]
		public void SetBtnLabel(UI_OverBtn btn, int type, int index)
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x2689810", Offset = "0x2689810", VA = "0x2689810")]
		public void SetBtnLabel_Direct(UI_OverBtn btn, string str)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x26898B0", Offset = "0x26898B0", VA = "0x26898B0")]
		public void SetLabel(TextMeshProUGUI t, int type, int index, bool is_change_font = true, bool is_outline = false)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x2689AAC", Offset = "0x2689AAC", VA = "0x2689AAC")]
		public void SetLabel(TextMeshProUGUI t, string str)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x2689B68", Offset = "0x2689B68", VA = "0x2689B68")]
		public void SetLabel(TextMeshPro t, int type, int index, bool is_outline = false)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x2689C50", Offset = "0x2689C50", VA = "0x2689C50")]
		private void SetTextFont(TextMeshPro t, bool is_outline = false)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x26899AC", Offset = "0x26899AC", VA = "0x26899AC")]
		private void SetTextFont(TextMeshProUGUI t, bool is_outline = false)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x2689D50", Offset = "0x2689D50", VA = "0x2689D50")]
		public void SetLabel(Text t, int type, int index)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x2689E6C", Offset = "0x2689E6C", VA = "0x2689E6C")]
		public void SetLabel_Direct(TextMeshProUGUI t, string str)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x2689F5C", Offset = "0x2689F5C", VA = "0x2689F5C")]
		public void SetLabel_Direct(Text t, string str)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x268A04C", Offset = "0x268A04C", VA = "0x268A04C")]
		public void SetVoLabel(TextMeshProUGUI t, int type, int index)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x268A178", Offset = "0x268A178", VA = "0x268A178")]
		public void SetUnitTypeText(TextMeshProUGUI t, SceneUnit.eUnit unit)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x26867F8", Offset = "0x26867F8", VA = "0x26867F8")]
		public string GetLabel(int type, int index)
		{
			return null;
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x268A2B4", Offset = "0x268A2B4", VA = "0x268A2B4")]
		public void SetSprite(Image img, Sprite sp)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x268A288", Offset = "0x268A288", VA = "0x268A288")]
		public string GetUnitTypeText(SceneUnit.eUnit unit)
		{
			return null;
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x268A3D4", Offset = "0x268A3D4", VA = "0x268A3D4")]
		public GameObject CreateObject(string path)
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x268A5E8", Offset = "0x268A5E8", VA = "0x268A5E8")]
		public GameObject CreateObject(string path, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001411")]
		public T CreateObject<T>(string path, Transform parent)
		{
			return (T)null;
		}

		[Token(Token = "0x6001412")]
		public void DestroyObject<T>(List<T> list) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6001413")]
		public void NullRemove<T>(List<T> list) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x268A62C", Offset = "0x268A62C", VA = "0x268A62C")]
		public void RemoveBGM(BGM p)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x268A640", Offset = "0x268A640", VA = "0x268A640")]
		public RenderTexture CreateRenderTex(int w, int h, int depth, RenderTextureFormat format)
		{
			return null;
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x268A65C", Offset = "0x268A65C", VA = "0x268A65C")]
		public void DestroyTex(List<Texture2D> p)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x268A708", Offset = "0x268A708", VA = "0x268A708")]
		public void DestroyTex(Texture2D p)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x268A7A8", Offset = "0x268A7A8", VA = "0x268A7A8")]
		public void DestroyTex(RenderTexture p)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x268A878", Offset = "0x268A878", VA = "0x268A878")]
		public void DestroyTex(Texture p)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x268A918", Offset = "0x268A918", VA = "0x268A918")]
		public Transform GetUIParentTree()
		{
			return null;
		}

		[Token(Token = "0x600141B")]
		public T CreateUIWnd<T>(string path)
		{
			return (T)null;
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x268A934", Offset = "0x268A934", VA = "0x268A934")]
		public void OpenWndFocus(UIInputTree ui)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x268A978", Offset = "0x268A978", VA = "0x268A978")]
		public void SetFocus(FocusGrp grp, bool is_sel = false, float move_time = 0.2f)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x268A97C", Offset = "0x268A97C", VA = "0x268A97C")]
		public void SetFocus(FocusGrp grp, int index)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x268A980", Offset = "0x268A980", VA = "0x268A980")]
		public void CloseWndFocus(UIInputTree ui)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x268A9C4", Offset = "0x268A9C4", VA = "0x268A9C4")]
		public void RemoveFocusRet(FocusGrp grp)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x268A9C8", Offset = "0x268A9C8", VA = "0x268A9C8")]
		public void RemoveFocus(FocusGrp grp)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x268A9CC", Offset = "0x268A9CC", VA = "0x268A9CC")]
		public void TopFocusNullChk()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x268A9D0", Offset = "0x268A9D0", VA = "0x268A9D0")]
		public void SetImageAlpha(Image image, float alpha)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x268AA3C", Offset = "0x268AA3C", VA = "0x268AA3C")]
		public void SetImageAlpha(SpriteRenderer image, float alpha)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x2686814", Offset = "0x2686814", VA = "0x2686814")]
		public string FloatToMinSec(float t, bool is_min_one = false)
		{
			return null;
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x268AA98", Offset = "0x268AA98", VA = "0x268AA98")]
		public void CountStart(float min, Action cb, Action chkcb, Action timeout_cb)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x2682C38", Offset = "0x2682C38", VA = "0x2682C38")]
		public void CountDownProc()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x2683050", Offset = "0x2683050", VA = "0x2683050")]
		public void InitCountDown()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x268ABA0", Offset = "0x268ABA0", VA = "0x268ABA0")]
		public void MemberOut(float t = 180f, [Optional] string nick_name)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x268AC80", Offset = "0x268AC80", VA = "0x268AC80")]
		public void MemberChkClear()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x2682D74", Offset = "0x2682D74", VA = "0x2682D74")]
		private void MemberChkPrpc()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x268ACB0", Offset = "0x268ACB0", VA = "0x268ACB0")]
		private void ShowIsEnd()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x268ADA0", Offset = "0x268ADA0", VA = "0x268ADA0")]
		private void Y_End()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x268ADC0", Offset = "0x268ADC0", VA = "0x268ADC0")]
		private void N_End()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x268ADCC", Offset = "0x268ADCC", VA = "0x268ADCC")]
		public List<string> GetTbl(string tbl)
		{
			return null;
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x268AF44", Offset = "0x268AF44", VA = "0x268AF44")]
		public void SetMicDevice()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x268B0A8", Offset = "0x268B0A8", VA = "0x268B0A8")]
		public bool MicDeviceUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x268B420", Offset = "0x268B420", VA = "0x268B420")]
		public void RecreateMic()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x268B44C", Offset = "0x268B44C", VA = "0x268B44C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF1054", Offset = "0xCF1054")]
		public IEnumerator _RecreateMic()
		{
			return null;
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x268B4B8", Offset = "0x268B4B8", VA = "0x268B4B8")]
		public void SetupMic()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x268B4E4", Offset = "0x268B4E4", VA = "0x268B4E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCF10B4", Offset = "0xCF10B4")]
		public IEnumerator _SetupMic()
		{
			return null;
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x268B550", Offset = "0x268B550", VA = "0x268B550")]
		public void ShowMicMsg()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x268B5A0", Offset = "0x268B5A0", VA = "0x268B5A0")]
		public void ChangeLanguageText(int lang)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x268B628", Offset = "0x268B628", VA = "0x268B628")]
		public void ChangeLanguageVo(int vo)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x268B6B8", Offset = "0x268B6B8", VA = "0x268B6B8")]
		public void ChangeLanguageBln(int bln)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x268B734", Offset = "0x268B734", VA = "0x268B734")]
		public bool IsShowLangBln()
		{
			return default(bool);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x268B744", Offset = "0x268B744", VA = "0x268B744")]
		public void ChangeMatchLang(int lang)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x268B7BC", Offset = "0x268B7BC", VA = "0x268B7BC")]
		public GameMgr()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class HandGrab : MonoBehaviour
	{
		[Token(Token = "0x200029B")]
		public enum eHandGrab
		{
			[Token(Token = "0x4001346")]
			Left,
			[Token(Token = "0x4001347")]
			Right
		}

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eHandGrab mHand;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform GrabTree;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private cListInter GrabOffset;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private cInter Per;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider mCol;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Collider Prop;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Collider HaveProp;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PropItemData have_item;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GrabArea mGrabArea;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject SwitchTarget;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform RotTree;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public cInter RotZ;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 sub_pos;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion sub_q;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool is_grab;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool is_tri;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		private bool is_release;

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x27518D4", Offset = "0x27518D4", VA = "0x27518D4")]
		public bool IsHaveItem()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x2751940", Offset = "0x2751940", VA = "0x2751940")]
		private void ChangeRot()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x275198C", Offset = "0x275198C", VA = "0x275198C")]
		private void InitRot()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x2751A58", Offset = "0x2751A58", VA = "0x2751A58")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x2751B68", Offset = "0x2751B68", VA = "0x2751B68")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x2751C78", Offset = "0x2751C78", VA = "0x2751C78")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x2751DC4", Offset = "0x2751DC4", VA = "0x2751DC4")]
		private void EnterProp()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x2751EB0", Offset = "0x2751EB0", VA = "0x2751EB0")]
		private void ExitProp()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x2751F9C", Offset = "0x2751F9C", VA = "0x2751F9C")]
		private void ExitProp(Collider other)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x27520C4", Offset = "0x27520C4", VA = "0x27520C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x2752170", Offset = "0x2752170", VA = "0x2752170")]
		public void CallUpdate()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x2752258", Offset = "0x2752258", VA = "0x2752258")]
		public void CallLateUpdate()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x2752C3C", Offset = "0x2752C3C", VA = "0x2752C3C")]
		public HandGrab()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class IKMgr : MonoBehaviour
	{
		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvaterAim AvaterAimPrefab;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AvaterAim> AvaterAimList;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<IK_Data> IKDataList;

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x275A9D0", Offset = "0x275A9D0", VA = "0x275A9D0")]
		public void Init()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x275AAFC", Offset = "0x275AAFC", VA = "0x275AAFC")]
		public void Remove()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x275ACC4", Offset = "0x275ACC4", VA = "0x275ACC4")]
		public void AddIK(IK_Data p)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x275AD28", Offset = "0x275AD28", VA = "0x275AD28")]
		public void IKUpdate(float t)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x275AE64", Offset = "0x275AE64", VA = "0x275AE64")]
		private void UpdateAim(IK_Data p)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x275B014", Offset = "0x275B014", VA = "0x275B014")]
		private void UpdateAvaterAim(AvaterAim p)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x275B1A8", Offset = "0x275B1A8", VA = "0x275B1A8")]
		public AvaterAim SetAvaterIK(Transform target_avater)
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x275B2B8", Offset = "0x275B2B8", VA = "0x275B2B8")]
		public IKMgr()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class IK_Data
	{
		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AimIK mAimIK;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK_Space mIK_Space;

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x2301EE4", Offset = "0x2301EE4", VA = "0x2301EE4")]
		public float GetWeight()
		{
			return default(float);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x2301EEC", Offset = "0x2301EEC", VA = "0x2301EEC")]
		public IK_Data()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class cInputMgr : MonoBehaviour
	{
		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float l_tri;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float old_l_tri;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int l_tri_press;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float r_tri;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float old_r_tri;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int r_tri_press;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float l_grab;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float old_l_grab;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int l_grab_press;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float r_grab;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float old_r_grab;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int r_grab_press;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool l_grabgrip;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool old_l_grabgrip;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int l_grabgrip_press;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool r_grabgrip;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool old_r_grabgrip;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int r_grabgrip_press;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 stick_l;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector2 stick_r;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 old_stick_r;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool l_stick_btn;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool r_stick_btn;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool old_l_stick_btn;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		private bool old_r_stick_btn;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int l_stick_btn_press;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int r_stick_btn_press;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool l_turn_btn;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool r_turn_btn;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		private bool old_l_turn_btn;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		private bool old_r_turn_btn;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int l_turn_btn_press;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int r_turn_btn_press;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool btn_a;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool old_btn_a;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int btn_a_press;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool btn_b;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool old_btn_b;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int btn_b_press;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool btn_x;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool old_btn_x;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int btn_x_press;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool btn_y;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool old_btn_y;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int btn_y_press;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool l_bumper;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool old_l_bumper;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int l_bumper_press;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool r_bumper;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool old_r_bumper;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int r_bumper_press;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int btn_press;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int KeyBord_Escape;

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x2716890", Offset = "0x2716890", VA = "0x2716890")]
		public int L_Tri_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x2716898", Offset = "0x2716898", VA = "0x2716898")]
		public int R_Tri_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x27168A0", Offset = "0x27168A0", VA = "0x27168A0")]
		public int MousePress()
		{
			return default(int);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x27168A8", Offset = "0x27168A8", VA = "0x27168A8")]
		public int L_Grab_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x27168B0", Offset = "0x27168B0", VA = "0x27168B0")]
		public int R_Grab_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x27168B8", Offset = "0x27168B8", VA = "0x27168B8")]
		public int L_GrabGrip_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x27168C0", Offset = "0x27168C0", VA = "0x27168C0")]
		public int R_GrabGrip_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x27168C8", Offset = "0x27168C8", VA = "0x27168C8")]
		public int L_Turn_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x27168D0", Offset = "0x27168D0", VA = "0x27168D0")]
		public int R_Turn_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x27168D8", Offset = "0x27168D8", VA = "0x27168D8")]
		public int A_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x27168E0", Offset = "0x27168E0", VA = "0x27168E0")]
		public int B_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x27168E8", Offset = "0x27168E8", VA = "0x27168E8")]
		public int X_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x27168F0", Offset = "0x27168F0", VA = "0x27168F0")]
		public int Y_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x27168F8", Offset = "0x27168F8", VA = "0x27168F8")]
		public Vector2 L_Stick()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x2716900", Offset = "0x2716900", VA = "0x2716900")]
		public Vector2 R_Stick()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x2716908", Offset = "0x2716908", VA = "0x2716908")]
		public float R_StickX_Push()
		{
			return default(float);
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x2716958", Offset = "0x2716958", VA = "0x2716958")]
		public int L_Bunper_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x2716960", Offset = "0x2716960", VA = "0x2716960")]
		public int R_Bunper_Press()
		{
			return default(int);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x2716968", Offset = "0x2716968", VA = "0x2716968")]
		public bool Is_L_Bunper_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x2716978", Offset = "0x2716978", VA = "0x2716978")]
		public bool Is_R_Bunper_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x2716988", Offset = "0x2716988", VA = "0x2716988")]
		public bool Is_L_Tri_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x27169C8", Offset = "0x27169C8", VA = "0x27169C8")]
		public bool Is_L_Tri_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x27169EC", Offset = "0x27169EC", VA = "0x27169EC")]
		public bool Is_R_Tri_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x2716A2C", Offset = "0x2716A2C", VA = "0x2716A2C")]
		public bool Is_Mouse_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x2716A40", Offset = "0x2716A40", VA = "0x2716A40")]
		public bool Is_L_Grab_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x2716A80", Offset = "0x2716A80", VA = "0x2716A80")]
		public bool Is_R_Grab_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x2716A6C", Offset = "0x2716A6C", VA = "0x2716A6C")]
		public bool Is_L_GrabGrip_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x2716AC0", Offset = "0x2716AC0", VA = "0x2716AC0")]
		public bool Is_L_GrabGrip_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x2716AAC", Offset = "0x2716AAC", VA = "0x2716AAC")]
		public bool Is_R_GrabGrip_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x2716AD0", Offset = "0x2716AD0", VA = "0x2716AD0")]
		public bool Is_R_GrabGrip_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x2716AE0", Offset = "0x2716AE0", VA = "0x2716AE0")]
		public bool Is_R_Turn_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x2716AF0", Offset = "0x2716AF0", VA = "0x2716AF0")]
		public bool Is_L_Turn_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x2716B00", Offset = "0x2716B00", VA = "0x2716B00")]
		public bool Is_A_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x2716B14", Offset = "0x2716B14", VA = "0x2716B14")]
		public bool Is_A_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x2716B24", Offset = "0x2716B24", VA = "0x2716B24")]
		public bool Is_B_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x2716B38", Offset = "0x2716B38", VA = "0x2716B38")]
		public bool Is_B_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x2716B48", Offset = "0x2716B48", VA = "0x2716B48")]
		public bool Is_X_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x2716B5C", Offset = "0x2716B5C", VA = "0x2716B5C")]
		public bool Is_X_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x2716B6C", Offset = "0x2716B6C", VA = "0x2716B6C")]
		public bool Is_Y_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x2716B80", Offset = "0x2716B80", VA = "0x2716B80")]
		public bool Is_Y_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x27169B4", Offset = "0x27169B4", VA = "0x27169B4")]
		public bool Is_L_Bunper_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x2716A18", Offset = "0x2716A18", VA = "0x2716A18")]
		public bool Is_R_Bunper_Press()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x2716B90", Offset = "0x2716B90", VA = "0x2716B90")]
		public bool IsPress()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x2716C2C", Offset = "0x2716C2C", VA = "0x2716C2C")]
		public bool Is_L_Stick_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x2716C3C", Offset = "0x2716C3C", VA = "0x2716C3C")]
		public bool Is_R_Stick_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x2716C4C", Offset = "0x2716C4C", VA = "0x2716C4C")]
		public bool Is_Plus_Push()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x2716C54", Offset = "0x2716C54", VA = "0x2716C54")]
		public Vector3 GetAccL()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x2716CC8", Offset = "0x2716CC8", VA = "0x2716CC8")]
		public Vector3 GetAccR()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x2716D3C", Offset = "0x2716D3C", VA = "0x2716D3C")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x27173A8", Offset = "0x27173A8", VA = "0x27173A8")]
		public cInputMgr()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class cUIMgr : MonoBehaviour
	{
		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform UITree;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SceneUITree;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform VRUITree;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform BlnTree;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Camera VRCamera;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SpriteRenderer Ponter_L;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SpriteRenderer Ponter_R;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LineRenderer PointerLine_L;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LineRenderer PointerLine_R;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform VR_CenterPos;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform VR_OffsetPos;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform VR_SlowCenterPos;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform WatchPos2D;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SystemMsgWnd mSystemMsgWnd;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public YNDlg mYnWnd;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public OmowakuWnd mOmowakuWnd;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SystemMsgWnd mSystemMsgWnd2;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MicChkWnd mMicChkWnd;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Ray UI2DRay;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Ray L_Ray;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Ray R_Ray;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Ray Finger_Ray;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float Finger_Distance;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Transform L_RaycastStartTransform;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Transform R_RaycastStartTransform;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Transform L_RayTargetT;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform R_RayTargetT;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Transform F_RaycastStartTransform;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Camera UI2DCamera;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int TargetLayer;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xCE9C40", Offset = "0xCE9C40")]
		public int _search_panel;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<UIInputTree> mUTree;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int max_priority;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool finger_raycast_hit;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public RaycastHit ui_raycast_hit;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector3 v;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float update_vr_cam_time;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private cInter vr_rot_per;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Quaternion to_rot;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion from_rot;

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x271AA00", Offset = "0x271AA00", VA = "0x271AA00")]
		public void ShowPointer(bool flg)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x271AA60", Offset = "0x271AA60", VA = "0x271AA60")]
		public void SetVRCamera(Camera cam)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x271AA68", Offset = "0x271AA68", VA = "0x271AA68")]
		public void SetBaseFocus(FocusGrp p)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x271AA6C", Offset = "0x271AA6C", VA = "0x271AA6C")]
		public void SetForcus(FocusGrp p)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x271AA70", Offset = "0x271AA70", VA = "0x271AA70")]
		public void RemoveFocus(List<FocusGrp> p)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x271AA74", Offset = "0x271AA74", VA = "0x271AA74")]
		public void ChkTopFocus()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x271AA78", Offset = "0x271AA78", VA = "0x271AA78")]
		public void Remove()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x271AA7C", Offset = "0x271AA7C", VA = "0x271AA7C")]
		public void Set3DUI(Transform l_t, Transform r_t, Transform f_t, Transform lt, Transform rt)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x271ABA4", Offset = "0x271ABA4", VA = "0x271ABA4")]
		public void Set2DCam(Camera cam)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x271ABB4", Offset = "0x271ABB4", VA = "0x271ABB4")]
		public void UpdateCamState()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x271ABC0", Offset = "0x271ABC0", VA = "0x271ABC0")]
		public void SetUILayer()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x271AC14", Offset = "0x271AC14", VA = "0x271AC14")]
		public void SearchPanel()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x271ACC4", Offset = "0x271ACC4", VA = "0x271ACC4")]
		public void AddUI(UIInputTree p)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x271AE40", Offset = "0x271AE40", VA = "0x271AE40")]
		public void UpdateUIIndex()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x271B15C", Offset = "0x271B15C", VA = "0x271B15C")]
		public void ChangeLanguage()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x271B270", Offset = "0x271B270", VA = "0x271B270")]
		private void SetMaxPriority(int pri)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x271B284", Offset = "0x271B284", VA = "0x271B284")]
		public void UIUpdate()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x271C4A8", Offset = "0x271C4A8", VA = "0x271C4A8")]
		private void ChkRayCast()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x271C140", Offset = "0x271C140", VA = "0x271C140")]
		private void UpdateVRCamPos()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x271C6C0", Offset = "0x271C6C0", VA = "0x271C6C0")]
		private Vector3 SubAngle(Quaternion from, Quaternion to)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x271C798", Offset = "0x271C798", VA = "0x271C798")]
		public void OpenSystemMsg(int type, int index, float time_out = -1f, [Optional] Action<SystemMsgWnd> langcb)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x271C874", Offset = "0x271C874", VA = "0x271C874")]
		public void OpenSystemMsg_Direct(string str, float time_out = -1f)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x271C934", Offset = "0x271C934", VA = "0x271C934")]
		public void OpenYNMsg(int y_type, int y_index, int n_type, int n_index, int detail_type, int detail_index, Action yes_cb, Action no_cb, [Optional] Action<YNDlg> close_cb, int wnd_id = -1, [Optional] Action<YNDlg> langcb)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x271CA6C", Offset = "0x271CA6C", VA = "0x271CA6C")]
		public void OpenYNMsg_Direct(string yes_btn_text, string no_btn_text, string detail_text, Action yes_cb, Action no_cb, [Optional] Action<YNDlg> close_cb, int wnd_id = -1)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x271CB60", Offset = "0x271CB60", VA = "0x271CB60")]
		public void CloseYNWnd(int wnd_id = -1)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x271CC30", Offset = "0x271CC30", VA = "0x271CC30")]
		public void OpenOmowaku(int index, float show_time)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x271CCE8", Offset = "0x271CCE8", VA = "0x271CCE8")]
		public void OpenOmowaku(int type, int index, float show_time)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x271CDA8", Offset = "0x271CDA8", VA = "0x271CDA8")]
		public void OpenOmowakuDirect(string msg, float show_time)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x271CE60", Offset = "0x271CE60", VA = "0x271CE60")]
		public bool IsOpenOmowaku()
		{
			return default(bool);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x271CEF4", Offset = "0x271CEF4", VA = "0x271CEF4")]
		public void CloseOmowaku()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x271CF88", Offset = "0x271CF88", VA = "0x271CF88")]
		public void OpenSystemMsg2(int type, int index, float time_out = -1f, [Optional] Action<SystemMsgWnd> langcb)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x271D064", Offset = "0x271D064", VA = "0x271D064")]
		public void OpenSystemMsg2(string str, float time_out = -1f)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x271D124", Offset = "0x271D124", VA = "0x271D124")]
		public void CloseSystemMsg2()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x271D1B8", Offset = "0x271D1B8", VA = "0x271D1B8")]
		public void RemoveStockMsg(int pri)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x271D25C", Offset = "0x271D25C", VA = "0x271D25C")]
		public void RemoveStockMsg2(int pri)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x271D300", Offset = "0x271D300", VA = "0x271D300")]
		public void ShowMicChkWnd()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x271D3A8", Offset = "0x271D3A8", VA = "0x271D3A8")]
		public bool IsOpenMicChkWnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x271D43C", Offset = "0x271D43C", VA = "0x271D43C")]
		public void HideMicChkWnd()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x271D4E4", Offset = "0x271D4E4", VA = "0x271D4E4")]
		public cUIMgr()
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x20002A0")]
	public class BloomOptimized : PostEffectsBase
	{
		[Token(Token = "0x20002A1")]
		public enum Resolution
		{
			[Token(Token = "0x40013B9")]
			Low,
			[Token(Token = "0x40013BA")]
			High
		}

		[Token(Token = "0x20002A2")]
		public enum BlurType
		{
			[Token(Token = "0x40013BC")]
			Standard,
			[Token(Token = "0x40013BD")]
			Sgx
		}

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE9CD4", Offset = "0xCE9CD4")]
		public float threshold;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE9CEC", Offset = "0xCE9CEC")]
		public float intensity;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE9D04", Offset = "0xCE9D04")]
		public float blurSize;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Resolution resolution;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCE9D1C", Offset = "0xCE9D1C")]
		public int blurIterations;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlurType blurType;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader fastBloomShader;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fastBloomMaterial;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int Shader_Param;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int Shader_Bloom;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RenderTexture rt;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int divider;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float widthMod;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector4 v4;

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x270FC7C", Offset = "0x270FC7C", VA = "0x270FC7C")]
		public void Create()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x270FD14", Offset = "0x270FD14", VA = "0x270FD14", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x270FD78", Offset = "0x270FD78", VA = "0x270FD78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x270FE24", Offset = "0x270FE24", VA = "0x270FE24")]
		public void CustomOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x2710238", Offset = "0x2710238", VA = "0x2710238")]
		public BloomOptimized()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class ImageEffectBase : MonoBehaviour
	{
		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x170001B1")]
		protected Material material
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0x2301FA8", Offset = "0x2301FA8", VA = "0x2301FA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x2301EFC", Offset = "0x2301EFC", VA = "0x2301EFC", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x2302074", Offset = "0x2302074", VA = "0x2302074", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x2302120", Offset = "0x2302120", VA = "0x2302120")]
		public ImageEffectBase()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	[ExecuteInEditMode]
	public class MotionBlur : ImageEffectBase
	{
		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blurAmount;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool extraBlur;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Shader_Tex;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int Shader_AO;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture accumTexture;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RenderTexture blurbuffer;

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x26FD290", Offset = "0x26FD290", VA = "0x26FD290", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x26FD2D8", Offset = "0x26FD2D8", VA = "0x26FD2D8")]
		public void Create()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x26FD360", Offset = "0x26FD360", VA = "0x26FD360", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x26FD3D4", Offset = "0x26FD3D4", VA = "0x26FD3D4")]
		public void CustomOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x26FD780", Offset = "0x26FD780", VA = "0x26FD780")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[ExecuteInEditMode]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x2676C30", Offset = "0x2676C30", VA = "0x2676C30")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x2677040", Offset = "0x2677040", VA = "0x2677040")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x2677250", Offset = "0x2677250", VA = "0x2677250")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x267725C", Offset = "0x267725C", VA = "0x267725C")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x2677374", Offset = "0x2677374", VA = "0x2677374", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x2677438", Offset = "0x2677438", VA = "0x2677438")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x2677264", Offset = "0x2677264", VA = "0x2677264")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x2677444", Offset = "0x2677444", VA = "0x2677444")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x26774A0", Offset = "0x26774A0", VA = "0x26774A0")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x26774A8", Offset = "0x26774A8", VA = "0x26774A8")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x2677564", Offset = "0x2677564", VA = "0x2677564")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x2677014", Offset = "0x2677014", VA = "0x2677014")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x2677790", Offset = "0x2677790", VA = "0x2677790")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x2677B0C", Offset = "0x2677B0C", VA = "0x2677B0C")]
		public PostEffectsBase()
		{
		}
	}
}
