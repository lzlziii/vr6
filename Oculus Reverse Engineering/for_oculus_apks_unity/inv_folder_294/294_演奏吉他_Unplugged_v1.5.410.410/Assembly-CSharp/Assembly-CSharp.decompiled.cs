using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Threading.Tasks;
using System.Xml;
using CodeStage.AntiCheat.ObscuredTypes;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Options;
using Drawing;
using FSG.MeshAnimator;
using FluentFTP;
using GameCore;
using ICSharpCode.SharpZipLib.Zip;
using Il2CppDummyDll;
using Microsoft.CodeAnalysis;
using Newtonsoft.Json;
using Oculus.Platform;
using Oculus.Platform.Models;
using PlayFab;
using PlayFab.ClientModels;
using PlayFab.EventsModels;
using TMPro;
using Unity.Collections;
using Unity.Jobs;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using Unplugged.Model;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[CompilerGenerated]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0xFEF1C0", Offset = "0xFEF1C0", VA = "0xFEF1C0")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[CompilerGenerated]
	[Microsoft.CodeAnalysis.Embedded]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Parameter | AttributeTargets.ReturnValue | AttributeTargets.GenericParameter, AllowMultiple = false, Inherited = false)]
	internal sealed class NullableAttribute : Attribute
	{
		[Token(Token = "0x4000001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] NullableFlags;

		[Token(Token = "0x6000002")]
		[Address(RVA = "0xFEF1C8", Offset = "0xFEF1C8", VA = "0xFEF1C8")]
		public NullableAttribute(byte P_0)
		{
		}

		[Token(Token = "0x6000003")]
		[Address(RVA = "0xFEF250", Offset = "0xFEF250", VA = "0xFEF250")]
		public NullableAttribute(byte[] P_0)
		{
		}
	}
}
[Token(Token = "0x2000004")]
public class BindableBase
{
	[Token(Token = "0x6000004")]
	[Address(RVA = "0xFEF280", Offset = "0xFEF280", VA = "0xFEF280")]
	public void ChangeProperty(string propertyName)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xFEF5E0", Offset = "0xFEF5E0", VA = "0xFEF5E0")]
	public BindableBase()
	{
	}
}
[Token(Token = "0x2000005")]
public class CampaignUIControllerNew : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000006")]
	[CompilerGenerated]
	private struct <SetAlbumContent>d__21 : IAsyncStateMachine
	{
		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CampaignUIControllerNew <>4__this;

		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AlbumData> <nonEmptyAlbums>5__2;

		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<AlbumData>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AlbumData <album>5__4;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskAwaiter<List<SongMappingMetaData>> <>u__1;

		[Token(Token = "0x6000012")]
		[Address(RVA = "0xFF0288", Offset = "0xFF0288", VA = "0xFF0288", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0xFF07D8", Offset = "0xFF07D8", VA = "0xFF07D8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<AlbumData> AlbumSelected;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ListView Items;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage AlbumCover;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal AlbumData SelectedAlbum;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InteractableObject HoverArea;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AlbumSongListItemController songList;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI AlbumTitle;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator animator;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AlbumChallengesController albumChallengesController;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TweenerCore<Quaternion, Vector3, QuaternionOptions> unHoverAnim;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 AlbumInitialRotation;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xFEF5E8", Offset = "0xFEF5E8", VA = "0xFEF5E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xFEF95C", Offset = "0xFEF95C", VA = "0xFEF95C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xFEFBBC", Offset = "0xFEFBBC", VA = "0xFEFBBC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xFEFC30", Offset = "0xFEFC30", VA = "0xFEFC30")]
	public void Hide()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xFEF938", Offset = "0xFEF938", VA = "0xFEF938")]
	public void HideAnimationCompleted()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xFEFC88", Offset = "0xFEFC88", VA = "0xFEFC88")]
	private void AlbumsManager_SelectedChanged(AlbumData obj)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xFEFDA8", Offset = "0xFEFDA8", VA = "0xFEFDA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xFEFF94", Offset = "0xFEFF94", VA = "0xFEFF94")]
	private void HoverArea_Untouched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xFF0030", Offset = "0xFF0030", VA = "0xFF0030")]
	private void HoverArea_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xFF0094", Offset = "0xFF0094", VA = "0xFF0094")]
	private void Items_OnItemSelected(object obj)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xFEF7D0", Offset = "0xFEF7D0", VA = "0xFEF7D0")]
	[AsyncStateMachine(typeof(<SetAlbumContent>d__21))]
	public void SetAlbumContent()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xFF0280", Offset = "0xFF0280", VA = "0xFF0280")]
	public CampaignUIControllerNew()
	{
	}
}
[Token(Token = "0x2000007")]
public class ChallengeFinishedController : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000009")]
	[CompilerGenerated]
	private struct <CloseAndRedeem>d__9 : IAsyncStateMachine
	{
		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChallengeFinishedController <>4__this;

		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600001E")]
		[Address(RVA = "0xFF0E90", Offset = "0xFF0E90", VA = "0xFF0E90", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600001F")]
		[Address(RVA = "0xFF118C", Offset = "0xFF118C", VA = "0xFF118C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200000A")]
	[CompilerGenerated]
	private struct <RedeemChallenges>d__10 : IAsyncStateMachine
	{
		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DateTime <date>5__2;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ChallengeAlbumData>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<bool> <>u__1;

		[Token(Token = "0x6000020")]
		[Address(RVA = "0xFF1198", Offset = "0xFF1198", VA = "0xFF1198", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0xFF15A0", Offset = "0xFF15A0", VA = "0xFF15A0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ConfettiBlast;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PickRankingYourRankController Rankcontroller;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PressableButton CloseButton;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI CongratsText;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DLCController dLCController;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LeaderboardEntryData UserRank;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ChallengeAlbumData challengeAlbumData;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xFF07E4", Offset = "0xFF07E4", VA = "0xFF07E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xFF07E8", Offset = "0xFF07E8", VA = "0xFF07E8")]
	public void EndChallenge(ChallengeAlbumData album)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xFF093C", Offset = "0xFF093C", VA = "0xFF093C")]
	[AsyncStateMachine(typeof(<CloseAndRedeem>d__9))]
	public void CloseAndRedeem()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xFF09F4", Offset = "0xFF09F4", VA = "0xFF09F4")]
	[AsyncStateMachine(typeof(<RedeemChallenges>d__10))]
	public Task RedeemChallenges()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xFF0AC8", Offset = "0xFF0AC8", VA = "0xFF0AC8")]
	public void SetFinalRank(LeaderboardEntryData userRank, ChallengeAlbumData albumData)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xFF0CB0", Offset = "0xFF0CB0", VA = "0xFF0CB0")]
	private ChallengePrice GetPrice(LeaderboardEntryData userRank, ChallengeAlbumData albumData)
	{
		return null;
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xFF0DBC", Offset = "0xFF0DBC", VA = "0xFF0DBC")]
	public ChallengeFinishedController()
	{
	}
}
[Token(Token = "0x200000C")]
public class ChallengeLogoController : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image Image;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xFF1610", Offset = "0xFF1610", VA = "0xFF1610")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xFF16F8", Offset = "0xFF16F8", VA = "0xFF16F8")]
	public ChallengeLogoController()
	{
	}
}
[Token(Token = "0x200000D")]
public class ChallengePriceUIController : MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform GuitarAnchor;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform PickAnchor;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xFF1700", Offset = "0xFF1700", VA = "0xFF1700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xFF1B2C", Offset = "0xFF1B2C", VA = "0xFF1B2C")]
	public ChallengePriceUIController()
	{
	}
}
[Token(Token = "0x200000F")]
public class CurvedUICenter : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Radius;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool CalculateInRuntime;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<CurvedUIItem> Items;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float life;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xFF1B7C", Offset = "0xFF1B7C", VA = "0xFF1B7C")]
	public void AddCurvedItem(CurvedUIItem item)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xFF2094", Offset = "0xFF2094", VA = "0xFF2094")]
	public void RemoveCurvedItem(CurvedUIItem item)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xFF2124", Offset = "0xFF2124", VA = "0xFF2124")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xFF2258", Offset = "0xFF2258", VA = "0xFF2258")]
	public void SetCurve()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xFF2128", Offset = "0xFF2128", VA = "0xFF2128")]
	public void UpdateLayout()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xFF2684", Offset = "0xFF2684", VA = "0xFF2684")]
	public void Update()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xFF1C74", Offset = "0xFF1C74", VA = "0xFF1C74")]
	private void InitializeItem(CurvedUIItem item)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xFF22FC", Offset = "0xFF22FC", VA = "0xFF22FC")]
	public void CalculateCurveUI(CurvedUIItem item)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xFF26E8", Offset = "0xFF26E8", VA = "0xFF26E8")]
	private Vector3 RotateAround(Vector3 position, Vector3 pivotPoint, Vector3 axis, float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xFF275C", Offset = "0xFF275C", VA = "0xFF275C")]
	private void RotateAround(Transform transform, Vector3 pivotPoint, Vector3 axis, float angle)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xFF2894", Offset = "0xFF2894", VA = "0xFF2894")]
	public CurvedUICenter()
	{
	}
}
[Token(Token = "0x2000010")]
public class CurvedUIItem : MonoBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CurvedUICenter Center;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool CalculateInRuntime;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 initialPos;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 initialRelativePos;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 ItemToCenter;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 initialRelativeYPos;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xFF2934", Offset = "0xFF2934", VA = "0xFF2934")]
	public void Start()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xFF2938", Offset = "0xFF2938", VA = "0xFF2938")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xFF29F8", Offset = "0xFF29F8", VA = "0xFF29F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xFF2A7C", Offset = "0xFF2A7C", VA = "0xFF2A7C")]
	public CurvedUIItem()
	{
	}
}
[Token(Token = "0x2000011")]
public class DataBindingManager : MonoBehaviour
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, List<DataBinder>> eventDictionary;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xFEF2FC", Offset = "0xFEF2FC", VA = "0xFEF2FC")]
	public static void ChangeProperty(int senderId, string propertyName)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xFF2A8C", Offset = "0xFF2A8C", VA = "0xFF2A8C")]
	public static void AddBinder(object data, DataBinder binder)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xFF2C58", Offset = "0xFF2C58", VA = "0xFF2C58")]
	public static void RemoveBinder(object data, DataBinder binder)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xFF2DA4", Offset = "0xFF2DA4", VA = "0xFF2DA4")]
	public DataBindingManager()
	{
	}
}
[Token(Token = "0x2000012")]
public class DLCControllerNew : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000013")]
	[CompilerGenerated]
	private struct <SetAlbumContent>d__19 : IAsyncStateMachine
	{
		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DLCControllerNew <>4__this;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AlbumData> <nonEmptyAlbums>5__2;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<DLCAlbumData>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DLCAlbumData <album>5__4;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskAwaiter<List<SongMappingMetaData>> <>u__1;

		[Token(Token = "0x6000049")]
		[Address(RVA = "0xFF38C4", Offset = "0xFF38C4", VA = "0xFF38C4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600004A")]
		[Address(RVA = "0xFF3DC0", Offset = "0xFF3DC0", VA = "0xFF3DC0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<AlbumData> AlbumSelected;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ListView Items;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal AlbumData SelectedAlbum;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RawImage AlbumCover;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RawImage AlbumBackground;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI AlbumTitle;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AlbumSongListItemController songList;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ChallengeUI;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject DLCUI;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animator animator;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RateGameMessage RateGameUI;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xFF2E44", Offset = "0xFF2E44", VA = "0xFF2E44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xFF3014", Offset = "0xFF3014", VA = "0xFF3014")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xFF32B0", Offset = "0xFF32B0", VA = "0xFF32B0")]
	public void Show()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xFF3324", Offset = "0xFF3324", VA = "0xFF3324")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xFF2FF0", Offset = "0xFF2FF0", VA = "0xFF2FF0")]
	public void HideAnimationCompleted()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xFF337C", Offset = "0xFF337C", VA = "0xFF337C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xFF3460", Offset = "0xFF3460", VA = "0xFF3460")]
	private void AlbumsManager_SelectedChanged(AlbumData obj)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xFF3580", Offset = "0xFF3580", VA = "0xFF3580")]
	private void Items_OnItemSelected(object obj)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xFF2F38", Offset = "0xFF2F38", VA = "0xFF2F38")]
	[AsyncStateMachine(typeof(<SetAlbumContent>d__19))]
	public void SetAlbumContent()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xFF38BC", Offset = "0xFF38BC", VA = "0xFF38BC")]
	public DLCControllerNew()
	{
	}
}
[Token(Token = "0x2000014")]
public class GuitarThumbGenerator : MonoBehaviour
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform center;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture rt;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera thumbCamera;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject currentGuitar;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xFF3DCC", Offset = "0xFF3DCC", VA = "0xFF3DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xFF43F0", Offset = "0xFF43F0", VA = "0xFF43F0")]
	public GuitarThumbGenerator()
	{
	}
}
[Token(Token = "0x2000015")]
public class HallOfFameScene : GameScene
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action GoBack;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xFF43F8", Offset = "0xFF43F8", VA = "0xFF43F8")]
	public void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xFF4408", Offset = "0xFF4408", VA = "0xFF4408")]
	public void RaiseGoBack()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xFF446C", Offset = "0xFF446C", VA = "0xFF446C")]
	public HallOfFameScene()
	{
	}
}
[Token(Token = "0x2000016")]
public class InstrumentMenu : MonoBehaviour
{
	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ListView InstrumentModelSelector;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ListView AccessorySelector;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GuitarPlaterSpaceController playerSpace;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text FansLabel;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text UnlockProgress;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<IPurchasable> Purchasables;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xFF4474", Offset = "0xFF4474", VA = "0xFF4474")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xFF4CD0", Offset = "0xFF4CD0", VA = "0xFF4CD0")]
	private void FansManager_OnFansChanged()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xFF4D04", Offset = "0xFF4D04", VA = "0xFF4D04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xFF5090", Offset = "0xFF5090", VA = "0xFF5090")]
	private void InstrumentModelSelector_OnItemSelected(object obj)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xFF576C", Offset = "0xFF576C", VA = "0xFF576C")]
	private void AccessorySelector_OnItemSelected(object obj)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xFF46AC", Offset = "0xFF46AC", VA = "0xFF46AC")]
	public void SetGuitarInstrument()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xFF591C", Offset = "0xFF591C", VA = "0xFF591C")]
	private void SubscribeToPurchases()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xFF4E38", Offset = "0xFF4E38", VA = "0xFF4E38")]
	private void UnSubscribeToPurchases()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xFF5B3C", Offset = "0xFF5B3C", VA = "0xFF5B3C")]
	private void ItemPurchased()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xFF528C", Offset = "0xFF528C", VA = "0xFF528C")]
	private void UpdateUnlockLabel()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xFF5B40", Offset = "0xFF5B40", VA = "0xFF5B40")]
	public InstrumentMenu()
	{
	}
}
[Token(Token = "0x2000018")]
public class ItemPurchaseController : DataBinder
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IPurchasable purchaseData;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PressableButton PurchaseButton;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool CanBuy;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text PriceLabel;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<RawImage> BlackAndWhiteItems;

	[Token(Token = "0x14000001")]
	public event Action OnItemPurchased
	{
		[Token(Token = "0x6000064")]
		[Address(RVA = "0xFF5D30", Offset = "0xFF5D30", VA = "0xFF5D30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000065")]
		[Address(RVA = "0xFF5DCC", Offset = "0xFF5DCC", VA = "0xFF5DCC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xFF5E68", Offset = "0xFF5E68", VA = "0xFF5E68", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xFF5EF4", Offset = "0xFF5EF4", VA = "0xFF5EF4")]
	private void FansManager_OnFansChanged()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xFF5F04", Offset = "0xFF5F04", VA = "0xFF5F04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xFF5F84", Offset = "0xFF5F84", VA = "0xFF5F84", Slot = "4")]
	public override void SetData(object data)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xFF63B8", Offset = "0xFF63B8", VA = "0xFF63B8")]
	public void OnPurchase()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xFF6658", Offset = "0xFF6658", VA = "0xFF6658")]
	public ItemPurchaseController()
	{
	}
}
[Token(Token = "0x2000019")]
public class ListView : MonoBehaviour
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MaxItemsPerPage;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ListViewItem ItemPrefab;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent PageChanged;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform ItemsContainer;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PressableButton PrevButton;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PressableButton NextButton;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ListViewItem> Containers;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private object selectedItem;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal IList Items;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentPage;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ListViewItem prevSelectedContainer;

	[Token(Token = "0x17000001")]
	public int CurrentPage
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0xFF66E0", Offset = "0xFF66E0", VA = "0xFF66E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600006F")]
		[Address(RVA = "0xFF66E8", Offset = "0xFF66E8", VA = "0xFF66E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public int MaxPages
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0xFF6A50", Offset = "0xFF6A50", VA = "0xFF6A50")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000003")]
	public object SelectedItem
	{
		[Token(Token = "0x6000071")]
		[Address(RVA = "0xFF6B04", Offset = "0xFF6B04", VA = "0xFF6B04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000072")]
		[Address(RVA = "0xFEFBB8", Offset = "0xFEFBB8", VA = "0xFEFBB8")]
		set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<object> OnItemSelected
	{
		[Token(Token = "0x600006C")]
		[Address(RVA = "0xFEF888", Offset = "0xFEF888", VA = "0xFEF888")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600006D")]
		[Address(RVA = "0xFEFEE4", Offset = "0xFEFEE4", VA = "0xFEFEE4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xFF6D10", Offset = "0xFF6D10", VA = "0xFF6D10")]
	public void Update()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xFF6DB4", Offset = "0xFF6DB4", VA = "0xFF6DB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xFF7054", Offset = "0xFF7054", VA = "0xFF7054")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xFF72A4", Offset = "0xFF72A4", VA = "0xFF72A4")]
	private void Item_OnSelected(ListViewItem obj)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xFF72E4", Offset = "0xFF72E4", VA = "0xFF72E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xFF6D94", Offset = "0xFF6D94", VA = "0xFF6D94")]
	public void NextPage()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xFF6D74", Offset = "0xFF6D74", VA = "0xFF6D74")]
	public void PrevPage()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xFF72E8", Offset = "0xFF72E8", VA = "0xFF72E8")]
	private void CheckArrows()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xFF07B0", Offset = "0xFF07B0", VA = "0xFF07B0")]
	public void SetItems(IList items)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xFF6B0C", Offset = "0xFF6B0C", VA = "0xFF6B0C")]
	private void SetSelected(object newSelected)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xFF66EC", Offset = "0xFF66EC", VA = "0xFF66EC")]
	private void SetPage(int pageNumber)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xFF7404", Offset = "0xFF7404", VA = "0xFF7404")]
	public ListView()
	{
	}
}
[Token(Token = "0x200001A")]
public class ListViewItem : MonoBehaviour
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RawImage ItemForeground;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RawImage ItemBackground;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject LockedLabel;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DataBinder[] dataBinders;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public object ItemData;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isSelected;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal ListView parentListView;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator animator;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Canvas canvas;

	[Token(Token = "0x17000004")]
	public bool IsSelected
	{
		[Token(Token = "0x6000080")]
		[Address(RVA = "0xFF74B0", Offset = "0xFF74B0", VA = "0xFF74B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000081")]
		[Address(RVA = "0xFF7344", Offset = "0xFF7344", VA = "0xFF7344")]
		set
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action<ListViewItem> OnSelected
	{
		[Token(Token = "0x6000082")]
		[Address(RVA = "0xFF6FA4", Offset = "0xFF6FA4", VA = "0xFF6FA4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000083")]
		[Address(RVA = "0xFF71F4", Offset = "0xFF71F4", VA = "0xFF71F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xFF7568", Offset = "0xFF7568", VA = "0xFF7568")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xFF75FC", Offset = "0xFF75FC", VA = "0xFF75FC")]
	public void Select()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xFF734C", Offset = "0xFF734C", VA = "0xFF734C")]
	public void SetData(object data)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xFF74B8", Offset = "0xFF74B8", VA = "0xFF74B8")]
	private void SetSelected(bool value)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xFF7624", Offset = "0xFF7624", VA = "0xFF7624")]
	public ListViewItem()
	{
	}
}
[Token(Token = "0x200001B")]
public class LongPressButton : PressableButton
{
	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Image ProgressBar;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public UnityEvent OnLongPressed;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float LongPressTime;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float currentPressTime;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool longPressedRaised;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Animator longPressedAnimator;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject PurchasedFX;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xFF762C", Offset = "0xFF762C", VA = "0xFF762C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xFF76B8", Offset = "0xFF76B8", VA = "0xFF76B8")]
	public void RaiseLongPressAfterAnimation()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xFF7810", Offset = "0xFF7810", VA = "0xFF7810", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xFF7A18", Offset = "0xFF7A18", VA = "0xFF7A18")]
	public LongPressButton()
	{
	}
}
[Token(Token = "0x200001C")]
public class people3danimation : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_Animator;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int animationID;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xFF7A28", Offset = "0xFF7A28", VA = "0xFF7A28")]
	private void Start()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xFF7AB4", Offset = "0xFF7AB4", VA = "0xFF7AB4")]
	public people3danimation()
	{
	}
}
[Token(Token = "0x200001D")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200001E")]
	public delegate void OnClick();

	[Token(Token = "0x200001F")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000020")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000021")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x4000081")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000082")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000083")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xFF7ABC", Offset = "0xFF7ABC", VA = "0xFF7ABC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xFF8028", Offset = "0xFF8028", VA = "0xFF8028")]
	public void Show()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xFF83A4", Offset = "0xFF83A4", VA = "0xFF83A4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xFF8520", Offset = "0xFF8520", VA = "0xFF8520")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xFF8738", Offset = "0xFF8738", VA = "0xFF8738")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xFF8394", Offset = "0xFF8394", VA = "0xFF8394")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xFF8A2C", Offset = "0xFF8A2C", VA = "0xFF8A2C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xFF8DA8", Offset = "0xFF8DA8", VA = "0xFF8DA8")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xFF9158", Offset = "0xFF9158", VA = "0xFF9158")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xFF9250", Offset = "0xFF9250", VA = "0xFF9250")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xFF9420", Offset = "0xFF9420", VA = "0xFF9420")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xFF94B8", Offset = "0xFF94B8", VA = "0xFF94B8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xFF9694", Offset = "0xFF9694", VA = "0xFF9694")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xFF9890", Offset = "0xFF9890", VA = "0xFF9890")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xFF9B88", Offset = "0xFF9B88", VA = "0xFF9B88")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xFF9C78", Offset = "0xFF9C78", VA = "0xFF9C78")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xFF9D0C", Offset = "0xFF9D0C", VA = "0xFF9D0C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000027")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xFFA38C", Offset = "0xFFA38C", VA = "0xFFA38C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xFFA430", Offset = "0xFFA430", VA = "0xFFA430")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xFFA4CC", Offset = "0xFFA4CC", VA = "0xFFA4CC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xFFA504", Offset = "0xFFA504", VA = "0xFFA504")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000028")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000029")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40000B3")]
		On,
		[Token(Token = "0x40000B4")]
		Off,
		[Token(Token = "0x40000B5")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000005")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xFFA50C", Offset = "0xFFA50C", VA = "0xFFA50C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xFF7FE8", Offset = "0xFF7FE8", VA = "0xFF7FE8")]
		set
		{
		}
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xFFA514", Offset = "0xFFA514", VA = "0xFFA514")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xFFA56C", Offset = "0xFFA56C", VA = "0xFFA56C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xFFA6A4", Offset = "0xFFA6A4", VA = "0xFFA6A4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xFFA6C0", Offset = "0xFFA6C0", VA = "0xFFA6C0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xFFA710", Offset = "0xFFA710", VA = "0xFFA710")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xFFA8B0", Offset = "0xFFA8B0", VA = "0xFFA8B0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xFFA9C0", Offset = "0xFFA9C0", VA = "0xFFA9C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xFFAA44", Offset = "0xFFAA44", VA = "0xFFAA44")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xFFAB04", Offset = "0xFFAB04", VA = "0xFFAB04")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xFFABAC", Offset = "0xFFABAC", VA = "0xFFABAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xFFAC98", Offset = "0xFFAC98", VA = "0xFFAC98")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200002A")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40000B6")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40000B7")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40000B8")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("This should be a reference to the OVRCameraRig that is usually a child of the PlayerController.")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Collision layers to be used for the purposes of fading out the screen when the HMD is inside world geometry and adjusting the capsule height.")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Offset is added to camera's real world height, effectively treating it as though the player was taller/standing higher.")]
	public float HeightOffset;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Minimum height that the character capsule can shrink to.  To disable, set to capsule's height.")]
	public float MinimumHeight;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Maximum height that the character capsule can grow to.  To disable, set to capsule's height.")]
	public float MaximumHeight;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xFFACA8", Offset = "0xFFACA8", VA = "0xFFACA8")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xFFACB0", Offset = "0xFFACB0", VA = "0xFFACB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xFFAD40", Offset = "0xFFAD40", VA = "0xFFAD40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xFFAE64", Offset = "0xFFAE64", VA = "0xFFAE64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xFFAF88", Offset = "0xFFAF88", VA = "0xFFAF88")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xFFB2A8", Offset = "0xFFB2A8", VA = "0xFFB2A8")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xFFB508", Offset = "0xFFB508", VA = "0xFFB508")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200002B")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xFFBC60", Offset = "0xFFBC60", VA = "0xFFBC60")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xFFBD0C", Offset = "0xFFBD0C", VA = "0xFFBD0C")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200002C")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200002D")]
	public enum States
	{
		[Token(Token = "0x40000E6")]
		Ready,
		[Token(Token = "0x40000E7")]
		Aim,
		[Token(Token = "0x40000E8")]
		CancelAim,
		[Token(Token = "0x40000E9")]
		PreTeleport,
		[Token(Token = "0x40000EA")]
		CancelTeleport,
		[Token(Token = "0x40000EB")]
		Teleporting,
		[Token(Token = "0x40000EC")]
		PostTeleport
	}

	[Token(Token = "0x200002E")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40000EE")]
		None,
		[Token(Token = "0x40000EF")]
		Aim,
		[Token(Token = "0x40000F0")]
		PreTeleport,
		[Token(Token = "0x40000F1")]
		Teleport
	}

	[Token(Token = "0x200002F")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40000F3")]
		Point,
		[Token(Token = "0x40000F4")]
		Sphere,
		[Token(Token = "0x40000F5")]
		Capsule
	}

	[Token(Token = "0x2000030")]
	public class AimData
	{
		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x17000009")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000109")]
			[Address(RVA = "0xFFDA4C", Offset = "0xFFDA4C", VA = "0xFFDA4C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600010A")]
			[Address(RVA = "0xFFDA54", Offset = "0xFFDA54", VA = "0xFFDA54")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0xFFD9C4", Offset = "0xFFD9C4", VA = "0xFFD9C4")]
		public AimData()
		{
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0xFFDA5C", Offset = "0xFFDA5C", VA = "0xFFDA5C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000031")]
	[CompilerGenerated]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700000A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600010F")]
			[Address(RVA = "0xFFDBC4", Offset = "0xFFDBC4", VA = "0xFFDBC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000111")]
			[Address(RVA = "0xFFDC0C", Offset = "0xFFDC0C", VA = "0xFFDC0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0xFFC718", Offset = "0xFFC718", VA = "0xFFC718")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600010D")]
		[Address(RVA = "0xFFDAB4", Offset = "0xFFDAB4", VA = "0xFFDAB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0xFFDAB8", Offset = "0xFFDAB8", VA = "0xFFDAB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0xFFDBCC", Offset = "0xFFDBCC", VA = "0xFFDBCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000032")]
	[CompilerGenerated]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000115")]
			[Address(RVA = "0xFFDD70", Offset = "0xFFDD70", VA = "0xFFDD70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000117")]
			[Address(RVA = "0xFFDDB8", Offset = "0xFFDDB8", VA = "0xFFDDB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0xFFCBA0", Offset = "0xFFCBA0", VA = "0xFFCBA0")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0xFFDC14", Offset = "0xFFDC14", VA = "0xFFDC14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0xFFDC18", Offset = "0xFFDC18", VA = "0xFFDC18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0xFFDD78", Offset = "0xFFDD78", VA = "0xFFDD78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000033")]
	[CompilerGenerated]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600011B")]
			[Address(RVA = "0xFFDE70", Offset = "0xFFDE70", VA = "0xFFDE70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011D")]
			[Address(RVA = "0xFFDEB8", Offset = "0xFFDEB8", VA = "0xFFDEB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0xFFCD74", Offset = "0xFFCD74", VA = "0xFFCD74")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0xFFDDC0", Offset = "0xFFDDC0", VA = "0xFFDDC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011A")]
		[Address(RVA = "0xFFDDC4", Offset = "0xFFDDC4", VA = "0xFFDDC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0xFFDE78", Offset = "0xFFDE78", VA = "0xFFDE78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000034")]
	[CompilerGenerated]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000121")]
			[Address(RVA = "0xFFDFA8", Offset = "0xFFDFA8", VA = "0xFFDFA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000123")]
			[Address(RVA = "0xFFDFF0", Offset = "0xFFDFF0", VA = "0xFFDFF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0xFFCF48", Offset = "0xFFCF48", VA = "0xFFCF48")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0xFFDEC0", Offset = "0xFFDEC0", VA = "0xFFDEC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0xFFDEC4", Offset = "0xFFDEC4", VA = "0xFFDEC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0xFFDFB0", Offset = "0xFFDFB0", VA = "0xFFDFB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000035")]
	[CompilerGenerated]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000127")]
			[Address(RVA = "0xFFE0A8", Offset = "0xFFE0A8", VA = "0xFFE0A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000129")]
			[Address(RVA = "0xFFE0F0", Offset = "0xFFE0F0", VA = "0xFFE0F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000124")]
		[Address(RVA = "0xFFD11C", Offset = "0xFFD11C", VA = "0xFFD11C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0xFFDFF8", Offset = "0xFFDFF8", VA = "0xFFDFF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0xFFDFFC", Offset = "0xFFDFFC", VA = "0xFFDFFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0xFFE0B0", Offset = "0xFFE0B0", VA = "0xFFE0B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000036")]
	[CompilerGenerated]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600012D")]
			[Address(RVA = "0xFFE1DC", Offset = "0xFFE1DC", VA = "0xFFE1DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600012F")]
			[Address(RVA = "0xFFE224", Offset = "0xFFE224", VA = "0xFFE224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0xFFD2F0", Offset = "0xFFD2F0", VA = "0xFFD2F0")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0xFFE0F8", Offset = "0xFFE0F8", VA = "0xFFE0F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0xFFE0FC", Offset = "0xFFE0FC", VA = "0xFFE0FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0xFFE1E4", Offset = "0xFFE1E4", VA = "0xFFE1E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000037")]
	[CompilerGenerated]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000133")]
			[Address(RVA = "0xFFE32C", Offset = "0xFFE32C", VA = "0xFFE32C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000135")]
			[Address(RVA = "0xFFE374", Offset = "0xFFE374", VA = "0xFFE374", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0xFFD4C4", Offset = "0xFFD4C4", VA = "0xFFD4C4")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0xFFE22C", Offset = "0xFFE22C", VA = "0xFFE22C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0xFFE230", Offset = "0xFFE230", VA = "0xFFE230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0xFFE334", Offset = "0xFFE334", VA = "0xFFE334", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Allow linear movement prior to the teleport system being activated.")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Tooltip("Allow linear movement while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("Allow linear movement while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Allow linear movement after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Allow rotation prior to the teleport system being activated.")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Allow rotation while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Allow rotation while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("Allow rotation after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableRotationDuringPostTeleport;

	[NonSerialized]
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("This prefab will be instantiated as needed and updated to match the current aim target.")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("TeleportDestinationPrefab will be instantiated into this layer.")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("When aiming at possible destinations, the aim collision type determines which shape to use for collision tests.")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Use the character collision radius/height/skinwidth for sphere/capsule collision tests.")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Radius of the sphere or capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionRadius;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Height of the capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000006")]
	public States CurrentState
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xFFBD5C", Offset = "0xFFBD5C", VA = "0xFFBD5C")]
		[CompilerGenerated]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xFFBD64", Offset = "0xFFBD64", VA = "0xFFBD64")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xFFBF34", Offset = "0xFFBF34", VA = "0xFFBF34")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000008")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xFFBF58", Offset = "0xFFBF58", VA = "0xFFBF58")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xFFBF60", Offset = "0xFFBF60", VA = "0xFFBF60")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xFFBD6C", Offset = "0xFFBD6C", VA = "0xFFBD6C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xFFBE1C", Offset = "0xFFBE1C", VA = "0xFFBE1C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xFFC5E0", Offset = "0xFFC5E0", VA = "0xFFC5E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xFFC67C", Offset = "0xFFC67C", VA = "0xFFC67C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xFFC740", Offset = "0xFFC740", VA = "0xFFC740")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xFFC7DC", Offset = "0xFFC7DC", VA = "0xFFC7DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xFFC878", Offset = "0xFFC878", VA = "0xFFC878")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xFFC928", Offset = "0xFFC928", VA = "0xFFC928")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xFFC9F4", Offset = "0xFFC9F4", VA = "0xFFC9F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xFFCA90", Offset = "0xFFCA90", VA = "0xFFCA90")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xFFCBC8", Offset = "0xFFCBC8", VA = "0xFFCBC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xFFCC64", Offset = "0xFFCC64", VA = "0xFFCC64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xFFCD9C", Offset = "0xFFCD9C", VA = "0xFFCD9C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xFFCE38", Offset = "0xFFCE38", VA = "0xFFCE38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xFFCF70", Offset = "0xFFCF70", VA = "0xFFCF70")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xFFD00C", Offset = "0xFFD00C", VA = "0xFFD00C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xFFD144", Offset = "0xFFD144", VA = "0xFFD144")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xFFD1E0", Offset = "0xFFD1E0", VA = "0xFFD1E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xFFD318", Offset = "0xFFD318", VA = "0xFFD318")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xFFD3B4", Offset = "0xFFD3B4", VA = "0xFFD3B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000101")]
		[Address(RVA = "0xFFD4EC", Offset = "0xFFD4EC", VA = "0xFFD4EC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000102")]
		[Address(RVA = "0xFFD59C", Offset = "0xFFD59C", VA = "0xFFD59C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xFFBD14", Offset = "0xFFBD14", VA = "0xFFBD14")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xFFBD38", Offset = "0xFFBD38", VA = "0xFFBD38")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xFFBECC", Offset = "0xFFBECC", VA = "0xFFBECC")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xFFBF68", Offset = "0xFFBF68", VA = "0xFFBF68")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xFFC230", Offset = "0xFFC230", VA = "0xFFC230")]
	[Conditional("DEBUG_TELEPORT_STATES")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xFFC2D8", Offset = "0xFFC2D8", VA = "0xFFC2D8")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xFFC3C4", Offset = "0xFFC3C4", VA = "0xFFC3C4")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xFFC400", Offset = "0xFFC400", VA = "0xFFC400")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xFFC4B0", Offset = "0xFFC4B0", VA = "0xFFC4B0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xFFC4E0", Offset = "0xFFC4E0", VA = "0xFFC4E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xFFC540", Offset = "0xFFC540", VA = "0xFFC540", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xFFC5D8", Offset = "0xFFC5D8", VA = "0xFFC5D8", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xFFC564", Offset = "0xFFC564", VA = "0xFFC564")]
	[IteratorStateMachine(typeof(<ReadyStateCoroutine>d__52))]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xFFC9D8", Offset = "0xFFC9D8", VA = "0xFFC9D8")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xFFCB2C", Offset = "0xFFCB2C", VA = "0xFFCB2C")]
	[IteratorStateMachine(typeof(<AimStateCoroutine>d__64))]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xFFCD00", Offset = "0xFFCD00", VA = "0xFFCD00")]
	[IteratorStateMachine(typeof(<CancelAimStateCoroutine>d__68))]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xFFCED4", Offset = "0xFFCED4", VA = "0xFFCED4")]
	[IteratorStateMachine(typeof(<PreTeleportStateCoroutine>d__72))]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xFFD0A8", Offset = "0xFFD0A8", VA = "0xFFD0A8")]
	[IteratorStateMachine(typeof(<CancelTeleportStateCoroutine>d__76))]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xFFD27C", Offset = "0xFFD27C", VA = "0xFFD27C")]
	[IteratorStateMachine(typeof(<TeleportingStateCoroutine>d__80))]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xFFD450", Offset = "0xFFD450", VA = "0xFFD450")]
	[IteratorStateMachine(typeof(<PostTeleportStateCoroutine>d__84))]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xFFD64C", Offset = "0xFFD64C", VA = "0xFFD64C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xFFD760", Offset = "0xFFD760", VA = "0xFFD760")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xFFD790", Offset = "0xFFD790", VA = "0xFFD790")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xFFD8CC", Offset = "0xFFD8CC", VA = "0xFFD8CC")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xFFD9B4", Offset = "0xFFD9B4", VA = "0xFFD9B4")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000038")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000F")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000136")]
		[Address(RVA = "0xFFADC8", Offset = "0xFFADC8", VA = "0xFFADC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000137")]
		[Address(RVA = "0xFFAEEC", Offset = "0xFFAEEC", VA = "0xFFAEEC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000138")]
		[Address(RVA = "0xFFE37C", Offset = "0xFFE37C", VA = "0xFFE37C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000139")]
		[Address(RVA = "0xFFE418", Offset = "0xFFE418", VA = "0xFFE418")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xFFE4B4", Offset = "0xFFE4B4", VA = "0xFFE4B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xFFE594", Offset = "0xFFE594", VA = "0xFFE594")]
	private void Start()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xFFE598", Offset = "0xFFE598", VA = "0xFFE598")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xFFE60C", Offset = "0xFFE60C", VA = "0xFFE60C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xFFE730", Offset = "0xFFE730", VA = "0xFFE730")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xFFE9A8", Offset = "0xFFE9A8", VA = "0xFFE9A8")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xFFEBC8", Offset = "0xFFEBC8", VA = "0xFFEBC8")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000039")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000141")]
	[Address(RVA = "0xFFEBE8", Offset = "0xFFEBE8", VA = "0xFFEBE8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xFFEC78", Offset = "0xFFEC78", VA = "0xFFEC78", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000143")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xFFED48", Offset = "0xFFED48", VA = "0xFFED48")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200003A")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xFFED58", Offset = "0xFFED58", VA = "0xFFED58", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xFFEEE8", Offset = "0xFFEEE8", VA = "0xFFEEE8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200003B")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The MinimumElevation is relative to the AimPosition.")]
	public float MinimumElevation;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The Gravity is used in conjunction with AimVelocity and the aim direction to simulate a projectile.")]
	public float Gravity;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The AimVelocity is the initial speed of the faked projectile.")]
	[Range(0.001f, 50f)]
	public float AimVelocity;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The AimStep is the how much to subdivide the iteration.")]
	[Range(0.001f, 1f)]
	public float AimStep;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xFFEEF8", Offset = "0xFFEEF8", VA = "0xFFEEF8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xFFF0CC", Offset = "0xFFF0CC", VA = "0xFFF0CC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200003C")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This prefab will be instantiated when the aim visual is awakened, and will be set active when the user is aiming, and deactivated when they are done aiming.")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xFFF0E0", Offset = "0xFFF0E0", VA = "0xFFF0E0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xFFF20C", Offset = "0xFFF20C", VA = "0xFFF20C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xFFF238", Offset = "0xFFF238", VA = "0xFFF238")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xFFF264", Offset = "0xFFF264", VA = "0xFFF264")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xFFF308", Offset = "0xFFF308", VA = "0xFFF308", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xFFF35C", Offset = "0xFFF35C", VA = "0xFFF35C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xFFF3AC", Offset = "0xFFF3AC", VA = "0xFFF3AC")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200003D")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If the target handler provides a target position, this transform will be moved to that position and it's game object enabled. A target position being provided does not mean the position is valid, only that the aim handler found something to test as a destination.")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This transform will be rotated to match the rotation of the aiming target. Simple teleport destinations should assign this to the object containing this component. More complex teleport destinations might assign this to a sub-object that is used to indicate the landing orientation independently from the rest of the destination indicator, such as when world space effects are required. This will typically be a child of the PositionIndicator.")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("After the player teleports, the character controller will have it's rotation set to this value. It is different from the OrientationIndicator transform.rotation in order to support both head-relative and forward-facing teleport modes (See TeleportOrientationHandlerThumbstick.cs).")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000018")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000150")]
		[Address(RVA = "0xFFF4A8", Offset = "0xFFF4A8", VA = "0xFFF4A8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000151")]
		[Address(RVA = "0xFFF4B0", Offset = "0xFFF4B0", VA = "0xFFF4B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000156")]
		[Address(RVA = "0xFFF638", Offset = "0xFFF638", VA = "0xFFF638")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000157")]
		[Address(RVA = "0xFFF6E8", Offset = "0xFFF6E8", VA = "0xFFF6E8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xFFF4BC", Offset = "0xFFF4BC", VA = "0xFFF4BC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xFFF540", Offset = "0xFFF540", VA = "0xFFF540")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xFFF604", Offset = "0xFFF604", VA = "0xFFF604")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xFFF634", Offset = "0xFFF634", VA = "0xFFF634")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xFFC3DC", Offset = "0xFFC3DC", VA = "0xFFC3DC")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xFFF798", Offset = "0xFFF798", VA = "0xFFF798")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xFFF7B4", Offset = "0xFFF7B4", VA = "0xFFF7B4", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200003E")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200003F")]
	[CompilerGenerated]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000167")]
			[Address(RVA = "0xFFFD7C", Offset = "0xFFFD7C", VA = "0xFFFD7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000169")]
			[Address(RVA = "0xFFFDC4", Offset = "0xFFFDC4", VA = "0xFFFDC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0xFFFBE8", Offset = "0xFFFBE8", VA = "0xFFFBE8")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0xFFFCEC", Offset = "0xFFFCEC", VA = "0xFFFCEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0xFFFCF0", Offset = "0xFFFCF0", VA = "0xFFFCF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0xFFFD84", Offset = "0xFFFD84", VA = "0xFFFD84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000040")]
	[CompilerGenerated]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016D")]
			[Address(RVA = "0xFFFE68", Offset = "0xFFFE68", VA = "0xFFFE68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016F")]
			[Address(RVA = "0xFFFEB0", Offset = "0xFFFEB0", VA = "0xFFFEB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0xFFFC84", Offset = "0xFFFC84", VA = "0xFFFC84")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0xFFFDCC", Offset = "0xFFFDCC", VA = "0xFFFDCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0xFFFDD0", Offset = "0xFFFDD0", VA = "0xFFFDD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0xFFFE70", Offset = "0xFFFE70", VA = "0xFFFE70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xFFF9A8", Offset = "0xFFF9A8", VA = "0xFFF9A8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xFFFA7C", Offset = "0xFFFA7C", VA = "0xFFFA7C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xFFFAC8", Offset = "0xFFFAC8", VA = "0xFFFAC8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xFFFB74", Offset = "0xFFFB74", VA = "0xFFFB74")]
	[IteratorStateMachine(typeof(<TeleportReadyCoroutine>d__5))]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xFFFC10", Offset = "0xFFFC10", VA = "0xFFFC10")]
	[IteratorStateMachine(typeof(<TeleportAimCoroutine>d__6))]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000161")]
	public abstract void GetAimData(out Ray aimRay);
}
[Token(Token = "0x2000041")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The button used to begin aiming for a teleport.")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The button used to trigger the teleport after aiming. It can be the same button as the AimButton, however you cannot abort a teleport if it is.")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("When true, the system will not use the PreTeleport intention which will allow a teleport to occur on a button downpress. When false, the button downpress will trigger the PreTeleport intention and the Teleport intention when the button is released.")]
	public bool FastTeleport;

	[Token(Token = "0x1700001D")]
	public Transform Pointer
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0xFFFEB8", Offset = "0xFFFEB8", VA = "0xFFFEB8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000171")]
		[Address(RVA = "0xFFFEC0", Offset = "0xFFFEC0", VA = "0xFFFEC0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xFFFEC8", Offset = "0xFFFEC8", VA = "0xFFFEC8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xFFFFF4", Offset = "0xFFFFF4", VA = "0xFFFFF4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x10000A8", Offset = "0x10000A8", VA = "0x10000A8")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000042")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000043")]
	public enum InputModes
	{
		[Token(Token = "0x4000146")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000147")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000148")]
		ThumbstickTeleport,
		[Token(Token = "0x4000149")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000044")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400014B")]
		A,
		[Token(Token = "0x400014C")]
		B,
		[Token(Token = "0x400014D")]
		LeftTrigger,
		[Token(Token = "0x400014E")]
		LeftThumbstick,
		[Token(Token = "0x400014F")]
		RightTrigger,
		[Token(Token = "0x4000150")]
		RightThumbstick,
		[Token(Token = "0x4000151")]
		X,
		[Token(Token = "0x4000152")]
		Y
	}

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("CapacitiveButtonForAimAndTeleport=Activate aiming via cap touch detection, press the same button to teleport.\nSeparateButtonsForAimAndTeleport=Use one button to begin aiming, and another to trigger the teleport.\nThumbstickTeleport=Push a thumbstick to begin aiming, release to teleport.")]
	public InputModes InputMode;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Select the controller to be used for aiming. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Select the button to use for triggering aim and teleport when InputMode==CapacitiveButtonForAimAndTeleport")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x10000AC", Offset = "0x10000AC", VA = "0x10000AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x10000B0", Offset = "0x10000B0", VA = "0x10000B0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x10004E4", Offset = "0x10004E4", VA = "0x10004E4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x10005A0", Offset = "0x10005A0", VA = "0x10005A0")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000045")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000046")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000157")]
		HeadRelative,
		[Token(Token = "0x4000158")]
		ForwardFacing
	}

	[Token(Token = "0x2000047")]
	[CompilerGenerated]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000185")]
			[Address(RVA = "0x1000A50", Offset = "0x1000A50", VA = "0x1000A50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000187")]
			[Address(RVA = "0x1000A98", Offset = "0x1000A98", VA = "0x1000A98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x1000860", Offset = "0x1000860", VA = "0x1000860")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x10009A0", Offset = "0x10009A0", VA = "0x10009A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x10009A4", Offset = "0x10009A4", VA = "0x10009A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1000A58", Offset = "0x1000A58", VA = "0x1000A58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x1000690", Offset = "0x1000690", VA = "0x1000690")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1000778", Offset = "0x1000778", VA = "0x1000778")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1000780", Offset = "0x1000780", VA = "0x1000780", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x10007B8", Offset = "0x10007B8", VA = "0x10007B8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x10007EC", Offset = "0x10007EC", VA = "0x10007EC")]
	[IteratorStateMachine(typeof(<UpdateOrientationCoroutine>d__7))]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600017F")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1000888", Offset = "0x1000888", VA = "0x1000888")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000048")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1000AA0", Offset = "0x1000AA0", VA = "0x1000AA0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1000AA4", Offset = "0x1000AA4", VA = "0x1000AA4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1000B4C", Offset = "0x1000B4C", VA = "0x1000B4C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000049")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Should the destination orientation be updated during the aim state in addition to the PreTeleport state?")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("How far from the destination must the HMD be pointing before using it for orientation")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("How far from the destination must the HMD be pointing before rejecting the teleport")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1000B50", Offset = "0x1000B50", VA = "0x1000B50", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1000BA0", Offset = "0x1000BA0", VA = "0x1000BA0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1001064", Offset = "0x1001064", VA = "0x1001064")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200004A")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Which thumbstick is to be used for adjusting the teleport orientation. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The orientation will only change if the thumbstick magnitude is above this value. This will usually be larger than the TeleportInputHandlerTouch.ThumbstickTeleportThreshold.")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1001068", Offset = "0x1001068", VA = "0x1001068", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x100109C", Offset = "0x100109C", VA = "0x100109C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1001598", Offset = "0x1001598", VA = "0x1001598")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200004B")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x10015A8", Offset = "0x10015A8", VA = "0x10015A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x10015AC", Offset = "0x10015AC", VA = "0x10015AC")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x10015B4", Offset = "0x10015B4", VA = "0x10015B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x10016A0", Offset = "0x10016A0", VA = "0x10016A0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x10016BC", Offset = "0x10016BC", VA = "0x10016BC")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200004C")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000020")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x10016D4", Offset = "0x10016D4", VA = "0x10016D4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x10016DC", Offset = "0x10016DC", VA = "0x10016DC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xFFEC10", Offset = "0xFFEC10", VA = "0xFFEC10", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xFFED20", Offset = "0xFFED20", VA = "0xFFED20", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x10016E4", Offset = "0x10016E4", VA = "0x10016E4")]
	[Conditional("DEBUG_TELEPORT_EVENT_HANDLERS")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xFFF350", Offset = "0xFFF350", VA = "0xFFF350", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xFFF3A4", Offset = "0xFFF3A4", VA = "0xFFF3A4", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xFFED50", Offset = "0xFFED50", VA = "0xFFED50")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200004D")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x200004E")]
	[CompilerGenerated]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A9")]
			[Address(RVA = "0x1001DD4", Offset = "0x1001DD4", VA = "0x1001DD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001AB")]
			[Address(RVA = "0x1001E1C", Offset = "0x1001E1C", VA = "0x1001E1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x100198C", Offset = "0x100198C", VA = "0x100198C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x1001B08", Offset = "0x1001B08", VA = "0x1001B08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x1001B0C", Offset = "0x1001B0C", VA = "0x1001B0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x1001DDC", Offset = "0x1001DDC", VA = "0x1001DDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("This bitmask controls which game object layers will be included in the targeting collision tests.")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000172")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x10017B4", Offset = "0x10017B4", VA = "0x10017B4")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x10018CC", Offset = "0x10018CC", VA = "0x10018CC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x10018F4", Offset = "0x10018F4", VA = "0x10018F4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1001918", Offset = "0x1001918", VA = "0x1001918")]
	[IteratorStateMachine(typeof(<TargetAimCoroutine>d__7))]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x10019B4", Offset = "0x10019B4", VA = "0x10019B4", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60001A3")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x10019CC", Offset = "0x10019CC", VA = "0x10019CC", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}
}
[Token(Token = "0x200004F")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1001E24", Offset = "0x1001E24", VA = "0x1001E24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1001E8C", Offset = "0x1001E8C", VA = "0x1001E8C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1001FF4", Offset = "0x1001FF4", VA = "0x1001FF4", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x10020E0", Offset = "0x10020E0", VA = "0x10020E0")]
	[Conditional("SHOW_PATH_RESULT")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x10020E4", Offset = "0x10020E4", VA = "0x10020E4")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000050")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("When checking line of sight to the destination, add this value to the vertical offset for targeting collision checks.")]
	public float LOSOffset;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Teleport logic will only work with TeleportPoint components that exist in the layers specified by this mask.")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x10020F0", Offset = "0x10020F0", VA = "0x10020F0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x10022E8", Offset = "0x10022E8", VA = "0x10022E8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000051")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x10022F4", Offset = "0x10022F4", VA = "0x10022F4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x100245C", Offset = "0x100245C", VA = "0x100245C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000052")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x1002460", Offset = "0x1002460", VA = "0x1002460", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x10024E4", Offset = "0x10024E4", VA = "0x10024E4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001B7")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1002564", Offset = "0x1002564", VA = "0x1002564")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000053")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000054")]
	[CompilerGenerated]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001BF")]
			[Address(RVA = "0x10028C8", Offset = "0x10028C8", VA = "0x10028C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C1")]
			[Address(RVA = "0x1002910", Offset = "0x1002910", VA = "0x1002910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x1002600", Offset = "0x1002600", VA = "0x1002600")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x10027C4", Offset = "0x10027C4", VA = "0x10027C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x10027C8", Offset = "0x10027C8", VA = "0x10027C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x10028D0", Offset = "0x10028D0", VA = "0x10028D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How long the transition takes. Usually this is greater than Teleport Delay.")]
	[Range(0.01f, 2f)]
	public float TransitionDuration;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("At what percentage of the elapsed transition time does the teleport occur?")]
	[Range(0f, 1f)]
	public float TeleportDelay;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Fade to black over the duration of the transition")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x100256C", Offset = "0x100256C", VA = "0x100256C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x100258C", Offset = "0x100258C", VA = "0x100258C")]
	[IteratorStateMachine(typeof(<BlinkCoroutine>d__4))]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1002628", Offset = "0x1002628", VA = "0x1002628")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000055")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1002918", Offset = "0x1002918", VA = "0x1002918", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1002930", Offset = "0x1002930", VA = "0x1002930")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000056")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000057")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001CA")]
			[Address(RVA = "0x1002B54", Offset = "0x1002B54", VA = "0x1002B54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001CC")]
			[Address(RVA = "0x1002B9C", Offset = "0x1002B9C", VA = "0x1002B9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x10029CC", Offset = "0x10029CC", VA = "0x10029CC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x1002A3C", Offset = "0x1002A3C", VA = "0x1002A3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x1002A40", Offset = "0x1002A40", VA = "0x1002A40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x1002B5C", Offset = "0x1002B5C", VA = "0x1002B5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How much time the warp transition takes to complete.")]
	[Range(0.01f, 1f)]
	public float TransitionDuration;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1002938", Offset = "0x1002938", VA = "0x1002938", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1002958", Offset = "0x1002958", VA = "0x1002958")]
	[IteratorStateMachine(typeof(<DoWarp>d__3))]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x10029F4", Offset = "0x10029F4", VA = "0x10029F4")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000058")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000059")]
	public enum PlabackState
	{
		[Token(Token = "0x40001A2")]
		Idle = 1,
		[Token(Token = "0x40001A3")]
		Preparing,
		[Token(Token = "0x40001A4")]
		Buffering,
		[Token(Token = "0x40001A5")]
		Ready,
		[Token(Token = "0x40001A6")]
		Ended
	}

	[Token(Token = "0x200005A")]
	public enum StereoMode
	{
		[Token(Token = "0x40001A8")]
		Unknown = -1,
		[Token(Token = "0x40001A9")]
		Mono,
		[Token(Token = "0x40001AA")]
		TopBottom,
		[Token(Token = "0x40001AB")]
		LeftRight,
		[Token(Token = "0x40001AC")]
		Mesh
	}

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000027")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x1002BA4", Offset = "0x1002BA4", VA = "0x1002BA4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000028")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x1002E94", Offset = "0x1002E94", VA = "0x1002E94")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000029")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x1003114", Offset = "0x1003114", VA = "0x1003114")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002A")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x1003188", Offset = "0x1003188", VA = "0x1003188")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002B")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x100328C", Offset = "0x100328C", VA = "0x100328C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700002C")]
	public static long Duration
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x1003394", Offset = "0x1003394", VA = "0x1003394")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700002D")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x100349C", Offset = "0x100349C", VA = "0x100349C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700002E")]
	public static int VideoWidth
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x10035A4", Offset = "0x10035A4", VA = "0x10035A4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002F")]
	public static int VideoHeight
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x10036AC", Offset = "0x10036AC", VA = "0x10036AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000030")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x10037B4", Offset = "0x10037B4", VA = "0x10037B4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x10038BC", Offset = "0x10038BC", VA = "0x10038BC")]
		set
		{
		}
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1003A24", Offset = "0x1003A24", VA = "0x1003A24")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x1003C3C", Offset = "0x1003C3C", VA = "0x1003C3C")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x1003D44", Offset = "0x1003D44", VA = "0x1003D44")]
	public static void Play()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1003E4C", Offset = "0x1003E4C", VA = "0x1003E4C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1003F54", Offset = "0x1003F54", VA = "0x1003F54")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x10040C4", Offset = "0x10040C4", VA = "0x10040C4")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1004230", Offset = "0x1004230", VA = "0x1004230")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x200005B")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000012")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x1004484", Offset = "0x1004484", VA = "0x1004484")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x1004520", Offset = "0x1004520", VA = "0x1004520")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x10045BC", Offset = "0x10045BC", VA = "0x10045BC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x10045D8", Offset = "0x10045D8", VA = "0x10045D8")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200005C")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200005D")]
	public enum ButtonType
	{
		[Token(Token = "0x40001B0")]
		Play,
		[Token(Token = "0x40001B1")]
		Pause,
		[Token(Token = "0x40001B2")]
		FastForward,
		[Token(Token = "0x40001B3")]
		Rewind,
		[Token(Token = "0x40001B4")]
		SkipForward,
		[Token(Token = "0x40001B5")]
		SkipBack,
		[Token(Token = "0x40001B6")]
		Stop
	}

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000031")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x10045E0", Offset = "0x10045E0", VA = "0x10045E0")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x10045E8", Offset = "0x10045E8", VA = "0x10045E8")]
		set
		{
		}
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x100460C", Offset = "0x100460C", VA = "0x100460C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1005460", Offset = "0x1005460", VA = "0x1005460")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200005E")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200005F")]
	public enum VideoShape
	{
		[Token(Token = "0x40001CB")]
		_360,
		[Token(Token = "0x40001CC")]
		_180,
		[Token(Token = "0x40001CD")]
		Quad
	}

	[Token(Token = "0x2000060")]
	public enum VideoStereo
	{
		[Token(Token = "0x40001CF")]
		Mono,
		[Token(Token = "0x40001D0")]
		TopBottom,
		[Token(Token = "0x40001D1")]
		LeftRight,
		[Token(Token = "0x40001D2")]
		BottomTop
	}

	[Token(Token = "0x2000061")]
	[CompilerGenerated]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001FE")]
			[Address(RVA = "0x10069BC", Offset = "0x10069BC", VA = "0x10069BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000200")]
			[Address(RVA = "0x1006A04", Offset = "0x1006A04", VA = "0x1006A04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x1005B54", Offset = "0x1005B54", VA = "0x1005B54")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x1006810", Offset = "0x1006810", VA = "0x1006810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x1006814", Offset = "0x1006814", VA = "0x1006814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x10069C4", Offset = "0x10069C4", VA = "0x10069C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000032")]
	public bool IsPlaying
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x10054B8", Offset = "0x10054B8", VA = "0x10054B8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x10054C0", Offset = "0x10054C0", VA = "0x10054C0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public long Duration
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x10054CC", Offset = "0x10054CC", VA = "0x10054CC")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x10054D4", Offset = "0x10054D4", VA = "0x10054D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x10054DC", Offset = "0x10054DC", VA = "0x10054DC")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x10054E4", Offset = "0x10054E4", VA = "0x10054E4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x10054EC", Offset = "0x10054EC", VA = "0x10054EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1005774", Offset = "0x1005774", VA = "0x1005774")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x10057D4", Offset = "0x10057D4", VA = "0x10057D4")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1005AE0", Offset = "0x1005AE0", VA = "0x1005AE0")]
	[IteratorStateMachine(typeof(<Start>d__33))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1005B7C", Offset = "0x1005B7C", VA = "0x1005B7C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x1005E54", Offset = "0x1005E54", VA = "0x1005E54")]
	public void Play()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1005EDC", Offset = "0x1005EDC", VA = "0x1005EDC")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1005F60", Offset = "0x1005F60", VA = "0x1005F60")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1006050", Offset = "0x1006050", VA = "0x1006050")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x10065FC", Offset = "0x10065FC", VA = "0x10065FC")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x100669C", Offset = "0x100669C", VA = "0x100669C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1006720", Offset = "0x1006720", VA = "0x1006720")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1006800", Offset = "0x1006800", VA = "0x1006800")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000063")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000064")]
	private enum PlaybackState
	{
		[Token(Token = "0x40001EF")]
		Playing,
		[Token(Token = "0x40001F0")]
		Paused,
		[Token(Token = "0x40001F1")]
		Rewinding,
		[Token(Token = "0x40001F2")]
		FastForwarding
	}

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1006AE8", Offset = "0x1006AE8", VA = "0x1006AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1006DD8", Offset = "0x1006DD8", VA = "0x1006DD8")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1006EF8", Offset = "0x1006EF8", VA = "0x1006EF8")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1006FF4", Offset = "0x1006FF4", VA = "0x1006FF4")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x10070C8", Offset = "0x10070C8", VA = "0x10070C8")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1006FC8", Offset = "0x1006FC8", VA = "0x1006FC8")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1007128", Offset = "0x1007128", VA = "0x1007128")]
	private void Update()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1006CD8", Offset = "0x1006CD8", VA = "0x1006CD8")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1007458", Offset = "0x1007458", VA = "0x1007458")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000065")]
public static class VectorUtil
{
	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1006584", Offset = "0x1006584", VA = "0x1006584")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000066")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40001F3")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40001F4")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1007468", Offset = "0x1007468", VA = "0x1007468")]
	private void Start()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1007ABC", Offset = "0x1007ABC", VA = "0x1007ABC")]
	private void Update()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1007D18", Offset = "0x1007D18", VA = "0x1007D18")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1007E7C", Offset = "0x1007E7C", VA = "0x1007E7C")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1007FE4", Offset = "0x1007FE4", VA = "0x1007FE4")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1008168", Offset = "0x1008168", VA = "0x1008168")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x2000067")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40001FD")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1008178", Offset = "0x1008178", VA = "0x1008178")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x10081D0", Offset = "0x10081D0", VA = "0x10081D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x10081D4", Offset = "0x10081D4", VA = "0x10081D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1007864", Offset = "0x1007864", VA = "0x1007864")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x10081D8", Offset = "0x10081D8", VA = "0x10081D8")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x10083F4", Offset = "0x10083F4", VA = "0x10083F4")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000068")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x10083FC", Offset = "0x10083FC", VA = "0x10083FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x100895C", Offset = "0x100895C", VA = "0x100895C")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1008A08", Offset = "0x1008A08", VA = "0x1008A08")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1008C98", Offset = "0x1008C98", VA = "0x1008C98")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1008D6C", Offset = "0x1008D6C", VA = "0x1008D6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1008E44", Offset = "0x1008E44", VA = "0x1008E44")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1008EAC", Offset = "0x1008EAC", VA = "0x1008EAC")]
	public DebugUISample()
	{
	}
}
[Token(Token = "0x2000069")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1009054", Offset = "0x1009054", VA = "0x1009054")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x200006A")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x100905C", Offset = "0x100905C", VA = "0x100905C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x10090F4", Offset = "0x10090F4", VA = "0x10090F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x10091CC", Offset = "0x10091CC", VA = "0x10091CC")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1009228", Offset = "0x1009228", VA = "0x1009228")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x200006B")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1009230", Offset = "0x1009230", VA = "0x1009230")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x200006C")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200006D")]
	[CompilerGenerated]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000231")]
			[Address(RVA = "0x1009640", Offset = "0x1009640", VA = "0x1009640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000233")]
			[Address(RVA = "0x1009688", Offset = "0x1009688", VA = "0x1009688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0x10094DC", Offset = "0x10094DC", VA = "0x10094DC")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0x100950C", Offset = "0x100950C", VA = "0x100950C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0x1009510", Offset = "0x1009510", VA = "0x1009510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0x1009648", Offset = "0x1009648", VA = "0x1009648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1009238", Offset = "0x1009238", VA = "0x1009238")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1009344", Offset = "0x1009344", VA = "0x1009344")]
	private void Update()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x10092D0", Offset = "0x10092D0", VA = "0x10092D0")]
	[IteratorStateMachine(typeof(<GetCenterEye>d__6))]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1009504", Offset = "0x1009504", VA = "0x1009504")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200006E")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(4f, 32f)]
	public int SubdivisionsU;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(4f, 32f)]
	public int SubdivisionsV;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1009690", Offset = "0x1009690", VA = "0x1009690")]
	private void Update()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x100B038", Offset = "0x100B038", VA = "0x100B038")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200006F")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000039")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x100B040", Offset = "0x100B040", VA = "0x100B040")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x100B090", Offset = "0x100B090", VA = "0x100B090")]
	public void Start()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x100B4C8", Offset = "0x100B4C8", VA = "0x100B4C8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x100B5A0", Offset = "0x100B5A0", VA = "0x100B5A0")]
	[Conditional("DEBUG_LOCOMOTION_PANEL")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600023A")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600023C")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600023D")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600023E")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600023F")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000240")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000241")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x100B5F8", Offset = "0x100B5F8", VA = "0x100B5F8")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x100B638", Offset = "0x100B638", VA = "0x100B638")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x100B6A4", Offset = "0x100B6A4", VA = "0x100B6A4")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x100B7F0", Offset = "0x100B7F0", VA = "0x100B7F0")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x100B8C0", Offset = "0x100B8C0", VA = "0x100B8C0")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x100B3A4", Offset = "0x100B3A4", VA = "0x100B3A4")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x100B990", Offset = "0x100B990", VA = "0x100B990")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x100B9DC", Offset = "0x100B9DC", VA = "0x100B9DC")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x100BAEC", Offset = "0x100BAEC", VA = "0x100BAEC")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000070")]
[RequireComponent(typeof(Canvas))]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000071")]
	public enum DrawMode
	{
		[Token(Token = "0x400022C")]
		Opaque,
		[Token(Token = "0x400022D")]
		OpaqueWithClip,
		[Token(Token = "0x400022E")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400022F")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700003A")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x100D130", Offset = "0x100D130", VA = "0x100D130")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x100D1B4", Offset = "0x100D1B4", VA = "0x100D1B4")]
		set
		{
		}
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x100BAF4", Offset = "0x100BAF4", VA = "0x100BAF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x100C7B8", Offset = "0x100C7B8", VA = "0x100C7B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x100C82C", Offset = "0x100C82C", VA = "0x100C82C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x100C8FC", Offset = "0x100C8FC", VA = "0x100C8FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x100C9CC", Offset = "0x100C9CC", VA = "0x100C9CC", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x100CBD0", Offset = "0x100CBD0", VA = "0x100CBD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x100D270", Offset = "0x100D270", VA = "0x100D270")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000072")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x100D32C", Offset = "0x100D32C", VA = "0x100D32C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x100D6CC", Offset = "0x100D6CC", VA = "0x100D6CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x100D860", Offset = "0x100D860", VA = "0x100D860")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x100D868", Offset = "0x100D868", VA = "0x100D868")]
	public void Release()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x100D850", Offset = "0x100D850", VA = "0x100D850")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x100D870", Offset = "0x100D870", VA = "0x100D870")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x2000073")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x2000074")]
	[CompilerGenerated]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0x100DFB8", Offset = "0x100DFB8", VA = "0x100DFB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000267")]
			[Address(RVA = "0x100E000", Offset = "0x100E000", VA = "0x100E000", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x100DE5C", Offset = "0x100DE5C", VA = "0x100DE5C")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x100DEB4", Offset = "0x100DEB4", VA = "0x100DEB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x100DEB8", Offset = "0x100DEB8", VA = "0x100DEB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x100DFC0", Offset = "0x100DFC0", VA = "0x100DFC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000075")]
	[CompilerGenerated]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0x100E184", Offset = "0x100E184", VA = "0x100E184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026D")]
			[Address(RVA = "0x100E1CC", Offset = "0x100E1CC", VA = "0x100E1CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x100DE84", Offset = "0x100DE84", VA = "0x100DE84")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x100E008", Offset = "0x100E008", VA = "0x100E008", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x100E00C", Offset = "0x100E00C", VA = "0x100E00C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x100E18C", Offset = "0x100E18C", VA = "0x100E18C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x100D878", Offset = "0x100D878", VA = "0x100D878")]
	private void Start()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x100DB58", Offset = "0x100DB58", VA = "0x100DB58")]
	private void Update()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x100DBA8", Offset = "0x100DBA8", VA = "0x100DBA8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x100DD20", Offset = "0x100DD20", VA = "0x100DD20")]
	public void Release()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x100DDC4", Offset = "0x100DDC4", VA = "0x100DDC4")]
	[IteratorStateMachine(typeof(<FadeCameraClearColor>d__8))]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x100DC60", Offset = "0x100DC60", VA = "0x100DC60")]
	[IteratorStateMachine(typeof(<FadeSphere>d__9))]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x100DEAC", Offset = "0x100DEAC", VA = "0x100DEAC")]
	public BrushController()
	{
	}
}
[Token(Token = "0x2000076")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x600026E")]
	[Address(RVA = "0x100E1D4", Offset = "0x100E1D4", VA = "0x100E1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x100E228", Offset = "0x100E228", VA = "0x100E228")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x2000077")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x100E230", Offset = "0x100E230", VA = "0x100E230")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x100E404", Offset = "0x100E404", VA = "0x100E404")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x100E494", Offset = "0x100E494", VA = "0x100E494")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x100E4F0", Offset = "0x100E4F0", VA = "0x100E4F0")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000078")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000079")]
	[CompilerGenerated]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000280")]
			[Address(RVA = "0x100F6C8", Offset = "0x100F6C8", VA = "0x100F6C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000282")]
			[Address(RVA = "0x100F710", Offset = "0x100F710", VA = "0x100F710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0x100F430", Offset = "0x100F430", VA = "0x100F430")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x100F4F8", Offset = "0x100F4F8", VA = "0x100F4F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0x100F4FC", Offset = "0x100F4FC", VA = "0x100F4FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x100F6D0", Offset = "0x100F6D0", VA = "0x100F6D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x100E4F8", Offset = "0x100E4F8", VA = "0x100E4F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x100E7E0", Offset = "0x100E7E0", VA = "0x100E7E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x100EACC", Offset = "0x100EACC", VA = "0x100EACC")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x100EDF4", Offset = "0x100EDF4", VA = "0x100EDF4")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x100F0CC", Offset = "0x100F0CC", VA = "0x100F0CC")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x100F1B4", Offset = "0x100F1B4", VA = "0x100F1B4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x100F34C", Offset = "0x100F34C", VA = "0x100F34C")]
	public void Release()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x100F29C", Offset = "0x100F29C", VA = "0x100F29C")]
	[IteratorStateMachine(typeof(<FadeLighting>d__17))]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x100F458", Offset = "0x100F458", VA = "0x100F458")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x200007A")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x200007B")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000264")]
		Default,
		[Token(Token = "0x4000265")]
		ForcedHand,
		[Token(Token = "0x4000266")]
		DollyHand,
		[Token(Token = "0x4000267")]
		DollyAttached,
		[Token(Token = "0x4000268")]
		HorizontalScaled,
		[Token(Token = "0x4000269")]
		VerticalScaled,
		[Token(Token = "0x400026A")]
		Menu
	}

	[Token(Token = "0x200007C")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x200007D")]
	public delegate void ReleasedObject();

	[Token(Token = "0x200007E")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string ObjectName;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string ObjectInstructions;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x100F718", Offset = "0x100F718", VA = "0x100F718")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x100F778", Offset = "0x100F778", VA = "0x100F778")]
	public void Release()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x100F794", Offset = "0x100F794", VA = "0x100F794")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x100F7B0", Offset = "0x100F7B0", VA = "0x100F7B0")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x200007F")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The segments around the tip of a finger")]
	public int radialDivisions;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The fade range (finger width is 2x this)")]
	public float borderSize;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Along the fingers, each knuckle scales down by this amount.  Default is zero for uniform width along entire finger.")]
	public float fingerTaper;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Shorten the last bone of each finger; need this to account for bone structure (end bone is at finger tip instead of center). Default is 1.")]
	public float fingerTipLength;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Move the base of the 4 main fingers towards the tips, to avoid a visible mesh crack between finger webbing. Default is 0.")]
	public float webOffset;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x100FA68", Offset = "0x100FA68", VA = "0x100FA68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x100FCC8", Offset = "0x100FCC8", VA = "0x100FCC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x100FE90", Offset = "0x100FE90", VA = "0x100FE90")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x10104E4", Offset = "0x10104E4", VA = "0x10104E4")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1010A7C", Offset = "0x1010A7C", VA = "0x1010A7C")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1012D84", Offset = "0x1012D84", VA = "0x1012D84")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x10130F8", Offset = "0x10130F8", VA = "0x10130F8")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000080")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x101311C", Offset = "0x101311C", VA = "0x101311C")]
	private void Start()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1013484", Offset = "0x1013484", VA = "0x1013484")]
	private void Update()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x10131B8", Offset = "0x10131B8", VA = "0x10131B8")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x10138EC", Offset = "0x10138EC", VA = "0x10138EC")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1013E5C", Offset = "0x1013E5C", VA = "0x1013E5C")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000081")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000082")]
	[CompilerGenerated]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AE")]
			[Address(RVA = "0x1016704", Offset = "0x1016704", VA = "0x1016704", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B0")]
			[Address(RVA = "0x101674C", Offset = "0x101674C", VA = "0x101674C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x1016044", Offset = "0x1016044", VA = "0x1016044")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x101642C", Offset = "0x101642C", VA = "0x101642C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x1016430", Offset = "0x1016430", VA = "0x1016430", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x101670C", Offset = "0x101670C", VA = "0x101670C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1013E6C", Offset = "0x1013E6C", VA = "0x1013E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1014068", Offset = "0x1014068", VA = "0x1014068")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1014FA4", Offset = "0x1014FA4", VA = "0x1014FA4")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x1015D38", Offset = "0x1015D38", VA = "0x1015D38")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1013FF4", Offset = "0x1013FF4", VA = "0x1013FF4")]
	[IteratorStateMachine(typeof(<StartDemo>d__23))]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x10142B8", Offset = "0x10142B8", VA = "0x10142B8")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1015298", Offset = "0x1015298", VA = "0x1015298")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x101606C", Offset = "0x101606C", VA = "0x101606C")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1016120", Offset = "0x1016120", VA = "0x1016120")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1016150", Offset = "0x1016150", VA = "0x1016150")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1015F28", Offset = "0x1015F28", VA = "0x1015F28")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1016240", Offset = "0x1016240", VA = "0x1016240")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x2000083")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1016754", Offset = "0x1016754", VA = "0x1016754")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x10168C0", Offset = "0x10168C0", VA = "0x10168C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1016974", Offset = "0x1016974", VA = "0x1016974")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000084")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	public enum BrushState
	{
		[Token(Token = "0x40002A7")]
		Idle,
		[Token(Token = "0x40002A8")]
		Inking
	}

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x101697C", Offset = "0x101697C", VA = "0x101697C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1016984", Offset = "0x1016984", VA = "0x1016984")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1016C34", Offset = "0x1016C34", VA = "0x1016C34")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1016E68", Offset = "0x1016E68", VA = "0x1016E68")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x10170A8", Offset = "0x10170A8", VA = "0x10170A8")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1016B4C", Offset = "0x1016B4C", VA = "0x1016B4C")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1017178", Offset = "0x1017178", VA = "0x1017178")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000086")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1017214", Offset = "0x1017214", VA = "0x1017214")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1017380", Offset = "0x1017380", VA = "0x1017380")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x101756C", Offset = "0x101756C", VA = "0x101756C")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000087")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1017574", Offset = "0x1017574", VA = "0x1017574")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x101775C", Offset = "0x101775C", VA = "0x101775C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x10178FC", Offset = "0x10178FC", VA = "0x10178FC")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000088")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000089")]
	[CompilerGenerated]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D2")]
			[Address(RVA = "0x10A60F4", Offset = "0x10A60F4", VA = "0x10A60F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D4")]
			[Address(RVA = "0x10A613C", Offset = "0x10A613C", VA = "0x10A613C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x10A5F78", Offset = "0x10A5F78", VA = "0x10A5F78")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x10A5FA0", Offset = "0x10A5FA0", VA = "0x10A5FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x10A5FA4", Offset = "0x10A5FA4", VA = "0x10A5FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x10A60FC", Offset = "0x10A60FC", VA = "0x10A60FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008A")]
	[CompilerGenerated]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D8")]
			[Address(RVA = "0x10A62D8", Offset = "0x10A62D8", VA = "0x10A62D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002DA")]
			[Address(RVA = "0x10A6320", Offset = "0x10A6320", VA = "0x10A6320", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x10A6144", Offset = "0x10A6144", VA = "0x10A6144")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x10A616C", Offset = "0x10A616C", VA = "0x10A616C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x10A6170", Offset = "0x10A6170", VA = "0x10A6170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x10A62E0", Offset = "0x10A62E0", VA = "0x10A62E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1017904", Offset = "0x1017904", VA = "0x1017904")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1017C40", Offset = "0x1017C40", VA = "0x1017C40")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1017FE0", Offset = "0x1017FE0", VA = "0x1017FE0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1018154", Offset = "0x1018154", VA = "0x1018154")]
	public void Release()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x10180D0", Offset = "0x10180D0", VA = "0x10180D0")]
	[IteratorStateMachine(typeof(<FadeToCurrentStyle>d__18))]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1018238", Offset = "0x1018238", VA = "0x1018238")]
	[IteratorStateMachine(typeof(<FadeToDefaultPassthrough>d__19))]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x10182BC", Offset = "0x10182BC", VA = "0x10182BC")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x10182DC", Offset = "0x10182DC", VA = "0x10182DC")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x10182FC", Offset = "0x10182FC", VA = "0x10182FC")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1017BD8", Offset = "0x1017BD8", VA = "0x1017BD8")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1018330", Offset = "0x1018330", VA = "0x1018330")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x101833C", Offset = "0x101833C", VA = "0x101833C")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1017C58", Offset = "0x1017C58", VA = "0x1017C58")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1018348", Offset = "0x1018348", VA = "0x1018348")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x200008B")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x10A6328", Offset = "0x10A6328", VA = "0x10A6328")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x10A63DC", Offset = "0x10A63DC", VA = "0x10A63DC")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x200008C")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x10A63E4", Offset = "0x10A63E4", VA = "0x10A63E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x10A6450", Offset = "0x10A6450", VA = "0x10A6450")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x10A6744", Offset = "0x10A6744", VA = "0x10A6744")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x200008D")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x10A674C", Offset = "0x10A674C", VA = "0x10A674C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x10A6BA0", Offset = "0x10A6BA0", VA = "0x10A6BA0")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x200008E")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x10A6BA8", Offset = "0x10A6BA8", VA = "0x10A6BA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x10A6E10", Offset = "0x10A6E10", VA = "0x10A6E10")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x10A6E5C", Offset = "0x10A6E5C", VA = "0x10A6E5C")]
	public void Release()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x10A6E9C", Offset = "0x10A6E9C", VA = "0x10A6E9C")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x200008F")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x2000090")]
	[CompilerGenerated]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002F1")]
			[Address(RVA = "0x10A75B8", Offset = "0x10A75B8", VA = "0x10A75B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F3")]
			[Address(RVA = "0x10A7600", Offset = "0x10A7600", VA = "0x10A7600", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x10A7480", Offset = "0x10A7480", VA = "0x10A7480")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x10A74C0", Offset = "0x10A74C0", VA = "0x10A74C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x10A74C4", Offset = "0x10A74C4", VA = "0x10A74C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x10A75C0", Offset = "0x10A75C0", VA = "0x10A75C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x10A6EA4", Offset = "0x10A6EA4", VA = "0x10A6EA4")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x10A6EC8", Offset = "0x10A6EC8", VA = "0x10A6EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x10A6FD0", Offset = "0x10A6FD0", VA = "0x10A6FD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x10A7074", Offset = "0x10A7074", VA = "0x10A7074")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x10A72C8", Offset = "0x10A72C8", VA = "0x10A72C8")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x10A736C", Offset = "0x10A736C", VA = "0x10A736C")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x10A7244", Offset = "0x10A7244", VA = "0x10A7244")]
	[IteratorStateMachine(typeof(<PlayPopCallback>d__18))]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x10A74A8", Offset = "0x10A74A8", VA = "0x10A74A8")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x2000091")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x10A7608", Offset = "0x10A7608", VA = "0x10A7608")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x10A7918", Offset = "0x10A7918", VA = "0x10A7918")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x2000092")]
[RequireComponent(typeof(OVRSceneAnchor))]
[DefaultExecutionOrder(30)]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Add a point at ceiling.")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x10A7920", Offset = "0x10A7920", VA = "0x10A7920")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x10A7B38", Offset = "0x10A7B38", VA = "0x10A7B38")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x10A7FA8", Offset = "0x10A7FA8", VA = "0x10A7FA8")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x10A79C0", Offset = "0x10A79C0", VA = "0x10A79C0")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x10A81C8", Offset = "0x10A81C8", VA = "0x10A81C8")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x10A86B4", Offset = "0x10A86B4", VA = "0x10A86B4")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x2000093")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x2000094")]
	[CompilerGenerated]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000303")]
			[Address(RVA = "0x10A88E8", Offset = "0x10A88E8", VA = "0x10A88E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000305")]
			[Address(RVA = "0x10A8930", Offset = "0x10A8930", VA = "0x10A8930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x10A8730", Offset = "0x10A8730", VA = "0x10A8730")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x10A87E8", Offset = "0x10A87E8", VA = "0x10A87E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x10A87EC", Offset = "0x10A87EC", VA = "0x10A87EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x10A88F0", Offset = "0x10A88F0", VA = "0x10A88F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x10A86BC", Offset = "0x10A86BC", VA = "0x10A86BC")]
	[IteratorStateMachine(typeof(<DelayedLoad>d__0))]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x10A8758", Offset = "0x10A8758", VA = "0x10A8758", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x10A8778", Offset = "0x10A8778", VA = "0x10A8778", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x10A87E0", Offset = "0x10A87E0", VA = "0x10A87E0")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x2000095")]
[RequireComponent(typeof(OVRManager))]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x6000306")]
	[Address(RVA = "0x10A8938", Offset = "0x10A8938", VA = "0x10A8938")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x10A893C", Offset = "0x10A893C", VA = "0x10A893C")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x2000096")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x10A8944", Offset = "0x10A8944", VA = "0x10A8944")]
	private void Start()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x10A89BC", Offset = "0x10A89BC", VA = "0x10A89BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x10A8A40", Offset = "0x10A8A40", VA = "0x10A8A40")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x2000097")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x2000098")]
	public enum Method
	{
		[Token(Token = "0x4000304")]
		Adapt,
		[Token(Token = "0x4000305")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x4000306")]
		Scale,
		[Token(Token = "0x4000307")]
		None
	}

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(15f)]
	public Method ScalingX;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 0.5f)]
	public float PaddingX;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(-0.5f, 0f)]
	public float PaddingXMax;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(15f)]
	public Method ScalingY;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 0.5f)]
	public float PaddingY;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(-0.5f, 0f)]
	public float PaddingYMax;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(15f)]
	public Method ScalingZ;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.5f)]
	public float PaddingZ;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-0.5f, 0f)]
	public float PaddingZMax;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x1700004B")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0x10A8A50", Offset = "0x10A8A50", VA = "0x10A8A50")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004C")]
	public Vector3 NewSize
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x10A8A6C", Offset = "0x10A8A6C", VA = "0x10A8A6C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x10A8A78", Offset = "0x10A8A78", VA = "0x10A8A78")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0x10A8A84", Offset = "0x10A8A84", VA = "0x10A8A84")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x10A8A90", Offset = "0x10A8A90", VA = "0x10A8A90")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public Mesh Mesh
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x10A8A9C", Offset = "0x10A8A9C", VA = "0x10A8A9C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x10A8AA4", Offset = "0x10A8AA4", VA = "0x10A8AA4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x10A8AAC", Offset = "0x10A8AAC", VA = "0x10A8AAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x10A8BE8", Offset = "0x10A8BE8", VA = "0x10A8BE8")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x2000099")]
public class SimpleResizer
{
	[Token(Token = "0x6000314")]
	[Address(RVA = "0x10A8320", Offset = "0x10A8320", VA = "0x10A8320")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x10A8BF0", Offset = "0x10A8BF0", VA = "0x10A8BF0")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x10A8E74", Offset = "0x10A8E74", VA = "0x10A8E74")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x10A8318", Offset = "0x10A8318", VA = "0x10A8318")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x200009A")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x10A8F1C", Offset = "0x10A8F1C", VA = "0x10A8F1C", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x10A8F20", Offset = "0x10A8F20", VA = "0x10A8F20", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x10A9388", Offset = "0x10A9388", VA = "0x10A9388")]
	public Spawnable()
	{
	}
}
[Token(Token = "0x200009B")]
[RequireComponent(typeof(OVRSceneAnchor))]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x200009C")]
	public enum GeometryType
	{
		[Token(Token = "0x400030F")]
		Plane,
		[Token(Token = "0x4000310")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x200009D")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x10A93E0", Offset = "0x10A93E0", VA = "0x10A93E0")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x10A980C", Offset = "0x10A980C", VA = "0x10A980C")]
	private void Start()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x10AA144", Offset = "0x10AA144", VA = "0x10AA144")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x10AA01C", Offset = "0x10AA01C", VA = "0x10AA01C")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x10AA1C4", Offset = "0x10AA1C4", VA = "0x10AA1C4")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x200009E")]
[RequireComponent(typeof(OVRSpatialAnchor))]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x200009F")]
	[CompilerGenerated]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000334")]
			[Address(RVA = "0x10AAF8C", Offset = "0x10AAF8C", VA = "0x10AAF8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000336")]
			[Address(RVA = "0x10AAFD4", Offset = "0x10AAFD4", VA = "0x10AAFD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0x10AA3C0", Offset = "0x10AA3C0", VA = "0x10AA3C0")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x10AAE10", Offset = "0x10AAE10", VA = "0x10AAE10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x10AAE14", Offset = "0x10AAE14", VA = "0x10AAE14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x10AAF94", Offset = "0x10AAF94", VA = "0x10AAF94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000313")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("canvas_")]
	private Canvas _canvas;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("pivot_")]
	private Transform _pivot;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[FormerlySerializedAs("anchorMenu_")]
	private GameObject _anchorMenu;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[FormerlySerializedAs("anchorName_")]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[FormerlySerializedAs("saveIcon_")]
	private GameObject _saveIcon;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[FormerlySerializedAs("labelImage_")]
	private Image _labelImage;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[FormerlySerializedAs("labelBaseColor_")]
	private Color _labelBaseColor;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[FormerlySerializedAs("labelHighlightColor_")]
	private Color _labelHighlightColor;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[FormerlySerializedAs("labelSelectedColor_")]
	private Color _labelSelectedColor;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("uiManager_")]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("renderers_")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[FormerlySerializedAs("buttonList_")]
	private List<Button> _buttonList;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x1700004F")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x10AA86C", Offset = "0x10AA86C", VA = "0x10AA86C")]
		set
		{
		}
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x10AA1CC", Offset = "0x10AA1CC", VA = "0x10AA1CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x10AA34C", Offset = "0x10AA34C", VA = "0x10AA34C")]
	[IteratorStateMachine(typeof(<Start>d__20))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x10AA3E8", Offset = "0x10AA3E8", VA = "0x10AA3E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x10AA660", Offset = "0x10AA660", VA = "0x10AA660")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x10AA730", Offset = "0x10AA730", VA = "0x10AA730")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x10AA79C", Offset = "0x10AA79C", VA = "0x10AA79C")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x10AA88C", Offset = "0x10AA88C", VA = "0x10AA88C")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x10AA9A8", Offset = "0x10AA9A8", VA = "0x10AA9A8")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x10AAAB0", Offset = "0x10AAAB0", VA = "0x10AAAB0")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x10AA438", Offset = "0x10AA438", VA = "0x10AA438")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x10AA56C", Offset = "0x10AA56C", VA = "0x10AA56C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x10AAB80", Offset = "0x10AAB80", VA = "0x10AAB80")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x10AACB8", Offset = "0x10AACB8", VA = "0x10AACB8")]
	public Anchor()
	{
	}
}
[Token(Token = "0x20000A0")]
[RequireComponent(typeof(SpatialAnchorLoader))]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x20000A1")]
	public enum AnchorMode
	{
		[Token(Token = "0x400033C")]
		Create,
		[Token(Token = "0x400033D")]
		Select
	}

	[Token(Token = "0x20000A2")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("createModeButton_")]
	private GameObject _createModeButton;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("selectModeButton_")]
	private GameObject _selectModeButton;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[FormerlySerializedAs("trackedDevice_")]
	private Transform _trackedDevice;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[FormerlySerializedAs("lineRenderer_")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[FormerlySerializedAs("buttonList_")]
	private List<Button> _buttonList;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("placementPreview_")]
	private GameObject _placementPreview;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("anchorPlacementTransform_")]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000052")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x10AAFDC", Offset = "0x10AAFDC", VA = "0x10AAFDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x10AAFE4", Offset = "0x10AAFE4", VA = "0x10AAFE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x10AB0B0", Offset = "0x10AB0B0", VA = "0x10AB0B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x10AB200", Offset = "0x10AB200", VA = "0x10AB200")]
	private void Update()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x10AB670", Offset = "0x10AB670", VA = "0x10AB670")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x10AB6DC", Offset = "0x10AB6DC", VA = "0x10AB6DC")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x10AB198", Offset = "0x10AB198", VA = "0x10AB198")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x10AB964", Offset = "0x10AB964", VA = "0x10AB964")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x10AB9EC", Offset = "0x10AB9EC", VA = "0x10AB9EC")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x10ABA0C", Offset = "0x10ABA0C", VA = "0x10ABA0C")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x10AB944", Offset = "0x10AB944", VA = "0x10AB944")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x10AB57C", Offset = "0x10AB57C", VA = "0x10AB57C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x10ABC0C", Offset = "0x10ABC0C", VA = "0x10ABC0C")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x10ABA94", Offset = "0x10ABA94", VA = "0x10ABA94")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x10ABB80", Offset = "0x10ABB80", VA = "0x10ABB80")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x10ABD0C", Offset = "0x10ABD0C", VA = "0x10ABD0C")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x10ABBA0", Offset = "0x10ABBA0", VA = "0x10ABBA0")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x10ABBD8", Offset = "0x10ABBD8", VA = "0x10ABBD8")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x10AB300", Offset = "0x10AB300", VA = "0x10AB300")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x10ABDF8", Offset = "0x10ABDF8", VA = "0x10ABDF8")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x10ABE20", Offset = "0x10ABE20", VA = "0x10ABE20")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x10ABEB0", Offset = "0x10ABEB0", VA = "0x10ABEB0")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x10ABFF8", Offset = "0x10ABFF8", VA = "0x10ABFF8")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x20000A3")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<OVRSpatialAnchor.UnboundAnchor, bool> _onLoadAnchor;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x10AB730", Offset = "0x10AB730", VA = "0x10AB730")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x10AC1B4", Offset = "0x10AC1B4", VA = "0x10AC1B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x10AC0D4", Offset = "0x10AC0D4", VA = "0x10AC0D4")]
	private void Load(OVRSpatialAnchor.LoadOptions options)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x10AC238", Offset = "0x10AC238", VA = "0x10AC238")]
	private void OnLocalized(OVRSpatialAnchor.UnboundAnchor unboundAnchor, bool success)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x10AC048", Offset = "0x10AC048", VA = "0x10AC048")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x10AC3E8", Offset = "0x10AC3E8", VA = "0x10AC3E8")]
	public SpatialAnchorLoader()
	{
	}
}
[Token(Token = "0x20000A4")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x10AC520", Offset = "0x10AC520", VA = "0x10AC520")]
	private void Start()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x10AC734", Offset = "0x10AC734", VA = "0x10AC734")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x10AC838", Offset = "0x10AC838", VA = "0x10AC838")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000A6")]
public class PickFX : MonoBehaviour
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ParticleSystem> particles;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x10AC85C", Offset = "0x10AC85C", VA = "0x10AC85C")]
	private void Start()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x10AC8D8", Offset = "0x10AC8D8", VA = "0x10AC8D8")]
	public void EnableFX(bool isEnable)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x10ACA44", Offset = "0x10ACA44", VA = "0x10ACA44")]
	public PickFX()
	{
	}
}
[Token(Token = "0x20000A7")]
public class PickThumbGenerator : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform center;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture rt;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera thumbCamera;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer currentPick;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader RenderShader;

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x10ACA4C", Offset = "0x10ACA4C", VA = "0x10ACA4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x10ACFD0", Offset = "0x10ACFD0", VA = "0x10ACFD0")]
	public PickThumbGenerator()
	{
	}
}
[Token(Token = "0x20000A8")]
public class PickUIYourRankController : MonoBehaviour
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer PickTarget;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DistanceToShow;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Scale;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PickRankingYourRankController yourRankController;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int showUIId;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x10ACFD8", Offset = "0x10ACFD8", VA = "0x10ACFD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x10AD278", Offset = "0x10AD278", VA = "0x10AD278")]
	private void Update()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x10AD578", Offset = "0x10AD578", VA = "0x10AD578")]
	public PickUIYourRankController()
	{
	}
}
[Token(Token = "0x20000AB")]
public class RateGameMessage : MonoBehaviour
{
	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ConfettiBlast;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ConfettiAnchor;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject NotRedeemedUI;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject RedeemedUI;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string guitarId;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool NeedsShowingUI;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x10AD89C", Offset = "0x10AD89C", VA = "0x10AD89C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x10ADB20", Offset = "0x10ADB20", VA = "0x10ADB20")]
	public void RedeemStarGuitar()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x10ADD0C", Offset = "0x10ADD0C", VA = "0x10ADD0C")]
	public RateGameMessage()
	{
	}
}
[Token(Token = "0x20000AC")]
public class ActivatePassThrough : MonoBehaviour
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Gradient passTroughColors;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GradientColorKey[] colorKeys;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject VolumeLights;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve LightsIntesity;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material> lightMaterials;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x10ADD9C", Offset = "0x10ADD9C", VA = "0x10ADD9C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x10AE314", Offset = "0x10AE314", VA = "0x10AE314")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x10AE384", Offset = "0x10AE384", VA = "0x10AE384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x10AE704", Offset = "0x10AE704", VA = "0x10AE704")]
	public ActivatePassThrough()
	{
	}
}
[Token(Token = "0x20000AD")]
public class ActivePortalInBackStage : MonoBehaviour
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PortalFxGO;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator PortalAnimatior;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x10AE70C", Offset = "0x10AE70C", VA = "0x10AE70C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x10AE7EC", Offset = "0x10AE7EC", VA = "0x10AE7EC")]
	public ActivePortalInBackStage()
	{
	}
}
[Token(Token = "0x20000AE")]
public class AlbumChallengesController : MonoBehaviour
{
	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RuleItems ruleItems;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VenueIconController venueIconController;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI venueLabel;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI albumNameLabel;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject CompletedTicks;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpriteRenderer AlbumCover;

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x10AE7F4", Offset = "0x10AE7F4", VA = "0x10AE7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x10AE7F8", Offset = "0x10AE7F8", VA = "0x10AE7F8")]
	public void HideVenueRules()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x10AE7FC", Offset = "0x10AE7FC", VA = "0x10AE7FC")]
	public void ShowVenueRules(AlbumData album)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x10AED6C", Offset = "0x10AED6C", VA = "0x10AED6C")]
	public AlbumChallengesController()
	{
	}
}
[Token(Token = "0x20000B1")]
[CreateAssetMenu(menuName = "Unplugged/Create AlbumData")]
public class AlbumData : ScriptableObject
{
	[StructLayout(3)]
	[Token(Token = "0x20000B4")]
	[CompilerGenerated]
	private struct <GetSongsMetadataAsync>d__21 : IAsyncStateMachine
	{
		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<List<SongMappingMetaData>> <>t__builder;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlbumData <>4__this;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool replaceCurrenAlbumData;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<List<SongMappingMetaData>> <>u__1;

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x10AFA6C", Offset = "0x10AFA6C", VA = "0x10AFA6C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x10AFCEC", Offset = "0x10AFCEC", VA = "0x10AFCEC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string ThumbnailsPath;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AlbumID;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string VenueID;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Name;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D Cover;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D VinylTexture;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string UnlockedAlbumIntermezzoID;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LpUnlockRules LpRules;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<SongAsset> SongFiles;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<SongMappingMetaData> songsMetadata;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<SongMappingMetaData> builtInSongsMetadata;

	[Token(Token = "0x17000053")]
	public bool IsCompleted
	{
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x10AECF4", Offset = "0x10AECF4", VA = "0x10AECF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x10AEED8", Offset = "0x10AEED8", VA = "0x10AEED8")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public List<SongMappingMetaData> SongsMetadata
	{
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x10AF3C4", Offset = "0x10AF3C4", VA = "0x10AF3C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x10AEE3C", Offset = "0x10AEE3C", VA = "0x10AEE3C")]
	private static List<string> GetCompletedAlbums()
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x10AF018", Offset = "0x10AF018", VA = "0x10AF018", Slot = "4")]
	public virtual List<PickRank> GetRanks()
	{
		return null;
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x10AF118", Offset = "0x10AF118", VA = "0x10AF118", Slot = "5")]
	public virtual PickRank GetrankFromRankNumber(int rankNumber)
	{
		return default(PickRank);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x10AF32C", Offset = "0x10AF32C", VA = "0x10AF32C")]
	public void RetrieveSongsMetadata()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x10AF510", Offset = "0x10AF510", VA = "0x10AF510")]
	public void RetrieveSongsFromFolder()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x10AF594", Offset = "0x10AF594", VA = "0x10AF594")]
	[AsyncStateMachine(typeof(<GetSongsMetadataAsync>d__21))]
	public Task<List<SongMappingMetaData>> GetSongsMetadataAsync(bool replaceCurrenAlbumData = false)
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x10AF6B4", Offset = "0x10AF6B4", VA = "0x10AF6B4")]
	public void AddSong(string asset)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x10AF894", Offset = "0x10AF894", VA = "0x10AF894")]
	public AlbumData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B5")]
public class LpUnlockRules
{
	[Token(Token = "0x20000B6")]
	public enum Rules
	{
		[Token(Token = "0x400038A")]
		MinTotalScore,
		[Token(Token = "0x400038B")]
		MinCombo,
		[Token(Token = "0x400038C")]
		HasBeenPlayed,
		[Token(Token = "0x400038D")]
		SongsCompleted,
		[Token(Token = "0x400038E")]
		MinDiamondRecordsAchieved,
		[Token(Token = "0x400038F")]
		MinPlatinumRecordsAchieved,
		[Token(Token = "0x4000390")]
		MinGoldRecordsAchieved,
		[Token(Token = "0x4000391")]
		MinTotalRecordsAchieved,
		[Token(Token = "0x4000392")]
		MinHardStarsAchieved,
		[Token(Token = "0x4000393")]
		MinNormalStarsAchieved,
		[Token(Token = "0x4000394")]
		MinEasyStarsAchieved,
		[Token(Token = "0x4000395")]
		MinTotalStarsAchieved,
		[Token(Token = "0x4000396")]
		UnlockPreviousVenue
	}

	[Token(Token = "0x20000B7")]
	public struct RuleStatus
	{
		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Rules Type;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int UnlockValue;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int currentValue;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AlbumData album;

		[Token(Token = "0x17000055")]
		public int CurrentValue
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0x10B0DB4", Offset = "0x10B0DB4", VA = "0x10B0DB4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000056")]
		public bool IsLock
		{
			[Token(Token = "0x6000398")]
			[Address(RVA = "0x10B1044", Offset = "0x10B1044", VA = "0x10B1044")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x10B09CC", Offset = "0x10B09CC", VA = "0x10B09CC")]
		public RuleStatus(AlbumData album, Rules type, int currentValue, int unlockValue)
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x10B105C", Offset = "0x10B105C", VA = "0x10B105C")]
		public bool IsRuleSastified()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int MinHighScore;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int MinCombo;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MinDiamondRecordsAchieved;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MinPlatinumRecordsAchieved;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MinGoldRecordsAchieved;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int MinTotalRecordsAchieved;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int MinHardStarsAchieved;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MinNormalStarsAchieved;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MinEasyStarsAchieved;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MinTotalStarsAchieved;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int SongsPlayed;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int IsPreviousAlbumCompleted;

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x10AFD44", Offset = "0x10AFD44", VA = "0x10AFD44")]
	public List<RuleStatus> GetRules(AlbumData sla)
	{
		return null;
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x10B0A08", Offset = "0x10B0A08", VA = "0x10B0A08")]
	public List<RuleStatus> RetrieveNotFulfilledRules(AlbumData sla)
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x10B0B44", Offset = "0x10B0B44", VA = "0x10B0B44")]
	public List<RuleStatus> RetrieveDefinedRules(AlbumData albumData)
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x10B0C80", Offset = "0x10B0C80", VA = "0x10B0C80")]
	public bool IsUnlocked(AlbumData sla)
	{
		return default(bool);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x10B0DAC", Offset = "0x10B0DAC", VA = "0x10B0DAC")]
	public LpUnlockRules()
	{
	}
}
[Token(Token = "0x20000B9")]
public class AlbumSelectorNavigator : MonoBehaviour
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MiniAlbumItemPrefab;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MiniAlbumItem> MiniAlbumItems;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AlbumData selectedItem;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MiniAlbumItem currentSelectedContainer;

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x10B1154", Offset = "0x10B1154", VA = "0x10B1154")]
	public void SetItems(List<AlbumData> Albums)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x10B1820", Offset = "0x10B1820", VA = "0x10B1820")]
	public void SelectItem(AlbumData album)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x10B19D0", Offset = "0x10B19D0", VA = "0x10B19D0")]
	public AlbumSelectorNavigator()
	{
	}
}
[Token(Token = "0x20000BA")]
public class AlbumsManager : MonoBehaviour
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AlbumsManager I;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AlbumData> CampaignAlbums;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DLCAlbumData> DlcAlbums;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ChallengeAlbumData> ChallengeAlbums;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Task<List<SongMappingMetaData>> loadingAlbumTask;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<SongAsset> allSongs;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Venue> Venues;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Venue> AdditionalVenues;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DLCAlbumData DebugSongAlbum;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Venue selectedVenue;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static AlbumData selectedAlbum;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SongMappingMetaData> CurrentAlbumSongs;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<PickRank> EasyRanks;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<PickRank> NormalRanks;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<PickRank> HardRanks;

	[Token(Token = "0x17000057")]
	public ChallengeAlbumData ActiveChallenge
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x10B1FA8", Offset = "0x10B1FA8", VA = "0x10B1FA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public Venue SelectedVenue
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x10B2210", Offset = "0x10B2210", VA = "0x10B2210")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x10B22FC", Offset = "0x10B22FC", VA = "0x10B22FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public static AlbumData SelectedAlbum
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x10B2540", Offset = "0x10B2540", VA = "0x10B2540")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x10B2620", Offset = "0x10B2620", VA = "0x10B2620")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public List<AlbumData> AllAlbums
	{
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x10B277C", Offset = "0x10B277C", VA = "0x10B277C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public List<SongAsset> AllSongs
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x10B2824", Offset = "0x10B2824", VA = "0x10B2824")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000013")]
	public static event Action<AlbumData> SelectedChanged
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x10B1AC8", Offset = "0x10B1AC8", VA = "0x10B1AC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x10B1B98", Offset = "0x10B1B98", VA = "0x10B1B98")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event Action<List<SongMappingMetaData>> AlbumLoaded
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x10B1C68", Offset = "0x10B1C68", VA = "0x10B1C68")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x10B1D38", Offset = "0x10B1D38", VA = "0x10B1D38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event Action<Venue> SelectedVenueChanged
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x10B1E08", Offset = "0x10B1E08", VA = "0x10B1E08")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x10B1ED8", Offset = "0x10B1ED8", VA = "0x10B1ED8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x10AF0D8", Offset = "0x10AF0D8", VA = "0x10AF0D8")]
	public List<PickRank> GetRanksByDifficulty(DifficultyLevel diff)
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x10B2910", Offset = "0x10B2910", VA = "0x10B2910")]
	public bool IsPreviousVenueRuleLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x10B26A8", Offset = "0x10B26A8", VA = "0x10B26A8")]
	public List<SongMappingMetaData> SetSelectedAlbum(AlbumData album)
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x10B2A14", Offset = "0x10B2A14", VA = "0x10B2A14")]
	private void SetAllAlbumsMappingMetadata()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x10B2AE4", Offset = "0x10B2AE4", VA = "0x10B2AE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x10B1FAC", Offset = "0x10B1FAC", VA = "0x10B1FAC")]
	public ChallengeAlbumData GetUserActiveChallenge()
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x10B2EE8", Offset = "0x10B2EE8", VA = "0x10B2EE8")]
	public void CheckChallengesInAlbum()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x10B3124", Offset = "0x10B3124", VA = "0x10B3124")]
	public void SetDebugAlbumsAnRules(bool useDebugSongFolder, bool useDebugCampaignRules)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x10B32A8", Offset = "0x10B32A8", VA = "0x10B32A8")]
	public AlbumsManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BC")]
public class Venue
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string Id;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string Name;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string IconPrefabName;

	[Token(Token = "0x1700005C")]
	[JsonIgnore]
	public bool IsLocked
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x10B23C0", Offset = "0x10B23C0", VA = "0x10B23C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x10B3550", Offset = "0x10B3550", VA = "0x10B3550")]
	public Venue()
	{
	}
}
[Token(Token = "0x20000BD")]
public class AlbumSongListItemController : MonoBehaviour
{
	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SongListContainer;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI AlbumTitle;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SongItemPrefab;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image Background;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isExiting;

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x10B357C", Offset = "0x10B357C", VA = "0x10B357C")]
	public void SetAlbum(AlbumData album)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x10B3D10", Offset = "0x10B3D10", VA = "0x10B3D10")]
	public void Exit()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x10B425C", Offset = "0x10B425C", VA = "0x10B425C")]
	public AlbumSongListItemController()
	{
	}
}
[Token(Token = "0x20000BE")]
public class AnimatedTexture : MonoBehaviour
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Sprite> AnimationTextures;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float animationTime;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentFrame;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Image> ImagesToAnimate;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer RendererToAnimate;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer SpriteRendererToAnimate;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x10B43F0", Offset = "0x10B43F0", VA = "0x10B43F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x10B452C", Offset = "0x10B452C", VA = "0x10B452C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x10B4530", Offset = "0x10B4530", VA = "0x10B4530")]
	private void CheckAnimationTexture()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x10B47E8", Offset = "0x10B47E8", VA = "0x10B47E8")]
	public AnimatedTexture()
	{
	}
}
[Token(Token = "0x20000BF")]
public class AnimationEventBridge : MonoBehaviour
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Component TargetComponent;

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x10B47F0", Offset = "0x10B47F0", VA = "0x10B47F0")]
	public void RaiseEvent(string methodToCall)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x10B4A34", Offset = "0x10B4A34", VA = "0x10B4A34")]
	public AnimationEventBridge()
	{
	}
}
[Token(Token = "0x20000C0")]
public class AnimationEventsUtil : MonoBehaviour
{
	[Token(Token = "0x20000C1")]
	[CompilerGenerated]
	private sealed class <DestroyWithDelay>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationEventsUtil <>4__this;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0x10B4C74", Offset = "0x10B4C74", VA = "0x10B4C74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DD")]
			[Address(RVA = "0x10B4CBC", Offset = "0x10B4CBC", VA = "0x10B4CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x10B4B4C", Offset = "0x10B4B4C", VA = "0x10B4B4C")]
		[DebuggerHidden]
		public <DestroyWithDelay>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x10B4B7C", Offset = "0x10B4B7C", VA = "0x10B4B7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x10B4B80", Offset = "0x10B4B80", VA = "0x10B4B80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x10B4C7C", Offset = "0x10B4C7C", VA = "0x10B4C7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x10B4A3C", Offset = "0x10B4A3C", VA = "0x10B4A3C")]
	public void DestroyGameObject()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x10B4AA8", Offset = "0x10B4AA8", VA = "0x10B4AA8")]
	public void DestroyInSeconds(float seconds)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x10B4AC8", Offset = "0x10B4AC8", VA = "0x10B4AC8")]
	[IteratorStateMachine(typeof(<DestroyWithDelay>d__2))]
	private IEnumerator DestroyWithDelay(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x10B4B74", Offset = "0x10B4B74", VA = "0x10B4B74")]
	public AnimationEventsUtil()
	{
	}
}
[Token(Token = "0x20000C2")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x20000C3")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource sound;

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x10B51D0", Offset = "0x10B51D0", VA = "0x10B51D0")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x10B51D8", Offset = "0x10B51D8", VA = "0x10B51D8")]
		internal bool <WaitForSoundAndDestroy>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000C4")]
	[CompilerGenerated]
	private sealed class <WaitForSoundAndDestroy>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource sound;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass10_0 <>8__1;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x10B5430", Offset = "0x10B5430", VA = "0x10B5430", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003EB")]
			[Address(RVA = "0x10B5478", Offset = "0x10B5478", VA = "0x10B5478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x10B4FAC", Offset = "0x10B4FAC", VA = "0x10B4FAC")]
		[DebuggerHidden]
		public <WaitForSoundAndDestroy>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x10B5264", Offset = "0x10B5264", VA = "0x10B5264", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x10B5268", Offset = "0x10B5268", VA = "0x10B5268", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x10B5438", Offset = "0x10B5438", VA = "0x10B5438", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer Mixer;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerSnapshot MixerMenu;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerSnapshot MixerPreShow;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerSnapshot MixerGame;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioMixerSnapshot MixerScore;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioMixerSnapshot MixerPowerBullet;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioMixerSnapshot MixerPowerDefault;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject audioSourcePrefab;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioManager I;

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x10B4CC4", Offset = "0x10B4CC4", VA = "0x10B4CC4")]
	public static AudioSource CreateAudio(AudioClip clip, Transform parent, [Optional] AudioMixerGroup audioMixerGroup, bool autoPlayAndKillOnComplete = true)
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x10B4E8C", Offset = "0x10B4E8C", VA = "0x10B4E8C")]
	public static AudioSource CreateAudio(AudioClipSettings settings, Transform parent, bool autoPlayAndKillOnComplete = true)
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x10B4E18", Offset = "0x10B4E18", VA = "0x10B4E18")]
	[IteratorStateMachine(typeof(<WaitForSoundAndDestroy>d__10))]
	public IEnumerator WaitForSoundAndDestroy(AudioSource sound)
	{
		return null;
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x10B4FD4", Offset = "0x10B4FD4", VA = "0x10B4FD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x10B50A8", Offset = "0x10B50A8", VA = "0x10B50A8")]
	public static void SetMixerState(MixerStates state)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x10B51C8", Offset = "0x10B51C8", VA = "0x10B51C8")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x20000C5")]
public enum MixerStates
{
	[Token(Token = "0x40003D8")]
	Menu,
	[Token(Token = "0x40003D9")]
	PreShow,
	[Token(Token = "0x40003DA")]
	Game,
	[Token(Token = "0x40003DB")]
	Score,
	[Token(Token = "0x40003DC")]
	PowerBullet,
	[Token(Token = "0x40003DD")]
	PowerDefault
}
[Token(Token = "0x20000C6")]
public class CrowdSoundManager : MonoBehaviour
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioSource> Idle;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AudioSource> Neutral;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AudioSource> Excited;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AudioSource> Disappointed;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<AudioSource> Cheer;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AudioSource> Boo;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float userSettingsVolume;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float currentNormalizedVolume;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<TweenerCore<float, float, FloatOptions>> CurrentAnimations;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CrowdStates currentState;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CrowdSoundManager I;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x10B5480", Offset = "0x10B5480", VA = "0x10B5480")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x10B54D8", Offset = "0x10B54D8", VA = "0x10B54D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x10B552C", Offset = "0x10B552C", VA = "0x10B552C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x10B561C", Offset = "0x10B561C", VA = "0x10B561C")]
	private void SettingsController_CrowdVolumeChanged()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x10B555C", Offset = "0x10B555C", VA = "0x10B555C")]
	public static void SetVolume(float normalizedVolume)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x10B5A70", Offset = "0x10B5A70", VA = "0x10B5A70")]
	public static void SetCrowdFeedback(CrowdStates state)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x10B5B24", Offset = "0x10B5B24", VA = "0x10B5B24")]
	public void SetFeedback(CrowdStates state)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x10B5C00", Offset = "0x10B5C00", VA = "0x10B5C00")]
	private List<AudioSource> GetAudioSources(CrowdStates state)
	{
		return null;
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x10B5644", Offset = "0x10B5644", VA = "0x10B5644")]
	private void SetAudios(CrowdStates state, float volume)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x10B5C68", Offset = "0x10B5C68", VA = "0x10B5C68")]
	public CrowdSoundManager()
	{
	}
}
[Token(Token = "0x20000C9")]
public enum CrowdStates
{
	[Token(Token = "0x40003EF")]
	Idle,
	[Token(Token = "0x40003F0")]
	Neutral,
	[Token(Token = "0x40003F1")]
	Excited,
	[Token(Token = "0x40003F2")]
	Disappointed,
	[Token(Token = "0x40003F3")]
	Cheer,
	[Token(Token = "0x40003F4")]
	Boo
}
[Token(Token = "0x20000CA")]
public class BackgroundMusicManager : MonoBehaviour
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BackgroundMusicManager I;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource musicAudioSource;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource fxAudioSource;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currentVolume;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x10B5D78", Offset = "0x10B5D78", VA = "0x10B5D78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x10B5DDC", Offset = "0x10B5DDC", VA = "0x10B5DDC")]
	public static void SetVolume(float volume)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x10B5FE0", Offset = "0x10B5FE0", VA = "0x10B5FE0")]
	public static void PlayFx(AudioClip clip)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x10B6064", Offset = "0x10B6064", VA = "0x10B6064")]
	public static void StopFx()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x10B60C0", Offset = "0x10B60C0", VA = "0x10B60C0")]
	public static void PlayMusic()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x10B6384", Offset = "0x10B6384", VA = "0x10B6384")]
	public static void StopMusic()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x10B65E0", Offset = "0x10B65E0", VA = "0x10B65E0")]
	public BackgroundMusicManager()
	{
	}
}
[Token(Token = "0x20000CC")]
public class GuitarMenu : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20000CD")]
	[CompilerGenerated]
	private struct <Start>d__28 : IAsyncStateMachine
	{
		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GuitarMenu <>4__this;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x10B8BA0", Offset = "0x10B8BA0", VA = "0x10B8BA0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x10B92AC", Offset = "0x10B92AC", VA = "0x10B92AC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20000D0")]
	[CompilerGenerated]
	private struct <SetGuitars>d__33 : IAsyncStateMachine
	{
		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GuitarMenu <>4__this;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GuitarData> guitars;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int page;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GuitarData> <pagedList>5__2;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x10B9850", Offset = "0x10B9850", VA = "0x10B9850", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x10BA2B0", Offset = "0x10BA2B0", VA = "0x10BA2B0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20000D2")]
	[CompilerGenerated]
	private struct <CleanGuitars>d__36 : IAsyncStateMachine
	{
		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GuitarMenu <>4__this;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x10BA7D0", Offset = "0x10BA7D0", VA = "0x10BA7D0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x10BAB20", Offset = "0x10BAB20", VA = "0x10BAB20", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractableObject interactiveArea;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform InteractionPlaneAnchor;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GuitarMenuItem> GuitarsObjects;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject GuitarInfoPanelPrefab;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ConfirmationPanelPrefab;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform InfoPanelsAnchor;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ConfirmationPanelAnchor;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PressableButton PrevPageButton;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PressableButton NextPageButton;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PressableButton UnpluggedButton;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PressableButton SchecterButton;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GuitarData> Guitars;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GuitarData SelectedGuitar;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject Paginator;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GuitarData GuitarToBuy;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GuitarMenuItem selectedGuitarMenuItem;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GuitarMenuItem hoveredGuitar;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GuitarInfoPanelController currentInfoPanel;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ParticleSystem.EmitParams psParams;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Plane interactionPlane;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool isLoadingGuitars;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int currentPage;

	[Token(Token = "0x14000016")]
	public event Action<GuitarData, InteractiveHand> GuitarSelected
	{
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x10B6970", Offset = "0x10B6970", VA = "0x10B6970")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x10B6A20", Offset = "0x10B6A20", VA = "0x10B6A20")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Action GuitarPurchased
	{
		[Token(Token = "0x600040E")]
		[Address(RVA = "0x10B6AD0", Offset = "0x10B6AD0", VA = "0x10B6AD0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600040F")]
		[Address(RVA = "0x10B6B88", Offset = "0x10B6B88", VA = "0x10B6B88")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x10B6C40", Offset = "0x10B6C40", VA = "0x10B6C40")]
	[AsyncStateMachine(typeof(<Start>d__28))]
	private void Start()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x10B6CF8", Offset = "0x10B6CF8", VA = "0x10B6CF8")]
	public void SetActiveButtons(bool isActive)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x10B6D6C", Offset = "0x10B6D6C", VA = "0x10B6D6C")]
	private void OnPurchaseStarted(GuitarMenuItem guitar)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x10B7108", Offset = "0x10B7108", VA = "0x10B7108")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x10B7524", Offset = "0x10B7524", VA = "0x10B7524")]
	private void OnGuitarSelected(GuitarMenuItem guitar)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x10B7848", Offset = "0x10B7848", VA = "0x10B7848")]
	[AsyncStateMachine(typeof(<SetGuitars>d__33))]
	public Task SetGuitars(List<GuitarData> guitars, int page = 1)
	{
		return null;
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x10B795C", Offset = "0x10B795C", VA = "0x10B795C")]
	private Task SetGuitar(GuitarData item, int index, GuitarMenuItem guitarItem)
	{
		return null;
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x10B7AF4", Offset = "0x10B7AF4", VA = "0x10B7AF4")]
	private void PrepareUI(int maxPages)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x10B7BC8", Offset = "0x10B7BC8", VA = "0x10B7BC8")]
	[AsyncStateMachine(typeof(<CleanGuitars>d__36))]
	private Task CleanGuitars()
	{
		return null;
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x10B7CB4", Offset = "0x10B7CB4", VA = "0x10B7CB4")]
	private Task CleanGuitar(int i, GuitarMenuItem guitar)
	{
		return null;
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x10B7E1C", Offset = "0x10B7E1C", VA = "0x10B7E1C")]
	private void PrevPageButton_Pressed()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x10B8038", Offset = "0x10B8038", VA = "0x10B8038")]
	private void NextPageButton_Pressed()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x10B80C0", Offset = "0x10B80C0", VA = "0x10B80C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x10B8A28", Offset = "0x10B8A28", VA = "0x10B8A28")]
	public GuitarMenu()
	{
	}
}
[Token(Token = "0x20000D7")]
public class GuitarMenuItem : MonoBehaviour
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ItemPositionAnchor;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro NameLabel;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject UIContainerGo;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject UnlockUI;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PressableButton SelectionButton;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PressableButton PurchaseButton;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro FansLabel;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<SpriteRenderer> CarrouselImages;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material UnSelectedMaterial;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material originalMaterial;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool canBeHovered;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 initialHeadPosition;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 initialLocalPosition;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform Anchor;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GuitarData guitarData;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform guitarHead;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private InteractiveHand hoverHand;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion unselectedRotation;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GuitarMenuItem selectedGuitar;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GuitarMenu parentMenu;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private TweenerCore<Color, Color, ColorOptions> textColorAnimation;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Animator animator;

	[Token(Token = "0x17000061")]
	public bool CanBeHovered
	{
		[Token(Token = "0x600043C")]
		[Address(RVA = "0x10BB5AC", Offset = "0x10BB5AC", VA = "0x10BB5AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600043D")]
		[Address(RVA = "0x10B70EC", Offset = "0x10B70EC", VA = "0x10B70EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public Vector3 currentHeadPosition
	{
		[Token(Token = "0x600043E")]
		[Address(RVA = "0x10BACB4", Offset = "0x10BACB4", VA = "0x10BACB4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000063")]
	public bool IsHovered
	{
		[Token(Token = "0x600043F")]
		[Address(RVA = "0x10BB5B4", Offset = "0x10BB5B4", VA = "0x10BB5B4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000440")]
		[Address(RVA = "0x10BB5BC", Offset = "0x10BB5BC", VA = "0x10BB5BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public bool IsSelected
	{
		[Token(Token = "0x6000441")]
		[Address(RVA = "0x10BB5C8", Offset = "0x10BB5C8", VA = "0x10BB5C8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x10BB5D0", Offset = "0x10BB5D0", VA = "0x10BB5D0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event Action<GuitarMenuItem> Selected
	{
		[Token(Token = "0x6000438")]
		[Address(RVA = "0x10B914C", Offset = "0x10B914C", VA = "0x10B914C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000439")]
		[Address(RVA = "0x10B73C4", Offset = "0x10B73C4", VA = "0x10B73C4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event Action<GuitarMenuItem> PurchaseStarted
	{
		[Token(Token = "0x600043A")]
		[Address(RVA = "0x10B91FC", Offset = "0x10B91FC", VA = "0x10B91FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600043B")]
		[Address(RVA = "0x10B7474", Offset = "0x10B7474", VA = "0x10B7474")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x10BB5DC", Offset = "0x10BB5DC", VA = "0x10BB5DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x10BB6F0", Offset = "0x10BB6F0", VA = "0x10BB6F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x10BB804", Offset = "0x10BB804", VA = "0x10BB804")]
	private void SelectionButton_Pressed()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x10BB824", Offset = "0x10BB824", VA = "0x10BB824")]
	private void PurchaseButton_Pressed()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x10BB844", Offset = "0x10BB844", VA = "0x10BB844")]
	private void Start()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x10BA3DC", Offset = "0x10BA3DC", VA = "0x10BA3DC")]
	public void Init(GuitarMenu parent, GuitarData data)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x10BB8D4", Offset = "0x10BB8D4", VA = "0x10BB8D4")]
	private void SetCarrouselImages()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x10BBFC8", Offset = "0x10BBFC8", VA = "0x10BBFC8")]
	public void SetUIVisible(int isVisibleInt)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x10BC0F4", Offset = "0x10BC0F4", VA = "0x10BC0F4")]
	private void SetUiButtons()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x10B9538", Offset = "0x10B9538", VA = "0x10B9538")]
	public void RefreshUI()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x10B7608", Offset = "0x10B7608", VA = "0x10B7608")]
	public void Select(InteractiveHand hand, [Optional] Action onAnimationCompleted)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x10BA240", Offset = "0x10BA240", VA = "0x10BA240")]
	public void UnSelect()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x10B87D8", Offset = "0x10B87D8", VA = "0x10B87D8")]
	public void OnHovered(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x10B85C4", Offset = "0x10B85C4", VA = "0x10B85C4")]
	public void OnUnHovered()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x10BC100", Offset = "0x10BC100", VA = "0x10BC100")]
	public GuitarMenuItem()
	{
	}
}
[Token(Token = "0x20000D9")]
public class GuitarSelectionScene : GameScene
{
	[Token(Token = "0x20000DA")]
	[CompilerGenerated]
	private sealed class <Loaded>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000468")]
			[Address(RVA = "0x10BCE74", Offset = "0x10BCE74", VA = "0x10BCE74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600046A")]
			[Address(RVA = "0x10BCEBC", Offset = "0x10BCEBC", VA = "0x10BCEBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x10BC284", Offset = "0x10BC284", VA = "0x10BC284")]
		[DebuggerHidden]
		public <Loaded>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x10BCDC4", Offset = "0x10BCDC4", VA = "0x10BCDC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x10BCDC8", Offset = "0x10BCDC8", VA = "0x10BCDC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x10BCE7C", Offset = "0x10BCE7C", VA = "0x10BCE7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action GoBack;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaterSpaceController PlayerSpace;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GuitarMenu guitarMenu;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PressableButton UnpluggedBrandButton;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PressableButton SchetcherBrandButton;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PressableButton PanteraBrandButton;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PressableButton back;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PickController pickController;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject AllGuitars;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x10BC224", Offset = "0x10BC224", VA = "0x10BC224")]
	[IteratorStateMachine(typeof(<Loaded>d__9))]
	public IEnumerator Loaded()
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x10BC2AC", Offset = "0x10BC2AC", VA = "0x10BC2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x10BC588", Offset = "0x10BC588", VA = "0x10BC588")]
	private void CheckDLCs()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x10BC748", Offset = "0x10BC748", VA = "0x10BC748")]
	private void PanteraBrandButton_Pressed()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x10BC7C4", Offset = "0x10BC7C4", VA = "0x10BC7C4")]
	private void SchetcherBandButton_Pressed()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x10BC840", Offset = "0x10BC840", VA = "0x10BC840")]
	private void UnpluggedBrandPressed()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x10BC8BC", Offset = "0x10BC8BC", VA = "0x10BC8BC")]
	private void GuitarMenu_GuitarSelected(GuitarData guitar, InteractiveHand hand)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x10BC9B8", Offset = "0x10BC9B8", VA = "0x10BC9B8")]
	private void Back_Pressed()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x10BCA90", Offset = "0x10BCA90", VA = "0x10BCA90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x10BCB94", Offset = "0x10BCB94", VA = "0x10BCB94")]
	public GuitarSelectionScene()
	{
	}
}
[Token(Token = "0x20000E0")]
public class BetaTestingFeedbackManager : MonoBehaviour
{
	[Token(Token = "0x20000E1")]
	public class SongFeedback : TesterFeedback
	{
		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int OverallDifficulty;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int OverallLikeness;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int testerScore;

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x10BE0EC", Offset = "0x10BE0EC", VA = "0x10BE0EC")]
		public SongFeedback()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E2")]
	public class SongFeedbackPart : TesterFeedback
	{
		[Token(Token = "0x20000E3")]
		public enum TestFeedbackPartType
		{
			[Token(Token = "0x4000479")]
			Boring,
			[Token(Token = "0x400047A")]
			Awesome,
			[Token(Token = "0x400047B")]
			Repetitive,
			[Token(Token = "0x400047C")]
			TooHard,
			[Token(Token = "0x400047D")]
			TooEasy,
			[Token(Token = "0x400047E")]
			TrackingFailsOften
		}

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public float Time;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public TestFeedbackPartType Type;

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x10BDA70", Offset = "0x10BDA70", VA = "0x10BDA70")]
		public SongFeedbackPart()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E4")]
	public class TesterFeedback
	{
		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string TesterId;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string SongId;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string SongFileName;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public string GameId;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public DifficultyLevel Difficulty;

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x10BE0F4", Offset = "0x10BE0F4", VA = "0x10BE0F4")]
		public TesterFeedback()
		{
		}
	}

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string gameId;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro TimeLabel;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x10BD540", Offset = "0x10BD540", VA = "0x10BD540")]
	private void Start()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x10BD5C0", Offset = "0x10BD5C0", VA = "0x10BD5C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x10BD640", Offset = "0x10BD640", VA = "0x10BD640")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x10BD680", Offset = "0x10BD680", VA = "0x10BD680")]
	private void Update()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x10BD880", Offset = "0x10BD880", VA = "0x10BD880")]
	public void AddFeedback(SongFeedbackPart.TestFeedbackPartType feedbackType)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x10BDA78", Offset = "0x10BDA78", VA = "0x10BDA78")]
	private void UploadFeedbackPart2(SongFeedbackPart part)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x10BDD90", Offset = "0x10BDD90", VA = "0x10BDD90")]
	public static void UploadGameStats(GameStats stats, SongAsset song, DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x10BE0B4", Offset = "0x10BE0B4", VA = "0x10BE0B4")]
	public void AddBoringFeedback()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x10BE0BC", Offset = "0x10BE0BC", VA = "0x10BE0BC")]
	public void AddAwesomeFeedback()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x10BE0C4", Offset = "0x10BE0C4", VA = "0x10BE0C4")]
	public void AddRepetitiveFeedback()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x10BE0CC", Offset = "0x10BE0CC", VA = "0x10BE0CC")]
	public void AddTooHardFeedback()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x10BE0D4", Offset = "0x10BE0D4", VA = "0x10BE0D4")]
	public void AddTooEasyFeedback()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x10BE0DC", Offset = "0x10BE0DC", VA = "0x10BE0DC")]
	public void AddTrackingFailFeedback()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x10BE0E4", Offset = "0x10BE0E4", VA = "0x10BE0E4")]
	public BetaTestingFeedbackManager()
	{
	}
}
[Token(Token = "0x20000E7")]
public class BoundaryManager : MonoBehaviour
{
	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer BlackoutRenderer;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer BoundaryRenderer;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera BoundaryCamera;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SceneBoundaryMaxDistance;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float BlackoutMinDistance;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float BlackoutMaxDistance;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float blackoutLevel;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float boundaryLevel;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool inFader;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TweenerCore<Color, Color, ColorOptions> FadeTask;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color initialBoundaryColor;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static BoundaryManager I;

	[Token(Token = "0x17000067")]
	public float BlackoutLevel
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0x10BEAE8", Offset = "0x10BEAE8", VA = "0x10BEAE8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000493")]
		[Address(RVA = "0x10BEA10", Offset = "0x10BEA10", VA = "0x10BEA10")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public float BoundaryLevel
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0x10BEAF0", Offset = "0x10BEAF0", VA = "0x10BEAF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000495")]
		[Address(RVA = "0x10BE930", Offset = "0x10BE930", VA = "0x10BE930")]
		set
		{
		}
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x10BE244", Offset = "0x10BE244", VA = "0x10BE244")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x10BE294", Offset = "0x10BE294", VA = "0x10BE294")]
	private void Start()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x10BE3F4", Offset = "0x10BE3F4", VA = "0x10BE3F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x10BE810", Offset = "0x10BE810", VA = "0x10BE810")]
	private void CheckBoundary(float DistanceCameraToCenterScene)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x10B7EA4", Offset = "0x10B7EA4", VA = "0x10B7EA4")]
	public static void FadeOut(float duration = 1f, [Optional] Action onFadeOut)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x10BB240", Offset = "0x10BB240", VA = "0x10BB240")]
	public static void FadeIn(float duration = 2f, [Optional] Action onFadeIn)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x10BEAF8", Offset = "0x10BEAF8", VA = "0x10BEAF8")]
	public BoundaryManager()
	{
	}
}
[Token(Token = "0x20000EA")]
public class CachedObjects : MonoBehaviour
{
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int counter;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x10BFC58", Offset = "0x10BFC58", VA = "0x10BFC58")]
	private void Update()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x10BFCA0", Offset = "0x10BFCA0", VA = "0x10BFCA0")]
	public CachedObjects()
	{
	}
}
[Token(Token = "0x20000EB")]
public class CameraManager : MonoBehaviour
{
	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera main;

	[Token(Token = "0x17000069")]
	public static Camera Main
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0x10BFCA8", Offset = "0x10BFCA8", VA = "0x10BFCA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x10BFD58", Offset = "0x10BFD58", VA = "0x10BFD58")]
	public CameraManager()
	{
	}
}
[Token(Token = "0x20000EC")]
public class CampaignController : MonoBehaviour
{
	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action GoBack;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PressableButton back;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x10BFD60", Offset = "0x10BFD60", VA = "0x10BFD60")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x10BFDEC", Offset = "0x10BFDEC", VA = "0x10BFDEC")]
	private void Back_Pressed()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x10BFE50", Offset = "0x10BFE50", VA = "0x10BFE50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x10BFEA4", Offset = "0x10BFEA4", VA = "0x10BFEA4")]
	public CampaignController()
	{
	}
}
[Token(Token = "0x20000ED")]
public class CampaignNavigatorController : MonoBehaviour
{
	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color SelectedColor;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color HoveredColor;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color LockedColor;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color UnLockedColor;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AlbumSelector albumSelector;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem hoveredFxPs;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<MeshRenderer> itemsRenders;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GrabbableObject> itemsGrabbers;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Material> itemsMaterials;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AlbumData seletected;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GrabbableObject Album1Grabber;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GrabbableObject Album2Grabber;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GrabbableObject Album3Grabber;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GrabbableObject Album4Grabber;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GrabbableObject Album5Grabber;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x10BFEAC", Offset = "0x10BFEAC", VA = "0x10BFEAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x10C028C", Offset = "0x10C028C", VA = "0x10C028C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x10C05A8", Offset = "0x10C05A8", VA = "0x10C05A8")]
	private void AlbumSelector_AlbumListLoaded(AlbumSelector obj)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x10C0680", Offset = "0x10C0680", VA = "0x10C0680")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x10C0B18", Offset = "0x10C0B18", VA = "0x10C0B18")]
	private void Grabber_Untouched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x10C0B38", Offset = "0x10C0B38", VA = "0x10C0B38")]
	public void SetSelectedVenue(AlbumData album)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x10C0B3C", Offset = "0x10C0B3C", VA = "0x10C0B3C")]
	private void AlbumSelector_AlbumSelected(AlbumData obj)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x10C0D98", Offset = "0x10C0D98", VA = "0x10C0D98")]
	private void AlbumSelector_AlbumUnHovered(AlbumData obj)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x10C0F44", Offset = "0x10C0F44", VA = "0x10C0F44")]
	private void AlbumSelector_AlbumHovered(AlbumData obj)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x10C10D4", Offset = "0x10C10D4", VA = "0x10C10D4")]
	private void Album5Grabber_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x10C10F4", Offset = "0x10C10F4", VA = "0x10C10F4")]
	private void Album4Grabber_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x10C1114", Offset = "0x10C1114", VA = "0x10C1114")]
	private void Album3Grabber_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x10C1134", Offset = "0x10C1134", VA = "0x10C1134")]
	private void Album2Grabber_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x10C1154", Offset = "0x10C1154", VA = "0x10C1154")]
	private void Album1Grabber_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x10C1174", Offset = "0x10C1174", VA = "0x10C1174")]
	public CampaignNavigatorController()
	{
	}
}
[Token(Token = "0x20000EE")]
[CreateAssetMenu(menuName = "Unplugged/Create ChallengeAlbumData")]
public class ChallengeAlbumData : DLCAlbumData
{
	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DifficultyLevel ChallengeDifficulty;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string ChallengeEndMessageStringID;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public new string VenueID;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string ChallengeTeasingDateString;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string ChallengeStartDateString;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string ChallengeEndDateString;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string LeaderBoardID;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<PickRank> Ranks;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private DateTime? challengeEndDate;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private DateTime? challengeStartDate;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private DateTime? challengeTeasingDate;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<ChallengePrice> Prices;

	[Token(Token = "0x1700006A")]
	public bool IsChallenge
	{
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x10C117C", Offset = "0x10C117C", VA = "0x10C117C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006B")]
	public DateTime ChallengeEndDate
	{
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x10C1184", Offset = "0x10C1184", VA = "0x10C1184")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x10C125C", Offset = "0x10C125C", VA = "0x10C125C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public DateTime ChallengeStartDate
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x10C12CC", Offset = "0x10C12CC", VA = "0x10C12CC")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x10C13A4", Offset = "0x10C13A4", VA = "0x10C13A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public DateTime ChallengeTeasingDate
	{
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x10C1414", Offset = "0x10C1414", VA = "0x10C1414")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x10C14EC", Offset = "0x10C14EC", VA = "0x10C14EC")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public bool IsCompletedAndRedeemed
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x10C155C", Offset = "0x10C155C", VA = "0x10C155C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x10C1618", Offset = "0x10C1618", VA = "0x10C1618")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public bool UserHasPlayed
	{
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x10C1798", Offset = "0x10C1798", VA = "0x10C1798")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x10C1854", Offset = "0x10C1854", VA = "0x10C1854")]
		set
		{
		}
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x10C19D4", Offset = "0x10C19D4", VA = "0x10C19D4", Slot = "4")]
	public override List<PickRank> GetRanks()
	{
		return null;
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x10C19DC", Offset = "0x10C19DC", VA = "0x10C19DC")]
	public void Redeem(LeaderboardEntryData userRank)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x10C2084", Offset = "0x10C2084", VA = "0x10C2084")]
	public Task<bool> TryRedeem()
	{
		return null;
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x10C1F74", Offset = "0x10C1F74", VA = "0x10C1F74")]
	private ChallengePrice GetPrice(LeaderboardEntryData userRank)
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x10C248C", Offset = "0x10C248C", VA = "0x10C248C")]
	public ChallengeAlbumData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F5")]
public class ChallengePrice
{
	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int TopRankForPrice;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int BottomRankForPrice;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> GuitarPriceIDs;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> PicksPriceIDs;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string WinnerStringID;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int FansPrice;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x10C2A9C", Offset = "0x10C2A9C", VA = "0x10C2A9C")]
	public ChallengePrice()
	{
	}
}
[Token(Token = "0x20000F6")]
public class ChallengeCountDown : MonoBehaviour
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI CountDownLabel;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DateTime CountDownEnds;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TimeSpan PTTimeOffset;

	[Token(Token = "0x17000070")]
	public static DateTime WorldTime
	{
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x10C2370", Offset = "0x10C2370", VA = "0x10C2370")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x10C2B24", Offset = "0x10C2B24", VA = "0x10C2B24")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x10C2B28", Offset = "0x10C2B28", VA = "0x10C2B28")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x10C2C28", Offset = "0x10C2C28", VA = "0x10C2C28")]
	public ChallengeCountDown()
	{
	}
}
[Token(Token = "0x20000F7")]
public class PickRankingYourRankController : MonoBehaviour
{
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI UserNameLabel;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI ScoreLabel;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI RankLabel;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer TitleStroke;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer AvatarOutLine;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RawImage AvatarImage;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshRenderer PickRenderer;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpriteRenderer PickOutline;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PickRank Rank;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x10C2CA8", Offset = "0x10C2CA8", VA = "0x10C2CA8")]
	public void SetRank(PickRank rank, int currentRank, LeaderboardEntryData userRankEntry)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x10C2EA0", Offset = "0x10C2EA0", VA = "0x10C2EA0")]
	public void DebugT()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x10C2F6C", Offset = "0x10C2F6C", VA = "0x10C2F6C")]
	public PickRankingYourRankController()
	{
	}
}
[Token(Token = "0x20000F8")]
public class PicksRankingController : MonoBehaviour
{
	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int CurrentRank;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int CurrentScore;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PickRank> Ranks;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PicksRankingItemController RankPrefab;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve RankDistribution;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsVertical;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image ProgressBar;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform YourRank;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PickRankingYourRankController yourRankController;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LeaderboardEntryData userRankEntry;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<PicksRankingItemController> GORanks;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int prevRank;

	[Token(Token = "0x17000071")]
	private RectTransform rectTransform
	{
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x10C2F74", Offset = "0x10C2F74", VA = "0x10C2F74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x10C2FD8", Offset = "0x10C2FD8", VA = "0x10C2FD8")]
	public void Initialize(List<PickRank> ranks)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x10C35F0", Offset = "0x10C35F0", VA = "0x10C35F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x10C360C", Offset = "0x10C360C", VA = "0x10C360C")]
	public void UpdateValues()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x10C3008", Offset = "0x10C3008", VA = "0x10C3008")]
	public void SetRank(List<PickRank> ranks)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x10C3E50", Offset = "0x10C3E50", VA = "0x10C3E50")]
	public PicksRankingController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FA")]
public struct PickRank
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string Id;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Color Color;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TopNumber;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material PickMaterial;
}
[Token(Token = "0x20000FB")]
public class PicksRankingItemController : MonoBehaviour
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PickRank Rank;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer Icon;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI Text;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI TopText;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpriteRenderer PickOutline;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpriteRenderer PickGlow;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem Particles;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool IsAchieved;

	[Token(Token = "0x17000072")]
	public RectTransform RectTransform
	{
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x10C3DEC", Offset = "0x10C3DEC", VA = "0x10C3DEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x10C3CD0", Offset = "0x10C3CD0", VA = "0x10C3CD0")]
	public void SetRank(PickRank rank)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x10C3BFC", Offset = "0x10C3BFC", VA = "0x10C3BFC")]
	public void SetAchieved(bool isAchieved, bool showFxs = true)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x10C3F74", Offset = "0x10C3F74", VA = "0x10C3F74")]
	public PicksRankingItemController()
	{
	}
}
[Token(Token = "0x20000FC")]
public class PicksRankingSongMenuItemController : MonoBehaviour
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SongMappingMetaData songData;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PicksRankingController PickRankingBar;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LeaderboardAccesser leaderboardAccesser;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LeaderboardEntryData UserRank;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool updateUserRank;

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x10C3F7C", Offset = "0x10C3F7C", VA = "0x10C3F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x10C4034", Offset = "0x10C4034", VA = "0x10C4034")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x10C40EC", Offset = "0x10C40EC", VA = "0x10C40EC")]
	private void DifficultyChanged(DifficultyLevel obj)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x10C4288", Offset = "0x10C4288", VA = "0x10C4288")]
	private void SetUserRank()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x10C40F4", Offset = "0x10C40F4", VA = "0x10C40F4")]
	public void CheckRanking(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x10C44A4", Offset = "0x10C44A4", VA = "0x10C44A4")]
	public PicksRankingSongMenuItemController()
	{
	}
}
[Token(Token = "0x20000FD")]
public class SocialChallengeController : MonoBehaviour
{
	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PicksRankingController PickRankingBar;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LeaderboardController Leaderboard;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D DefaultPlayerPic;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LeaderboardAccesser leaderboardAccesser;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject TeasingChallengeUI;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject PlayingUIPanel;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject NotPlayedUIPanel;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ChallengeFinishedController FinishedUI;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ErrorUIPanel;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject FinishedNotPlayedUI;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<ChallengeCountDown> EndCountDowns;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<ChallengeCountDown> StartCountDowns;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ChallengeAlbumData ChallengeData;

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x10C4628", Offset = "0x10C4628", VA = "0x10C4628")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x10C4700", Offset = "0x10C4700", VA = "0x10C4700")]
	public void SetChallenge(ChallengeAlbumData challenge)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x10C4798", Offset = "0x10C4798", VA = "0x10C4798")]
	public void OnTimeLoaded()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x10C4D58", Offset = "0x10C4D58", VA = "0x10C4D58")]
	internal void Initialize()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x10C4D7C", Offset = "0x10C4D7C", VA = "0x10C4D7C")]
	private void ShowTeasingUI()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x10C4E10", Offset = "0x10C4E10", VA = "0x10C4E10")]
	private void ShowErrorUI()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x10C4EA4", Offset = "0x10C4EA4", VA = "0x10C4EA4")]
	private void ShowFinishedUI(LeaderboardEntryData userData)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x10C4F5C", Offset = "0x10C4F5C", VA = "0x10C4F5C")]
	private void ShowFinishedNotPlayedUI()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x10C5000", Offset = "0x10C5000", VA = "0x10C5000")]
	private void ShowNotPlayedUI()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x10C5094", Offset = "0x10C5094", VA = "0x10C5094")]
	private void ShowPlayingUI()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x10C52F0", Offset = "0x10C52F0", VA = "0x10C52F0")]
	public void SetLeaderboard(List<LeaderboardEntryData> leaderboardEntries)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x10C540C", Offset = "0x10C540C", VA = "0x10C540C")]
	public void SetUserRank(LeaderboardEntryData userRank)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x10C5528", Offset = "0x10C5528", VA = "0x10C5528")]
	public SocialChallengeController()
	{
	}
}
[Token(Token = "0x2000101")]
public class ChartController : MonoBehaviour
{
	[Token(Token = "0x600050C")]
	[Address(RVA = "0x10C5CE4", Offset = "0x10C5CE4", VA = "0x10C5CE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x10C5D70", Offset = "0x10C5D70", VA = "0x10C5D70")]
	public Texture2D GetHealthTexture()
	{
		return null;
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x10C602C", Offset = "0x10C602C", VA = "0x10C602C")]
	public ChartController()
	{
	}
}
[Token(Token = "0x2000102")]
[CreateAssetMenu(fileName = "ChordDefinitions", menuName = "Unplugged/ChordDefinitions", order = 1)]
public class ChordDefinitions : ScriptableObject
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ChordDefinition> Chords;

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x10C6034", Offset = "0x10C6034", VA = "0x10C6034")]
	public ChordDefinitions()
	{
	}
}
[Token(Token = "0x2000103")]
public class ColliderArea : MonoBehaviour
{
	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsCollisionActive;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Collider collider;

	[Token(Token = "0x1400001A")]
	public event Action<ColliderArea, Collider> TriggerEnters
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x10C603C", Offset = "0x10C603C", VA = "0x10C603C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x10C60EC", Offset = "0x10C60EC", VA = "0x10C60EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event Action<ColliderArea, Collider> TriggerStays
	{
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x10C619C", Offset = "0x10C619C", VA = "0x10C619C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x10C624C", Offset = "0x10C624C", VA = "0x10C624C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event Action<ColliderArea, Collider> TriggerExits
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x10C62FC", Offset = "0x10C62FC", VA = "0x10C62FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x10C63AC", Offset = "0x10C63AC", VA = "0x10C63AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event Action<ColliderArea, Collision> CollisionEnters
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x10C645C", Offset = "0x10C645C", VA = "0x10C645C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x10C650C", Offset = "0x10C650C", VA = "0x10C650C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event Action<ColliderArea, Collision> CollisionStays
	{
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x10C65BC", Offset = "0x10C65BC", VA = "0x10C65BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000519")]
		[Address(RVA = "0x10C666C", Offset = "0x10C666C", VA = "0x10C666C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event Action<ColliderArea, Collision> CollisionExits
	{
		[Token(Token = "0x600051A")]
		[Address(RVA = "0x10C671C", Offset = "0x10C671C", VA = "0x10C671C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600051B")]
		[Address(RVA = "0x10C67CC", Offset = "0x10C67CC", VA = "0x10C67CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x10C687C", Offset = "0x10C687C", VA = "0x10C687C")]
	public void Awake()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x10C68D4", Offset = "0x10C68D4", VA = "0x10C68D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x10C6904", Offset = "0x10C6904", VA = "0x10C6904")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x10C6934", Offset = "0x10C6934", VA = "0x10C6934")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x10C6964", Offset = "0x10C6964", VA = "0x10C6964")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x10C6994", Offset = "0x10C6994", VA = "0x10C6994")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x10C69C4", Offset = "0x10C69C4", VA = "0x10C69C4")]
	private void OnCollisionExits(Collision collision)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x10C69F4", Offset = "0x10C69F4", VA = "0x10C69F4")]
	public ColliderArea()
	{
	}
}
[Token(Token = "0x2000104")]
public class ComboFeedBack : MonoBehaviour
{
	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Velocity;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animatorCombo;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro textCombo;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform Anchor;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x10C6A04", Offset = "0x10C6A04", VA = "0x10C6A04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x10C6BE8", Offset = "0x10C6BE8", VA = "0x10C6BE8")]
	public void Init(Transform anchor)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x10C6DE0", Offset = "0x10C6DE0", VA = "0x10C6DE0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x10C6EE4", Offset = "0x10C6EE4", VA = "0x10C6EE4")]
	private void I_OnComboValueChanged(float prevValue, float value)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x10C6F60", Offset = "0x10C6F60", VA = "0x10C6F60")]
	public void Update()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x10C70A0", Offset = "0x10C70A0", VA = "0x10C70A0")]
	public void AnimationEnds()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x10C70C4", Offset = "0x10C70C4", VA = "0x10C70C4")]
	public ComboFeedBack()
	{
	}
}
[Token(Token = "0x2000105")]
public class ControllerRotationIndicatorController : MonoBehaviour
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform RotationDialAnchor;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer EffectRenderer;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer NoteRenderer;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color RotationDownColor;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color RotationUpColor;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer Dial;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer DialBorder;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform MaskAnchor;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GuitarNeckHandsController handsController;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material PrimaryControllerMaterial;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool RotationIsUp;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem particlesOnChange;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SpriteRenderer Line;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator animator;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 leftHandedTransform;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 rightHandedTransform;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float MajorGlowOpacity;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float MinorGlowOpacity;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float MajorGlowOpacityTarget;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float MinorGlowOpacityTarget;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float NoteGlow;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float NoteGlowTarget;

	[Token(Token = "0x14000020")]
	public event Action<bool> HandRotationChanged
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0x10C70D4", Offset = "0x10C70D4", VA = "0x10C70D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600052C")]
		[Address(RVA = "0x10C7184", Offset = "0x10C7184", VA = "0x10C7184")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x10C7234", Offset = "0x10C7234", VA = "0x10C7234")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x10C732C", Offset = "0x10C732C", VA = "0x10C732C")]
	private void VRPlatformBase_InputControllerChanged(VRInteractionType obj)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x10C737C", Offset = "0x10C737C", VA = "0x10C737C")]
	private void GuitarGameManager_OnControllerRotationEnabledChanged(bool enabled)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x10C7454", Offset = "0x10C7454", VA = "0x10C7454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x10C76FC", Offset = "0x10C76FC", VA = "0x10C76FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x10C74B4", Offset = "0x10C74B4", VA = "0x10C74B4")]
	private void RotationChanged()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x10C7F54", Offset = "0x10C7F54", VA = "0x10C7F54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x10C804C", Offset = "0x10C804C", VA = "0x10C804C")]
	public ControllerRotationIndicatorController()
	{
	}
}
[Token(Token = "0x2000106")]
public class ControllerSensibilityController : MonoBehaviour
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve fingerSensibility;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 WizardPositionOffsetLeft;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 WizardPositionOffsetRight;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 RightHandRotationOffset;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform LeftHand;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform RightHand;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GrabbableObject GrabArea;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BoxCollider fingerCollider;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ControllerSensibilityWizard Wizard;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<FingerType, float> FingersTouching;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private HandSkeletonControllerKnuckles currentHandController;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private InteractiveHand currentInteractiveHand;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AnimationCurve previousCurve;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private InteractiveHandSteamVR currentInteractiveHandSteamVR;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private HandSkeletonPoseBlender currentHandBlender;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform currentHandTransform;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 currentWizardPositionOffset;

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x10C8068", Offset = "0x10C8068", VA = "0x10C8068")]
	private void Start()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x10C829C", Offset = "0x10C829C", VA = "0x10C829C")]
	private void GrabArea_GrabUpdate(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x10C8CAC", Offset = "0x10C8CAC", VA = "0x10C8CAC")]
	public bool CheckPose(List<FingerType> fingers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x10C85F0", Offset = "0x10C85F0", VA = "0x10C85F0")]
	private void PerformBlendPerPlatform(InteractiveHandSteamVR steamVRhand, float thumbBlend = 1f)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x10C908C", Offset = "0x10C908C", VA = "0x10C908C")]
	public float GetCurl(InteractiveHandSteamVR steamVRhand, int i)
	{
		return default(float);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x10C9128", Offset = "0x10C9128", VA = "0x10C9128")]
	public void SetMax()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x10C912C", Offset = "0x10C912C", VA = "0x10C912C")]
	public void SetMin()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x10C9130", Offset = "0x10C9130", VA = "0x10C9130")]
	public void ResetMax()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x10C926C", Offset = "0x10C926C", VA = "0x10C926C")]
	public void ResetMin()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x10C85F4", Offset = "0x10C85F4", VA = "0x10C85F4")]
	private void SetFingersColors()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x10C93A8", Offset = "0x10C93A8", VA = "0x10C93A8")]
	public bool ColliderContains(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x10C95A4", Offset = "0x10C95A4", VA = "0x10C95A4")]
	private void GrabArea_Grabbed(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x10C9868", Offset = "0x10C9868", VA = "0x10C9868")]
	private void GrabArea_Dropped(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x10C99AC", Offset = "0x10C99AC", VA = "0x10C99AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x10C9AD8", Offset = "0x10C9AD8", VA = "0x10C9AD8")]
	public ControllerSensibilityController()
	{
	}
}
[Token(Token = "0x2000107")]
public class ControllerSensibilityWizard : MonoBehaviour
{
	[Token(Token = "0x2000108")]
	public enum WizardSteps
	{
		[Token(Token = "0x4000547")]
		Step1,
		[Token(Token = "0x4000548")]
		Step2,
		[Token(Token = "0x4000549")]
		Step3,
		[Token(Token = "0x400054A")]
		Step4
	}

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GrabbableObject Grabbable;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RadialProgressBar progressBar;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerSensibilityController ControllerSensibility;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InteractiveHand currentInteractiveHand;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WizardSteps currentStep;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<FingerType> ClosedFingersPose;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<FingerType> RelaxedFingersPose;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool wizardStarted;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool checkingOpeningHand;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 initialPostion;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x10C9AE0", Offset = "0x10C9AE0", VA = "0x10C9AE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x10C9C40", Offset = "0x10C9C40", VA = "0x10C9C40")]
	private void Grabbable_Dropped(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x10C9D18", Offset = "0x10C9D18", VA = "0x10C9D18")]
	private void Grabbable_Grabbed(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x10C9DC0", Offset = "0x10C9DC0", VA = "0x10C9DC0")]
	public void StartCheckingOpeningHand()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x10C9DEC", Offset = "0x10C9DEC", VA = "0x10C9DEC")]
	public void GoToStep2()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x10C9EA0", Offset = "0x10C9EA0", VA = "0x10C9EA0")]
	public void Step2WaitForInput()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x10C9EDC", Offset = "0x10C9EDC", VA = "0x10C9EDC")]
	public void Step3WaitForInput()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x10C9F18", Offset = "0x10C9F18", VA = "0x10C9F18")]
	public void Update()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x10C9F38", Offset = "0x10C9F38", VA = "0x10C9F38")]
	private void UpdateStep2()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x10CA17C", Offset = "0x10CA17C", VA = "0x10CA17C")]
	private void UpdateStep3()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x10CA2F0", Offset = "0x10CA2F0", VA = "0x10CA2F0")]
	public ControllerSensibilityWizard()
	{
	}
}
[Token(Token = "0x2000109")]
public class CreditsController : MonoBehaviour
{
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ToggleButton ShowHideCredits;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CreditsLayer;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VideoPlayer CreditsVideo;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x10CA604", Offset = "0x10CA604", VA = "0x10CA604")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x10CA624", Offset = "0x10CA624", VA = "0x10CA624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x10CA6B0", Offset = "0x10CA6B0", VA = "0x10CA6B0")]
	private void ShowHideCredits_CheckedChanged(bool isChecked)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x10CA700", Offset = "0x10CA700", VA = "0x10CA700")]
	public CreditsController()
	{
	}
}
[Token(Token = "0x200010A")]
public class CrowdLeader : MonoBehaviour
{
	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CrowdIKManager crowdIKManager;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SmoothIntensity;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 ScaleMovement;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 Mirror;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 HandOffsetRotation;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 HandOffsetRotationRight;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform IkHead;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform ModelRightHand;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform ModelLeftHand;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform Head;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform RightHand;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform LeftHand;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform LeftTarget;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform RightTarget;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public IKLimb ikLimbLeft;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public IKLimb ikLimbRight;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion offsetRot;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float Influence;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float smoothInfluence;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SkinnedMeshRenderer skinRightRender;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SkinnedMeshRenderer skinLeftRender;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Mesh BakedRightMesh;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Mesh BakedLeftMesh;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Quaternion OffsetSlavesRotation;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Quaternion OffsetSlavesRotationRight;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Vector3 rightHandRelaxedPosition;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Vector3 leftHandRelaxedPosition;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 smoothPosLeft;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 smoothPosRight;

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x10CA708", Offset = "0x10CA708", VA = "0x10CA708")]
	private void Start()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x10CA804", Offset = "0x10CA804", VA = "0x10CA804")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x10CA844", Offset = "0x10CA844", VA = "0x10CA844")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x10CA890", Offset = "0x10CA890", VA = "0x10CA890")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x10CAFC4", Offset = "0x10CAFC4", VA = "0x10CAFC4")]
	private void SetSlaves()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x10CB0C0", Offset = "0x10CB0C0", VA = "0x10CB0C0")]
	public CrowdLeader()
	{
	}
}
[Token(Token = "0x200010B")]
public class CrowdSlave : MonoBehaviour
{
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter LeftHandModel;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter RightHandModel;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ArmRight;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ArmLeft;

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x10CB0D0", Offset = "0x10CB0D0", VA = "0x10CB0D0")]
	public CrowdSlave()
	{
	}
}
[Token(Token = "0x200010C")]
public class IKLimb : MonoBehaviour
{
	[Token(Token = "0x200010D")]
	public enum HandRotations
	{
		[Token(Token = "0x4000586")]
		KeepLocalRotation,
		[Token(Token = "0x4000587")]
		KeepGlobalRotation,
		[Token(Token = "0x4000588")]
		UseTargetRotation
	}

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform upperArm;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform forearm;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hand;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform elbowTarget;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsEnabled;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool debug;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float transition;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool idleOptimization;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public HandRotations handRotationPolicy;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion upperArmStartRotation;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion forearmStartRotation;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion handStartRotation;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 targetRelativeStartPosition;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 elbowTargetRelativeStartPosition;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject upperArmAxisCorrection;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject forearmAxisCorrection;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject handAxisCorrection;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 lastUpperArmPosition;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 lastTargetPosition;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 lastElbowTargetPosition;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Quaternion RotationOffset;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x10CB0D8", Offset = "0x10CB0D8", VA = "0x10CB0D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x10CB3B4", Offset = "0x10CB3B4", VA = "0x10CB3B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x10CB3C4", Offset = "0x10CB3C4", VA = "0x10CB3C4")]
	private void CalculateIK()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x10CC344", Offset = "0x10CC344", VA = "0x10CC344")]
	public IKLimb()
	{
	}
}
[Token(Token = "0x200010E")]
public class CrowdManager : MonoBehaviour
{
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject AudiencePrefab;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float Depth;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float Width;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int Amount;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x10CC354", Offset = "0x10CC354", VA = "0x10CC354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x10CC77C", Offset = "0x10CC77C", VA = "0x10CC77C")]
	private void CreateCrowd()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x10CCAB0", Offset = "0x10CCAB0", VA = "0x10CCAB0")]
	private void RemoveCrowd()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x10CCB80", Offset = "0x10CCB80", VA = "0x10CCB80")]
	public CrowdManager()
	{
	}
}
[Token(Token = "0x2000110")]
public class DataBinder : MonoBehaviour
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LookForValueUpdates;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public object DataContext;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MemberInfo dataMemberInfo;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string PropertyPath;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private object prevDataValue;

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x10CCEB8", Offset = "0x10CCEB8", VA = "0x10CCEB8", Slot = "4")]
	public virtual void SetData(object data)
	{
	}

	[Token(Token = "0x6000566")]
	public T GetData<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x10CCF94", Offset = "0x10CCF94", VA = "0x10CCF94")]
	public void FindMemberInfo()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x10CD054", Offset = "0x10CD054", VA = "0x10CD054", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x10CD060", Offset = "0x10CD060", VA = "0x10CD060")]
	public void Update()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x10CD080", Offset = "0x10CD080", VA = "0x10CD080")]
	public void UpdateData()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x10CD114", Offset = "0x10CD114", VA = "0x10CD114")]
	public DataBinder()
	{
	}
}
[Token(Token = "0x2000111")]
public class DebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro t;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x10CD11C", Offset = "0x10CD11C", VA = "0x10CD11C")]
	private void Start()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x10CD174", Offset = "0x10CD174", VA = "0x10CD174")]
	private void Application_logMessageReceived(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x10CD1EC", Offset = "0x10CD1EC", VA = "0x10CD1EC")]
	public DebugConsole()
	{
	}
}
[Token(Token = "0x2000112")]
public class DebugDesktopCamera : MonoBehaviour
{
	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera vrCamera;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float dow;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool followUser;

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x10CD1F4", Offset = "0x10CD1F4", VA = "0x10CD1F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x10CD214", Offset = "0x10CD214", VA = "0x10CD214")]
	private void Update()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x10CD848", Offset = "0x10CD848", VA = "0x10CD848")]
	public DebugDesktopCamera()
	{
	}
}
[Token(Token = "0x2000113")]
public static class DebugHelpers
{
	[Token(Token = "0x17000073")]
	public static CommandBuilder draw
	{
		[Token(Token = "0x6000572")]
		[Address(RVA = "0x10CD860", Offset = "0x10CD860", VA = "0x10CD860")]
		get
		{
			return default(CommandBuilder);
		}
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x10CD888", Offset = "0x10CD888", VA = "0x10CD888")]
	public static void DebugForward(this Transform transform, Color color)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x10CD984", Offset = "0x10CD984", VA = "0x10CD984")]
	public static void DebugBack(this Transform transform, Color color)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x10CDA80", Offset = "0x10CDA80", VA = "0x10CDA80")]
	public static void DebugRight(this Transform transform, Color color)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x10CDB7C", Offset = "0x10CDB7C", VA = "0x10CDB7C")]
	public static void DebugLeft(this Transform transform, Color color)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x10CDC78", Offset = "0x10CDC78", VA = "0x10CDC78")]
	public static void DebugUp(this Transform transform, Color color)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x10CDD74", Offset = "0x10CDD74", VA = "0x10CDD74")]
	public static void DebugDown(this Transform transform, Color color)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x10CDE70", Offset = "0x10CDE70", VA = "0x10CDE70")]
	public static void DebugPosition(this Transform transform, Color color)
	{
	}
}
[Token(Token = "0x2000114")]
public class DebugModeManager : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000116")]
	[CompilerGenerated]
	private struct <CheckBetaTestingSongs>d__31 : IAsyncStateMachine
	{
		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DebugModeManager <>4__this;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FtpClient <client>5__2;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FtpListItem[] <files>5__3;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<FtpListItem[]> <>u__2;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FtpListItem[] <>7__wrap3;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <>7__wrap4;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskAwaiter<FtpStatus> <>u__3;

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x10CF1A8", Offset = "0x10CF1A8", VA = "0x10CF1A8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x10CFAAC", Offset = "0x10CFAAC", VA = "0x10CFAAC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DebugOptionGO;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject DebugGO;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ToggleButton ShowDebugModeToggle;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ToggleButton ShowGodModeToggle;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ToggleButton ShowUpStrummingModeToggle;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ToggleButton ShowInfinityStrumminToggle;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ToggleButton ShowDesactiveIntroToggle;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PressableButton DeleteGameData;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PressableButton DownloadSongs;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PressableButton UnlockNextAlbum;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SongMenu songMenu;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RadioButton porcent25;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RadioButton porcent50;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RadioButton porcent75;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject DownloadMsg;

	[Token(Token = "0x14000021")]
	public static event Action DebugAlbumUnlocked
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x10CDF00", Offset = "0x10CDF00", VA = "0x10CDF00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x10CDFB8", Offset = "0x10CDFB8", VA = "0x10CDFB8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x10CE070", Offset = "0x10CE070", VA = "0x10CE070")]
	private void Start()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x10CE6B8", Offset = "0x10CE6B8", VA = "0x10CE6B8")]
	private void UnlockAll_Pressed()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x10CE960", Offset = "0x10CE960", VA = "0x10CE960")]
	private void DeleteGameData_Pressed()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x10CE490", Offset = "0x10CE490", VA = "0x10CE490")]
	public void SetDebugActive(bool active)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x10CE9C0", Offset = "0x10CE9C0", VA = "0x10CE9C0")]
	private void Porcent75_CheckedChanged(bool check)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x10CEA34", Offset = "0x10CEA34", VA = "0x10CEA34")]
	private void Porcent50_CheckedChanged(bool check)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x10CEAA4", Offset = "0x10CEAA4", VA = "0x10CEAA4")]
	private void Porcent25_CheckedChanged(bool check)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x10CEB14", Offset = "0x10CEB14", VA = "0x10CEB14")]
	private void ShowDesactiveIntroToggle_CheckedChanged(bool check)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x10CEB80", Offset = "0x10CEB80", VA = "0x10CEB80")]
	private void ShowRewindModeToggle_CheckedChanged(bool check)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x10CEBEC", Offset = "0x10CEBEC", VA = "0x10CEBEC")]
	private void ShowGodModeToggle_CheckedChanged(bool check)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x10CEC58", Offset = "0x10CEC58", VA = "0x10CEC58")]
	private void ShowUpStrummingModeToggle_Pressed(bool check)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x10CEC80", Offset = "0x10CEC80", VA = "0x10CEC80")]
	private void ShowInfinityStrumminToggle_Pressed(bool check)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x10CECA8", Offset = "0x10CECA8", VA = "0x10CECA8")]
	private void ShowDebugModeToggle_CheckedChanged(bool check)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x10CECB0", Offset = "0x10CECB0", VA = "0x10CECB0")]
	[AsyncStateMachine(typeof(<CheckBetaTestingSongs>d__31))]
	public void CheckBetaTestingSongs()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x10CED6C", Offset = "0x10CED6C", VA = "0x10CED6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x10CF10C", Offset = "0x10CF10C", VA = "0x10CF10C")]
	public DebugModeManager()
	{
	}
}
[Token(Token = "0x2000117")]
public class DebugSettingsManager
{
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool EnableDebugMode;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool UseDebugSongFolder;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool UseDebugCampaignRules;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool UseDebugTutorial;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool UseDebugIntroShow;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<LpUnlockRules> DebugCampaignRules;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static DebugSettings settings;

	[Token(Token = "0x17000074")]
	public static int DebugDateTimeOffset
	{
		[Token(Token = "0x6000590")]
		[Address(RVA = "0x10C2B00", Offset = "0x10C2B00", VA = "0x10C2B00")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000075")]
	public static DebugSettings Settings
	{
		[Token(Token = "0x6000591")]
		[Address(RVA = "0x10C2AA4", Offset = "0x10C2AA4", VA = "0x10C2AA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x10CFAB8", Offset = "0x10CFAB8", VA = "0x10CFAB8")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x10CFE8C", Offset = "0x10CFE8C", VA = "0x10CFE8C")]
	public static void GenerateDebugSettingsFile()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x10D0164", Offset = "0x10D0164", VA = "0x10D0164")]
	public DebugSettingsManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000118")]
public class DebugSettings
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public bool DebugChallengeEnabled;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public int DebugChallengeRank;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int DebugDateTimeOffset;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public bool EnableDebugMode;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	public bool UseDebugSongFolder;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[SerializeField]
	public bool UseDebugCampaignRules;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[SerializeField]
	public bool UseDebugHasDoneTutorial;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public bool UseDebugShowIntro;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<LpUnlockRules> DebugCampaignRules;

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x10CFE84", Offset = "0x10CFE84", VA = "0x10CFE84")]
	public DebugSettings()
	{
	}
}
[Token(Token = "0x2000119")]
public class DestroyOnExitAnimation : MonoBehaviour
{
	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action OnExit;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool shouldExit;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x10D016C", Offset = "0x10D016C", VA = "0x10D016C")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x10D01F0", Offset = "0x10D01F0", VA = "0x10D01F0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x10D025C", Offset = "0x10D025C", VA = "0x10D025C")]
	public void StartExit([Optional] Action onExit)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x10D026C", Offset = "0x10D026C", VA = "0x10D026C")]
	public DestroyOnExitAnimation()
	{
	}
}
[Token(Token = "0x200011A")]
public class DetachedHandController : MonoBehaviour
{
	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsLeftHand;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Wrist;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PairedTransforms> PairedTransformsList;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InteractiveHand hand;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UpdateWristPose;

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x10D0274", Offset = "0x10D0274", VA = "0x10D0274")]
	private void Start()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x10D05C4", Offset = "0x10D05C4", VA = "0x10D05C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x10D02F4", Offset = "0x10D02F4", VA = "0x10D02F4")]
	public void GetAllBones()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x10D0820", Offset = "0x10D0820", VA = "0x10D0820")]
	public DetachedHandController()
	{
	}
}
[Serializable]
[Token(Token = "0x200011C")]
public struct PairedTransforms
{
	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform InitialTransform;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Transform DestinyTransform;
}
[Token(Token = "0x200011D")]
public class DifficultyPanelController : MonoBehaviour
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PressableButton NextButtton;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PressableButton PrevButton;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro backLabel;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve scaleCurve;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxDistance;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ScaleMultiplier;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject BarsSuperEasy;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject BarsEasy;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject BarsNormal;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject BarsHard;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color unSelectedColor;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color SelectedColor;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem SelectionParticles;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ParticleSystem.EmitParams PSparams;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 initialLabelScale;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private DifficultyLevel currentDifficultyLevel;

	[Token(Token = "0x17000076")]
	public DifficultyLevel CurrentDifficultyLevel
	{
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x10D0A58", Offset = "0x10D0A58", VA = "0x10D0A58")]
		get
		{
			return default(DifficultyLevel);
		}
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x10D0A60", Offset = "0x10D0A60", VA = "0x10D0A60")]
		set
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action<DifficultyLevel> DifficultyChanged
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x10D08F8", Offset = "0x10D08F8", VA = "0x10D08F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x10D09A8", Offset = "0x10D09A8", VA = "0x10D09A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x10D117C", Offset = "0x10D117C", VA = "0x10D117C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x10D0AB4", Offset = "0x10D0AB4", VA = "0x10D0AB4")]
	private void ChangeDifficulty(DifficultyLevel value)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x10D1218", Offset = "0x10D1218", VA = "0x10D1218")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x10D1230", Offset = "0x10D1230", VA = "0x10D1230")]
	public void PrevLevel()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x10D1248", Offset = "0x10D1248", VA = "0x10D1248")]
	public float GetNormalizedDistance(Transform obj)
	{
		return default(float);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x10D152C", Offset = "0x10D152C", VA = "0x10D152C")]
	public DifficultyPanelController()
	{
	}
}
[Token(Token = "0x200011E")]
[CreateAssetMenu(menuName = "Unplugged/Create DLCAlbumData")]
public class DLCAlbumData : AlbumData
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D ForeGroundTexture;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D BackgroundTexture;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AlbumData CampaignAlbumTargetForFreeUnlocking;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool IsDLC;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool IsFree;

	[Token(Token = "0x17000077")]
	public bool DisplayIsFree
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x10D1620", Offset = "0x10D1620", VA = "0x10D1620")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000078")]
	public bool DisplayIsDLC
	{
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x10D16A0", Offset = "0x10D16A0", VA = "0x10D16A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000079")]
	public bool IsPurchased
	{
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x10D163C", Offset = "0x10D163C", VA = "0x10D163C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x10D18F8", Offset = "0x10D18F8", VA = "0x10D18F8")]
		set
		{
		}
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x10D16BC", Offset = "0x10D16BC", VA = "0x10D16BC")]
	public void CheckUnlockAlbumForFree()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x10D185C", Offset = "0x10D185C", VA = "0x10D185C")]
	private static List<string> RetrievePurchasedDLCs()
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x10C2500", Offset = "0x10C2500", VA = "0x10C2500")]
	public DLCAlbumData()
	{
	}
}
[Token(Token = "0x200011F")]
public class DrumStickController : GrabbableObject
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion initialRotation;

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x10D1A18", Offset = "0x10D1A18", VA = "0x10D1A18", Slot = "9")]
	public override void OnGrabbed(InteractiveHand hand)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x10D1AE8", Offset = "0x10D1AE8", VA = "0x10D1AE8", Slot = "10")]
	public override void GrabbedUpdated(InteractiveHand hand)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x10D1C98", Offset = "0x10D1C98", VA = "0x10D1C98")]
	public DrumStickController()
	{
	}
}
[Token(Token = "0x2000120")]
public class EncryptationUtils
{
	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x10D1CA0", Offset = "0x10D1CA0", VA = "0x10D1CA0")]
	public static string EncryptString(string key, string plainText)
	{
		return null;
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x10D2398", Offset = "0x10D2398", VA = "0x10D2398")]
	public static string DecryptString(string key, string cipherText)
	{
		return null;
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x10D2A5C", Offset = "0x10D2A5C", VA = "0x10D2A5C")]
	public EncryptationUtils()
	{
	}
}
[Token(Token = "0x2000121")]
public class ExtraPointsLabelController : MonoBehaviour
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ExtraPointsLabelController currentLabel;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Explotion;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FretArea FretTarget;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro textLabel;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LeftyHand;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastPointsAddedTime;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int extraPoints;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float magnetParticles;

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x10D2A64", Offset = "0x10D2A64", VA = "0x10D2A64")]
	public static void AddExtraPoints(FretArea fret, int points)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x10D2C28", Offset = "0x10D2C28", VA = "0x10D2C28")]
	private void AddPoints(int points)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x10D2CEC", Offset = "0x10D2CEC", VA = "0x10D2CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x10D3080", Offset = "0x10D3080", VA = "0x10D3080")]
	public ExtraPointsLabelController()
	{
	}
}
[Token(Token = "0x2000122")]
public class FanRotation : MonoBehaviour
{
	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fanRotationSpeed;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x10D3278", Offset = "0x10D3278", VA = "0x10D3278")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x10D32C4", Offset = "0x10D32C4", VA = "0x10D32C4")]
	public FanRotation()
	{
	}
}
[Token(Token = "0x2000123")]
public class FansLabelController : MonoBehaviour
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro FansText;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x10D32CC", Offset = "0x10D32CC", VA = "0x10D32CC")]
	public void Initialize(int fans)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x10D335C", Offset = "0x10D335C", VA = "0x10D335C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x10D34BC", Offset = "0x10D34BC", VA = "0x10D34BC")]
	public void OnLabelExit()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x10D3528", Offset = "0x10D3528", VA = "0x10D3528")]
	public FansLabelController()
	{
	}
}
[Token(Token = "0x2000124")]
public class FansUIController : MonoBehaviour
{
	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera PosterCamera;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject MagazineUI;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage UserProfilePic;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI UnserName;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI FansCounter;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI MaxScore;

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x10D3530", Offset = "0x10D3530", VA = "0x10D3530")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x10D3760", Offset = "0x10D3760", VA = "0x10D3760")]
	private void RenderUI()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x10D37A8", Offset = "0x10D37A8", VA = "0x10D37A8")]
	private void FlipAvatarImage()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x10D399C", Offset = "0x10D399C", VA = "0x10D399C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x10D3850", Offset = "0x10D3850", VA = "0x10D3850")]
	private void UpdateFansCounter()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x10D3A1C", Offset = "0x10D3A1C", VA = "0x10D3A1C")]
	public FansUIController()
	{
	}
}
[Token(Token = "0x2000125")]
public class FingerClipper : MonoBehaviour
{
	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer HandRenderer;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Plane plane;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion leftyRotationSetup;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x10D3AC4", Offset = "0x10D3AC4", VA = "0x10D3AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x10D3CCC", Offset = "0x10D3CCC", VA = "0x10D3CCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x10D3BF4", Offset = "0x10D3BF4", VA = "0x10D3BF4")]
	private void SetupHandDominance()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x10D3D4C", Offset = "0x10D3D4C", VA = "0x10D3D4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x10D3E70", Offset = "0x10D3E70", VA = "0x10D3E70")]
	public FingerClipper()
	{
	}
}
[Token(Token = "0x2000126")]
public class FingerColliderCheck : MonoBehaviour
{
	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x10D3E78", Offset = "0x10D3E78", VA = "0x10D3E78")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x10D3E7C", Offset = "0x10D3E7C", VA = "0x10D3E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x10D3E80", Offset = "0x10D3E80", VA = "0x10D3E80")]
	public FingerColliderCheck()
	{
	}
}
[Token(Token = "0x2000127")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro t;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timer;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float totalAvergae;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int count;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float average;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int smoothedTrackingLost;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int trackingLost;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool currentHandIsTracked;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private HandTrackingStates currentPrimaryHandState;

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x10D3E88", Offset = "0x10D3E88", VA = "0x10D3E88")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x10D3EE0", Offset = "0x10D3EE0", VA = "0x10D3EE0")]
	public void Update()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x10D42E4", Offset = "0x10D42E4", VA = "0x10D42E4")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x2000128")]
public class FriendPassedController : MonoBehaviour
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MovementVelocity;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro UserNameLabel;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro UserScoreLabel;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer UserAvatarPic;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D texture;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform anchor;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private long score;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private new string name;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x10D42EC", Offset = "0x10D42EC", VA = "0x10D42EC")]
	public void Initialize(Transform anchor, Texture2D texture, long score, string name)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x10D445C", Offset = "0x10D445C", VA = "0x10D445C")]
	public void Initialize(LeaderboardEntryData friend, Transform anchor)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x10D4480", Offset = "0x10D4480", VA = "0x10D4480")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x10D4644", Offset = "0x10D4644", VA = "0x10D4644")]
	public void OnAnimationEnded()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x10D46B0", Offset = "0x10D46B0", VA = "0x10D46B0")]
	public FriendPassedController()
	{
	}
}
[Token(Token = "0x2000129")]
public class FriendsPassedManager : MonoBehaviour
{
	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject FriendPassedGo;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Anchor;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int userRanking;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private long userScore;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int userFriendsCount;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private User loggedUser;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Stack<LeaderboardEntryData> friendsData;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LeaderboardEntryList currentSongLeaderboard;

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x10D46C0", Offset = "0x10D46C0", VA = "0x10D46C0")]
	private void ParseRetrievedFriendsData()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x10D478C", Offset = "0x10D478C", VA = "0x10D478C")]
	private void GetUserLeaderBoardInfo()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x10D4838", Offset = "0x10D4838", VA = "0x10D4838")]
	private void GetFriendLeaderboardsForCurrentSong()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x10D49C4", Offset = "0x10D49C4", VA = "0x10D49C4")]
	private void GetAllFriendsEntries(LeaderboardEntryList friendsLeaderboard)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x10D4DD4", Offset = "0x10D4DD4", VA = "0x10D4DD4")]
	private void FriendPassed(LeaderboardEntryData friendData)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x10D4DD8", Offset = "0x10D4DD8", VA = "0x10D4DD8")]
	private void ShowFriendPassed(LeaderboardEntryData friendData)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x10D4F18", Offset = "0x10D4F18", VA = "0x10D4F18")]
	public FriendsPassedManager()
	{
	}
}
[Token(Token = "0x200012A")]
[CreateAssetMenu(fileName = "GameParameters", menuName = "Unplugged/GameParameters", order = 1)]
public class GameParameters : ScriptableObject
{
	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string LevelName;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InstrumentalTrackVolumen;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FeedBackFailNoteVolume;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SongStartDelay;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float NoteActiveThershold;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float NoteGoodThershold;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	public float NoteAwesomeThershold;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ComboToElectricity;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 0.5f)]
	public float PowerChargeStep;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float PowerNoteDistanceToCollide;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int ComboPopUpCounter;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 0.5f)]
	public float NoteDisableThershold;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 0.5f)]
	public float NoteDestroyTime;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ScoreMultiplier;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float ScoreMultiplierinDuration;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float MinOffSetTime;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float MinTimeUntilNextNote;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float MinInfinityStrumming;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float MaxAutoStrummingTime;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float MissedNoteLifePenalty;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float PoorNoteLifeReward;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float GoodNoteLifeReward;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float AwesomeNoteLifeReward;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VibratoLifeReward;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float VirtuosoExtraPointsReward;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float BlindNoteRevealTime;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int MinGhostHandCombo;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int InitialLife;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int LifeThersholdAwesome;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int LifeThersholdPoor;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int LifeThersholdBad;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int FansByCompleteGame;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int MinUnderwearFans;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int MaxUnderwearFans;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float MinThrowingUnderwareCadenceTime;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float MaxThrowingUnderwareCadenceTime;

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x10D54A8", Offset = "0x10D54A8", VA = "0x10D54A8")]
	public float GetRewardFromFeedback(FeedbackType feedback)
	{
		return default(float);
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x10D54F8", Offset = "0x10D54F8", VA = "0x10D54F8")]
	public GameParameters()
	{
	}
}
[Token(Token = "0x200012B")]
public class AmpFeedbackController : MonoBehaviour
{
	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem AmpParticles;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve ParticleAmount;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.EmitParams ep;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private AudioSource audioSource;

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x10D5590", Offset = "0x10D5590", VA = "0x10D5590")]
	public void Start()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x10D5680", Offset = "0x10D5680", VA = "0x10D5680")]
	private void I_OnComboValueChanged(float prevValue, float value)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x10D5790", Offset = "0x10D5790", VA = "0x10D5790")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x10D5840", Offset = "0x10D5840", VA = "0x10D5840")]
	public AmpFeedbackController()
	{
	}
}
[Token(Token = "0x200012C")]
public class BeerThrowManager : MonoBehaviour
{
	[Token(Token = "0x200012D")]
	[CompilerGenerated]
	private sealed class <ThowWithDelay>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BeerThrowManager <>4__this;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0x10D668C", Offset = "0x10D668C", VA = "0x10D668C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000602")]
			[Address(RVA = "0x10D66D4", Offset = "0x10D66D4", VA = "0x10D66D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x10D6380", Offset = "0x10D6380", VA = "0x10D6380")]
		[DebuggerHidden]
		public <ThowWithDelay>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x10D63A8", Offset = "0x10D63A8", VA = "0x10D63A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x10D63AC", Offset = "0x10D63AC", VA = "0x10D63AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x10D6694", Offset = "0x10D6694", VA = "0x10D6694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BeerThrowManager I;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GlassExplosion;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ObjectThrowerGo;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ObjectThrower> Throwers;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float LastThrownObjectTime;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameManager gameManager;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ColliderArea HeadCollider;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem CrowdThrowingPS;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.EmitParams CrowdThrowingParams;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AnimationCurve ThrowingCadency;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private IEnumerator LastThrowActivated;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool playerHit;

	[Token(Token = "0x14000023")]
	public static event Action OnPlayerHit
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x10D5848", Offset = "0x10D5848", VA = "0x10D5848")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x10D5904", Offset = "0x10D5904", VA = "0x10D5904")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x10D59C0", Offset = "0x10D59C0", VA = "0x10D59C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x10D5A18", Offset = "0x10D5A18", VA = "0x10D5A18")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x10D5C50", Offset = "0x10D5C50", VA = "0x10D5C50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x10D5DAC", Offset = "0x10D5DAC", VA = "0x10D5DAC")]
	private void ObjectThrower_DestroyObjectThrower(ObjectThrower objectThrower)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x10D5E04", Offset = "0x10D5E04", VA = "0x10D5E04")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x10D5FA0", Offset = "0x10D5FA0", VA = "0x10D5FA0")]
	private void I_PlayerStateChanged(FeedbackType obj)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x10D6070", Offset = "0x10D6070", VA = "0x10D6070")]
	[IteratorStateMachine(typeof(<ThowWithDelay>d__20))]
	public IEnumerator ThowWithDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x10D60F4", Offset = "0x10D60F4", VA = "0x10D60F4")]
	public void Glass_Destroyed(ThrownObject sender)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x10D61E0", Offset = "0x10D61E0", VA = "0x10D61E0")]
	public void Glass_Collided(Collision obj)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x10D6304", Offset = "0x10D6304", VA = "0x10D6304")]
	private float GetNextThrowningTime()
	{
		return default(float);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x10D6374", Offset = "0x10D6374", VA = "0x10D6374")]
	private void HeadCollider_CollisionEnters(ColliderArea sender, Collider obj)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x10D6378", Offset = "0x10D6378", VA = "0x10D6378")]
	public BeerThrowManager()
	{
	}
}
[Token(Token = "0x200012E")]
[ExecuteInEditMode]
public class CrowdController : MonoBehaviour
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CrowdLight;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform CrowdLight2;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform FlashLight;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform FlashLight2;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color CrowdLightColor1;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color CrowdLightColor2;

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x10D66DC", Offset = "0x10D66DC", VA = "0x10D66DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x10D6878", Offset = "0x10D6878", VA = "0x10D6878")]
	public CrowdController()
	{
	}
}
[Token(Token = "0x200012F")]
public class CrowdGameManager : MonoBehaviour
{
	[Token(Token = "0x2000130")]
	[CompilerGenerated]
	private sealed class <EndDelay>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0x10D85F4", Offset = "0x10D85F4", VA = "0x10D85F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0x10D863C", Offset = "0x10D863C", VA = "0x10D863C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x10D7FDC", Offset = "0x10D7FDC", VA = "0x10D7FDC")]
		[DebuggerHidden]
		public <EndDelay>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x10D8500", Offset = "0x10D8500", VA = "0x10D8500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x10D8504", Offset = "0x10D8504", VA = "0x10D8504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x10D85FC", Offset = "0x10D85FC", VA = "0x10D85FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ShowCrowdOnActivation;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Crowd;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProgressBar powerIndicator;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem FeedbackPS;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PowerActivator powerActivator;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CrowdIndicator crowdIndicator;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject PowerExplosionPrefab;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.EmitParams psParams;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool IsUsingPower;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float CrowdPoints;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshPro crowdPointsLabel;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<FireworkFx> Fireworks;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private IntermezzoController crowdIntermezzo;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AudioSource scoreCounter;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float lastPowerTime;

	[Token(Token = "0x1700007C")]
	public static bool AllowToRecharge
	{
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x10D6B68", Offset = "0x10D6B68", VA = "0x10D6B68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000024")]
	public static event Action CrowdGameStarted
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x10D6880", Offset = "0x10D6880", VA = "0x10D6880")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000606")]
		[Address(RVA = "0x10D6938", Offset = "0x10D6938", VA = "0x10D6938")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public static event Action CrowdGameEnded
	{
		[Token(Token = "0x6000607")]
		[Address(RVA = "0x10D69F0", Offset = "0x10D69F0", VA = "0x10D69F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x10D6AAC", Offset = "0x10D6AAC", VA = "0x10D6AAC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x10D6BC8", Offset = "0x10D6BC8", VA = "0x10D6BC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x10D7118", Offset = "0x10D7118", VA = "0x10D7118")]
	private void CampaignManager_OnNewAlbumUnlocked()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x10D719C", Offset = "0x10D719C", VA = "0x10D719C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x10D75D8", Offset = "0x10D75D8", VA = "0x10D75D8")]
	private void I_PlayerLifeChanged(float obj)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x10D75DC", Offset = "0x10D75DC", VA = "0x10D75DC")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x10D76A0", Offset = "0x10D76A0", VA = "0x10D76A0")]
	private void PowerActivator_PowerActivated(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x10D7B30", Offset = "0x10D7B30", VA = "0x10D7B30")]
	private void GameManager_SongFinished()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x10D7D74", Offset = "0x10D7D74", VA = "0x10D7D74")]
	private void PowerBar_OnValueChanged(float prevValue, float value)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x10D7F7C", Offset = "0x10D7F7C", VA = "0x10D7F7C")]
	[IteratorStateMachine(typeof(<EndDelay>d__31))]
	private IEnumerator EndDelay()
	{
		return null;
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x10D8004", Offset = "0x10D8004", VA = "0x10D8004")]
	public void Update()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x10D8304", Offset = "0x10D8304", VA = "0x10D8304")]
	public CrowdGameManager()
	{
	}
}
[Token(Token = "0x2000131")]
public class CrowdHeart : MonoBehaviour
{
	[Token(Token = "0x600061C")]
	[Address(RVA = "0x10D8644", Offset = "0x10D8644", VA = "0x10D8644")]
	private void Start()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x10D8648", Offset = "0x10D8648", VA = "0x10D8648")]
	private void Update()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x10D864C", Offset = "0x10D864C", VA = "0x10D864C")]
	public CrowdHeart()
	{
	}
}
[Token(Token = "0x2000132")]
[ExecuteInEditMode]
public class CrowdIKManager : MonoBehaviour
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SlaveHandPrefab;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CrowdSlave> Slaves;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Amount;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 Area;

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x10D8654", Offset = "0x10D8654", VA = "0x10D8654")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x10D893C", Offset = "0x10D893C", VA = "0x10D893C")]
	public CrowdIKManager()
	{
	}
}
[Token(Token = "0x2000133")]
public class CrowdIndicator : MonoBehaviour
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro finalScoreLabel;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro ExtraPointsLabel;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform crowdScore;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnExit;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject EndSongMsg;

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x10D7EC8", Offset = "0x10D7EC8", VA = "0x10D7EC8")]
	public void Close()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x10D894C", Offset = "0x10D894C", VA = "0x10D894C")]
	public void MoveScore()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x10D8950", Offset = "0x10D8950", VA = "0x10D8950")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x10D7A84", Offset = "0x10D7A84", VA = "0x10D7A84")]
	public void Show()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x10D7CE0", Offset = "0x10D7CE0", VA = "0x10D7CE0")]
	public void ShowEndSongMsg()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x10D8994", Offset = "0x10D8994", VA = "0x10D8994")]
	public void HideEndSongMsg()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x10D89B4", Offset = "0x10D89B4", VA = "0x10D89B4")]
	public CrowdIndicator()
	{
	}
}
[Token(Token = "0x2000134")]
public class DrumGameManager : InstrumentGameManagerBase
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float PreWarmTime;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float TimeUntilNextNote;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<TomArea> Toms;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TomArea SelectTom;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion RotationOffset;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool InVibratoNote;

	[Token(Token = "0x14000026")]
	public event Action OnInitialized
	{
		[Token(Token = "0x6000628")]
		[Address(RVA = "0x10D89BC", Offset = "0x10D89BC", VA = "0x10D89BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000629")]
		[Address(RVA = "0x10D8A58", Offset = "0x10D8A58", VA = "0x10D8A58")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x10D8AF4", Offset = "0x10D8AF4", VA = "0x10D8AF4", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x10D90A4", Offset = "0x10D90A4", VA = "0x10D90A4", Slot = "7")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x10D9338", Offset = "0x10D9338", VA = "0x10D9338")]
	private void DrumTombAutoTouch()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x10D97AC", Offset = "0x10D97AC", VA = "0x10D97AC", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x10D933C", Offset = "0x10D933C", VA = "0x10D933C")]
	private void ProcessTomTouch()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x10D9820", Offset = "0x10D9820", VA = "0x10D9820")]
	private void OnKeyInteractionTimeExits(KeyTime key)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x10D99D8", Offset = "0x10D99D8", VA = "0x10D99D8")]
	public DrumGameManager()
	{
	}
}
[Token(Token = "0x2000136")]
public class DrumNoteController : NoteController
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform DurationNote;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> VisibleElements;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject InivisibleElement;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<TierFinger> AllFingers;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Transform> DurationBones;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer DurationRenderer;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer NoteRenderer;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<TierFinger> currentFingers;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator animator;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool IsVisible;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool revealed;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock notePropertyBlock;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x10D9C88", Offset = "0x10D9C88", VA = "0x10D9C88", Slot = "12")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x10D9D90", Offset = "0x10D9D90", VA = "0x10D9D90", Slot = "4")]
	public override void Initialize(KeyTime note)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x10D9E2C", Offset = "0x10D9E2C", VA = "0x10D9E2C", Slot = "13")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x10DA22C", Offset = "0x10DA22C", VA = "0x10DA22C", Slot = "14")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x10DA454", Offset = "0x10DA454", VA = "0x10DA454")]
	private void DestroyWithAnimation()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x10DA47C", Offset = "0x10DA47C", VA = "0x10DA47C")]
	private void SetVisible()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x10DA624", Offset = "0x10DA624", VA = "0x10DA624", Slot = "15")]
	public virtual void SetMaterialInvisible(bool invisible)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x10DA0AC", Offset = "0x10DA0AC", VA = "0x10DA0AC")]
	private void SetInvisible()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x10DA6CC", Offset = "0x10DA6CC", VA = "0x10DA6CC", Slot = "7")]
	public override void SetDurationEnter()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x10DA724", Offset = "0x10DA724", VA = "0x10DA724", Slot = "5")]
	public override void SetFail()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x10DA77C", Offset = "0x10DA77C", VA = "0x10DA77C", Slot = "6")]
	public override void DestroyNote()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x10DA824", Offset = "0x10DA824", VA = "0x10DA824", Slot = "9")]
	public override void SetAligment(Vector3 forward, Vector3 up)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x10DA948", Offset = "0x10DA948", VA = "0x10DA948", Slot = "10")]
	public override void SetPosition(StringLine line)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x10DA9B8", Offset = "0x10DA9B8", VA = "0x10DA9B8", Slot = "8")]
	public override void SetActive()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x10DAA10", Offset = "0x10DAA10", VA = "0x10DAA10")]
	public void RevealBlindNote()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x10DAB34", Offset = "0x10DAB34", VA = "0x10DAB34", Slot = "11")]
	public override void SetDuration(float relativeDuration, StringLine stringLine)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x10DACB8", Offset = "0x10DACB8", VA = "0x10DACB8", Slot = "16")]
	public virtual void SetFingers(List<TierFinger> fingers)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x10DAE68", Offset = "0x10DAE68", VA = "0x10DAE68")]
	private void SetFinger(TierFinger finger, bool Close)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x10DAF8C", Offset = "0x10DAF8C", VA = "0x10DAF8C")]
	public DrumNoteController()
	{
	}
}
[Token(Token = "0x2000137")]
public class DrumPlaterSpaceController : PlaterSpaceController
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform DrumModelTransform;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform DrumPlaterSpace;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 drumInitialPosition;

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x10DB220", Offset = "0x10DB220", VA = "0x10DB220", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x10DB2D0", Offset = "0x10DB2D0", VA = "0x10DB2D0", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x10DB2D8", Offset = "0x10DB2D8", VA = "0x10DB2D8", Slot = "7")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x10DB2E0", Offset = "0x10DB2E0", VA = "0x10DB2E0")]
	public DrumPlaterSpaceController()
	{
	}
}
[Token(Token = "0x2000138")]
public class EndInfoManager : MonoBehaviour
{
	[Token(Token = "0x2000139")]
	[CompilerGenerated]
	private sealed class <InitializePanelsLazy>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndInfoManager <>4__this;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000662")]
			[Address(RVA = "0x10DD868", Offset = "0x10DD868", VA = "0x10DD868", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000664")]
			[Address(RVA = "0x10DD8B0", Offset = "0x10DD8B0", VA = "0x10DD8B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x10DCCE0", Offset = "0x10DCCE0", VA = "0x10DCCE0")]
		[DebuggerHidden]
		public <InitializePanelsLazy>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x10DD174", Offset = "0x10DD174", VA = "0x10DD174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x10DD178", Offset = "0x10DD178", VA = "0x10DD178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x10DD870", Offset = "0x10DD870", VA = "0x10DD870", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EndInfoManager I;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action RestartSong;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action GoToStartSpace;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<bool> PlayNextSong;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Action> AnimationsQueue;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer CampaignMessage;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer ChallengeMessage;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator DecorationAwesomeAnimator;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator DecorationBadAnimator;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator StatsAnimator;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject PanelsAndRibbonAwesome;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EndSpaceLp endSpaceLp;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EndSpaceLeaderboardManager LeaderboardManager;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float oldScoreRatio;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TweenerCore<Color, Color, ColorOptions> fader;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EndNavigationController.EndSpaceExitStates goToOnExit;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool newAlbumUnlocked;

	[Token(Token = "0x14000027")]
	public static event Action OnEndSpaceAnimationExit
	{
		[Token(Token = "0x600064D")]
		[Address(RVA = "0x10DB2E8", Offset = "0x10DB2E8", VA = "0x10DB2E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600064E")]
		[Address(RVA = "0x10DB3A4", Offset = "0x10DB3A4", VA = "0x10DB3A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public static event Action OnNewAlbumUnlocked
	{
		[Token(Token = "0x600064F")]
		[Address(RVA = "0x10DB460", Offset = "0x10DB460", VA = "0x10DB460")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000650")]
		[Address(RVA = "0x10DB51C", Offset = "0x10DB51C", VA = "0x10DB51C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x10DB5D8", Offset = "0x10DB5D8", VA = "0x10DB5D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x10DB6F8", Offset = "0x10DB6F8", VA = "0x10DB6F8")]
	public void ShowEndSpace()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x10DB6FC", Offset = "0x10DB6FC", VA = "0x10DB6FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x10DC754", Offset = "0x10DC754", VA = "0x10DC754")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x10DCCD4", Offset = "0x10DCCD4", VA = "0x10DCCD4")]
	private void CampaignManager_OnNewAlbumUnlocked()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x10DBD8C", Offset = "0x10DBD8C", VA = "0x10DBD8C")]
	[IteratorStateMachine(typeof(<InitializePanelsLazy>d__28))]
	private IEnumerator InitializePanelsLazy()
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x10DCD08", Offset = "0x10DCD08", VA = "0x10DCD08")]
	public void OnExitAnimationEnded()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x10DCED8", Offset = "0x10DCED8", VA = "0x10DCED8")]
	private void EndSpaceController_Navigated(EndNavigationController.EndSpaceExitStates buttonPressed)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x10DC3AC", Offset = "0x10DC3AC", VA = "0x10DC3AC")]
	public void SaveSongProgress()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x10DC134", Offset = "0x10DC134", VA = "0x10DC134")]
	private static void SavePlayerRecords()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x10DCFC8", Offset = "0x10DCFC8", VA = "0x10DCFC8")]
	private void AnimationAdded(Action action)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x10DD050", Offset = "0x10DD050", VA = "0x10DD050")]
	private void AnimationEnded(Action action)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x10DD100", Offset = "0x10DD100", VA = "0x10DD100")]
	public EndInfoManager()
	{
	}
}
[Token(Token = "0x200013B")]
public class EndNavigationController : PopUpController
{
	[Token(Token = "0x200013C")]
	public enum EndSpaceExitStates
	{
		[Token(Token = "0x40006B3")]
		GotoMenu,
		[Token(Token = "0x40006B4")]
		Restart,
		[Token(Token = "0x40006B5")]
		NextSong
	}

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<EndSpaceExitStates> OnNavigation;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject NextSongUI;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject UnlockRules;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject EndDlc;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ChangeDifficultyUI;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject EndAdvice;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro EndOfAlbumText;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 TargetPosition;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PressableButton restartButton;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PressableButton backToMenuButton;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PressableButton NextSongButton;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Renderer NextSongCover;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro BandNameLabel;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshPro SongNameLabel;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public DifficultyPanelController DifficultySelector;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RuleItems rulePanelController;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static SongSavedData songSavedData;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Animator animator;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EndSpaceExitStates goToOnExit;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private DifficultyLevel playedDifficulty;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private SongMappingMetaData nextSong;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool newAlbumUnlocked;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x10DD9F8", Offset = "0x10DD9F8", VA = "0x10DD9F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x10DDC30", Offset = "0x10DDC30", VA = "0x10DDC30", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x10DDF84", Offset = "0x10DDF84", VA = "0x10DDF84")]
	private void DisableUiPanels()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x10DE5A4", Offset = "0x10DE5A4", VA = "0x10DE5A4")]
	private void CampaignManager_OnNewAlbumUnlocked()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x10DE5B0", Offset = "0x10DE5B0", VA = "0x10DE5B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x10DDFF8", Offset = "0x10DDFF8", VA = "0x10DDFF8")]
	private void SetNextSongUI()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x10DE7E8", Offset = "0x10DE7E8", VA = "0x10DE7E8")]
	private void UpdateNextSongPanel(List<SongMappingMetaData> songs)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x10DE918", Offset = "0x10DE918", VA = "0x10DE918")]
	private void NextSongButton_Pressed()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x10DEA28", Offset = "0x10DEA28", VA = "0x10DEA28")]
	private void DifficultySelector_DifficultyChanged(DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x10DEA94", Offset = "0x10DEA94", VA = "0x10DEA94")]
	private void BackToMenuButton_Pressed()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x10DEB8C", Offset = "0x10DEB8C", VA = "0x10DEB8C")]
	private void RestartButton_Pressed()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x10DDEC4", Offset = "0x10DDEC4", VA = "0x10DDEC4")]
	private void PlaceUIRelativeToUser()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x10DED60", Offset = "0x10DED60", VA = "0x10DED60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x10DEF1C", Offset = "0x10DEF1C", VA = "0x10DEF1C")]
	public EndNavigationController()
	{
	}
}
[Token(Token = "0x200013F")]
public class EndNavigationIntermezzoManager : MonoBehaviour
{
	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform IntermezzoParent;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool newAlbumUnlocked;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntermezzoController instantiatedIntermezzo;

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x10DF07C", Offset = "0x10DF07C", VA = "0x10DF07C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x10DF234", Offset = "0x10DF234", VA = "0x10DF234")]
	private void EndInfoManager_OnEndSpaceAnimationExit()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x10DF2B8", Offset = "0x10DF2B8", VA = "0x10DF2B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x10DF468", Offset = "0x10DF468", VA = "0x10DF468")]
	private void StatsController_StatsEnterFinished()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x10DF604", Offset = "0x10DF604", VA = "0x10DF604")]
	private void CampaignManager_OnNewAlbumUnlocked()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x10DF610", Offset = "0x10DF610", VA = "0x10DF610")]
	public EndNavigationIntermezzoManager()
	{
	}
}
[Token(Token = "0x2000140")]
public class EndSpaceLeaderboardManager : MonoBehaviour
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaderboardController GlobalLeaderboardController;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PicksRankingController PickRankingBar;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int EntriesToRetrieve;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D DefaultPlayerPic;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LeaderboardEntryData userLeaderboardEntry;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<LeaderboardEntryData> generalLeaderboardsEntries;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LeaderboardEntryData> generalUserCenteredLeaderboardEntries;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LeaderboardAccesser leaderboardAccesser;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AlbumData currentAlbum;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x10DD46C", Offset = "0x10DD46C", VA = "0x10DD46C")]
	public void LoadLeaderboardsPanels(AlbumData album, string leaderboardName, int score)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x10DF644", Offset = "0x10DF644", VA = "0x10DF644")]
	private void RetrieveUserLeaderboardEntry()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x10DF728", Offset = "0x10DF728", VA = "0x10DF728")]
	private void RetrieveGeneralLeaderboardEntries()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x10DF80C", Offset = "0x10DF80C", VA = "0x10DF80C")]
	private void RetrieveGeneralLeaderboardEntriesPlayerCentered()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x10DF8F0", Offset = "0x10DF8F0", VA = "0x10DF8F0")]
	private void ShowLeaderboardsScreens()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x10DF620", Offset = "0x10DF620", VA = "0x10DF620")]
	private void RaiseErrorScreens()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x10DFADC", Offset = "0x10DFADC", VA = "0x10DFADC")]
	private void RaiseGeneraLeaderboardErrorScreen()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x10DFAF4", Offset = "0x10DFAF4", VA = "0x10DFAF4")]
	private void RaiseGeneralLeaderboardsPlayerCenteredErrorScreen()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x10DFBA0", Offset = "0x10DFBA0", VA = "0x10DFBA0")]
	public EndSpaceLeaderboardManager()
	{
	}
}
[Token(Token = "0x2000142")]
public class EndSpaceLp : MonoBehaviour
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer CoverRenderer;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer FramedCoverRenderer;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject NormalLp;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject FramedLp;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject EasyAwardPrefab;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject NormalAwardPrefab;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject HardAwardPrefab;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftAwardAnchor;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform MiddleAwardAnchor;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform RightAwardAnchor;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem LpUnlockedParticles;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isFramed;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SongMappingMetaData songData;

	[Token(Token = "0x17000081")]
	public bool IsFramed
	{
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x10E0080", Offset = "0x10E0080", VA = "0x10E0080")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x10E0088", Offset = "0x10E0088", VA = "0x10E0088")]
		set
		{
		}
	}

	[Token(Token = "0x14000029")]
	public static event Action<Action> LpAwardsUpdated
	{
		[Token(Token = "0x6000698")]
		[Address(RVA = "0x10DBECC", Offset = "0x10DBECC", VA = "0x10DBECC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000699")]
		[Address(RVA = "0x10DCA6C", Offset = "0x10DCA6C", VA = "0x10DCA6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x10E00CC", Offset = "0x10E00CC", VA = "0x10E00CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x10E0250", Offset = "0x10E0250", VA = "0x10E0250")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x10E0384", Offset = "0x10E0384", VA = "0x10E0384")]
	private void LpAwardUnlockedController_OnLpCollided()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x10DBD08", Offset = "0x10DBD08", VA = "0x10DBD08")]
	public void SetSong()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x10E04C0", Offset = "0x10E04C0", VA = "0x10E04C0")]
	private void UpdateAwards()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x10E1174", Offset = "0x10E1174", VA = "0x10E1174")]
	private GameObject GetPrefabAwardFromDifficulty(DifficultyLevel lvl)
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x10E11B0", Offset = "0x10E11B0", VA = "0x10E11B0")]
	public EndSpaceLp()
	{
	}
}
[Token(Token = "0x2000144")]
public class LeaderboardController : MonoBehaviour
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> LeaderboardItems;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform LeaderboardItemsContainer;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform IconsAnchor;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject LeaderboardItemPrefab;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject LeaderboardItemPlayer;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject LoadingScreen;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject ErrorScreen;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Color CurrentUserHighlightColor;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject LoadingScreenInstance;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject ErrorScreenInstance;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isLoadingScreenEnabled;

	[Token(Token = "0x17000082")]
	public bool IsLoadingScreenEnabled
	{
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x10E1234", Offset = "0x10E1234", VA = "0x10E1234")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x10E123C", Offset = "0x10E123C", VA = "0x10E123C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x10E1240", Offset = "0x10E1240", VA = "0x10E1240")]
	public void SetEmptyLeaderboard()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x10E154C", Offset = "0x10E154C", VA = "0x10E154C")]
	public void ShowLoadingScreen()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x10E1620", Offset = "0x10E1620", VA = "0x10E1620")]
	public void HideLoadingScreen([Optional] Action onAnimationExit)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x10DFB20", Offset = "0x10DFB20", VA = "0x10DFB20")]
	public void ShowErrorScreen()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x10E16FC", Offset = "0x10E16FC", VA = "0x10E16FC")]
	public void HideErrorScreen()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x10DF9F0", Offset = "0x10DF9F0", VA = "0x10DF9F0")]
	public void SetLeaderboard(List<LeaderboardEntryData> leaderboardEntries, LeaderboardEntryData? localUserEntry)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x10E1794", Offset = "0x10E1794", VA = "0x10E1794")]
	public LeaderboardController()
	{
	}
}
[Token(Token = "0x2000147")]
public class LpAwardUnlockedController : MonoBehaviour
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform easyLP;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform normalLP;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hardLP;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro AwardText;

	[Token(Token = "0x1400002A")]
	public static event Action OnLpCollided
	{
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x10E0198", Offset = "0x10E0198", VA = "0x10E0198")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x10E02CC", Offset = "0x10E02CC", VA = "0x10E02CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x10E1EC8", Offset = "0x10E1EC8", VA = "0x10E1EC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x10E1F44", Offset = "0x10E1F44", VA = "0x10E1F44")]
	public void ShowLp(DifficultyLevel difficultyLevel)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x10E20E0", Offset = "0x10E20E0", VA = "0x10E20E0")]
	public void HideLp()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x10E21A4", Offset = "0x10E21A4", VA = "0x10E21A4")]
	public LpAwardUnlockedController()
	{
	}
}
[Token(Token = "0x2000148")]
public class NewAlbumUnlockedController : MonoBehaviour
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro AlbumTitle;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer AlbumCoverRenderer;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VenueIconController venueIcon;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator shinningAnimator;

	[Token(Token = "0x1400002B")]
	public static event Action<Action> NewAlbumUnlockedAnimationStarted
	{
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x10DBF98", Offset = "0x10DBF98", VA = "0x10DBF98")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x10DCB38", Offset = "0x10DCB38", VA = "0x10DCB38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public static event Action<Action> NewAlbumUnlockedAnimationFinished
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x10DC064", Offset = "0x10DC064", VA = "0x10DC064")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x10DCC04", Offset = "0x10DCC04", VA = "0x10DCC04")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x10E21AC", Offset = "0x10E21AC", VA = "0x10E21AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x10E22C8", Offset = "0x10E22C8", VA = "0x10E22C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x10E2390", Offset = "0x10E2390", VA = "0x10E2390")]
	private void CampaignManager_OnNewAlbumUnlocked()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x10E245C", Offset = "0x10E245C", VA = "0x10E245C")]
	private void OnAnimationFinished()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x10E257C", Offset = "0x10E257C", VA = "0x10E257C")]
	public NewAlbumUnlockedController()
	{
	}
}
[Token(Token = "0x200014A")]
public class ShinningFx : MonoBehaviour
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x10E2A0C", Offset = "0x10E2A0C", VA = "0x10E2A0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x10E2A64", Offset = "0x10E2A64", VA = "0x10E2A64")]
	public void EnterFX()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x10E2AFC", Offset = "0x10E2AFC", VA = "0x10E2AFC")]
	public void ExitFX()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x10E2B94", Offset = "0x10E2B94", VA = "0x10E2B94")]
	public ShinningFx()
	{
	}
}
[Token(Token = "0x200014B")]
public class StarsController : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x200014C")]
	[CompilerGenerated]
	private struct <ShowStars>d__11 : IAsyncStateMachine
	{
		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StarsController <>4__this;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <stars>5__2;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object <>u__1;

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x10E2F0C", Offset = "0x10E2F0C", VA = "0x10E2F0C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x10E371C", Offset = "0x10E371C", VA = "0x10E371C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> Stars;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject GoldDisk;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PlatinumDisk;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject DiamondDisk;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject PoopIcon;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EndSpaceLp Lp;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject LPContainer;

	[Token(Token = "0x1400002D")]
	public static event Action<Action> NewAchievementLpUnlocked
	{
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x10DBE00", Offset = "0x10DBE00", VA = "0x10DBE00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x10DC9A0", Offset = "0x10DC9A0", VA = "0x10DC9A0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x10E2B9C", Offset = "0x10E2B9C", VA = "0x10E2B9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x10E2D3C", Offset = "0x10E2D3C", VA = "0x10E2D3C")]
	[AsyncStateMachine(typeof(<ShowStars>d__11))]
	public void ShowStars()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x10E2DF0", Offset = "0x10E2DF0", VA = "0x10E2DF0")]
	public StarsController()
	{
	}
}
[Token(Token = "0x200014D")]
public class StatsController : MonoBehaviour
{
	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StarsController starsController;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CounterLabel HighestCombo;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CounterLabel Score;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CounterLabel CrowdPointsLabel;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CounterLabel PlayedNotesLabel;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator ChartAnimator;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer NotesCountBar;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro BandNameLabel;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro SongNameLabel;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro FansNumberTotal;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro FansNumberInGame;

	[Token(Token = "0x1400002E")]
	public static event Action StatsEnterFinished
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x10DF17C", Offset = "0x10DF17C", VA = "0x10DF17C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x10DF3B0", Offset = "0x10DF3B0", VA = "0x10DF3B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x10E3728", Offset = "0x10E3728", VA = "0x10E3728")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x10E3ADC", Offset = "0x10E3ADC", VA = "0x10E3ADC")]
	private void AnimateNotesBar()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x10E3D98", Offset = "0x10E3D98", VA = "0x10E3D98")]
	public void EnterAnimationEnded()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x10E3DB4", Offset = "0x10E3DB4", VA = "0x10E3DB4")]
	public void EndInfoManager_AnimationEntered()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x10E3DD0", Offset = "0x10E3DD0", VA = "0x10E3DD0")]
	public StatsController()
	{
	}
}
[Token(Token = "0x200014E")]
public class FeedbackLightController : MonoBehaviour
{
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Projector projector;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer render;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x10E3F2C", Offset = "0x10E3F2C", VA = "0x10E3F2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x10E3F30", Offset = "0x10E3F30", VA = "0x10E3F30")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x10E3F80", Offset = "0x10E3F80", VA = "0x10E3F80")]
	public FeedbackLightController()
	{
	}
}
[Token(Token = "0x200014F")]
public class FeedbackObject : MonoBehaviour
{
	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FeedbackType VisibleOnState;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ShowWhenPowerIsCharged;

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x10E3F88", Offset = "0x10E3F88", VA = "0x10E3F88")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x10E4084", Offset = "0x10E4084", VA = "0x10E4084")]
	private void ScoreManager_PowerChargedChanged(bool charged)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x10E40AC", Offset = "0x10E40AC", VA = "0x10E40AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x10E4180", Offset = "0x10E4180", VA = "0x10E4180")]
	private void ScoreManager_ScoreStateChanged(FeedbackType obj)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x10E41B8", Offset = "0x10E41B8", VA = "0x10E41B8")]
	public FeedbackObject()
	{
	}
}
[Token(Token = "0x2000150")]
public class FeedbackPhones : MonoBehaviour
{
	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FeedbackType VisibleOnState;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] FeedbackParticles;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x10E41C0", Offset = "0x10E41C0", VA = "0x10E41C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x10E4294", Offset = "0x10E4294", VA = "0x10E4294")]
	private void SetVisibility(bool visible)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x10E4318", Offset = "0x10E4318", VA = "0x10E4318")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x10E4398", Offset = "0x10E4398", VA = "0x10E4398")]
	private void ScoreManager_ScoreStateChanged(FeedbackType obj)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x10E43D0", Offset = "0x10E43D0", VA = "0x10E43D0")]
	public FeedbackPhones()
	{
	}
}
[Token(Token = "0x2000151")]
public class FeedbackWord : MonoBehaviour
{
	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D GoodTex;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D BadTex;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Awesome;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color GoodColor;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color AwesomeColor;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color BadColor;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x10E43D8", Offset = "0x10E43D8", VA = "0x10E43D8")]
	public void SetFeedbackWord(FeedbackType feedback)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x10E45C8", Offset = "0x10E45C8", VA = "0x10E45C8")]
	private void Delete()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x10E471C", Offset = "0x10E471C", VA = "0x10E471C")]
	public FeedbackWord()
	{
	}
}
[Token(Token = "0x2000152")]
[ExecuteInEditMode]
public class FlashLightColor : MonoBehaviour
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color LightColor;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material Flash;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material Halo;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool FlashOn;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x10E4790", Offset = "0x10E4790", VA = "0x10E4790")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x10E4794", Offset = "0x10E4794", VA = "0x10E4794")]
	private void SetColor()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x10E4A88", Offset = "0x10E4A88", VA = "0x10E4A88")]
	public FlashLightColor()
	{
	}
}
[Token(Token = "0x2000153")]
public class FreeStyleController : MonoBehaviour
{
	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action TouchInstrument;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ColliderArea> StringColliders;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Chord> Tier0Chords;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Chord> Tier1Chords;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Chord> Tier2Chords;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Chord> Tier3Chords;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ChordNotePrefab;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<InstrumentHitArea> InstrumentHits;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<AudioSource> stringAudios;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<SpriteRenderer> stringSprites;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioMixerGroup audioGroup;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource audioSource;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<FingerType> defaultHandPose;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GuitarHandPoseRecognitionManager HandPoseRecognition;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GuitarGameManager guitarGameManager;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x10E4A98", Offset = "0x10E4A98", VA = "0x10E4A98")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x10E51FC", Offset = "0x10E51FC", VA = "0x10E51FC")]
	private void GameManager_SongFinished()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x10E5220", Offset = "0x10E5220", VA = "0x10E5220")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x10E5244", Offset = "0x10E5244", VA = "0x10E5244")]
	private void Item_TriggerEnters(ColliderArea stringCollider, Collider other)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x10E5694", Offset = "0x10E5694", VA = "0x10E5694")]
	private List<AudioClip> FindChord(int tier, List<FingerType> fingers)
	{
		return null;
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x10E58D0", Offset = "0x10E58D0", VA = "0x10E58D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x10E5C5C", Offset = "0x10E5C5C", VA = "0x10E5C5C")]
	public FreeStyleController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000156")]
public class ChordDefinition
{
	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string Name;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<AudioClip> stringAudios;

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x10E5E04", Offset = "0x10E5E04", VA = "0x10E5E04")]
	public ChordDefinition()
	{
	}
}
[Serializable]
[Token(Token = "0x2000157")]
public class Chord
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string Name;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<FingerType> Fingers;

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x10E5E0C", Offset = "0x10E5E0C", VA = "0x10E5E0C")]
	public Chord()
	{
	}
}
[Token(Token = "0x2000158")]
public class FretArea : InstrumentHitArea
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public ParticleSystem IndexPS;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public ParticleSystem MiddlePS;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public ParticleSystem RingPS;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public ParticleSystem PinkyPS;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public ParticleSystem ExtraPointsParticles;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public ParticleMagnets ParticleMagnets;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public HandPoseIndicatorController HandPoseIndicator;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public GuitarManipulationController GuitarController;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	private List<Color> durationColors;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	private AudioSource virtuosoAudio;

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x10E5E14", Offset = "0x10E5E14", VA = "0x10E5E14", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x10E5E9C", Offset = "0x10E5E9C", VA = "0x10E5E9C", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x10E6148", Offset = "0x10E6148", VA = "0x10E6148", Slot = "7")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x10E61F0", Offset = "0x10E61F0", VA = "0x10E61F0")]
	public void AddDurationFeedack(TierNoteBase note)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x10E6EC8", Offset = "0x10E6EC8", VA = "0x10E6EC8")]
	public Color GetFingerColorFromt()
	{
		return default(Color);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x10E70A0", Offset = "0x10E70A0", VA = "0x10E70A0")]
	public void EmitExtraPointParticles(int amount, Transform target)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x10E7160", Offset = "0x10E7160", VA = "0x10E7160", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x10E743C", Offset = "0x10E743C", VA = "0x10E743C")]
	public FretArea()
	{
	}
}
[Token(Token = "0x2000159")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	[CompilerGenerated]
	private sealed class <SongFinishCoroutine>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Delay;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600074A")]
			[Address(RVA = "0x10E9D20", Offset = "0x10E9D20", VA = "0x10E9D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0x10E9D68", Offset = "0x10E9D68", VA = "0x10E9D68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x10E9700", Offset = "0x10E9700", VA = "0x10E9700")]
		[DebuggerHidden]
		public <SongFinishCoroutine>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x10E9BF0", Offset = "0x10E9BF0", VA = "0x10E9BF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x10E9BF4", Offset = "0x10E9BF4", VA = "0x10E9BF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x10E9D28", Offset = "0x10E9D28", VA = "0x10E9D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200015B")]
	[CompilerGenerated]
	private struct <SetCurrentSongAsync>d__80 : IAsyncStateMachine
	{
		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongMappingMetaData song;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter<SongMapping> <>u__1;

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x10E9D70", Offset = "0x10E9D70", VA = "0x10E9D70", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x10E9FB0", Offset = "0x10E9FB0", VA = "0x10E9FB0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x200015C")]
	[CompilerGenerated]
	private sealed class <CounterSecondsSucess>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Seconds;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0x10EA080", Offset = "0x10EA080", VA = "0x10EA080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000754")]
			[Address(RVA = "0x10EA0C8", Offset = "0x10EA0C8", VA = "0x10EA0C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x10E99E8", Offset = "0x10E99E8", VA = "0x10E99E8")]
		[DebuggerHidden]
		public <CounterSecondsSucess>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x10E9FBC", Offset = "0x10E9FBC", VA = "0x10E9FBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x10E9FC0", Offset = "0x10E9FC0", VA = "0x10E9FC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x10EA088", Offset = "0x10EA088", VA = "0x10EA088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SongFile;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isChallenge;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool IsInForgivingTime;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool SongHasFinished;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float StartSongPercent;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InstrumentGameManagerBase instrumentGameManagerBase;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PreparationSpace preparationSpace;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<KeyTime> KeysToPlay;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<KeyTime> ActiveKeys;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float StartDelay;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Mp3Player musicPlayer;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SongMapping CurrentSong;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SongMappingMetaData selectedSong;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Task loadingSongTask;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TimelineManager timelineManager;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static GameManager I;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static bool IsPlaying;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool IsOutOfTuneBulletTime;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[HideInInspector]
	public bool IsPowerUpBulletTime;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private ObscuredFloat playerLife;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ScoreManager scoreManager;

	[Token(Token = "0x17000083")]
	public static float SongTime
	{
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x10E7444", Offset = "0x10E7444", VA = "0x10E7444")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000084")]
	public bool PlayerWins
	{
		[Token(Token = "0x600070B")]
		[Address(RVA = "0x10DC350", Offset = "0x10DC350", VA = "0x10DC350")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000085")]
	public float SongDuration
	{
		[Token(Token = "0x600070C")]
		[Address(RVA = "0x10E74CC", Offset = "0x10E74CC", VA = "0x10E74CC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000086")]
	public float PlayerLife
	{
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x10D7CB0", Offset = "0x10D7CB0", VA = "0x10D7CB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x10E8D70", Offset = "0x10E8D70", VA = "0x10E8D70")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public static SongMappingMetaData CurrentSongData
	{
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x10E9728", Offset = "0x10E9728", VA = "0x10E9728")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x10DED00", Offset = "0x10DED00", VA = "0x10DED00")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public TimelineManager TimelineManager
	{
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x10D902C", Offset = "0x10D902C", VA = "0x10D902C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x10E995C", Offset = "0x10E995C", VA = "0x10E995C")]
		set
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public static event Action<SongMapping> SongLoaded
	{
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x10E75DC", Offset = "0x10E75DC", VA = "0x10E75DC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600070E")]
		[Address(RVA = "0x10E76AC", Offset = "0x10E76AC", VA = "0x10E76AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public static event Action SongRestarted
	{
		[Token(Token = "0x600070F")]
		[Address(RVA = "0x10E777C", Offset = "0x10E777C", VA = "0x10E777C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000710")]
		[Address(RVA = "0x10E7838", Offset = "0x10E7838", VA = "0x10E7838")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public static event Action SongStarted
	{
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x10D6EF0", Offset = "0x10D6EF0", VA = "0x10D6EF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x10D73B0", Offset = "0x10D73B0", VA = "0x10D73B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public static event Action SongFinished
	{
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x10D705C", Offset = "0x10D705C", VA = "0x10D705C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000714")]
		[Address(RVA = "0x10D746C", Offset = "0x10D746C", VA = "0x10D746C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public static event Action SongPaused
	{
		[Token(Token = "0x6000715")]
		[Address(RVA = "0x10E78F4", Offset = "0x10E78F4", VA = "0x10E78F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x10E79B0", Offset = "0x10E79B0", VA = "0x10E79B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000034")]
	public static event Action SongResumed
	{
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x10E7A6C", Offset = "0x10E7A6C", VA = "0x10E7A6C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x10E7B28", Offset = "0x10E7B28", VA = "0x10E7B28")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000035")]
	public static event Action FinishTutorial
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x10E7BE4", Offset = "0x10E7BE4", VA = "0x10E7BE4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x10E7CA0", Offset = "0x10E7CA0", VA = "0x10E7CA0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000036")]
	public static event Action SongInitialized
	{
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x10E7D5C", Offset = "0x10E7D5C", VA = "0x10E7D5C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x10E7E18", Offset = "0x10E7E18", VA = "0x10E7E18")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000037")]
	public event Action<float> PlayerLifeChanged
	{
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x10D6FAC", Offset = "0x10D6FAC", VA = "0x10D6FAC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x10D7528", Offset = "0x10D7528", VA = "0x10D7528")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000038")]
	public static event Action GameEnded
	{
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x10D9FF0", Offset = "0x10D9FF0", VA = "0x10D9FF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x10DA398", Offset = "0x10DA398", VA = "0x10DA398")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x10E7ED4", Offset = "0x10E7ED4", VA = "0x10E7ED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x10E8018", Offset = "0x10E8018", VA = "0x10E8018")]
	private void Start()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x10E85E8", Offset = "0x10E85E8", VA = "0x10E85E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x10E866C", Offset = "0x10E866C", VA = "0x10E866C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x10E7448", Offset = "0x10E7448", VA = "0x10E7448")]
	private static float GetSongTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x10E8A64", Offset = "0x10E8A64", VA = "0x10E8A64")]
	private void ThrowManager_OnPlayerHit()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x10E8AC4", Offset = "0x10E8AC4", VA = "0x10E8AC4")]
	private void InstrumentGameManagerBase_NotePlayed(KeyTime key, FeedbackType feedback)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x10E8E60", Offset = "0x10E8E60", VA = "0x10E8E60")]
	public void StartSong()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x10E7F38", Offset = "0x10E7F38", VA = "0x10E7F38")]
	private static void SaveGame()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x10E93A4", Offset = "0x10E93A4", VA = "0x10E93A4")]
	public void StopSong()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x10E93E0", Offset = "0x10E93E0", VA = "0x10E93E0")]
	public void PauseSong()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x10E9468", Offset = "0x10E9468", VA = "0x10E9468")]
	public void PlaySong()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x10E908C", Offset = "0x10E908C", VA = "0x10E908C")]
	public void RestartGameParameters()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x10E9504", Offset = "0x10E9504", VA = "0x10E9504")]
	public void RestartSong()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x10D7D00", Offset = "0x10D7D00", VA = "0x10D7D00")]
	public void EndSong()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x10E95A0", Offset = "0x10E95A0", VA = "0x10E95A0")]
	private void Finish()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x10E967C", Offset = "0x10E967C", VA = "0x10E967C")]
	[IteratorStateMachine(typeof(<SongFinishCoroutine>d__73))]
	private IEnumerator SongFinishCoroutine(float Delay)
	{
		return null;
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x10E9870", Offset = "0x10E9870", VA = "0x10E9870")]
	[AsyncStateMachine(typeof(<SetCurrentSongAsync>d__80))]
	public static Task SetCurrentSongAsync(SongMappingMetaData song)
	{
		return null;
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x10E9770", Offset = "0x10E9770", VA = "0x10E9770")]
	public static void SetCurrentSong(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x10D84D8", Offset = "0x10D84D8", VA = "0x10D84D8")]
	public void AddForgivingTime(float SecondsSucess)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x10E9964", Offset = "0x10E9964", VA = "0x10E9964")]
	[IteratorStateMachine(typeof(<CounterSecondsSucess>d__86))]
	private IEnumerator CounterSecondsSucess(float Seconds)
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x10E91D4", Offset = "0x10E91D4", VA = "0x10E91D4")]
	public void SaveLastSongPlayed()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x10E9A10", Offset = "0x10E9A10", VA = "0x10E9A10")]
	private void VRPlatformManager_VRUnMounted()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x10E9AA4", Offset = "0x10E9AA4", VA = "0x10E9AA4")]
	private void VRPlatformManager_OculusGesture()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x10E9AA8", Offset = "0x10E9AA8", VA = "0x10E9AA8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x10E9A14", Offset = "0x10E9A14", VA = "0x10E9A14")]
	private void GameManagerPause()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x10E9AAC", Offset = "0x10E9AAC", VA = "0x10E9AAC")]
	private void OutOfTuneManager_OnOutOfTuneExitSlowmo()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x10E9ADC", Offset = "0x10E9ADC", VA = "0x10E9ADC")]
	private void OutOfTuneManager_OnOutOfTuneEnterSlowmo()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x10E9AE8", Offset = "0x10E9AE8", VA = "0x10E9AE8")]
	private void PowerUp_OnPowerUpEnded(PowerUp obj)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x10E9B60", Offset = "0x10E9B60", VA = "0x10E9B60")]
	private void PowerUp_OnUsePowerUp(PowerUp obj)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x10E9BDC", Offset = "0x10E9BDC", VA = "0x10E9BDC")]
	public GameManager()
	{
	}
}
[Token(Token = "0x200015E")]
public class GamePlaySpace : GameScene
{
	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TexturePreCatcher TextureLoader;

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x10EA1AC", Offset = "0x10EA1AC", VA = "0x10EA1AC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x10EA290", Offset = "0x10EA290", VA = "0x10EA290")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x10EA364", Offset = "0x10EA364", VA = "0x10EA364")]
	private void TextureLoader_Loaded()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x10EA374", Offset = "0x10EA374", VA = "0x10EA374")]
	public void Start()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x10EA378", Offset = "0x10EA378", VA = "0x10EA378")]
	public GamePlaySpace()
	{
	}
}
[Token(Token = "0x200015F")]
[DefaultExecutionOrder(-1000)]
public class GameScene : MonoBehaviour
{
	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ShowBoundary;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float BoundaryLimit;

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x10EA288", Offset = "0x10EA288", VA = "0x10EA288", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x10EA398", Offset = "0x10EA398", VA = "0x10EA398", Slot = "5")]
	public virtual void EnterScene()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x10EA39C", Offset = "0x10EA39C", VA = "0x10EA39C", Slot = "6")]
	public virtual void ExitScene()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x10EA388", Offset = "0x10EA388", VA = "0x10EA388")]
	public GameScene()
	{
	}
}
[Token(Token = "0x2000160")]
public class GuitarControllerNoteController : NoteController
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform DurationNote;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> VisibleElements;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject InivisibleElement;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Transform> DurationBones;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer DurationRenderer;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer NoteRenderer;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material RotationNote;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material NonRotationNote;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator animator;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool IsVisible;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool revealed;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<bool> currentButtons;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MaterialPropertyBlock notePropertyBlock;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 NoteRotationUpScale;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 NoteRotationDownScale;

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x10EA3A0", Offset = "0x10EA3A0", VA = "0x10EA3A0", Slot = "12")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x10EA4B0", Offset = "0x10EA4B0", VA = "0x10EA4B0")]
	private void CheckIfNoteIsRotationEnabled()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x10EA520", Offset = "0x10EA520", VA = "0x10EA520", Slot = "4")]
	public override void Initialize(KeyTime note)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x10EA5BC", Offset = "0x10EA5BC", VA = "0x10EA5BC", Slot = "13")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x10EA9D4", Offset = "0x10EA9D4", VA = "0x10EA9D4", Slot = "14")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x10EAB40", Offset = "0x10EAB40", VA = "0x10EAB40")]
	private void DestroyWithAnimation()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x10EAB68", Offset = "0x10EAB68", VA = "0x10EAB68")]
	private void SetVisible()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x10EAE0C", Offset = "0x10EAE0C", VA = "0x10EAE0C", Slot = "15")]
	public virtual void SetMaterialInvisible(bool invisible)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x10EA854", Offset = "0x10EA854", VA = "0x10EA854")]
	private void SetInvisible()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x10EAEB4", Offset = "0x10EAEB4", VA = "0x10EAEB4", Slot = "7")]
	public override void SetDurationEnter()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x10EAF0C", Offset = "0x10EAF0C", VA = "0x10EAF0C", Slot = "5")]
	public override void SetFail()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x10EAF64", Offset = "0x10EAF64", VA = "0x10EAF64", Slot = "6")]
	public override void DestroyNote()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x10EB00C", Offset = "0x10EB00C", VA = "0x10EB00C", Slot = "9")]
	public override void SetAligment(Vector3 forward, Vector3 up)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x10EB130", Offset = "0x10EB130", VA = "0x10EB130", Slot = "10")]
	public override void SetPosition(StringLine line)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x10EB1A0", Offset = "0x10EB1A0", VA = "0x10EB1A0", Slot = "8")]
	public override void SetActive()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x10EB1F8", Offset = "0x10EB1F8", VA = "0x10EB1F8")]
	public void RevealBlindNote()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x10EB378", Offset = "0x10EB378", VA = "0x10EB378", Slot = "11")]
	public override void SetDuration(float relativeDuration, StringLine stringLine)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x10EB55C", Offset = "0x10EB55C", VA = "0x10EB55C", Slot = "16")]
	public virtual void SetFingers(List<bool> buttons, int rotation)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x10EB748", Offset = "0x10EB748", VA = "0x10EB748", Slot = "17")]
	public virtual void SetFingers(bool triggerActive, bool gripActive, int rotation)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x10EB8F8", Offset = "0x10EB8F8", VA = "0x10EB8F8")]
	public GuitarControllerNoteController()
	{
	}
}
[Token(Token = "0x2000161")]
public class GuitarGameManager : InstrumentGameManagerBase
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TimeUntilNextNote;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<FretArea> Frets;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FretArea SelectedFret;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CursedNoteManager cursedNoteManager;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OutOfTuneManager outOfTuneManager;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GuitarScratcher guitarScratcher;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GuitarHandPoseRecognitionManager HandPoseRecognition;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool InVibratoNote;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float CurrentAssistedStummingTime;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float AssistedStrummingTime;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private FretArea durableNoteInitialFret;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TierNoteBase currentVibratoNote;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TierNoteBase lastSuccessedNote;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsControllerRotationEnabled;

	[Token(Token = "0x14000039")]
	public event Action OnInitialized
	{
		[Token(Token = "0x6000775")]
		[Address(RVA = "0x10EB968", Offset = "0x10EB968", VA = "0x10EB968")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x10EBA04", Offset = "0x10EBA04", VA = "0x10EBA04")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003A")]
	public static event Action<bool> OnControllerRotationEnabledChanged
	{
		[Token(Token = "0x6000777")]
		[Address(RVA = "0x10EBAA0", Offset = "0x10EBAA0", VA = "0x10EBAA0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x10EBB70", Offset = "0x10EBB70", VA = "0x10EBB70")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x10EBC40", Offset = "0x10EBC40", VA = "0x10EBC40", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x10EC47C", Offset = "0x10EC47C", VA = "0x10EC47C")]
	private void GuitarScratcher_Strummed(object sender, bool isStrummingUp)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x10ECA9C", Offset = "0x10ECA9C", VA = "0x10ECA9C")]
	private void GuitarTimeLine_TimeChanged(float obj)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x10ECE4C", Offset = "0x10ECE4C", VA = "0x10ECE4C")]
	private void GameManager_SongFinished()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x10ECE68", Offset = "0x10ECE68", VA = "0x10ECE68")]
	private void GameManager_SongStartedAndRestarted()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x10EC290", Offset = "0x10EC290", VA = "0x10EC290")]
	private void CheckRotationDialVisibility()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x10ECEC0", Offset = "0x10ECEC0", VA = "0x10ECEC0", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x10ED9D8", Offset = "0x10ED9D8", VA = "0x10ED9D8", Slot = "7")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x10ED0B4", Offset = "0x10ED0B4", VA = "0x10ED0B4")]
	private void CheckDurableNote()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x10EDC9C", Offset = "0x10EDC9C", VA = "0x10EDC9C")]
	private FeedbackType GetVirtuosoFeedback()
	{
		return default(FeedbackType);
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x10EC488", Offset = "0x10EC488", VA = "0x10EC488")]
	private void ProcessStrumming(object sender)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x10EDE40", Offset = "0x10EDE40", VA = "0x10EDE40")]
	private void SetCurrentVibratoNote(TierNoteBase closerTierNote)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x10ECAFC", Offset = "0x10ECAFC", VA = "0x10ECAFC")]
	private void CheckPullOfffNote(IPullOff pullOffNote)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x10EDF80", Offset = "0x10EDF80", VA = "0x10EDF80")]
	private void OnKeyInteractionTimeExits(KeyTime key)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x10EE154", Offset = "0x10EE154", VA = "0x10EE154")]
	private void GameManager_SongPaused()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x10EE1B4", Offset = "0x10EE1B4", VA = "0x10EE1B4")]
	public GuitarGameManager()
	{
	}
}
[Token(Token = "0x2000163")]
public class GuitarManipulationController : MonoBehaviour
{
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform HandHandler;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GuitarHandPoseRecognitionManager HandPoseRecognition;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform GuitarTransform;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractableObject guitarNeck;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform GrabGuitarMsg;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float GuitarAnimationAngularVelocity;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float GuitarDroppedTime;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxDistanceFromHandToCentreNeck;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoxCollider FretFingerCollider;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform playerSpace;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GuitarNeckHandsController guitarNeckHandsController;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform handPivot;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 InitialPosition;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion droppedGuitarRotation;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float guitarRotationVelocity;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x10EE3CC", Offset = "0x10EE3CC", VA = "0x10EE3CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x10EE6C4", Offset = "0x10EE6C4", VA = "0x10EE6C4")]
	private void VRPlatformBase_InputControllerChanged(VRInteractionType obj)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x10EE6E0", Offset = "0x10EE6E0", VA = "0x10EE6E0")]
	private void InteractionSystem_HandDominanceChanged()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x10EE6FC", Offset = "0x10EE6FC", VA = "0x10EE6FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x10EE91C", Offset = "0x10EE91C", VA = "0x10EE91C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x10EF190", Offset = "0x10EF190", VA = "0x10EF190")]
	private void GuitarNeck_Dropped(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x10EF2D4", Offset = "0x10EF2D4", VA = "0x10EF2D4")]
	private void GuitarNeck_Grabbed(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x10EF378", Offset = "0x10EF378", VA = "0x10EF378")]
	private void GameManager_SongFinished()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x10EF3B8", Offset = "0x10EF3B8", VA = "0x10EF3B8")]
	public GuitarManipulationController()
	{
	}
}
[Token(Token = "0x2000164")]
public class GuitarNoteController : NoteController
{
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform DurationNote;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> VisibleElements;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject InivisibleElement;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<TierFinger> AllFingers;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Transform> DurationBones;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer DurationRenderer;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer NoteRenderer;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material ColorBlindMaterial;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material NormalMaterial;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<TierFinger> currentFingers;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool IsVisible;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool revealed;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MaterialPropertyBlock notePropertyBlock;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x10EF3C0", Offset = "0x10EF3C0", VA = "0x10EF3C0", Slot = "12")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x10EF570", Offset = "0x10EF570", VA = "0x10EF570")]
	private void SettingsController_ColorBlindModeChanged(bool obj)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x10EF528", Offset = "0x10EF528", VA = "0x10EF528")]
	public void CheckBlindNoteMode()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x10EF574", Offset = "0x10EF574", VA = "0x10EF574", Slot = "4")]
	public override void Initialize(KeyTime note)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x10EF5F4", Offset = "0x10EF5F4", VA = "0x10EF5F4", Slot = "13")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x10EF9E4", Offset = "0x10EF9E4", VA = "0x10EF9E4", Slot = "14")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x10EFBB4", Offset = "0x10EFBB4", VA = "0x10EFBB4")]
	private void DestroyWithAnimation()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x10EFBDC", Offset = "0x10EFBDC", VA = "0x10EFBDC")]
	private void SetVisible()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x10EFE28", Offset = "0x10EFE28", VA = "0x10EFE28", Slot = "15")]
	public virtual void SetMaterialInvisible(bool invisible)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x10EF864", Offset = "0x10EF864", VA = "0x10EF864")]
	private void SetInvisible()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x10EFED0", Offset = "0x10EFED0", VA = "0x10EFED0", Slot = "7")]
	public override void SetDurationEnter()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x10EFF28", Offset = "0x10EFF28", VA = "0x10EFF28", Slot = "5")]
	public override void SetFail()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x10EFF80", Offset = "0x10EFF80", VA = "0x10EFF80", Slot = "6")]
	public override void DestroyNote()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x10F0028", Offset = "0x10F0028", VA = "0x10F0028", Slot = "9")]
	public override void SetAligment(Vector3 forward, Vector3 up)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x10F014C", Offset = "0x10F014C", VA = "0x10F014C", Slot = "10")]
	public override void SetPosition(StringLine line)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x10F01BC", Offset = "0x10F01BC", VA = "0x10F01BC", Slot = "8")]
	public override void SetActive()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x10F0214", Offset = "0x10F0214", VA = "0x10F0214")]
	public void RevealBlindNote()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x10F0390", Offset = "0x10F0390", VA = "0x10F0390", Slot = "11")]
	public override void SetDuration(float relativeDuration, StringLine stringLine)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x10F0574", Offset = "0x10F0574", VA = "0x10F0574", Slot = "16")]
	public virtual void SetFingers(List<TierFinger> fingers)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x10F0724", Offset = "0x10F0724", VA = "0x10F0724")]
	private void SetFinger(TierFinger finger, bool Close)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x10F0848", Offset = "0x10F0848", VA = "0x10F0848")]
	public GuitarNoteController()
	{
	}
}
[Token(Token = "0x2000165")]
public class GuitarPlaterSpaceController : PlaterSpaceController
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public InteractableObject guitarPositionHandler;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GuitarManipulationController guitarManipulationController;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject controllerRotationIndicatorGO;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GuitarData CurrentGuitar;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 initialHandPosition;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 initialHandlerPosition;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 TargetPosition;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 FirstTargetGuitarPosition;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 guitarAdjustedPosition;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Plane HeadPlane;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource guitarGrabberAudio;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float MoveVelocity;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GuitarModelController currentGuitarModel;

	[Token(Token = "0x1700008D")]
	public static GuitarPlaterSpaceController Current
	{
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x10F0AE4", Offset = "0x10F0AE4", VA = "0x10F0AE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400003B")]
	public static event Action<GuitarModelController> GuitarChanged
	{
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x10F0B74", Offset = "0x10F0B74", VA = "0x10F0B74")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x10F0C40", Offset = "0x10F0C40", VA = "0x10F0C40")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x10F0D0C", Offset = "0x10F0D0C", VA = "0x10F0D0C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x10F1318", Offset = "0x10F1318", VA = "0x10F1318", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x10F1BC0", Offset = "0x10F1BC0", VA = "0x10F1BC0")]
	private void GuitarGameManager_OnControllerRotationEnabledChanged(bool obj)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x10F1BC4", Offset = "0x10F1BC4", VA = "0x10F1BC4")]
	private void VRPlatformBase_InputControllerChanged(VRInteractionType obj)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x10F1B14", Offset = "0x10F1B14", VA = "0x10F1B14")]
	public void CheckControllerRotationIndicator()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x10F19F8", Offset = "0x10F19F8", VA = "0x10F19F8")]
	public void CheckGuitarIsReachable()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x10F18C0", Offset = "0x10F18C0", VA = "0x10F18C0")]
	private void MoveGuitarToSavedPosition()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x10F0E08", Offset = "0x10F0E08", VA = "0x10F0E08")]
	public GuitarModelController SetGuitar(GuitarData guitar)
	{
		return null;
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x10F1BC8", Offset = "0x10F1BC8", VA = "0x10F1BC8", Slot = "8")]
	public override void DropInstrument()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x10F1BEC", Offset = "0x10F1BEC", VA = "0x10F1BEC")]
	public GuitarModelController GetCurrentGuitarModel()
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x10F1CA4", Offset = "0x10F1CA4", VA = "0x10F1CA4")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x10F1D5C", Offset = "0x10F1D5C", VA = "0x10F1D5C", Slot = "9")]
	public override void ResetPositiontoInitialPosition()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x10F1DD8", Offset = "0x10F1DD8", VA = "0x10F1DD8", Slot = "7")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x10F210C", Offset = "0x10F210C", VA = "0x10F210C")]
	private void GuitarPositionHandler_Dropped(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x10F226C", Offset = "0x10F226C", VA = "0x10F226C", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x10F27A4", Offset = "0x10F27A4", VA = "0x10F27A4")]
	private void GuitarPositionHandler_GrabUpdate(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x10F2808", Offset = "0x10F2808", VA = "0x10F2808")]
	private void GuitarPositionHandler_Grabbed(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x10F2874", Offset = "0x10F2874", VA = "0x10F2874")]
	public GuitarPlaterSpaceController()
	{
	}
}
[Token(Token = "0x2000166")]
public class GuitarScratcher : MonoBehaviour
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StrongStumVelocity;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject GuitarWaveNeckPrefab;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GuitarShockWavePrefab;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject GuitarNormalWavePrefab;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform GuitarShockWaveAnchor;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform GuitarWaveNeckAnchor;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<ParticleSystem> particles;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Pick;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material StringEffectMaterial;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 initialOffset;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float stringEffectOpacity;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color EffectColor;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color SuccessColor;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color FailColor;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool IsStrummingUp;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Queue<GuitarWaveController> guitarWaveNeckPool;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Queue<GuitarWaveController> guitarNormalWavePool;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<GuitarWaveController> guitarShockWavePool;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private int NumberOfWavesInPool;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private ParticleSystem.EmitParams p;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Color currentEffectColor;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float lastScratchedTime;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float autoScratchTime;

	[Token(Token = "0x1700008E")]
	public static bool IsScratched
	{
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x10F29F4", Offset = "0x10F29F4", VA = "0x10F29F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	public bool StrummingIsReady
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x10F2A44", Offset = "0x10F2A44", VA = "0x10F2A44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400003C")]
	public static event StrummedHandler Strummed
	{
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x10F2884", Offset = "0x10F2884", VA = "0x10F2884")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x10F293C", Offset = "0x10F293C", VA = "0x10F293C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x10F2B30", Offset = "0x10F2B30", VA = "0x10F2B30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x10F30F8", Offset = "0x10F30F8", VA = "0x10F30F8")]
	private void ScrachArea_ScratchedVisual(ScratchingArea obj)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x10F351C", Offset = "0x10F351C", VA = "0x10F351C")]
	private void GuitarGameManager_NotePlayed(KeyTime note, FeedbackType feedback)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x10F3614", Offset = "0x10F3614", VA = "0x10F3614")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x10F3744", Offset = "0x10F3744", VA = "0x10F3744")]
	private void ScratchArea1_Scratched(object sender, bool isStrummingUp)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x10F389C", Offset = "0x10F389C", VA = "0x10F389C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x10F2E7C", Offset = "0x10F2E7C", VA = "0x10F2E7C")]
	private void InitializeWavePools()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x10F3B8C", Offset = "0x10F3B8C", VA = "0x10F3B8C")]
	private GameObject GetNextElementInPool(Queue<GuitarWaveController> queue)
	{
		return null;
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x10F3148", Offset = "0x10F3148", VA = "0x10F3148")]
	private void RaiseScratchedVisual()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x10F3814", Offset = "0x10F3814", VA = "0x10F3814")]
	public void RaiseScratched(bool isStrummingUp)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x10F3C1C", Offset = "0x10F3C1C", VA = "0x10F3C1C")]
	public GuitarScratcher()
	{
	}
}
[Token(Token = "0x2000168")]
public class HandLightingBehaviour : MonoBehaviour
{
	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<LighteningBezierScript> Lightings;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject HandElectric;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 target;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 leftSmoothTarget;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CrowdHeart closerLeft;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HornsHandGesture hornsGesture;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool IsLefty;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InteractiveHand hand;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource audioSource;

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x10F3F3C", Offset = "0x10F3F3C", VA = "0x10F3F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x10F429C", Offset = "0x10F429C", VA = "0x10F429C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x10F43CC", Offset = "0x10F43CC", VA = "0x10F43CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x10F4450", Offset = "0x10F4450", VA = "0x10F4450")]
	private void GameManager_SongPaused()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x10F44E8", Offset = "0x10F44E8", VA = "0x10F44E8")]
	private void GameManager_SongResumed()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x10F4458", Offset = "0x10F4458", VA = "0x10F4458")]
	private void SetChildsActiveState(bool active)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x10F44F0", Offset = "0x10F44F0", VA = "0x10F44F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x10F4AF8", Offset = "0x10F4AF8", VA = "0x10F4AF8")]
	private float DistanceX(Vector3 point, Vector3 point2)
	{
		return default(float);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x10F4B00", Offset = "0x10F4B00", VA = "0x10F4B00")]
	public HandLightingBehaviour()
	{
	}
}
[Token(Token = "0x2000169")]
public class HelperBubble : MonoBehaviour
{
	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Anchor;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform circle;

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x10F4B08", Offset = "0x10F4B08", VA = "0x10F4B08")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x10F4BA8", Offset = "0x10F4BA8", VA = "0x10F4BA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x10F4BE0", Offset = "0x10F4BE0", VA = "0x10F4BE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x10F4E60", Offset = "0x10F4E60", VA = "0x10F4E60")]
	public HelperBubble()
	{
	}
}
[Token(Token = "0x200016A")]
public abstract class InstrumentGameManagerBase : MonoBehaviour
{
	[Token(Token = "0x200016B")]
	public delegate void NotePlayedHandler(KeyTime note, FeedbackType feedback);

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StringsVisualsController stringsVisualsController;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<StringManager> Strings;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameTimeline gameTimeLine;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float InstrumentVolumeSmooth;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float InstrumentVolumeTarget;

	[Token(Token = "0x17000090")]
	public bool ForceSucessNote
	{
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x10F4E68", Offset = "0x10F4E68", VA = "0x10F4E68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400003D")]
	public static event NotePlayedHandler NotePlayed
	{
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x10F2DC4", Offset = "0x10F2DC4", VA = "0x10F2DC4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x10F368C", Offset = "0x10F368C", VA = "0x10F368C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x10F4F2C", Offset = "0x10F4F2C", VA = "0x10F4F2C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x10F4F30", Offset = "0x10F4F30", VA = "0x10F4F30", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x10F50CC", Offset = "0x10F50CC", VA = "0x10F50CC")]
	private void InstrumentGameManagerBase_NotePlayed(KeyTime note, FeedbackType feedback)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x10F5104", Offset = "0x10F5104", VA = "0x10F5104", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x10F52E0", Offset = "0x10F52E0", VA = "0x10F52E0", Slot = "7")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x10F53DC", Offset = "0x10F53DC", VA = "0x10F53DC", Slot = "8")]
	public virtual void SecondaryHand_TrackingTooWeak()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x10F54AC", Offset = "0x10F54AC", VA = "0x10F54AC")]
	public static FeedbackType GetFeedbackFromOffsetTime(float offsetTime)
	{
		return default(FeedbackType);
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x10F5540", Offset = "0x10F5540", VA = "0x10F5540", Slot = "9")]
	public virtual void InstrumentGameStarts(MiniGame game)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x10F5564", Offset = "0x10F5564", VA = "0x10F5564", Slot = "10")]
	public virtual void InstrumentGameEnds(MiniGame game)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x10F5588", Offset = "0x10F5588", VA = "0x10F5588")]
	protected void NotePlayedHandlerInvoke(KeyTime note, FeedbackType feedback)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x10F5608", Offset = "0x10F5608", VA = "0x10F5608")]
	protected InstrumentGameManagerBase()
	{
	}
}
[Token(Token = "0x200016C")]
public class InstrumentHitArea : MonoBehaviour
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color FeedbackGoodColor;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color FeedbackAwesomeColor;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color FeedbackPoorColor;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color FeedbackFailColor;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color SelectedFretFXColor;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool IsSelected;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int Tier;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Renderer SelectedInstrumentHitFx;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Renderer Effect;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public StringManager stringMng;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem GoodParticles;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem BadParticles;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject FeedbackWordPrefab;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TweenerCore<Color, Color, ColorOptions> doTweenInstrumentHitColor;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TweenerCore<Color, Color, ColorOptions> doTweenInstrumentHitToBlack;

	[NonSerialized]
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem.EmitParams defaultParticleParams;

	[NonSerialized]
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public ParticleSystem.EmitParams goodParticleParams;

	[NonSerialized]
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public ParticleSystem.EmitParams badParticleParams;

	[NonSerialized]
	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public ParticleSystem.EmitParams awesomeParticleParams;

	[NonSerialized]
	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public ParticleSystem.EmitParams poorParticleParams;

	[NonSerialized]
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public ParticleSystem.EmitParams durationParticleParams;

	[Token(Token = "0x1400003E")]
	public static event Action<float, TierNoteBase> Fail
	{
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x10F56CC", Offset = "0x10F56CC", VA = "0x10F56CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x10F5798", Offset = "0x10F5798", VA = "0x10F5798")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x10F5864", Offset = "0x10F5864", VA = "0x10F5864", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x10F5868", Offset = "0x10F5868", VA = "0x10F5868", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x10F61F8", Offset = "0x10F61F8", VA = "0x10F61F8", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x10F61FC", Offset = "0x10F61FC", VA = "0x10F61FC", Slot = "7")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x10F6200", Offset = "0x10F6200", VA = "0x10F6200", Slot = "8")]
	public virtual void SetEffect()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x10F6204", Offset = "0x10F6204", VA = "0x10F6204", Slot = "9")]
	public virtual void SetFeedback(FeedbackType type)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x10F67CC", Offset = "0x10F67CC", VA = "0x10F67CC")]
	public InstrumentHitArea()
	{
	}
}
[Token(Token = "0x200016D")]
public enum FeedbackType
{
	[Token(Token = "0x4000804")]
	Awesome,
	[Token(Token = "0x4000805")]
	Good,
	[Token(Token = "0x4000806")]
	Poor,
	[Token(Token = "0x4000807")]
	Bad,
	[Token(Token = "0x4000808")]
	Electric,
	[Token(Token = "0x4000809")]
	UsingPower,
	[Token(Token = "0x400080A")]
	None
}
[Token(Token = "0x200016E")]
public class InstrumentSelectionController : MonoBehaviour
{
	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PressableButton NextButtton;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PressableButton PrevButton;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro backLabel;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve scaleCurve;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxDistance;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ScaleMultiplier;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject BarsSuperEasy;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject BarsDrum;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject BarsSign;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color unSelectedColor;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color SelectedColor;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem SelectionParticles;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ParticleSystem.EmitParams PSparams;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 initialLabelScale;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private InstrumentSelect currentInstrumentSelect;

	[Token(Token = "0x17000091")]
	public InstrumentSelect CurrentInstrumentSelect
	{
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x10F6A6C", Offset = "0x10F6A6C", VA = "0x10F6A6C")]
		get
		{
			return default(InstrumentSelect);
		}
		[Token(Token = "0x6000802")]
		[Address(RVA = "0x10F6A74", Offset = "0x10F6A74", VA = "0x10F6A74")]
		set
		{
		}
	}

	[Token(Token = "0x1400003F")]
	public event Action<InstrumentSelect> InstrumentChanged
	{
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x10F690C", Offset = "0x10F690C", VA = "0x10F690C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x10F69BC", Offset = "0x10F69BC", VA = "0x10F69BC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x10F707C", Offset = "0x10F707C", VA = "0x10F707C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x10F71CC", Offset = "0x10F71CC", VA = "0x10F71CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x10F6AC8", Offset = "0x10F6AC8", VA = "0x10F6AC8")]
	private void ChangeTypeInstrument(InstrumentSelect value)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x10F72AC", Offset = "0x10F72AC", VA = "0x10F72AC")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x10F72D0", Offset = "0x10F72D0", VA = "0x10F72D0")]
	public void PrevLevel()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x10F72F8", Offset = "0x10F72F8", VA = "0x10F72F8")]
	public float GetNormalizedDistance(Transform obj)
	{
		return default(float);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x10F75DC", Offset = "0x10F75DC", VA = "0x10F75DC")]
	public InstrumentSelectionController()
	{
	}
}
[Token(Token = "0x200016F")]
public class IntermezzoController : MonoBehaviour
{
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform targetAnchor;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntermezzoData intermezzoData;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VideoClip clip;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action OnIntermezzoEnded;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PressableButton dismissButton;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool wasClosed;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool videoEnded;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool isSkipable;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x10F7698", Offset = "0x10F7698", VA = "0x10F7698")]
	public static IntermezzoController CreateIntermezzo(IntermezzoData intermezzoData, Transform parent, [Optional] Transform anchor, [Optional] Action onComplete, bool skipable = false)
	{
		return null;
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x10F7C88", Offset = "0x10F7C88", VA = "0x10F7C88")]
	public static IntermezzoController CreateGoodRandomIntermezzo(Transform parent, [Optional] Transform anchor)
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x10F7D78", Offset = "0x10F7D78", VA = "0x10F7D78")]
	public static IntermezzoController CreateBadRandomIntermezzo(Transform parent, [Optional] Transform anchor)
	{
		return null;
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x10F7E68", Offset = "0x10F7E68", VA = "0x10F7E68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x10F802C", Offset = "0x10F802C", VA = "0x10F802C")]
	private void OnGameResumed()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x10F8048", Offset = "0x10F8048", VA = "0x10F8048")]
	private void OnGamePaused()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x10F7A68", Offset = "0x10F7A68", VA = "0x10F7A68")]
	private void Init(IntermezzoData intermezzoData, [Optional] Transform anchor, [Optional] Action onComplete, bool skipable = false)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x10F8064", Offset = "0x10F8064", VA = "0x10F8064")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x10F8308", Offset = "0x10F8308", VA = "0x10F8308")]
	private void DismissButton_Pressed()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x10F83B8", Offset = "0x10F83B8", VA = "0x10F83B8")]
	public void PlayVideo()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x10F830C", Offset = "0x10F830C", VA = "0x10F830C")]
	public void CloseVideo()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x10F8454", Offset = "0x10F8454", VA = "0x10F8454")]
	public void CloseNContinuePlayingAudio()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x10F84F0", Offset = "0x10F84F0", VA = "0x10F84F0")]
	private void VideoPlayerHasEnded(VideoPlayer source)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x10F8644", Offset = "0x10F8644", VA = "0x10F8644")]
	public void CloseAnimationEnded()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x10F86CC", Offset = "0x10F86CC", VA = "0x10F86CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x10F8924", Offset = "0x10F8924", VA = "0x10F8924")]
	public IntermezzoController()
	{
	}
}
[Token(Token = "0x2000170")]
[CreateAssetMenu(menuName = "Unplugged/Create Intermezzos")]
public class Intermezzos : ScriptableObject
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<IntermezzoData> intermezzosList;

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x10F892C", Offset = "0x10F892C", VA = "0x10F892C")]
	public Intermezzos()
	{
	}
}
[Serializable]
[Token(Token = "0x2000171")]
public class IntermezzoData
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string IntermezzoID;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Path;

	[Token(Token = "0x17000092")]
	public bool HasBeenPlayed
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x10F8934", Offset = "0x10F8934", VA = "0x10F8934")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x10F78B4", Offset = "0x10F78B4", VA = "0x10F78B4")]
		set
		{
		}
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x10F8A10", Offset = "0x10F8A10", VA = "0x10F8A10")]
	public IntermezzoData()
	{
	}
}
[Token(Token = "0x2000172")]
public class IntermezzosManager : MonoBehaviour
{
	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static IntermezzosManager I;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Intermezzos GeneralIntermezzos;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Intermezzos GoodFeedbackIntermezzos;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Intermezzos BadFeedbackIntermezzos;

	[Token(Token = "0x17000093")]
	public Intermezzos AllIntermezos
	{
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x10F8A18", Offset = "0x10F8A18", VA = "0x10F8A18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x10F8AFC", Offset = "0x10F8AFC", VA = "0x10F8AFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x10F8BDC", Offset = "0x10F8BDC", VA = "0x10F8BDC")]
	public IntermezzoData GetIntermezzoData(string id)
	{
		return null;
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x10F7CFC", Offset = "0x10F7CFC", VA = "0x10F7CFC")]
	public IntermezzoData GetRandomGoodIntermezzoData()
	{
		return null;
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x10F7DEC", Offset = "0x10F7DEC", VA = "0x10F7DEC")]
	public IntermezzoData GetRandomBadIntermezzoData()
	{
		return null;
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x10F8D10", Offset = "0x10F8D10", VA = "0x10F8D10")]
	public IntermezzosManager()
	{
	}
}
[Token(Token = "0x2000174")]
public class LightColor : MonoBehaviour
{
	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Projector projector;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color lightColor;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer render;

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x10F8D3C", Offset = "0x10F8D3C", VA = "0x10F8D3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x10F8E3C", Offset = "0x10F8E3C", VA = "0x10F8E3C")]
	public LightColor()
	{
	}
}
[Token(Token = "0x2000175")]
public class LightManager : MonoBehaviour
{
	[Token(Token = "0x2000176")]
	[CompilerGenerated]
	private sealed class <GetNextColor>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightManager <>4__this;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x10F9C8C", Offset = "0x10F9C8C", VA = "0x10F9C8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0x10F9CD4", Offset = "0x10F9CD4", VA = "0x10F9CD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x10F9814", Offset = "0x10F9814", VA = "0x10F9814")]
		[DebuggerHidden]
		public <GetNextColor>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x10F9B54", Offset = "0x10F9B54", VA = "0x10F9B54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x10F9B58", Offset = "0x10F9B58", VA = "0x10F9B58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x10F9C94", Offset = "0x10F9C94", VA = "0x10F9C94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material LightsMaterial;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material FlashLightsMaterial;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material FogMaterial;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material CrowdMaterial;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material AnimatedCrowdMaterial;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material CrowdHandsMaterial;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material CrowdHandsIKMaterial;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Light MainLight;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Color> NormalLightingColors;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color ElectricLightingColor;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Color> AwesomeLighingColors;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color PowerLighingColor;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Color> BadLightingColors;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color NoLightingColor;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LightManager I;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private FeedbackType CurrentState;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color targetColor;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Color currentColor;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Color veryDimmedCurrentColor;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Color dimmedCurrentColor;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float minColorChangeDelay;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float maxColorChangeDelay;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x10F8E44", Offset = "0x10F8E44", VA = "0x10F8E44")]
	public void Awake()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x10F97C8", Offset = "0x10F97C8", VA = "0x10F97C8")]
	private void BeerThrowManager_OnPlayerHit()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x10F9754", Offset = "0x10F9754", VA = "0x10F9754")]
	[IteratorStateMachine(typeof(<GetNextColor>d__24))]
	private IEnumerator GetNextColor()
	{
		return null;
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x10F983C", Offset = "0x10F983C", VA = "0x10F983C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x10F9934", Offset = "0x10F9934", VA = "0x10F9934")]
	private void I_PlayerStateChanged(FeedbackType obj)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x10F9938", Offset = "0x10F9938", VA = "0x10F9938")]
	private void Update()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x10F91B0", Offset = "0x10F91B0", VA = "0x10F91B0")]
	public void UpdateColor(Color nextColor, bool immediate = false)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x10F9700", Offset = "0x10F9700", VA = "0x10F9700")]
	public static void SetSpotLightSize(float size)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x10F9998", Offset = "0x10F9998", VA = "0x10F9998")]
	public static void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x10F8F9C", Offset = "0x10F8F9C", VA = "0x10F8F9C")]
	public static void SwitchOff()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x10F9A14", Offset = "0x10F9A14", VA = "0x10F9A14")]
	private Color GetColorFromState(FeedbackType feedbackType)
	{
		return default(Color);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x10F9050", Offset = "0x10F9050", VA = "0x10F9050")]
	public void SetLightingState(FeedbackType feedbackType)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x10F9AEC", Offset = "0x10F9AEC", VA = "0x10F9AEC")]
	public LightManager()
	{
	}
}
[Token(Token = "0x2000177")]
public class Metronome : MonoBehaviour
{
	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuitarGameManager guitarGameManager;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StringManager stringStart;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StringManager stringEnd;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color FarColor;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color NearColor;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve colorGradient;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 LineDrawingOffset;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<BPMKey> BPMKeys;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<BeatLine> activeBeatLines;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<BeatLine> allBeatLines;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<float> beatLinesTimes;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<LineRenderer> metronomeLinesPool;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentBeatLineIndex;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject metronomeLinePrefab;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 drawingOffset;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private float fullOpacity;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float dimmedOpacity;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x10F9CDC", Offset = "0x10F9CDC", VA = "0x10F9CDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x10F9F44", Offset = "0x10F9F44", VA = "0x10F9F44")]
	private void GameManager_SongInitialized()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x10F9F48", Offset = "0x10F9F48", VA = "0x10F9F48")]
	private void CalculateBeatLines()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x10FACF4", Offset = "0x10FACF4", VA = "0x10FACF4")]
	private void GuitarGameManager_OnInitialized()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x10FAE64", Offset = "0x10FAE64", VA = "0x10FAE64")]
	private void GameManager_GameEnded()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x10FAE90", Offset = "0x10FAE90", VA = "0x10FAE90")]
	private void FadeOutMetronomeLines()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x10FAE84", Offset = "0x10FAE84", VA = "0x10FAE84")]
	private void GuitarTimeLine_GameEnds(MiniGame obj)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x10FB0A4", Offset = "0x10FB0A4", VA = "0x10FB0A4")]
	private void GuitarTimeLine_GameStarts(MiniGame obj)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x10FB44C", Offset = "0x10FB44C", VA = "0x10FB44C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x10FB2E8", Offset = "0x10FB2E8", VA = "0x10FB2E8")]
	private void InitializeMetronomePool()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x10FB984", Offset = "0x10FB984", VA = "0x10FB984")]
	private void ClearMetronomePool()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x10FB8BC", Offset = "0x10FB8BC", VA = "0x10FB8BC")]
	private void CleanUnusedPooledLines()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x10FBB3C", Offset = "0x10FBB3C", VA = "0x10FBB3C")]
	private LineRenderer GetPooledLine(int i)
	{
		return null;
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x10FB6E4", Offset = "0x10FB6E4", VA = "0x10FB6E4")]
	private void DrawPooledLine(int i, float normalizedTime, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x10FBD2C", Offset = "0x10FBD2C", VA = "0x10FBD2C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x10FBF30", Offset = "0x10FBF30", VA = "0x10FBF30")]
	public Metronome()
	{
	}
}
[Token(Token = "0x2000179")]
public class BeatLine
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Time;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float Opacity;

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x10FACC8", Offset = "0x10FACC8", VA = "0x10FACC8")]
	public BeatLine(float time, float opacity = 1f)
	{
	}
}
[Token(Token = "0x200017A")]
public class NoteController : MonoBehaviour
{
	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnDestroyAnimationEnded;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<KeyTime, NoteController> Notes;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyTime Note;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x10FC004", Offset = "0x10FC004", VA = "0x10FC004")]
	public static void LinkNoteView(KeyTime note, NoteController view)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x10EF5F0", Offset = "0x10EF5F0", VA = "0x10EF5F0", Slot = "4")]
	public virtual void Initialize(KeyTime note)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x10FC0B4", Offset = "0x10FC0B4", VA = "0x10FC0B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x10FC184", Offset = "0x10FC184", VA = "0x10FC184")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x10FC2D0", Offset = "0x10FC2D0", VA = "0x10FC2D0", Slot = "5")]
	public virtual void SetFail()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x10FC344", Offset = "0x10FC344", VA = "0x10FC344", Slot = "6")]
	public virtual void DestroyNote()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x10FC360", Offset = "0x10FC360", VA = "0x10FC360", Slot = "7")]
	public virtual void SetDurationEnter()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x10FC3D4", Offset = "0x10FC3D4", VA = "0x10FC3D4", Slot = "8")]
	public virtual void SetActive()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x10FC448", Offset = "0x10FC448", VA = "0x10FC448", Slot = "9")]
	public virtual void SetAligment(Vector3 forward, Vector3 up)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x10FC44C", Offset = "0x10FC44C", VA = "0x10FC44C", Slot = "10")]
	public virtual void SetPosition(StringLine line)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x10FC450", Offset = "0x10FC450", VA = "0x10FC450", Slot = "11")]
	public virtual void SetDuration(float relativeDuration, StringLine stringLine)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x10F08A0", Offset = "0x10F08A0", VA = "0x10F08A0")]
	public NoteController()
	{
	}
}
[Token(Token = "0x200017B")]
public class ObjectThrower : MonoBehaviour
{
	[Token(Token = "0x200017C")]
	[CompilerGenerated]
	private sealed class <ThrowAtSomePoint>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectThrower <>4__this;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600086D")]
			[Address(RVA = "0x10FCF5C", Offset = "0x10FCF5C", VA = "0x10FCF5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086F")]
			[Address(RVA = "0x10FCFA4", Offset = "0x10FCFA4", VA = "0x10FCFA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x10FCBB4", Offset = "0x10FCBB4", VA = "0x10FCBB4")]
		[DebuggerHidden]
		public <ThrowAtSomePoint>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x10FCBE4", Offset = "0x10FCBE4", VA = "0x10FCBE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x10FCBE8", Offset = "0x10FCBE8", VA = "0x10FCBE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x10FCF64", Offset = "0x10FCF64", VA = "0x10FCF64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> ThrowablePrefabs;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ThrownObject> ActiveThrownObjects;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 initialPos;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool canThrow;

	[Token(Token = "0x14000040")]
	public static event Action<ObjectThrower> DestroyObjectThrower
	{
		[Token(Token = "0x6000861")]
		[Address(RVA = "0x10FC4EC", Offset = "0x10FC4EC", VA = "0x10FC4EC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000862")]
		[Address(RVA = "0x10FC5B8", Offset = "0x10FC5B8", VA = "0x10FC5B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x10FC684", Offset = "0x10FC684", VA = "0x10FC684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x10FC86C", Offset = "0x10FC86C", VA = "0x10FC86C")]
	public void CleanThrownObjects()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x10FCA04", Offset = "0x10FCA04", VA = "0x10FCA04")]
	public void RemoveThrownObject(ThrownObject thrownObject, float destroyDelay = 0f)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x10FC82C", Offset = "0x10FC82C", VA = "0x10FC82C")]
	public void ThrowStuff()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x10FCB40", Offset = "0x10FCB40", VA = "0x10FCB40")]
	[IteratorStateMachine(typeof(<ThrowAtSomePoint>d__12))]
	public IEnumerator ThrowAtSomePoint()
	{
		return null;
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x10FC7B8", Offset = "0x10FC7B8", VA = "0x10FC7B8")]
	public Vector3 RandomVector(Vector3 min, Vector3 max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x10FCBDC", Offset = "0x10FCBDC", VA = "0x10FCBDC")]
	public ObjectThrower()
	{
	}
}
[Token(Token = "0x200017D")]
[ExecuteInEditMode]
public class OpacityChanger : MonoBehaviour
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Opacity;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SpriteRenderer> renderers;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Color> initialColors;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x10FCFAC", Offset = "0x10FCFAC", VA = "0x10FCFAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x10FD1D4", Offset = "0x10FD1D4", VA = "0x10FD1D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x10FD310", Offset = "0x10FD310", VA = "0x10FD310")]
	public OpacityChanger()
	{
	}
}
[Token(Token = "0x200017E")]
public class CursedNoteManager : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x200017F")]
	[CompilerGenerated]
	private struct <StringLash>d__10 : IAsyncStateMachine
	{
		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StringManager stringM;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object <>u__1;

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x10FDFA0", Offset = "0x10FDFA0", VA = "0x10FDFA0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x10FE268", Offset = "0x10FE268", VA = "0x10FE268", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CursedNoteManager I;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<StringManager> OnStringDetuned;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnStringRetuned;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InstrumentGameManagerBase instrumentGameManagerBase;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GuitarGameManager guitarGameManager;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DrumGameManager drumGameManager;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OutOfTuneManager outOfTuneManager;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x10FD318", Offset = "0x10FD318", VA = "0x10FD318")]
	public void Initialize(GuitarGameManager guitarGameManager)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x10FD458", Offset = "0x10FD458", VA = "0x10FD458")]
	private void EvaluateCursable(KeyTime key)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x10FD58C", Offset = "0x10FD58C", VA = "0x10FD58C")]
	private void CursedFailed(KeyTime key, float timeStamp)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x10FD974", Offset = "0x10FD974", VA = "0x10FD974")]
	[AsyncStateMachine(typeof(<StringLash>d__10))]
	private void StringLash(StringManager stringM)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x10FD958", Offset = "0x10FD958", VA = "0x10FD958")]
	public void SetOutOfTune(StringManager stringManager, bool isOutOfTune)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x10FDA2C", Offset = "0x10FDA2C", VA = "0x10FDA2C")]
	public void CheckStrings()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x10FDAA8", Offset = "0x10FDAA8", VA = "0x10FDAA8")]
	public bool IsAnyOutOfTune()
	{
		return default(bool);
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x10FDD1C", Offset = "0x10FDD1C", VA = "0x10FDD1C")]
	public void RetuneAllStrings()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x10FDE98", Offset = "0x10FDE98", VA = "0x10FDE98")]
	public void RetuneString(StringManager stringManager)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x10FDF18", Offset = "0x10FDF18", VA = "0x10FDF18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x10FDF98", Offset = "0x10FDF98", VA = "0x10FDF98")]
	public CursedNoteManager()
	{
	}
}
[Token(Token = "0x2000180")]
public class OutOfTuneManager : MonoBehaviour
{
	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Anchor;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float MinDistanceToInteract;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Animator animator;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool markExit;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isInteracting;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool isShowing;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool prevIsInteracting;

	[Token(Token = "0x14000041")]
	public static event Action OnOutOfTuneEnterSlowmo
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0x10FE274", Offset = "0x10FE274", VA = "0x10FE274")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x10FE32C", Offset = "0x10FE32C", VA = "0x10FE32C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000042")]
	public static event Action OnOutOfTuneExitSlowmo
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x10FE3E4", Offset = "0x10FE3E4", VA = "0x10FE3E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000883")]
		[Address(RVA = "0x10FE4A0", Offset = "0x10FE4A0", VA = "0x10FE4A0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x10FE55C", Offset = "0x10FE55C", VA = "0x10FE55C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x10FE738", Offset = "0x10FE738", VA = "0x10FE738")]
	private void GameEnded()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x10FE794", Offset = "0x10FE794", VA = "0x10FE794")]
	private void SongResumed()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x10FE800", Offset = "0x10FE800", VA = "0x10FE800")]
	private void SongPaused()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x10FE838", Offset = "0x10FE838", VA = "0x10FE838")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x10FE9AC", Offset = "0x10FE9AC", VA = "0x10FE9AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x10FEE10", Offset = "0x10FEE10", VA = "0x10FEE10")]
	public void DisableOutOfTune()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x10FDC90", Offset = "0x10FDC90", VA = "0x10FDC90")]
	public void Enter()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x10FDBF8", Offset = "0x10FDBF8", VA = "0x10FDBF8")]
	internal void Exit()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x10FEEFC", Offset = "0x10FEEFC", VA = "0x10FEEFC")]
	public OutOfTuneManager()
	{
	}
}
[Token(Token = "0x2000181")]
public class OutOfTuneSoundManager : MonoBehaviour
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OutOfTuneSoundManager I;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource winAudioSource;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource failAudioSource;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource tuneAudioSource;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TweenerCore<float, float, FloatOptions> tunningTween;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x10FEF0C", Offset = "0x10FEF0C", VA = "0x10FEF0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x10FDBF4", Offset = "0x10FDBF4", VA = "0x10FDBF4")]
	public void PlayWinSound()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x10FD928", Offset = "0x10FD928", VA = "0x10FD928")]
	public void PlayFailSound()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x10FEF64", Offset = "0x10FEF64", VA = "0x10FEF64")]
	public void StartTunning()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x10FF0B0", Offset = "0x10FF0B0", VA = "0x10FF0B0")]
	public void UpdateTunning(float tuneOffset)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x10FF0E8", Offset = "0x10FF0E8", VA = "0x10FF0E8")]
	public void StopTunning()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x10FF234", Offset = "0x10FF234", VA = "0x10FF234")]
	public OutOfTuneSoundManager()
	{
	}
}
[Token(Token = "0x2000182")]
public class TunerGraber : GrabbableObject
{
	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public StringManager stringManager;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform KeyModel;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform Indicator;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform DesiredRotationIndicator;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float CurrentRotation;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float DesiredRotation;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color HighlightColor;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Animator waveAnimator;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Gradient AngleColorFeedback;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject DetunedIndicator;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ParticleSystem TunedParticles;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Quaternion initialGrabbedRotation;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float grabRotation;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float initialGrabRotation;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Quaternion initialLocalRotation;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Quaternion smoothDeltaRotation;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Animator animator;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool wasOutOfTune;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	private bool canTune;

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x10FF2AC", Offset = "0x10FF2AC", VA = "0x10FF2AC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x10FF5F8", Offset = "0x10FF5F8", VA = "0x10FF5F8")]
	private void OutOfTuneManager_OnOutOfTuneExitSlowmo()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x10FF658", Offset = "0x10FF658", VA = "0x10FF658")]
	private void OutOfTuneManager_OnOutOfTuneEnterSlowmo()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x10FF664", Offset = "0x10FF664", VA = "0x10FF664")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x10FF670", Offset = "0x10FF670", VA = "0x10FF670")]
	private void Update()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x10FF7F4", Offset = "0x10FF7F4", VA = "0x10FF7F4", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x10FFB04", Offset = "0x10FFB04", VA = "0x10FFB04")]
	public void DetuneGraber(StringManager stringManager)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x10FFC50", Offset = "0x10FFC50", VA = "0x10FFC50")]
	private void ObjectGrabbed(InteractiveHand hand)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x10FFD88", Offset = "0x10FFD88", VA = "0x10FFD88")]
	private void ObjectGrabUpdated(InteractiveHand hand)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x11006B8", Offset = "0x11006B8", VA = "0x11006B8")]
	private void ObjectDropped(InteractiveHand hand)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x110084C", Offset = "0x110084C", VA = "0x110084C")]
	private void ObjectTouched(InteractiveHand hand)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1100698", Offset = "0x1100698", VA = "0x1100698")]
	private void HighLightString(bool highlight)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x11008C4", Offset = "0x11008C4", VA = "0x11008C4")]
	private void ObjectUntouched(InteractiveHand hand)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x11008E0", Offset = "0x11008E0", VA = "0x11008E0")]
	public TunerGraber()
	{
	}
}
[Token(Token = "0x2000183")]
public class PauseSpace : MonoBehaviour
{
	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Height;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action Continue;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action BackToMenu;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action RestartSong;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool ShowWeakTrackingMessage;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public static bool ShowInputControllerChangedMessage;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PressableButton RestartButton;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PressableButton ContinueButton;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PressableButton SettingsButton;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PressableButton CustomizeInstrumentButton;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PressableButton BackButton;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SettingsController settingsController;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject GameplayPlan;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject SettingsAnchor;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject SettingsPrefab;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject WeakTrackingMessage;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ControllerChangedPanelPrefab;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject ControllerChangedPanelInstantiated;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform ControllerChangedPanelAnchor;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform InstrumentMenuAnchor;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float Velocity;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 CameraInitialPosition;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Animator animator;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject currentGamePlan;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static PauseSpace I;

	[Token(Token = "0x14000043")]
	public static event Action Exits
	{
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x11008E8", Offset = "0x11008E8", VA = "0x11008E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x11009A4", Offset = "0x11009A4", VA = "0x11009A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1100A60", Offset = "0x1100A60", VA = "0x1100A60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x1100AE8", Offset = "0x1100AE8", VA = "0x1100AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1100D4C", Offset = "0x1100D4C", VA = "0x1100D4C")]
	private void CustomizeInstrumentButton_Pressed()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x1100DA8", Offset = "0x1100DA8", VA = "0x1100DA8")]
	private void SettingsController_SettingsClosed()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1100E20", Offset = "0x1100E20", VA = "0x1100E20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x1100E7C", Offset = "0x1100E7C", VA = "0x1100E7C")]
	public void Update()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x1100FAC", Offset = "0x1100FAC", VA = "0x1100FAC")]
	public void CloseInputControllerChangedPanel()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1101028", Offset = "0x1101028", VA = "0x1101028")]
	public void OpenInputControllerChangedPanel()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x1101144", Offset = "0x1101144", VA = "0x1101144")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x11011A0", Offset = "0x11011A0", VA = "0x11011A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1101424", Offset = "0x1101424", VA = "0x1101424")]
	private void BackButton_Pressed()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x1101488", Offset = "0x1101488", VA = "0x1101488")]
	public static void BeginContinue()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1101584", Offset = "0x1101584", VA = "0x1101584")]
	public void ContinueAction()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1101608", Offset = "0x1101608", VA = "0x1101608")]
	private void RestartButton_Pressed()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x110166C", Offset = "0x110166C", VA = "0x110166C")]
	private void SettingsButton_Pressed()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1101838", Offset = "0x1101838", VA = "0x1101838")]
	public PauseSpace()
	{
	}
}
[Token(Token = "0x2000184")]
public class PickCollider : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pickTransform;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SphereCollider pickCollider;

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1101848", Offset = "0x1101848", VA = "0x1101848")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x11018A4", Offset = "0x11018A4", VA = "0x11018A4")]
	public PickCollider()
	{
	}
}
[Token(Token = "0x2000185")]
public class PlanViewer : MonoBehaviour
{
	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x11018AC", Offset = "0x11018AC", VA = "0x11018AC")]
	public void Show()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x11018D0", Offset = "0x11018D0", VA = "0x11018D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x11019A0", Offset = "0x11019A0", VA = "0x11019A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1101A44", Offset = "0x1101A44", VA = "0x1101A44")]
	private void GameStateManager_ShowPlanChanged(bool obj)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1101A6C", Offset = "0x1101A6C", VA = "0x1101A6C")]
	public PlanViewer()
	{
	}
}
[Token(Token = "0x2000186")]
public class PlaterSpaceController : MonoBehaviour
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform InGameIntermezzoAnchor;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform PlayerMenuAnchor;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ButtonsAnchor;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform InstrumentAnchor;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PressableButton PauseButton;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PressableButton PlayButton;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ContainerButtons;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlaterSpaceController I;

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1101A74", Offset = "0x1101A74", VA = "0x1101A74", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x10F17C0", Offset = "0x10F17C0", VA = "0x10F17C0", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x10F25D0", Offset = "0x10F25D0", VA = "0x10F25D0", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x10F202C", Offset = "0x10F202C", VA = "0x10F202C", Slot = "7")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1101ACC", Offset = "0x1101ACC", VA = "0x1101ACC")]
	private void PauseButton_Pressed()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1101B58", Offset = "0x1101B58", VA = "0x1101B58")]
	private void PlayButton_Pressed()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x1101BD0", Offset = "0x1101BD0", VA = "0x1101BD0")]
	public void Hide()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1101BFC", Offset = "0x1101BFC", VA = "0x1101BFC")]
	public void Show()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1101C28", Offset = "0x1101C28", VA = "0x1101C28", Slot = "8")]
	public virtual void DropInstrument()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1101C2C", Offset = "0x1101C2C", VA = "0x1101C2C", Slot = "9")]
	public virtual void ResetPositiontoInitialPosition()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1101C30", Offset = "0x1101C30", VA = "0x1101C30", Slot = "10")]
	public virtual void GetCurrentInstrumentModel()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x10F287C", Offset = "0x10F287C", VA = "0x10F287C")]
	public PlaterSpaceController()
	{
	}
}
[Token(Token = "0x2000187")]
public class PowerActivator : MonoBehaviour
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float HandHeightToActivate;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ActiveArea;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HornsHandGesture hornsGesture;

	[Token(Token = "0x14000044")]
	public event Action<InteractiveHand> PowerActivated
	{
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1101C34", Offset = "0x1101C34", VA = "0x1101C34")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x1101CE4", Offset = "0x1101CE4", VA = "0x1101CE4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1101D94", Offset = "0x1101D94", VA = "0x1101D94")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x1101F80", Offset = "0x1101F80", VA = "0x1101F80")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x110204C", Offset = "0x110204C", VA = "0x110204C")]
	private void PowerActivator_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x1102134", Offset = "0x1102134", VA = "0x1102134")]
	public void Show()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x11021A8", Offset = "0x11021A8", VA = "0x11021A8")]
	public void Hide()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x1102200", Offset = "0x1102200", VA = "0x1102200")]
	public void Disable()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x1102224", Offset = "0x1102224", VA = "0x1102224")]
	public PowerActivator()
	{
	}
}
[Token(Token = "0x2000188")]
public class BombPowerDown : PowerUp
{
	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x1102234", Offset = "0x1102234", VA = "0x1102234", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x11023F4", Offset = "0x11023F4", VA = "0x11023F4", Slot = "11")]
	public override void UsePowerUp()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x1102490", Offset = "0x1102490", VA = "0x1102490", Slot = "12")]
	public override void PowerUpEnded()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x110254C", Offset = "0x110254C", VA = "0x110254C")]
	public BombPowerDown()
	{
	}
}
[Token(Token = "0x2000189")]
public class BulletTimePowerUp : PowerUp
{
	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform powerUpIcon;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasArrived;

	[Token(Token = "0x14000045")]
	public static event Action BulletTimeArrived
	{
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x110255C", Offset = "0x110255C", VA = "0x110255C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1102614", Offset = "0x1102614", VA = "0x1102614")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x11026CC", Offset = "0x11026CC", VA = "0x11026CC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x11027F8", Offset = "0x11027F8", VA = "0x11027F8", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1102A04", Offset = "0x1102A04", VA = "0x1102A04", Slot = "11")]
	public override void UsePowerUp()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1102B00", Offset = "0x1102B00", VA = "0x1102B00")]
	public void StartBulletTime()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x1102B94", Offset = "0x1102B94", VA = "0x1102B94")]
	public void PlayBulletTimeOut()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x1102BE8", Offset = "0x1102BE8", VA = "0x1102BE8", Slot = "12")]
	public override void PowerUpEnded()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x1102D14", Offset = "0x1102D14", VA = "0x1102D14", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x1102F9C", Offset = "0x1102F9C", VA = "0x1102F9C")]
	private void GameManager_SongPaused()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1103010", Offset = "0x1103010", VA = "0x1103010")]
	private void GameManager_SongResumed()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x110308C", Offset = "0x110308C", VA = "0x110308C")]
	public void BulletTimeHasDisappeared()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x11030F0", Offset = "0x11030F0", VA = "0x11030F0")]
	public BulletTimePowerUp()
	{
	}
}
[Token(Token = "0x200018A")]
public class LifeBoostPowerUp : PowerUp
{
	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MinHealthRecovered;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MaxHealthRecovered;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ParticlesGo;

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x11031A8", Offset = "0x11031A8", VA = "0x11031A8", Slot = "12")]
	public override void PowerUpEnded()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1103258", Offset = "0x1103258", VA = "0x1103258", Slot = "11")]
	public override void UsePowerUp()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x11034FC", Offset = "0x11034FC", VA = "0x11034FC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x110362C", Offset = "0x110362C", VA = "0x110362C", Slot = "7")]
	public override void GameManager_SongRestarted()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1103644", Offset = "0x1103644", VA = "0x1103644")]
	public LifeBoostPowerUp()
	{
	}
}
[Token(Token = "0x200018C")]
public abstract class PowerUp : MonoBehaviour
{
	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float PowerUpDuration;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<PowerUp> OnPowerUpInitialized;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<PowerUp> OnUsePowerUp;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<PowerUp> OnPowerUpEnded;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool countingDown;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool ended;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeAlive;

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x11022AC", Offset = "0x11022AC", VA = "0x11022AC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x11028C0", Offset = "0x11028C0", VA = "0x11028C0", Slot = "5")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x1102EFC", Offset = "0x1102EFC", VA = "0x1102EFC", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x1103638", Offset = "0x1103638", VA = "0x1103638", Slot = "7")]
	public virtual void GameManager_SongRestarted()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x1102484", Offset = "0x1102484", VA = "0x1102484", Slot = "8")]
	public virtual void StartCountDown()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x110377C", Offset = "0x110377C", VA = "0x110377C", Slot = "9")]
	public virtual void GameManager_GameEnded()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x1103788", Offset = "0x1103788", VA = "0x1103788", Slot = "10")]
	public virtual void SceneManager_sceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1102478", Offset = "0x1102478", VA = "0x1102478", Slot = "11")]
	public virtual void UsePowerUp()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1102540", Offset = "0x1102540", VA = "0x1102540", Slot = "12")]
	public virtual void PowerUpEnded()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x1102554", Offset = "0x1102554", VA = "0x1102554")]
	protected PowerUp()
	{
	}
}
[Token(Token = "0x200018D")]
public class PowerUpIconController : MonoBehaviour
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform GuitarHeadAnchor;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform GuitarAnchor;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeToCollect;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject powerUpPrefab;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light colorLight;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Color> AnimatedColors;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform fx;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 initialPosition;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 currentVelocity;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 targetVelocity;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator animator;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float radius;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timeAlive;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float minDistanceToCollision;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timeToChangeVelocity;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool beenCatched;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int currentLightingColor;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isGamePaused;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private long operationStartedTime;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x11037F4", Offset = "0x11037F4", VA = "0x11037F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1103850", Offset = "0x1103850", VA = "0x1103850")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x1103CF0", Offset = "0x1103CF0", VA = "0x1103CF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x1103C20", Offset = "0x1103C20", VA = "0x1103C20")]
	private void SetLightingColor(Color c)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x1103EE8", Offset = "0x1103EE8", VA = "0x1103EE8")]
	private void GameManager_SongPaused()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x1103F4C", Offset = "0x1103F4C", VA = "0x1103F4C")]
	private void GameManager_SongResumed()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x110402C", Offset = "0x110402C", VA = "0x110402C")]
	private void GameManager_GameEnded()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x1104088", Offset = "0x1104088", VA = "0x1104088")]
	private void GameManager_SongFinished()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x11040E4", Offset = "0x11040E4", VA = "0x11040E4")]
	private void SceneManager_sceneUnloaded(Scene scn)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x1104140", Offset = "0x1104140", VA = "0x1104140")]
	private void GameManager_SongRestarted()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x110419C", Offset = "0x110419C", VA = "0x110419C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1104758", Offset = "0x1104758", VA = "0x1104758")]
	public void OnAnimationExit()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x11042DC", Offset = "0x11042DC", VA = "0x11042DC")]
	public void CalculateMotion()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1104810", Offset = "0x1104810", VA = "0x1104810")]
	private Vector3 GetNewVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x1104538", Offset = "0x1104538", VA = "0x1104538")]
	public void CheckCollision()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x11049D0", Offset = "0x11049D0", VA = "0x11049D0")]
	public PowerUpIconController()
	{
	}
}
[Token(Token = "0x200018E")]
public class PowerUpsManager : MonoBehaviour
{
	[Token(Token = "0x200018F")]
	private struct PowerUpProbability
	{
		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PowerUpTypes powerUpType;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float probability;
	}

	[Token(Token = "0x2000190")]
	public enum PowerUpTypes
	{
		[Token(Token = "0x40008FD")]
		SuperCombo,
		[Token(Token = "0x40008FE")]
		LifeBoost,
		[Token(Token = "0x40008FF")]
		BulletTime
	}

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PowerUpsManager I;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform GuitarPivot;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform GuitarHead;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform PowerUpButtonAnchor;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SuperCompoPowerUpGo;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject LifeBoostPowerUpGo;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BulletTimePowerUpGo;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PressableButton PowerUpPressableButton;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxHorizontalAngle;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minHorizontalAngle;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxVerticalAngle;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float minVerticalAngle;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(0f, 1f)]
	public float voidSpawnRatio;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action ButtonBehaviour;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PowerUp ButtonPowerUp;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float elapsedTime;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeToPowerUp;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool SongFinished;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isPowerUpButtonEnabled;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool isBulletTimePowerUpInUse;

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x1104A60", Offset = "0x1104A60", VA = "0x1104A60")]
	private void Awake()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x1104AB8", Offset = "0x1104AB8", VA = "0x1104AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x1104FF4", Offset = "0x1104FF4", VA = "0x1104FF4")]
	private void BulletTimePowerUp_BulletTimeArrived()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x11050A0", Offset = "0x11050A0", VA = "0x11050A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x11054A8", Offset = "0x11054A8", VA = "0x11054A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x11055A4", Offset = "0x11055A4", VA = "0x11055A4")]
	private void UpdateButtonPosition()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x110562C", Offset = "0x110562C", VA = "0x110562C")]
	private PowerUpTypes EvaluatePowerUpType()
	{
		return default(PowerUpTypes);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1105AF0", Offset = "0x1105AF0", VA = "0x1105AF0")]
	private PowerUpTypes EvaluateProbability(PowerUpProbability[] powerUpsProbabilities)
	{
		return default(PowerUpTypes);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1105944", Offset = "0x1105944", VA = "0x1105944")]
	private void SpawnPowerUp(PowerUpTypes powerUpType)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x1105B88", Offset = "0x1105B88", VA = "0x1105B88")]
	private Vector3 GetRandomSpawnPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x1105E48", Offset = "0x1105E48", VA = "0x1105E48")]
	private void UpdateTotalPowerUpsCollectedCounter()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x1105EDC", Offset = "0x1105EDC", VA = "0x1105EDC")]
	private void PowerUpGo_PowerUpPickedUp(PowerUp powerUp)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x110612C", Offset = "0x110612C", VA = "0x110612C")]
	private void PowerUp_OnUsePowerUp(PowerUp obj)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x11061C0", Offset = "0x11061C0", VA = "0x11061C0")]
	private void PowerUp_OnPowerUpEnded(PowerUp obj)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x11062B8", Offset = "0x11062B8", VA = "0x11062B8")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x1106340", Offset = "0x1106340", VA = "0x1106340")]
	private void GameManager_GameEnded()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x1106388", Offset = "0x1106388", VA = "0x1106388")]
	private void GameManager_SongFinished()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x11063D0", Offset = "0x11063D0", VA = "0x11063D0")]
	private void GameManager_SongResumed()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x1106408", Offset = "0x1106408", VA = "0x1106408")]
	private void GameManager_SongPaused()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x1106428", Offset = "0x1106428", VA = "0x1106428")]
	public PowerUpsManager()
	{
	}
}
[Token(Token = "0x2000192")]
public class SuperComboPowerUp : PowerUp
{
	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleMagnets MagnetParticles;

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x11074B0", Offset = "0x11074B0", VA = "0x11074B0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x11075B0", Offset = "0x11075B0", VA = "0x11075B0", Slot = "11")]
	public override void UsePowerUp()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x110765C", Offset = "0x110765C", VA = "0x110765C", Slot = "12")]
	public override void PowerUpEnded()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x110770C", Offset = "0x110770C", VA = "0x110770C", Slot = "7")]
	public override void GameManager_SongRestarted()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1107714", Offset = "0x1107714", VA = "0x1107714")]
	public SuperComboPowerUp()
	{
	}
}
[Token(Token = "0x2000193")]
public class PreparationSpace : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000194")]
	[CompilerGenerated]
	private struct <TryToPlayIntermezzos>d__16 : IAsyncStateMachine
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PreparationSpace <>4__this;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object <>u__1;

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1108384", Offset = "0x1108384", VA = "0x1108384", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x1108878", Offset = "0x1108878", VA = "0x1108878", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action PlayerReady;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GrabbableObject PickGrab;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PickGrabUI;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Pick;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action GoToStartSpace;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform AnchorPreparationSpace;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform IntermezzoAnchor;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InstrumentMenu InstrumentMenu;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject TipsPanel;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource audioReady;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PickController pickController;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 InitialPosition;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private IntermezzoController intermezzo;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SongAsset currentSongSongAsset;

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x110771C", Offset = "0x110771C", VA = "0x110771C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1107DC8", Offset = "0x1107DC8", VA = "0x1107DC8")]
	private void EnableGrababblePick()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1107D10", Offset = "0x1107D10", VA = "0x1107D10")]
	[AsyncStateMachine(typeof(<TryToPlayIntermezzos>d__16))]
	private void TryToPlayIntermezzos()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1107E18", Offset = "0x1107E18", VA = "0x1107E18")]
	private void Intermezzo_IntermezzoHasEnded()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1107E1C", Offset = "0x1107E1C", VA = "0x1107E1C")]
	private void GetIntermezzoData(out IntermezzoData infoIntermezzoData, out IntermezzoData HardWarningIntermezzoData, out IntermezzoData TooEasyIntermezzoData)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1107BC0", Offset = "0x1107BC0", VA = "0x1107BC0")]
	public bool ShouldPlayIntermezzo()
	{
		return default(bool);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1107F24", Offset = "0x1107F24", VA = "0x1107F24")]
	private void SendPick()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1108090", Offset = "0x1108090", VA = "0x1108090")]
	private void PickGrab_Grabbed(InteractiveHand obj)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x110812C", Offset = "0x110812C", VA = "0x110812C")]
	private void PlaterSpaceController_PlayGame()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1107B04", Offset = "0x1107B04", VA = "0x1107B04")]
	private void PlaceUIRelativeToUser()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1108148", Offset = "0x1108148", VA = "0x1108148")]
	private void BackToMenu_Pressed()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x11081AC", Offset = "0x11081AC", VA = "0x11081AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x11082B8", Offset = "0x11082B8", VA = "0x11082B8")]
	public PreparationSpace()
	{
	}
}
[Token(Token = "0x2000195")]
public class ScoreManager : MonoBehaviour
{
	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool powerCharged;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastTimeChanged;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 comboInitialScale;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator animator;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool IsFailed;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ScoreController scoreController;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private FeedbackType currentPlayerPerformanceState;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameStats gameStats;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ObscuredFloat powerValue;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float initialScoreMultiplier;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ScoreManager I;

	[Token(Token = "0x17000098")]
	public float PowerValue
	{
		[Token(Token = "0x6000945")]
		[Address(RVA = "0x1108FD4", Offset = "0x1108FD4", VA = "0x1108FD4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000946")]
		[Address(RVA = "0x1109004", Offset = "0x1109004", VA = "0x1109004")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public int HighestCombo
	{
		[Token(Token = "0x6000947")]
		[Address(RVA = "0x1109190", Offset = "0x1109190", VA = "0x1109190")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x11091CC", Offset = "0x11091CC", VA = "0x11091CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public int Combo
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0x110927C", Offset = "0x110927C", VA = "0x110927C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600094A")]
		[Address(RVA = "0x11092B8", Offset = "0x11092B8", VA = "0x11092B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public int Score
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0x1109368", Offset = "0x1109368", VA = "0x1109368")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600094C")]
		[Address(RVA = "0x11093A4", Offset = "0x11093A4", VA = "0x11093A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public int SuccessedNotes
	{
		[Token(Token = "0x600094D")]
		[Address(RVA = "0x1109454", Offset = "0x1109454", VA = "0x1109454")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600094E")]
		[Address(RVA = "0x1109490", Offset = "0x1109490", VA = "0x1109490")]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public int AwesomeNotes
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0x11094D8", Offset = "0x11094D8", VA = "0x11094D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000950")]
		[Address(RVA = "0x1109514", Offset = "0x1109514", VA = "0x1109514")]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public int GoodNotes
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x1109564", Offset = "0x1109564", VA = "0x1109564")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000952")]
		[Address(RVA = "0x11095A0", Offset = "0x11095A0", VA = "0x11095A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public int PoorNotes
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0x11095F0", Offset = "0x11095F0", VA = "0x11095F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000954")]
		[Address(RVA = "0x110962C", Offset = "0x110962C", VA = "0x110962C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public int FaildNotes
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0x110967C", Offset = "0x110967C", VA = "0x110967C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x11096B8", Offset = "0x11096B8", VA = "0x11096B8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public int PlayedNotes
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x1109708", Offset = "0x1109708", VA = "0x1109708")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A2")]
	public int Fans
	{
		[Token(Token = "0x6000958")]
		[Address(RVA = "0x1109774", Offset = "0x1109774", VA = "0x1109774")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000959")]
		[Address(RVA = "0x11097B0", Offset = "0x11097B0", VA = "0x11097B0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public int CrowdPoints
	{
		[Token(Token = "0x600095A")]
		[Address(RVA = "0x1109860", Offset = "0x1109860", VA = "0x1109860")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095B")]
		[Address(RVA = "0x110989C", Offset = "0x110989C", VA = "0x110989C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public int VirtuousPoints
	{
		[Token(Token = "0x600095C")]
		[Address(RVA = "0x110994C", Offset = "0x110994C", VA = "0x110994C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095D")]
		[Address(RVA = "0x1109988", Offset = "0x1109988", VA = "0x1109988")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public float NotesPlayedRatio
	{
		[Token(Token = "0x600095E")]
		[Address(RVA = "0x11099D8", Offset = "0x11099D8", VA = "0x11099D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A6")]
	public FeedbackType CurrentPlayerPerformanceState
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1109BA0", Offset = "0x1109BA0", VA = "0x1109BA0")]
		get
		{
			return default(FeedbackType);
		}
		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1109BA8", Offset = "0x1109BA8", VA = "0x1109BA8")]
		set
		{
		}
	}

	[Token(Token = "0x14000046")]
	public event ValueChangedHandler OnPowerValueChanged
	{
		[Token(Token = "0x6000939")]
		[Address(RVA = "0x1108884", Offset = "0x1108884", VA = "0x1108884")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1108920", Offset = "0x1108920", VA = "0x1108920")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000047")]
	public event ValueChangedHandler OnHighestComboValueChanged
	{
		[Token(Token = "0x600093B")]
		[Address(RVA = "0x11089BC", Offset = "0x11089BC", VA = "0x11089BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1108A58", Offset = "0x1108A58", VA = "0x1108A58")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000048")]
	public event ValueChangedHandler OnComboValueChanged
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0x1108AF4", Offset = "0x1108AF4", VA = "0x1108AF4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600093E")]
		[Address(RVA = "0x1108B90", Offset = "0x1108B90", VA = "0x1108B90")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000049")]
	public event ValueChangedHandler OnScoreValueChanged
	{
		[Token(Token = "0x600093F")]
		[Address(RVA = "0x1108C2C", Offset = "0x1108C2C", VA = "0x1108C2C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000940")]
		[Address(RVA = "0x1108CC8", Offset = "0x1108CC8", VA = "0x1108CC8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004A")]
	public event ValueChangedHandler OnFansValueChanged
	{
		[Token(Token = "0x6000941")]
		[Address(RVA = "0x1108D64", Offset = "0x1108D64", VA = "0x1108D64")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000942")]
		[Address(RVA = "0x1108E00", Offset = "0x1108E00", VA = "0x1108E00")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004B")]
	public event ValueChangedHandler OnCrowdPointsChanged
	{
		[Token(Token = "0x6000943")]
		[Address(RVA = "0x1108E9C", Offset = "0x1108E9C", VA = "0x1108E9C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x1108F38", Offset = "0x1108F38", VA = "0x1108F38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004C")]
	public static event Action<FeedbackType> PlayerPerformanceStateChanged
	{
		[Token(Token = "0x6000961")]
		[Address(RVA = "0x1109BD8", Offset = "0x1109BD8", VA = "0x1109BD8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000962")]
		[Address(RVA = "0x1109CA4", Offset = "0x1109CA4", VA = "0x1109CA4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004D")]
	public static event Action<bool> PowerChargedChanged
	{
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1109D70", Offset = "0x1109D70", VA = "0x1109D70")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000964")]
		[Address(RVA = "0x1109E40", Offset = "0x1109E40", VA = "0x1109E40")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1109F10", Offset = "0x1109F10", VA = "0x1109F10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1109F60", Offset = "0x1109F60", VA = "0x1109F60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x110A508", Offset = "0x110A508", VA = "0x110A508")]
	private void GameManager_SongFinished()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x110A640", Offset = "0x110A640", VA = "0x110A640")]
	private void PowerUp_OnUsePowerUp(PowerUp powerUp)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x110A6CC", Offset = "0x110A6CC", VA = "0x110A6CC")]
	private void PowerUp_OnPowerUpEnded(PowerUp powerUp)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x110A77C", Offset = "0x110A77C", VA = "0x110A77C")]
	public void TimeChanged(float time)
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x110A8F0", Offset = "0x110A8F0", VA = "0x110A8F0")]
	public void SendTelemetry()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x110A49C", Offset = "0x110A49C", VA = "0x110A49C")]
	public void RaiseScoreChanged()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x110A8F4", Offset = "0x110A8F4", VA = "0x110A8F4")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x110A998", Offset = "0x110A998", VA = "0x110A998")]
	private void GameManager_SongRestarted()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1109BC0", Offset = "0x1109BC0", VA = "0x1109BC0")]
	private void SetPlayerPerformanceState(FeedbackType newState)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x110AA58", Offset = "0x110AA58", VA = "0x110AA58")]
	private void PlayerLifeChanged(float obj)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x110AB74", Offset = "0x110AB74", VA = "0x110AB74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x110B00C", Offset = "0x110B00C", VA = "0x110B00C")]
	private void GuitarGameManager_NotePlayed(KeyTime key, FeedbackType feedback)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x110B4AC", Offset = "0x110B4AC", VA = "0x110B4AC")]
	public ScoreManager()
	{
	}
}
[Token(Token = "0x2000196")]
public delegate void StrummedHandler(object sender, bool isStrummingUp);
[Token(Token = "0x2000197")]
public class ScratchingArea : MonoBehaviour
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Pick;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool prevSideVisual;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Plane ScratchingPlane;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool StrummingUp;

	[Token(Token = "0x1400004E")]
	public event StrummedHandler Scratched
	{
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x110B6B0", Offset = "0x110B6B0", VA = "0x110B6B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000979")]
		[Address(RVA = "0x110B74C", Offset = "0x110B74C", VA = "0x110B74C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x110B7E8", Offset = "0x110B7E8", VA = "0x110B7E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x110B7F4", Offset = "0x110B7F4", VA = "0x110B7F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x110BA08", Offset = "0x110BA08", VA = "0x110BA08")]
	public ScratchingArea()
	{
	}
}
[Token(Token = "0x2000198")]
public class ScratchingHand : MonoBehaviour
{
	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsHandOnGuitar;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftHand;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightHand;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GuitarScratcher scratcher;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Pick;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshCollider guitarRayCollider;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SkinnedMeshRenderer HandSkinnedMeshRender;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PickController pickController;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Plane scratchingPlane;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DetachedHandController detachedHand;

	[Token(Token = "0x170000A7")]
	public Transform Hand
	{
		[Token(Token = "0x600097D")]
		[Address(RVA = "0x110BA10", Offset = "0x110BA10", VA = "0x110BA10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x110BA80", Offset = "0x110BA80", VA = "0x110BA80")]
	private void Start()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x110BFA4", Offset = "0x110BFA4", VA = "0x110BFA4")]
	private void VRPlatformBase_InputControllerChanged(VRInteractionType obj)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x110C07C", Offset = "0x110C07C", VA = "0x110C07C")]
	private void PlaterSpaceController_GuitarChanged(GuitarModelController guitarModel)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x110BDD4", Offset = "0x110BDD4", VA = "0x110BDD4")]
	private void InteractionSystem_HandDominanceChanged()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x110C098", Offset = "0x110C098", VA = "0x110C098")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x110C0F8", Offset = "0x110C0F8", VA = "0x110C0F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x110C244", Offset = "0x110C244", VA = "0x110C244")]
	public void CheckHandIstracked()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x110C304", Offset = "0x110C304", VA = "0x110C304")]
	private void Update()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x110C8A0", Offset = "0x110C8A0", VA = "0x110C8A0")]
	public ScratchingHand()
	{
	}
}
[Token(Token = "0x2000199")]
public class SettingsController : PopUpController
{
	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool? colorBlindEnabled;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PressableButton BackButtonMenu;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PressableButton MoreDealySong;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PressableButton LessDealySong;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ToggleButton ButtonToggleLeftyHand;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ToggleButton ButtonToggleColorBlindMode;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ToggleButton IndexHandsMode;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RadioButton ButtonLowAudience;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RadioButton ButtonHighAudience;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LatencyController LatencyController;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro CurrentDelaySongText;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform IndexOptions;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool latencyChanged;

	[Token(Token = "0x170000A8")]
	public static bool ColorBlindEnabled
	{
		[Token(Token = "0x6000997")]
		[Address(RVA = "0x110D4B8", Offset = "0x110D4B8", VA = "0x110D4B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400004F")]
	public event Action SettingsClosed
	{
		[Token(Token = "0x6000987")]
		[Address(RVA = "0x110C8A8", Offset = "0x110C8A8", VA = "0x110C8A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x110C944", Offset = "0x110C944", VA = "0x110C944")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000050")]
	public static event Action<bool> ColorBlindModeChanged
	{
		[Token(Token = "0x6000989")]
		[Address(RVA = "0x110C9E0", Offset = "0x110C9E0", VA = "0x110C9E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600098A")]
		[Address(RVA = "0x110CAB0", Offset = "0x110CAB0", VA = "0x110CAB0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x110CB80", Offset = "0x110CB80", VA = "0x110CB80", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x110D2EC", Offset = "0x110D2EC", VA = "0x110D2EC")]
	private void IndexHandsMode_CheckedChanged(bool obj)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x110CFB4", Offset = "0x110CFB4", VA = "0x110CFB4")]
	private void LoadLastUsedAudioLatency()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x110D2F0", Offset = "0x110D2F0", VA = "0x110D2F0")]
	private void LessDealySong_Pressed()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x110D31C", Offset = "0x110D31C", VA = "0x110D31C")]
	private void MoreDealySong_Pressed()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x110D018", Offset = "0x110D018", VA = "0x110D018")]
	private void AddLatence(float amount)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x110D3C4", Offset = "0x110D3C4", VA = "0x110D3C4")]
	private void ToggleColorBlindMode(bool Check)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x110D5B0", Offset = "0x110D5B0", VA = "0x110D5B0")]
	private void ButtonToggleLeftyHand_CheckedChanged(bool check)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x110CEC8", Offset = "0x110CEC8", VA = "0x110CEC8")]
	private void CheckHandAndAudienceOptions()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x110D5BC", Offset = "0x110D5BC", VA = "0x110D5BC")]
	private void BackButtonMenu_Pressed()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x110D668", Offset = "0x110D668", VA = "0x110D668")]
	public void DestroyObject()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x110D6EC", Offset = "0x110D6EC", VA = "0x110D6EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x110D910", Offset = "0x110D910", VA = "0x110D910")]
	public SettingsController()
	{
	}
}
[Token(Token = "0x200019A")]
public class ShowNotAvailableOnDemo : MonoBehaviour
{
	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Msg;

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x110D968", Offset = "0x110D968", VA = "0x110D968")]
	private void Start()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x110DA90", Offset = "0x110DA90", VA = "0x110DA90")]
	private void ShowNotAvailableOnDemo_Untouched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x110DAB0", Offset = "0x110DAB0", VA = "0x110DAB0")]
	private void ShowNotAvailableOnDemo_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x110DAD0", Offset = "0x110DAD0", VA = "0x110DAD0")]
	public ShowNotAvailableOnDemo()
	{
	}
}
[Token(Token = "0x200019B")]
public class ShowWhenPlaying : MonoBehaviour
{
	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ShowWhenNotPlaying;

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x110DAD8", Offset = "0x110DAD8", VA = "0x110DAD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x110DC40", Offset = "0x110DC40", VA = "0x110DC40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x110DD8C", Offset = "0x110DD8C", VA = "0x110DD8C")]
	private void GameManager_GameEnded()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x110DDB0", Offset = "0x110DDB0", VA = "0x110DDB0")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x110DEA4", Offset = "0x110DEA4", VA = "0x110DEA4")]
	public ShowWhenPlaying()
	{
	}
}
[Token(Token = "0x200019C")]
public class SongFilesManager : MonoBehaviour
{
	[Token(Token = "0x200019D")]
	[CompilerGenerated]
	private sealed class <CopyFromStreamingAssets>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string songName;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string file;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SongFilesManager <>4__this;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x110E8C0", Offset = "0x110E8C0", VA = "0x110E8C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x110E908", Offset = "0x110E908", VA = "0x110E908", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x110E444", Offset = "0x110E444", VA = "0x110E444")]
		[DebuggerHidden]
		public <CopyFromStreamingAssets>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x110E4F4", Offset = "0x110E4F4", VA = "0x110E4F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x110E4F8", Offset = "0x110E4F8", VA = "0x110E4F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x110E8C8", Offset = "0x110E8C8", VA = "0x110E8C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> songsToCopy;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<KeyValuePair<string, string>> FilesToCopy;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int fileIndex;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool OverwriteExistingSongs;

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x110DEAC", Offset = "0x110DEAC", VA = "0x110DEAC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x110E2D4", Offset = "0x110E2D4", VA = "0x110E2D4")]
	private void NextFile()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x110E3A0", Offset = "0x110E3A0", VA = "0x110E3A0")]
	[IteratorStateMachine(typeof(<CopyFromStreamingAssets>d__6))]
	private IEnumerator CopyFromStreamingAssets(string songName, string file)
	{
		return null;
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x110E46C", Offset = "0x110E46C", VA = "0x110E46C")]
	public SongFilesManager()
	{
	}
}
[Token(Token = "0x200019E")]
public class Spin : MonoBehaviour
{
	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Space RotationSpace;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 RotationVelocity;

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x110E910", Offset = "0x110E910", VA = "0x110E910")]
	private void Update()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x110E978", Offset = "0x110E978", VA = "0x110E978")]
	public Spin()
	{
	}
}
[Token(Token = "0x200019F")]
public class StringLine
{
	[StructLayout(3)]
	[Token(Token = "0x20001A0")]
	[CompilerGenerated]
	private struct <Retune>d__25 : IAsyncStateMachine
	{
		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StringLine <>4__this;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SoftJointLimit <joint>5__2;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <initialSpringForce>5__3;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SoftJointLimitSpring <springJoint>5__4;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object <>u__1;

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x11100FC", Offset = "0x11100FC", VA = "0x11100FC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x111060C", Offset = "0x111060C", VA = "0x111060C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001A1")]
	[CompilerGenerated]
	private struct <ActivateSpringPhysics>d__29 : IAsyncStateMachine
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool active;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StringLine <>4__this;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object <>u__1;

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x1110618", Offset = "0x1110618", VA = "0x1110618", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x1110924", Offset = "0x1110924", VA = "0x1110924", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float MaxRigidBodyVelocity;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float FadeOutTime;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float StringAdjustingFactor;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Start;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform End;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform StartHandlerKinematic;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform StartHandlerSimulated;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform EndHandlerKinematic;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform EndHandlerSimulated;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ConfigurableJoint startHandlerJoint;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ConfigurableJoint endHandlerJoint;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public StringManager StringManager;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MaxVibration;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VibrationAmplitude;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float Frenquency;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float Waves;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float Velocity;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve WaveDecay;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float LineWidth;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StringSection section;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float widthMultiplier;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Rigidbody endHandlerSimulatedRigidBody;

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x110E988", Offset = "0x110E988", VA = "0x110E988")]
	public StringLine(LineRenderer line, AnimationCurve waveDecay, StringManager stringManager)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x110ECD8", Offset = "0x110ECD8", VA = "0x110ECD8")]
	public void Detune()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x110EE1C", Offset = "0x110EE1C", VA = "0x110EE1C")]
	[AsyncStateMachine(typeof(<Retune>d__25))]
	public void Retune()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x110EED4", Offset = "0x110EED4", VA = "0x110EED4")]
	public void InstantRetune()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x110EF48", Offset = "0x110EF48", VA = "0x110EF48")]
	public float Tune(float tuneAngle)
	{
		return default(float);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x110F054", Offset = "0x110F054", VA = "0x110F054")]
	public void AddVibration(float s, float amplitude = 1f, float width = 0f)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x110ED5C", Offset = "0x110ED5C", VA = "0x110ED5C")]
	[AsyncStateMachine(typeof(<ActivateSpringPhysics>d__29))]
	public void ActivateSpringPhysics(bool active)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x110F0CC", Offset = "0x110F0CC", VA = "0x110F0CC")]
	public void UpdateLine(Vector3 right)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x110FB3C", Offset = "0x110FB3C", VA = "0x110FB3C")]
	public Vector3 GetVibratingPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x110FCE8", Offset = "0x110FCE8", VA = "0x110FCE8")]
	public Vector3 GetPoint(float t, bool uniformT = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1110040", Offset = "0x1110040", VA = "0x1110040")]
	public Vector3 GetTangent(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20001A2")]
public class StringSection
{
	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 StartPoint;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 StartHandler;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 EndPoint;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 EndHandler;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsStraight;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] points;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3[] uniformPoints;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float[] arcLengths;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float[] cumulativeArcLengths;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float Length;

	[Token(Token = "0x170000AB")]
	public int Segments
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1110930", Offset = "0x1110930", VA = "0x1110930")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x110EBF0", Offset = "0x110EBF0", VA = "0x110EBF0")]
	public StringSection(int segments)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x110F854", Offset = "0x110F854", VA = "0x110F854")]
	public void Calculate(Vector3 start, Vector3 startHandler, Vector3 endHandler, Vector3 end)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x110FD04", Offset = "0x110FD04", VA = "0x110FD04")]
	public Vector3 GetCalculatedPoint(float t, bool uniformT = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x11109F8", Offset = "0x11109F8", VA = "0x11109F8")]
	private Vector3 GetUniformPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x1110CFC", Offset = "0x1110CFC", VA = "0x1110CFC")]
	private Vector3 GetCalculatedUncorrectedPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x111101C", Offset = "0x111101C", VA = "0x111101C")]
	public Vector3 GetTangent(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x1111118", Offset = "0x1111118", VA = "0x1111118")]
	public float GetLength()
	{
		return default(float);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x111094C", Offset = "0x111094C", VA = "0x111094C")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x1111068", Offset = "0x1111068", VA = "0x1111068")]
	public static Vector3 GetTangent(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20001A3")]
public class StringManager : MonoBehaviour
{
	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Tier;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ShowLine;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool IsOutOfTune;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool IsTunning;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float outOfTuneCorrectionAngle;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InstrumentGameManagerBase instrumentGameManagerBase;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuitarGameManager guitarGameManager;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DrumGameManager drumGameManager;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform endPoint;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject StartHandlerKinematic;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject StartHandlerSimulated;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject EndHandlerKinematic;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject EndHandlerSimulated;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject CursedNotePrefab;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject CursedNoteControllerPrefab;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject NotePrefab;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject ControllerNotePrefab;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject PullOffNotePrefab;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject ControllerPullOffNotePrefab;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject VirtuosoNotePrefab;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject BlindNotePrefab;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject BlindNoteControllerPrefab;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AnimationCurve WaveDecay;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public StringLine line;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Color StringColor;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color CurrentColor;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color StringSelectedColor;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public TierNoteBase CloserNote;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public InstrumentHitArea intrumentHit;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameTimeline timeline;

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x1111120", Offset = "0x1111120", VA = "0x1111120")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x1111494", Offset = "0x1111494", VA = "0x1111494")]
	public void Initialize(InstrumentGameManagerBase instrumentGM)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x1111CFC", Offset = "0x1111CFC", VA = "0x1111CFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x111202C", Offset = "0x111202C", VA = "0x111202C", Slot = "4")]
	protected virtual void AddNote(KeyTime key)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x111242C", Offset = "0x111242C", VA = "0x111242C")]
	private void TimelineTimechanged(float time)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x1112830", Offset = "0x1112830", VA = "0x1112830")]
	private void DeleteNote(KeyTime note)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x1112930", Offset = "0x1112930", VA = "0x1112930")]
	private void DeleteNote(TierNoteBase note, bool immediate = true)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x1112B50", Offset = "0x1112B50", VA = "0x1112B50")]
	private void Note_Successed(KeyTime note, float timeStamp)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1112C80", Offset = "0x1112C80", VA = "0x1112C80")]
	public void SetFeedback(Color c, float amplitude = 1f, float widthMultiplier = 0f)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1111250", Offset = "0x1111250", VA = "0x1111250")]
	public void ClearNotes()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x1112CAC", Offset = "0x1112CAC", VA = "0x1112CAC")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x1112DBC", Offset = "0x1112DBC", VA = "0x1112DBC")]
	public StringManager()
	{
	}
}
[Token(Token = "0x20001A6")]
public class TattoedHand : MonoBehaviour
{
	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D Hard;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D Rock;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InteractiveHand hand;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsLeft;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material handMaterial;

	[Token(Token = "0x170000AC")]
	private Material PrimaryHandMaterial
	{
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x1113320", Offset = "0x1113320", VA = "0x1113320")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AD")]
	private Material PrimaryControllerMaterial
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x1113340", Offset = "0x1113340", VA = "0x1113340")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AE")]
	private Material SecondaryHandMaterial
	{
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x1113360", Offset = "0x1113360", VA = "0x1113360")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AF")]
	private Material SecondaryControllerMaterial
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x1113380", Offset = "0x1113380", VA = "0x1113380")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x11133A0", Offset = "0x11133A0", VA = "0x11133A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x11134F0", Offset = "0x11134F0", VA = "0x11134F0")]
	private void InputControllerChanged(VRInteractionType obj)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x11136C8", Offset = "0x11136C8", VA = "0x11136C8")]
	private Material GetHandMaterial()
	{
		return null;
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1113930", Offset = "0x1113930", VA = "0x1113930")]
	private void SetHandsTextures()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x111356C", Offset = "0x111356C", VA = "0x111356C")]
	private void ResetFingerColors()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x1113BD4", Offset = "0x1113BD4", VA = "0x1113BD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x1113CCC", Offset = "0x1113CCC", VA = "0x1113CCC")]
	public TattoedHand()
	{
	}
}
[Token(Token = "0x20001A7")]
public class ThrowIndicator : MonoBehaviour
{
	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AnchorVelocity;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BeerThrowManager throwManager;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ArrowIndicator;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Anchor;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x1113CD4", Offset = "0x1113CD4", VA = "0x1113CD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x1113E28", Offset = "0x1113E28", VA = "0x1113E28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x1113EF8", Offset = "0x1113EF8", VA = "0x1113EF8")]
	private void GameManager_SongEnded()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x1113F4C", Offset = "0x1113F4C", VA = "0x1113F4C")]
	private void I_PlayerStateChanged(FeedbackType obj)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x111406C", Offset = "0x111406C", VA = "0x111406C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x1114090", Offset = "0x1114090", VA = "0x1114090")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x1114530", Offset = "0x1114530", VA = "0x1114530")]
	public ThrowIndicator()
	{
	}
}
[Token(Token = "0x20001A8")]
public class ThrownGlass : ThrownObject
{
	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TrailRenderer trail;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject GlassExplosion;

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1114540", Offset = "0x1114540", VA = "0x1114540")]
	private new void Start()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x11148B0", Offset = "0x11148B0", VA = "0x11148B0")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x111492C", Offset = "0x111492C", VA = "0x111492C")]
	private void I_PlayerStateChanged(FeedbackType state)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x1114A88", Offset = "0x1114A88", VA = "0x1114A88", Slot = "15")]
	protected override void OnEnterCollision(ColliderArea sender, Collision collision)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1114C3C", Offset = "0x1114C3C", VA = "0x1114C3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x1114C58", Offset = "0x1114C58", VA = "0x1114C58", Slot = "20")]
	public override void OnEndOfPath()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x1114C74", Offset = "0x1114C74", VA = "0x1114C74", Slot = "21")]
	public override void DestroyThrownObject(float time = 0f)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x1114D00", Offset = "0x1114D00", VA = "0x1114D00")]
	public ThrownGlass()
	{
	}
}
[Token(Token = "0x20001A9")]
public class ThrownObject : InteractableObject
{
	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float timeScale;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ObjectThrower objectThrower;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	internal Vector3 InitialPosition;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	internal Vector3 EndPosition;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	internal Vector3 MiddlePosition;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float time;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 angularRotation;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Rigidbody rb;

	[Token(Token = "0x14000051")]
	public event Action<Collision> Collided
	{
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x11146A0", Offset = "0x11146A0", VA = "0x11146A0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x1114D20", Offset = "0x1114D20", VA = "0x1114D20")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000052")]
	public new event Action<ThrownObject> Destroyed
	{
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x1114750", Offset = "0x1114750", VA = "0x1114750")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x1114DD0", Offset = "0x1114DD0", VA = "0x1114DD0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x1114800", Offset = "0x1114800", VA = "0x1114800", Slot = "12")]
	public new virtual void Start()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x1114E80", Offset = "0x1114E80", VA = "0x1114E80", Slot = "13")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x1114F7C", Offset = "0x1114F7C", VA = "0x1114F7C", Slot = "14")]
	public virtual void SetTarget(Vector3 initialPosition)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x1114C18", Offset = "0x1114C18", VA = "0x1114C18", Slot = "15")]
	protected virtual void OnEnterCollision(ColliderArea sender, Collision collision)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x11150BC", Offset = "0x11150BC", VA = "0x11150BC", Slot = "16")]
	protected virtual void ObjectGrabbed(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x1115174", Offset = "0x1115174", VA = "0x1115174", Slot = "17")]
	protected virtual void ObjectGrabUpdate(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x1115178", Offset = "0x1115178", VA = "0x1115178", Slot = "18")]
	protected virtual void ObjectDropped(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x111517C", Offset = "0x111517C", VA = "0x111517C", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x1115274", Offset = "0x1115274", VA = "0x1115274", Slot = "19")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x1115404", Offset = "0x1115404", VA = "0x1115404")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x1115484", Offset = "0x1115484", VA = "0x1115484", Slot = "20")]
	public virtual void OnEndOfPath()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x11154A0", Offset = "0x11154A0", VA = "0x11154A0", Slot = "21")]
	public virtual void DestroyThrownObject(float time = 0f)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x1114D10", Offset = "0x1114D10", VA = "0x1114D10")]
	public ThrownObject()
	{
	}
}
[Token(Token = "0x20001AA")]
public class ThrownUnderwear : ThrownObject
{
	[StructLayout(3)]
	[Token(Token = "0x20001AB")]
	[CompilerGenerated]
	private struct <DropUnderwearAfterSeconds>d__18 : IAsyncStateMachine
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float dropTime;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ThrownUnderwear <>4__this;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractiveHand hnd;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private object <>u__1;

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x11168E4", Offset = "0x11168E4", VA = "0x11168E4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1116B28", Offset = "0x1116B28", VA = "0x1116B28", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Material> UnderwearMaterials;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject FansLabelPrefab;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ParticleSystem ParticlesTrail;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SkinnedMeshRenderer Model;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioSource audioSource;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Transform Marker;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Quaternion initialHandRotation;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Quaternion initialAlignedRotation;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<Rigidbody> rigidbodies;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool wasGrabbed;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool wasDropped;

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x111551C", Offset = "0x111551C", VA = "0x111551C", Slot = "12")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x1115670", Offset = "0x1115670", VA = "0x1115670", Slot = "19")]
	public override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x111572C", Offset = "0x111572C", VA = "0x111572C", Slot = "14")]
	public override void SetTarget(Vector3 initialPosition)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x111588C", Offset = "0x111588C", VA = "0x111588C", Slot = "18")]
	protected override void ObjectDropped(InteractiveHand hnd)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x1115968", Offset = "0x1115968", VA = "0x1115968", Slot = "17")]
	protected override void ObjectGrabUpdate(InteractiveHand hnd)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x1115D34", Offset = "0x1115D34", VA = "0x1115D34")]
	private void ResetVelocity()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x1115F04", Offset = "0x1115F04", VA = "0x1115F04", Slot = "16")]
	protected override void ObjectGrabbed(InteractiveHand hnd)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x1116728", Offset = "0x1116728", VA = "0x1116728")]
	[AsyncStateMachine(typeof(<DropUnderwearAfterSeconds>d__18))]
	private void DropUnderwearAfterSeconds(InteractiveHand hnd, float dropTime)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x111610C", Offset = "0x111610C", VA = "0x111610C")]
	private void AlignWithHand(InteractiveHand hnd)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x1115A40", Offset = "0x1115A40", VA = "0x1115A40")]
	private void UpdateAlign(InteractiveHand hnd)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x1116810", Offset = "0x1116810", VA = "0x1116810", Slot = "20")]
	public override void OnEndOfPath()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x111683C", Offset = "0x111683C", VA = "0x111683C", Slot = "21")]
	public override void DestroyThrownObject(float time = 0f)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x11168D4", Offset = "0x11168D4", VA = "0x11168D4")]
	public ThrownUnderwear()
	{
	}
}
[Token(Token = "0x20001AC")]
public class TomArea : InstrumentHitArea
{
	[Token(Token = "0x20001AD")]
	[CompilerGenerated]
	private sealed class <DeselectTom>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TomArea <>4__this;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x1116F68", Offset = "0x1116F68", VA = "0x1116F68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x1116FB0", Offset = "0x1116FB0", VA = "0x1116FB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1116E0C", Offset = "0x1116E0C", VA = "0x1116E0C")]
		[DebuggerHidden]
		public <DeselectTom>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1116E3C", Offset = "0x1116E3C", VA = "0x1116E3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1116E40", Offset = "0x1116E40", VA = "0x1116E40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1116F70", Offset = "0x1116F70", VA = "0x1116F70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action TomTouch;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	private InteractableObject hitArea;

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x1116B34", Offset = "0x1116B34", VA = "0x1116B34", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x1116BBC", Offset = "0x1116BBC", VA = "0x1116BBC", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x1116C20", Offset = "0x1116C20", VA = "0x1116C20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x1116D88", Offset = "0x1116D88", VA = "0x1116D88")]
	[IteratorStateMachine(typeof(<DeselectTom>d__5))]
	private IEnumerator DeselectTom(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x1116E34", Offset = "0x1116E34", VA = "0x1116E34")]
	public TomArea()
	{
	}
}
[Token(Token = "0x20001AE")]
public class UnderwearThrowManager : MonoBehaviour
{
	[Token(Token = "0x20001AF")]
	[CompilerGenerated]
	private sealed class <ThowWithDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnderwearThrowManager <>4__this;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x111780C", Offset = "0x111780C", VA = "0x111780C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x1117854", Offset = "0x1117854", VA = "0x1117854", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x111736C", Offset = "0x111736C", VA = "0x111736C")]
		[DebuggerHidden]
		public <ThowWithDelay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1117560", Offset = "0x1117560", VA = "0x1117560", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1117564", Offset = "0x1117564", VA = "0x1117564", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x1117814", Offset = "0x1117814", VA = "0x1117814", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectThrowerGo;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ObjectThrower> Throwers;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float LastThrownObjectTime;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameManager gameManager;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool powerEnded;

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x1116FB8", Offset = "0x1116FB8", VA = "0x1116FB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x1117118", Offset = "0x1117118", VA = "0x1117118")]
	private void ObjectThrower_DestroyObjectThrower(ObjectThrower objectThrower)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x1117170", Offset = "0x1117170", VA = "0x1117170")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x1117294", Offset = "0x1117294", VA = "0x1117294")]
	private void I_PlayerStateChanged(FeedbackType feedback)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x11172E8", Offset = "0x11172E8", VA = "0x11172E8")]
	[IteratorStateMachine(typeof(<ThowWithDelay>d__9))]
	public IEnumerator ThowWithDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x1117394", Offset = "0x1117394", VA = "0x1117394")]
	private float GetNextThrowningTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x11173D4", Offset = "0x11173D4", VA = "0x11173D4")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x1117558", Offset = "0x1117558", VA = "0x1117558")]
	public UnderwearThrowManager()
	{
	}
}
[Token(Token = "0x20001B0")]
public class VirtuosoNoteController : GuitarNoteController
{
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Renderer VirtuosoNoteRenderer;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material BorderNoteMaterial;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem fingerParticles;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ParticleSystem rockParticles;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ParticleSystem awesomeParticles;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ParticleSystem.EmitParams emitParams;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Gradient PerformanceColor;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float performance;

	[Token(Token = "0x170000B4")]
	public float Performance
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x111785C", Offset = "0x111785C", VA = "0x111785C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1117864", Offset = "0x1117864", VA = "0x1117864")]
		set
		{
		}
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1117A24", Offset = "0x1117A24", VA = "0x1117A24", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1117B78", Offset = "0x1117B78", VA = "0x1117B78")]
	public void EmitFingerParticles(float fingerVelocity)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x1117C00", Offset = "0x1117C00", VA = "0x1117C00")]
	public void EmitAwesomeParticles()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1117C5C", Offset = "0x1117C5C", VA = "0x1117C5C", Slot = "11")]
	public override void SetDuration(float relativeDuration, StringLine stringLine)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1117EE0", Offset = "0x1117EE0", VA = "0x1117EE0", Slot = "15")]
	public override void SetMaterialInvisible(bool invisible)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x1117FAC", Offset = "0x1117FAC", VA = "0x1117FAC", Slot = "16")]
	public override void SetFingers(List<TierFinger> fingers)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x1117FB0", Offset = "0x1117FB0", VA = "0x1117FB0")]
	public VirtuosoNoteController()
	{
	}
}
[Token(Token = "0x20001B1")]
public class VoiceBullet : MonoBehaviour
{
	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float life;

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x1118008", Offset = "0x1118008", VA = "0x1118008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x111800C", Offset = "0x111800C", VA = "0x111800C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x1118150", Offset = "0x1118150", VA = "0x1118150")]
	public VoiceBullet()
	{
	}
}
[Token(Token = "0x20001B2")]
public class GamePreferences
{
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnpluggedSavedData unpluggedSavedData;

	[Token(Token = "0x170000B5")]
	private static bool doPlayerPrefsExist
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1118160", Offset = "0x1118160", VA = "0x1118160")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x110D344", Offset = "0x110D344", VA = "0x110D344")]
	public static void Save(UnpluggedInfo type, object value, bool saveImmediately = true)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x1118474", Offset = "0x1118474", VA = "0x1118474")]
	public static void SaveToPlayerPrefs(UnpluggedInfo type, object value, bool saveImmediately = true)
	{
	}

	[Token(Token = "0x6000A43")]
	public static T Load<T>(UnpluggedInfo type, [Optional] T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000A44")]
	public static T LoadFromPlayerPrefs<T>(UnpluggedInfo type, [Optional] T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1118520", Offset = "0x1118520", VA = "0x1118520")]
	public static void CleanAll()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x11181CC", Offset = "0x11181CC", VA = "0x11181CC")]
	public static void InitializeGamePreferences()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x1118610", Offset = "0x1118610", VA = "0x1118610")]
	private static void MigrateOldGamePreferences()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x111908C", Offset = "0x111908C", VA = "0x111908C")]
	private static void InitializeForFirstUse()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x111932C", Offset = "0x111932C", VA = "0x111932C")]
	public static void SaveDataToDisk()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x111947C", Offset = "0x111947C", VA = "0x111947C")]
	public GamePreferences()
	{
	}
}
[Token(Token = "0x20001B4")]
public class GameTimeline
{
	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float CurrentTime;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float NormalizedTimeSpeed;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<TimeEvent> CustomEvents;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<KeyTime> AllNotesInTimeLine;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Queue<KeyTime> InitialNotes;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<KeyTime> NotesReadyToInteract;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<KeyTime> InSceneNotes;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<MiniGame> Games;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<KeyTime> RemainingNotes;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<KeyTime> ReadyToRemove;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public KeyTime CloserNoteInScene;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public KeyTime CloserInteractiveNote;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public KeyTime SecondNoteInScene;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<KeyTime> auxEventKeys;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float prewarmTime;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int prepareToRemoveHash;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float lastAddedNoteToSceneTime;

	[Token(Token = "0x170000B6")]
	public float PreWarmTime
	{
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x111956C", Offset = "0x111956C", VA = "0x111956C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x1119564", Offset = "0x1119564", VA = "0x1119564")]
		set
		{
		}
	}

	[Token(Token = "0x14000053")]
	public static event Action Ended
	{
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1119574", Offset = "0x1119574", VA = "0x1119574")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x111962C", Offset = "0x111962C", VA = "0x111962C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000054")]
	public event Action Resetting
	{
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x1111A8C", Offset = "0x1111A8C", VA = "0x1111A8C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x1111E30", Offset = "0x1111E30", VA = "0x1111E30")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000055")]
	public event Action<MiniGame> GameStarts
	{
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x11196E4", Offset = "0x11196E4", VA = "0x11196E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1119794", Offset = "0x1119794", VA = "0x1119794")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000056")]
	public event Action<KeyTime> OnKeyEnterScene
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1111B28", Offset = "0x1111B28", VA = "0x1111B28")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1111ECC", Offset = "0x1111ECC", VA = "0x1111ECC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000057")]
	public event Action<KeyTime> OnKeyInteractionTimeEnters
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x1119844", Offset = "0x1119844", VA = "0x1119844")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x11198F4", Offset = "0x11198F4", VA = "0x11198F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000058")]
	public event Action<KeyTime> OnKeyInteractionTimeExits
	{
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x11199A4", Offset = "0x11199A4", VA = "0x11199A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1119A54", Offset = "0x1119A54", VA = "0x1119A54")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000059")]
	public event Action<KeyTime> OnKeyExitsScene
	{
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1111BD8", Offset = "0x1111BD8", VA = "0x1111BD8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x1111F7C", Offset = "0x1111F7C", VA = "0x1111F7C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005A")]
	public event Action<MiniGame> GameEnds
	{
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x1119B04", Offset = "0x1119B04", VA = "0x1119B04")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x1119BB4", Offset = "0x1119BB4", VA = "0x1119BB4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005B")]
	public event Action<float> TimeChanged
	{
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x1119C64", Offset = "0x1119C64", VA = "0x1119C64")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x1119D14", Offset = "0x1119D14", VA = "0x1119D14")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1119DC4", Offset = "0x1119DC4", VA = "0x1119DC4")]
	public GameTimeline()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x111A014", Offset = "0x111A014", VA = "0x111A014")]
	public void SetTime(float time)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x111B244", Offset = "0x111B244", VA = "0x111B244")]
	private void AddInitialNotesSlowly(float time)
	{
	}

	[Token(Token = "0x6000A65")]
	public int IndexOf<T>(IEnumerable<T> enumerable, T element, [Optional] IEqualityComparer<T> comparer)
	{
		return default(int);
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x111B38C", Offset = "0x111B38C", VA = "0x111B38C")]
	public void Reset()
	{
	}
}
[Token(Token = "0x20001B5")]
public class TimeEvent
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Func<KeyTime, bool> EventCondition;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<KeyTime> OnConditionPassed;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Name;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int hash;

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1111C88", Offset = "0x1111C88", VA = "0x1111C88")]
	public TimeEvent(string name, Func<KeyTime, bool> condition, Action<KeyTime> onConditionPassed)
	{
	}
}
[Token(Token = "0x20001B6")]
public class TimelineManager
{
	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameTimeline> Timelines;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CurrentTime;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float PrevTime;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<KeyTime> AllRootKeys;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action Finished;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float endTime;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasFinished;

	[Token(Token = "0x1400005C")]
	public event Action<float> TimeChanged
	{
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x110A3EC", Offset = "0x110A3EC", VA = "0x110A3EC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x110AF5C", Offset = "0x110AF5C", VA = "0x110AF5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x111B748", Offset = "0x111B748", VA = "0x111B748")]
	public void Initialize(float timelineDuration, List<KeyTime> allRootKeys)
	{
	}

	[Token(Token = "0x6000A6B")]
	public GameTimeline AddTimeline<T>() where T : MiniGame
	{
		return null;
	}

	[Token(Token = "0x6000A6C")]
	public void RefreshTimeline<T>(GameTimeline gtl) where T : MiniGame
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x111B7E4", Offset = "0x111B7E4", VA = "0x111B7E4")]
	public void SetTime(float time)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x111B9A4", Offset = "0x111B9A4", VA = "0x111B9A4")]
	public void ResetAll()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x111BAEC", Offset = "0x111BAEC", VA = "0x111BAEC")]
	public TimelineManager()
	{
	}
}
[Token(Token = "0x20001BA")]
public class GhostHandHelper : MonoBehaviour
{
	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FingerHelperPose Index;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FingerHelperPose Middle;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FingerHelperPose Ring;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FingerHelperPose Pinky;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GuitarGameManager guitarGameManager;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform HandModel;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform StrumMsgAnchor;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject StrumMsg;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color HandColor;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color clearColor;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<TierFinger, FingerHelperPose> Fingers;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TierNoteBase currentNote;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Renderer handRenderer;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool hidden;

	[Token(Token = "0x170000B7")]
	public bool IsHidden
	{
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x111BB74", Offset = "0x111BB74", VA = "0x111BB74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x111BB7C", Offset = "0x111BB7C", VA = "0x111BB7C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x111BF30", Offset = "0x111BF30", VA = "0x111BF30")]
	public void ShowStrumText()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x111C02C", Offset = "0x111C02C", VA = "0x111C02C")]
	public void SetNextNote(TierNoteBase note)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x111BCE4", Offset = "0x111BCE4", VA = "0x111BCE4")]
	public void Hide(bool instantlyHide = false, [Optional] Action OnHide)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x111C2F0", Offset = "0x111C2F0", VA = "0x111C2F0")]
	public void Show(bool instantlyShow = false, [Optional] Action OnShow)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x111C51C", Offset = "0x111C51C", VA = "0x111C51C")]
	private void SetHandPose(List<TierFinger> fingerPoses)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x111CA58", Offset = "0x111CA58", VA = "0x111CA58")]
	public GhostHandHelper()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BE")]
public class FingerHelperPose
{
	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Transform> Bones;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AngleClosed;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float AngleOpended;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float AngleStraight;

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x111CB24", Offset = "0x111CB24", VA = "0x111CB24")]
	public FingerHelperPose()
	{
	}
}
[Token(Token = "0x20001BF")]
public class GhostHandManager : MonoBehaviour
{
	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject ghostHand;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GuitarGameManager guitarGameManager;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool ghostHandIsNeeded;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TierNoteBase currentNote;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GhostHandHelper ghostHandHelper;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x111CB2C", Offset = "0x111CB2C", VA = "0x111CB2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x111CDD0", Offset = "0x111CDD0", VA = "0x111CDD0")]
	private void GuitarGameManager_OnInitialized()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x111CE60", Offset = "0x111CE60", VA = "0x111CE60")]
	public void ActiveghostHandObject()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x111CE80", Offset = "0x111CE80", VA = "0x111CE80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x111D130", Offset = "0x111D130", VA = "0x111D130")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x111D264", Offset = "0x111D264", VA = "0x111D264")]
	public void HideHand(bool Inmediately = false)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x111D294", Offset = "0x111D294", VA = "0x111D294")]
	private void GuitarTimeLine_OnKeyInteractionTimeEnters(KeyTime obj)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x111D2BC", Offset = "0x111D2BC", VA = "0x111D2BC")]
	private void I_OnComboValueChanged(float prevValue, float value)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x111D320", Offset = "0x111D320", VA = "0x111D320")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x111D414", Offset = "0x111D414", VA = "0x111D414")]
	private void GameManager_SongPaused()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x111D444", Offset = "0x111D444", VA = "0x111D444")]
	private void GameManager_SongRestarted()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x111D47C", Offset = "0x111D47C", VA = "0x111D47C")]
	private void GameManager_SongResumed()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x111D4B4", Offset = "0x111D4B4", VA = "0x111D4B4")]
	private void GameManager_SongFinished()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x111D4E4", Offset = "0x111D4E4", VA = "0x111D4E4")]
	public GhostHandManager()
	{
	}
}
[Token(Token = "0x20001C0")]
public class GuitarGrabber : InteractableObject
{
	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform AlignedToCamera;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Renderer GlowRender;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image ExpandFX;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SpriteRenderer MoveIcon;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _ClipThersholdMinShaderProp;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Tween expandOpacityAnimation;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Tween moveIconAnimation;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color initialColor;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 initialGrabDelta;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Color MaxGlow;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Color minGlow;

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x111E4EC", Offset = "0x111E4EC", VA = "0x111E4EC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x111EAF4", Offset = "0x111EAF4", VA = "0x111EAF4")]
	private void GuitarGrabber_Dropped(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x111EC50", Offset = "0x111EC50", VA = "0x111EC50")]
	private void GuitarGrabber_Grabbed(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x111EE1C", Offset = "0x111EE1C", VA = "0x111EE1C")]
	private void GuitarGrabber_Untouched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x111EFB8", Offset = "0x111EFB8", VA = "0x111EFB8")]
	private void GuitarGrabber_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x111F114", Offset = "0x111F114", VA = "0x111F114")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x111F1EC", Offset = "0x111F1EC", VA = "0x111F1EC")]
	public GuitarGrabber()
	{
	}
}
[Token(Token = "0x20001C1")]
public class GuitarHandPoseRecognitionManager : MonoBehaviour
{
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxCollider FretFingerCollider;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<FingerType, float> FingersTouching;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GuitarNeckHandsController GuitarNeckHands;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ColorFingers;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<List<FingerType>> LastsPoses;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<float[]> LastsFingerClosingIndexes;

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x111F2BC", Offset = "0x111F2BC", VA = "0x111F2BC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x111F5D8", Offset = "0x111F5D8", VA = "0x111F5D8")]
	public List<FingerType> GetCurrentHandPose()
	{
		return null;
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x111F8A4", Offset = "0x111F8A4", VA = "0x111F8A4")]
	public bool CheckHandPose(TierNoteBase closerNote)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x1120378", Offset = "0x1120378", VA = "0x1120378")]
	private bool CheckHandPoseControllerMethod(ControllerGuitarNote controllerGuitarNote)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x111FA34", Offset = "0x111FA34", VA = "0x111FA34")]
	public bool CheckHandPoseColliderMethod(HandGuitarNote closerNote)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x1120210", Offset = "0x1120210", VA = "0x1120210")]
	public bool CheckLastsHandPoses(HandGuitarNote closerNote)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x111FE98", Offset = "0x111FE98", VA = "0x111FE98")]
	public bool CheckPoseFingerVelocity(HandGuitarNote closerNote)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x1120754", Offset = "0x1120754", VA = "0x1120754")]
	public bool CheckHandPoseMachineLearningMethod(HandGuitarNote closerNote)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x11204CC", Offset = "0x11204CC", VA = "0x11204CC")]
	public static bool ComparePose(List<FingerType> pose, List<TierFinger> poseTier)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x1120780", Offset = "0x1120780", VA = "0x1120780")]
	public bool ColliderContains(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x112097C", Offset = "0x112097C", VA = "0x112097C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x1121860", Offset = "0x1121860", VA = "0x1121860")]
	public List<FingerType> GetTouchingFretFingers()
	{
		return null;
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x1121B10", Offset = "0x1121B10", VA = "0x1121B10")]
	public static void ResetFingerColors()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x11222A0", Offset = "0x11222A0", VA = "0x11222A0")]
	public GuitarHandPoseRecognitionManager()
	{
	}
}
[Token(Token = "0x20001C3")]
public class GuitarInfoPanelController : MonoBehaviour
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro NameLabel;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro BrandLabel;

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x11222BC", Offset = "0x11222BC", VA = "0x11222BC")]
	public void Show(GuitarData guitar)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x11223D8", Offset = "0x11223D8", VA = "0x11223D8")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x1122448", Offset = "0x1122448", VA = "0x1122448")]
	public void DestroyObject()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x11224B4", Offset = "0x11224B4", VA = "0x11224B4")]
	public GuitarInfoPanelController()
	{
	}
}
[Token(Token = "0x20001C4")]
public class GuitarInteractionControllerSteamVR : PlatformMonoBehaviour
{
	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x11224BC", Offset = "0x11224BC", VA = "0x11224BC")]
	public GuitarInteractionControllerSteamVR()
	{
	}
}
[Token(Token = "0x20001C5")]
[CreateAssetMenu(fileName = "GuitarData", menuName = "Unplugged/GuitarData", order = 1)]
public class GuitarList : ScriptableObject
{
	[Token(Token = "0x20001C6")]
	public enum GuitarLists
	{
		[Token(Token = "0x4000A4C")]
		DefaultGuitarList,
		[Token(Token = "0x4000A4D")]
		SchecterGuitarList,
		[Token(Token = "0x4000A4E")]
		PanteraGuitarList
	}

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string FolderPath;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GuitarData> Guitars;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<string> purchasedGuitars;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsDLC;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string DLCId;

	[Token(Token = "0x170000B8")]
	public static List<string> PurchasedGuitars
	{
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1122B78", Offset = "0x1122B78", VA = "0x1122B78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B9")]
	public static GuitarData SelectedGuitar
	{
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x1122CE0", Offset = "0x1122CE0", VA = "0x1122CE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1122D28", Offset = "0x1122D28", VA = "0x1122D28")]
		set
		{
		}
	}

	[Token(Token = "0x1400005D")]
	public static event Action<GuitarData> OnGuitarSelected
	{
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x11224C4", Offset = "0x11224C4", VA = "0x11224C4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1122590", Offset = "0x1122590", VA = "0x1122590")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x112265C", Offset = "0x112265C", VA = "0x112265C")]
	public static GuitarList GetList(GuitarLists listName)
	{
		return null;
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x112284C", Offset = "0x112284C", VA = "0x112284C")]
	public static List<GuitarData> GetAll(bool evenNotPurchased = false)
	{
		return null;
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1122BD4", Offset = "0x1122BD4", VA = "0x1122BD4")]
	internal static void RefreshPurchasedGuitarList()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x1122DA8", Offset = "0x1122DA8", VA = "0x1122DA8")]
	public GuitarList()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C8")]
public class GuitarData : BindableBase, IPurchasable
{
	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string GuitarModelPrefabName;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Name;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Brand;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string FolderPath;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int Price;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool IsVisible;

	[NonSerialized]
	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[JsonIgnore]
	public GuitarList Parent;

	[Token(Token = "0x170000BA")]
	[JsonIgnore]
	public GameObject GuitarModelPrefab
	{
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1122DD8", Offset = "0x1122DD8", VA = "0x1122DD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	[JsonIgnore]
	public string ThumbPath
	{
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1122E64", Offset = "0x1122E64", VA = "0x1122E64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	[JsonIgnore]
	public string BackgroundPath
	{
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1122ED4", Offset = "0x1122ED4", VA = "0x1122ED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	[JsonIgnore]
	private string guitarId
	{
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x11230CC", Offset = "0x11230CC", VA = "0x11230CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BE")]
	[JsonIgnore]
	public bool IsPurchased
	{
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x11230D4", Offset = "0x11230D4", VA = "0x11230D4", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x11231A0", Offset = "0x11231A0", VA = "0x11231A0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public int ItemPrice
	{
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x112333C", Offset = "0x112333C", VA = "0x112333C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1400005E")]
	public event Action OnPurchase
	{
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1123344", Offset = "0x1123344", VA = "0x1123344", Slot = "7")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x11233E0", Offset = "0x11233E0", VA = "0x11233E0", Slot = "8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x112347C", Offset = "0x112347C", VA = "0x112347C")]
	public GuitarData()
	{
	}
}
[Token(Token = "0x20001C9")]
public class GuitarModelController : MonoBehaviour
{
	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshCollider GuitarHandCollider;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer GuitarModelRenderer;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform GuitarHeadAnchor;

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x112348C", Offset = "0x112348C", VA = "0x112348C")]
	public GuitarModelController()
	{
	}
}
[Token(Token = "0x20001CA")]
public class GuitarNeckHandsController : MonoBehaviour
{
	[Token(Token = "0x20001CB")]
	[CompilerGenerated]
	private sealed class <HackColorHand>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GuitarNeckHandsController <>4__this;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x11252E8", Offset = "0x11252E8", VA = "0x11252E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x1125330", Offset = "0x1125330", VA = "0x1125330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1123FC0", Offset = "0x1123FC0", VA = "0x1123FC0")]
		[DebuggerHidden]
		public <HackColorHand>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x11251D0", Offset = "0x11251D0", VA = "0x11251D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x11251D4", Offset = "0x11251D4", VA = "0x11251D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x11252F0", Offset = "0x11252F0", VA = "0x11252F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform HandContainerLeft;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform HandContainerRight;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractableObject guitarNeck;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandSkeletonInfo SkeletonInfo;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HandSkeletonPoseBlender currentHandPoseBlender;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve fingerAttenuation;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<FingerAttenuation> PerFingerAttenuationOverride;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GuitarGameManager guitarGameManager;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GuitarHandPoseRecognitionManager handPoseRecognition;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float CurrentHandRotation;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material primaryHandMaterial;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private IKHandController leftIkHandController;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private IKHandController rightIkHandController;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 PlatformOculusHandOffset;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float PlatformOculusPivotOffset;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 PlatformOculusHandOffsetRightHand;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float PlatformOculusPivotOffsetRightHand;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 PlatformSteamVRHandOffset;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 PlatformSteamVRHandRotation;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float PlatformSteamVRPivotOffset;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 PlatformSteamVRHandOffsetRightHand;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 PlatformSteamVRHandRightRotation;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float PlatformSteamVRPivotOffsetRightHand;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform currentHandContainer;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private InteractiveHand originalHand;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float[] SmoothCurls;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x1123494", Offset = "0x1123494", VA = "0x1123494")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x1123670", Offset = "0x1123670", VA = "0x1123670")]
	private void GuitarNeck_Dropped(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x11238B4", Offset = "0x11238B4", VA = "0x11238B4")]
	private void GuitarNeck_Grabbed(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x1123F3C", Offset = "0x1123F3C", VA = "0x1123F3C")]
	[IteratorStateMachine(typeof(<HackColorHand>d__29))]
	private IEnumerator HackColorHand(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x1123FE8", Offset = "0x1123FE8", VA = "0x1123FE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x1124268", Offset = "0x1124268", VA = "0x1124268")]
	public void Update()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x112426C", Offset = "0x112426C", VA = "0x112426C")]
	private void InteractiveBlending()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x1124A80", Offset = "0x1124A80", VA = "0x1124A80")]
	private void PerformBlendPerPlatform(float thumbBlend = 1f)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x1125074", Offset = "0x1125074", VA = "0x1125074")]
	public GuitarNeckHandsController()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CC")]
public class FingerAttenuation
{
	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public bool UseIndividualAttenuation;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AnimationCurve Attenuation;

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x1125338", Offset = "0x1125338", VA = "0x1125338")]
	public FingerAttenuation()
	{
	}
}
[Token(Token = "0x20001CD")]
public class GuitarPowerUpFXController : MonoBehaviour
{
	[Token(Token = "0x20001CE")]
	public enum FxTypes
	{
		[Token(Token = "0x4000A80")]
		Default,
		[Token(Token = "0x4000A81")]
		LifeBoost,
		[Token(Token = "0x4000A82")]
		BulletTimeUsed,
		[Token(Token = "0x4000A83")]
		BulletTimeGrabbed
	}

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer GuitarFXRenderer;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem ParticleSystem;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 FXLocalCenter;

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x1125340", Offset = "0x1125340", VA = "0x1125340")]
	public void DestroyFX()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x11253AC", Offset = "0x11253AC", VA = "0x11253AC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x1125438", Offset = "0x1125438", VA = "0x1125438")]
	public static GuitarPowerUpFXController CreateGuitarFX(Vector3 FXCenter, FxTypes FXType = FxTypes.Default)
	{
		return null;
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x11257A4", Offset = "0x11257A4", VA = "0x11257A4")]
	public GuitarPowerUpFXController()
	{
	}
}
[Token(Token = "0x20001CF")]
public class GuitarSelectionFXController : MonoBehaviour
{
	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particles;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action disapeartingKeyFrameAction;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform target;

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x11257AC", Offset = "0x11257AC", VA = "0x11257AC")]
	public static GuitarSelectionFXController CreateGuitarFX(MeshRenderer guitarRenderer, bool IsOut, Vector3 FXCenter, [Optional] Action onDisapearingKeyframe, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x112590C", Offset = "0x112590C", VA = "0x112590C")]
	public void Init(MeshRenderer guitarRenderer, Transform parent, Vector3 FXCenter, bool IsOut)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x1125E38", Offset = "0x1125E38", VA = "0x1125E38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x1125F14", Offset = "0x1125F14", VA = "0x1125F14")]
	public void EmitParticles()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x1125DBC", Offset = "0x1125DBC", VA = "0x1125DBC")]
	public void DestroyFX()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x1125F50", Offset = "0x1125F50", VA = "0x1125F50")]
	public GuitarSelectionFXController()
	{
	}
}
[Token(Token = "0x20001D0")]
public class GuitarWaveController : MonoBehaviour
{
	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x1125F58", Offset = "0x1125F58", VA = "0x1125F58")]
	public void DestroyWave()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x1125FC4", Offset = "0x1125FC4", VA = "0x1125FC4")]
	public void DisableWave()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x1125FE8", Offset = "0x1125FE8", VA = "0x1125FE8")]
	public void InitializeWave()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x1126048", Offset = "0x1126048", VA = "0x1126048")]
	public GuitarWaveController()
	{
	}
}
[Token(Token = "0x20001D1")]
public class HandHapticFeedback : MonoBehaviour
{
	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x1126050", Offset = "0x1126050", VA = "0x1126050")]
	public static void DoHapticFeedbackVibratoMotionBased(float handVelocity, InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x1126074", Offset = "0x1126074", VA = "0x1126074")]
	public static void DoHapticFeedback(FeedbackType feedback, InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x11260A0", Offset = "0x11260A0", VA = "0x11260A0")]
	public HandHapticFeedback()
	{
	}
}
[Token(Token = "0x20001D2")]
public class HandPoseIndicatorController : MonoBehaviour
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform IndexFinger;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform MiddleFinger;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RingFinger;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform PinkyFinger;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FretArea Fret;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer ModelRenderer;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<FingerType, Transform> Fingers;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TweenerCore<float, float, FloatOptions> opacityAnimation;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool preHidden;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool IsHidden;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float opacity;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<FingerType> currentPose;

	[Token(Token = "0x170000C2")]
	public float Opacity
	{
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x11260A8", Offset = "0x11260A8", VA = "0x11260A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x11260B0", Offset = "0x11260B0", VA = "0x11260B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x1126158", Offset = "0x1126158", VA = "0x1126158")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x1126410", Offset = "0x1126410", VA = "0x1126410")]
	public void SetHandPose(List<FingerType> fingerPoses)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x11262C4", Offset = "0x11262C4", VA = "0x11262C4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x1126744", Offset = "0x1126744", VA = "0x1126744")]
	public HandPoseIndicatorController()
	{
	}
}
[Token(Token = "0x20001D3")]
public class HandSkeletonControllerKnuckles : HandSkeletonController
{
	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PairedTransformPaths> TransformPaths;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool skeletonBound;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform wrist;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsFreeHand;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandSkeletonPoseBlender poseBlender;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve PoseBlendingCurve;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VRPlatformControllerBase ControllerInfo;

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x1126764", Offset = "0x1126764", VA = "0x1126764")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x1126768", Offset = "0x1126768", VA = "0x1126768", Slot = "4")]
	public override void UpdateHandSkeleton()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x112676C", Offset = "0x112676C", VA = "0x112676C")]
	public HandSkeletonControllerKnuckles()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D4")]
public class PairedTransformPaths
{
	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform DestinationTransform;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string InitialTransformPath;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal Transform InitialTransform;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 RotationOffset;

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x112677C", Offset = "0x112677C", VA = "0x112677C")]
	public PairedTransformPaths()
	{
	}
}
[Token(Token = "0x20001D5")]
public class HandSkeletonControllerOculus : HandSkeletonController
{
	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HandSkeletonPoseBlender poseBlender;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool wasInHandTrackingMode;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AnimationCurve blendingCurve;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private OVRCustomSkeleton ovrSkeleton;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsLeftController;

	[Token(Token = "0x170000C3")]
	private OVRInput.Controller ovrController
	{
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1126784", Offset = "0x1126784", VA = "0x1126784")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x1126798", Offset = "0x1126798", VA = "0x1126798", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x11268C4", Offset = "0x11268C4", VA = "0x11268C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x1126968", Offset = "0x1126968", VA = "0x1126968")]
	private void VRPlatformBase_InputControllerChanged(VRInteractionType obj)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x1126984", Offset = "0x1126984", VA = "0x1126984", Slot = "4")]
	public override void UpdateHandSkeleton()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x1126988", Offset = "0x1126988", VA = "0x1126988")]
	private void CheckFingerCurl()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x1126A40", Offset = "0x1126A40", VA = "0x1126A40")]
	public float GetIndexCurl()
	{
		return default(float);
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x1126AAC", Offset = "0x1126AAC", VA = "0x1126AAC")]
	public float GetGrabCurl()
	{
		return default(float);
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x1126B18", Offset = "0x1126B18", VA = "0x1126B18")]
	public HandSkeletonControllerOculus()
	{
	}
}
[Token(Token = "0x20001D6")]
public class HandSkeletonInfo : MonoBehaviour
{
	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsLeftHand;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> ThumbBones;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> IndexBones;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> MiddleBones;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> RingBones;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Transform> PinkyBones;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform IndexTip;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ThumbTip;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform MiddleTip;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform RingTip;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform PinkyTip;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform Wrist;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x1121808", Offset = "0x1121808", VA = "0x1121808")]
	public Transform GetTipFromFingerType(FingerType finger)
	{
		return null;
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x1126B20", Offset = "0x1126B20", VA = "0x1126B20")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x1126B24", Offset = "0x1126B24", VA = "0x1126B24")]
	public HandSkeletonInfo()
	{
	}
}
[Token(Token = "0x20001D7")]
public class HandSkeletonPoseBlender : MonoBehaviour
{
	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandSkeletonPoseLibrary HandPoses;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> AnimatedBones;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<FingerMask> FingerMasks;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandPose CurrentPose;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HandSkeletonInfo skeletonInfo;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandSkeletonInfo targetSkeletonInfo;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkeletonPose endSkeletonPose;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SkeletonPose initialSkeletonPose;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<Transform, Transform> FreeLinked;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dictionary<Transform, Transform> IKLinked;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Transform> FreeLinkedList;

	[Token(Token = "0x170000C4")]
	public HandSkeletonInfo SkeletonInfo
	{
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1126B2C", Offset = "0x1126B2C", VA = "0x1126B2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x1126B34", Offset = "0x1126B34", VA = "0x1126B34")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x1123E38", Offset = "0x1123E38", VA = "0x1123E38")]
	public void SetPoses(HandPose initialPose, HandPose endPose)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x11237B0", Offset = "0x11237B0", VA = "0x11237B0")]
	public void SetPoses(HandPose initialPose, HandPose endPose, float thumbBlend, float indexBlend, float middleBlend, float ringBlend, float pinkyBlend)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x1126BE8", Offset = "0x1126BE8", VA = "0x1126BE8")]
	private void GetFreeLinks()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x1126F6C", Offset = "0x1126F6C", VA = "0x1126F6C")]
	private void GetIKLinks()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x1124B88", Offset = "0x1124B88", VA = "0x1124B88")]
	public void SetBlend(float thumbBlend, float indexBlend, float middleBlend, float ringBlend, float pinkyBlend)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x1127414", Offset = "0x1127414", VA = "0x1127414")]
	private void BlendFingerToIK()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x1127B84", Offset = "0x1127B84", VA = "0x1127B84")]
	private void BlendFingerToFree()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x1128458", Offset = "0x1128458", VA = "0x1128458")]
	public HandSkeletonPoseBlender()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DA")]
public class FingerMask
{
	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FingerType Finger;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> ActiveBones;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CurrentBlend;

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x11285E0", Offset = "0x11285E0", VA = "0x11285E0")]
	public FingerMask()
	{
	}
}
[Token(Token = "0x20001DB")]
[CreateAssetMenu(fileName = "HandSkeletonPose", menuName = "Unplugged/HandSkeletonPose", order = 1)]
public class HandSkeletonPoseLibrary : ScriptableObject
{
	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsLeftHand;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SkeletonPose> Poses;

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x1127310", Offset = "0x1127310", VA = "0x1127310")]
	public SkeletonPose GetSkeletonPose(HandPose pose)
	{
		return null;
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x11285F0", Offset = "0x11285F0", VA = "0x11285F0")]
	public HandSkeletonPoseLibrary()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DD")]
public class SkeletonPose
{
	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HandPose Pose;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Quaternion> LocalRotations;

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x112861C", Offset = "0x112861C", VA = "0x112861C")]
	public SkeletonPose()
	{
	}
}
[Token(Token = "0x20001DE")]
public enum HandPose
{
	[Token(Token = "0x4000AC5")]
	Grab,
	[Token(Token = "0x4000AC6")]
	Relax,
	[Token(Token = "0x4000AC7")]
	OnGuitarRelax,
	[Token(Token = "0x4000AC8")]
	OnGuitarChord,
	[Token(Token = "0x4000AC9")]
	Free,
	[Token(Token = "0x4000ACA")]
	ControllerRelax,
	[Token(Token = "0x4000ACB")]
	ControllerGuitarRelax,
	[Token(Token = "0x4000ACC")]
	ControllerRotationUp,
	[Token(Token = "0x4000ACD")]
	ControllerRotationDown,
	[Token(Token = "0x4000ACE")]
	ControllerGuitarChord
}
[Token(Token = "0x20001DF")]
public class HandTrackingMsg : MonoBehaviour
{
	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x11286A4", Offset = "0x11286A4", VA = "0x11286A4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x11286A8", Offset = "0x11286A8", VA = "0x11286A8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1128758", Offset = "0x1128758", VA = "0x1128758")]
	public HandTrackingMsg()
	{
	}
}
[Token(Token = "0x20001E0")]
public interface IBindableData
{
}
[Token(Token = "0x20001E1")]
public class IKHandController : MonoBehaviour
{
	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuitarNeckHandsController handsController;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float guitarNeckOffset;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float guitarNeckOffsetUp;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float guitarNeckOffsetDown;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float guitarNeckRotationMax;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float guitarNeckRotationMin;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform handPivot;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform ikTarget;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform indexPositon;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform middlePosition;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform ringPosition;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform pinkyPositon;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InteractiveHand originalHand;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private InteractableObject guitarNeck;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform handContainer;

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1123EF4", Offset = "0x1123EF4", VA = "0x1123EF4")]
	public void InitializeHandController(InteractiveHand originalHand, InteractableObject guitarNeck, Transform handContainer)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1128760", Offset = "0x1128760", VA = "0x1128760")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x1128800", Offset = "0x1128800", VA = "0x1128800")]
	private void ComputeFingersPositionOnNeck()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x11289A4", Offset = "0x11289A4", VA = "0x11289A4")]
	public IKHandController()
	{
	}
}
[Token(Token = "0x20001E2")]
public class InformationPanelDataManager
{
	[StructLayout(3)]
	[Token(Token = "0x20001E3")]
	[CompilerGenerated]
	private struct <DownloadInformationMetadata>d__0 : IAsyncStateMachine
	{
		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<InformationPanelData> onComplete;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object <>u__1;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InformationPanelData <info>5__3;

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1128C60", Offset = "0x1128C60", VA = "0x1128C60", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1129220", Offset = "0x1129220", VA = "0x1129220", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x11289AC", Offset = "0x11289AC", VA = "0x11289AC")]
	[AsyncStateMachine(typeof(<DownloadInformationMetadata>d__0))]
	public static void DownloadInformationMetadata([Optional] Action<InformationPanelData> onComplete, [Optional] Action<string> onError)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x1128A64", Offset = "0x1128A64", VA = "0x1128A64")]
	public static void SaveInformationPanelAsDisplayed(string informationPanelID)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x1128B54", Offset = "0x1128B54", VA = "0x1128B54")]
	public static List<string> GetSavedInformationPanelIDs()
	{
		return null;
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x1128C58", Offset = "0x1128C58", VA = "0x1128C58")]
	public InformationPanelDataManager()
	{
	}
}
[Token(Token = "0x20001E4")]
public class InformationPanelData
{
	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Date;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Everybody;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> AlbumsUnlockedNeeded;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string text;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string imagePath;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D infoTexture;

	[Token(Token = "0x170000C5")]
	[JsonIgnore]
	public bool ShouldBeDisplayed
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x112922C", Offset = "0x112922C", VA = "0x112922C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x1129230", Offset = "0x1129230", VA = "0x1129230")]
	private bool CheckDisplayConditions()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x1129374", Offset = "0x1129374", VA = "0x1129374")]
	public InformationPanelData()
	{
	}
}
[Token(Token = "0x20001E7")]
public class ConfirmationPanelController : PopUpController
{
	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PressableButton OkayButton;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PressableButton NopeButton;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextLabel InfoLabel;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextLabel TitleLabel;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action onOk;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action onNope;

	[Token(Token = "0x1400005F")]
	public event Action WarningPanelClosed
	{
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x1129594", Offset = "0x1129594", VA = "0x1129594")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1129630", Offset = "0x1129630", VA = "0x1129630")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x11296CC", Offset = "0x11296CC", VA = "0x11296CC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x11298CC", Offset = "0x11298CC", VA = "0x11298CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x1129A40", Offset = "0x1129A40", VA = "0x1129A40")]
	public void Init(string titleText, string infoText, Action okAction, Action nopeAction)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x1129AB4", Offset = "0x1129AB4", VA = "0x1129AB4")]
	private void OkayButton_Pressed()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x1129B48", Offset = "0x1129B48", VA = "0x1129B48")]
	private void NopeButton_Pressed()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x1129BDC", Offset = "0x1129BDC", VA = "0x1129BDC")]
	public void DestroyObject()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x1129C60", Offset = "0x1129C60", VA = "0x1129C60")]
	public ConfirmationPanelController()
	{
	}
}
[Token(Token = "0x20001E8")]
public class CounterLabel : TextLabel
{
	[Token(Token = "0x20001E9")]
	[CompilerGenerated]
	private sealed class <CounterFrame>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CounterLabel <>4__this;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0x112A0F0", Offset = "0x112A0F0", VA = "0x112A0F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0x112A138", Offset = "0x112A138", VA = "0x112A138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1129E80", Offset = "0x1129E80", VA = "0x1129E80")]
		[DebuggerHidden]
		public <CounterFrame>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x1129EEC", Offset = "0x1129EEC", VA = "0x1129EEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1129EF0", Offset = "0x1129EF0", VA = "0x1129EF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x112A0F8", Offset = "0x112A0F8", VA = "0x112A0F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Action CountCompleted;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int InitialNumber;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int EndNumber;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int Step;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int ShakeStep;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int currentNumber;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int currentShakeCounter;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 initialScale;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private AudioSource audioSource;

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x1129CC0", Offset = "0x1129CC0", VA = "0x1129CC0", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x1129DEC", Offset = "0x1129DEC", VA = "0x1129DEC")]
	public void StartCounterAnimation()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x1129E0C", Offset = "0x1129E0C", VA = "0x1129E0C")]
	[IteratorStateMachine(typeof(<CounterFrame>d__11))]
	private IEnumerator CounterFrame()
	{
		return null;
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x1129EA8", Offset = "0x1129EA8", VA = "0x1129EA8")]
	public CounterLabel()
	{
	}
}
[Token(Token = "0x20001EA")]
public class GrabbableObject : InteractableObject
{
	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x112A140", Offset = "0x112A140", VA = "0x112A140")]
	public GrabbableObject()
	{
	}
}
[Token(Token = "0x20001EB")]
public class GrabbableUIObject : InteractableObject
{
	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float TransitionDuration;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Renderer TouchFeedbackElement;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Renderer IconElement;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Renderer HoverElement;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Renderer BorderElement;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Texture2D HoverTexture;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Texture2D GrabTexture;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Texture2D NormalTexture;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color OnTouchColor;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color OnGrabColor;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color NormalColor;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int materialColorProperty;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool prevHandIsClosed;

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x112A160", Offset = "0x112A160", VA = "0x112A160", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x112A584", Offset = "0x112A584", VA = "0x112A584")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x112A8FC", Offset = "0x112A8FC", VA = "0x112A8FC")]
	private void GrabbableUIObject_Dropped(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x112A9DC", Offset = "0x112A9DC", VA = "0x112A9DC")]
	private void GrabbableUIObject_Grabbed(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x112AA84", Offset = "0x112AA84", VA = "0x112AA84")]
	private void GrabbableUIObject_Untouched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x112ABCC", Offset = "0x112ABCC", VA = "0x112ABCC")]
	private void GrabbableUIObject_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x112ACB8", Offset = "0x112ACB8", VA = "0x112ACB8")]
	public GrabbableUIObject()
	{
	}
}
[Token(Token = "0x20001EC")]
public class FingerState
{
	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ClosingIndex;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool IsClosed;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ClosedThershold;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Tip;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FingerType type;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSkeleton skeleton;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isInit;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Transform> fingerBones;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationCurve correctionCurve;

	[Token(Token = "0x170000C8")]
	internal List<Transform> FingerBones
	{
		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x112AD20", Offset = "0x112AD20", VA = "0x112AD20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x112B9C4", Offset = "0x112B9C4", VA = "0x112B9C4")]
	public FingerState(FingerType type, List<Transform> bones, Transform tip, AnimationCurve curve)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x112BA44", Offset = "0x112BA44", VA = "0x112BA44")]
	public FingerState(FingerType type, OVRSkeleton handSkeleton, AnimationCurve curve)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x112AD74", Offset = "0x112AD74", VA = "0x112AD74")]
	private void GetBones()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x112BAA4", Offset = "0x112BAA4", VA = "0x112BAA4")]
	public void UpdateState()
	{
	}
}
[Token(Token = "0x20001ED")]
public enum FingerType
{
	[Token(Token = "0x4000B18")]
	Thumb,
	[Token(Token = "0x4000B19")]
	Index,
	[Token(Token = "0x4000B1A")]
	Middle,
	[Token(Token = "0x4000B1B")]
	Ring,
	[Token(Token = "0x4000B1C")]
	Pinky
}
[Token(Token = "0x20001EE")]
public class HandGesture
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FingerGestureState Thumb;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FingerGestureState Index;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FingerGestureState Middle;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FingerGestureState Ring;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FingerGestureState Pinky;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<FingerGestureState> FingerStatesGesture;

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x112BDF0", Offset = "0x112BDF0", VA = "0x112BDF0", Slot = "4")]
	public virtual bool CheckGesture(InteractiveHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x112BDF8", Offset = "0x112BDF8", VA = "0x112BDF8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x112C030", Offset = "0x112C030", VA = "0x112C030")]
	public HandGesture()
	{
	}
}
[Token(Token = "0x20001EF")]
public class OpenHandGesture : HandGesture
{
	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float OpenIndex;

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x112C0B8", Offset = "0x112C0B8", VA = "0x112C0B8")]
	public OpenHandGesture()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x112C25C", Offset = "0x112C25C", VA = "0x112C25C", Slot = "4")]
	public override bool CheckGesture(InteractiveHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x112C374", Offset = "0x112C374", VA = "0x112C374")]
	public float CheckFinger(FingerState finger, FingerGestureState fingerGesture)
	{
		return default(float);
	}
}
[Token(Token = "0x20001F0")]
public class PinchGrabHandGesture : HandGesture
{
	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float IndexToDrop;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float MinDistance;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool OnlyIndex;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float OpenIndex;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform IndexTip;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform IndexMiddle;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform ThumbTip;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform MiddleTip;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform RingTip;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform PinkyTip;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Transform> FingersTips;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float DefaultIndexToDrop;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float DefaultMaxDistance;

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x112C3B4", Offset = "0x112C3B4", VA = "0x112C3B4")]
	public PinchGrabHandGesture(Transform indexTip, Transform indexMiddle, Transform thumbTip, Transform middleTip, Transform ringTip, Transform pinkyTip)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x112C814", Offset = "0x112C814", VA = "0x112C814")]
	public void ResetDropIndex()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x112C820", Offset = "0x112C820", VA = "0x112C820", Slot = "4")]
	public override bool CheckGesture(InteractiveHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x112CBC8", Offset = "0x112CBC8", VA = "0x112CBC8")]
	public float CheckFinger(FingerState finger, FingerGestureState fingerGesture)
	{
		return default(float);
	}
}
[Token(Token = "0x20001F1")]
public class FingerVirtuosoGesture : HandGesture
{
	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float FingersVelocity;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform IndexTip;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform IndexMiddle;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform ThumbTip;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform MiddleTip;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform RingTip;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform PinkyTip;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Transform> FingersTips;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float[] distanceToFingersTips;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float[] prevDistanceToFingersTips;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] fingerTipsDelta;

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x112CC08", Offset = "0x112CC08", VA = "0x112CC08")]
	public FingerVirtuosoGesture(Transform indexTip, Transform indexMiddle, Transform thumbTip, Transform middleTip, Transform ringTip, Transform pinkyTip)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x112D44C", Offset = "0x112D44C", VA = "0x112D44C", Slot = "4")]
	public override bool CheckGesture(InteractiveHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x112D8D0", Offset = "0x112D8D0", VA = "0x112D8D0")]
	public float CheckFinger(FingerState finger, FingerGestureState fingerGesture)
	{
		return default(float);
	}
}
[Token(Token = "0x20001F2")]
public class FingerGestureState
{
	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FingerType fingerType;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float MinClosingValue;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxClosingValue;

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x112C220", Offset = "0x112C220", VA = "0x112C220")]
	public FingerGestureState(FingerType fingerType, float min, float max)
	{
	}
}
[Token(Token = "0x20001F3")]
public class HornsHandGesture : HandGesture
{
	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x112D910", Offset = "0x112D910", VA = "0x112D910")]
	public HornsHandGesture()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x112DA78", Offset = "0x112DA78", VA = "0x112DA78", Slot = "4")]
	public override bool CheckGesture(InteractiveHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x112DC74", Offset = "0x112DC74", VA = "0x112DC74")]
	public float CheckFinger(FingerState finger, FingerGestureState fingerGesture)
	{
		return default(float);
	}
}
[Token(Token = "0x20001F4")]
public class HandnessController : MonoBehaviour
{
	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 LeftyScale;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 RightyScale;

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x112DCB4", Offset = "0x112DCB4", VA = "0x112DCB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x112DE8C", Offset = "0x112DE8C", VA = "0x112DE8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x112DDF0", Offset = "0x112DDF0", VA = "0x112DDF0")]
	private void InteractionSystem_HandDominanceChanged()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x112DFC0", Offset = "0x112DFC0", VA = "0x112DFC0")]
	public HandnessController()
	{
	}
}
[Token(Token = "0x20001F5")]
public abstract class HandSkeletonController : MonoBehaviour
{
	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandSkeletonInfo Skeleton;

	[Token(Token = "0x6000B69")]
	public abstract void UpdateHandSkeleton();

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x112E034", Offset = "0x112E034", VA = "0x112E034")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x1126774", Offset = "0x1126774", VA = "0x1126774")]
	protected HandSkeletonController()
	{
	}
}
[Token(Token = "0x20001F6")]
public class HandSkeletonControllerOculusTest : HandSkeletonController
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractiveHandSteamVR hand;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Transform> fingerBones;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float smoothThumb;

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x112E040", Offset = "0x112E040", VA = "0x112E040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x112E4CC", Offset = "0x112E4CC", VA = "0x112E4CC", Slot = "4")]
	public override void UpdateHandSkeleton()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x112E794", Offset = "0x112E794", VA = "0x112E794")]
	public HandSkeletonControllerOculusTest()
	{
	}
}
[Token(Token = "0x20001F7")]
public class InteractableObject : MonoBehaviour
{
	[Token(Token = "0x20001F8")]
	public enum AvailableHands
	{
		[Token(Token = "0x4000B60")]
		Both,
		[Token(Token = "0x4000B61")]
		Primary,
		[Token(Token = "0x4000B62")]
		Secondary
	}

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool CanGrab;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float GrabbingThreshold;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float DropThreshold;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool DropWhenLoseTracking;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool CanTouch;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool OnlyIndexTouch;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	public bool OnlyPinchToGrab;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ProtectGrabInInitialTouch;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float PinchGrabDropThershold;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AvailableHands EnabledForHands;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool IsGrabbed;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool IsTouched;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Collider CurrentTouchingCollider;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InteractiveHand TouchingHand;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public InteractiveHand GrabbingHand;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool IsExclusiveTouch;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool DropWithButtons;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	internal bool handWasGrabbingBeforeTouch;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Collider interactiveArea;

	[Token(Token = "0x14000060")]
	public event Action Destroyed
	{
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x112E81C", Offset = "0x112E81C", VA = "0x112E81C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x112E8B8", Offset = "0x112E8B8", VA = "0x112E8B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000061")]
	public event Action<InteractiveHand> Grabbed
	{
		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x111E994", Offset = "0x111E994", VA = "0x111E994")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1124108", Offset = "0x1124108", VA = "0x1124108")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000062")]
	public event Action<InteractiveHand> GrabUpdate
	{
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x112E954", Offset = "0x112E954", VA = "0x112E954")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x112EA04", Offset = "0x112EA04", VA = "0x112EA04")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000063")]
	public event Action<InteractiveHand> Dropped
	{
		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x111EA44", Offset = "0x111EA44", VA = "0x111EA44")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x11241B8", Offset = "0x11241B8", VA = "0x11241B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000064")]
	public event Action<InteractiveHand> Touched
	{
		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x111E834", Offset = "0x111E834", VA = "0x111E834")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x112A6CC", Offset = "0x112A6CC", VA = "0x112A6CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000065")]
	public event Action<InteractiveHand> Untouched
	{
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x111E8E4", Offset = "0x111E8E4", VA = "0x111E8E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x112A77C", Offset = "0x112A77C", VA = "0x112A77C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x112A4CC", Offset = "0x112A4CC", VA = "0x112A4CC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x112A82C", Offset = "0x112A82C", VA = "0x112A82C", Slot = "5")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x112ECE4", Offset = "0x112ECE4", VA = "0x112ECE4", Slot = "6")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x112EBDC", Offset = "0x112EBDC", VA = "0x112EBDC")]
	public void ResetProperties()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x112EDB4", Offset = "0x112EDB4", VA = "0x112EDB4", Slot = "7")]
	public virtual void OnTouched(InteractiveHand hand, Collider touchingCollider)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x112EE14", Offset = "0x112EE14", VA = "0x112EE14", Slot = "8")]
	public virtual void OnUnTouched(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x112EE70", Offset = "0x112EE70", VA = "0x112EE70", Slot = "9")]
	public virtual void OnGrabbed(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x112EEC0", Offset = "0x112EEC0", VA = "0x112EEC0", Slot = "10")]
	public virtual void GrabbedUpdated(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x112EEDC", Offset = "0x112EEDC", VA = "0x112EEDC", Slot = "11")]
	public virtual void OnDropped(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x112EF2C", Offset = "0x112EF2C", VA = "0x112EF2C")]
	public void Drop()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x111F20C", Offset = "0x111F20C", VA = "0x111F20C")]
	public InteractableObject()
	{
	}
}
[Token(Token = "0x20001F9")]
public class InteractionSystem : MonoBehaviour
{
	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve fingerColorCurve;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlatformRigSelector PlatformRig;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractiveHand LeftHand;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InteractiveHand RightHand;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material RightHandMaterial;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material LeftHandMaterial;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material RightHandControllerMaterial;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material LeftHandControllerMaterial;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool IsSetupLeftHanded;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static InteractionSystem I;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<float> SensibilityMin;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<float> SensibilityMax;

	[Token(Token = "0x170000C9")]
	public InteractiveHand PrimaryHand
	{
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x111F888", Offset = "0x111F888", VA = "0x111F888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CA")]
	public InteractiveHand SecondaryHand
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x1122284", Offset = "0x1122284", VA = "0x1122284")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CB")]
	public Transform AnchorPlayer
	{
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x112F070", Offset = "0x112F070", VA = "0x112F070")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000066")]
	public static event Action HandDominanceChanged
	{
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x112DD38", Offset = "0x112DD38", VA = "0x112DD38")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x112DF08", Offset = "0x112DF08", VA = "0x112DF08")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x112F094", Offset = "0x112F094", VA = "0x112F094")]
	public static void SetHandDominance(bool PlayerIsLeftHanded)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x112F1F8", Offset = "0x112F1F8", VA = "0x112F1F8")]
	private static void UpdateMaterials()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x112F348", Offset = "0x112F348", VA = "0x112F348")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x112FFF0", Offset = "0x112FFF0", VA = "0x112FFF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x1130118", Offset = "0x1130118", VA = "0x1130118")]
	public InteractionSystem()
	{
	}
}
[Token(Token = "0x20001FA")]
public class InteractiveHand : MonoBehaviour
{
	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isHidden;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandSkeletonInfo SkeletonInfo;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRPlatformControllerBase Controller;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool IsLeftHand;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool IsGrabbing;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InteractableObject CurrentGrabbed;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InteractableObject LastGrabbed;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool IsPrimaryHand;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform IndexMiddle;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FingerState ThumbState;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FingerState IndexState;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FingerState MiddleState;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FingerState RingState;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FingerState PinkyState;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ColliderArea colliderArea;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ColliderArea colliderIndexArea;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<FingerState> Fingers;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Renderer HandRender;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform GrabPivot;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector3 Velocity;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 IndexVelocity;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int MomentaryLostTrackingCount;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int LongLostTrackingCount;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	internal List<InteractableObject> TouchingObjects;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public InteractableObject potentialGrabObject;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float HandClosedIndex;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float HandClosedIndexOnPotentialGrabObject;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public HandTrackingStates TrackingState;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float TrackingLostAccumulatedTime;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool GrabIsLocked;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	internal bool handClosed;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	internal bool prevHandClosed;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	internal bool prevIsTracked;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	internal float OpenIndexOnGrab;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	internal Vector3 prevPosition;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	internal Vector3 prevPositionIndex;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	internal OpenHandGesture handOpenGesture;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	internal PinchGrabHandGesture handPinchGrabGesture;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	internal FingerVirtuosoGesture fingerVirtuosoGesture;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	internal bool LostTrackingFrameCounted;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	internal List<float> TrackingLostTimesDuringSong;

	[Token(Token = "0x170000CC")]
	public virtual bool IsTracked
	{
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1130260", Offset = "0x1130260", VA = "0x1130260", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CD")]
	public Transform IndexTip
	{
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x11300FC", Offset = "0x11300FC", VA = "0x11300FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CE")]
	public Transform ThumbTip
	{
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1130268", Offset = "0x1130268", VA = "0x1130268")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CF")]
	public Transform MiddleTip
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x1130284", Offset = "0x1130284", VA = "0x1130284")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D0")]
	public Transform RingTip
	{
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x11302A0", Offset = "0x11302A0", VA = "0x11302A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D1")]
	public Transform PinkyTip
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x11302BC", Offset = "0x11302BC", VA = "0x11302BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D2")]
	public bool IsClosed
	{
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x11302D8", Offset = "0x11302D8", VA = "0x11302D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D3")]
	public float FingersVelocity
	{
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x11302E0", Offset = "0x11302E0", VA = "0x11302E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000067")]
	public event Action TrackingTooWeak
	{
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x1130128", Offset = "0x1130128", VA = "0x1130128")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x11301C4", Offset = "0x11301C4", VA = "0x11301C4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x11302FC", Offset = "0x11302FC", VA = "0x11302FC", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x1130530", Offset = "0x1130530", VA = "0x1130530")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x1130688", Offset = "0x1130688", VA = "0x1130688")]
	public void Grab(InteractableObject grabObj)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x1130750", Offset = "0x1130750", VA = "0x1130750")]
	public void LockGrabbing()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x1130764", Offset = "0x1130764", VA = "0x1130764")]
	public void UnlockGrabbing()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x112EFB4", Offset = "0x112EFB4", VA = "0x112EFB4")]
	public void Drop()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x112EAB4", Offset = "0x112EAB4", VA = "0x112EAB4")]
	public void InteractableDestroyed(InteractableObject obj)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x113076C", Offset = "0x113076C", VA = "0x113076C")]
	public void CheckLastGrabbed()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1130834", Offset = "0x1130834", VA = "0x1130834")]
	private void OnAreaTriggerStay(ColliderArea sender, Collider other)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1130CC8", Offset = "0x1130CC8", VA = "0x1130CC8")]
	private void OnAreaTriggerExit(ColliderArea sender, Collider other)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x1130C40", Offset = "0x1130C40", VA = "0x1130C40")]
	private bool CheckTouchExclusive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x1130BA4", Offset = "0x1130BA4", VA = "0x1130BA4")]
	private bool CheckOnlyIndexObject(InteractableObject grabbable, Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1130AB4", Offset = "0x1130AB4", VA = "0x1130AB4")]
	private bool CheckEnabledHand(InteractableObject.AvailableHands hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x1130E34", Offset = "0x1130E34", VA = "0x1130E34")]
	internal void RaiseTrackingWeak()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x1130E38", Offset = "0x1130E38", VA = "0x1130E38")]
	private void DebugHand()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x1131238", Offset = "0x1131238", VA = "0x1131238")]
	internal void ResetTrackingCounter()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x113128C", Offset = "0x113128C", VA = "0x113128C", Slot = "6")]
	internal virtual void CheckTracking()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x1131290", Offset = "0x1131290", VA = "0x1131290")]
	internal void UpdateFingers()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x11313D8", Offset = "0x11313D8", VA = "0x11313D8")]
	public InteractiveHand()
	{
	}
}
[Token(Token = "0x20001FB")]
public enum HandTrackingStates
{
	[Token(Token = "0x4000B9C")]
	Tracked,
	[Token(Token = "0x4000B9D")]
	MomentarilyDisappeared,
	[Token(Token = "0x4000B9E")]
	Lost
}
[Token(Token = "0x20001FC")]
public class InteractiveHandOculus : InteractiveHand
{
	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public OVRHand ovrHand;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public OVRSkeleton ovrSkeleton;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public HandSkeletonController skeletonController;

	[Token(Token = "0x170000D4")]
	public override bool IsTracked
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x11314B0", Offset = "0x11314B0", VA = "0x11314B0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x11315C0", Offset = "0x11315C0", VA = "0x11315C0", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x1131714", Offset = "0x1131714", VA = "0x1131714")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x1131B84", Offset = "0x1131B84", VA = "0x1131B84")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x113241C", Offset = "0x113241C", VA = "0x113241C", Slot = "6")]
	internal override void CheckTracking()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x113274C", Offset = "0x113274C", VA = "0x113274C")]
	public InteractiveHandOculus()
	{
	}
}
[Token(Token = "0x20001FE")]
[DefaultExecutionOrder(-10)]
public class InteractiveHandSteamVR : InteractiveHand
{
	[Token(Token = "0x170000D5")]
	public override bool IsTracked
	{
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x11327F8", Offset = "0x11327F8", VA = "0x11327F8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x1132800", Offset = "0x1132800", VA = "0x1132800", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x1132968", Offset = "0x1132968", VA = "0x1132968")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x1132DD8", Offset = "0x1132DD8", VA = "0x1132DD8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x1133658", Offset = "0x1133658", VA = "0x1133658", Slot = "6")]
	internal override void CheckTracking()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x113365C", Offset = "0x113365C", VA = "0x113365C")]
	public InteractiveHandSteamVR()
	{
	}
}
[Token(Token = "0x20001FF")]
public class PlatformRigSelector : MonoBehaviour
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject OculusRig;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SteamVRRig;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PicoXRRig;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> HeadContents;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject CurrentRig;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Managers;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x1133660", Offset = "0x1133660", VA = "0x1133660")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x112FCD0", Offset = "0x112FCD0", VA = "0x112FCD0")]
	public InteractiveHand GetLeftHand()
	{
		return null;
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x112FE60", Offset = "0x112FE60", VA = "0x112FE60")]
	public InteractiveHand GetRightHand()
	{
		return null;
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x1133820", Offset = "0x1133820", VA = "0x1133820")]
	public PlatformRigSelector()
	{
	}
}
[Token(Token = "0x2000201")]
public class PopUpController : MonoBehaviour
{
	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int NextMaskChannel;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int CurrentChannel;

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x11297AC", Offset = "0x11297AC", VA = "0x11297AC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x11338D8", Offset = "0x11338D8", VA = "0x11338D8")]
	public void SetChannel(int channel)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x1133A34", Offset = "0x1133A34", VA = "0x1133A34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1129CB8", Offset = "0x1129CB8", VA = "0x1129CB8")]
	public PopUpController()
	{
	}
}
[Token(Token = "0x2000202")]
public class PressableButton : UIElement
{
	[Token(Token = "0x2000203")]
	[CompilerGenerated]
	private sealed class <WaitToRaisePressed>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PressableButton <>4__this;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x1136A94", Offset = "0x1136A94", VA = "0x1136A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x1136ADC", Offset = "0x1136ADC", VA = "0x1136ADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1136978", Offset = "0x1136978", VA = "0x1136978")]
		[DebuggerHidden]
		public <WaitToRaisePressed>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x11369A0", Offset = "0x11369A0", VA = "0x11369A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x11369A4", Offset = "0x11369A4", VA = "0x11369A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x1136A9C", Offset = "0x1136A9C", VA = "0x1136A9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000204")]
	[CompilerGenerated]
	private sealed class <WaitToEnable>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PressableButton <>4__this;

		[Token(Token = "0x170000D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x1136BC4", Offset = "0x1136BC4", VA = "0x1136BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x1136C0C", Offset = "0x1136C0C", VA = "0x1136C0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1136AE4", Offset = "0x1136AE4", VA = "0x1136AE4")]
		[DebuggerHidden]
		public <WaitToEnable>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1136B0C", Offset = "0x1136B0C", VA = "0x1136B0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1136B10", Offset = "0x1136B10", VA = "0x1136B10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1136BCC", Offset = "0x1136BCC", VA = "0x1136BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityEvent OnPressed;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string Text;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool IsPressed;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip OnClickSound;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform FrontPanel;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform MinAnchor;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform MaxAnchor;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Image ExpandFX;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ParticleSystem feedbackPS;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<ColoredAsset> InitialColors;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private BoxCollider interactionCollider;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Color currentExpandColor;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Tween expandColorTween;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool blockedWhilePressing;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool showingFeedback;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform FeedforwardFX;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public InteractableObject feedbackArea;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AudioSource audioSource;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected float PressingIndex;

	[Token(Token = "0x14000068")]
	public event Action Pressed
	{
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1129830", Offset = "0x1129830", VA = "0x1129830")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x11299A4", Offset = "0x11299A4", VA = "0x11299A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x1133B98", Offset = "0x1133B98", VA = "0x1133B98", Slot = "12")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x1133BA8", Offset = "0x1133BA8", VA = "0x1133BA8", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x1133F58", Offset = "0x1133F58", VA = "0x1133F58", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x11340AC", Offset = "0x11340AC", VA = "0x11340AC", Slot = "15")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x11346B8", Offset = "0x11346B8", VA = "0x11346B8")]
	[IteratorStateMachine(typeof(<WaitToRaisePressed>d__26))]
	private IEnumerator WaitToRaisePressed()
	{
		return null;
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x113472C", Offset = "0x113472C", VA = "0x113472C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x1134734", Offset = "0x1134734", VA = "0x1134734")]
	[IteratorStateMachine(typeof(<WaitToEnable>d__28))]
	private IEnumerator WaitToEnable()
	{
		return null;
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x1133E7C", Offset = "0x1133E7C", VA = "0x1133E7C")]
	public void OnTextChanged()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x1134AD0", Offset = "0x1134AD0", VA = "0x1134AD0")]
	private void OnRectTransformDimensionsChange()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x1134488", Offset = "0x1134488", VA = "0x1134488")]
	private void SetFeedforwarCubeSize()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x11347A8", Offset = "0x11347A8", VA = "0x11347A8")]
	private void SetColliderSize()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x1134AE8", Offset = "0x1134AE8", VA = "0x1134AE8")]
	private void FeedbackArea_Touched(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1134C28", Offset = "0x1134C28", VA = "0x1134C28")]
	private void FeedBackArea_UnTouched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1134D90", Offset = "0x1134D90", VA = "0x1134D90")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x1134E44", Offset = "0x1134E44", VA = "0x1134E44", Slot = "16")]
	public override void SetColorOpacity()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x11351F4", Offset = "0x11351F4", VA = "0x11351F4")]
	private void GetInitialAssets()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1135970", Offset = "0x1135970", VA = "0x1135970")]
	public PressableButton()
	{
	}
}
[Token(Token = "0x2000205")]
public struct ColoredAsset
{
	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public object Asset;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Color Color;
}
[Token(Token = "0x2000206")]
public class ProgressBar : MonoBehaviour
{
	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float value;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material material;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int ThersholdPropertyId;

	[Token(Token = "0x170000DA")]
	public float Value
	{
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1136C14", Offset = "0x1136C14", VA = "0x1136C14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1136C1C", Offset = "0x1136C1C", VA = "0x1136C1C")]
		set
		{
		}
	}

	[Token(Token = "0x14000069")]
	public event ValueChangedHandler OnValueChanged
	{
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x1136DA8", Offset = "0x1136DA8", VA = "0x1136DA8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1136E44", Offset = "0x1136E44", VA = "0x1136E44")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x1136C64", Offset = "0x1136C64", VA = "0x1136C64")]
	private void SetValue(float prevValue, float value)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x1136EE0", Offset = "0x1136EE0", VA = "0x1136EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x1136FF8", Offset = "0x1136FF8", VA = "0x1136FF8")]
	public ProgressBar()
	{
	}
}
[Token(Token = "0x2000207")]
public delegate void ValueChangedHandler(float prevValue, float value);
[Token(Token = "0x2000208")]
public class RadialProgressBar : MonoBehaviour
{
	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material barMaterial;

	[Token(Token = "0x170000DB")]
	public float Value
	{
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x11372A4", Offset = "0x11372A4", VA = "0x11372A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1137324", Offset = "0x1137324", VA = "0x1137324")]
		set
		{
		}
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x11371E8", Offset = "0x11371E8", VA = "0x11371E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x1137410", Offset = "0x1137410", VA = "0x1137410")]
	public RadialProgressBar()
	{
	}
}
[Token(Token = "0x2000209")]
public class RadioButton : PressableButton
{
	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Image SelectedVisual;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Color CheckedColor;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Color UnCheckedColor;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool isChecked;

	[Token(Token = "0x170000DC")]
	public bool IsChecked
	{
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1137580", Offset = "0x1137580", VA = "0x1137580")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1137588", Offset = "0x1137588", VA = "0x1137588")]
		set
		{
		}
	}

	[Token(Token = "0x1400006A")]
	public event Action<bool> CheckedChanged
	{
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1137418", Offset = "0x1137418", VA = "0x1137418")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x11374CC", Offset = "0x11374CC", VA = "0x11374CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x11377BC", Offset = "0x11377BC", VA = "0x11377BC", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x1137854", Offset = "0x1137854", VA = "0x1137854")]
	private void ToggleButton_Pressed()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x1137594", Offset = "0x1137594", VA = "0x1137594")]
	internal void SetChecked()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x1137884", Offset = "0x1137884", VA = "0x1137884")]
	public RadioButton()
	{
	}
}
[Token(Token = "0x200020A")]
public class TemplateInfo : MonoBehaviour
{
	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color InitialColor;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IgnoreOpacity;

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x113788C", Offset = "0x113788C", VA = "0x113788C")]
	public TemplateInfo()
	{
	}
}
[Token(Token = "0x200020B")]
public class TextLabel : UIElement
{
	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string Text;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private TextMeshPro textLabel;

	[Token(Token = "0x170000DD")]
	private TextMeshPro tmpro
	{
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x113789C", Offset = "0x113789C", VA = "0x113789C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x1137944", Offset = "0x1137944", VA = "0x1137944", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x1137A10", Offset = "0x1137A10", VA = "0x1137A10", Slot = "16")]
	public override void SetColorOpacity()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x113795C", Offset = "0x113795C", VA = "0x113795C")]
	protected void OnTextChanged()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x1137B20", Offset = "0x1137B20", VA = "0x1137B20")]
	public TextLabel()
	{
	}
}
[Token(Token = "0x200020C")]
public class ToggleButton : PressableButton
{
	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Color CheckedColor;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Color UnCheckedColor;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject CheckedIcon;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public MeshRenderer backgroundRenderer;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool isChecked;

	[Token(Token = "0x170000DE")]
	public bool IsChecked
	{
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1137CE0", Offset = "0x1137CE0", VA = "0x1137CE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1137CE8", Offset = "0x1137CE8", VA = "0x1137CE8")]
		set
		{
		}
	}

	[Token(Token = "0x1400006B")]
	public event Action<bool> CheckedChanged
	{
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1137B78", Offset = "0x1137B78", VA = "0x1137B78")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1137C2C", Offset = "0x1137C2C", VA = "0x1137C2C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x1137D98", Offset = "0x1137D98", VA = "0x1137D98")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x1137E30", Offset = "0x1137E30", VA = "0x1137E30")]
	private void ToggleButton_Pressed()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x1137CF4", Offset = "0x1137CF4", VA = "0x1137CF4")]
	internal void SetChecked()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x1137E5C", Offset = "0x1137E5C", VA = "0x1137E5C")]
	public ToggleButton()
	{
	}
}
[Token(Token = "0x200020D")]
public class UIElement : InteractableObject
{
	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float Opacity;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float DisabledOpacity;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color ForegroundColor;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool StartDisabled;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool IgnoreLocalization;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected Color clearColor;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float prevOpacity;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isDisabled;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected float internalDisabledOpacity;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool IsInitialized;

	[Token(Token = "0x170000DF")]
	public bool IsDisabled
	{
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1137E64", Offset = "0x1137E64", VA = "0x1137E64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1137E6C", Offset = "0x1137E6C", VA = "0x1137E6C")]
		set
		{
		}
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x11380C0", Offset = "0x11380C0", VA = "0x11380C0", Slot = "12")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x11379CC", Offset = "0x11379CC", VA = "0x11379CC", Slot = "13")]
	public new virtual void Start()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x11380C4", Offset = "0x11380C4", VA = "0x11380C4")]
	public static void InitializeAllUI()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1138188", Offset = "0x1138188", VA = "0x1138188", Slot = "14")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x11381AC", Offset = "0x11381AC", VA = "0x11381AC", Slot = "15")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x11381F0", Offset = "0x11381F0", VA = "0x11381F0", Slot = "16")]
	public virtual void SetColorOpacity()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1137B4C", Offset = "0x1137B4C", VA = "0x1137B4C")]
	public UIElement()
	{
	}
}
[Token(Token = "0x200020E")]
public class WarningPanelController : PopUpController
{
	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Scale;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PressableButton OkayButton;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro Message;

	[Token(Token = "0x1400006C")]
	public event Action WarningPanelClosed
	{
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1138234", Offset = "0x1138234", VA = "0x1138234")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x11382D0", Offset = "0x11382D0", VA = "0x11382D0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x113836C", Offset = "0x113836C", VA = "0x113836C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x11384F4", Offset = "0x11384F4", VA = "0x11384F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x11385C8", Offset = "0x11385C8", VA = "0x11385C8")]
	public void SetText(string message)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x11385EC", Offset = "0x11385EC", VA = "0x11385EC")]
	private void OkayButton_Pressed()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x113865C", Offset = "0x113865C", VA = "0x113865C")]
	public void DestroyObject()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x11386E0", Offset = "0x11386E0", VA = "0x11386E0")]
	public void ClosePanel()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x11386E4", Offset = "0x11386E4", VA = "0x11386E4")]
	public WarningPanelController()
	{
	}
}
[Token(Token = "0x200020F")]
public class IntroController : MonoBehaviour
{
	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action IntroEnds;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static IntroController I;

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x1138744", Offset = "0x1138744", VA = "0x1138744")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x1138794", Offset = "0x1138794", VA = "0x1138794")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x1138844", Offset = "0x1138844", VA = "0x1138844")]
	public void EndIntro()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x11388A8", Offset = "0x11388A8", VA = "0x11388A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x11388F4", Offset = "0x11388F4", VA = "0x11388F4")]
	public void DestroyIntro()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x1138990", Offset = "0x1138990", VA = "0x1138990")]
	public IntroController()
	{
	}
}
[Token(Token = "0x2000210")]
public class IntroLogosController : MonoBehaviour
{
	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x1138998", Offset = "0x1138998", VA = "0x1138998")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x1138A48", Offset = "0x1138A48", VA = "0x1138A48")]
	public IntroLogosController()
	{
	}
}
[Token(Token = "0x2000211")]
public interface IPurchasable
{
	[Token(Token = "0x170000E0")]
	bool IsPurchased
	{
		[Token(Token = "0x6000C2F")]
		get;
		[Token(Token = "0x6000C30")]
		set;
	}

	[Token(Token = "0x170000E1")]
	int ItemPrice
	{
		[Token(Token = "0x6000C31")]
		get;
	}

	[Token(Token = "0x1400006D")]
	event Action OnPurchase;
}
[Token(Token = "0x2000212")]
public class LatencyController : MonoBehaviour
{
	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Note;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform MaxAnchor;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform MinAnchor;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentLatency;

	[Token(Token = "0x170000E2")]
	public float CurrentLatency
	{
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x1138A50", Offset = "0x1138A50", VA = "0x1138A50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x1138A58", Offset = "0x1138A58", VA = "0x1138A58")]
		set
		{
		}
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x1138B30", Offset = "0x1138B30", VA = "0x1138B30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x1138A5C", Offset = "0x1138A5C", VA = "0x1138A5C")]
	public void SetLatency(float latency)
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x1138BA8", Offset = "0x1138BA8", VA = "0x1138BA8")]
	public LatencyController()
	{
	}
}
[Token(Token = "0x2000213")]
public class LightProjection : MonoBehaviour
{
	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableProjections;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> LightTextures;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Camera> ProjectionSources;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Renderer> ProjectedObjects;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRDeviceTypes SupportedDevice;

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x1138BB0", Offset = "0x1138BB0", VA = "0x1138BB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x1138E68", Offset = "0x1138E68", VA = "0x1138E68")]
	public void PrepareObjectsForProjection()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x1138C94", Offset = "0x1138C94", VA = "0x1138C94")]
	public void DisableObjectsForProjection()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x113935C", Offset = "0x113935C", VA = "0x113935C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x1139734", Offset = "0x1139734", VA = "0x1139734")]
	public LightProjection()
	{
	}
}
[Serializable]
[Token(Token = "0x2000214")]
public class Resource<T>
{
	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string Key;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T Value;

	[Token(Token = "0x6000C3E")]
	public Resource()
	{
	}
}
[Token(Token = "0x2000215")]
[CreateAssetMenu(menuName = "Location System/Create Location Scriptable")]
public class LocalizationData : ScriptableObject
{
	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string CultureInfoCode;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Resource<string>> Texts;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Resource<Texture>> Textures;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Resource<AudioClip>> Audios;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<LocalizedFont> Fonts;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LocalizedFont bernierFont;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LocalizedFont rashkeyFont;

	[Token(Token = "0x170000E3")]
	public LocalizedFont BernierFont
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1139744", Offset = "0x1139744", VA = "0x1139744")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E4")]
	public LocalizedFont RashkeyFont
	{
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x11397F8", Offset = "0x11397F8", VA = "0x11397F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x11398AC", Offset = "0x11398AC", VA = "0x11398AC")]
	public string GetText(string key)
	{
		return null;
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x1139904", Offset = "0x1139904", VA = "0x1139904")]
	public Texture GetTexture(string key)
	{
		return null;
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x113995C", Offset = "0x113995C", VA = "0x113995C")]
	public AudioClip GetAudio(string key)
	{
		return null;
	}

	[Token(Token = "0x6000C44")]
	public static T GetValue<T>(List<Resource<T>> resources, string key)
	{
		return (T)null;
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x11399B4", Offset = "0x11399B4", VA = "0x11399B4")]
	public LocalizationData()
	{
	}
}
[Token(Token = "0x2000217")]
public class LocalizationManager : MonoBehaviour
{
	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static LocalizationManager I;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LocalizationData currentLocalization;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> AvailableLanguages;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<FallbackLanguages> FallbackLanguages;

	[Token(Token = "0x170000E5")]
	internal static LocalizationData CurrentLocalization
	{
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1139B2C", Offset = "0x1139B2C", VA = "0x1139B2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1139E00", Offset = "0x1139E00", VA = "0x1139E00")]
		set
		{
		}
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x1139E50", Offset = "0x1139E50", VA = "0x1139E50")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x1139EA8", Offset = "0x1139EA8", VA = "0x1139EA8")]
	public static LocalizedFont GetFont(LocalizedFont.FontTypes font)
	{
		return null;
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x1137A78", Offset = "0x1137A78", VA = "0x1137A78")]
	public static string GetText(string key)
	{
		return null;
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x1139EE8", Offset = "0x1139EE8", VA = "0x1139EE8")]
	public static Texture GetTexture(string key)
	{
		return null;
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x1139F08", Offset = "0x1139F08", VA = "0x1139F08")]
	public static AudioClip GetAudio(string key)
	{
		return null;
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x1139BE8", Offset = "0x1139BE8", VA = "0x1139BE8")]
	public static void SetLanguage(CultureInfo culture)
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x113A1E8", Offset = "0x113A1E8", VA = "0x113A1E8")]
	private static bool LanguageShouldFallbackToEnglish(CultureInfo culture)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x1139F28", Offset = "0x1139F28", VA = "0x1139F28")]
	public static CultureInfo GetFallBackLanguage(string langCode)
	{
		return null;
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x113A28C", Offset = "0x113A28C", VA = "0x113A28C")]
	public LocalizationManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000219")]
public class LocalizedFont
{
	[Serializable]
	[Token(Token = "0x200021A")]
	public enum FontTypes
	{
		[Token(Token = "0x4000C0A")]
		BernierLike,
		[Token(Token = "0x4000C0B")]
		RashkeyLike
	}

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public TMP_FontAsset Font;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public FontTypes FontType;

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x113A398", Offset = "0x113A398", VA = "0x113A398")]
	public LocalizedFont()
	{
	}
}
[Serializable]
[Token(Token = "0x200021B")]
public class FallbackLanguages
{
	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string LanguageCode;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string FallbackLanguageCode;

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x113A3A0", Offset = "0x113A3A0", VA = "0x113A3A0")]
	public FallbackLanguages()
	{
	}
}
[Token(Token = "0x200021C")]
public class LocalizedTextController : MonoBehaviour
{
	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string LocalizedStringID;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IgnoreLocalization;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LocalizedFont.FontTypes FontType;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool ResetMinSize;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool AutoSize;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float intialMaxSize;

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x113A3A8", Offset = "0x113A3A8", VA = "0x113A3A8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x113A640", Offset = "0x113A640", VA = "0x113A640")]
	public LocalizedTextController()
	{
	}
}
[Token(Token = "0x200021D")]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Offset;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Velocity;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsHorizontalLock;

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x113A650", Offset = "0x113A650", VA = "0x113A650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x113A7D4", Offset = "0x113A7D4", VA = "0x113A7D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x113AB9C", Offset = "0x113AB9C", VA = "0x113AB9C")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x200021E")]
public class MLHandRecognitionManager : MonoBehaviour
{
	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<FingerType> PredictedFingerList;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] PredictedFingerCurls;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static MLHandRecognitionManager I;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HandPoseData CurrentHand;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastPredictionTime;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x113ABAC", Offset = "0x113ABAC", VA = "0x113ABAC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x113ACE0", Offset = "0x113ACE0", VA = "0x113ACE0")]
	public static List<FingerType> GetCurrentHandPose()
	{
		return null;
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x113AD48", Offset = "0x113AD48", VA = "0x113AD48")]
	public static float[] GetCurrentPredictedFingerCurls()
	{
		return null;
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x113AD90", Offset = "0x113AD90", VA = "0x113AD90")]
	public MLHandRecognitionManager()
	{
	}
}
[Token(Token = "0x200021F")]
public class HandPoseData
{
	[Token(Token = "0x170000E6")]
	public string HandPoseType
	{
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x113AD98", Offset = "0x113AD98", VA = "0x113AD98")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x113ADA0", Offset = "0x113ADA0", VA = "0x113ADA0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public float IndexCurl
	{
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x113ADA8", Offset = "0x113ADA8", VA = "0x113ADA8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x113ADB0", Offset = "0x113ADB0", VA = "0x113ADB0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public float MiddleCurl
	{
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x113ADB8", Offset = "0x113ADB8", VA = "0x113ADB8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x113ADC0", Offset = "0x113ADC0", VA = "0x113ADC0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public float RingCurl
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x113ADC8", Offset = "0x113ADC8", VA = "0x113ADC8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x113ADD0", Offset = "0x113ADD0", VA = "0x113ADD0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public float PinkyCurl
	{
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x113ADD8", Offset = "0x113ADD8", VA = "0x113ADD8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x113ADE0", Offset = "0x113ADE0", VA = "0x113ADE0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x113ACD8", Offset = "0x113ACD8", VA = "0x113ACD8")]
	public HandPoseData()
	{
	}
}
[Token(Token = "0x2000220")]
public class HandPrediction
{
	[Token(Token = "0x170000EB")]
	public string handPoseType
	{
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x113ADE8", Offset = "0x113ADE8", VA = "0x113ADE8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x113ADF0", Offset = "0x113ADF0", VA = "0x113ADF0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x113ADF8", Offset = "0x113ADF8", VA = "0x113ADF8")]
	public HandPrediction()
	{
	}
}
[Token(Token = "0x2000221")]
public class Math3d
{
	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform tempChild;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Transform tempParent;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3[] positionRegister;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[] posTimeRegister;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int positionSamplesTaken;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Quaternion[] rotationRegister;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float[] rotTimeRegister;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int rotationSamplesTaken;

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x113AE00", Offset = "0x113AE00", VA = "0x113AE00")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x113AFD8", Offset = "0x113AFD8", VA = "0x113AFD8")]
	public static Vector2 GetPointOnSpline(float percentage, Vector2[] cPoints)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x113B144", Offset = "0x113B144", VA = "0x113B144")]
	public static float[] GetLineSplineIntersections(Vector2[] linePoints, Vector2[] cPoints)
	{
		return null;
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x113B560", Offset = "0x113B560", VA = "0x113B560")]
	private static void SolveCubic(out int nRoots, out float x1, out float x2, out float x3, float a, float b, float c, float d)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x113B760", Offset = "0x113B760", VA = "0x113B760")]
	private static float CubeRoot(float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x113B798", Offset = "0x113B798", VA = "0x113B798")]
	public static Vector3 AddVectorLength(Vector3 vector, float size)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x113B828", Offset = "0x113B828", VA = "0x113B828")]
	public static Vector3 SetVectorLength(Vector3 vector, float size)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x113B908", Offset = "0x113B908", VA = "0x113B908")]
	public static Quaternion SubtractRotation(Quaternion B, Quaternion A)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x113B9BC", Offset = "0x113B9BC", VA = "0x113B9BC")]
	public static Quaternion AddRotation(Quaternion A, Quaternion B)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x113BA30", Offset = "0x113BA30", VA = "0x113BA30")]
	public static Vector3 TransformDirectionMath(Quaternion rotation, Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x113BA38", Offset = "0x113BA38", VA = "0x113BA38")]
	public static Vector3 InverseTransformDirectionMath(Quaternion rotation, Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x113BA78", Offset = "0x113BA78", VA = "0x113BA78")]
	public static Vector3 RotateVectorFromTo(Quaternion from, Quaternion to, Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x113BB68", Offset = "0x113BB68", VA = "0x113BB68")]
	public static bool PlanePlaneIntersection(out Vector3 linePoint, out Vector3 lineVec, Vector3 plane1Normal, Vector3 plane1Position, Vector3 plane2Normal, Vector3 plane2Position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x113BCE8", Offset = "0x113BCE8", VA = "0x113BCE8")]
	public static bool LinePlaneIntersection(out Vector3 intersection, Vector3 linePoint, Vector3 lineVec, Vector3 planeNormal, Vector3 planePoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x113BE14", Offset = "0x113BE14", VA = "0x113BE14")]
	public static bool LineLineIntersection(out Vector3 intersection, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x113BF58", Offset = "0x113BF58", VA = "0x113BF58")]
	public static bool ClosestPointsOnTwoLines(out Vector3 closestPointLine1, out Vector3 closestPointLine2, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x113C118", Offset = "0x113C118", VA = "0x113C118")]
	public static Vector3 ProjectPointOnLine(Vector3 linePoint, Vector3 lineVec, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x113C15C", Offset = "0x113C15C", VA = "0x113C15C")]
	public static Vector3 ProjectPointOnLineSegment(Vector3 linePoint1, Vector3 linePoint2, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x113C458", Offset = "0x113C458", VA = "0x113C458")]
	public static Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x113C4DC", Offset = "0x113C4DC", VA = "0x113C4DC")]
	public static Vector3 ProjectVectorOnPlane(Vector3 planeNormal, Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x113C4B0", Offset = "0x113C4B0", VA = "0x113C4B0")]
	public static float SignedDistancePlanePoint(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x113C50C", Offset = "0x113C50C", VA = "0x113C50C")]
	public static float SignedDotProduct(Vector3 vectorA, Vector3 vectorB, Vector3 normal)
	{
		return default(float);
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x113C550", Offset = "0x113C550", VA = "0x113C550")]
	public static float SignedVectorAngle(Vector3 referenceVector, Vector3 otherVector, Vector3 normal)
	{
		return default(float);
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x113C70C", Offset = "0x113C70C", VA = "0x113C70C")]
	public static float AngleVectorPlane(Vector3 vector, Vector3 normal)
	{
		return default(float);
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x113C7B4", Offset = "0x113C7B4", VA = "0x113C7B4")]
	public static float DotProductAngle(Vector3 vec1, Vector3 vec2)
	{
		return default(float);
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x113C864", Offset = "0x113C864", VA = "0x113C864")]
	public static void PlaneFrom3Points(out Vector3 planeNormal, out Vector3 planePoint, Vector3 pointA, Vector3 pointB, Vector3 pointC)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x113CB1C", Offset = "0x113CB1C", VA = "0x113CB1C")]
	public static Vector3 GetForwardVector(Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x113CB94", Offset = "0x113CB94", VA = "0x113CB94")]
	public static Vector3 GetUpVector(Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x113CC0C", Offset = "0x113CC0C", VA = "0x113CC0C")]
	public static Vector3 GetRightVector(Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x113CC84", Offset = "0x113CC84", VA = "0x113CC84")]
	public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x113CCE8", Offset = "0x113CCE8", VA = "0x113CCE8")]
	public static Vector3 PositionFromMatrix(Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x113CCF4", Offset = "0x113CCF4", VA = "0x113CCF4")]
	public static void LookRotationExtended(ref GameObject gameObjectInOut, Vector3 alignWithVector, Vector3 alignWithNormal, Vector3 customForward, Vector3 customUp)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x113CE34", Offset = "0x113CE34", VA = "0x113CE34")]
	public static void TransformWithParent(out Quaternion childRotation, out Vector3 childPosition, Quaternion parentRotation, Vector3 parentPosition, Quaternion startParentRotation, Vector3 startParentPosition, Quaternion startChildRotation, Vector3 startChildPosition)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x113D0E0", Offset = "0x113D0E0", VA = "0x113D0E0")]
	public static void PreciseAlign(ref GameObject gameObjectInOut, Vector3 alignWithVector, Vector3 alignWithNormal, Vector3 alignWithPosition, Vector3 triangleForward, Vector3 triangleNormal, Vector3 trianglePosition)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x113D1A4", Offset = "0x113D1A4", VA = "0x113D1A4")]
	public static void VectorsToTransform(ref GameObject gameObjectInOut, Vector3 positionVector, Vector3 directionVector, Vector3 normalVector)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x113C338", Offset = "0x113C338", VA = "0x113C338")]
	public static int PointOnWhichSideOfLineSegment(Vector3 linePoint1, Vector3 linePoint2, Vector3 point)
	{
		return default(int);
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x113D268", Offset = "0x113D268", VA = "0x113D268")]
	public static float MouseDistanceToLine(Vector3 linePoint1, Vector3 linePoint2)
	{
		return default(float);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x113D3A4", Offset = "0x113D3A4", VA = "0x113D3A4")]
	public static float MouseDistanceToCircle(Vector3 point, float radius)
	{
		return default(float);
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x113D48C", Offset = "0x113D48C", VA = "0x113D48C")]
	public static bool IsLineInRectangle(Vector3 linePoint1, Vector3 linePoint2, Vector3 rectA, Vector3 rectB, Vector3 rectC, Vector3 rectD)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x113D690", Offset = "0x113D690", VA = "0x113D690")]
	public static bool IsPointInRectangle(Vector3 point, Vector3 rectA, Vector3 rectC, Vector3 rectB, Vector3 rectD)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x113DAB4", Offset = "0x113DAB4", VA = "0x113DAB4")]
	public static bool AreLineSegmentsCrossing(Vector3 pointA1, Vector3 pointA2, Vector3 pointB1, Vector3 pointB2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x113DDC4", Offset = "0x113DDC4", VA = "0x113DDC4")]
	public static bool LinearAcceleration(out Vector3 vector, Vector3 position, int samples)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x113E164", Offset = "0x113E164", VA = "0x113E164")]
	public static bool AngularAcceleration(out Vector3 vector, Quaternion rotation, int samples)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x113E704", Offset = "0x113E704", VA = "0x113E704")]
	public static float LinearFunction2DBasic(float x, float Qx, float Qy)
	{
		return default(float);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x113E710", Offset = "0x113E710", VA = "0x113E710")]
	public static float LinearFunction2DFull(float x, float Px, float Py, float Qx, float Qy)
	{
		return default(float);
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x113E560", Offset = "0x113E560", VA = "0x113E560")]
	private static Vector3 RotDiffToSpeedVec(Quaternion rotation, float deltaTime)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x113E72C", Offset = "0x113E72C", VA = "0x113E72C")]
	public Math3d()
	{
	}
}
[Token(Token = "0x2000222")]
public class MiniAlbumItem : MonoBehaviour
{
	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LockedPanel;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CompletedPanel;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage coverImage;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AlbumData AlbumData;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isLocked;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool isCompleted;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x170000EC")]
	public bool IsSelected
	{
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x113E734", Offset = "0x113E734", VA = "0x113E734")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x113E73C", Offset = "0x113E73C", VA = "0x113E73C")]
		set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public bool IsLocked
	{
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x113E7A8", Offset = "0x113E7A8", VA = "0x113E7A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x113E7B0", Offset = "0x113E7B0", VA = "0x113E7B0")]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public bool IsCompleted
	{
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x113E7D8", Offset = "0x113E7D8", VA = "0x113E7D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x113E7E0", Offset = "0x113E7E0", VA = "0x113E7E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x113E808", Offset = "0x113E808", VA = "0x113E808")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x113E860", Offset = "0x113E860", VA = "0x113E860")]
	public void SetAlbumData(AlbumData albumData)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x113E8A0", Offset = "0x113E8A0", VA = "0x113E8A0")]
	public MiniAlbumItem()
	{
	}
}
[Token(Token = "0x2000223")]
public delegate void KeyTimeHandler<T>(T note, float timeStamp);
[Token(Token = "0x2000224")]
public delegate void EventHandler<T>(object sender, T args);
[Token(Token = "0x2000225")]
public enum NoteType
{
	[Token(Token = "0x4000C33")]
	Semibreve,
	[Token(Token = "0x4000C34")]
	Minim,
	[Token(Token = "0x4000C35")]
	Quaver,
	[Token(Token = "0x4000C36")]
	SemiQuaver,
	[Token(Token = "0x4000C37")]
	Crotchet
}
[Token(Token = "0x2000226")]
public enum Effects
{
	[Token(Token = "0x4000C39")]
	Effect1,
	[Token(Token = "0x4000C3A")]
	Effect2,
	[Token(Token = "0x4000C3B")]
	Effect3
}
[Token(Token = "0x2000227")]
public enum Games
{
	[Token(Token = "0x4000C3D")]
	Guitar,
	[Token(Token = "0x4000C3E")]
	Voice,
	[Token(Token = "0x4000C3F")]
	Drums
}
[Serializable]
[Token(Token = "0x2000228")]
public class GameProgress
{
	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public List<SongSavedData> Songs;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public DateTime LastSavedTime;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameProgress Current;

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x113E8A8", Offset = "0x113E8A8", VA = "0x113E8A8")]
	public SongSavedData GetNextSongFrom(SongAsset songAsset)
	{
		return null;
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x113EA88", Offset = "0x113EA88", VA = "0x113EA88")]
	public SongSavedData GetSongSavedDataFromID(string id)
	{
		return null;
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x113EBA8", Offset = "0x113EBA8", VA = "0x113EBA8")]
	public void UnlockSong(string id)
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x113EC98", Offset = "0x113EC98", VA = "0x113EC98")]
	public static void Save()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x113ED30", Offset = "0x113ED30", VA = "0x113ED30")]
	public static GameProgress Load()
	{
		return null;
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x113F408", Offset = "0x113F408", VA = "0x113F408")]
	private static GameProgress UpdateSongsInGameProgress(GameProgress current)
	{
		return null;
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x113F2F8", Offset = "0x113F2F8", VA = "0x113F2F8")]
	private static bool AreNewSongsAdded(GameProgress gameProgress)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x113EE2C", Offset = "0x113EE2C", VA = "0x113EE2C")]
	private static GameProgress CreateNewGameProgress()
	{
		return null;
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x113F908", Offset = "0x113F908", VA = "0x113F908")]
	public GameProgress()
	{
	}
}
[Serializable]
[Token(Token = "0x2000230")]
public class SongSavedData
{
	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string SongName;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string SongId;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int MaxScore;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public DateTime MaxScoreDate;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public int MaxCombo;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public DateTime MaxComboDate;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public DateTime LastPlayed;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public bool IsLocked;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	public float EasyScoreRatio;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public float NormalScoreRatio;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	public float HardScoreRatio;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public float SuperEasyScoreRatio;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	public float MaxScoredRatio;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public DifficultyLevel MaxDifficultyCompleted;

	[Token(Token = "0x170000EF")]
	[JsonIgnore]
	public SongAsset SongAsset
	{
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x113FCC0", Offset = "0x113FCC0", VA = "0x113FCC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x113F910", Offset = "0x113F910", VA = "0x113F910")]
	public SongSavedData()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x113F824", Offset = "0x113F824", VA = "0x113F824")]
	public SongSavedData(SongAsset songAsset)
	{
	}
}
[Serializable]
[Token(Token = "0x2000231")]
public class GameStats
{
	[Serializable]
	[Token(Token = "0x2000232")]
	public struct HealthTime
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public ObscuredFloat health;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float time;
	}

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public ObscuredInt HighestCombo;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public ObscuredInt Combo;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public ObscuredInt Score;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	public ObscuredInt SuccessedNotes;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public ObscuredInt AwesomeNotes;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	public ObscuredInt GoodNotes;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public ObscuredInt PoorNotes;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	public ObscuredInt FaildNotes;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	public ObscuredInt CrowdPoints;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	public ObscuredInt VirtuousPoints;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	public ObscuredInt Fans;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	public List<HealthTime> HealthOverTime;

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x113FFB0", Offset = "0x113FFB0", VA = "0x113FFB0")]
	public GameStats()
	{
	}
}
[Token(Token = "0x2000233")]
[KnownType(typeof(PullOffHandGuitarNote))]
[KnownType(typeof(PowerGuitarNote))]
[KnownType(typeof(DrumsGame))]
[KnownType(typeof(SingGame))]
[KnownType(typeof(GuitarNote))]
[KnownType(typeof(SingNote))]
[KnownType(typeof(BeatLineKey))]
[KnownType(typeof(GuitarGame))]
[DataContract]
[KnownType(typeof(GuitarControllerGame))]
[KnownType(typeof(VirtuosoControllerGuitarNote))]
[KnownType(typeof(PullOffControllerGuitarNote))]
[KnownType(typeof(VirtuosoHandGuitarNote))]
[KnownType(typeof(TierNoteBase))]
[KnownType(typeof(MiniGame))]
[KnownType(typeof(DrumNote))]
[KnownType(typeof(HandGuitarNote))]
public class KeyTime
{
	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> customStates;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsReadyForInteraction;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool IsInScene;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool IsReadyToExitScene;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool IsSuccessed;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Played;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float NormalizedInSceneTime;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float NormalizedLastInSceneTime;

	[Token(Token = "0x170000F0")]
	[DataMember]
	public virtual float Time
	{
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x1140788", Offset = "0x1140788", VA = "0x1140788", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x1140790", Offset = "0x1140790", VA = "0x1140790", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	[DataMember]
	public virtual float Duration
	{
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1140798", Offset = "0x1140798", VA = "0x1140798", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x11407A0", Offset = "0x11407A0", VA = "0x11407A0", Slot = "7")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public float EndTime
	{
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x11407A8", Offset = "0x11407A8", VA = "0x11407A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F3")]
	public float RemainingTime
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x11407E4", Offset = "0x11407E4", VA = "0x11407E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F4")]
	public List<int> CustomStates
	{
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1140684", Offset = "0x1140684", VA = "0x1140684")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1140814", Offset = "0x1140814", VA = "0x1140814")]
		set
		{
		}
	}

	[Token(Token = "0x1400006E")]
	public event KeyTimeHandler<KeyTime> Failed
	{
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1140208", Offset = "0x1140208", VA = "0x1140208")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x11402B8", Offset = "0x11402B8", VA = "0x11402B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006F")]
	public event KeyTimeHandler<KeyTime> Successed
	{
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1140368", Offset = "0x1140368", VA = "0x1140368")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x1140418", Offset = "0x1140418", VA = "0x1140418")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000070")]
	public event KeyTimeHandler<KeyTime> ExitsWithSuccess
	{
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x11404C8", Offset = "0x11404C8", VA = "0x11404C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1140578", Offset = "0x1140578", VA = "0x1140578")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x1140628", Offset = "0x1140628", VA = "0x1140628")]
	public bool Is(int customStateHash)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x1140710", Offset = "0x1140710", VA = "0x1140710")]
	public void RaiseSuccessed(float timeStamp)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x1140738", Offset = "0x1140738", VA = "0x1140738")]
	public void RaiseFailed(float timeStamp)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x1140760", Offset = "0x1140760", VA = "0x1140760")]
	public void RaiseExitWithoutSuccess(float timeStamp)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x114081C", Offset = "0x114081C", VA = "0x114081C")]
	public KeyTime()
	{
	}
}
[Token(Token = "0x2000234")]
public class BeatLineKey : KeyTime
{
	[Token(Token = "0x170000F5")]
	[DataMember]
	public float Opacity
	{
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1140824", Offset = "0x1140824", VA = "0x1140824")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x114082C", Offset = "0x114082C", VA = "0x114082C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x1140834", Offset = "0x1140834", VA = "0x1140834")]
	public BeatLineKey()
	{
	}
}
[Token(Token = "0x2000235")]
[DataContract]
public class SingNote : KeyTime
{
	[Token(Token = "0x170000F6")]
	[DataMember]
	public float Tone
	{
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x114083C", Offset = "0x114083C", VA = "0x114083C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1140844", Offset = "0x1140844", VA = "0x1140844")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	[DataMember]
	public float PreciseTone
	{
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x114084C", Offset = "0x114084C", VA = "0x114084C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x1140854", Offset = "0x1140854", VA = "0x1140854")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	[DataMember]
	public string Lyric
	{
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x114085C", Offset = "0x114085C", VA = "0x114085C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1140864", Offset = "0x1140864", VA = "0x1140864")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x114086C", Offset = "0x114086C", VA = "0x114086C")]
	public SingNote()
	{
	}
}
[Token(Token = "0x2000236")]
[DataContract]
public class Stave : KeyTime
{
	[Token(Token = "0x170000F9")]
	[DataMember]
	public List<SingNote> Notes
	{
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1140874", Offset = "0x1140874", VA = "0x1140874")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x114087C", Offset = "0x114087C", VA = "0x114087C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	[DataMember]
	public string LyricLine
	{
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1140884", Offset = "0x1140884", VA = "0x1140884")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x114088C", Offset = "0x114088C", VA = "0x114088C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x1140894", Offset = "0x1140894", VA = "0x1140894")]
	public Stave()
	{
	}
}
[Token(Token = "0x2000237")]
[DataContract]
public class BPMKey : KeyTime
{
	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float bpm;

	[Token(Token = "0x170000FB")]
	[DataMember]
	public float BPM
	{
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x114089C", Offset = "0x114089C", VA = "0x114089C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x11408A4", Offset = "0x11408A4", VA = "0x11408A4")]
		set
		{
		}
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x11408AC", Offset = "0x11408AC", VA = "0x11408AC")]
	public BPMKey()
	{
	}
}
[Token(Token = "0x2000238")]
[DataContract]
public class TierNoteBase : KeyTime
{
	[Token(Token = "0x170000FC")]
	public virtual int Tier
	{
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x11408B4", Offset = "0x11408B4", VA = "0x11408B4", Slot = "8")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x11408BC", Offset = "0x11408BC", VA = "0x11408BC", Slot = "9")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x11408C4", Offset = "0x11408C4", VA = "0x11408C4")]
	public TierNoteBase()
	{
	}
}
[Token(Token = "0x2000239")]
[DataContract]
public class GuitarNote : TierNoteBase
{
	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool Cursed;

	[Token(Token = "0x170000FD")]
	public virtual float CursableProbability
	{
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x11408CC", Offset = "0x11408CC", VA = "0x11408CC", Slot = "10")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x11408D4", Offset = "0x11408D4", VA = "0x11408D4", Slot = "11")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public virtual bool IsBlind
	{
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x11408DC", Offset = "0x11408DC", VA = "0x11408DC", Slot = "12")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x11408E4", Offset = "0x11408E4", VA = "0x11408E4", Slot = "13")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x11408F0", Offset = "0x11408F0", VA = "0x11408F0")]
	public GuitarNote()
	{
	}
}
[Token(Token = "0x200023A")]
[DataContract(Name = "TierNote")]
public class HandGuitarNote : GuitarNote
{
	[Token(Token = "0x170000FF")]
	[DataMember(Order = 4)]
	public List<TierFinger> Fingers
	{
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x11408F8", Offset = "0x11408F8", VA = "0x11408F8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1140900", Offset = "0x1140900", VA = "0x1140900")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public override int Tier
	{
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1140AD0", Offset = "0x1140AD0", VA = "0x1140AD0", Slot = "8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000101")]
	[DataMember(Name = "Tier")]
	private int oldTier
	{
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1140AD8", Offset = "0x1140AD8", VA = "0x1140AD8")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1140AE0", Offset = "0x1140AE0", VA = "0x1140AE0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public override float CursableProbability
	{
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x1140AE8", Offset = "0x1140AE8", VA = "0x1140AE8", Slot = "10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000103")]
	[DataMember(Name = "CursableProbability", Order = 2)]
	private float oldCursableProbability
	{
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1140AF0", Offset = "0x1140AF0", VA = "0x1140AF0")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1140AF8", Offset = "0x1140AF8", VA = "0x1140AF8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public override bool IsBlind
	{
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1140B00", Offset = "0x1140B00", VA = "0x1140B00", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000105")]
	[DataMember(Name = "IsBlind", Order = 3)]
	private bool oldIsBlind
	{
		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1140B08", Offset = "0x1140B08", VA = "0x1140B08")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1140B10", Offset = "0x1140B10", VA = "0x1140B10")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x1140908", Offset = "0x1140908", VA = "0x1140908")]
	public string FingersToString()
	{
		return null;
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x1140B1C", Offset = "0x1140B1C", VA = "0x1140B1C")]
	public HandGuitarNote()
	{
	}
}
[Token(Token = "0x200023B")]
[DataContract]
public class ControllerGuitarNote : GuitarNote
{
	[Token(Token = "0x17000106")]
	[DataMember(Order = 4)]
	public List<bool> Buttons
	{
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1140BA4", Offset = "0x1140BA4", VA = "0x1140BA4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1140BAC", Offset = "0x1140BAC", VA = "0x1140BAC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public bool HasTrigger
	{
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1140BB4", Offset = "0x1140BB4", VA = "0x1140BB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000108")]
	public bool HasGrip
	{
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1140C08", Offset = "0x1140C08", VA = "0x1140C08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000109")]
	[DataMember(Order = 5)]
	public int ChordRotation
	{
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x1140C5C", Offset = "0x1140C5C", VA = "0x1140C5C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1140C64", Offset = "0x1140C64", VA = "0x1140C64")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	[DataMember(Order = 6)]
	public int Intensity
	{
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1140C6C", Offset = "0x1140C6C", VA = "0x1140C6C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1140C74", Offset = "0x1140C74", VA = "0x1140C74")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public override int Tier
	{
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x1140C7C", Offset = "0x1140C7C", VA = "0x1140C7C", Slot = "8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700010C")]
	[DataMember(Name = "Tier")]
	private int oldTier
	{
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1140C84", Offset = "0x1140C84", VA = "0x1140C84")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1140C8C", Offset = "0x1140C8C", VA = "0x1140C8C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public override float CursableProbability
	{
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1140C94", Offset = "0x1140C94", VA = "0x1140C94", Slot = "10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010E")]
	[DataMember(Name = "CursableProbability", Order = 2)]
	private float oldCursableProbability
	{
		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1140C9C", Offset = "0x1140C9C", VA = "0x1140C9C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1140CA4", Offset = "0x1140CA4", VA = "0x1140CA4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public override bool IsBlind
	{
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1140CAC", Offset = "0x1140CAC", VA = "0x1140CAC", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000110")]
	[DataMember(Name = "IsBlind", Order = 3)]
	private bool oldIsBlind
	{
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1140CB4", Offset = "0x1140CB4", VA = "0x1140CB4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1140CBC", Offset = "0x1140CBC", VA = "0x1140CBC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x1140CC8", Offset = "0x1140CC8", VA = "0x1140CC8")]
	public ControllerGuitarNote()
	{
	}
}
[Token(Token = "0x200023C")]
[DataContract(Name = "PullOffGuitarNote")]
public class PullOffHandGuitarNote : HandGuitarNote, IPullOff
{
	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x1140E18", Offset = "0x1140E18", VA = "0x1140E18")]
	public PullOffHandGuitarNote()
	{
	}
}
[Token(Token = "0x200023D")]
[DataContract]
public class PullOffControllerGuitarNote : ControllerGuitarNote, IPullOff
{
	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x1140E1C", Offset = "0x1140E1C", VA = "0x1140E1C")]
	public PullOffControllerGuitarNote()
	{
	}
}
[Token(Token = "0x200023E")]
[DataContract(Name = "VirtuosoGuitarNote")]
public class VirtuosoHandGuitarNote : PullOffHandGuitarNote, IVirtuoso
{
	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x1140E20", Offset = "0x1140E20", VA = "0x1140E20")]
	public VirtuosoHandGuitarNote()
	{
	}
}
[Token(Token = "0x200023F")]
[DataContract]
public class VirtuosoControllerGuitarNote : PullOffControllerGuitarNote, IVirtuoso
{
	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x1140E24", Offset = "0x1140E24", VA = "0x1140E24")]
	public VirtuosoControllerGuitarNote()
	{
	}
}
[Token(Token = "0x2000240")]
public interface IPullOff
{
}
[Token(Token = "0x2000241")]
public interface IVirtuoso
{
}
[Token(Token = "0x2000242")]
[DataContract]
public class DrumNote : TierNoteBase
{
	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[DataMember(Name = "Tier")]
	private int oldTier;

	[Token(Token = "0x17000111")]
	public override int Tier
	{
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x1140E28", Offset = "0x1140E28", VA = "0x1140E28", Slot = "8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000112")]
	[DataMember]
	public int NumberOfTouches
	{
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x1140E30", Offset = "0x1140E30", VA = "0x1140E30")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x1140E38", Offset = "0x1140E38", VA = "0x1140E38")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x1140E40", Offset = "0x1140E40", VA = "0x1140E40")]
	public DrumNote()
	{
	}
}
[Token(Token = "0x2000243")]
[DataContract]
public class PowerGuitarNote : TierNoteBase
{
	[Token(Token = "0x17000113")]
	[DataMember]
	public float AngleV
	{
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1140E48", Offset = "0x1140E48", VA = "0x1140E48")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1140E50", Offset = "0x1140E50", VA = "0x1140E50")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	[DataMember]
	public float AngleH
	{
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1140E58", Offset = "0x1140E58", VA = "0x1140E58")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1140E60", Offset = "0x1140E60", VA = "0x1140E60")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x1140E68", Offset = "0x1140E68", VA = "0x1140E68")]
	public PowerGuitarNote()
	{
	}
}
[Token(Token = "0x2000244")]
[DataContract]
public enum TierFinger
{
	[Token(Token = "0x4000C8E")]
	[EnumMember]
	Index,
	[Token(Token = "0x4000C8F")]
	[EnumMember]
	Middle,
	[Token(Token = "0x4000C90")]
	[EnumMember]
	Ring,
	[Token(Token = "0x4000C91")]
	[EnumMember]
	Pinky
}
[Token(Token = "0x2000245")]
[DataContract]
public class SingGame : MiniGame
{
	[Token(Token = "0x17000115")]
	[DataMember]
	public List<Stave> Staves
	{
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x1140E70", Offset = "0x1140E70", VA = "0x1140E70")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x1140E78", Offset = "0x1140E78", VA = "0x1140E78")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	[DataMember]
	public List<SingNote> Notes
	{
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x1140E80", Offset = "0x1140E80", VA = "0x1140E80")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x1140E88", Offset = "0x1140E88", VA = "0x1140E88")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x1140E90", Offset = "0x1140E90", VA = "0x1140E90", Slot = "8")]
	public override IEnumerable<KeyTime> GetNotes()
	{
		return null;
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1140ED8", Offset = "0x1140ED8", VA = "0x1140ED8")]
	public SingGame()
	{
	}
}
[Token(Token = "0x2000246")]
[DataContract]
public class DrumsGame : MiniGame
{
	[Token(Token = "0x17000117")]
	[DataMember]
	public List<DrumNote> Notes
	{
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x1140EE8", Offset = "0x1140EE8", VA = "0x1140EE8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1140EF0", Offset = "0x1140EF0", VA = "0x1140EF0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x1140EF8", Offset = "0x1140EF8", VA = "0x1140EF8", Slot = "8")]
	public override IEnumerable<KeyTime> GetNotes()
	{
		return null;
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x1141030", Offset = "0x1141030", VA = "0x1141030")]
	public DrumsGame()
	{
	}
}
[Token(Token = "0x2000248")]
[DataContract]
public class GuitarGame : MiniGame
{
	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GuitarNote> auxNotes;

	[Token(Token = "0x17000118")]
	[DataMember(Name = "Notes")]
	public List<HandGuitarNote> OldNotes
	{
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x11410D0", Offset = "0x11410D0", VA = "0x11410D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x1141140", Offset = "0x1141140", VA = "0x1141140")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public List<GuitarNote> Notes
	{
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x11411CC", Offset = "0x11411CC", VA = "0x11411CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x11411D4", Offset = "0x11411D4", VA = "0x11411D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x11411DC", Offset = "0x11411DC", VA = "0x11411DC", Slot = "8")]
	public override IEnumerable<KeyTime> GetNotes()
	{
		return null;
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x1141314", Offset = "0x1141314", VA = "0x1141314")]
	public GuitarGame()
	{
	}
}
[Token(Token = "0x200024A")]
[DataContract]
public class GuitarControllerGame : MiniGame
{
	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ControllerGuitarNote> auxNotes;

	[Token(Token = "0x1700011A")]
	[DataMember(Name = "Notes")]
	public List<ControllerGuitarNote> OldNotes
	{
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x11413B4", Offset = "0x11413B4", VA = "0x11413B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1141424", Offset = "0x1141424", VA = "0x1141424")]
		set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public List<ControllerGuitarNote> Notes
	{
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x11414B0", Offset = "0x11414B0", VA = "0x11414B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x11414B8", Offset = "0x11414B8", VA = "0x11414B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x11414C0", Offset = "0x11414C0", VA = "0x11414C0", Slot = "8")]
	public override IEnumerable<KeyTime> GetNotes()
	{
		return null;
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x11415F8", Offset = "0x11415F8", VA = "0x11415F8")]
	public GuitarControllerGame()
	{
	}
}
[Token(Token = "0x200024C")]
[DataContract]
public abstract class MiniGame : KeyTime
{
	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool Completed;

	[Token(Token = "0x1700011C")]
	[DataMember]
	public float PrewarmTime
	{
		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1141698", Offset = "0x1141698", VA = "0x1141698")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x11416A0", Offset = "0x11416A0", VA = "0x11416A0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public override float Time
	{
		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x11416A8", Offset = "0x11416A8", VA = "0x11416A8", Slot = "4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1141708", Offset = "0x1141708", VA = "0x1141708", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	public override float Duration
	{
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1141710", Offset = "0x1141710", VA = "0x1141710", Slot = "6")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1141770", Offset = "0x1141770", VA = "0x1141770", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x6000D4A")]
	public abstract IEnumerable<KeyTime> GetNotes();

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x1140EE0", Offset = "0x1140EE0", VA = "0x1140EE0")]
	protected MiniGame()
	{
	}
}
[Token(Token = "0x200024D")]
public class SongHelper
{
	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, int> N;

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x1141778", Offset = "0x1141778", VA = "0x1141778")]
	public static SongMapping getSampleSong()
	{
		return null;
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x1142448", Offset = "0x1142448", VA = "0x1142448")]
	public static void AddNote(SingGame singGame, string Tone, NoteType duration, string lyric)
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x11426B0", Offset = "0x11426B0", VA = "0x11426B0")]
	public static SongMapping GetHeyJude()
	{
		return null;
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x1142690", Offset = "0x1142690", VA = "0x1142690")]
	public static float DurationFromNote(NoteType note)
	{
		return default(float);
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x1142BD0", Offset = "0x1142BD0", VA = "0x1142BD0")]
	public SongHelper()
	{
	}
}
[Token(Token = "0x200024E")]
[DataContract(Name = "SongLevel")]
public class SongMapping
{
	[StructLayout(3)]
	[Token(Token = "0x200024F")]
	[CompilerGenerated]
	private struct <LoadAsync>d__43 : IAsyncStateMachine
	{
		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<SongMapping> <>t__builder;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongMappingMetaData song;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter<SongMapping> <>u__1;

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1143EAC", Offset = "0x1143EAC", VA = "0x1143EAC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1144144", Offset = "0x1144144", VA = "0x1144144", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool IsHandTrackingMapping;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string SongsPath;

	[Token(Token = "0x1700011F")]
	[DataMember]
	public string Name
	{
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1142EFC", Offset = "0x1142EFC", VA = "0x1142EFC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1142F04", Offset = "0x1142F04", VA = "0x1142F04")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	[DataMember]
	public string Path
	{
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1142F0C", Offset = "0x1142F0C", VA = "0x1142F0C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1142F14", Offset = "0x1142F14", VA = "0x1142F14")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	[DataMember]
	public int Offset
	{
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1142F1C", Offset = "0x1142F1C", VA = "0x1142F1C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1142F24", Offset = "0x1142F24", VA = "0x1142F24")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	[DataMember]
	public int BPM
	{
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1142F2C", Offset = "0x1142F2C", VA = "0x1142F2C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x1142F34", Offset = "0x1142F34", VA = "0x1142F34")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	[DataMember]
	public List<KeyTime> Keys
	{
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x1142F3C", Offset = "0x1142F3C", VA = "0x1142F3C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x1142F44", Offset = "0x1142F44", VA = "0x1142F44")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	[DataMember]
	public List<BPMKey> BPMGrid
	{
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x1142F4C", Offset = "0x1142F4C", VA = "0x1142F4C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1142F54", Offset = "0x1142F54", VA = "0x1142F54")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000125")]
	[DataMember]
	public List<KeyTime> BeatGrid
	{
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1142F5C", Offset = "0x1142F5C", VA = "0x1142F5C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1142F64", Offset = "0x1142F64", VA = "0x1142F64")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	[DataMember]
	public bool BeatGridFromFile
	{
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1142F6C", Offset = "0x1142F6C", VA = "0x1142F6C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1142F74", Offset = "0x1142F74", VA = "0x1142F74")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	[DataMember]
	public int QuaverKey
	{
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1142F80", Offset = "0x1142F80", VA = "0x1142F80")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x1142F88", Offset = "0x1142F88", VA = "0x1142F88")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	[DataMember]
	public int QuaverOffset
	{
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1142F90", Offset = "0x1142F90", VA = "0x1142F90")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1142F98", Offset = "0x1142F98", VA = "0x1142F98")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x1142FA0", Offset = "0x1142FA0", VA = "0x1142FA0")]
	public static SongMapping Load()
	{
		return null;
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x11433D0", Offset = "0x11433D0", VA = "0x11433D0")]
	public static SongMapping Load(string songName)
	{
		return null;
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x11437D0", Offset = "0x11437D0", VA = "0x11437D0")]
	[AsyncStateMachine(typeof(<LoadAsync>d__43))]
	public static Task<SongMapping> LoadAsync(SongMappingMetaData song)
	{
		return null;
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x11438DC", Offset = "0x11438DC", VA = "0x11438DC")]
	public static SongMapping Load(SongMappingMetaData song, bool loadHandTrackingTrack = true)
	{
		return null;
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x1143350", Offset = "0x1143350", VA = "0x1143350")]
	public static string GetSongDataPathByDificulty(DifficultyLevel level)
	{
		return null;
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x11439C8", Offset = "0x11439C8", VA = "0x11439C8")]
	public static List<string> GetSongList()
	{
		return null;
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x1143D0C", Offset = "0x1143D0C", VA = "0x1143D0C")]
	public static void EmptyDirectory(string path)
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x1142440", Offset = "0x1142440", VA = "0x1142440")]
	public SongMapping()
	{
	}
}
[Token(Token = "0x2000250")]
public class Mp3Player : MonoBehaviour
{
	[Token(Token = "0x2000251")]
	public enum SongTrackNames
	{
		[Token(Token = "0x4000CBD")]
		Vocals,
		[Token(Token = "0x4000CBE")]
		Drums,
		[Token(Token = "0x4000CBF")]
		Guitar,
		[Token(Token = "0x4000CC0")]
		Bass,
		[Token(Token = "0x4000CC1")]
		Other
	}

	[StructLayout(3)]
	[Token(Token = "0x2000252")]
	[CompilerGenerated]
	private struct <GetDataFromURL>d__15 : IAsyncStateMachine
	{
		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<byte[]> <>t__builder;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object <>u__1;

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1145F5C", Offset = "0x1145F5C", VA = "0x1145F5C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x11461D4", Offset = "0x11461D4", VA = "0x11461D4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000253")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string path;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string audioName;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] unpData;

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x114622C", Offset = "0x114622C", VA = "0x114622C")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x1146234", Offset = "0x1146234", VA = "0x1146234")]
		internal byte[] <LoadSongAsync>b__0()
		{
			return null;
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000254")]
	[CompilerGenerated]
	private struct <LoadSongAsync>d__21 : IAsyncStateMachine
	{
		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mp3Player <>4__this;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass21_0 <>8__1;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool loadSample;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<byte[]> <>u__1;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object <>u__2;

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x114629C", Offset = "0x114629C", VA = "0x114629C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x1146A30", Offset = "0x1146A30", VA = "0x1146A30", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000255")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string path;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string audioName;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] unpData;

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1146A3C", Offset = "0x1146A3C", VA = "0x1146A3C")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1146A44", Offset = "0x1146A44", VA = "0x1146A44")]
		internal byte[] <PlayAsync>b__0()
		{
			return null;
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000256")]
	[CompilerGenerated]
	private struct <PlayAsync>d__22 : IAsyncStateMachine
	{
		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mp3Player <>4__this;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass22_0 <>8__1;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool playSample;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<byte[]> <>u__1;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private object <>u__2;

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1146AAC", Offset = "0x1146AAC", VA = "0x1146AAC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1147228", Offset = "0x1147228", VA = "0x1147228", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000258")]
	[CompilerGenerated]
	private sealed class <PlayWithDelay>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Seconds;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mp3Player <>4__this;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x1147594", Offset = "0x1147594", VA = "0x1147594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x11475DC", Offset = "0x11475DC", VA = "0x11475DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1145AF0", Offset = "0x1145AF0", VA = "0x1145AF0")]
		[DebuggerHidden]
		public <PlayWithDelay>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x1147298", Offset = "0x1147298", VA = "0x1147298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x114729C", Offset = "0x114729C", VA = "0x114729C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x114759C", Offset = "0x114759C", VA = "0x114759C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioSource> AudioSources;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<SongTrackNames, AudioSource> AudioSourceTracks;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource MusicAudioSource;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float CurrentTime;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float SongTimeDelayCounter;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool AllowMultitrack;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HttpListener httpListener;

	[Token(Token = "0x4000CB8")]
	private const string WEB_SERVER_URL = "http://127.0.0.1:8085/";

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private byte[] audio;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TweenerCore<float, float, FloatOptions> pitchTween;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float prevMusicAudioSourceTime;

	[Token(Token = "0x17000129")]
	public bool IsMultiTrack
	{
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x114419C", Offset = "0x114419C", VA = "0x114419C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x11441A4", Offset = "0x11441A4", VA = "0x11441A4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x11441B0", Offset = "0x11441B0", VA = "0x11441B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x1144268", Offset = "0x1144268", VA = "0x1144268")]
	[AsyncStateMachine(typeof(<GetDataFromURL>d__15))]
	private Task<byte[]> GetDataFromURL(string path)
	{
		return null;
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x1144374", Offset = "0x1144374", VA = "0x1144374")]
	public void LoadSongSync(SongMappingMetaData data, bool loadSample = false)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x11445CC", Offset = "0x11445CC", VA = "0x11445CC")]
	public void LoadMasterTrackSync(string path, bool loadSample = false)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x11443E4", Offset = "0x11443E4", VA = "0x11443E4")]
	public void LoadAllAvailableSongTracks(string path)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x1144884", Offset = "0x1144884", VA = "0x1144884")]
	public void LoadSongTrack(string path, SongTrackNames track)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x1144C0C", Offset = "0x1144C0C", VA = "0x1144C0C")]
	[AsyncStateMachine(typeof(<LoadSongAsync>d__21))]
	public Task LoadSongAsync(string path, bool loadSample = false)
	{
		return null;
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x1144D20", Offset = "0x1144D20", VA = "0x1144D20")]
	[AsyncStateMachine(typeof(<PlayAsync>d__22))]
	public void PlayAsync(string path, bool playSample = false)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x1144E04", Offset = "0x1144E04", VA = "0x1144E04")]
	private void EncodeMp3(IAsyncResult result)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x1144F58", Offset = "0x1144F58", VA = "0x1144F58")]
	public void SetPitch(float pitch, [Optional] Action onCompleted, bool forcePitch = false)
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x114516C", Offset = "0x114516C", VA = "0x114516C")]
	private bool IsPitchBlocked(float pitch)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x11451E8", Offset = "0x11451E8", VA = "0x11451E8")]
	public void Play()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x11454FC", Offset = "0x11454FC", VA = "0x11454FC")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x11456D0", Offset = "0x11456D0", VA = "0x11456D0")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x11458A4", Offset = "0x11458A4", VA = "0x11458A4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x1145A64", Offset = "0x1145A64", VA = "0x1145A64")]
	public void SetTrackVolume(SongTrackNames track, float volume)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x1145478", Offset = "0x1145478", VA = "0x1145478")]
	[IteratorStateMachine(typeof(<PlayWithDelay>d__31))]
	private IEnumerator PlayWithDelay(float Seconds)
	{
		return null;
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x1145B18", Offset = "0x1145B18", VA = "0x1145B18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x1145ECC", Offset = "0x1145ECC", VA = "0x1145ECC")]
	public Mp3Player()
	{
	}
}
[Token(Token = "0x2000259")]
public class MusicAudioController : MonoBehaviour
{
	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer mixer;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TweenerCore<float, float, FloatOptions> volumeAnimation;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float musicVolume;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float prevSongDb;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentSongDb;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float guitarVolume;

	[Token(Token = "0x1700012C")]
	public float GuitarVolume
	{
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x11475E4", Offset = "0x11475E4", VA = "0x11475E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x11475EC", Offset = "0x11475EC", VA = "0x11475EC")]
		set
		{
		}
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x1147654", Offset = "0x1147654", VA = "0x1147654")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x11477FC", Offset = "0x11477FC", VA = "0x11477FC")]
	private void SetSampleVolume(SongMappingMetaData obj)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x114786C", Offset = "0x114786C", VA = "0x114786C")]
	public void SetNoteFailVolume()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x11479C8", Offset = "0x11479C8", VA = "0x11479C8")]
	public void SetSongVolume(float volume)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x1147A6C", Offset = "0x1147A6C", VA = "0x1147A6C")]
	private void SetVolumeAtStartSong()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x1147A94", Offset = "0x1147A94", VA = "0x1147A94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x1147C3C", Offset = "0x1147C3C", VA = "0x1147C3C")]
	private void GameManager_GameEnded()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x1147C48", Offset = "0x1147C48", VA = "0x1147C48")]
	private void GameManager_SongFinished()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x1147C54", Offset = "0x1147C54", VA = "0x1147C54")]
	private void I_PlayerStateChanged(FeedbackType obj)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x1147C80", Offset = "0x1147C80", VA = "0x1147C80")]
	private void GuitarNoteManager_NoteMissed()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x1147C8C", Offset = "0x1147C8C", VA = "0x1147C8C")]
	public void SetGuitarVolume(float f, float duration = 0.3f)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x1147E14", Offset = "0x1147E14", VA = "0x1147E14")]
	public void SetGuitarFrequency(float f)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x1147E78", Offset = "0x1147E78", VA = "0x1147E78")]
	public MusicAudioController()
	{
	}
}
[Token(Token = "0x200025A")]
[CreateAssetMenu(fileName = "GlobalParameters", menuName = "Unplugged/GameParameters", order = 1)]
public class GlobalParameters : ScriptableObject
{
	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string UnpluggedServerUrl;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool GodModeInEditor;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool DisableControllerMode;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool ControllerModeInEditor;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool ForceControllerModeSelectionInEditor;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int FansScoreRatio;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GuitarFollowThreshold;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GuitarVelocity;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TimeMinGuitarNotGrabbded;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MenuMusicVolume;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TutorialMusicVolume;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material PrimaryHandMaterial;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material PrimaryControllerMaterial;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material SecondaryHandMaterial;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material SecondaryControllerMaterial;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color IndexColor;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color MiddleColor;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color RingColor;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color PinkyColor;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color TriggerColorRotationUp;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Color GripColorRotationUp;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Color TriggerColorRotationDown;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color GripColorRotationDown;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float ControllerRotationDialRelaxAngle;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float ControllerRotationSensitivity;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float ControllerRotationUpAngle;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float ControllerRotationDownAngle;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float AudioLatency;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float AudioLatencyStep;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float AudioLatencyMax;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[Range(0.01f, 0.2f)]
	public float minControllerSensibilityGrabbingOpenIndex;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Range(0.2f, 0.8f)]
	public float minControllerSensibilityClosedHandOpenIndex;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float TimeCheckInfinityStrumming;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Vector3 InitialGuitarPosition;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float InitialVirtuosoNotePerformance;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool AllowUpStrumming;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	public bool DisableInfinityStrumming;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float StrummingVelocityThreshold;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float PickDistanceStrummingZ;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float PickDistanceStrummingX;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float MaxTuneAngle;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float MinTuneAngle;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float TuneAngleThreshold;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float OutOfTuneSpringMaxLimit;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float MinOutOfTuneAngleOffset;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float MaxOutOfAngleOffset;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float OutOfTuneBulletTime;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float MinObjectThrowingTime;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float MaxObjectThrowingTime;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float UnderwearDropTime;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float CrowdVolumeNormal;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float CrowdVolumeMin;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float MusicVolumeAwesome;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float MusicVolumeGood;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float MusicVolumePoor;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float MinTimeToPowerUp;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float MaxTimeToPowerUp;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float SpawnMaxHorizontalAngle;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float SpawnMinHorizontalAngle;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float SpawnMaxVerticalAngle;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float SpawnMinVerticalAngle;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[Range(0f, 1f)]
	public float OneStarMaxRange;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Range(0f, 1f)]
	public float TwoStarMaxRange;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[Range(0f, 1f)]
	public float ThreeStarMaxRange;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Range(0f, 1f)]
	public float FourStarMaxRange;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float StartSpaceInitialOffsetY;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float PreparationSpaceInitialOffsetY;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float PreparationSpaceInitialOffsetZ;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float EndNavigationControllerInitialOffsetY;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float EndNavigationControllerInitialOffsetZ;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float TrackingStraightFingerHackThershold;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float HandTrackingLostTimeThershold;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float MaxTrackingFailsIn30Seconds;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float MaxTrackingLostTime;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float GuitarToFloorMinHeight;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float LockedVelocity;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float UnlockedVelocity;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float MinIndexHandDirection;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[Range(0f, 1f)]
	public float IntermezzoBadMessageProvability;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	[Range(0f, 1f)]
	public float IntermezzoGoodMessageProvability;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[Range(0f, 1f)]
	public float SatchelCheeringProvability;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public int MinPlayedSongsForHard;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public int MaxContinuousEasySongs;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	[Range(0f, 1f)]
	public float BadVibrationDuration;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[Range(0f, 320f)]
	public float BadVibrationFrequency;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	[Range(0f, 1f)]
	public float BadVibrationIntensity;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[Range(0f, 1f)]
	public float AwesomeVibrationDuration;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[Range(0f, 320f)]
	public float AweseomeVibrationFrequency;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[Range(0f, 1f)]
	public float AwesomeVibrationIntensity;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float VibratoVibrationDuration;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[Range(0f, 320f)]
	public float MaximunVibratoVibrationFrequency;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public AnimationCurve VibrationIntensityCurve;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[Range(0f, 1f)]
	public float ControllerRotationChangedVibrationIntensity;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	[Range(0f, 500f)]
	public float ControllerRotationChangedVibrationFrequency;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[Range(0f, 1f)]
	public float ControllerRotationChangedVibrationDuration;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	[Range(0f, 1f)]
	public float FretChangedVibrationIntensity;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[Range(0f, 500f)]
	public float FretChangedVibrationFrequency;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	[Range(0f, 1f)]
	public float FretChangedVibrationDuration;

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x1147E8C", Offset = "0x1147E8C", VA = "0x1147E8C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x114804C", Offset = "0x114804C", VA = "0x114804C")]
	public GlobalParameters()
	{
	}
}
[Token(Token = "0x200025B")]
public class Params : MonoBehaviour
{
	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Params I;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GlobalParameters GlobalParameters;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameParameters NormalGameParameters;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameParameters SuperEasyGameParameters;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameParameters EasyGameParameters;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameParameters HardGameParameters;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlatformParameters PlatformOculusParameters;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlatformParameters PlatformOpenXRParameters;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlatformParameters PlatformPicoParameters;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SoundParams SoundParameters;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ChordDefinitions ChordDefinitions;

	[Token(Token = "0x1700012D")]
	public static ChordDefinitions Chords
	{
		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x11481F8", Offset = "0x11481F8", VA = "0x11481F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012E")]
	public static SoundParams Sounds
	{
		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x114824C", Offset = "0x114824C", VA = "0x114824C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012F")]
	public static GlobalParameters Global
	{
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1138B54", Offset = "0x1138B54", VA = "0x1138B54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000130")]
	public static GameParameters Game
	{
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x11478D0", Offset = "0x11478D0", VA = "0x11478D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000131")]
	public static PlatformParameters Platform
	{
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x1148308", Offset = "0x1148308", VA = "0x1148308")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x11482A0", Offset = "0x11482A0", VA = "0x11482A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x114835C", Offset = "0x114835C", VA = "0x114835C")]
	public Params()
	{
	}
}
[Token(Token = "0x200025C")]
[CreateAssetMenu(fileName = "SoundParameters", menuName = "Unplugged/SoundParameters", order = 1)]
public class SoundParams : ScriptableObject
{
	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Gameplay")]
	public AudioClipSettings GameWin;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClipSettings GameLose;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClipSettings ScoreCounterStep;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClipSettings CurseNoteFailed;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClipSettings NoteFailed;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClipSettings ComboFailed;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClipSettings VirtuosoNoteFeedback;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClipSettings ExtraPointsAfterSong;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("UI")]
	public AudioClipSettings StartGameRiff;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClipSettings MenuCycleAlbums;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClipSettings ScoreCountFinished;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClipSettings StartSpaceDiskEnters;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Mini games")]
	public AudioClipSettings OutOfTuneKeyGrabbed;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClipSettings PowerCrowdMiniGameHandLighting;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClipSettings PowerCrowdMiniGameEnter;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClipSettings PowerCrowdMiniGameScoreUp;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClipSettings BeerRadarEnter;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Power Ups")]
	public AudioClipSettings PowerUpAppears;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClipSettings PowerUpBulletTimeEnter;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClipSettings PowerUpBulletTimeExit;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClipSettings PowerCrowdMiniGameActivation;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClipSettings PowerUpLifeBoostCatched;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClipSettings PowerUpSuperComboCatched;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Tutorial")]
	public AudioClipSettings TutorialStep0PosterTouched;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClipSettings TutorialStep3GuitarAppears;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Header("Other")]
	public AudioClipSettings AmpSparkEmitted;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClipSettings ScoreScreenStarAppear;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClipSettings MusicRecordAcquired;

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x1148364", Offset = "0x1148364", VA = "0x1148364")]
	public SoundParams()
	{
	}
}
[Serializable]
[Token(Token = "0x200025D")]
public class AudioClipSettings
{
	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public List<AudioClip> audioClips;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AudioMixerGroup group;

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x114836C", Offset = "0x114836C", VA = "0x114836C")]
	public AudioClipSettings()
	{
	}
}
[Token(Token = "0x200025E")]
public class PassthroughHandObscurerer : MonoBehaviour
{
	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AttachToLeftHand;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer spriteRender;

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x11483F4", Offset = "0x11483F4", VA = "0x11483F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x114844C", Offset = "0x114844C", VA = "0x114844C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x11486EC", Offset = "0x11486EC", VA = "0x11486EC")]
	public PassthroughHandObscurerer()
	{
	}
}
[Token(Token = "0x200025F")]
public class PickController : MonoBehaviour
{
	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScratchingHand scratchingHand;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsVisible;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer PickRenderer;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 offset;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve PickTransparencyAttenuation;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform PickAnchor;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform PickGrabAnchor;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PickData currentPickData;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color ColorTransparent;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<PickFX> PickFxs;

	[Token(Token = "0x17000132")]
	public PickData CurrentPickData
	{
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x11486F4", Offset = "0x11486F4", VA = "0x11486F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x11486FC", Offset = "0x11486FC", VA = "0x11486FC")]
		set
		{
		}
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x1148700", Offset = "0x1148700", VA = "0x1148700")]
	private void SetPick(PickData value)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x1148C8C", Offset = "0x1148C8C", VA = "0x1148C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x1148F28", Offset = "0x1148F28", VA = "0x1148F28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x1149070", Offset = "0x1149070", VA = "0x1149070")]
	private void PickList_OnPickSelected(PickData obj)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x114908C", Offset = "0x114908C", VA = "0x114908C")]
	private void OutOfTuneManager_OnOutOfTuneExitSlowmo()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x11491FC", Offset = "0x11491FC", VA = "0x11491FC")]
	private void OutOfTuneManager_OnOutOfTuneEnterSlowmo()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x1149384", Offset = "0x1149384", VA = "0x1149384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x11497E8", Offset = "0x11497E8", VA = "0x11497E8")]
	public PickController()
	{
	}
}
[Token(Token = "0x2000260")]
[CreateAssetMenu(fileName = "PickList", menuName = "Unplugged/PickList", order = 1)]
public class PickList : ScriptableObject
{
	[Token(Token = "0x2000261")]
	public enum PickLists
	{
		[Token(Token = "0x4000D83")]
		DefaultPickList
	}

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PickData> Picks;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<string> purchasedPicks;

	[Token(Token = "0x17000133")]
	public static List<string> PurchasedPicks
	{
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1149A34", Offset = "0x1149A34", VA = "0x1149A34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000134")]
	public static PickData SelectedPick
	{
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1148DB8", Offset = "0x1148DB8", VA = "0x1148DB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x1149B9C", Offset = "0x1149B9C", VA = "0x1149B9C")]
		set
		{
		}
	}

	[Token(Token = "0x14000071")]
	public static event Action<PickData> OnPickSelected
	{
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1148E5C", Offset = "0x1148E5C", VA = "0x1148E5C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1148FA4", Offset = "0x1148FA4", VA = "0x1148FA4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x1149984", Offset = "0x1149984", VA = "0x1149984")]
	public static PickList GetList(PickLists listName)
	{
		return null;
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x1149A90", Offset = "0x1149A90", VA = "0x1149A90")]
	internal static void RefreshPurchasedPicksList()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x1149C1C", Offset = "0x1149C1C", VA = "0x1149C1C")]
	public PickList()
	{
	}
}
[Serializable]
[Token(Token = "0x2000262")]
public class PickData : IPurchasable
{
	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PrefabName;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Price;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsVisible;

	[Token(Token = "0x17000135")]
	public string Thumb
	{
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1149C24", Offset = "0x1149C24", VA = "0x1149C24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000136")]
	[JsonIgnore]
	public GameObject PickModelPrefab
	{
		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x1148C1C", Offset = "0x1148C1C", VA = "0x1148C1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000137")]
	public int ItemPrice
	{
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1149C70", Offset = "0x1149C70", VA = "0x1149C70", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000138")]
	public bool IsPurchased
	{
		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1149C78", Offset = "0x1149C78", VA = "0x1149C78", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1149CEC", Offset = "0x1149CEC", VA = "0x1149CEC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x14000072")]
	public event Action OnPurchase
	{
		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x1149E28", Offset = "0x1149E28", VA = "0x1149E28", Slot = "7")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1149EC4", Offset = "0x1149EC4", VA = "0x1149EC4", Slot = "8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x1149F60", Offset = "0x1149F60", VA = "0x1149F60")]
	public PickData()
	{
	}
}
[Token(Token = "0x2000263")]
[DefaultExecutionOrder(100)]
public class PlatformGameObject : MonoBehaviour
{
	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool KeepInEditor;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public VRDeviceTypes SupportedDevice;

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x1149F70", Offset = "0x1149F70", VA = "0x1149F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x114A054", Offset = "0x114A054", VA = "0x114A054")]
	public PlatformGameObject()
	{
	}
}
[Token(Token = "0x2000264")]
public class PlatformMonoBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRDeviceTypes SupportedDevices;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isSupported;

	[Token(Token = "0x17000139")]
	public bool IsSupported
	{
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x114A05C", Offset = "0x114A05C", VA = "0x114A05C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x114A064", Offset = "0x114A064", VA = "0x114A064")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x114A070", Offset = "0x114A070", VA = "0x114A070", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x114A12C", Offset = "0x114A12C", VA = "0x114A12C")]
	public PlatformMonoBehaviour()
	{
	}
}
[Token(Token = "0x2000265")]
[CreateAssetMenu(fileName = "PlatformParameters", menuName = "Unplugged/Platform Parameters", order = 1)]
public class PlatformParameters : ScriptableObject
{
	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartSpaceInitialOffsetY;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartSpaceInitialOffsetX;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PreparationSpaceInitialOffsetY;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float PreparationSpaceInitialOffsetZ;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 AvatarImageFlip;

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x114A134", Offset = "0x114A134", VA = "0x114A134")]
	public PlatformParameters()
	{
	}
}
[Token(Token = "0x2000266")]
public enum Achievements
{
	[Token(Token = "0x4000D93")]
	FirstGig,
	[Token(Token = "0x4000D94")]
	GoingPro,
	[Token(Token = "0x4000D95")]
	Reach1000Fans,
	[Token(Token = "0x4000D96")]
	Reach10kFans,
	[Token(Token = "0x4000D97")]
	Reach100kFans,
	[Token(Token = "0x4000D98")]
	Score100k,
	[Token(Token = "0x4000D99")]
	Score500k,
	[Token(Token = "0x4000D9A")]
	Score1M,
	[Token(Token = "0x4000D9B")]
	FinishGame,
	[Token(Token = "0x4000D9C")]
	Retune50,
	[Token(Token = "0x4000D9D")]
	Album1,
	[Token(Token = "0x4000D9E")]
	Album2,
	[Token(Token = "0x4000D9F")]
	Album3,
	[Token(Token = "0x4000DA0")]
	Album4,
	[Token(Token = "0x4000DA1")]
	GuitarAstro,
	[Token(Token = "0x4000DA2")]
	GuitarBlueOcean,
	[Token(Token = "0x4000DA3")]
	GuitarBroom,
	[Token(Token = "0x4000DA4")]
	Score5SteelPanther
}
[Serializable]
[Token(Token = "0x2000267")]
[CreateAssetMenu(menuName = "Unplugged/Create Achievement")]
public class Achievement : ScriptableObject
{
	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Achievements type;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public ulong TargetValue;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public ulong currentValue;

	[Token(Token = "0x1700013A")]
	[JsonIgnore]
	public ulong CurrentValue
	{
		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x114A148", Offset = "0x114A148", VA = "0x114A148")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x114A260", Offset = "0x114A260", VA = "0x114A260")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	[JsonIgnore]
	public bool IsUnlocked
	{
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x114A4B8", Offset = "0x114A4B8", VA = "0x114A4B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x114A4D8", Offset = "0x114A4D8", VA = "0x114A4D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x114A274", Offset = "0x114A274", VA = "0x114A274")]
	private void StoreAchievementProgress()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x114A4E0", Offset = "0x114A4E0", VA = "0x114A4E0")]
	public static List<Achievement> GetAllAchievementsProgress()
	{
		return null;
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x114A16C", Offset = "0x114A16C", VA = "0x114A16C")]
	private Achievement GetCurrentAchievementProgress()
	{
		return null;
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x114A57C", Offset = "0x114A57C", VA = "0x114A57C")]
	public Achievement()
	{
	}
}
[Token(Token = "0x2000268")]
public abstract class AchievementsManager : MonoBehaviour
{
	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Achievement> AchievementsRules;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AchievementsManager I;

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x114A5CC", Offset = "0x114A5CC", VA = "0x114A5CC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x114A698", Offset = "0x114A698", VA = "0x114A698", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x114ABC4", Offset = "0x114ABC4", VA = "0x114ABC4", Slot = "6")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x114B130", Offset = "0x114B130", VA = "0x114B130")]
	private void CheckScore5SteelPantherAchievement()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x114B3DC", Offset = "0x114B3DC", VA = "0x114B3DC")]
	private void CheckFirstGigAchievement()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x114B46C", Offset = "0x114B46C", VA = "0x114B46C")]
	private void CheckGoingProAchievement()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x114B53C", Offset = "0x114B53C", VA = "0x114B53C")]
	private void CheckReach1000FansAchievement()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x114B63C", Offset = "0x114B63C", VA = "0x114B63C")]
	private void CheckReach10kFansAchievement()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x114B740", Offset = "0x114B740", VA = "0x114B740")]
	private void CheckReach100kFansAchievement()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x114B848", Offset = "0x114B848", VA = "0x114B848")]
	private void CheckScore100kAchievement()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x114B914", Offset = "0x114B914", VA = "0x114B914")]
	private void CheckScore500kAchievement()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x114B9E0", Offset = "0x114B9E0", VA = "0x114B9E0")]
	private void CheckScore1mAchievement()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x114BAAC", Offset = "0x114BAAC", VA = "0x114BAAC")]
	private void CheckAlbum1CompleteAchievement()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x114BC30", Offset = "0x114BC30", VA = "0x114BC30")]
	private void CheckAlbum2CompleteAchievement()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x114BDB4", Offset = "0x114BDB4", VA = "0x114BDB4")]
	private void CheckAlbum3CompleteAchievement()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x114BF38", Offset = "0x114BF38", VA = "0x114BF38")]
	private void CheckAlbum4CompleteAchievement()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x114C0BC", Offset = "0x114C0BC", VA = "0x114C0BC")]
	private void CheckFinishGameAchievement()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x114C23C", Offset = "0x114C23C", VA = "0x114C23C")]
	private void CheckGuitarAstroAchievement()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x114C39C", Offset = "0x114C39C", VA = "0x114C39C")]
	private void CheckGuitarBlueOceanAchievement()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x114C4FC", Offset = "0x114C4FC", VA = "0x114C4FC")]
	private void CheckBroomAchievement()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x114C744", Offset = "0x114C744", VA = "0x114C744")]
	private void CheckRetune50Achievement()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x114B2C8", Offset = "0x114B2C8", VA = "0x114B2C8")]
	public Achievement GetAchievementByType(Achievements type)
	{
		return null;
	}

	[Token(Token = "0x6000E00")]
	public abstract void SyncAllAchievements();

	[Token(Token = "0x6000E01")]
	public abstract void UpdateAchievementProgress(Achievement achievement, int addUpValue);

	[Token(Token = "0x6000E02")]
	public abstract void ForceUnlock(Achievement achievement);

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x114C778", Offset = "0x114C778", VA = "0x114C778")]
	protected void CheckForMissedAchievements()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x114C7B8", Offset = "0x114C7B8", VA = "0x114C7B8")]
	protected AchievementsManager()
	{
	}
}
[Token(Token = "0x200026B")]
public class OculusAchievementManager : AchievementsManager
{
	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AchievementProgress> oculusAchievements;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x114CBD4", Offset = "0x114CBD4", VA = "0x114CBD4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x114CCD0", Offset = "0x114CCD0", VA = "0x114CCD0", Slot = "6")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x114CD7C", Offset = "0x114CD7C", VA = "0x114CD7C")]
	private void VRPlatformOculus_EntitlementChecked(bool isEntitled)
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x114CDA4", Offset = "0x114CDA4", VA = "0x114CDA4", Slot = "7")]
	public override void SyncAllAchievements()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x114CE9C", Offset = "0x114CE9C", VA = "0x114CE9C")]
	private void SyncAchievementPage(Message<AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x114D4E0", Offset = "0x114D4E0", VA = "0x114D4E0")]
	private void CompareWithLocalAchievements()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x114D7B0", Offset = "0x114D7B0", VA = "0x114D7B0", Slot = "8")]
	public override void UpdateAchievementProgress(Achievement achievement, int addUpValue)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x114D93C", Offset = "0x114D93C", VA = "0x114D93C", Slot = "9")]
	public override void ForceUnlock(Achievement achievement)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x114DA7C", Offset = "0x114DA7C", VA = "0x114DA7C")]
	public OculusAchievementManager()
	{
	}
}
[Token(Token = "0x2000270")]
public abstract class DLCManagerBase : MonoBehaviour
{
	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DLCManagerBase I;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool canPurchaseInApp;

	[Token(Token = "0x1700013C")]
	public bool CanPurchaseInApp
	{
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x114F288", Offset = "0x114F288", VA = "0x114F288")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000073")]
	public event Action<DLCAlbumData> OnDLCAlbumPurchased
	{
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x114EE90", Offset = "0x114EE90", VA = "0x114EE90")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x114EF40", Offset = "0x114EF40", VA = "0x114EF40")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000074")]
	public event Action<SongMappingMetaData> OnDLCSongPurchased
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x114EFF0", Offset = "0x114EFF0", VA = "0x114EFF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x114F0A0", Offset = "0x114F0A0", VA = "0x114F0A0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000075")]
	public event Action OnDlcItemPurchased
	{
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x114F150", Offset = "0x114F150", VA = "0x114F150")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x114F1EC", Offset = "0x114F1EC", VA = "0x114F1EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x114F290", Offset = "0x114F290", VA = "0x114F290", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x114F35C", Offset = "0x114F35C", VA = "0x114F35C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x114F494", Offset = "0x114F494", VA = "0x114F494")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x114F588", Offset = "0x114F588", VA = "0x114F588")]
	private void VRPlatformBase_EntitlementChecked(bool isEntitled)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x114F5A4", Offset = "0x114F5A4", VA = "0x114F5A4", Slot = "5")]
	public virtual void PurchaseDLCSong(SongMappingMetaData songMappingMetadata, Action onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x114F60C", Offset = "0x114F60C", VA = "0x114F60C", Slot = "6")]
	public virtual void PurchaseDLCAlbum(DLCAlbumData dlcAlbum, Action onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x6000E31")]
	public abstract void SyncPurchasedDLCs(Action onComplete, Action<string> onError);

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x114F674", Offset = "0x114F674", VA = "0x114F674")]
	protected void RaiseAlbumPurchasedEvent(DLCAlbumData dlcAlbum)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x114F690", Offset = "0x114F690", VA = "0x114F690")]
	protected void RaiseSongPurchasedEvent(SongMappingMetaData songMappingMetaData)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x114F6AC", Offset = "0x114F6AC", VA = "0x114F6AC")]
	protected void RaiseItemPurchasedEvent()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x114F6C8", Offset = "0x114F6C8", VA = "0x114F6C8")]
	protected DLCManagerBase()
	{
	}
}
[Token(Token = "0x2000271")]
public class DLCManagerOculus : DLCManagerBase
{
	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x114F6D0", Offset = "0x114F6D0", VA = "0x114F6D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x114F6DC", Offset = "0x114F6DC", VA = "0x114F6DC", Slot = "5")]
	public override void PurchaseDLCSong(SongMappingMetaData songMappingMetadata, Action onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x114F934", Offset = "0x114F934", VA = "0x114F934", Slot = "6")]
	public override void PurchaseDLCAlbum(DLCAlbumData dlcAlbum, Action onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x114FC18", Offset = "0x114FC18", VA = "0x114FC18", Slot = "7")]
	public override void SyncPurchasedDLCs(Action onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x114FD38", Offset = "0x114FD38", VA = "0x114FD38")]
	private void SyncPurchasedSongsLocally(List<SongAsset> allSongs, PurchaseList purchasedItems)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x1150204", Offset = "0x1150204", VA = "0x1150204")]
	public DLCManagerOculus()
	{
	}
}
[Token(Token = "0x2000277")]
public abstract class LeaderboardAccesser
{
	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected string leaderboardID;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int entriesToRetrieve;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Texture2D defaultProfilePicture;

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x11507B8", Offset = "0x11507B8", VA = "0x11507B8")]
	public LeaderboardAccesser(string leaderboardID, int entriesToRetrieve, Texture2D defaultProfilePicture)
	{
	}

	[Token(Token = "0x6000E4A")]
	public abstract void SubmitScoreToLeaderboard(int score, Action onSuccess, Action<string> onError);

	[Token(Token = "0x6000E4B")]
	public abstract void RetrieveUserLeaderboardEntry(Action<LeaderboardEntryData> onSuccess, Action<string> onError);

	[Token(Token = "0x6000E4C")]
	public abstract void RetrieveGeneralLeaderboard(Action<List<LeaderboardEntryData>> onSuccess, Action<string> onError);

	[Token(Token = "0x6000E4D")]
	public abstract void RetrieveGeneralLeaderboardPlayerCentered(Action<List<LeaderboardEntryData>> onSuccess, Action<string> onError);
}
[Token(Token = "0x2000278")]
public class LeaderboardEntryData
{
	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Username;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long Score;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int rank;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ProfilePicUrl;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D ProfilePic;

	[Token(Token = "0x1700013D")]
	public int Rank
	{
		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x115080C", Offset = "0x115080C", VA = "0x115080C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x115085C", Offset = "0x115085C", VA = "0x115085C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x1150864", Offset = "0x1150864", VA = "0x1150864")]
	public LeaderboardEntryData(string username, long score, int rank, [Optional] string profilePicUrl, [Optional] Texture2D profilePic)
	{
	}
}
[Token(Token = "0x2000279")]
public class OculusLeaderboardAccesser : LeaderboardAccesser
{
	[StructLayout(3)]
	[Token(Token = "0x2000281")]
	[CompilerGenerated]
	private struct <RetrieveProfilePic>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardEntryData entry;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OculusLeaderboardAccesser <>4__this;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <downloadHandler>5__2;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object <>u__1;

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x1151C50", Offset = "0x1151C50", VA = "0x1151C50", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x1152004", Offset = "0x1152004", VA = "0x1152004", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000282")]
	[CompilerGenerated]
	private struct <RetrieveProfilePics>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusLeaderboardAccesser <>4__this;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<LeaderboardEntryData> leaderboardEntries;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x1152010", Offset = "0x1152010", VA = "0x1152010", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x115228C", Offset = "0x115228C", VA = "0x115228C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x11508DC", Offset = "0x11508DC", VA = "0x11508DC")]
	public OculusLeaderboardAccesser(string leaderboardID, int entriesToRetrieve, Texture2D defaultProfilePicture)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x11508E0", Offset = "0x11508E0", VA = "0x11508E0", Slot = "4")]
	public override void SubmitScoreToLeaderboard(int score, Action OnSuccess, Action<string> OnError)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x1150A7C", Offset = "0x1150A7C", VA = "0x1150A7C", Slot = "5")]
	public override void RetrieveUserLeaderboardEntry(Action<LeaderboardEntryData> onSuccess, Action<string> onError)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x1150BAC", Offset = "0x1150BAC", VA = "0x1150BAC", Slot = "6")]
	public override void RetrieveGeneralLeaderboard(Action<List<LeaderboardEntryData>> OnSuccess, Action<string> OnError)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x1150CDC", Offset = "0x1150CDC", VA = "0x1150CDC", Slot = "7")]
	public override void RetrieveGeneralLeaderboardPlayerCentered(Action<List<LeaderboardEntryData>> OnSuccess, Action<string> OnError)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x1150E0C", Offset = "0x1150E0C", VA = "0x1150E0C")]
	private void RetrieveEntriesAndProfilePics(Action<List<LeaderboardEntryData>> OnSuccess, Action<string> OnError, Message<LeaderboardEntryList> msg, List<LeaderboardEntryData> leaderboardEntries)
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x1150F2C", Offset = "0x1150F2C", VA = "0x1150F2C")]
	private void RetrieveLeaderboardsCallback(List<LeaderboardEntryData> leaderboardEntries, Message<LeaderboardEntryList> entriesMsg, Action OnSuccess, Action<string> OnError)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x1151508", Offset = "0x1151508", VA = "0x1151508")]
	[AsyncStateMachine(typeof(<RetrieveProfilePic>d__7))]
	private Task RetrieveProfilePic(LeaderboardEntryData entry)
	{
		return null;
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x1151608", Offset = "0x1151608", VA = "0x1151608")]
	[AsyncStateMachine(typeof(<RetrieveProfilePics>d__8))]
	private Task RetrieveProfilePics(List<LeaderboardEntryData> leaderboardEntries)
	{
		return null;
	}
}
[Token(Token = "0x2000283")]
public class OculusSaveUtilities : ª¬\u00a8®¬\u00af¢««±¢
{
	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x1152298", Offset = "0x1152298", VA = "0x1152298")]
	public OculusSaveUtilities()
	{
	}
}
[Token(Token = "0x2000284")]
public class PerDeviceEnabledController : MonoBehaviour
{
	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRDeviceTypes SupportedDevices;

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x11522F0", Offset = "0x11522F0", VA = "0x11522F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x11523D4", Offset = "0x11523D4", VA = "0x11523D4")]
	public PerDeviceEnabledController()
	{
	}
}
[Token(Token = "0x2000285")]
public abstract class VRPlatformBase : MonoBehaviour
{
	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string DeepLinkAppLaunchInfo;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static VRPlatformBase I;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRInteractionType CurrentInteractionType;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ª¬\u00a8®¬\u00af¢««±¢ CloudSaveUtilities;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool isPlatformInitialized;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static bool SupportsPassThrough;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ControllerGuitarDropThreshold;

	[Token(Token = "0x1700013E")]
	public abstract VRDeviceTypes DeviceType
	{
		[Token(Token = "0x6000E81")]
		get;
	}

	[Token(Token = "0x1700013F")]
	public abstract GameScenes TutorialScene
	{
		[Token(Token = "0x6000E82")]
		get;
	}

	[Token(Token = "0x17000140")]
	public abstract bool IsHandTrackingEnabled
	{
		[Token(Token = "0x6000E83")]
		get;
	}

	[Token(Token = "0x17000141")]
	public abstract string LeaderBoardControllersSufix
	{
		[Token(Token = "0x6000E84")]
		get;
	}

	[Token(Token = "0x17000142")]
	public bool IsPlatformInitialized
	{
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x115303C", Offset = "0x115303C", VA = "0x115303C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000143")]
	public virtual bool SupportsInGameHandInputSwitching
	{
		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1153044", Offset = "0x1153044", VA = "0x1153044", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000076")]
	private static event Action<bool> entitlementChecked
	{
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x11523DC", Offset = "0x11523DC", VA = "0x11523DC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x11524CC", Offset = "0x11524CC", VA = "0x11524CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000077")]
	public static event Action<bool> EntitlementChecked
	{
		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x114F3FC", Offset = "0x114F3FC", VA = "0x114F3FC")]
		add
		{
		}
		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x114F534", Offset = "0x114F534", VA = "0x114F534")]
		remove
		{
		}
	}

	[Token(Token = "0x14000078")]
	public static event Action VRMounted
	{
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x11525BC", Offset = "0x11525BC", VA = "0x11525BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x1152698", Offset = "0x1152698", VA = "0x1152698")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000079")]
	public static event Action VRUnMounted
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x1152774", Offset = "0x1152774", VA = "0x1152774")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x1152850", Offset = "0x1152850", VA = "0x1152850")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007A")]
	public static event Action FocusLost
	{
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x115292C", Offset = "0x115292C", VA = "0x115292C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x1152A08", Offset = "0x1152A08", VA = "0x1152A08")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007B")]
	public static event Action RestoreFocus
	{
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x1152AE4", Offset = "0x1152AE4", VA = "0x1152AE4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x1152BC0", Offset = "0x1152BC0", VA = "0x1152BC0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007C")]
	public static event Action HeadsetRecentered
	{
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x1152C9C", Offset = "0x1152C9C", VA = "0x1152C9C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x1152D78", Offset = "0x1152D78", VA = "0x1152D78")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007D")]
	public static event Action<VRInteractionType> InputControllerChanged
	{
		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x1152E54", Offset = "0x1152E54", VA = "0x1152E54")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x1152F48", Offset = "0x1152F48", VA = "0x1152F48")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E80")]
	public abstract LeaderboardAccesser GetLeaderboardAccesser(string leaderboardID, int entitiesToretrieve, Texture2D defaultPlayerPic);

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x115304C", Offset = "0x115304C", VA = "0x115304C", Slot = "10")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000E88")]
	public abstract AudioConfiguration GetAudioConfiguration();

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x1153140", Offset = "0x1153140", VA = "0x1153140")]
	protected void InvokeEntitlementChecked(bool successfullyEntitled)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x11531BC", Offset = "0x11531BC", VA = "0x11531BC")]
	protected void InvokeVRMounted()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x1153230", Offset = "0x1153230", VA = "0x1153230")]
	protected void InvokeVRUnmounted()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x11532A4", Offset = "0x11532A4", VA = "0x11532A4")]
	protected void InvokeFocusLost()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x1153318", Offset = "0x1153318", VA = "0x1153318")]
	protected void InvokeFocusAquired()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x115338C", Offset = "0x115338C", VA = "0x115338C")]
	protected void InvokeHeadsetRecentered()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x1153400", Offset = "0x1153400", VA = "0x1153400")]
	protected void InvokeInputControllerChanged(VRInteractionType type)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x1153490", Offset = "0x1153490", VA = "0x1153490", Slot = "12")]
	public virtual void InitializePlatform()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x1153494", Offset = "0x1153494", VA = "0x1153494", Slot = "13")]
	public virtual void RecenterHeadset(bool forceInEveryPlatfom = false)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x1153498", Offset = "0x1153498", VA = "0x1153498", Slot = "14")]
	public virtual void CheckRecenter()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x115349C", Offset = "0x115349C", VA = "0x115349C", Slot = "15")]
	public virtual void InitializePlatformNCheckEntitlement()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x11534A0", Offset = "0x11534A0", VA = "0x11534A0", Slot = "16")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x11534A4", Offset = "0x11534A4", VA = "0x11534A4", Slot = "17")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x11534A8", Offset = "0x11534A8", VA = "0x11534A8", Slot = "18")]
	public virtual void SetResolution(float multiplier)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x11534AC", Offset = "0x11534AC", VA = "0x11534AC", Slot = "19")]
	public virtual void EnablePassThrough(bool enabled)
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x11534B0", Offset = "0x11534B0", VA = "0x11534B0", Slot = "20")]
	public virtual void PassThroughColor(float contrast = 0.5f, float brightness = 0f, float posterize = 0f, [Optional] Gradient color)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x11534B4", Offset = "0x11534B4", VA = "0x11534B4")]
	protected VRPlatformBase()
	{
	}
}
[Token(Token = "0x2000286")]
public enum VRInteractionType
{
	[Token(Token = "0x4000E09")]
	Hands,
	[Token(Token = "0x4000E0A")]
	Controllers
}
[Token(Token = "0x2000287")]
public enum VRQuality
{
	[Token(Token = "0x4000E0C")]
	Low,
	[Token(Token = "0x4000E0D")]
	Medium,
	[Token(Token = "0x4000E0E")]
	High
}
[Token(Token = "0x2000288")]
[Flags]
public enum VRDeviceTypes
{
	[Token(Token = "0x4000E10")]
	Quest1 = 2,
	[Token(Token = "0x4000E11")]
	Quest2 = 4,
	[Token(Token = "0x4000E12")]
	Index = 8,
	[Token(Token = "0x4000E13")]
	Pico = 0x10
}
[Token(Token = "0x2000289")]
public class VRPlatformControllerBase : MonoBehaviour
{
	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsLeftController;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool AnyButtonPressed;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected ControllerButtonState triggerState;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected ControllerButtonState gripState;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float CurrentTriggerValue;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float CurrentGripValue;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	internal float SteamIndexCurl;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	internal float SteamMiddleCurl;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal float SteamRingCurl;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal float SteamPinkyCurl;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	internal float SteamThumbCurl;

	[Token(Token = "0x17000144")]
	public virtual float TriggerValue
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1153928", Offset = "0x1153928", VA = "0x1153928", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000145")]
	public virtual float GripValue
	{
		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x1153930", Offset = "0x1153930", VA = "0x1153930", Slot = "5")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000146")]
	public ControllerButtonState CurrentTriggerState
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x1153938", Offset = "0x1153938", VA = "0x1153938")]
		get
		{
			return default(ControllerButtonState);
		}
	}

	[Token(Token = "0x17000147")]
	public ControllerButtonState CurrentGripState
	{
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1153940", Offset = "0x1153940", VA = "0x1153940")]
		get
		{
			return default(ControllerButtonState);
		}
	}

	[Token(Token = "0x1400007E")]
	public event Action<ControllerButtonState> TriggerChanged
	{
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1153508", Offset = "0x1153508", VA = "0x1153508")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x11535B8", Offset = "0x11535B8", VA = "0x11535B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007F")]
	public event Action<ControllerButtonState> GripChanged
	{
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1153668", Offset = "0x1153668", VA = "0x1153668")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1153718", Offset = "0x1153718", VA = "0x1153718")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000080")]
	public event Action<bool> AnyButtonPressedChanged
	{
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x11537C8", Offset = "0x11537C8", VA = "0x11537C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1153878", Offset = "0x1153878", VA = "0x1153878")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x1153948", Offset = "0x1153948", VA = "0x1153948")]
	protected void InvokeTriggerChanged()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x1153968", Offset = "0x1153968", VA = "0x1153968")]
	protected void InvokeGripChanged()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x1153988", Offset = "0x1153988", VA = "0x1153988")]
	protected void InvokeAnyButtonPressedChanged()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x11539A8", Offset = "0x11539A8", VA = "0x11539A8", Slot = "6")]
	public virtual void DoHapticFeedbackVibratoMotionBased(float handVelocity)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x11539AC", Offset = "0x11539AC", VA = "0x11539AC", Slot = "7")]
	public virtual void DoHapticFeedback(FeedbackType feedback)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x11539B0", Offset = "0x11539B0", VA = "0x11539B0", Slot = "8")]
	public virtual void DoHapticFeedback(float freq, float intensity, float duration)
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x11539B4", Offset = "0x11539B4", VA = "0x11539B4")]
	public VRPlatformControllerBase()
	{
	}
}
[Token(Token = "0x200028A")]
public enum ControllerButtonState
{
	[Token(Token = "0x4000E25")]
	Untouched,
	[Token(Token = "0x4000E26")]
	Touched,
	[Token(Token = "0x4000E27")]
	Pressed
}
[Token(Token = "0x200028B")]
public class VRPlatformOculus : VRPlatformBase
{
	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRPassthroughLayer oVRPassthroughLayer;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private OVRHand oculusHand;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform handR;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform ControllerAnchorR;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform handsAnchorR;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform handL;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform controllerAnchorL;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform handsAnchorL;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OVRPlugin.HandState leftHandState;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private OVRPlugin.HandState rightHandState;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float startGestureTimer;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool prevInteractionStateIsHands;

	[Token(Token = "0x17000148")]
	public override bool IsHandTrackingEnabled
	{
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x11539BC", Offset = "0x11539BC", VA = "0x11539BC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000149")]
	public override GameScenes TutorialScene
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x11541EC", Offset = "0x11541EC", VA = "0x11541EC", Slot = "6")]
		get
		{
			return default(GameScenes);
		}
	}

	[Token(Token = "0x1700014A")]
	public override VRDeviceTypes DeviceType
	{
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x11541F4", Offset = "0x11541F4", VA = "0x11541F4", Slot = "5")]
		get
		{
			return default(VRDeviceTypes);
		}
	}

	[Token(Token = "0x1700014B")]
	public override string LeaderBoardControllersSufix
	{
		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x1154268", Offset = "0x1154268", VA = "0x1154268", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x1153A28", Offset = "0x1153A28", VA = "0x1153A28", Slot = "10")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x1153B18", Offset = "0x1153B18", VA = "0x1153B18")]
	public void Start()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x1153E20", Offset = "0x1153E20", VA = "0x1153E20", Slot = "12")]
	public override void InitializePlatform()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x1154064", Offset = "0x1154064", VA = "0x1154064", Slot = "11")]
	public override AudioConfiguration GetAudioConfiguration()
	{
		return default(AudioConfiguration);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x11540A4", Offset = "0x11540A4", VA = "0x11540A4", Slot = "18")]
	public override void SetResolution(float multiplier)
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x11542A8", Offset = "0x11542A8", VA = "0x11542A8", Slot = "13")]
	public override void RecenterHeadset(bool forceInEveryPlatfom = false)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x1154450", Offset = "0x1154450", VA = "0x1154450", Slot = "14")]
	public override void CheckRecenter()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x1154604", Offset = "0x1154604", VA = "0x1154604", Slot = "15")]
	public override void InitializePlatformNCheckEntitlement()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x115479C", Offset = "0x115479C", VA = "0x115479C", Slot = "16")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x1153B20", Offset = "0x1153B20", VA = "0x1153B20")]
	private void CheckInteractionMode(bool force = false)
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x11547A4", Offset = "0x11547A4", VA = "0x11547A4", Slot = "17")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x1154910", Offset = "0x1154910", VA = "0x1154910", Slot = "19")]
	public override void EnablePassThrough(bool enabled)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x11549C8", Offset = "0x11549C8", VA = "0x11549C8", Slot = "20")]
	public override void PassThroughColor(float contrast = 0.5f, float brightness = 0f, float posterize = 0f, [Optional] Gradient color)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x11549E8", Offset = "0x11549E8", VA = "0x11549E8", Slot = "4")]
	public override LeaderboardAccesser GetLeaderboardAccesser(string leaderboardID, int entitiesToretrieve, Texture2D defaultPlayerPic)
	{
		return null;
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x1154ADC", Offset = "0x1154ADC", VA = "0x1154ADC")]
	public VRPlatformOculus()
	{
	}
}
[Token(Token = "0x200028C")]
public class VRPlatformOculusController : VRPlatformControllerBase
{
	[Token(Token = "0x200028D")]
	[CompilerGenerated]
	private sealed class <StartHapticsCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float frequency;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float amplitude;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRPlatformOculusController <>4__this;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x1155504", Offset = "0x1155504", VA = "0x1155504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x115554C", Offset = "0x115554C", VA = "0x115554C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x1155370", Offset = "0x1155370", VA = "0x1155370")]
		[DebuggerHidden]
		public <StartHapticsCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x11553A8", Offset = "0x11553A8", VA = "0x11553A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x11553AC", Offset = "0x11553AC", VA = "0x11553AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x115550C", Offset = "0x115550C", VA = "0x115550C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float TriggerPressSensivility;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float GripPressSensivility;

	[Token(Token = "0x1700014C")]
	private OVRInput.Controller ovrController
	{
		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1154C4C", Offset = "0x1154C4C", VA = "0x1154C4C")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x1154C60", Offset = "0x1154C60", VA = "0x1154C60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x1154CB8", Offset = "0x1154CB8", VA = "0x1154CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x1155040", Offset = "0x1155040", VA = "0x1155040")]
	private void CheckButtons()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x1154CD8", Offset = "0x1154CD8", VA = "0x1154CD8")]
	private void CheckTrigger()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x1154EEC", Offset = "0x1154EEC", VA = "0x1154EEC")]
	private void CheckGrip()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x1155194", Offset = "0x1155194", VA = "0x1155194", Slot = "6")]
	public override void DoHapticFeedbackVibratoMotionBased(float handVelocity)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x1155234", Offset = "0x1155234", VA = "0x1155234", Slot = "7")]
	public override void DoHapticFeedback(FeedbackType feedback)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x11552B8", Offset = "0x11552B8", VA = "0x11552B8", Slot = "8")]
	public override void DoHapticFeedback(float freq, float intensity, float duration)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x1155214", Offset = "0x1155214", VA = "0x1155214")]
	public void StartHaptics(float frequency, float amplitude, float duration)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x11552D8", Offset = "0x11552D8", VA = "0x11552D8")]
	[IteratorStateMachine(typeof(<StartHapticsCoroutine>d__13))]
	private IEnumerator StartHapticsCoroutine(float frequency, float amplitude, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x1155398", Offset = "0x1155398", VA = "0x1155398")]
	public VRPlatformOculusController()
	{
	}
}
[Token(Token = "0x200028E")]
public class PlayerPowerVoice : MonoBehaviour
{
	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int sampleWindow;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioClip micClip;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject VoiceBullet;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastBullet;

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x1155554", Offset = "0x1155554", VA = "0x1155554")]
	public PlayerPowerVoice()
	{
	}
}
[Token(Token = "0x200028F")]
public class ClientTest : MonoBehaviour
{
	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int score;

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x1155564", Offset = "0x1155564", VA = "0x1155564")]
	public void ResetPlayerPrefs()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x115556C", Offset = "0x115556C", VA = "0x115556C")]
	public void GetAllScoresAllUsers()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x11557DC", Offset = "0x11557DC", VA = "0x11557DC")]
	public void GetTop()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x1155A4C", Offset = "0x1155A4C", VA = "0x1155A4C")]
	public void GetTop10()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x1155CCC", Offset = "0x1155CCC", VA = "0x1155CCC")]
	public void GetAllScoresFromUser()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x1155F3C", Offset = "0x1155F3C", VA = "0x1155F3C")]
	public void PostScore()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x1156130", Offset = "0x1156130", VA = "0x1156130")]
	public void PostTelemetry()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x1156308", Offset = "0x1156308", VA = "0x1156308")]
	public ClientTest()
	{
	}
}
[Token(Token = "0x2000291")]
public class TelemetryManager
{
	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int HandTrackingLostTimesInSession;

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x1156C80", Offset = "0x1156C80", VA = "0x1156C80")]
	public TelemetryManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000292")]
public class ScoreModel
{
	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[JsonProperty("uid")]
	public string UserID;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[JsonProperty("score")]
	public int Score;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[JsonProperty("date")]
	public string Date;

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x1156C88", Offset = "0x1156C88", VA = "0x1156C88")]
	public ScoreModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000293")]
public class TelemetryModel
{
	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[JsonProperty("uid")]
	public string UserID;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[JsonProperty("sid")]
	public string SessionID;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[JsonProperty("sessionDuration")]
	public float SessionDuration;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[JsonProperty("sHTLost")]
	public float HandTrackingLost;

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x1156C90", Offset = "0x1156C90", VA = "0x1156C90")]
	public TelemetryModel()
	{
	}
}
[Token(Token = "0x2000294")]
public class UnpluggedClient
{
	[StructLayout(3)]
	[Token(Token = "0x2000295")]
	[CompilerGenerated]
	private struct <GetAllScoresFromAllUsers>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onError;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<ScoreModel>> onResult;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x11572B4", Offset = "0x11572B4", VA = "0x11572B4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1157618", Offset = "0x1157618", VA = "0x1157618", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000296")]
	[CompilerGenerated]
	private struct <GetAllScoresFromUser>d__9 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onError;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<ScoreModel>> onResult;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1157624", Offset = "0x1157624", VA = "0x1157624", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1157998", Offset = "0x1157998", VA = "0x1157998", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000297")]
	[CompilerGenerated]
	private struct <GetTop>d__10 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onError;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<ScoreModel>> onResult;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x11579A4", Offset = "0x11579A4", VA = "0x11579A4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1157D08", Offset = "0x1157D08", VA = "0x1157D08", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000298")]
	[CompilerGenerated]
	private struct <GetTopX>d__11 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int TopAmount;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action onError;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<List<ScoreModel>> onResult;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1157D14", Offset = "0x1157D14", VA = "0x1157D14", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x1158090", Offset = "0x1158090", VA = "0x1158090", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000299")]
	[CompilerGenerated]
	private struct <GetWorldRankingLastGameAsync>d__12 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onError;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<int> onSuccess;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x115809C", Offset = "0x115809C", VA = "0x115809C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x1158400", Offset = "0x1158400", VA = "0x1158400", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200029A")]
	[CompilerGenerated]
	private struct <GetWorldRankingAsync>d__13 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action onError;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<int> onSuccess;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x115840C", Offset = "0x115840C", VA = "0x115840C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1158778", Offset = "0x1158778", VA = "0x1158778", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200029B")]
	[CompilerGenerated]
	private struct <PostScore>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action onSuccess;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action onError;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<HttpResponseMessage> <>u__1;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<string> <>u__2;

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x1158784", Offset = "0x1158784", VA = "0x1158784", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x1158CD0", Offset = "0x1158CD0", VA = "0x1158CD0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200029C")]
	[CompilerGenerated]
	private struct <PostScoreStandingAsync>d__15 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<string> onSuccess;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action onError;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<HttpResponseMessage> <>u__1;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<string> <>u__2;

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x1158CDC", Offset = "0x1158CDC", VA = "0x1158CDC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x1159264", Offset = "0x1159264", VA = "0x1159264", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200029D")]
	[CompilerGenerated]
	private struct <PostTelemetry>d__16 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<object> onResult;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action onError;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<HttpResponseMessage> <>u__1;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<string> <>u__2;

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1159270", Offset = "0x1159270", VA = "0x1159270", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1159808", Offset = "0x1159808", VA = "0x1159808", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string URLbase;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string sessionID;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string userID;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly HttpClient client;

	[Token(Token = "0x1700014F")]
	public static string UserID
	{
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1156C98", Offset = "0x1156C98", VA = "0x1156C98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public static string SessionID
	{
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x1156E74", Offset = "0x1156E74", VA = "0x1156E74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x1155708", Offset = "0x1155708", VA = "0x1155708")]
	[AsyncStateMachine(typeof(<GetAllScoresFromAllUsers>d__8))]
	public static void GetAllScoresFromAllUsers(Action<List<ScoreModel>> onResult, [Optional] Action onError)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x1155E68", Offset = "0x1155E68", VA = "0x1155E68")]
	[AsyncStateMachine(typeof(<GetAllScoresFromUser>d__9))]
	public static void GetAllScoresFromUser(Action<List<ScoreModel>> onResult, [Optional] Action onError)
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x1155978", Offset = "0x1155978", VA = "0x1155978")]
	[AsyncStateMachine(typeof(<GetTop>d__10))]
	public static void GetTop(Action<List<ScoreModel>> onResult, [Optional] Action onError)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x1155BEC", Offset = "0x1155BEC", VA = "0x1155BEC")]
	[AsyncStateMachine(typeof(<GetTopX>d__11))]
	public static void GetTopX(int TopAmount, Action<List<ScoreModel>> onResult, [Optional] Action onError)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x1156F60", Offset = "0x1156F60", VA = "0x1156F60")]
	[AsyncStateMachine(typeof(<GetWorldRankingLastGameAsync>d__12))]
	public static void GetWorldRankingLastGameAsync(Action<int> onSuccess, [Optional] Action onError)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x1157034", Offset = "0x1157034", VA = "0x1157034")]
	[AsyncStateMachine(typeof(<GetWorldRankingAsync>d__13))]
	public static void GetWorldRankingAsync(int score, Action<int> onSuccess, [Optional] Action onError)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x1156050", Offset = "0x1156050", VA = "0x1156050")]
	[AsyncStateMachine(typeof(<PostScore>d__14))]
	public static void PostScore(int score, Action onSuccess, [Optional] Action onError)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x1157114", Offset = "0x1157114", VA = "0x1157114")]
	[AsyncStateMachine(typeof(<PostScoreStandingAsync>d__15))]
	public static void PostScoreStandingAsync(int score, Action<string> onSuccess, [Optional] Action onError)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x1156230", Offset = "0x1156230", VA = "0x1156230")]
	[AsyncStateMachine(typeof(<PostTelemetry>d__16))]
	public static void PostTelemetry(Action<object> onResult, [Optional] Action onError)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x11571F4", Offset = "0x11571F4", VA = "0x11571F4")]
	public UnpluggedClient()
	{
	}
}
[Token(Token = "0x200029E")]
public class WorldRankingController : MonoBehaviour
{
	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro RankingLabel;

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x1159814", Offset = "0x1159814", VA = "0x1159814")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x11598F8", Offset = "0x11598F8", VA = "0x11598F8")]
	private void OnConnected(string ranking)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x1159994", Offset = "0x1159994", VA = "0x1159994")]
	public WorldRankingController()
	{
	}
}
[Token(Token = "0x200029F")]
public class RoundedCube : MonoBehaviour
{
	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Size;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1E-05f, 10f)]
	public float RoundedSize;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> Corners;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> InitialCorners;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform CubeModel;

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x115999C", Offset = "0x115999C", VA = "0x115999C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x11599A0", Offset = "0x11599A0", VA = "0x11599A0")]
	public void SetSize(Vector3 size)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x11599AC", Offset = "0x11599AC", VA = "0x11599AC")]
	private void ChangeSize()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x1159B28", Offset = "0x1159B28", VA = "0x1159B28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x1159B2C", Offset = "0x1159B2C", VA = "0x1159B2C")]
	public RoundedCube()
	{
	}
}
[Token(Token = "0x20002A0")]
public class RuleItemController : MonoBehaviour
{
	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image Icon;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI Label;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image ProgressBarBar;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float progress;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isLocked;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isHidden;

	[Token(Token = "0x17000151")]
	public bool IsHidden
	{
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1159B90", Offset = "0x1159B90", VA = "0x1159B90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x1159B98", Offset = "0x1159B98", VA = "0x1159B98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x1159CB8", Offset = "0x1159CB8", VA = "0x1159CB8")]
	public void SetRuleUi(bool isLocked, string label, float progress)
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x1159DB8", Offset = "0x1159DB8", VA = "0x1159DB8")]
	public void UnlockRuleUI()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x1159C40", Offset = "0x1159C40", VA = "0x1159C40")]
	public void HideRuleUI()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x1159E28", Offset = "0x1159E28", VA = "0x1159E28")]
	public void EnterRuleUI()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x1159E9C", Offset = "0x1159E9C", VA = "0x1159E9C")]
	public RuleItemController()
	{
	}
}
[Token(Token = "0x20002A1")]
public class RuleItems : MonoBehaviour
{
	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RulePrefab;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> Rules;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite LockIcon;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite UnlockIcon;

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x1159EA4", Offset = "0x1159EA4", VA = "0x1159EA4")]
	public void EvaulateRules(AlbumData album)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x115A5A4", Offset = "0x115A5A4", VA = "0x115A5A4")]
	public void HideRules()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x115A784", Offset = "0x115A784", VA = "0x115A784")]
	public void EnterRules()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x115A950", Offset = "0x115A950", VA = "0x115A950")]
	public RuleItems()
	{
	}
}
[Token(Token = "0x20002A2")]
[ExecuteInEditMode]
public class SceneFader : MonoBehaviour
{
	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color FadeColor;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float Opacity;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer render;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color currentColor;

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x115A958", Offset = "0x115A958", VA = "0x115A958")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x115AAEC", Offset = "0x115AAEC", VA = "0x115AAEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x115ABFC", Offset = "0x115ABFC", VA = "0x115ABFC")]
	public SceneFader()
	{
	}
}
[Token(Token = "0x20002A3")]
public class ScoreController : MonoBehaviour
{
	[Token(Token = "0x20002A4")]
	public enum ScoreState
	{
		[Token(Token = "0x4000EBB")]
		Normal,
		[Token(Token = "0x4000EBC")]
		Bad,
		[Token(Token = "0x4000EBD")]
		Awesome,
		[Token(Token = "0x4000EBE")]
		PowerCharged
	}

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AnchorVelocity;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI ScoreLabel;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro ComboLabel;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI PowerUpComboLabel;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Anchor;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Arrow;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer ElectricityBar;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ScoreManager scoreManager;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem ComboFailPS;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animator BarAnimator;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator ProgressBarAnimator;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator ProgressPowerBarAnimator;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Animator ComboAnimator;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Animator SuperComboAnimator;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform LifeCounterAnchor;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform ScorePowerUpsAnchor;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ShinningFx PowerUpComboShinning;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject ComboFeedBackPrefab;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform AnchorComboFeedBack;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource PowerSuperComboAudio;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource PowerReadyAudio;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ParticleSystem.EmitParams PSParams;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Animator animator;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private ComboFeedBack ComboFeedBackPooled;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float visualMultiplier;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private ScoreState currentState;

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x115AC04", Offset = "0x115AC04", VA = "0x115AC04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x115B138", Offset = "0x115B138", VA = "0x115B138")]
	private void GameManager_SongRestarted()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x115B2DC", Offset = "0x115B2DC", VA = "0x115B2DC")]
	private void PowerUp_OnUsePowerUp(PowerUp powerUp)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x115B474", Offset = "0x115B474", VA = "0x115B474")]
	private void PowerUp_OnPowerUpEnded(PowerUp powerUp)
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x115B5EC", Offset = "0x115B5EC", VA = "0x115B5EC")]
	public void CheckComboFeedback(float comboNumber)
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x115B1B0", Offset = "0x115B1B0", VA = "0x115B1B0")]
	private void ScoreManager_OnComboValueChanged(float prevValue, float value)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x115B168", Offset = "0x115B168", VA = "0x115B168")]
	private void ScoreManager_OnScoreValueChanged(float prevValue, float value)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x115B654", Offset = "0x115B654", VA = "0x115B654")]
	private void ScoreManager_OnPowerValueChanged(float prevValue, float value)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x115B8D4", Offset = "0x115B8D4", VA = "0x115B8D4")]
	public void ShowCombo(bool show)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x115B930", Offset = "0x115B930", VA = "0x115B930")]
	public void ComboUpFeedback()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x115B25C", Offset = "0x115B25C", VA = "0x115B25C")]
	public void HideCombo()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x115B704", Offset = "0x115B704", VA = "0x115B704")]
	public void SetState(ScoreState state)
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x115B7FC", Offset = "0x115B7FC", VA = "0x115B7FC")]
	public void SetElectricityBar(float t)
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x115B984", Offset = "0x115B984", VA = "0x115B984")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x115BD34", Offset = "0x115BD34", VA = "0x115BD34")]
	public void SetNoteFeedback(bool successed)
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x115BDE8", Offset = "0x115BDE8", VA = "0x115BDE8")]
	public void SetComboFail()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x115BE80", Offset = "0x115BE80", VA = "0x115BE80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x115C21C", Offset = "0x115C21C", VA = "0x115C21C")]
	public ScoreController()
	{
	}
}
[Token(Token = "0x20002A5")]
public class SecondaryHandController : MonoBehaviour
{
	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x115C22C", Offset = "0x115C22C", VA = "0x115C22C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x115C230", Offset = "0x115C230", VA = "0x115C230")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x115C234", Offset = "0x115C234", VA = "0x115C234")]
	public SecondaryHandController()
	{
	}
}
[Token(Token = "0x20002A6")]
public class ShaderIDs
{
	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int tintColor;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int angle;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int color;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int mainColor;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int indexLeftPosition;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int indexRightPosition;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int farFogColor;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int indexOpacity;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int middleOpacity;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int ringOpacity;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int pinkyOpacity;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int opacity;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int color1;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static int color2;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int val;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int intensity;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int noiseRepeat;

	[Token(Token = "0x17000152")]
	public static int NoiseRepeat
	{
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x115C23C", Offset = "0x115C23C", VA = "0x115C23C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000153")]
	public static int Intensity
	{
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x115C300", Offset = "0x115C300", VA = "0x115C300")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000154")]
	public static int TintColor
	{
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x115AA28", Offset = "0x115AA28", VA = "0x115AA28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000155")]
	public static int Angle
	{
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x115C3C4", Offset = "0x115C3C4", VA = "0x115C3C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000156")]
	public static int Color
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x115C488", Offset = "0x115C488", VA = "0x115C488")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000157")]
	public static int MainColor
	{
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x115C54C", Offset = "0x115C54C", VA = "0x115C54C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000158")]
	public static int IndexLeftPosition
	{
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x115C610", Offset = "0x115C610", VA = "0x115C610")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000159")]
	public static int IndexRightPosition
	{
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x115C6D4", Offset = "0x115C6D4", VA = "0x115C6D4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015A")]
	public static int FarFogColor
	{
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x115C798", Offset = "0x115C798", VA = "0x115C798")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015B")]
	public static int IndexOpacity
	{
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x115C85C", Offset = "0x115C85C", VA = "0x115C85C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015C")]
	public static int MiddleOpacity
	{
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x115C920", Offset = "0x115C920", VA = "0x115C920")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015D")]
	public static int RingOpacity
	{
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x115C9E4", Offset = "0x115C9E4", VA = "0x115C9E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015E")]
	public static int PinkyOpacity
	{
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x115CAA8", Offset = "0x115CAA8", VA = "0x115CAA8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015F")]
	public static int Opacity
	{
		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x115CB6C", Offset = "0x115CB6C", VA = "0x115CB6C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000160")]
	public static int Color1
	{
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x115CC30", Offset = "0x115CC30", VA = "0x115CC30")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000161")]
	public static int Color2
	{
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x115CCF4", Offset = "0x115CCF4", VA = "0x115CCF4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000162")]
	public static int Val
	{
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x115CDB8", Offset = "0x115CDB8", VA = "0x115CDB8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x115CE7C", Offset = "0x115CE7C", VA = "0x115CE7C")]
	public ShaderIDs()
	{
	}
}
[Token(Token = "0x20002A7")]
public class ShaderPerPlatform : MonoBehaviour
{
	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformShaderType ShaderType;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material MaterialToChange;

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x115CEDC", Offset = "0x115CEDC", VA = "0x115CEDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x115D11C", Offset = "0x115D11C", VA = "0x115D11C")]
	public ShaderPerPlatform()
	{
	}
}
[Token(Token = "0x20002A8")]
public class CampaignManager : MonoBehaviour
{
	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CampaignManager I;

	[Token(Token = "0x17000163")]
	public bool IsLastAlbumCompleted
	{
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x115D294", Offset = "0x115D294", VA = "0x115D294")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000164")]
	public List<AlbumData> CampaingAlbums
	{
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x115D3F0", Offset = "0x115D3F0", VA = "0x115D3F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000081")]
	public static event Action OnNewAlbumUnlocked
	{
		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x115D124", Offset = "0x115D124", VA = "0x115D124")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x115D1DC", Offset = "0x115D1DC", VA = "0x115D1DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x115D444", Offset = "0x115D444", VA = "0x115D444")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x115D51C", Offset = "0x115D51C", VA = "0x115D51C")]
	public bool GetIfIsCampaignAlbum(SongAsset songAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x115A420", Offset = "0x115A420", VA = "0x115A420")]
	public bool GetIfIsCampaignAlbum(AlbumData songListAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x115D574", Offset = "0x115D574", VA = "0x115D574")]
	public bool GetIfNextAlbumExists(SongAsset songAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x115D698", Offset = "0x115D698", VA = "0x115D698")]
	public bool GetIfNextAlbumExists(AlbumData songListAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x115D7B8", Offset = "0x115D7B8", VA = "0x115D7B8")]
	public bool GetIfPreviousAlbumExists(SongAsset songAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x115D8BC", Offset = "0x115D8BC", VA = "0x115D8BC")]
	public bool GetIfPreviousAlbumExists(AlbumData songListAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x115D824", Offset = "0x115D824", VA = "0x115D824")]
	public AlbumData GetPreviousAlbum(SongAsset songAsset)
	{
		return null;
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x115D928", Offset = "0x115D928", VA = "0x115D928")]
	public AlbumData GetPreviousAlbum(AlbumData songListAsset)
	{
		return null;
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x115D5E0", Offset = "0x115D5E0", VA = "0x115D5E0")]
	public AlbumData GetNextAlbum(SongAsset songAsset)
	{
		return null;
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x115D704", Offset = "0x115D704", VA = "0x115D704")]
	public AlbumData GetNextAlbum(AlbumData songListAsset)
	{
		return null;
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x115D9BC", Offset = "0x115D9BC", VA = "0x115D9BC")]
	public List<LpUnlockRules.RuleStatus> GetAlbumRules(SongAsset songAsset)
	{
		return null;
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x115D9E4", Offset = "0x115D9E4", VA = "0x115D9E4")]
	public List<LpUnlockRules.RuleStatus> GetAlbumRules(AlbumData album)
	{
		return null;
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x115A474", Offset = "0x115A474", VA = "0x115A474")]
	public List<LpUnlockRules.RuleStatus> GetCurrentRules(AlbumData album)
	{
		return null;
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x115DA04", Offset = "0x115DA04", VA = "0x115DA04")]
	public List<LpUnlockRules.RuleStatus> GetNotFulfilledAlbumRules(SongAsset songAsset)
	{
		return null;
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x115DA2C", Offset = "0x115DA2C", VA = "0x115DA2C")]
	public bool IsCurrentAlbumCompleted(SongAsset songAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x115DA54", Offset = "0x115DA54", VA = "0x115DA54")]
	public bool IsCurrentAlbumCompleted(AlbumData songListAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x115DA74", Offset = "0x115DA74", VA = "0x115DA74")]
	public bool IsPreviousAlbumCompleted(SongAsset songAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x115DB60", Offset = "0x115DB60", VA = "0x115DB60")]
	public bool IsPreviousAlbumCompleted(AlbumData songListAsset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x115DC4C", Offset = "0x115DC4C", VA = "0x115DC4C")]
	public bool IsLastSongInGame(SongAsset song)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x115DCD0", Offset = "0x115DCD0", VA = "0x115DCD0")]
	public void EvaluateCampaignAlbumCompleted(SongAsset songAsset)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x115DDB4", Offset = "0x115DDB4", VA = "0x115DDB4")]
	public void EvaluateCampaignAlbumCompleted(AlbumData songListAsset)
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x115DE94", Offset = "0x115DE94", VA = "0x115DE94")]
	public CampaignManager()
	{
	}
}
[Token(Token = "0x20002AA")]
public class GameStateManager : MonoBehaviour
{
	[Token(Token = "0x20002AB")]
	public enum GameState
	{
		[Token(Token = "0x4000EFA")]
		Intro,
		[Token(Token = "0x4000EFB")]
		StartSpace,
		[Token(Token = "0x4000EFC")]
		Tutorial,
		[Token(Token = "0x4000EFD")]
		Playing,
		[Token(Token = "0x4000EFE")]
		EndSpace,
		[Token(Token = "0x4000EFF")]
		Settings,
		[Token(Token = "0x4000F00")]
		Pause,
		[Token(Token = "0x4000F01")]
		BackStage,
		[Token(Token = "0x4000F02")]
		Campaign,
		[Token(Token = "0x4000F03")]
		Preparation
	}

	[StructLayout(3)]
	[Token(Token = "0x20002B2")]
	[CompilerGenerated]
	private struct <PrepareGame>d__64 : IAsyncStateMachine
	{
		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameStateManager <>4__this;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object <>u__1;

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1162EB8", Offset = "0x1162EB8", VA = "0x1162EB8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x116370C", Offset = "0x116370C", VA = "0x116370C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x20002B3")]
	[CompilerGenerated]
	private sealed class <ShowIntro>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x11638D0", Offset = "0x11638D0", VA = "0x11638D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x1163918", Offset = "0x1163918", VA = "0x1163918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1161020", Offset = "0x1161020", VA = "0x1161020")]
		[DebuggerHidden]
		public <ShowIntro>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1163718", Offset = "0x1163718", VA = "0x1163718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x116371C", Offset = "0x116371C", VA = "0x116371C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x11638D8", Offset = "0x11638D8", VA = "0x11638D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ShowIntroInEditor;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameScene currentScene;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameState CurrentGameState;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public InstrumentSelect CurrentInstrumentSelect;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DifficultyLevel currentDifficulty;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool GodMode;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool RewindMode;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool GuitarMode;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool DrumMode;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsOnPracticeMode;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool IntroActived;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float InitialTimePercent;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OVROverlay loadingOverlay;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsInIntro;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Stack<DifficultyLevel> CurrentSessionSongsPlayedDifficulty;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TexturePreCatcher TextureLoader;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ShaderVariantCollection ShaderPreloading;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ShaderVariantCollection ShaderPreloading2;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject IntroScene;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject LogosScene;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject EndSpace;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject InstantiatedEndSpace;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject PauseSpaceGO;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool introHasBeenShown;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool areTexturesLoaded;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private VRInteractionType interactionType;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject infoPanel;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameScenes RestartingScene;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Action UnloadSceneActionForRestart;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AsyncOperation ReloadSceneOperation;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameStateManager I;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool showingPlan;

	[Token(Token = "0x17000165")]
	public DifficultyLevel CurrentDifficulty
	{
		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x115DF78", Offset = "0x115DF78", VA = "0x115DF78")]
		get
		{
			return default(DifficultyLevel);
		}
		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x115DF80", Offset = "0x115DF80", VA = "0x115DF80")]
		set
		{
		}
	}

	[Token(Token = "0x17000166")]
	public bool LastSongsWereEasy
	{
		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x115E17C", Offset = "0x115E17C", VA = "0x115E17C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000167")]
	private bool isAlreadyPaused
	{
		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x115E32C", Offset = "0x115E32C", VA = "0x115E32C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000168")]
	public bool ComeFromTutorial
	{
		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x115E38C", Offset = "0x115E38C", VA = "0x115E38C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000169")]
	public bool ShowingPlan
	{
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1161730", Offset = "0x1161730", VA = "0x1161730")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1161738", Offset = "0x1161738", VA = "0x1161738")]
		set
		{
		}
	}

	[Token(Token = "0x14000082")]
	public event Action<DifficultyLevel> DifficultyChanged
	{
		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x115E01C", Offset = "0x115E01C", VA = "0x115E01C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x115E0CC", Offset = "0x115E0CC", VA = "0x115E0CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000083")]
	public static event Action<bool> ShowPlanChanged
	{
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1161548", Offset = "0x1161548", VA = "0x1161548")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x116163C", Offset = "0x116163C", VA = "0x116163C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x115E558", Offset = "0x115E558", VA = "0x115E558")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x115E55C", Offset = "0x115E55C", VA = "0x115E55C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x115E90C", Offset = "0x115E90C", VA = "0x115E90C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x115EA2C", Offset = "0x115EA2C", VA = "0x115EA2C")]
	private void VRPlatformBase_InputControllerChanged(VRInteractionType interactionType)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x115EFC4", Offset = "0x115EFC4", VA = "0x115EFC4")]
	private void VRPlatformManager_VRUnMounted()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x115F170", Offset = "0x115F170", VA = "0x115F170")]
	private void VRPlatformManager_VRMounted()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x115F31C", Offset = "0x115F31C", VA = "0x115F31C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x115EFC8", Offset = "0x115EFC8", VA = "0x115EFC8")]
	private void AudioOut()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x115F174", Offset = "0x115F174", VA = "0x115F174")]
	private void AudioIn()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x115F328", Offset = "0x115F328", VA = "0x115F328")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x115F5CC", Offset = "0x115F5CC", VA = "0x115F5CC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x115F5D4", Offset = "0x115F5D4", VA = "0x115F5D4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x115F5DC", Offset = "0x115F5DC", VA = "0x115F5DC")]
	private void VRPlatformManager_EntitlementChecked(bool userIsEntitled)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x115F79C", Offset = "0x115F79C", VA = "0x115F79C")]
	private bool AppHasDeepLink()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x11601B8", Offset = "0x11601B8", VA = "0x11601B8")]
	private void AlbumsManager_AlbumLoaded(List<SongMappingMetaData> obj)
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x115ED98", Offset = "0x115ED98", VA = "0x115ED98")]
	public static void SetGameState(GameState gameState)
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x116086C", Offset = "0x116086C", VA = "0x116086C")]
	public void RestartScene(GameScenes gameScene, float delayInSeconds = 0f, [Optional] Action onUnloaded)
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x11609B0", Offset = "0x11609B0", VA = "0x11609B0")]
	private void RestartUnloadSceneCompleted(AsyncOperation obj)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x1160B00", Offset = "0x1160B00", VA = "0x1160B00")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x1160658", Offset = "0x1160658", VA = "0x1160658")]
	private void PauseGame()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x1160B50", Offset = "0x1160B50", VA = "0x1160B50")]
	private void CreatePausePanel()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x116049C", Offset = "0x116049C", VA = "0x116049C")]
	private void ShowEndSpace()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x116067C", Offset = "0x116067C", VA = "0x116067C")]
	[AsyncStateMachine(typeof(<PrepareGame>d__64))]
	private void PrepareGame()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x1160F14", Offset = "0x1160F14", VA = "0x1160F14")]
	private void GameManager_GameEnded()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x115FEF4", Offset = "0x115FEF4", VA = "0x115FEF4")]
	private void ShowStartSpace()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x1160734", Offset = "0x1160734", VA = "0x1160734")]
	private void ShowBackStage()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x115FE80", Offset = "0x115FE80", VA = "0x115FE80")]
	[IteratorStateMachine(typeof(<ShowIntro>d__68))]
	private IEnumerator ShowIntro()
	{
		return null;
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x1160238", Offset = "0x1160238", VA = "0x1160238")]
	private void ShowTutorial()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x1161048", Offset = "0x1161048", VA = "0x1161048")]
	private void GoToStartSpaceFromGamePlay()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x11613CC", Offset = "0x11613CC", VA = "0x11613CC")]
	private void TextureLoader_Loaded()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x11613D8", Offset = "0x11613D8", VA = "0x11613D8")]
	private void StartIntro()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x11614C4", Offset = "0x11614C4", VA = "0x11614C4")]
	private void Application_logMessageReceived(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x1160F64", Offset = "0x1160F64", VA = "0x1160F64")]
	public static AsyncOperation LoadGameScene(GameScenes scene, [Optional] Action<GameScene> OnLoaded, LoadSceneMode mode = LoadSceneMode.Additive, bool showLoading = true)
	{
		return null;
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x11617CC", Offset = "0x11617CC", VA = "0x11617CC")]
	public static AsyncOperation LoadGameScene(string scene, [Optional] Action<GameScene> OnLoaded, LoadSceneMode mode = LoadSceneMode.Additive, bool showLoading = true)
	{
		return null;
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x11612A0", Offset = "0x11612A0", VA = "0x11612A0")]
	public static AsyncOperation UnloadScene(GameScenes scene)
	{
		return null;
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x1161340", Offset = "0x1161340", VA = "0x1161340")]
	public static AsyncOperation UnloadScene(string scene)
	{
		return null;
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x115E7D0", Offset = "0x115E7D0", VA = "0x115E7D0")]
	private void WriteDebugInfo()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x116193C", Offset = "0x116193C", VA = "0x116193C")]
	public GameStateManager()
	{
	}
}
[Token(Token = "0x20002B5")]
public enum InstrumentSelect
{
	[Token(Token = "0x4000F23")]
	Guitar,
	[Token(Token = "0x4000F24")]
	Drum,
	[Token(Token = "0x4000F25")]
	Sign
}
[Token(Token = "0x20002B6")]
public enum GameScenes
{
	[Token(Token = "0x4000F27")]
	Intro,
	[Token(Token = "0x4000F28")]
	StartSpace,
	[Token(Token = "0x4000F29")]
	GamePlay,
	[Token(Token = "0x4000F2A")]
	GamePlayDrum,
	[Token(Token = "0x4000F2B")]
	GuitarSelection,
	[Token(Token = "0x4000F2C")]
	TutorialSteamVR,
	[Token(Token = "0x4000F2D")]
	TutorialOculus,
	[Token(Token = "0x4000F2E")]
	BackstageHallOfFame
}
[Token(Token = "0x20002B7")]
public enum DifficultyLevel
{
	[Token(Token = "0x4000F30")]
	SuperEasy,
	[Token(Token = "0x4000F31")]
	Easy,
	[Token(Token = "0x4000F32")]
	Normal,
	[Token(Token = "0x4000F33")]
	Hard
}
[Token(Token = "0x20002B8")]
public class PlatformShaderManager : MonoBehaviour
{
	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatformShaderManager I;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PlatformShader> PlatformShaders;

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x1163BE4", Offset = "0x1163BE4", VA = "0x1163BE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x115CFFC", Offset = "0x115CFFC", VA = "0x115CFFC")]
	public static Shader GetShader(PlatformShaderType shaderType)
	{
		return null;
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x1163C44", Offset = "0x1163C44", VA = "0x1163C44")]
	public PlatformShaderManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BA")]
public class PlatformShader
{
	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public PlatformShaderType ShaderType;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Shader SteamVRShader;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Shader OculusShader;

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x1163C70", Offset = "0x1163C70", VA = "0x1163C70")]
	public PlatformShader()
	{
	}
}
[Token(Token = "0x20002BB")]
public enum PlatformShaderType
{
	[Token(Token = "0x4000F3B")]
	PBR,
	[Token(Token = "0x4000F3C")]
	UnlitOpaque,
	[Token(Token = "0x4000F3D")]
	UnlitAdditive
}
[Serializable]
[Token(Token = "0x20002BC")]
public class SongAsset
{
	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string ID;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string OriginalFileName;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string Path;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AlbumData AlbumData;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool Active;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string IntermezzoID;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool HasPlayedIntermezzo;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float EasyPenaltyMultiplier;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 10f)]
	public float NormalPenaltyMultiplier;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 10f)]
	public float HardPenaltyMultiplier;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float PowerUpProbability;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool LockedAtStart;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsPurchased;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public uint steamDLCID;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float NormalizedVolumeDb;

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x1163C78", Offset = "0x1163C78", VA = "0x1163C78")]
	public string GetLeaderBoardID()
	{
		return null;
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x1163DF8", Offset = "0x1163DF8", VA = "0x1163DF8")]
	public SongSavedData GetSavedState()
	{
		return null;
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x1163E54", Offset = "0x1163E54", VA = "0x1163E54")]
	public SongAsset()
	{
	}
}
[Token(Token = "0x20002BD")]
public class SongConcertItem : MonoBehaviour
{
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SongMappingMetaData songData;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer CoverRenderer;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro BandName;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro SongName;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro DifficultyLabel;

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x1163E70", Offset = "0x1163E70", VA = "0x1163E70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x11640C4", Offset = "0x11640C4", VA = "0x11640C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x1164144", Offset = "0x1164144", VA = "0x1164144")]
	private void GameManager_SongRestarted()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x1164234", Offset = "0x1164234", VA = "0x1164234")]
	public SongConcertItem()
	{
	}
}
[Token(Token = "0x20002BE")]
public class SongItemOptionsController : MonoBehaviour
{
	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SongItemOptionsController I;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PurchaseButtons;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PurchaseInformationPanel;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Difficulty;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SelectorUIShowHideController PurchaseInAppUI;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SelectorUIShowHideController VenueSelectionUI;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SelectorUIShowHideController DifficultySelectionUI;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SelectorUIShowHideController PurchaseOutsideAppUI;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SelectorUIShowHideController CompleteCamapignUI;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI AlbumToCompleteLabel;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PressableButton buySongButton;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PressableButton buyAlbumButton;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SongMappingMetaData selectedSong;

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x116423C", Offset = "0x116423C", VA = "0x116423C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x1164294", Offset = "0x1164294", VA = "0x1164294")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x11645D4", Offset = "0x11645D4", VA = "0x11645D4")]
	private void BuyAlbumButton_Pressed()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x11647B0", Offset = "0x11647B0", VA = "0x11647B0")]
	private void BuySongButton_Pressed()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x1164920", Offset = "0x1164920", VA = "0x1164920")]
	private void StartSpace_AlbumChanged()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x1164574", Offset = "0x1164574", VA = "0x1164574")]
	private void HideAll()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x1164924", Offset = "0x1164924", VA = "0x1164924")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x1164B34", Offset = "0x1164B34", VA = "0x1164B34")]
	private void DlcManager_RefreshButtons(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x1164DF4", Offset = "0x1164DF4", VA = "0x1164DF4")]
	private void StartSpace_HideMainMenu(bool hidded)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x1164B38", Offset = "0x1164B38", VA = "0x1164B38")]
	private void SongMenu_SelectedSongHasStopped(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x1164DF8", Offset = "0x1164DF8", VA = "0x1164DF8")]
	public SongItemOptionsController()
	{
	}
}
[Token(Token = "0x20002C0")]
public class SongMenuItem : MonoBehaviour
{
	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LockedIcon;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string DebugName;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SongMappingMetaData songData;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSelected;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float NormalizedOffset;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float CumulativeOffset;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer CoverRenderer;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer FramedCoverRenderer;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject NormalLp;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject FramedLp;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro BandName;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro SongName;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro FileName;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject IsExternalIcon;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject HighScore;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Canvas HighScoreCanvas;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material CoverMaterial;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float InitialIndex;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Animator animator;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int animationHash;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform LeftAwardAnchor;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform MiddleAwardAnchor;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform RightAwardAnchor;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject EasyAwardPrefab;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject NormalAwardPrefab;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject HardAwardPrefab;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public PicksRankingSongMenuItemController PickRankingBarPrefab;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PicksRankingSongMenuItemController PickRankingBar;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform RankingAnchor;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool isFramed;

	[Token(Token = "0x1700016C")]
	public SongMappingMetaData SongData
	{
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1164F38", Offset = "0x1164F38", VA = "0x1164F38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1164F40", Offset = "0x1164F40", VA = "0x1164F40")]
		set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	public bool IsSelected
	{
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1165290", Offset = "0x1165290", VA = "0x1165290")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x1165298", Offset = "0x1165298", VA = "0x1165298")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public bool IsFramed
	{
		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x11652A4", Offset = "0x11652A4", VA = "0x11652A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x11652AC", Offset = "0x11652AC", VA = "0x11652AC")]
		set
		{
		}
	}

	[Token(Token = "0x14000084")]
	public event Action<SongMenuItem, bool> LapChanged
	{
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x11652F0", Offset = "0x11652F0", VA = "0x11652F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x11653A0", Offset = "0x11653A0", VA = "0x11653A0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x1164F5C", Offset = "0x1164F5C", VA = "0x1164F5C")]
	private void SetSong()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x1165558", Offset = "0x1165558", VA = "0x1165558")]
	private void UpdateAwards()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x116645C", Offset = "0x116645C", VA = "0x116645C")]
	private GameObject GetPrefabAwardFromDifficulty(DifficultyLevel lvl)
	{
		return null;
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x1165458", Offset = "0x1165458", VA = "0x1165458")]
	private void UpdateHighScore()
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x1166498", Offset = "0x1166498", VA = "0x1166498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x1166520", Offset = "0x1166520", VA = "0x1166520")]
	public void SetSelected()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x1166588", Offset = "0x1166588", VA = "0x1166588")]
	private void DifficultyChanged(DifficultyLevel diff)
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x116658C", Offset = "0x116658C", VA = "0x116658C")]
	public void SetOffSet(float offset)
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x116677C", Offset = "0x116677C", VA = "0x116677C")]
	public SongMenuItem()
	{
	}
}
[Token(Token = "0x20002C2")]
public class SongProgressionHelper
{
	[Token(Token = "0x20002C3")]
	public struct SongProgressionRange
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Range(0f, 1f)]
		public float OneStarMaxRange;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[Range(0f, 1f)]
		public float TwoStarMaxRange;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Range(0f, 1f)]
		public float ThreeStarMaxRange;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[Range(0f, 1f)]
		public float FourStarMaxRange;
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x116623C", Offset = "0x116623C", VA = "0x116623C")]
	public static bool HasBeenPlayed(SongAsset song)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x1166364", Offset = "0x1166364", VA = "0x1166364")]
	public static bool[] GetSongProgression(SongAsset song)
	{
		return null;
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x11667A0", Offset = "0x11667A0", VA = "0x11667A0")]
	public static int GetStars(DifficultyLevel difficulty, float ratio)
	{
		return default(int);
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x1166840", Offset = "0x1166840", VA = "0x1166840")]
	public static bool IsDiskAchieved(DifficultyLevel difficulty, float currentScoreRatio, float oldScoreRatio = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x1166884", Offset = "0x1166884", VA = "0x1166884")]
	public SongProgressionHelper()
	{
	}
}
[Token(Token = "0x20002C4")]
public class AlbumItem : MonoBehaviour
{
	[Token(Token = "0x20002C5")]
	public enum AlbumStates
	{
		[Token(Token = "0x4000FA4")]
		Back,
		[Token(Token = "0x4000FA5")]
		Front,
		[Token(Token = "0x4000FA6")]
		Hovered,
		[Token(Token = "0x4000FA7")]
		Grabbing,
		[Token(Token = "0x4000FA8")]
		Selected
	}

	[Token(Token = "0x20002C6")]
	[CompilerGenerated]
	private sealed class <DelayGoBackFromSelected>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayTime;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AlbumItem <>4__this;

		[Token(Token = "0x17000171")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001020")]
			[Address(RVA = "0x11685D4", Offset = "0x11685D4", VA = "0x11685D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0x116861C", Offset = "0x116861C", VA = "0x116861C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1167A78", Offset = "0x1167A78", VA = "0x1167A78")]
		[DebuggerHidden]
		public <DelayGoBackFromSelected>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x11684EC", Offset = "0x11684EC", VA = "0x11684EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x11684F0", Offset = "0x11684F0", VA = "0x11684F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x11685DC", Offset = "0x11685DC", VA = "0x11685DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator vinylAnimator;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InteractableObject vinylGrabber;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool UserAttemptingToSelect;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 BackRotation;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 FrontRotation;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 SelectedRotation;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SpriteRenderer selectionRing;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform selectionAnchor;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform interactionAnchor;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform lockedUI;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform highLightedUI;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public AlbumData AlbumData;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject SelectionParticles;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Animator animator;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AlbumStates currentState;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Renderer coverRenderer;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Renderer vinylRenderer;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ParticleSystem interactionParticles;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ParticleSystem.EmitParams ps;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private AlbumSelector selectorParent;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 initialGrabPosition;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 initialGrabberPosition;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 OriginalPosition;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 vinylTargetPosition;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 targetPosition;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private Quaternion targetRotation;

	[Token(Token = "0x1700016F")]
	public bool IsLocked
	{
		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1166CAC", Offset = "0x1166CAC", VA = "0x1166CAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000170")]
	public bool IsSelected
	{
		[Token(Token = "0x600100A")]
		[Address(RVA = "0x1166D00", Offset = "0x1166D00", VA = "0x1166D00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000085")]
	public event Action<AlbumItem> Hovered
	{
		[Token(Token = "0x6001003")]
		[Address(RVA = "0x116688C", Offset = "0x116688C", VA = "0x116688C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001004")]
		[Address(RVA = "0x116693C", Offset = "0x116693C", VA = "0x116693C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000086")]
	public event Action<AlbumItem> UnHovered
	{
		[Token(Token = "0x6001005")]
		[Address(RVA = "0x11669EC", Offset = "0x11669EC", VA = "0x11669EC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001006")]
		[Address(RVA = "0x1166A9C", Offset = "0x1166A9C", VA = "0x1166A9C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000087")]
	public event Action<AlbumItem> Selected
	{
		[Token(Token = "0x6001007")]
		[Address(RVA = "0x1166B4C", Offset = "0x1166B4C", VA = "0x1166B4C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001008")]
		[Address(RVA = "0x1166BFC", Offset = "0x1166BFC", VA = "0x1166BFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x1166D70", Offset = "0x1166D70", VA = "0x1166D70")]
	private void Awake()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x1166F88", Offset = "0x1166F88", VA = "0x1166F88")]
	private void Start()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x1167008", Offset = "0x1167008", VA = "0x1167008")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x1167090", Offset = "0x1167090", VA = "0x1167090")]
	private void I_SelectedChanged(AlbumData obj)
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x116700C", Offset = "0x116700C", VA = "0x116700C")]
	private void MarkAsSelected()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x1167094", Offset = "0x1167094", VA = "0x1167094")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x1167214", Offset = "0x1167214", VA = "0x1167214")]
	private void ItemActiveArea_Untouched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x1167234", Offset = "0x1167234", VA = "0x1167234")]
	private void ItemActiveArea_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x1167238", Offset = "0x1167238", VA = "0x1167238")]
	private void VinylGrabber_GrabUpdate(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x11679F4", Offset = "0x11679F4", VA = "0x11679F4")]
	[IteratorStateMachine(typeof(<DelayGoBackFromSelected>d__46))]
	private IEnumerator DelayGoBackFromSelected(float delayTime)
	{
		return null;
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x1167AA0", Offset = "0x1167AA0", VA = "0x1167AA0")]
	private void VinylGrabber_Grabbed(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x1167F20", Offset = "0x1167F20", VA = "0x1167F20")]
	private void VinylGrabber_Dropped(InteractiveHand hand)
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x1167FC4", Offset = "0x1167FC4", VA = "0x1167FC4")]
	public void UnlockingAnimationEnded()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x1167FC8", Offset = "0x1167FC8", VA = "0x1167FC8")]
	public void SetSongList(AlbumSelector selector, AlbumData albumAsset)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x1167B78", Offset = "0x1167B78", VA = "0x1167B78")]
	public void SetState(AlbumStates state, bool force = false)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x1168184", Offset = "0x1168184", VA = "0x1168184")]
	private void Update()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x116839C", Offset = "0x116839C", VA = "0x116839C")]
	public float DistanceToLine(Vector3 origin, Vector3 direction, Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x1168450", Offset = "0x1168450", VA = "0x1168450")]
	public AlbumItem()
	{
	}
}
[Token(Token = "0x20002C7")]
public class AlbumSelector : MonoBehaviour
{
	[Token(Token = "0x20002C9")]
	[CompilerGenerated]
	private sealed class <SetSongListDescription>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlbumSelector <>4__this;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AlbumData albumData;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x101AA28", Offset = "0x101AA28", VA = "0x101AA28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x101AA70", Offset = "0x101AA70", VA = "0x101AA70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x101A22C", Offset = "0x101A22C", VA = "0x101A22C")]
		[DebuggerHidden]
		public <SetSongListDescription>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x101A878", Offset = "0x101A878", VA = "0x101A878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x101A87C", Offset = "0x101A87C", VA = "0x101A87C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x101AA30", Offset = "0x101AA30", VA = "0x101AA30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<AlbumData> Albums;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject AlbumItemPrefab;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject SongListDescriptionPrefab;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform AlbumSongListDescriptionContainer;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform SelectionTarget;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform ItemsContainer;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public InteractableObject ActiveArea;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<AlbumItem> AlbumItems;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int hoveredIndex;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool LockDuringUserSelectingInteraction;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AlbumSongListItemController currentSongListDescription;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float itemHoveredTime;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AlbumItem previousHovered;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AlbumItem currentHovered;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private IEnumerator showSongList;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 firstItemPosition;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 lastItemPosition;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AlbumItem selectedAlbum;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AlbumItem hoveredAlbum;

	[Token(Token = "0x17000173")]
	public AlbumData Selected
	{
		[Token(Token = "0x600102F")]
		[Address(RVA = "0x1018BF0", Offset = "0x1018BF0", VA = "0x1018BF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000088")]
	public event Action<AlbumData> AlbumSelected
	{
		[Token(Token = "0x6001023")]
		[Address(RVA = "0x10183B0", Offset = "0x10183B0", VA = "0x10183B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1018460", Offset = "0x1018460", VA = "0x1018460")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000089")]
	public event Action<AlbumData> AlbumHovered
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1018510", Offset = "0x1018510", VA = "0x1018510")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001026")]
		[Address(RVA = "0x10185C0", Offset = "0x10185C0", VA = "0x10185C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400008A")]
	public event Action<AlbumData> AlbumUnHovered
	{
		[Token(Token = "0x6001027")]
		[Address(RVA = "0x1018670", Offset = "0x1018670", VA = "0x1018670")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1018720", Offset = "0x1018720", VA = "0x1018720")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400008B")]
	public event Action<AlbumSelector> SelectorUnHovered
	{
		[Token(Token = "0x6001029")]
		[Address(RVA = "0x10187D0", Offset = "0x10187D0", VA = "0x10187D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600102A")]
		[Address(RVA = "0x1018880", Offset = "0x1018880", VA = "0x1018880")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400008C")]
	public event Action<AlbumSelector> SelectorHovered
	{
		[Token(Token = "0x600102B")]
		[Address(RVA = "0x1018930", Offset = "0x1018930", VA = "0x1018930")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600102C")]
		[Address(RVA = "0x10189E0", Offset = "0x10189E0", VA = "0x10189E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400008D")]
	public event Action<AlbumSelector> AlbumListLoaded
	{
		[Token(Token = "0x600102D")]
		[Address(RVA = "0x1018A90", Offset = "0x1018A90", VA = "0x1018A90")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600102E")]
		[Address(RVA = "0x1018B40", Offset = "0x1018B40", VA = "0x1018B40")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x1018C08", Offset = "0x1018C08", VA = "0x1018C08")]
	private AlbumData GetSelected()
	{
		return null;
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x1018C20", Offset = "0x1018C20", VA = "0x1018C20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x1018D00", Offset = "0x1018D00", VA = "0x1018D00")]
	private void ActiveArea_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x1018FEC", Offset = "0x1018FEC", VA = "0x1018FEC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x1019304", Offset = "0x1019304", VA = "0x1019304")]
	private void ActiveArea_Untouched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x10194AC", Offset = "0x10194AC", VA = "0x10194AC")]
	public void SetList(List<AlbumData> albumList)
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x1019F50", Offset = "0x1019F50", VA = "0x1019F50")]
	private void Album_Selected(AlbumItem obj)
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x101A118", Offset = "0x101A118", VA = "0x101A118")]
	private void Album_UnHovered(AlbumItem album)
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x101A14C", Offset = "0x101A14C", VA = "0x101A14C")]
	private void Album_Hovered(AlbumItem album)
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x1019420", Offset = "0x1019420", VA = "0x1019420")]
	public void ShowSongList(AlbumData album)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x101A19C", Offset = "0x101A19C", VA = "0x101A19C")]
	[IteratorStateMachine(typeof(<SetSongListDescription>d__49))]
	private IEnumerator SetSongListDescription(AlbumData albumData)
	{
		return null;
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x101A254", Offset = "0x101A254", VA = "0x101A254")]
	private void Update()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x101A550", Offset = "0x101A550", VA = "0x101A550")]
	public void Hover(int hoveredIndex)
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x101A688", Offset = "0x101A688", VA = "0x101A688")]
	public AlbumSelector()
	{
	}
}
[Token(Token = "0x20002CB")]
public class CampaignUIController : MonoBehaviour
{
	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AlbumSelector AlbumSelector;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AlbumSelectorNavigator AlbumNavigator;

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x101AB28", Offset = "0x101AB28", VA = "0x101AB28")]
	private void Start()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x101ACC0", Offset = "0x101ACC0", VA = "0x101ACC0")]
	private void DebugModeManager_DebugAlbumUnlocked()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x101AD44", Offset = "0x101AD44", VA = "0x101AD44")]
	private void AlbumSelector_SelectorUnHovered(AlbumSelector obj)
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x101AD70", Offset = "0x101AD70", VA = "0x101AD70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x101AE54", Offset = "0x101AE54", VA = "0x101AE54")]
	private void AlbumSelector_AlbumHovered(AlbumData obj)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x101AE70", Offset = "0x101AE70", VA = "0x101AE70")]
	public CampaignUIController()
	{
	}
}
[Token(Token = "0x20002CC")]
public class DLCController : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20002CD")]
	[CompilerGenerated]
	private struct <SetAlbumContent>d__9 : IAsyncStateMachine
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DLCController <>4__this;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AlbumData> <nonEmptyAlbums>5__2;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<DLCAlbumData>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DLCAlbumData <album>5__4;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskAwaiter<List<SongMappingMetaData>> <>u__1;

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x101B68C", Offset = "0x101B68C", VA = "0x101B68C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x101BBA4", Offset = "0x101BBA4", VA = "0x101BBA4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AlbumSelector AlbumSelector;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AlbumSelectorNavigator AlbumNavigator;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage heroImage;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RawImage backgroundImage;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject TeasingChallengeUI;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SocialChallengeController socialChallengeController;

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x101AE78", Offset = "0x101AE78", VA = "0x101AE78")]
	public void Start()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x101B354", Offset = "0x101B354", VA = "0x101B354")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x101B488", Offset = "0x101B488", VA = "0x101B488")]
	private void AlbumSelector_AlbumSelected(AlbumData obj)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x101B134", Offset = "0x101B134", VA = "0x101B134")]
	[AsyncStateMachine(typeof(<SetAlbumContent>d__9))]
	public void SetAlbumContent()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x101B1EC", Offset = "0x101B1EC", VA = "0x101B1EC")]
	private void AlbumSelector_SelectorUnHovered(AlbumSelector obj)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x101B520", Offset = "0x101B520", VA = "0x101B520")]
	private void AlbumSelector_AlbumHovered(AlbumData obj)
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x101B684", Offset = "0x101B684", VA = "0x101B684")]
	public DLCController()
	{
	}
}
[Token(Token = "0x20002CE")]
public class InformationPanelController : MonoBehaviour
{
	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PressableButton AgreeButton;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer ImageMessageRenderer;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator animator;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform PanelAnchor;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action onAgree;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action onPanelOpened;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action onPanelClosed;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isInitialized;

	[Token(Token = "0x17000176")]
	public bool IsInitialized
	{
		[Token(Token = "0x600105D")]
		[Address(RVA = "0x101BE20", Offset = "0x101BE20", VA = "0x101BE20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400008E")]
	public event Action InformationPanelOpened
	{
		[Token(Token = "0x6001059")]
		[Address(RVA = "0x101BBB0", Offset = "0x101BBB0", VA = "0x101BBB0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600105A")]
		[Address(RVA = "0x101BC4C", Offset = "0x101BC4C", VA = "0x101BC4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400008F")]
	public event Action InformationPanelClosed
	{
		[Token(Token = "0x600105B")]
		[Address(RVA = "0x101BCE8", Offset = "0x101BCE8", VA = "0x101BCE8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600105C")]
		[Address(RVA = "0x101BD84", Offset = "0x101BD84", VA = "0x101BD84")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x101BE28", Offset = "0x101BE28", VA = "0x101BE28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x101BF08", Offset = "0x101BF08", VA = "0x101BF08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x101BF94", Offset = "0x101BF94", VA = "0x101BF94")]
	private void AgreeButton_Pressed()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x101C018", Offset = "0x101C018", VA = "0x101C018")]
	public void Initialize(InformationPanelData info, [Optional] Action onAgree, [Optional] Action onPanelOpened, [Optional] Action onPanelClosed)
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x101C0A4", Offset = "0x101C0A4", VA = "0x101C0A4")]
	public void OnPanelClosed()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x101C100", Offset = "0x101C100", VA = "0x101C100")]
	public void OnPanelOpened()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x101C144", Offset = "0x101C144", VA = "0x101C144")]
	public void OpenPanel()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x101BFC4", Offset = "0x101BFC4", VA = "0x101BFC4")]
	public void ClosePanel()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x101C178", Offset = "0x101C178", VA = "0x101C178")]
	public InformationPanelController()
	{
	}
}
[Token(Token = "0x20002CF")]
public class SelectedAlbumUIController : MonoBehaviour
{
	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI AlbumNameLabel;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI AlbumNameShadow;

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x101C180", Offset = "0x101C180", VA = "0x101C180")]
	public void Start()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x101C184", Offset = "0x101C184", VA = "0x101C184")]
	public void SetAlbum()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x101C200", Offset = "0x101C200", VA = "0x101C200")]
	public SelectedAlbumUIController()
	{
	}
}
[Token(Token = "0x20002D0")]
public class SongMenu : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20002D1")]
	[CompilerGenerated]
	private struct <ChangeAlbum>d__54 : IAsyncStateMachine
	{
		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongMenu <>4__this;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SongMappingMetaData> songsLoaded;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object <>u__2;

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x101F08C", Offset = "0x101F08C", VA = "0x101F08C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x101F44C", Offset = "0x101F44C", VA = "0x101F44C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x20002D3")]
	[CompilerGenerated]
	private sealed class <PlaySampleDelayed>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SongMenu <>4__this;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x101F608", Offset = "0x101F608", VA = "0x101F608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x101F650", Offset = "0x101F650", VA = "0x101F650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x101D444", Offset = "0x101D444", VA = "0x101D444")]
		[DebuggerHidden]
		public <PlaySampleDelayed>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x101F54C", Offset = "0x101F54C", VA = "0x101F54C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x101F550", Offset = "0x101F550", VA = "0x101F550", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x101F610", Offset = "0x101F610", VA = "0x101F610", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D4")]
	[CompilerGenerated]
	private sealed class <CheckSpinningCarousel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongMenu <>4__this;

		[Token(Token = "0x1700017D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x101F770", Offset = "0x101F770", VA = "0x101F770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x101F7B8", Offset = "0x101F7B8", VA = "0x101F7B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x101D4E0", Offset = "0x101D4E0", VA = "0x101D4E0")]
		[DebuggerHidden]
		public <CheckSpinningCarousel>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x101F658", Offset = "0x101F658", VA = "0x101F658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x101F65C", Offset = "0x101F65C", VA = "0x101F65C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x101F778", Offset = "0x101F778", VA = "0x101F778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D5")]
	[CompilerGenerated]
	private sealed class <NextItemInSeconds>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float s;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SongMenu <>4__this;

		[Token(Token = "0x1700017F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x101F8B0", Offset = "0x101F8B0", VA = "0x101F8B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x101F8F8", Offset = "0x101F8F8", VA = "0x101F8F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x101DADC", Offset = "0x101DADC", VA = "0x101DADC")]
		[DebuggerHidden]
		public <NextItemInSeconds>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x101F7C0", Offset = "0x101F7C0", VA = "0x101F7C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x101F7C4", Offset = "0x101F7C4", VA = "0x101F7C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x101F8B8", Offset = "0x101F8B8", VA = "0x101F8B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D6")]
	[CompilerGenerated]
	private sealed class <PrevItemInSeconds>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float s;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SongMenu <>4__this;

		[Token(Token = "0x17000181")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x101F9F0", Offset = "0x101F9F0", VA = "0x101F9F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x101FA38", Offset = "0x101FA38", VA = "0x101FA38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x101DB04", Offset = "0x101DB04", VA = "0x101DB04")]
		[DebuggerHidden]
		public <PrevItemInSeconds>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x101F900", Offset = "0x101F900", VA = "0x101F900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x101F904", Offset = "0x101F904", VA = "0x101F904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x101F9F8", Offset = "0x101F9F8", VA = "0x101F9F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20002D7")]
	[CompilerGenerated]
	private struct <EnterMenu>d__71 : IAsyncStateMachine
	{
		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongMenu <>4__this;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x101FA40", Offset = "0x101FA40", VA = "0x101FA40", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x1020194", Offset = "0x1020194", VA = "0x1020194", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20002D8")]
	[CompilerGenerated]
	private struct <ExitMenu>d__72 : IAsyncStateMachine
	{
		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongMenu <>4__this;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x10201A0", Offset = "0x10201A0", VA = "0x10201A0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x1020910", Offset = "0x1020910", VA = "0x1020910", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isLoadSampleReady;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro SelectedSongDebugLabel;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ItemsPresenter;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SongItemPrefab;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PressableButton Prev;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PressableButton Next;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PressableButton DefaultAlbumButton;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PressableButton DLC1AlbumButton;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public InteractableObject touchArea;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Mp3Player MusicPlayer;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxItems;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float CumulativeOffset;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve DragSpinVelocity;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int InitialOffset;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool ForceUpdateIndex;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float SampleVolume;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float SamplePlayDelay;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float CarouselSpinningDelay;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float DurationSampleOut;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float DurationSampleIn;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem particles;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AudioSource SongSample;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Coroutine SampleOn;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine CarouselSpinning;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool isDebugActive;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float smoothVirtualizedOffset;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int Index;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<SongMenuItem> virtualizedItemList;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<SongMappingMetaData> songList;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int CumulativeIndex;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int selectedIndex;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float Offset;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 currentTouchPoint;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float touchSpinAngle;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 touchFingerVelocity;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int middleElementOffset;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private AudioSource AudioFx;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Tween sampleVolumeTween;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Tween samplePlayFadeOutTween;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int initialOffsetCount;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float prevOffset;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float deltaOffset;

	[Token(Token = "0x17000177")]
	public SongMappingMetaData SelectedSong
	{
		[Token(Token = "0x600106E")]
		[Address(RVA = "0x101C540", Offset = "0x101C540", VA = "0x101C540")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000178")]
	public string CurrentAlbum
	{
		[Token(Token = "0x600106F")]
		[Address(RVA = "0x101C670", Offset = "0x101C670", VA = "0x101C670")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000179")]
	public int SelectedIndex
	{
		[Token(Token = "0x6001070")]
		[Address(RVA = "0x101C610", Offset = "0x101C610", VA = "0x101C610")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001071")]
		[Address(RVA = "0x101C69C", Offset = "0x101C69C", VA = "0x101C69C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public bool IsDebugActive
	{
		[Token(Token = "0x6001072")]
		[Address(RVA = "0x101C794", Offset = "0x101C794", VA = "0x101C794")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001073")]
		[Address(RVA = "0x101C79C", Offset = "0x101C79C", VA = "0x101C79C")]
		set
		{
		}
	}

	[Token(Token = "0x14000090")]
	public static event Action<SongMappingMetaData> SelectedSongChanged
	{
		[Token(Token = "0x600106A")]
		[Address(RVA = "0x101C208", Offset = "0x101C208", VA = "0x101C208")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600106B")]
		[Address(RVA = "0x101C2D4", Offset = "0x101C2D4", VA = "0x101C2D4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000091")]
	public static event Action<SongMappingMetaData> SelectedSongHasStopped
	{
		[Token(Token = "0x600106C")]
		[Address(RVA = "0x101C3A0", Offset = "0x101C3A0", VA = "0x101C3A0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600106D")]
		[Address(RVA = "0x101C470", Offset = "0x101C470", VA = "0x101C470")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x101C7D4", Offset = "0x101C7D4", VA = "0x101C7D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x101CA0C", Offset = "0x101CA0C", VA = "0x101CA0C")]
	[AsyncStateMachine(typeof(<ChangeAlbum>d__54))]
	public Task ChangeAlbum(List<SongMappingMetaData> songsLoaded)
	{
		return null;
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x101CB0C", Offset = "0x101CB0C", VA = "0x101CB0C")]
	private void TouchArea_Untouched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x101CBDC", Offset = "0x101CBDC", VA = "0x101CBDC")]
	private void TouchArea_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x101CC68", Offset = "0x101CC68", VA = "0x101CC68")]
	private void generateItems()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x101D1B0", Offset = "0x101D1B0", VA = "0x101D1B0")]
	public void PlaySelectedItemSample()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x101D354", Offset = "0x101D354", VA = "0x101D354")]
	public void CheckIfPlayCurrentItemSample()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x101D3C0", Offset = "0x101D3C0", VA = "0x101D3C0")]
	[IteratorStateMachine(typeof(<PlaySampleDelayed>d__62))]
	private IEnumerator PlaySampleDelayed(float delay)
	{
		return null;
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x101C740", Offset = "0x101C740", VA = "0x101C740")]
	public void CheckIfCarouselHasStoped()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x101D46C", Offset = "0x101D46C", VA = "0x101D46C")]
	[IteratorStateMachine(typeof(<CheckSpinningCarousel>d__64))]
	private IEnumerator CheckSpinningCarousel()
	{
		return null;
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x101D508", Offset = "0x101D508", VA = "0x101D508")]
	private void Next_Pressed()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x101D594", Offset = "0x101D594", VA = "0x101D594")]
	private void Prev_Pressed()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x101D620", Offset = "0x101D620", VA = "0x101D620")]
	private void CreateAlbum()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x101D9D4", Offset = "0x101D9D4", VA = "0x101D9D4")]
	[IteratorStateMachine(typeof(<NextItemInSeconds>d__69))]
	public IEnumerator NextItemInSeconds(float s)
	{
		return null;
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x101DA58", Offset = "0x101DA58", VA = "0x101DA58")]
	[IteratorStateMachine(typeof(<PrevItemInSeconds>d__70))]
	public IEnumerator PrevItemInSeconds(float s)
	{
		return null;
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x101DB2C", Offset = "0x101DB2C", VA = "0x101DB2C")]
	[AsyncStateMachine(typeof(<EnterMenu>d__71))]
	public Task EnterMenu()
	{
		return null;
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x101DC18", Offset = "0x101DC18", VA = "0x101DC18")]
	[AsyncStateMachine(typeof(<ExitMenu>d__72))]
	public Task ExitMenu()
	{
		return null;
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x101DD04", Offset = "0x101DD04", VA = "0x101DD04")]
	private void RecalculateData(SongMenuItem item, bool isClockwise)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x101DDD4", Offset = "0x101DDD4", VA = "0x101DDD4")]
	public void Update()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x101E694", Offset = "0x101E694", VA = "0x101E694")]
	private void CalculateParticles()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x101EBE0", Offset = "0x101EBE0", VA = "0x101EBE0")]
	public SongMenu()
	{
	}
}
[Token(Token = "0x20002D9")]
public class StartSpace : GameScene
{
	[Token(Token = "0x20002DA")]
	[CompilerGenerated]
	private sealed class <PlaceUIRelativeToUserDelayed>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x1023AB8", Offset = "0x1023AB8", VA = "0x1023AB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0x1023B00", Offset = "0x1023B00", VA = "0x1023B00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1021630", Offset = "0x1021630", VA = "0x1021630")]
		[DebuggerHidden]
		public <PlaceUIRelativeToUserDelayed>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x10239FC", Offset = "0x10239FC", VA = "0x10239FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1023A00", Offset = "0x1023A00", VA = "0x1023A00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1023AC0", Offset = "0x1023AC0", VA = "0x1023AC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20002DB")]
	[CompilerGenerated]
	private struct <HideStartSpace>d__60 : IAsyncStateMachine
	{
		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StartSpace <>4__this;

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1023B08", Offset = "0x1023B08", VA = "0x1023B08", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1023BEC", Offset = "0x1023BEC", VA = "0x1023BEC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20002DC")]
	[CompilerGenerated]
	private struct <OpenSettings>d__61 : IAsyncStateMachine
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StartSpace <>4__this;

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x1023BF8", Offset = "0x1023BF8", VA = "0x1023BF8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x1023E9C", Offset = "0x1023E9C", VA = "0x1023E9C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20002DE")]
	[CompilerGenerated]
	private struct <ShowMenu>d__65 : IAsyncStateMachine
	{
		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StartSpace <>4__this;

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1023F84", Offset = "0x1023F84", VA = "0x1023F84", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x102409C", Offset = "0x102409C", VA = "0x102409C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StartSpace I;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action StartGame;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action GoToBackStage;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<bool> HideMainMenu;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SongMenu songMenu;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PressableButton StartButton;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PressableButton SettingsButton;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PressableButton CustomizeButton;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PressableButton CampaignButton;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool ShowTutorial;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject SettingsAnchor;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject SettingsPrefab;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject WarningPanelPrefab;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CampaignUIControllerNew CampaignAlbumSelectorNew;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DLCControllerNew DLCAlbumSelectorNew;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject StartSpaceLp;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject StartSpaceAuxLp;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SelectedAlbumUIController selectedAlbumUI;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SocialChallengeController challengeController;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SettingsController settingsController;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public WarningPanelController warningPanelController;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform ShowPlanFreshInstallAnchor;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro versionNumber;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public DifficultyPanelController difficultyPanel;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RuleItems ruleItem;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AlbumChallengesController albumChallengesController;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public InformationPanelController InformationPanel;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Action onStartSpaceMovedAway;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AlbumData previousAlbumSelected;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private DebugModeManager debugManager;

	[Token(Token = "0x17000183")]
	internal bool HasDoneTutorial
	{
		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x1020C34", Offset = "0x1020C34", VA = "0x1020C34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000092")]
	public static event Action<List<SongMappingMetaData>> NewAlbumLoaded
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x102091C", Offset = "0x102091C", VA = "0x102091C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x10209EC", Offset = "0x10209EC", VA = "0x10209EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000093")]
	public static event Action AlbumChanged
	{
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x1020ABC", Offset = "0x1020ABC", VA = "0x1020ABC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x1020B78", Offset = "0x1020B78", VA = "0x1020B78")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x1020CD0", Offset = "0x1020CD0", VA = "0x1020CD0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x1020F48", Offset = "0x1020F48", VA = "0x1020F48")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x102145C", Offset = "0x102145C", VA = "0x102145C")]
	[IteratorStateMachine(typeof(<PlaceUIRelativeToUserDelayed>d__40))]
	private IEnumerator PlaceUIRelativeToUserDelayed()
	{
		return null;
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x1021658", Offset = "0x1021658", VA = "0x1021658")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x1021AB8", Offset = "0x1021AB8", VA = "0x1021AB8")]
	public void SetSelectedAlbumUI()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x1021AD0", Offset = "0x1021AD0", VA = "0x1021AD0")]
	private void LoadDefaultAlbum(List<SongMappingMetaData> songs)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x1021AE8", Offset = "0x1021AE8", VA = "0x1021AE8")]
	private void I_AlbumLoaded(List<SongMappingMetaData> songs)
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x1021B58", Offset = "0x1021B58", VA = "0x1021B58")]
	private void AlbumSelected(AlbumData album)
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x1021550", Offset = "0x1021550", VA = "0x1021550")]
	private void SetChallengeSetup(AlbumData album)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x1021EA4", Offset = "0x1021EA4", VA = "0x1021EA4")]
	private void ChangeLpAnimationStarted()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x1021FBC", Offset = "0x1021FBC", VA = "0x1021FBC")]
	private void ChangeLpAnimationEnded()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x102206C", Offset = "0x102206C", VA = "0x102206C")]
	private void PlaceUIRelativeToUser()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x1022558", Offset = "0x1022558", VA = "0x1022558")]
	private void VRPlatformManager_HeadsetRecentered()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x102255C", Offset = "0x102255C", VA = "0x102255C")]
	private void RefreshSelectedSong()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x1021C2C", Offset = "0x1021C2C", VA = "0x1021C2C")]
	private void SongMenu_SelectedSongChanged(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x1022584", Offset = "0x1022584", VA = "0x1022584")]
	private void VenueSelectionController_SelectVenueChange()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x102260C", Offset = "0x102260C", VA = "0x102260C")]
	private void SettingsSpace_SettingClosed()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x10226A0", Offset = "0x10226A0", VA = "0x10226A0")]
	private void MoveInStartSpace()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x102277C", Offset = "0x102277C", VA = "0x102277C")]
	private void WarningPanel_WarningPanelclosed()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x1022890", Offset = "0x1022890", VA = "0x1022890")]
	private void SettingsButton_Pressed()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x1022958", Offset = "0x1022958", VA = "0x1022958")]
	private void DlcManager_PurchaseFailed()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x10229C8", Offset = "0x10229C8", VA = "0x10229C8")]
	private void OpenWarningPanel()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x1022BB8", Offset = "0x1022BB8", VA = "0x1022BB8")]
	[AsyncStateMachine(typeof(<HideStartSpace>d__60))]
	public void HideStartSpace()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x1022C6C", Offset = "0x1022C6C", VA = "0x1022C6C")]
	[AsyncStateMachine(typeof(<OpenSettings>d__61))]
	public void OpenSettings()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x1022D20", Offset = "0x1022D20", VA = "0x1022D20")]
	public void StartSpaceMovedAway()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x1022D44", Offset = "0x1022D44", VA = "0x1022D44")]
	private void CustomizeButton_Pressed()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x1022E24", Offset = "0x1022E24", VA = "0x1022E24")]
	public void EnterStartSpace()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x1022F10", Offset = "0x1022F10", VA = "0x1022F10")]
	[AsyncStateMachine(typeof(<ShowMenu>d__65))]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x1022FC4", Offset = "0x1022FC4", VA = "0x1022FC4")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x1023010", Offset = "0x1023010", VA = "0x1023010")]
	public void EnterEnded()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x10230A0", Offset = "0x10230A0", VA = "0x10230A0")]
	private void TryToShowInformationPanel()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x1023124", Offset = "0x1023124", VA = "0x1023124")]
	private void DifficultyPanel_DifficultyChanged(DifficultyLevel difficulty)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x1023190", Offset = "0x1023190", VA = "0x1023190")]
	private void ShowTutorialToggle_CheckedChanged(bool obj)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x10214BC", Offset = "0x10214BC", VA = "0x10214BC")]
	public void StartIntroAnimation()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x10231DC", Offset = "0x10231DC", VA = "0x10231DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x1023244", Offset = "0x1023244", VA = "0x1023244", Slot = "5")]
	public override void EnterScene()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x1023270", Offset = "0x1023270", VA = "0x1023270", Slot = "6")]
	public override void ExitScene()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x1023278", Offset = "0x1023278", VA = "0x1023278")]
	public static void Enter()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x10232D0", Offset = "0x10232D0", VA = "0x10232D0")]
	private void AnimationEnd()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x102333C", Offset = "0x102333C", VA = "0x102333C")]
	private void StartButton_Pressed()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x1020EE8", Offset = "0x1020EE8", VA = "0x1020EE8")]
	public void SetInitialSongInMenu()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x1023584", Offset = "0x1023584", VA = "0x1023584")]
	public void SetSelectedVenue()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x1023588", Offset = "0x1023588", VA = "0x1023588")]
	public StartSpace()
	{
	}
}
[Token(Token = "0x20002E0")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000188")]
	public static bool Initialized
	{
		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1024170", Offset = "0x1024170", VA = "0x1024170")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x1024178", Offset = "0x1024178", VA = "0x1024178")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20002E1")]
public class StringsVisualsController : MonoBehaviour
{
	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Metronome metronome;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<StringManager> StringsController;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color ColorStringBase;

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x1024180", Offset = "0x1024180", VA = "0x1024180")]
	private void Start()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x1024248", Offset = "0x1024248", VA = "0x1024248")]
	public void HideStrings()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x1024504", Offset = "0x1024504", VA = "0x1024504")]
	public void ShowStrings()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x10247D8", Offset = "0x10247D8", VA = "0x10247D8")]
	public StringsVisualsController()
	{
	}
}
[Token(Token = "0x20002E4")]
public class SubtitleController : MonoBehaviour
{
	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string SubtitlePath;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoPlayer Video;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro TextLine;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SRTParser SrtParser;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SubtitleBlock currentSubtitle;

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x10248E0", Offset = "0x10248E0", VA = "0x10248E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x1024B00", Offset = "0x1024B00", VA = "0x1024B00")]
	private void Update()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x1024BB4", Offset = "0x1024BB4", VA = "0x1024BB4")]
	public SubtitleController()
	{
	}
}
[Token(Token = "0x20002E5")]
public class UnityTelemetryManager
{
	[Token(Token = "0x20002E6")]
	public enum TelemetryEvents
	{
		[Token(Token = "0x4001072")]
		DLCPurchased,
		[Token(Token = "0x4001073")]
		SongSelectionInteraction,
		[Token(Token = "0x4001074")]
		HandDominanceChanged,
		[Token(Token = "0x4001075")]
		AchievementUnlocked,
		[Token(Token = "0x4001076")]
		NextSongPressed,
		[Token(Token = "0x4001077")]
		GamePausedPressed,
		[Token(Token = "0x4001078")]
		TutorialStarted,
		[Token(Token = "0x4001079")]
		TutorialFinished,
		[Token(Token = "0x400107A")]
		TutorialStepSkipped,
		[Token(Token = "0x400107B")]
		TutorialStepPassed,
		[Token(Token = "0x400107C")]
		AlbumRuleUnlocked,
		[Token(Token = "0x400107D")]
		AlbumUnlocked,
		[Token(Token = "0x400107E")]
		SongAbandoned,
		[Token(Token = "0x400107F")]
		SongRestarted,
		[Token(Token = "0x4001080")]
		SongStarted,
		[Token(Token = "0x4001081")]
		SongWon,
		[Token(Token = "0x4001082")]
		SongLost,
		[Token(Token = "0x4001083")]
		GuitarAdjusted,
		[Token(Token = "0x4001084")]
		GuitarUnlocked,
		[Token(Token = "0x4001085")]
		GuitarEquiped,
		[Token(Token = "0x4001086")]
		HandTrackingStats,
		[Token(Token = "0x4001087")]
		ErrorRaised,
		[Token(Token = "0x4001088")]
		Errors,
		[Token(Token = "0x4001089")]
		MusicLatency
	}

	[Token(Token = "0x20002E7")]
	public enum TelemetryParams
	{
		[Token(Token = "0x400108B")]
		SongName,
		[Token(Token = "0x400108C")]
		SongID,
		[Token(Token = "0x400108D")]
		UserID,
		[Token(Token = "0x400108E")]
		Difficulty,
		[Token(Token = "0x400108F")]
		SongTime,
		[Token(Token = "0x4001090")]
		SuccessedNotes,
		[Token(Token = "0x4001091")]
		FailedNotes,
		[Token(Token = "0x4001092")]
		TotalNotes,
		[Token(Token = "0x4001093")]
		HealthOverTime,
		[Token(Token = "0x4001094")]
		Score,
		[Token(Token = "0x4001095")]
		PMLTC,
		[Token(Token = "0x4001096")]
		PLLTC,
		[Token(Token = "0x4001097")]
		PTLAT,
		[Token(Token = "0x4001098")]
		SMLTC,
		[Token(Token = "0x4001099")]
		SLLTC,
		[Token(Token = "0x400109A")]
		STLAT,
		[Token(Token = "0x400109B")]
		CurrentStep,
		[Token(Token = "0x400109C")]
		UnlockDate,
		[Token(Token = "0x400109D")]
		GuitarName,
		[Token(Token = "0x400109E")]
		GuitarBrand,
		[Token(Token = "0x400109F")]
		PlayerIsLeftHanded,
		[Token(Token = "0x40010A0")]
		Type,
		[Token(Token = "0x40010A1")]
		CurrentValue,
		[Token(Token = "0x40010A2")]
		TargetValue,
		[Token(Token = "0x40010A3")]
		AlbumName,
		[Token(Token = "0x40010A4")]
		AlbumID,
		[Token(Token = "0x40010A5")]
		AlbumVenueID,
		[Token(Token = "0x40010A6")]
		StackTrace,
		[Token(Token = "0x40010A7")]
		ErrorCondition,
		[Token(Token = "0x40010A8")]
		Version,
		[Token(Token = "0x40010A9")]
		MusicLatencyValue
	}

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<ErrorTelemetryItem> Errors;

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x1024BBC", Offset = "0x1024BBC", VA = "0x1024BBC")]
	public static void LoginToPlayfab()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x1024D38", Offset = "0x1024D38", VA = "0x1024D38")]
	private static void OnLoginSuccess(LoginResult obj)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x1024D3C", Offset = "0x1024D3C", VA = "0x1024D3C")]
	private static void TelemetryEventData(string eventName, Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x1024EE0", Offset = "0x1024EE0", VA = "0x1024EE0")]
	private static void OnTelemetrySuccess(WriteEventsResponse obj)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x1024FDC", Offset = "0x1024FDC", VA = "0x1024FDC")]
	private static void OnTelemetrySuccess(WriteEventResponse obj)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x1024FE0", Offset = "0x1024FE0", VA = "0x1024FE0")]
	private static void OnTelemetryError(PlayFabError error)
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x1024FE4", Offset = "0x1024FE4", VA = "0x1024FE4")]
	public static Dictionary<string, object> GetFullHandTracking(Dictionary<string, object> data)
	{
		return null;
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x10252A8", Offset = "0x10252A8", VA = "0x10252A8")]
	public static List<GameStats.HealthTime> FilterHealthTime(List<GameStats.HealthTime> ht)
	{
		return null;
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x10253B4", Offset = "0x10253B4", VA = "0x10253B4")]
	public static void SendExit()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x10253B8", Offset = "0x10253B8", VA = "0x10253B8")]
	public static void SendDLCPurchased(string dlcId)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x10254FC", Offset = "0x10254FC", VA = "0x10254FC")]
	public static void SendHandDominanceChanged(bool PlayerIsLeftHanded)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x1025500", Offset = "0x1025500", VA = "0x1025500")]
	public static void SendAchievementUnlocked(Achievement achievement)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x1025504", Offset = "0x1025504", VA = "0x1025504")]
	public static void SendNextSongPressed(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x1025508", Offset = "0x1025508", VA = "0x1025508")]
	public static void SendGamePausedPressed(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x102550C", Offset = "0x102550C", VA = "0x102550C")]
	public static void SendTutorialStarted()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x1025510", Offset = "0x1025510", VA = "0x1025510")]
	public static void SendTutorialFinished()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x1025514", Offset = "0x1025514", VA = "0x1025514")]
	public static void SendTutorialStepSkipped(TutorialStep tutorialStep)
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x1025518", Offset = "0x1025518", VA = "0x1025518")]
	public static void SendTutorialStepPassed(TutorialStep tutorialStep)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x102551C", Offset = "0x102551C", VA = "0x102551C")]
	public static void SendAlbumRuleUnlocked(AlbumData album)
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x1025520", Offset = "0x1025520", VA = "0x1025520")]
	public static void SendAlbumUnlocked(AlbumData album)
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x102574C", Offset = "0x102574C", VA = "0x102574C")]
	public static void SendSongAbandoned(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x1025750", Offset = "0x1025750", VA = "0x1025750")]
	public static void SendSongRestarted(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x1025BE0", Offset = "0x1025BE0", VA = "0x1025BE0")]
	public static void SendSongStarted(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x1025BE4", Offset = "0x1025BE4", VA = "0x1025BE4")]
	public static void SendMusicLatency()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x1025BE8", Offset = "0x1025BE8", VA = "0x1025BE8")]
	public static void SendSongWon(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x1025BEC", Offset = "0x1025BEC", VA = "0x1025BEC")]
	public static void SendSongLost(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x1025BF0", Offset = "0x1025BF0", VA = "0x1025BF0")]
	public static void SendGuitarAdjusted()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x1025BF4", Offset = "0x1025BF4", VA = "0x1025BF4")]
	public static void SendGuitarUnlocked(GuitarData guitar)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x1025BF8", Offset = "0x1025BF8", VA = "0x1025BF8")]
	public static void SendGuitarEquiped(GuitarData guitar)
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x1025BFC", Offset = "0x1025BFC", VA = "0x1025BFC")]
	public static void SendHandTrackingStats(SongMappingMetaData song)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x1025C00", Offset = "0x1025C00", VA = "0x1025C00")]
	public static void ErrorRaised(string condition, string stackTrace)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x1025C04", Offset = "0x1025C04", VA = "0x1025C04")]
	public static void SendErrors()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x1025F4C", Offset = "0x1025F4C", VA = "0x1025F4C")]
	public UnityTelemetryManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EA")]
public class ErrorTelemetryItem
{
	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int times;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string stackstrace;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string condition;

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x1026178", Offset = "0x1026178", VA = "0x1026178")]
	public ErrorTelemetryItem()
	{
	}
}
[Token(Token = "0x20002EB")]
public class TexturePreCatcher : MonoBehaviour
{
	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Texture2D> CachedTextures;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> CachedPrefabs;

	[Token(Token = "0x14000094")]
	public event Action Loaded
	{
		[Token(Token = "0x600113A")]
		[Address(RVA = "0x1026180", Offset = "0x1026180", VA = "0x1026180")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600113B")]
		[Address(RVA = "0x102621C", Offset = "0x102621C", VA = "0x102621C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x10262B8", Offset = "0x10262B8", VA = "0x10262B8")]
	public void Start()
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x10262BC", Offset = "0x10262BC", VA = "0x10262BC")]
	private void RenderTextures()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x1026504", Offset = "0x1026504", VA = "0x1026504")]
	public void Update()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x1026508", Offset = "0x1026508", VA = "0x1026508")]
	public TexturePreCatcher()
	{
	}
}
[Token(Token = "0x20002EC")]
public class TutorialFollowAnchorController : MonoBehaviour
{
	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform GuitarAnchorPlayer;

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x1026510", Offset = "0x1026510", VA = "0x1026510")]
	private void Update()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x102655C", Offset = "0x102655C", VA = "0x102655C")]
	public TutorialFollowAnchorController()
	{
	}
}
[Token(Token = "0x20002ED")]
public class TutorialFxEventAnimation : MonoBehaviour
{
	[Token(Token = "0x14000095")]
	public static event Action SendToGuitar
	{
		[Token(Token = "0x6001142")]
		[Address(RVA = "0x1026564", Offset = "0x1026564", VA = "0x1026564")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001143")]
		[Address(RVA = "0x102661C", Offset = "0x102661C", VA = "0x102661C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x10266D4", Offset = "0x10266D4", VA = "0x10266D4")]
	public void SendToGuitarEvent()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x1026738", Offset = "0x1026738", VA = "0x1026738")]
	public TutorialFxEventAnimation()
	{
	}
}
[Token(Token = "0x20002EE")]
public class TutorialGuitarController : MonoBehaviour
{
	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 InitialMaskPosition;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 EndMaskPosition;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float normalizedValue;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Mask;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem particles;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.EmitParams ep;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Animator animator;

	[Token(Token = "0x17000189")]
	public float NormalizedValue
	{
		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1026740", Offset = "0x1026740", VA = "0x1026740")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1026748", Offset = "0x1026748", VA = "0x1026748")]
		set
		{
		}
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x1026824", Offset = "0x1026824", VA = "0x1026824")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x1026884", Offset = "0x1026884", VA = "0x1026884")]
	public void Exit()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x1026900", Offset = "0x1026900", VA = "0x1026900")]
	public void DisableOnExit()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x1026760", Offset = "0x1026760", VA = "0x1026760")]
	private void ChangeValue()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x1026924", Offset = "0x1026924", VA = "0x1026924")]
	public TutorialGuitarController()
	{
	}
}
[Token(Token = "0x20002EF")]
public class TutorialManager : MonoBehaviour
{
	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer TutorialVideo;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action Finished;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action BackToStarSpace;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TutorialStep> Steps;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double NextStepTime;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double TimeChangeLoop;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long FrameLoop;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsTutorialPaused;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool TutorialOnGamePlay;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool InLoop;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool IsContinue;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool VideoShouldBePlaying;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TutorialStep CurrentStep;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GuitarPlaterSpaceController PlayerSpace;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PressableButton BackButton;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PressableButton SkipStep;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static TutorialManager I;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimelineAsset Timeline;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<MeshRenderer> MiniPosters;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> InitiallyDisabledObjects;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource videoAudio;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currentStepNumber;

	[Token(Token = "0x1700018A")]
	public static bool IsInTutorial
	{
		[Token(Token = "0x600114D")]
		[Address(RVA = "0x102692C", Offset = "0x102692C", VA = "0x102692C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x10269A4", Offset = "0x10269A4", VA = "0x10269A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x1026F28", Offset = "0x1026F28", VA = "0x1026F28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x1027134", Offset = "0x1027134", VA = "0x1027134")]
	public void Start()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x1027318", Offset = "0x1027318", VA = "0x1027318")]
	private void PrepareVideo()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x10273E0", Offset = "0x10273E0", VA = "0x10273E0")]
	private void TutorialVideo_prepareCompleted(VideoPlayer source)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x10273F0", Offset = "0x10273F0", VA = "0x10273F0")]
	public void TutorialPause()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x1027550", Offset = "0x1027550", VA = "0x1027550")]
	public void TutorialResumed()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x10276B0", Offset = "0x10276B0", VA = "0x10276B0")]
	private void SkipStep_Pressed()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x1027724", Offset = "0x1027724", VA = "0x1027724")]
	private void BackButton_Pressed()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x1027788", Offset = "0x1027788", VA = "0x1027788")]
	private void Step_Completed()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x102796C", Offset = "0x102796C", VA = "0x102796C")]
	public void CheckTimeLoop()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x10279CC", Offset = "0x10279CC", VA = "0x10279CC")]
	private void ExitAnimationEnds()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x1027B64", Offset = "0x1027B64", VA = "0x1027B64")]
	private void Update()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x1027C94", Offset = "0x1027C94", VA = "0x1027C94")]
	private void VRPlatformManager_VRUnMounted()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x1027CE8", Offset = "0x1027CE8", VA = "0x1027CE8")]
	private void VRPlatformManager_OculusGesture()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x1027D3C", Offset = "0x1027D3C", VA = "0x1027D3C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x1027D40", Offset = "0x1027D40", VA = "0x1027D40")]
	public TutorialManager()
	{
	}
}
[Token(Token = "0x20002F0")]
public class TutorialScene : GameScene
{
	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TutorialScene I;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color CrowdColor;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color currentColor;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color veryDimmedCurrentColor;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color dimmedCurrentColor;

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x1027D48", Offset = "0x1027D48", VA = "0x1027D48", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x1027DE4", Offset = "0x1027DE4", VA = "0x1027DE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x1027E3C", Offset = "0x1027E3C", VA = "0x1027E3C")]
	public static void SetLightingColor()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x1027E8C", Offset = "0x1027E8C", VA = "0x1027E8C")]
	public void SetColor()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x1028070", Offset = "0x1028070", VA = "0x1028070")]
	public TutorialScene()
	{
	}
}
[Token(Token = "0x20002F1")]
public class TutorialStep : MonoBehaviour
{
	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string NextPauseMarker;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string LoopTimeMarker;

	[Token(Token = "0x1700018B")]
	public VideoPlayer StepVideoPlayer
	{
		[Token(Token = "0x6001164")]
		[Address(RVA = "0x1028078", Offset = "0x1028078", VA = "0x1028078")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018C")]
	public float NextPauseTime
	{
		[Token(Token = "0x6001167")]
		[Address(RVA = "0x1026F18", Offset = "0x1026F18", VA = "0x1026F18")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700018D")]
	public float TimeLoop
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0x1026F20", Offset = "0x1026F20", VA = "0x1026F20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000096")]
	public event Action Completed
	{
		[Token(Token = "0x6001165")]
		[Address(RVA = "0x1026E7C", Offset = "0x1026E7C", VA = "0x1026E7C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001166")]
		[Address(RVA = "0x10280CC", Offset = "0x10280CC", VA = "0x10280CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x1028168", Offset = "0x1028168", VA = "0x1028168")]
	public float GetTimeFromMarkerName(string markerName)
	{
		return default(float);
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x10283E0", Offset = "0x10283E0", VA = "0x10283E0")]
	internal void RaiseCompleted()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x1028424", Offset = "0x1028424", VA = "0x1028424", Slot = "4")]
	public virtual void SkipStep()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x10284BC", Offset = "0x10284BC", VA = "0x10284BC", Slot = "5")]
	public virtual void Continue()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x1028510", Offset = "0x1028510", VA = "0x1028510", Slot = "6")]
	public virtual void BeginStep()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x10285CC", Offset = "0x10285CC", VA = "0x10285CC", Slot = "7")]
	public virtual void OnPause()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x10285D0", Offset = "0x10285D0", VA = "0x10285D0", Slot = "8")]
	public virtual void OnResume()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x10285D4", Offset = "0x10285D4", VA = "0x10285D4")]
	public TutorialStep()
	{
	}
}
[Token(Token = "0x20002F3")]
public class TutorialStep0 : TutorialStep
{
	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GrabbableObject PosterTouch;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SkipButton;

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x1028608", Offset = "0x1028608", VA = "0x1028608")]
	private void Start()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x1028694", Offset = "0x1028694", VA = "0x1028694")]
	private void PosterTouch_Touched(InteractiveHand obj)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x1028808", Offset = "0x1028808", VA = "0x1028808")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x1028894", Offset = "0x1028894", VA = "0x1028894")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x1028920", Offset = "0x1028920", VA = "0x1028920")]
	public TutorialStep0()
	{
	}
}
[Token(Token = "0x20002F4")]
public class TutorialStep1 : TutorialStep
{
	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string ShowButtonMarker;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PressableButton NextButton;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator animator;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator BackstageModelAnimator;

	[Token(Token = "0x1700018E")]
	private float ShowButtonTime
	{
		[Token(Token = "0x6001178")]
		[Address(RVA = "0x1028928", Offset = "0x1028928", VA = "0x1028928")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x1028930", Offset = "0x1028930", VA = "0x1028930")]
	public void Start()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x1028A60", Offset = "0x1028A60", VA = "0x1028A60", Slot = "6")]
	public override void BeginStep()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x1028ABC", Offset = "0x1028ABC", VA = "0x1028ABC")]
	public void ShowAnswerButton()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x1028B10", Offset = "0x1028B10", VA = "0x1028B10")]
	private void NextButton_Pressed()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x1028B64", Offset = "0x1028B64", VA = "0x1028B64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x1028BF0", Offset = "0x1028BF0", VA = "0x1028BF0", Slot = "7")]
	public override void OnPause()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x1028C10", Offset = "0x1028C10", VA = "0x1028C10", Slot = "8")]
	public override void OnResume()
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x1028C30", Offset = "0x1028C30", VA = "0x1028C30")]
	public TutorialStep1()
	{
	}
}
[Token(Token = "0x20002F5")]
public class TutorialStep2 : TutorialStep
{
	[Token(Token = "0x20002F6")]
	[CompilerGenerated]
	private sealed class <DelayPauseVideo>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialStep2 <>4__this;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600118C")]
			[Address(RVA = "0x1028FB0", Offset = "0x1028FB0", VA = "0x1028FB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x1028FF8", Offset = "0x1028FF8", VA = "0x1028FF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x1028DB4", Offset = "0x1028DB4", VA = "0x1028DB4")]
		[DebuggerHidden]
		public <DelayPauseVideo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x1028F04", Offset = "0x1028F04", VA = "0x1028F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x1028F08", Offset = "0x1028F08", VA = "0x1028F08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1028FB8", Offset = "0x1028FB8", VA = "0x1028FB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PressableButton NextButton;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator animator;

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x1028C38", Offset = "0x1028C38", VA = "0x1028C38")]
	private void Start()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x1028D20", Offset = "0x1028D20", VA = "0x1028D20", Slot = "5")]
	public override void Continue()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x1028D40", Offset = "0x1028D40", VA = "0x1028D40")]
	[IteratorStateMachine(typeof(<DelayPauseVideo>d__4))]
	private IEnumerator DelayPauseVideo()
	{
		return null;
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x1028DDC", Offset = "0x1028DDC", VA = "0x1028DDC")]
	private void NextButton_Pressed()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x1028E30", Offset = "0x1028E30", VA = "0x1028E30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x1028EBC", Offset = "0x1028EBC", VA = "0x1028EBC", Slot = "7")]
	public override void OnPause()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x1028EDC", Offset = "0x1028EDC", VA = "0x1028EDC", Slot = "8")]
	public override void OnResume()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x1028EFC", Offset = "0x1028EFC", VA = "0x1028EFC")]
	public TutorialStep2()
	{
	}
}
[Token(Token = "0x20002F7")]
public class TutorialStep3 : TutorialStep
{
	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string ShowGuitarMovementBubbleMarker;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string WaitForSweetSpot;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GuitarPlaterSpaceController PlayerSpace;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform GuitarContainer;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Guitar;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform GuitarInvoke;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform PlayerGuitar;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem Particles;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PressableButton Next;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PressableButton RightHandedButton;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PressableButton LeftHandedButton;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string NextSecondPauseTime;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public InteractableObject Mover;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject HelperBubble;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject GrabTuto;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject MoveTuto;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject Neck;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject FxShadderGuitarPoster;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Animator animator;

	[Token(Token = "0x17000191")]
	public float VideoTimePhaseTwoStep
	{
		[Token(Token = "0x600118F")]
		[Address(RVA = "0x1029000", Offset = "0x1029000", VA = "0x1029000")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x1029008", Offset = "0x1029008", VA = "0x1029008")]
	private void Start()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x1029384", Offset = "0x1029384", VA = "0x1029384", Slot = "7")]
	public override void OnPause()
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x1029468", Offset = "0x1029468", VA = "0x1029468", Slot = "8")]
	public override void OnResume()
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x10295A0", Offset = "0x10295A0", VA = "0x10295A0")]
	public void ShowGuitarMovementBubble()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x10295C0", Offset = "0x10295C0", VA = "0x10295C0")]
	private void LeftHandedButton_Pressed()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x10296A4", Offset = "0x10296A4", VA = "0x10296A4")]
	private void RightHandedButton_Pressed()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x10295E0", Offset = "0x10295E0", VA = "0x10295E0")]
	public void AnimationEnterAndDisableButtonsHanded()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x102975C", Offset = "0x102975C", VA = "0x102975C", Slot = "5")]
	public override void Continue()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x1029804", Offset = "0x1029804", VA = "0x1029804")]
	public void ShowButtonContinue()
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x102986C", Offset = "0x102986C", VA = "0x102986C")]
	public void SendGuitar()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x10296D4", Offset = "0x10296D4", VA = "0x10296D4")]
	public void ContinueStep()
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x1029A64", Offset = "0x1029A64", VA = "0x1029A64")]
	private void Mover_Dropped(InteractiveHand obj)
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x1029A9C", Offset = "0x1029A9C", VA = "0x1029A9C")]
	private void Mover_Grabbed(InteractiveHand obj)
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x1029AD4", Offset = "0x1029AD4", VA = "0x1029AD4")]
	private void Next_Pressed()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x1029B28", Offset = "0x1029B28", VA = "0x1029B28", Slot = "4")]
	public override void SkipStep()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x1029C0C", Offset = "0x1029C0C", VA = "0x1029C0C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x1029DD4", Offset = "0x1029DD4", VA = "0x1029DD4")]
	public TutorialStep3()
	{
	}
}
[Token(Token = "0x20002F8")]
public class TutorialStep4 : TutorialStep
{
	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string ShowPickMarker;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string ShowGuitarBarMarker;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int StrummingCount;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int StrummingCountGoal;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animator;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ScratchingHand scratchingHand;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform GuitarMover;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject PickFx;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GrabbableObject PickGrab;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro CountLabel;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TutorialGuitarController guitarBar;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FreeStyleController freeStyle;

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x102A024", Offset = "0x102A024", VA = "0x102A024")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x102A150", Offset = "0x102A150", VA = "0x102A150", Slot = "6")]
	public override void BeginStep()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x102A154", Offset = "0x102A154", VA = "0x102A154")]
	private void ShowPick()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x102A1F4", Offset = "0x102A1F4", VA = "0x102A1F4")]
	private void PickGrab_Grabbed(InteractiveHand obj)
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x102A308", Offset = "0x102A308", VA = "0x102A308")]
	public void ShowGuitarBar()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x102A3A8", Offset = "0x102A3A8", VA = "0x102A3A8", Slot = "4")]
	public override void SkipStep()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x102A51C", Offset = "0x102A51C", VA = "0x102A51C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x102A59C", Offset = "0x102A59C", VA = "0x102A59C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x102A61C", Offset = "0x102A61C", VA = "0x102A61C")]
	private void GuitarScratcher_Scratched(object sender, bool isStrummingUp)
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x102A810", Offset = "0x102A810", VA = "0x102A810")]
	public TutorialStep4()
	{
	}
}
[Token(Token = "0x20002F9")]
public class TutorialStep5 : TutorialStep
{
	[Token(Token = "0x20002FA")]
	[CompilerGenerated]
	private sealed class <DelayVideoWithScript>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialStep5 <>4__this;

		[Token(Token = "0x17000193")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x102BAF0", Offset = "0x102BAF0", VA = "0x102BAF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x102BB38", Offset = "0x102BB38", VA = "0x102BB38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x102B408", Offset = "0x102B408", VA = "0x102B408")]
		[DebuggerHidden]
		public <DelayVideoWithScript>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x102B9E8", Offset = "0x102B9E8", VA = "0x102B9E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x102B9EC", Offset = "0x102B9EC", VA = "0x102B9EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x102BAF8", Offset = "0x102BAF8", VA = "0x102BAF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string CheckHandOrControllerBegins;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string HowToPlayWithControlersBegins;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string HowToPlayWithControlersEnds;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string HandsBegins;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string HandsEnds;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string InitalPose;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform stringsGuitars;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float NoteCount;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int chordIndex;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Sprite> HandChords;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int tryCount;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro counterText1;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshPro counterText2;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem SuccessPS;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem FailPS;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float NumbersAllNotesSongs;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int NoteMinForSuccess;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<float> floatsFailMarkers;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<string> stringsFailMarkers;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<string> stringsControllersMarkers;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool VideoPause;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string InitialPoseTime;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject FxObjects;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject AnchorsStrings;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject GuitarMoveGrab;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject PauseButton;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public StringsVisualsController stringsVisualsController;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Animator PortalAnimator;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GhostHandManager ghostHandManager;

	[Token(Token = "0x17000192")]
	public float SecondVideoPause
	{
		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x102A818", Offset = "0x102A818", VA = "0x102A818")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x102A820", Offset = "0x102A820", VA = "0x102A820")]
	private void Start()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x102ABE8", Offset = "0x102ABE8", VA = "0x102ABE8")]
	public void TimeCheckHandOrController()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x102AD40", Offset = "0x102AD40", VA = "0x102AD40")]
	public void ShowStringAndPortalAnimator()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x102ADB4", Offset = "0x102ADB4", VA = "0x102ADB4")]
	public void TestShowStringAndPortalAnimator()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x102AEAC", Offset = "0x102AEAC", VA = "0x102AEAC")]
	private void GameManager_GameEnded()
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x102B0F8", Offset = "0x102B0F8", VA = "0x102B0F8", Slot = "4")]
	public override void SkipStep()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x102B268", Offset = "0x102B268", VA = "0x102B268", Slot = "5")]
	public override void Continue()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x102B384", Offset = "0x102B384", VA = "0x102B384")]
	[IteratorStateMachine(typeof(<DelayVideoWithScript>d__38))]
	private IEnumerator DelayVideoWithScript(float delay)
	{
		return null;
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x102B430", Offset = "0x102B430", VA = "0x102B430")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x102B54C", Offset = "0x102B54C", VA = "0x102B54C")]
	private void GameManager_SongStarted()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x102B644", Offset = "0x102B644", VA = "0x102B644")]
	private void GuitarGameManager_NotePlayed(KeyTime key, FeedbackType feedback)
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x102B810", Offset = "0x102B810", VA = "0x102B810", Slot = "8")]
	public override void OnResume()
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x102B8BC", Offset = "0x102B8BC", VA = "0x102B8BC")]
	public TutorialStep5()
	{
	}
}
[Token(Token = "0x20002FB")]
public class TutorialStep6 : TutorialStep
{
	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x102BB40", Offset = "0x102BB40", VA = "0x102BB40")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x102BC80", Offset = "0x102BC80", VA = "0x102BC80", Slot = "5")]
	public override void Continue()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x102BC84", Offset = "0x102BC84", VA = "0x102BC84")]
	public TutorialStep6()
	{
	}
}
[Token(Token = "0x20002FD")]
public class TutorialStep7 : TutorialStep
{
	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x102BD14", Offset = "0x102BD14", VA = "0x102BD14")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x102BD78", Offset = "0x102BD78", VA = "0x102BD78", Slot = "5")]
	public override void Continue()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x102BE40", Offset = "0x102BE40", VA = "0x102BE40")]
	public TutorialStep7()
	{
	}
}
[Token(Token = "0x20002FE")]
[AddComponentMenu("Layout/Wrap Layout Group", 153)]
public class WrapLayoutGroup : LayoutGroup
{
	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Vector2 m_Spacing;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected bool m_Horizontal;

	[Token(Token = "0x400112A")]
	private const float MIN_HEIGHT = 80f;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int preferredRows;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float calculatedHeight;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] childPositions;

	[Token(Token = "0x17000195")]
	public Vector2 spacing
	{
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x102BE48", Offset = "0x102BE48", VA = "0x102BE48")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x102BE50", Offset = "0x102BE50", VA = "0x102BE50")]
		set
		{
		}
	}

	[Token(Token = "0x17000196")]
	public bool horizontal
	{
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x102BEB4", Offset = "0x102BEB4", VA = "0x102BEB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x102BEBC", Offset = "0x102BEBC", VA = "0x102BEBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000197")]
	private float availableWidth
	{
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x102BF18", Offset = "0x102BF18", VA = "0x102BF18")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x102BF8C", Offset = "0x102BF8C", VA = "0x102BF8C")]
	protected WrapLayoutGroup()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x102C03C", Offset = "0x102C03C", VA = "0x102C03C", Slot = "29")]
	public override void CalculateLayoutInputVertical()
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x102C25C", Offset = "0x102C25C", VA = "0x102C25C", Slot = "37")]
	public override void SetLayoutHorizontal()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x102C260", Offset = "0x102C260", VA = "0x102C260", Slot = "38")]
	public override void SetLayoutVertical()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x102C264", Offset = "0x102C264", VA = "0x102C264")]
	private void SetChildren()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x102C068", Offset = "0x102C068", VA = "0x102C068")]
	private void calculatePositionsAndRequiredSize()
	{
	}
}
[Token(Token = "0x20002FF")]
public class UnlockManager : MonoBehaviour
{
	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x102C388", Offset = "0x102C388", VA = "0x102C388")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x102C408", Offset = "0x102C408", VA = "0x102C408")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x102C488", Offset = "0x102C488", VA = "0x102C488")]
	private void CampaignManager_OnNewAlbumUnlocked()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x102C48C", Offset = "0x102C48C", VA = "0x102C48C")]
	private void TryUnlockBroom()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x102C610", Offset = "0x102C610", VA = "0x102C610")]
	public UnlockManager()
	{
	}
}
[Token(Token = "0x2000301")]
public enum UnpluggedInfo
{
	[Token(Token = "0x4001131")]
	GuitarPosition,
	[Token(Token = "0x4001132")]
	PlayerHanding,
	[Token(Token = "0x4001133")]
	CrowdVolumeIsLow,
	[Token(Token = "0x4001134")]
	HasDoneTutorial,
	[Token(Token = "0x4001135")]
	DebugMode,
	[Token(Token = "0x4001136")]
	ShowIntro,
	[Token(Token = "0x4001137")]
	UserID,
	[Token(Token = "0x4001138")]
	LastSongPlayed,
	[Token(Token = "0x4001139")]
	LastSongPlayedAlbum,
	[Token(Token = "0x400113A")]
	Fans,
	[Token(Token = "0x400113B")]
	GameProgress,
	[Token(Token = "0x400113C")]
	SelectedGuitar,
	[Token(Token = "0x400113D")]
	SelectedAlbumID,
	[Token(Token = "0x400113E")]
	PlayedSongs,
	[Token(Token = "0x400113F")]
	PlayedIntermezzos,
	[Token(Token = "0x4001140")]
	PurchasedGuitars,
	[Token(Token = "0x4001141")]
	PurchasedDLCs,
	[Token(Token = "0x4001142")]
	AlbumCompleted,
	[Token(Token = "0x4001143")]
	AudioLatency,
	[Token(Token = "0x4001144")]
	isReleaseVersion,
	[Token(Token = "0x4001145")]
	LastDifficulty,
	[Token(Token = "0x4001146")]
	SelectedVenue,
	[Token(Token = "0x4001147")]
	AchievementsProgress,
	[Token(Token = "0x4001148")]
	SteamVRControllerSensibilityMin,
	[Token(Token = "0x4001149")]
	SteamVRControllerSensibilityMax,
	[Token(Token = "0x400114A")]
	SteamVRControllerGuitarDropThreshold,
	[Token(Token = "0x400114B")]
	InformationPanelsDisplayedIDs,
	[Token(Token = "0x400114C")]
	TotalNotesPlayed,
	[Token(Token = "0x400114D")]
	TotalNotesMissed,
	[Token(Token = "0x400114E")]
	TotalSecondsOfMusicListened,
	[Token(Token = "0x400114F")]
	TotalPowerUpsCollected,
	[Token(Token = "0x4001150")]
	ColorBlindModeEnabled,
	[Token(Token = "0x4001151")]
	SummerVol1Completed,
	[Token(Token = "0x4001152")]
	PurchasedPicks,
	[Token(Token = "0x4001153")]
	SelectedPick,
	[Token(Token = "0x4001154")]
	CompletedChallenges,
	[Token(Token = "0x4001155")]
	PlayedChallenges,
	[Token(Token = "0x4001156")]
	IndexHandsMode
}
[Serializable]
[Token(Token = "0x2000302")]
public class UnpluggedSavedData
{
	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Dictionary<UnpluggedInfo, SavedTypedData> SavedData;

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x102C6E4", Offset = "0x102C6E4", VA = "0x102C6E4")]
	public UnpluggedSavedData()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x102C76C", Offset = "0x102C76C", VA = "0x102C76C")]
	public void Save(UnpluggedInfo key, object value)
	{
	}

	[Token(Token = "0x60011DE")]
	public T Load<T>(UnpluggedInfo key, T defaultValue)
	{
		return (T)null;
	}
}
[Token(Token = "0x2000303")]
public class AchievementListConverter : JsonConverter
{
	[Token(Token = "0x17000198")]
	public override bool CanWrite
	{
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x102C9E8", Offset = "0x102C9E8", VA = "0x102C9E8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x102C954", Offset = "0x102C954", VA = "0x102C954", Slot = "6")]
	public override bool CanConvert(Type objectType)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x102C9F0", Offset = "0x102C9F0", VA = "0x102C9F0", Slot = "4")]
	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x102CA30", Offset = "0x102CA30", VA = "0x102CA30", Slot = "5")]
	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		return null;
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x102CACC", Offset = "0x102CACC", VA = "0x102CACC")]
	public AchievementListConverter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000304")]
public class SavedTypedData
{
	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type Type;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string JsonValue;

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x102C94C", Offset = "0x102C94C", VA = "0x102C94C")]
	public SavedTypedData()
	{
	}
}
[Token(Token = "0x2000305")]
public class UserData : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000308")]
	[CompilerGenerated]
	private struct <GetOculusAndPicoUserProfilePicture>d__17 : IAsyncStateMachine
	{
		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<Texture2D> <>t__builder;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UserData <>4__this;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string imageUrl;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object <>u__1;

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x102D420", Offset = "0x102D420", VA = "0x102D420", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x102DA3C", Offset = "0x102DA3C", VA = "0x102DA3C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UserData I;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Texture2D defaultTexture;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D userProfilePicture;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string userName;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isUserDataRetrieved;

	[Token(Token = "0x17000199")]
	public bool IsUserDataRetrieved
	{
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x102CC44", Offset = "0x102CC44", VA = "0x102CC44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019A")]
	public string UserName
	{
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x102CC4C", Offset = "0x102CC4C", VA = "0x102CC4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019B")]
	public Texture2D UserProfilePicture
	{
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x102CC54", Offset = "0x102CC54", VA = "0x102CC54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000097")]
	public static event Action UserDataRetrieved
	{
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x102CAD4", Offset = "0x102CAD4", VA = "0x102CAD4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x102CB8C", Offset = "0x102CB8C", VA = "0x102CB8C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x102CC5C", Offset = "0x102CC5C", VA = "0x102CC5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x102CCEC", Offset = "0x102CCEC", VA = "0x102CCEC")]
	public static void Initialize([Optional] Action onComplete)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x102CDCC", Offset = "0x102CDCC", VA = "0x102CDCC")]
	private void FetchCurrentUser([Optional] Action onComplete)
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x102CED8", Offset = "0x102CED8", VA = "0x102CED8")]
	[AsyncStateMachine(typeof(<GetOculusAndPicoUserProfilePicture>d__17))]
	public Task<Texture2D> GetOculusAndPicoUserProfilePicture(string imageUrl)
	{
		return null;
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x102D000", Offset = "0x102D000", VA = "0x102D000")]
	public UserData()
	{
	}
}
[Token(Token = "0x2000309")]
public class FansManager
{
	[Token(Token = "0x1700019C")]
	public static string FansText
	{
		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x102DC04", Offset = "0x102DC04", VA = "0x102DC04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019D")]
	public static int Fans
	{
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x102DC94", Offset = "0x102DC94", VA = "0x102DC94")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x102DCDC", Offset = "0x102DCDC", VA = "0x102DCDC")]
		set
		{
		}
	}

	[Token(Token = "0x14000098")]
	public static event Action OnFansChanged
	{
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x102DA94", Offset = "0x102DA94", VA = "0x102DA94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x102DB4C", Offset = "0x102DB4C", VA = "0x102DB4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x102DD80", Offset = "0x102DD80", VA = "0x102DD80")]
	public FansManager()
	{
	}
}
[Token(Token = "0x200030A")]
public class VenueIconController : MonoBehaviour
{
	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Broom;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> venueIcons;

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x102DD88", Offset = "0x102DD88", VA = "0x102DD88")]
	public void Awake()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x102E120", Offset = "0x102E120", VA = "0x102E120")]
	public void ShowVenue(Venue venue)
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x102E358", Offset = "0x102E358", VA = "0x102E358")]
	public void ShowBroom()
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x102E4BC", Offset = "0x102E4BC", VA = "0x102E4BC")]
	public void HideVenues()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x102E5C4", Offset = "0x102E5C4", VA = "0x102E5C4")]
	public VenueIconController()
	{
	}
}
[Token(Token = "0x200030C")]
public class VenueManager : MonoBehaviour
{
	[Token(Token = "0x200030D")]
	[CompilerGenerated]
	private sealed class <GetNextColor>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VenueManager <>4__this;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0x102F62C", Offset = "0x102F62C", VA = "0x102F62C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x102F674", Offset = "0x102F674", VA = "0x102F674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x102EA94", Offset = "0x102EA94", VA = "0x102EA94")]
		[DebuggerHidden]
		public <GetNextColor>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x102F4D4", Offset = "0x102F4D4", VA = "0x102F4D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x102F4D8", Offset = "0x102F4D8", VA = "0x102F4D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x102F634", Offset = "0x102F634", VA = "0x102F634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float VenueResolution;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material CrowdHandsMaterial;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material CrowdHandsIKMaterial;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light MainLight;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Color> NormalLightingColors;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color ElectricLightingColor;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Color> AwesomeLighingColors;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color PowerLighingColor;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Color> BadLightingColors;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color NoLightingColor;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float LightIntensity;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float AmbientIntensity;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VenueManager I;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private FeedbackType CurrentState;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color targetColor;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Color currentColor;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Color veryDimmedCurrentColor;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Color dimmedCurrentColor;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float minColorChangeDelay;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float maxColorChangeDelay;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float targetIntensity;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color EditorColor;

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x102E6E0", Offset = "0x102E6E0", VA = "0x102E6E0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x102EA30", Offset = "0x102EA30", VA = "0x102EA30")]
	private void BeerThrowManager_OnPlayerHit()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x102EA7C", Offset = "0x102EA7C", VA = "0x102EA7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x102E9BC", Offset = "0x102E9BC", VA = "0x102E9BC")]
	[IteratorStateMachine(typeof(<GetNextColor>d__24))]
	private IEnumerator GetNextColor()
	{
		return null;
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x102EABC", Offset = "0x102EABC", VA = "0x102EABC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x102EC08", Offset = "0x102EC08", VA = "0x102EC08")]
	private void I_PlayerStateChanged(FeedbackType obj)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x102EC14", Offset = "0x102EC14", VA = "0x102EC14")]
	private void Update()
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x102EC84", Offset = "0x102EC84", VA = "0x102EC84", Slot = "4")]
	public virtual void UpdateColor(Color nextColor, bool immediate = false)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x102E968", Offset = "0x102E968", VA = "0x102E968")]
	public static void SetSpotLightSize(float size)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x102F14C", Offset = "0x102F14C", VA = "0x102F14C")]
	public static void SetColor(Color c)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x102E8B4", Offset = "0x102E8B4", VA = "0x102E8B4")]
	public static void SwitchOff()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x102F1C8", Offset = "0x102F1C8", VA = "0x102F1C8", Slot = "5")]
	protected virtual float GetIntensityFromState(FeedbackType feedbackType)
	{
		return default(float);
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x102F1EC", Offset = "0x102F1EC", VA = "0x102F1EC", Slot = "6")]
	protected virtual Color GetColorFromState(FeedbackType feedbackType)
	{
		return default(Color);
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x102F2C4", Offset = "0x102F2C4", VA = "0x102F2C4", Slot = "7")]
	public virtual void SetLightingState(FeedbackType feedbackType)
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x102F460", Offset = "0x102F460", VA = "0x102F460")]
	public VenueManager()
	{
	}
}
[Token(Token = "0x200030E")]
public class VenueSelectionController : MonoBehaviour
{
	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject IconLock;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VenueIconController Icons;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro VenueNameLabel;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int selectedVenueIndex;

	[Token(Token = "0x14000099")]
	public static event Action SelectVenueChange
	{
		[Token(Token = "0x6001219")]
		[Address(RVA = "0x103067C", Offset = "0x103067C", VA = "0x103067C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600121A")]
		[Address(RVA = "0x1030734", Offset = "0x1030734", VA = "0x1030734")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x10307EC", Offset = "0x10307EC", VA = "0x10307EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x1030A74", Offset = "0x1030A74", VA = "0x1030A74")]
	public void NextVenue()
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x1030A84", Offset = "0x1030A84", VA = "0x1030A84")]
	public void PrevVenue()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x10308EC", Offset = "0x10308EC", VA = "0x10308EC")]
	public void SetVenue()
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x1030B0C", Offset = "0x1030B0C", VA = "0x1030B0C")]
	public VenueSelectionController()
	{
	}
}
[Token(Token = "0x200030F")]
public class VersionController : MonoBehaviour
{
	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro versionNumber;

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x1030B14", Offset = "0x1030B14", VA = "0x1030B14")]
	private void Start()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x1030BA0", Offset = "0x1030BA0", VA = "0x1030BA0")]
	public VersionController()
	{
	}
}
[Token(Token = "0x2000310")]
public class VideoTimeLineEventsManager : MonoBehaviour
{
	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VideoTimeLineEventsManager I;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimelineAsset Timeline;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MarkerEvent> MarkerEvents;

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x1030BA8", Offset = "0x1030BA8", VA = "0x1030BA8")]
	public static void AddEvent(string markerName, Action action)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x1030F30", Offset = "0x1030F30", VA = "0x1030F30")]
	public void CleanEvents()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x1030FA0", Offset = "0x1030FA0", VA = "0x1030FA0")]
	public static void SkipEventsUntil(float time)
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x10310E8", Offset = "0x10310E8", VA = "0x10310E8")]
	public void Update()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x1031210", Offset = "0x1031210", VA = "0x1031210")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x1031268", Offset = "0x1031268", VA = "0x1031268")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x103126C", Offset = "0x103126C", VA = "0x103126C")]
	public VideoTimeLineEventsManager()
	{
	}
}
[Token(Token = "0x2000312")]
public class MarkerEvent
{
	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string MarkerName;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action Action;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SignalEmitter Signal;

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x1030ED0", Offset = "0x1030ED0", VA = "0x1030ED0")]
	public MarkerEvent(string name, Action action, SignalEmitter signal)
	{
	}
}
[Token(Token = "0x2000313")]
[RequireComponent(typeof(Animator))]
public class SelectorUIShowHideController : MonoBehaviour
{
	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShowAnimation;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string HideAnimation;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x1031320", Offset = "0x1031320", VA = "0x1031320")]
	private void Awake()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x1031378", Offset = "0x1031378", VA = "0x1031378")]
	public void Show()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x10313D0", Offset = "0x10313D0", VA = "0x10313D0")]
	public void Hide()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x1031428", Offset = "0x1031428", VA = "0x1031428")]
	public SelectorUIShowHideController()
	{
	}
}
[Token(Token = "0x2000314")]
public class TextBinder : DataBinder
{
	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text Label;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string Format;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ApplyLocalization;

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x1031430", Offset = "0x1031430", VA = "0x1031430", Slot = "4")]
	public override void SetData(object data)
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x1031500", Offset = "0x1031500", VA = "0x1031500")]
	public TextBinder()
	{
	}
}
[Token(Token = "0x2000315")]
public class TextureBinder : DataBinder
{
	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RawImage rawImage;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal Texture2D Texture;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string ResourcePathFormat;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D FallBackTexture;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ResourceRequest textureRequest;

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x1031558", Offset = "0x1031558", VA = "0x1031558", Slot = "4")]
	public override void SetData(object data)
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x1031768", Offset = "0x1031768", VA = "0x1031768")]
	private void Res_completed(AsyncOperation obj)
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x1031744", Offset = "0x1031744", VA = "0x1031744")]
	private void SetTexture()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x10318C4", Offset = "0x10318C4", VA = "0x10318C4")]
	public TextureBinder()
	{
	}
}
[Serializable]
[Token(Token = "0x2000316")]
public class LightControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intensity;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bounceIntensity;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range;

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x103191C", Offset = "0x103191C", VA = "0x103191C")]
	public LightControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000317")]
public class LightControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightControlBehaviour template;

	[Token(Token = "0x170001A0")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6001237")]
		[Address(RVA = "0x103193C", Offset = "0x103193C", VA = "0x103193C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x1031944", Offset = "0x1031944", VA = "0x1031944", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x10319EC", Offset = "0x10319EC", VA = "0x10319EC")]
	public LightControlClip()
	{
	}
}
[Token(Token = "0x2000318")]
public class LightControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_DefaultIntensity;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_DefaultBounceIntensity;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_DefaultRange;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_TrackBinding;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x1031A78", Offset = "0x1031A78", VA = "0x1031A78", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x1031E40", Offset = "0x1031E40", VA = "0x1031E40", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x1031F0C", Offset = "0x1031F0C", VA = "0x1031F0C")]
	public LightControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000319")]
[TrackColor(0.9454092f, 0.9779412f, 0.3883002f)]
[TrackClipType(typeof(LightControlClip))]
[TrackBindingType(typeof(Light))]
public class LightControlTrack : TrackAsset
{
	[Token(Token = "0x600123D")]
	[Address(RVA = "0x1031F14", Offset = "0x1031F14", VA = "0x1031F14", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x1031FB4", Offset = "0x1031FB4", VA = "0x1031FB4", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x1031FBC", Offset = "0x1031FBC", VA = "0x1031FBC")]
	public LightControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200031A")]
public class NavMeshAgentControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform destination;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destinationSet;

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x1032014", Offset = "0x1032014", VA = "0x1032014", Slot = "15")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x103201C", Offset = "0x103201C", VA = "0x103201C")]
	public NavMeshAgentControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200031B")]
public class NavMeshAgentControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Transform> destination;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public NavMeshAgentControlBehaviour template;

	[Token(Token = "0x170001A1")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1032024", Offset = "0x1032024", VA = "0x1032024", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x103202C", Offset = "0x103202C", VA = "0x103202C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x103216C", Offset = "0x103216C", VA = "0x103216C")]
	public NavMeshAgentControlClip()
	{
	}
}
[Token(Token = "0x200031C")]
public class NavMeshAgentControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6001245")]
	[Address(RVA = "0x10321E0", Offset = "0x10321E0", VA = "0x10321E0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x1032444", Offset = "0x1032444", VA = "0x1032444")]
	public NavMeshAgentControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x200031D")]
[TrackColor(0.855f, 0.8623f, 0.87f)]
[TrackClipType(typeof(NavMeshAgentControlClip))]
[TrackBindingType(typeof(NavMeshAgent))]
public class NavMeshAgentControlTrack : TrackAsset
{
	[Token(Token = "0x6001247")]
	[Address(RVA = "0x103244C", Offset = "0x103244C", VA = "0x103244C", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x10324EC", Offset = "0x10324EC", VA = "0x10324EC")]
	public NavMeshAgentControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200031E")]
public class ScreenFaderBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x1032544", Offset = "0x1032544", VA = "0x1032544")]
	public ScreenFaderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200031F")]
public class ScreenFaderClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenFaderBehaviour template;

	[Token(Token = "0x170001A2")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600124A")]
		[Address(RVA = "0x1032558", Offset = "0x1032558", VA = "0x1032558", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x1032560", Offset = "0x1032560", VA = "0x1032560", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x1032608", Offset = "0x1032608", VA = "0x1032608")]
	public ScreenFaderClip()
	{
	}
}
[Token(Token = "0x2000320")]
public class ScreenFaderMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image m_TrackBinding;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x1032688", Offset = "0x1032688", VA = "0x1032688", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x10329C8", Offset = "0x10329C8", VA = "0x10329C8", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x1032A60", Offset = "0x1032A60", VA = "0x1032A60")]
	public ScreenFaderMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000321")]
[TrackColor(0.875f, 0.5944853f, 0.1737132f)]
[TrackClipType(typeof(ScreenFaderClip))]
[TrackBindingType(typeof(Image))]
public class ScreenFaderTrack : TrackAsset
{
	[Token(Token = "0x6001250")]
	[Address(RVA = "0x1032A68", Offset = "0x1032A68", VA = "0x1032A68", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x1032B08", Offset = "0x1032B08", VA = "0x1032B08", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x1032B10", Offset = "0x1032B10", VA = "0x1032B10")]
	public ScreenFaderTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000322")]
public class TextSwitcherBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fontSize;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x1032B68", Offset = "0x1032B68", VA = "0x1032B68")]
	public TextSwitcherBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000323")]
public class TextSwitcherClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextSwitcherBehaviour template;

	[Token(Token = "0x170001A3")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6001254")]
		[Address(RVA = "0x1032B80", Offset = "0x1032B80", VA = "0x1032B80", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x1032B88", Offset = "0x1032B88", VA = "0x1032B88", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x1032C30", Offset = "0x1032C30", VA = "0x1032C30")]
	public TextSwitcherClip()
	{
	}
}
[Token(Token = "0x2000324")]
public class TextSwitcherMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_DefaultFontSize;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_DefaultText;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_TrackBinding;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x1032CB4", Offset = "0x1032CB4", VA = "0x1032CB4", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x1033210", Offset = "0x1033210", VA = "0x1033210", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x10332D8", Offset = "0x10332D8", VA = "0x10332D8")]
	public TextSwitcherMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000325")]
[TrackColor(0.1394896f, 0.4411765f, 0.3413077f)]
[TrackClipType(typeof(TextSwitcherClip))]
[TrackBindingType(typeof(Text))]
public class TextSwitcherTrack : TrackAsset
{
	[Token(Token = "0x600125A")]
	[Address(RVA = "0x10332E0", Offset = "0x10332E0", VA = "0x10332E0", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x1033380", Offset = "0x1033380", VA = "0x1033380", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x1033388", Offset = "0x1033388", VA = "0x1033388")]
	public TextSwitcherTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000326")]
public class TimeDilationBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x10333E0", Offset = "0x10333E0", VA = "0x10333E0")]
	public TimeDilationBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000327")]
public class TimeDilationClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeDilationBehaviour template;

	[Token(Token = "0x170001A4")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600125E")]
		[Address(RVA = "0x10333F0", Offset = "0x10333F0", VA = "0x10333F0", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x10333F8", Offset = "0x10333F8", VA = "0x10333F8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x10334A0", Offset = "0x10334A0", VA = "0x10334A0")]
	public TimeDilationClip()
	{
	}
}
[Token(Token = "0x2000328")]
public class TimeDilationMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly float defaultTimeScale;

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x103351C", Offset = "0x103351C", VA = "0x103351C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x1033714", Offset = "0x1033714", VA = "0x1033714", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x1033720", Offset = "0x1033720", VA = "0x1033720", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0x103372C", Offset = "0x103372C", VA = "0x103372C", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x1033738", Offset = "0x1033738", VA = "0x1033738")]
	public TimeDilationMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000329")]
[TrackColor(0.855f, 0.8623f, 0.87f)]
[TrackClipType(typeof(TimeDilationClip))]
public class TimeDilationTrack : TrackAsset
{
	[Token(Token = "0x6001266")]
	[Address(RVA = "0x1033748", Offset = "0x1033748", VA = "0x1033748", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x10337E8", Offset = "0x10337E8", VA = "0x10337E8")]
	public TimeDilationTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200032A")]
public class TransformTweenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x200032B")]
	public enum TweenType
	{
		[Token(Token = "0x40011D0")]
		Linear,
		[Token(Token = "0x40011D1")]
		Deceleration,
		[Token(Token = "0x40011D2")]
		Harmonic,
		[Token(Token = "0x40011D3")]
		Custom
	}

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform startLocation;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endLocation;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tweenPosition;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tweenRotation;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TweenType tweenType;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve customCurve;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startingPosition;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion startingRotation;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve m_LinearCurve;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve m_DecelerationCurve;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve m_HarmonicCurve;

	[Token(Token = "0x40011CE")]
	private const float k_RightAngleInRads = (float)Math.PI / 2f;

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x1033840", Offset = "0x1033840", VA = "0x1033840", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x10338D8", Offset = "0x10338D8", VA = "0x10338D8")]
	public float EvaluateCurrentCurve(float time)
	{
		return default(float);
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x10339CC", Offset = "0x10339CC", VA = "0x10339CC")]
	private bool IsCustomCurveNormalised()
	{
		return default(bool);
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x1033C70", Offset = "0x1033C70", VA = "0x1033C70")]
	public TransformTweenBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200032C")]
public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TransformTweenBehaviour template;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> startLocation;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> endLocation;

	[Token(Token = "0x170001A5")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600126C")]
		[Address(RVA = "0x1033E84", Offset = "0x1033E84", VA = "0x1033E84", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x1033E8C", Offset = "0x1033E8C", VA = "0x1033E8C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x1033FFC", Offset = "0x1033FFC", VA = "0x1033FFC")]
	public TransformTweenClip()
	{
	}
}
[Token(Token = "0x200032D")]
public class TransformTweenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x103406C", Offset = "0x103406C", VA = "0x103406C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x103473C", Offset = "0x103473C", VA = "0x103473C", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x1034728", Offset = "0x1034728", VA = "0x1034728")]
	private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x1034714", Offset = "0x1034714", VA = "0x1034714")]
	private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x1034744", Offset = "0x1034744", VA = "0x1034744")]
	private static float QuaternionMagnitude(Quaternion rotation)
	{
		return default(float);
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x1034614", Offset = "0x1034614", VA = "0x1034614")]
	private static Quaternion NormalizeQuaternion(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x1034768", Offset = "0x1034768", VA = "0x1034768")]
	public TransformTweenMixerBehaviour()
	{
	}
}
[Token(Token = "0x200032E")]
[TrackColor(0.855f, 0.8623f, 0.87f)]
[TrackClipType(typeof(TransformTweenClip))]
[TrackBindingType(typeof(Transform))]
public class TransformTweenTrack : TrackAsset
{
	[Token(Token = "0x6001276")]
	[Address(RVA = "0x1034770", Offset = "0x1034770", VA = "0x1034770", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x1034810", Offset = "0x1034810", VA = "0x1034810", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x1034818", Offset = "0x1034818", VA = "0x1034818")]
	public TransformTweenTrack()
	{
	}
}
[Token(Token = "0x200032F")]
public class ColorChange : MonoBehaviour
{
	[Token(Token = "0x6001279")]
	[Address(RVA = "0x1034870", Offset = "0x1034870", VA = "0x1034870")]
	private void Start()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x1034930", Offset = "0x1034930", VA = "0x1034930")]
	private void OnEnemyKilled(IGameEvent obj)
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x10349A4", Offset = "0x10349A4", VA = "0x10349A4")]
	public ColorChange()
	{
	}
}
[Token(Token = "0x2000330")]
public class EventGenerator : MonoBehaviour
{
	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerDiedEvent _playerDiedEvent;

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x10349AC", Offset = "0x10349AC", VA = "0x10349AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x1034A1C", Offset = "0x1034A1C", VA = "0x1034A1C")]
	public void PublishPlayerDiedEvent()
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x1034AE4", Offset = "0x1034AE4", VA = "0x1034AE4")]
	public void PublishEnemyKilledEvent()
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x1034BC8", Offset = "0x1034BC8", VA = "0x1034BC8")]
	public EventGenerator()
	{
	}
}
[Token(Token = "0x2000331")]
public class EnemyKilledEvent : BaseGameEvent
{
	[Token(Token = "0x170001A6")]
	public int EnemyScoreValue
	{
		[Token(Token = "0x6001280")]
		[Address(RVA = "0x1034BD0", Offset = "0x1034BD0", VA = "0x1034BD0")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001281")]
		[Address(RVA = "0x1034BD8", Offset = "0x1034BD8", VA = "0x1034BD8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x1034BA0", Offset = "0x1034BA0", VA = "0x1034BA0")]
	public EnemyKilledEvent(int score)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x1034BE0", Offset = "0x1034BE0", VA = "0x1034BE0")]
	public EnemyKilledEvent(GameObject sender, int score)
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x1034C08", Offset = "0x1034C08", VA = "0x1034C08")]
	private EnemyKilledEvent()
	{
	}
}
[Token(Token = "0x2000332")]
public class PlayerDiedEvent : BaseGameEvent
{
	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Position;

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x1034A14", Offset = "0x1034A14", VA = "0x1034A14")]
	public PlayerDiedEvent()
	{
	}
}
[Token(Token = "0x2000333")]
public class PlayerDiePositionMark : MonoBehaviour
{
	[Token(Token = "0x6001286")]
	[Address(RVA = "0x1034C10", Offset = "0x1034C10", VA = "0x1034C10")]
	private void Start()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x1034CD0", Offset = "0x1034CD0", VA = "0x1034CD0")]
	private void OnPlayerDie(IGameEvent obj)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x1034E58", Offset = "0x1034E58", VA = "0x1034E58")]
	public PlayerDiePositionMark()
	{
	}
}
[Token(Token = "0x2000334")]
public class Score : MonoBehaviour
{
	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text scoreText;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _score;

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x1034E60", Offset = "0x1034E60", VA = "0x1034E60")]
	private void Start()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x1034F28", Offset = "0x1034F28", VA = "0x1034F28")]
	private void OnEnemyKilled(IGameEvent obj)
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x1035024", Offset = "0x1035024", VA = "0x1035024")]
	public Score()
	{
	}
}
[Token(Token = "0x2000335")]
public class FG_GameObjectGUIDs : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool _dirty;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string[] guids;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public UnityEngine.Object[] objects;

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x103502C", Offset = "0x103502C", VA = "0x103502C")]
	private FG_GameObjectGUIDs()
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x1035100", Offset = "0x1035100", VA = "0x1035100")]
	private void Awake()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x103515C", Offset = "0x103515C", VA = "0x103515C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x10351B8", Offset = "0x10351B8", VA = "0x10351B8")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x2000336")]
public class DemoUIScript : MonoBehaviour
{
	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LighteningScript lighteningScript;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sourceLightningForInitialization;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text framesPerSecondText;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text pointsText;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text displacementText;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text scaleText;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material mat1;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material mat2;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material mat3;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material mat4;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material mat5;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material mat6;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material mat7;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material mat8;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material mat9;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _materialChange;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text sizeText;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text rowsColumnsText;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text animationText;

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x1035260", Offset = "0x1035260", VA = "0x1035260")]
	public void Start()
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x10353FC", Offset = "0x10353FC", VA = "0x10353FC")]
	public void Update()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x10355D0", Offset = "0x10355D0", VA = "0x10355D0")]
	public void framesPerSecond(float value)
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x1035694", Offset = "0x1035694", VA = "0x1035694")]
	public void pointsInLine(float value)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x1035758", Offset = "0x1035758", VA = "0x1035758")]
	public void displacement(float value)
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x1035800", Offset = "0x1035800", VA = "0x1035800")]
	public void lineScale(float value)
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x10358A8", Offset = "0x10358A8", VA = "0x10358A8")]
	public void randomize(bool value)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x10358C8", Offset = "0x10358C8", VA = "0x10358C8")]
	public void materialChange(float value)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x1035A78", Offset = "0x1035A78", VA = "0x1035A78")]
	public void handleMaterialChange(string textureSize, int rows, int cols, string textureAnimV, Material mat)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x1035C88", Offset = "0x1035C88", VA = "0x1035C88")]
	public DemoUIScript()
	{
	}
}
[Token(Token = "0x2000337")]
public class LighteningBezierScript : MonoBehaviour
{
	[Token(Token = "0x2000338")]
	[CompilerGenerated]
	private sealed class <updateTiling>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LighteningBezierScript <>4__this;

		[Token(Token = "0x170001A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x10367E0", Offset = "0x10367E0", VA = "0x10367E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x1036828", Offset = "0x1036828", VA = "0x1036828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1036250", Offset = "0x1036250", VA = "0x1036250")]
		[DebuggerHidden]
		public <updateTiling>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x10362B0", Offset = "0x10362B0", VA = "0x10362B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x10362B4", Offset = "0x10362B4", VA = "0x10362B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x10367E8", Offset = "0x10367E8", VA = "0x10367E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General Settings")]
	public GameObject target;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 p1;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Material Settings")]
	public Material mat;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _mat;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int columns;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int rows;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float framesPerSecond;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool randomize;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Line Renderer Settings")]
	public int points;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float pointsDisplacement;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float lineScale;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool distanceBasedDisplacement;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool zDisplacement;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int max;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public int index;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool run;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LineRenderer rend;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] offsets;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2 size;

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x1035C90", Offset = "0x1035C90", VA = "0x1035C90")]
	private void Start()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x1035F34", Offset = "0x1035F34", VA = "0x1035F34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x1035FB8", Offset = "0x1035FB8", VA = "0x1035FB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x1035CB8", Offset = "0x1035CB8", VA = "0x1035CB8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x1036060", Offset = "0x1036060", VA = "0x1036060")]
	private void GetRandomOffsets()
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x1036138", Offset = "0x1036138", VA = "0x1036138")]
	public void UpdateMaterial(int rows, int cols, Material newMaterial)
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x10361DC", Offset = "0x10361DC", VA = "0x10361DC")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x1035EC0", Offset = "0x1035EC0", VA = "0x1035EC0")]
	[IteratorStateMachine(typeof(<updateTiling>d__26))]
	private IEnumerator updateTiling()
	{
		return null;
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x1036278", Offset = "0x1036278", VA = "0x1036278")]
	public LighteningBezierScript()
	{
	}
}
[Token(Token = "0x2000339")]
public class LighteningScript : MonoBehaviour
{
	[Token(Token = "0x200033A")]
	[CompilerGenerated]
	private sealed class <updateTiling>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LighteningScript <>4__this;

		[Token(Token = "0x170001A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x1037224", Offset = "0x1037224", VA = "0x1037224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x103726C", Offset = "0x103726C", VA = "0x103726C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1036CD8", Offset = "0x1036CD8", VA = "0x1036CD8")]
		[DebuggerHidden]
		public <updateTiling>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x1036D38", Offset = "0x1036D38", VA = "0x1036D38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x1036D3C", Offset = "0x1036D3C", VA = "0x1036D3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x103722C", Offset = "0x103722C", VA = "0x103722C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General Settings")]
	public GameObject target;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Material Settings")]
	public Material mat;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _mat;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int columns;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int rows;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float framesPerSecond;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool randomize;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Line Renderer Settings")]
	public int points;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float pointsDisplacement;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lineScale;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool distanceBasedDisplacement;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool zDisplacement;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int max;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public int index;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool run;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LineRenderer rend;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2[] offsets;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 size;

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x1036830", Offset = "0x1036830", VA = "0x1036830")]
	private void Start()
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x1036AD4", Offset = "0x1036AD4", VA = "0x1036AD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x1036B58", Offset = "0x1036B58", VA = "0x1036B58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x1036858", Offset = "0x1036858", VA = "0x1036858")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x1036C00", Offset = "0x1036C00", VA = "0x1036C00")]
	private void GetRandomOffsets()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x1035BE4", Offset = "0x1035BE4", VA = "0x1035BE4")]
	public void UpdateMaterial(int rows, int cols, Material newMaterial)
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x1036A60", Offset = "0x1036A60", VA = "0x1036A60")]
	[IteratorStateMachine(typeof(<updateTiling>d__24))]
	private IEnumerator updateTiling()
	{
		return null;
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x1036D00", Offset = "0x1036D00", VA = "0x1036D00")]
	public LighteningScript()
	{
	}
}
[Token(Token = "0x200033B")]
public class ScrollUV_Spotlight : MonoBehaviour
{
	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float horizontalScrollSpeed;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float verticalScrollSpeed;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _myRenderer;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool scroll;

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x1037274", Offset = "0x1037274", VA = "0x1037274")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x1037334", Offset = "0x1037334", VA = "0x1037334")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x10373B0", Offset = "0x10373B0", VA = "0x10373B0")]
	public void DoActivateTrigger()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x10373C0", Offset = "0x10373C0", VA = "0x10373C0")]
	public ScrollUV_Spotlight()
	{
	}
}
[Token(Token = "0x200033C")]
public class LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool flicker;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float flickerIntensity;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float baseIntensity;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light lightComp;

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x10373D8", Offset = "0x10373D8", VA = "0x10373D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x103745C", Offset = "0x103745C", VA = "0x103745C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x10374F0", Offset = "0x10374F0", VA = "0x10374F0")]
	public LightFlicker()
	{
	}
}
[Token(Token = "0x200033D")]
public class CameraController : MonoBehaviour
{
	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentIndex;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] targets;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 vel;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float smoothTime;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MaxSpeed;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float RotationSpeed;

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x1037508", Offset = "0x1037508", VA = "0x1037508")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x103750C", Offset = "0x103750C", VA = "0x103750C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x10377FC", Offset = "0x10377FC", VA = "0x10377FC")]
	public CameraController()
	{
	}
}
[Token(Token = "0x200033E")]
public class ParticleMagnets : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200033F")]
	private class FVector3
	{
		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float x;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float z;

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x10382C4", Offset = "0x10382C4", VA = "0x10382C4")]
		public FVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000340")]
	public class Magnet
	{
		[Token(Token = "0x2000341")]
		public enum MagnetType
		{
			[Token(Token = "0x400124A")]
			Repulse,
			[Token(Token = "0x400124B")]
			Attract
		}

		[Token(Token = "0x2000342")]
		public enum MagnetEffects
		{
			[Token(Token = "0x400124D")]
			Position = 0,
			[Token(Token = "0x400124E")]
			Direction = 1,
			[Token(Token = "0x400124F")]
			BoundedPosition = 3,
			[Token(Token = "0x4001250")]
			BoundedDirection = 4,
			[Token(Token = "0x4001251")]
			PositionalNoise = 5,
			[Token(Token = "0x4001252")]
			DirectionalNoise = 6,
			[Token(Token = "0x4001253")]
			Custom = 7
		}

		[Token(Token = "0x2000343")]
		public delegate void EffectorDelegate(ref Vector3 p_pos, ref Vector3 p_vel);

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MagnetType magnetType;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private MagnetType currentMagnetType;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MagnetEffects magnetEffectType;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private MagnetEffects currentMagnetEffect;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform magnetTransform;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float scale;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float distance;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EffectorDelegate currentDelegate;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int repulse_attract;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool visualize;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[HideInInspector]
		public bool localSpace;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool enabledToggle;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _pos;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 tmp;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _dir;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private FVector3 f1;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float val;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float delta;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 ParticleDistance;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float ParticleDistanceMg;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float Acceleration;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float Attraction;

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x10381E4", Offset = "0x10381E4", VA = "0x10381E4")]
		public void SetFrame(Transform _localTrans)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x10382CC", Offset = "0x10382CC", VA = "0x10382CC")]
		private void FastSub(ref Vector3 a, ref Vector3 b)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x10382F0", Offset = "0x10382F0", VA = "0x10382F0")]
		private void FastMul(ref Vector3 a, float s)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x103830C", Offset = "0x103830C", VA = "0x103830C")]
		private void FastDiv(ref Vector3 a, float s)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x1038348", Offset = "0x1038348", VA = "0x1038348")]
		private void BoundedPosDelegate(ref Vector3 p_pos, ref Vector3 p_vel)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x103842C", Offset = "0x103842C", VA = "0x103842C")]
		private void CustomPosDelegate(ref Vector3 p_pos, ref Vector3 p_vel)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x10386A8", Offset = "0x10386A8", VA = "0x10386A8")]
		private void PositionalNoiseDelegate(ref Vector3 p_pos, ref Vector3 p_vel)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x1038800", Offset = "0x1038800", VA = "0x1038800")]
		private void DirectionalNoiseDelegate(ref Vector3 p_pos, ref Vector3 p_vel)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x1038958", Offset = "0x1038958", VA = "0x1038958")]
		private void BoundedDirDelegate(ref Vector3 p_pos, ref Vector3 p_vel)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x1038A90", Offset = "0x1038A90", VA = "0x1038A90")]
		private void PosDelegate(ref Vector3 p_pos, ref Vector3 p_vel)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x1038B90", Offset = "0x1038B90", VA = "0x1038B90")]
		private void DirDelegate(ref Vector3 p_pos, ref Vector3 p_vel)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x1037920", Offset = "0x1037920", VA = "0x1037920")]
		public void SetDelegates()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x103825C", Offset = "0x103825C", VA = "0x103825C")]
		public void ApplyEffectors(ref Vector3 p_pos, ref Vector3 p_vel)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x1038D78", Offset = "0x1038D78", VA = "0x1038D78")]
		public Magnet()
		{
		}
	}

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Magnet[] magnets;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem system;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x1037804", Offset = "0x1037804", VA = "0x1037804")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x103787C", Offset = "0x103787C", VA = "0x103787C")]
	private void AttemptStart()
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x1037AC8", Offset = "0x1037AC8", VA = "0x1037AC8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x1037BDC", Offset = "0x1037BDC", VA = "0x1037BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x10382BC", Offset = "0x10382BC", VA = "0x10382BC")]
	public ParticleMagnets()
	{
	}
}
[Token(Token = "0x2000344")]
public class AI_Manager : MonoBehaviour
{
	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AI_Manager _instance;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<AI_Unit> _units;

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x1038ECC", Offset = "0x1038ECC", VA = "0x1038ECC")]
	public static void Add(AI_Unit unit)
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x10390A0", Offset = "0x10390A0", VA = "0x10390A0")]
	public static void Remove(AI_Unit unit)
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x1039120", Offset = "0x1039120", VA = "0x1039120")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x1039218", Offset = "0x1039218", VA = "0x1039218")]
	public AI_Manager()
	{
	}
}
[Token(Token = "0x2000345")]
public class AI_Unit : MonoBehaviour
{
	[Token(Token = "0x2000346")]
	public enum ActionType
	{
		[Token(Token = "0x4001262")]
		idle,
		[Token(Token = "0x4001263")]
		move,
		[Token(Token = "0x4001264")]
		die,
		[Token(Token = "0x4001265")]
		attack
	}

	[Serializable]
	[Token(Token = "0x2000347")]
	public struct AIAction
	{
		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ActionType type;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshAnimationBase[] animations;
	}

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _maxMovingUnits;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int _movingUnits;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshAnimatorBase meshAnimator;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AIAction[] actions;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxMoveDistance;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float moveSpeed;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _chooseNewAction;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AIAction _currentAction;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _actionEndTime;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _currentPosition;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _movePosition;

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x10392B4", Offset = "0x10392B4", VA = "0x10392B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x1039360", Offset = "0x1039360", VA = "0x1039360")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x1039214", Offset = "0x1039214", VA = "0x1039214")]
	public void Tick(float time, float deltaTime)
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x10393B4", Offset = "0x10393B4", VA = "0x10393B4")]
	private void PerformAction(float time, float deltaTime)
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x1039A84", Offset = "0x1039A84", VA = "0x1039A84")]
	public AI_Unit()
	{
	}
}
[Token(Token = "0x2000349")]
public class ArmySpawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200034A")]
	public struct Unit
	{
		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject prefab;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int count;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float delay;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool loop;
	}

	[Token(Token = "0x200034B")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArmySpawner <>4__this;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <center>5__2;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <j>5__4;

		[Token(Token = "0x170001AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x103A264", Offset = "0x103A264", VA = "0x103A264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x103A2AC", Offset = "0x103A2AC", VA = "0x103A2AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x1039C24", Offset = "0x1039C24", VA = "0x1039C24")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x1039F18", Offset = "0x1039F18", VA = "0x1039F18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x1039F1C", Offset = "0x1039F1C", VA = "0x1039F1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x103A26C", Offset = "0x103A26C", VA = "0x103A26C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, Stack<GameObject>> _pool;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 spawnSize;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 sizeMult;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Unit[] units;

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x1039BB0", Offset = "0x1039BB0", VA = "0x1039BB0")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x1039C4C", Offset = "0x1039C4C", VA = "0x1039C4C")]
	private GameObject LoadFromPool(Unit unit)
	{
		return null;
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x1039DEC", Offset = "0x1039DEC", VA = "0x1039DEC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x1039E20", Offset = "0x1039E20", VA = "0x1039E20")]
	public ArmySpawner()
	{
	}
}
[Token(Token = "0x200034C")]
public class DelayedDestroy : MonoBehaviour
{
	[Token(Token = "0x200034D")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayedDestroy <>4__this;

		[Token(Token = "0x170001AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x103A454", Offset = "0x103A454", VA = "0x103A454", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x103A49C", Offset = "0x103A49C", VA = "0x103A49C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x103A328", Offset = "0x103A328", VA = "0x103A328")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x103A358", Offset = "0x103A358", VA = "0x103A358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x103A35C", Offset = "0x103A35C", VA = "0x103A35C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x103A45C", Offset = "0x103A45C", VA = "0x103A45C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x103A2B4", Offset = "0x103A2B4", VA = "0x103A2B4")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x103A350", Offset = "0x103A350", VA = "0x103A350")]
	public DelayedDestroy()
	{
	}
}
[Token(Token = "0x200034E")]
[AddComponentMenu("Camera-Control/Mouse Orbit with zoom")]
public class MouseOrbitImproved : MonoBehaviour
{
	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scrollMult;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distance;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xSpeed;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ySpeed;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMinLimit;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yMaxLimit;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMin;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceMax;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerControlled controlled;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float x;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float y;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool locked;

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x103A4A4", Offset = "0x103A4A4", VA = "0x103A4A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x103A4D0", Offset = "0x103A4D0", VA = "0x103A4D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x103AE70", Offset = "0x103AE70", VA = "0x103AE70")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x103AEAC", Offset = "0x103AEAC", VA = "0x103AEAC")]
	public MouseOrbitImproved()
	{
	}
}
[Token(Token = "0x2000350")]
public class PlayerControlled : MonoBehaviour
{
	[Token(Token = "0x400128B")]
	private const string AnimIdle = "BreathingIdle";

	[Token(Token = "0x400128C")]
	private const string AnimForward = "Running";

	[Token(Token = "0x400128D")]
	private const string AnimBackward = "RunningBackward";

	[Token(Token = "0x400128E")]
	private const string AnimLeft = "Running";

	[Token(Token = "0x400128F")]
	private const string AnimRight = "Running";

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _moveSpeed;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _origTarget;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _currentAnim;

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x103AFAC", Offset = "0x103AFAC", VA = "0x103AFAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x103B07C", Offset = "0x103B07C", VA = "0x103B07C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x103B160", Offset = "0x103B160", VA = "0x103B160")]
	private void Update()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x103B77C", Offset = "0x103B77C", VA = "0x103B77C")]
	public PlayerControlled()
	{
	}
}
[Token(Token = "0x2000351")]
public class BoidComponent : MonoBehaviour
{
	[Token(Token = "0x2000352")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoidComponent <>4__this;

		[Token(Token = "0x170001AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0x103BC08", Offset = "0x103BC08", VA = "0x103BC08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0x103BC50", Offset = "0x103BC50", VA = "0x103BC50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x103B800", Offset = "0x103B800", VA = "0x103B800")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x103BAB8", Offset = "0x103BAB8", VA = "0x103BAB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x103BABC", Offset = "0x103BABC", VA = "0x103BABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x103BC10", Offset = "0x103BC10", VA = "0x103BC10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Quaternion velocity;

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x103B78C", Offset = "0x103B78C", VA = "0x103B78C")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x103B828", Offset = "0x103B828", VA = "0x103B828")]
	private void UpdateTarget()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x103B968", Offset = "0x103B968", VA = "0x103B968")]
	private void Update()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x103BAA8", Offset = "0x103BAA8", VA = "0x103BAA8")]
	public BoidComponent()
	{
	}
}
[Token(Token = "0x2000353")]
public class SetRandomColor : MonoBehaviour
{
	[Token(Token = "0x2000354")]
	[CompilerGenerated]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetRandomColor <>4__this;

		[Token(Token = "0x170001B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0x103BE18", Offset = "0x103BE18", VA = "0x103BE18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001316")]
			[Address(RVA = "0x103BE60", Offset = "0x103BE60", VA = "0x103BE60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x103BCCC", Offset = "0x103BCCC", VA = "0x103BCCC")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x103BCFC", Offset = "0x103BCFC", VA = "0x103BCFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x103BD00", Offset = "0x103BD00", VA = "0x103BD00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x103BE20", Offset = "0x103BE20", VA = "0x103BE20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x103BC58", Offset = "0x103BC58", VA = "0x103BC58")]
	[IteratorStateMachine(typeof(<Start>d__0))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x103BCF4", Offset = "0x103BCF4", VA = "0x103BCF4")]
	public SetRandomColor()
	{
	}
}
[Token(Token = "0x2000355")]
public class FireworkFx : MonoBehaviour
{
	[Token(Token = "0x2000356")]
	[CompilerGenerated]
	private sealed class <TriggerFirework>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FireworkFx <>4__this;

		[Token(Token = "0x170001B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0x103C40C", Offset = "0x103C40C", VA = "0x103C40C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0x103C454", Offset = "0x103C454", VA = "0x103C454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x103C214", Offset = "0x103C214", VA = "0x103C214")]
		[DebuggerHidden]
		public <TriggerFirework>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x103C2DC", Offset = "0x103C2DC", VA = "0x103C2DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x103C2E0", Offset = "0x103C2E0", VA = "0x103C2E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x103C414", Offset = "0x103C414", VA = "0x103C414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject FireworkFX;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<FireworkFx> Fireworks;

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x103BE68", Offset = "0x103BE68", VA = "0x103BE68")]
	public static void Trigger()
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x103C01C", Offset = "0x103C01C", VA = "0x103C01C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x103C110", Offset = "0x103C110", VA = "0x103C110")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x103BFFC", Offset = "0x103BFFC", VA = "0x103BFFC")]
	public void RaiseFireWorks(float delay)
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x103C190", Offset = "0x103C190", VA = "0x103C190")]
	[IteratorStateMachine(typeof(<TriggerFirework>d__6))]
	private IEnumerator TriggerFirework(float delay)
	{
		return null;
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x103C23C", Offset = "0x103C23C", VA = "0x103C23C")]
	public FireworkFx()
	{
	}
}
[Token(Token = "0x2000357")]
public class SoundFileOpener : MonoBehaviour
{
	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputField pathBox;

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x103C45C", Offset = "0x103C45C", VA = "0x103C45C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x103C460", Offset = "0x103C460", VA = "0x103C460")]
	public void PlayFile()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x103C564", Offset = "0x103C564", VA = "0x103C564")]
	public SoundFileOpener()
	{
	}
}
[Token(Token = "0x2000358")]
public class OutputVolume : MonoBehaviour
{
	[Token(Token = "0x2000359")]
	public enum SourceType
	{
		[Token(Token = "0x40012BE")]
		AudioSource,
		[Token(Token = "0x40012BF")]
		AudioListener,
		[Token(Token = "0x40012C0")]
		Custom
	}

	[Token(Token = "0x200035A")]
	public enum OutputType
	{
		[Token(Token = "0x40012C2")]
		PrefabBar,
		[Token(Token = "0x40012C3")]
		ObjectPosition,
		[Token(Token = "0x40012C4")]
		ObjectRotation,
		[Token(Token = "0x40012C5")]
		ObjectScale
	}

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Enables or disables the processing and display of volume data.")]
	public bool isEnabled;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("The type of source for volume data.")]
	public SourceType sourceType;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The AudioSource to take data from.")]
	public AudioSource audioSource;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The number of samples to use when sampling. Must be a power of two.")]
	public int sampleAmount;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The audio channel to take data from when sampling.")]
	public int channel;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	[Tooltip("The amount of dampening used when the new scale is higher than the bar's existing scale.")]
	public float attackDamp;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	[Tooltip("The amount of dampening used when the new scale is lower than the bar's existing scale.")]
	public float decayDamp;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("How the volume data should be presented to the user.")]
	public OutputType outputType;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("A multiplier / mask for positioning or rotating. The volume data is multiplied by this vector, so 0 will mask that dimension out.")]
	public Vector3 valueMultiplier;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The scale used when output volume is lowest (0).")]
	public float outputScaleMin;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("The scale used when output volume is highest (1).")]
	public float outputScaleMax;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("The prefab of bar to use. Use a prefab from SimpleSpectrum/Bar Prefabs or refer to the documentation to use a custom prefab.")]
	public GameObject prefab;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Determines whether to scale the bar prefab (i.e. disable for just colouring).")]
	public bool scalePrefab;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[Tooltip("Determines whether to apply a color gradient on the bar.")]
	public bool useColorGradient;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("The minimum (low value) color.")]
	public Color MinColor;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("The maximum (high value) color.")]
	public Color MaxColor;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("The curve that determines the interpolation between Color Min and Color Max")]
	public AnimationCurve colorCurve;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Range(0f, 1f)]
	[Tooltip("The amount of dampening used when the new color value is higher than the existing color value.")]
	public float colorAttackDamp;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Range(0f, 1f)]
	[Tooltip("The amount of dampening used when the new color value is lower than the existing color value.")]
	public float colorDecayDamp;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject bar;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform barT;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float newValue;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float oldScale;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float oldColorVal;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material mat;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int mat_ValId;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool materialColourCanBeUsed;

	[Token(Token = "0x170001B5")]
	public float inputValue
	{
		[Token(Token = "0x6001327")]
		[Address(RVA = "0x103C56C", Offset = "0x103C56C", VA = "0x103C56C")]
		set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	public float outputValue
	{
		[Token(Token = "0x6001328")]
		[Address(RVA = "0x103C604", Offset = "0x103C604", VA = "0x103C604")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x103C60C", Offset = "0x103C60C", VA = "0x103C60C")]
	private void Start()
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x103C968", Offset = "0x103C968", VA = "0x103C968")]
	private void Update()
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x103CC60", Offset = "0x103CC60", VA = "0x103CC60")]
	public static float GetRMS(AudioSource aSource, int sampleSize, int channelUsed = 0)
	{
		return default(float);
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x103CB84", Offset = "0x103CB84", VA = "0x103CB84")]
	public static float GetRMS(int sampleSize, int channelUsed = 0)
	{
		return default(float);
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x103CD4C", Offset = "0x103CD4C", VA = "0x103CD4C")]
	public OutputVolume()
	{
	}
}
[Token(Token = "0x200035B")]
public class SimpleSpectrum : MonoBehaviour
{
	[Token(Token = "0x200035C")]
	public enum SourceType
	{
		[Token(Token = "0x40012EE")]
		AudioSource,
		[Token(Token = "0x40012EF")]
		AudioListener,
		[Token(Token = "0x40012F0")]
		MicrophoneInput,
		[Token(Token = "0x40012F1")]
		StereoMix,
		[Token(Token = "0x40012F2")]
		Custom
	}

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AudioMixerGroup muteGroup;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Enables or disables the processing and display of spectrum data. ")]
	public bool isEnabled;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("The type of source for spectrum data.")]
	public SourceType sourceType;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The AudioSource to take data from.")]
	public AudioSource audioSource;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The audio channel to use when sampling.")]
	public int sampleChannel;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The number of samples to use when sampling. Must be a power of two.")]
	public int numSamples;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("The FFTWindow to use when sampling.")]
	public FFTWindow windowUsed;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("If true, audio data is scaled logarithmically.")]
	public bool useLogarithmicFrequency;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[Tooltip("If true, the values of the spectrum are multiplied based on their frequency, to keep the values proportionate.")]
	public bool multiplyByFrequency;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The lower bound of the freuqnecy range to sample from. Leave at 0 when unused.")]
	public float frequencyLimitLow;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The upper bound of the freuqnecy range to sample from. Leave at 22050 (44100/2) when unused.")]
	public float frequencyLimitHigh;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The amount of bars to use. Does not have to be equal to Num Samples, but probably should be lower.")]
	public int barAmount;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Stretches the values of the bars.")]
	public float barYScale;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Sets a minimum scale for the bars.")]
	public float barMinYScale;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("The prefab of bar to use when building. Choose one from SimpleSpectrum/Bar Prefabs, or refer to the documentation to use a custom prefab.")]
	public GameObject barPrefab;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("Stretches the bars sideways.")]
	public float barXScale;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Increases the spacing between bars.")]
	public float barXSpacing;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(0f, 360f)]
	[Tooltip("Bends the Spectrum using a given angle. Set to 360 for a circle.")]
	public float barCurveAngle;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Rotates the Spectrum inwards or outwards. Especially useful when using barCurveAngle.")]
	public float barXRotation;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Range(0f, 1f)]
	[Tooltip("The amount of dampening used when the new scale is higher than the bar's existing scale.")]
	public float attackDamp;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Range(0f, 1f)]
	[Tooltip("The amount of dampening used when the new scale is lower than the bar's existing scale.")]
	public float decayDamp;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Determines whether to apply a color gradient on the bars, or just use a solid color.")]
	public bool useColorGradient;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Tooltip("The minimum (low value) color if useColorGradient is true, else the solid color to use.")]
	public Color colorMin;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Tooltip("The maximum (high value) color.")]
	public Color colorMax;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("The curve that determines the interpolation between colorMin and colorMax.")]
	public AnimationCurve colorValueCurve;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Range(0f, 1f)]
	[Tooltip("The amount of dampening used when the new color value is higher than the existing color value.")]
	public float colorAttackDamp;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[Range(0f, 1f)]
	[Tooltip("The amount of dampening used when the new color value is lower than the existing color value.")]
	public float colorDecayDamp;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] spectrum;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MaterialPropertyBlock materialProperties;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material Wave3DMaterial;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Renderer[] barRenderers;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float[] oldYScales;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float[] oldColorValues;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool materialColourCanBeUsed;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float highestLogFreq;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float frequencyScaleFactor;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string microphoneName;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float lastMicRestartTime;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float micRestartWait;

	[Token(Token = "0x170001B7")]
	public float[] spectrumInputData
	{
		[Token(Token = "0x600132E")]
		[Address(RVA = "0x103CDAC", Offset = "0x103CDAC", VA = "0x103CDAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600132F")]
		[Address(RVA = "0x103CDB4", Offset = "0x103CDB4", VA = "0x103CDB4")]
		set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public float[] spectrumOutputData
	{
		[Token(Token = "0x6001330")]
		[Address(RVA = "0x103CE48", Offset = "0x103CE48", VA = "0x103CE48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x103CE50", Offset = "0x103CE50", VA = "0x103CE50")]
	private void Start()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x103CF54", Offset = "0x103CF54", VA = "0x103CF54")]
	public void RebuildSpectrum()
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x103D190", Offset = "0x103D190", VA = "0x103D190")]
	private void Update()
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x103D534", Offset = "0x103D534", VA = "0x103D534")]
	public static float[] GetLogarithmicSpectrumData(AudioSource source, int spectrumSize, int sampleSize, FFTWindow windowUsed = FFTWindow.BlackmanHarris, int channelUsed = 0)
	{
		return null;
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x103D7EC", Offset = "0x103D7EC", VA = "0x103D7EC")]
	public static float[] GetLogarithmicSpectrumData(int spectrumSize, int sampleSize, FFTWindow windowUsed = FFTWindow.BlackmanHarris, int channelUsed = 0)
	{
		return null;
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x103DA9C", Offset = "0x103DA9C", VA = "0x103DA9C")]
	public SimpleSpectrum()
	{
	}
}
[Token(Token = "0x200035D")]
public class SRTParser
{
	[Token(Token = "0x200035E")]
	private enum eReadState
	{
		[Token(Token = "0x40012F5")]
		Index,
		[Token(Token = "0x40012F6")]
		Time,
		[Token(Token = "0x40012F7")]
		Text
	}

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<SubtitleBlock> _subtitles;

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x103DC58", Offset = "0x103DC58", VA = "0x103DC58")]
	public SRTParser(TextAsset textAsset)
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x103DD5C", Offset = "0x103DD5C", VA = "0x103DD5C")]
	public SRTParser(string text)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x103DD94", Offset = "0x103DD94", VA = "0x103DD94")]
	public static List<SubtitleBlock> Load(string text)
	{
		return null;
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x103DC90", Offset = "0x103DC90", VA = "0x103DC90")]
	public static List<SubtitleBlock> Load(TextAsset textAsset)
	{
		return null;
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x103E39C", Offset = "0x103E39C", VA = "0x103E39C")]
	public SubtitleBlock GetForTime(float time)
	{
		return null;
	}
}
[Token(Token = "0x200035F")]
public class SubtitleBlock
{
	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SubtitleBlock _blank;

	[Token(Token = "0x170001B9")]
	public static SubtitleBlock Blank
	{
		[Token(Token = "0x600133C")]
		[Address(RVA = "0x103E494", Offset = "0x103E494", VA = "0x103E494")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BA")]
	public int Index
	{
		[Token(Token = "0x600133D")]
		[Address(RVA = "0x103E554", Offset = "0x103E554", VA = "0x103E554")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600133E")]
		[Address(RVA = "0x103E55C", Offset = "0x103E55C", VA = "0x103E55C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001BB")]
	public double Length
	{
		[Token(Token = "0x600133F")]
		[Address(RVA = "0x103E564", Offset = "0x103E564", VA = "0x103E564")]
		[CompilerGenerated]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6001340")]
		[Address(RVA = "0x103E56C", Offset = "0x103E56C", VA = "0x103E56C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	public double From
	{
		[Token(Token = "0x6001341")]
		[Address(RVA = "0x103E574", Offset = "0x103E574", VA = "0x103E574")]
		[CompilerGenerated]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6001342")]
		[Address(RVA = "0x103E57C", Offset = "0x103E57C", VA = "0x103E57C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public double To
	{
		[Token(Token = "0x6001343")]
		[Address(RVA = "0x103E584", Offset = "0x103E584", VA = "0x103E584")]
		[CompilerGenerated]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6001344")]
		[Address(RVA = "0x103E58C", Offset = "0x103E58C", VA = "0x103E58C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public string Text
	{
		[Token(Token = "0x6001345")]
		[Address(RVA = "0x103E594", Offset = "0x103E594", VA = "0x103E594")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001346")]
		[Address(RVA = "0x103E59C", Offset = "0x103E59C", VA = "0x103E59C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x103E348", Offset = "0x103E348", VA = "0x103E348")]
	public SubtitleBlock(int index, double from, double to, string text)
	{
	}
}
[Token(Token = "0x2000360")]
public class SubtitleDisplayer : MonoBehaviour
{
	[Token(Token = "0x2000361")]
	[CompilerGenerated]
	private sealed class <Begin>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubtitleDisplayer <>4__this;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text <currentlyDisplayingText>5__2;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Text <fadedOutText>5__3;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SRTParser <parser>5__4;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startTime>5__5;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SubtitleBlock <currentSubtitle>5__6;

		[Token(Token = "0x170001BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0x103ED20", Offset = "0x103ED20", VA = "0x103ED20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0x103ED68", Offset = "0x103ED68", VA = "0x103ED68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x103E618", Offset = "0x103E618", VA = "0x103E618")]
		[DebuggerHidden]
		public <Begin>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x103E8D8", Offset = "0x103E8D8", VA = "0x103E8D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x103E8DC", Offset = "0x103E8DC", VA = "0x103E8DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x103ED28", Offset = "0x103ED28", VA = "0x103ED28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000362")]
	[CompilerGenerated]
	private sealed class <FadeTextOut>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text text;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SubtitleDisplayer <>4__this;

		[Token(Token = "0x170001C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0x103EE00", Offset = "0x103EE00", VA = "0x103EE00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001359")]
			[Address(RVA = "0x103EE48", Offset = "0x103EE48", VA = "0x103EE48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x103E708", Offset = "0x103E708", VA = "0x103E708")]
		[DebuggerHidden]
		public <FadeTextOut>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x103ED70", Offset = "0x103ED70", VA = "0x103ED70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x103ED74", Offset = "0x103ED74", VA = "0x103ED74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x103EE08", Offset = "0x103EE08", VA = "0x103EE08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000363")]
	[CompilerGenerated]
	private sealed class <FadeTextIn>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text text;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SubtitleDisplayer <>4__this;

		[Token(Token = "0x170001C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600135D")]
			[Address(RVA = "0x103EEE0", Offset = "0x103EEE0", VA = "0x103EEE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600135F")]
			[Address(RVA = "0x103EF28", Offset = "0x103EF28", VA = "0x103EF28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x103E7C0", Offset = "0x103E7C0", VA = "0x103E7C0")]
		[DebuggerHidden]
		public <FadeTextIn>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x103EE50", Offset = "0x103EE50", VA = "0x103EE50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x103EE54", Offset = "0x103EE54", VA = "0x103EE54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x103EEE8", Offset = "0x103EEE8", VA = "0x103EEE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000365")]
	[CompilerGenerated]
	private sealed class <Fade>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text text;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color toColor;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SubtitleDisplayer <>4__this;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Ease ease;

		[Token(Token = "0x170001C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x103F164", Offset = "0x103F164", VA = "0x103F164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x103F1AC", Offset = "0x103F1AC", VA = "0x103F1AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x103E8A8", Offset = "0x103E8A8", VA = "0x103E8A8")]
		[DebuggerHidden]
		public <Fade>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x103EF80", Offset = "0x103EF80", VA = "0x103EF80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x103EF84", Offset = "0x103EF84", VA = "0x103EF84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x103F16C", Offset = "0x103F16C", VA = "0x103F16C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset Subtitle;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Text;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Text2;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float FadeTime;

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x103E5A4", Offset = "0x103E5A4", VA = "0x103E5A4")]
	[IteratorStateMachine(typeof(<Begin>d__4))]
	public IEnumerator Begin()
	{
		return null;
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x103E640", Offset = "0x103E640", VA = "0x103E640")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x103E678", Offset = "0x103E678", VA = "0x103E678")]
	[IteratorStateMachine(typeof(<FadeTextOut>d__6))]
	private IEnumerator FadeTextOut(Text text)
	{
		return null;
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x103E730", Offset = "0x103E730", VA = "0x103E730")]
	[IteratorStateMachine(typeof(<FadeTextIn>d__7))]
	private IEnumerator FadeTextIn(Text text)
	{
		return null;
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x103E7E8", Offset = "0x103E7E8", VA = "0x103E7E8")]
	[IteratorStateMachine(typeof(<Fade>d__8))]
	private IEnumerator Fade(Text text, Color toColor, Ease ease)
	{
		return null;
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x103E8D0", Offset = "0x103E8D0", VA = "0x103E8D0")]
	public SubtitleDisplayer()
	{
	}
}
[Token(Token = "0x2000366")]
public class AnimateTiledTextureOnTrail : MonoBehaviour
{
	[Token(Token = "0x2000367")]
	public delegate void VoidEvent();

	[Token(Token = "0x2000368")]
	[CompilerGenerated]
	private sealed class <updateTiling>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimateTiledTextureOnTrail <>4__this;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <checkAgainst>5__2;

		[Token(Token = "0x170001C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x103FCB4", Offset = "0x103FCB4", VA = "0x103FCB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x103FCFC", Offset = "0x103FCFC", VA = "0x103FCFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x103F864", Offset = "0x103F864", VA = "0x103F864")]
		[DebuggerHidden]
		public <updateTiling>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x103FB3C", Offset = "0x103FB3C", VA = "0x103FB3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x103FB40", Offset = "0x103FB40", VA = "0x103FB40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x103FCBC", Offset = "0x103FCBC", VA = "0x103FCBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _columns;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int _rows;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 _scale;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 _offset;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 _buffer;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _framesPerSecond;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool _playOnce;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool _disableUponCompletion;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool _enableEvents;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool _playOnEnable;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _newMaterialInstance;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _index;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 _textureSize;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _materialInstance;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _hasMaterialInstance;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _isPlaying;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<VoidEvent> _voidEventCallbackList;

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x103F1B4", Offset = "0x103F1B4", VA = "0x103F1B4")]
	public void RegisterCallback(VoidEvent cbFunction)
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x103F2B8", Offset = "0x103F2B8", VA = "0x103F2B8")]
	public void UnRegisterCallback(VoidEvent cbFunction)
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x103F364", Offset = "0x103F364", VA = "0x103F364")]
	public void Play()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x103F484", Offset = "0x103F484", VA = "0x103F484")]
	public void ChangeMaterial(Material newMaterial, bool newInstance = false)
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x103F638", Offset = "0x103F638", VA = "0x103F638")]
	private void Awake()
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x103F6F8", Offset = "0x103F6F8", VA = "0x103F6F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x103F798", Offset = "0x103F798", VA = "0x103F798")]
	private void HandleCallbacks(List<VoidEvent> cbList)
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x103F834", Offset = "0x103F834", VA = "0x103F834")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x103F614", Offset = "0x103F614", VA = "0x103F614")]
	private void CalcTextureSize()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x103F410", Offset = "0x103F410", VA = "0x103F410")]
	[IteratorStateMachine(typeof(<updateTiling>d__27))]
	private IEnumerator updateTiling()
	{
		return null;
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x103F88C", Offset = "0x103F88C", VA = "0x103F88C")]
	private void ApplyOffset()
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x103F9A4", Offset = "0x103F9A4", VA = "0x103F9A4")]
	public AnimateTiledTextureOnTrail()
	{
	}
}
[Token(Token = "0x2000369")]
public class BillBoard : MonoBehaviour
{
	[Token(Token = "0x600137F")]
	[Address(RVA = "0x103FD04", Offset = "0x103FD04", VA = "0x103FD04")]
	private void Start()
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x103FD08", Offset = "0x103FD08", VA = "0x103FD08")]
	private void Update()
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x103FD50", Offset = "0x103FD50", VA = "0x103FD50")]
	public BillBoard()
	{
	}
}
[Token(Token = "0x200036A")]
public class tazo_rotate : MonoBehaviour
{
	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotate_x;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotate_y;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotate_z;

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x103FD58", Offset = "0x103FD58", VA = "0x103FD58")]
	private void Start()
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x103FD5C", Offset = "0x103FD5C", VA = "0x103FD5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x103FDE4", Offset = "0x103FDE4", VA = "0x103FDE4")]
	public tazo_rotate()
	{
	}
}
[Token(Token = "0x200036B")]
public class UnityMainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x200036C")]
	[CompilerGenerated]
	private sealed class <WaitFor>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x170001C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x1040914", Offset = "0x1040914", VA = "0x1040914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x104095C", Offset = "0x104095C", VA = "0x104095C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x1040014", Offset = "0x1040014", VA = "0x1040014")]
		[DebuggerHidden]
		public <WaitFor>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x1040820", Offset = "0x1040820", VA = "0x1040820", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x1040824", Offset = "0x1040824", VA = "0x1040824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x104091C", Offset = "0x104091C", VA = "0x104091C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200036F")]
	[CompilerGenerated]
	private sealed class <ActionWrapper>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action a;

		[Token(Token = "0x170001CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x1040B14", Offset = "0x1040B14", VA = "0x1040B14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x1040B5C", Offset = "0x1040B5C", VA = "0x1040B5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x104055C", Offset = "0x104055C", VA = "0x104055C")]
		[DebuggerHidden]
		public <ActionWrapper>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x1040AA4", Offset = "0x1040AA4", VA = "0x1040AA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x1040AA8", Offset = "0x1040AA8", VA = "0x1040AA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x1040B1C", Offset = "0x1040B1C", VA = "0x1040B1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Queue<Action> _executionQueue;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static UnityMainThreadDispatcher _instance;

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x103FDEC", Offset = "0x103FDEC", VA = "0x103FDEC")]
	public void Update()
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x103FF90", Offset = "0x103FF90", VA = "0x103FF90")]
	[IteratorStateMachine(typeof(<WaitFor>d__2))]
	private IEnumerator WaitFor(float seconds, Action action)
	{
		return null;
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x104003C", Offset = "0x104003C", VA = "0x104003C")]
	public static void Run(Action action, float delay = 0f)
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x10401B4", Offset = "0x10401B4", VA = "0x10401B4")]
	public void Enqueue(IEnumerator action)
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x1040198", Offset = "0x1040198", VA = "0x1040198")]
	public void Enqueue(Action action)
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x1040418", Offset = "0x1040418", VA = "0x1040418")]
	public Task EnqueueAsync(Action action)
	{
		return null;
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x10403A4", Offset = "0x10403A4", VA = "0x10403A4")]
	[IteratorStateMachine(typeof(<ActionWrapper>d__7))]
	private IEnumerator ActionWrapper(Action a)
	{
		return null;
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x1040584", Offset = "0x1040584", VA = "0x1040584")]
	public static bool Exists()
	{
		return default(bool);
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x10400DC", Offset = "0x10400DC", VA = "0x10400DC")]
	public static UnityMainThreadDispatcher Instance()
	{
		return null;
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x1040610", Offset = "0x1040610", VA = "0x1040610")]
	private void Awake()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x1040710", Offset = "0x1040710", VA = "0x1040710")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x104076C", Offset = "0x104076C", VA = "0x104076C")]
	public UnityMainThreadDispatcher()
	{
	}
}
[Token(Token = "0x2000370")]
public class testZip : MonoBehaviour
{
	[Token(Token = "0x2000371")]
	[CompilerGenerated]
	private sealed class <DownloadZipFile>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public testZip <>4__this;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x170001CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x1047D08", Offset = "0x1047D08", VA = "0x1047D08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x1047D50", Offset = "0x1047D50", VA = "0x1047D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x10478D8", Offset = "0x10478D8", VA = "0x10478D8")]
		[DebuggerHidden]
		public <DownloadZipFile>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x1047900", Offset = "0x1047900", VA = "0x1047900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x104791C", Offset = "0x104791C", VA = "0x104791C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1047C58", Offset = "0x1047C58", VA = "0x1047C58")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x1047D10", Offset = "0x1047D10", VA = "0x1047D10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int zres;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string myFile;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string log;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string ppath;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool compressionStarted;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool pass;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool downloadDone;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private byte[] reusableBuffer;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private byte[] reusableBuffer2;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private byte[] reusableBuffer3;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private byte[] fixedInBuffer;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private byte[] fixedOutBuffer;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private byte[] fixedBuffer;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int[] progress;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ulong[] progress2;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ulong[] byteProgress;

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x1040B64", Offset = "0x1040B64", VA = "0x1040B64")]
	private void plog(string t = "")
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x1040BD0", Offset = "0x1040BD0", VA = "0x1040BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x1040D78", Offset = "0x1040D78", VA = "0x1040D78")]
	private void Update()
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x1040DA0", Offset = "0x1040DA0", VA = "0x1040DA0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x10413CC", Offset = "0x10413CC", VA = "0x10413CC")]
	private void DoDecompression()
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x1046670", Offset = "0x1046670", VA = "0x1046670")]
	private void decompressFunc()
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x10433BC", Offset = "0x10433BC", VA = "0x10433BC")]
	private void DoDecompression_FileBuffer()
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x1043C74", Offset = "0x1043C74", VA = "0x1043C74")]
	private void DoInMemoryTest()
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x1045754", Offset = "0x1045754", VA = "0x1045754")]
	private void DoGzipBz2Tests()
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x1045D94", Offset = "0x1045D94", VA = "0x1045D94")]
	private void DoTarTests()
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x104473C", Offset = "0x104473C", VA = "0x104473C")]
	private void DoDecompression_Merged()
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x1040D04", Offset = "0x1040D04", VA = "0x1040D04")]
	[IteratorStateMachine(typeof(<DownloadZipFile>d__27))]
	private IEnumerator DownloadZipFile()
	{
		return null;
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x10467B8", Offset = "0x10467B8", VA = "0x10467B8")]
	public testZip()
	{
	}
}
[Token(Token = "0x2000372")]
public class VisibilityBinder : DataBinder
{
	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Target;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool InverseVisibility;

	[Token(Token = "0x170001CF")]
	public bool IsVisible
	{
		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1047D58", Offset = "0x1047D58", VA = "0x1047D58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x1047D78", Offset = "0x1047D78", VA = "0x1047D78", Slot = "4")]
	public override void SetData(object data)
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x1047E08", Offset = "0x1047E08", VA = "0x1047E08")]
	public VisibilityBinder()
	{
	}
}
[Token(Token = "0x2000373")]
public class ZipWrapper
{
	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x1047E10", Offset = "0x1047E10", VA = "0x1047E10")]
	public static void DecompressFile(string path, string folder, [Optional] string password)
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x1047EB4", Offset = "0x1047EB4", VA = "0x1047EB4")]
	public static void CompressFolder(string folderPath, string outputPath, [Optional] string password)
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x1047F60", Offset = "0x1047F60", VA = "0x1047F60")]
	public static byte[] EntryToBuffer(string zipPath, string entryPath, byte[] zipBuffer, [Optional] string password)
	{
		return null;
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x1048360", Offset = "0x1048360", VA = "0x1048360")]
	public ZipWrapper()
	{
	}
}
namespace FSG.MeshAnimator
{
	[Token(Token = "0x2000374")]
	public class CrowdSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<CrowdSpawner> spawners;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] options;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] optionsDesc;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] meshAnimationNames;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] otherInfo;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sizeOfCrowd;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int selectedOption;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int maxSize;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float radius;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float slopeStart;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float slopeAmount;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 radiusScaler;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 baseScale;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool randomizeTime;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool showGUI;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string fps;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int previousFrame;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int previousSelection;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int guiOffset;

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x1048368", Offset = "0x1048368", VA = "0x1048368")]
		private void Start()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1048E64", Offset = "0x1048E64", VA = "0x1048E64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x1048EE4", Offset = "0x1048EE4", VA = "0x1048EE4")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x1048494", Offset = "0x1048494", VA = "0x1048494")]
		private void SpawnCrowd()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1049108", Offset = "0x1049108", VA = "0x1049108")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x1049744", Offset = "0x1049744", VA = "0x1049744")]
		public CrowdSpawner()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class AnimatorStateMachine : MonoBehaviour
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimatorBase meshAnimator;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crossfade;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float crossfadeDuration;

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x1049934", Offset = "0x1049934", VA = "0x1049934")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x1049A64", Offset = "0x1049A64", VA = "0x1049A64")]
		private void OnAnimationFinished(string anim)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x1049BBC", Offset = "0x1049BBC", VA = "0x1049BBC")]
		public AnimatorStateMachine()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class PerformanceTester : MonoBehaviour
	{
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] animObjects;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] options;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cameraSpeed;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 spawnOffset;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] spawnedMeshes;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> meshes;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string fps;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int previousFrame;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 offset;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x1049BCC", Offset = "0x1049BCC", VA = "0x1049BCC")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x1049C24", Offset = "0x1049C24", VA = "0x1049C24")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1049CB0", Offset = "0x1049CB0", VA = "0x1049CB0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1049F7C", Offset = "0x1049F7C", VA = "0x1049F7C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x104A6DC", Offset = "0x104A6DC", VA = "0x104A6DC")]
		public PerformanceTester()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public interface IMeshAnimation
	{
		[Token(Token = "0x170001D0")]
		string AnimationName
		{
			[Token(Token = "0x60013CC")]
			get;
		}

		[Token(Token = "0x170001D1")]
		string[] ExposedTransforms
		{
			[Token(Token = "0x60013CD")]
			get;
		}

		[Token(Token = "0x170001D2")]
		MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x60013CE")]
			get;
		}

		[Token(Token = "0x170001D3")]
		MeshAnimationEvent[] Events
		{
			[Token(Token = "0x60013CF")]
			get;
		}

		[Token(Token = "0x170001D4")]
		int TotalFrames
		{
			[Token(Token = "0x60013D0")]
			get;
		}

		[Token(Token = "0x170001D5")]
		float PlaybackSpeed
		{
			[Token(Token = "0x60013D1")]
			get;
		}

		[Token(Token = "0x170001D6")]
		float Length
		{
			[Token(Token = "0x60013D2")]
			get;
		}

		[Token(Token = "0x170001D7")]
		WrapMode WrapMode
		{
			[Token(Token = "0x60013D3")]
			get;
		}

		[Token(Token = "0x170001D8")]
		RootMotionMode RootMotionMode
		{
			[Token(Token = "0x60013D4")]
			get;
		}

		[Token(Token = "0x170001D9")]
		int FrameSkip
		{
			[Token(Token = "0x60013D5")]
			get;
		}

		[Token(Token = "0x170001DA")]
		int VertexCount
		{
			[Token(Token = "0x60013D6")]
			get;
		}

		[Token(Token = "0x60013D7")]
		void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame);

		[Token(Token = "0x60013D8")]
		void GenerateFrame(Mesh baseMesh, int frame);

		[Token(Token = "0x60013D9")]
		void GenerateFrames(Mesh baseMesh);

		[Token(Token = "0x60013DA")]
		void Reset();

		[Token(Token = "0x60013DB")]
		void FireEvents(GameObject eventReciever, int frame);

		[Token(Token = "0x60013DC")]
		MeshFrameDataBase GetNearestFrame(int frame);

		[Token(Token = "0x60013DD")]
		float GetInterpolatingFrames(int frame, out MeshFrameDataBase previousFrame, out MeshFrameDataBase nextFrame);

		[Token(Token = "0x60013DE")]
		bool IsName(string name);
	}
	[Token(Token = "0x2000378")]
	public interface IMeshAnimator
	{
		[Token(Token = "0x170001DB")]
		MeshRenderer MeshRenderer
		{
			[Token(Token = "0x60013DF")]
			get;
		}

		[Token(Token = "0x170001DC")]
		MeshFilter MeshFilter
		{
			[Token(Token = "0x60013E0")]
			get;
		}

		[Token(Token = "0x170001DD")]
		IMeshAnimation[] Animations
		{
			[Token(Token = "0x60013E1")]
			get;
		}

		[Token(Token = "0x170001DE")]
		float NextTick
		{
			[Token(Token = "0x60013E2")]
			get;
		}

		[Token(Token = "0x170001DF")]
		Action<string> OnAnimationFinished
		{
			[Token(Token = "0x60013E3")]
			get;
			[Token(Token = "0x60013E4")]
			set;
		}

		[Token(Token = "0x170001E0")]
		Action OnFrameUpdated
		{
			[Token(Token = "0x60013E5")]
			get;
			[Token(Token = "0x60013E6")]
			set;
		}

		[Token(Token = "0x170001E1")]
		Action<bool> OnVisibilityChanged
		{
			[Token(Token = "0x60013E7")]
			get;
			[Token(Token = "0x60013E8")]
			set;
		}

		[Token(Token = "0x60013E9")]
		void UpdateTick(float time);

		[Token(Token = "0x60013EA")]
		void Play();

		[Token(Token = "0x60013EB")]
		void Play(string animationName, float normalizedTime = -1f);

		[Token(Token = "0x60013EC")]
		void Play(int animationIndex);

		[Token(Token = "0x60013ED")]
		IMeshAnimation GetClip(string animationName);

		[Token(Token = "0x60013EE")]
		void SetTime(float time, bool instantUpdate = false);

		[Token(Token = "0x60013EF")]
		void SetTimeNormalized(float time, bool instantUpdate = false);

		[Token(Token = "0x60013F0")]
		bool IsPlaying();
	}
	[Token(Token = "0x2000379")]
	public class MecanimMeshAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimatorBase meshAnimator;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, string> _animationHashes;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _currentAnimationName;

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x104A7B8", Offset = "0x104A7B8", VA = "0x104A7B8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x104A9DC", Offset = "0x104A9DC", VA = "0x104A9DC", Slot = "5")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x104ACB4", Offset = "0x104ACB4", VA = "0x104ACB4")]
		public MecanimMeshAnimatorController()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public struct ExposedTransformCrossfade
	{
		[Token(Token = "0x200037B")]
		public struct LerpMatrix4x4Job : IJobParallelFor
		{
			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Matrix4x4> from;

			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<Matrix4x4> to;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public float delta;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NativeArray<Matrix4x4> output;

			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x104B4A0", Offset = "0x104B4A0", VA = "0x104B4A0", Slot = "4")]
			public void Execute(int i)
			{
			}
		}

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int framesNeeded;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int currentFrame;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isFading;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float endTime;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshFrameDataBase fromFrame;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFrameDataBase toFrame;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LerpMatrix4x4Job[] exposedTransformJobs;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JobHandle[] exposedTransformJobHandles;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NativeArray<Matrix4x4> fromMatrix;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NativeArray<Matrix4x4> toMatrix;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NativeArray<Matrix4x4>[] outputMatrix;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isReset;

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x104AD68", Offset = "0x104AD68", VA = "0x104AD68")]
		public void Reset(bool destroying)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x104B0C0", Offset = "0x104B0C0", VA = "0x104B0C0")]
		public void StartCrossfade(MeshFrameDataBase fromFrame, MeshFrameDataBase toFrame)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x104ADBC", Offset = "0x104ADBC", VA = "0x104ADBC")]
		public void ReturnFrame(bool destroying)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037C")]
	public abstract class MeshAnimationBase : ScriptableObject, IMeshAnimation
	{
		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string animationName;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float playbackSpeed;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public WrapMode wrapMode;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshAnimationEvent[] events;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float length;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public int frameSkip;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RootMotionMode rootMotionMode;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public string[] exposedTransforms;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int vertexCount;

		[Token(Token = "0x170001E2")]
		[HideInInspector]
		public int Mode
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x104B5B0", Offset = "0x104B5B0", VA = "0x104B5B0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x104B5B8", Offset = "0x104B5B8", VA = "0x104B5B8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public string AnimationName
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0x104B5C0", Offset = "0x104B5C0", VA = "0x104B5C0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public string[] ExposedTransforms
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0x104B5C8", Offset = "0x104B5C8", VA = "0x104B5C8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		public abstract MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x60013FC")]
			get;
		}

		[Token(Token = "0x170001E6")]
		public MeshAnimationEvent[] Events
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x104B5D0", Offset = "0x104B5D0", VA = "0x104B5D0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public abstract int TotalFrames
		{
			[Token(Token = "0x60013FE")]
			get;
		}

		[Token(Token = "0x170001E8")]
		public float PlaybackSpeed
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x104B5D8", Offset = "0x104B5D8", VA = "0x104B5D8", Slot = "9")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E9")]
		public float Length
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x104B5E0", Offset = "0x104B5E0", VA = "0x104B5E0", Slot = "10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EA")]
		public WrapMode WrapMode
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x104B5E8", Offset = "0x104B5E8", VA = "0x104B5E8", Slot = "11")]
			get
			{
				return default(WrapMode);
			}
		}

		[Token(Token = "0x170001EB")]
		public RootMotionMode RootMotionMode
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x104B5F0", Offset = "0x104B5F0", VA = "0x104B5F0", Slot = "12")]
			get
			{
				return default(RootMotionMode);
			}
		}

		[Token(Token = "0x170001EC")]
		public int FrameSkip
		{
			[Token(Token = "0x6001403")]
			[Address(RVA = "0x104B5F8", Offset = "0x104B5F8", VA = "0x104B5F8", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001ED")]
		public int VertexCount
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x104B600", Offset = "0x104B600", VA = "0x104B600", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x104B608", Offset = "0x104B608", VA = "0x104B608", Slot = "25")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x104B658", Offset = "0x104B658", VA = "0x104B658", Slot = "19")]
		public void FireEvents(GameObject eventReciever, int frame)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x104B7D8", Offset = "0x104B7D8", VA = "0x104B7D8", Slot = "22")]
		public bool IsName(string animationName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x104B824", Offset = "0x104B824", VA = "0x104B824", Slot = "26")]
		public virtual MeshFrameDataBase GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x104B978", Offset = "0x104B978", VA = "0x104B978", Slot = "21")]
		public float GetInterpolatingFrames(int frame, out MeshFrameDataBase previousFrame, out MeshFrameDataBase nextFrame)
		{
			return default(float);
		}

		[Token(Token = "0x600140A")]
		public abstract void SetFrameData(int frame, MeshFrameDataBase frameData);

		[Token(Token = "0x600140B")]
		public abstract void SetFrameData(MeshFrameDataBase[] frameData);

		[Token(Token = "0x600140C")]
		public abstract void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame);

		[Token(Token = "0x600140D")]
		public abstract void GenerateFrame(Mesh baseMesh, int frame);

		[Token(Token = "0x600140E")]
		public abstract void GenerateFrames(Mesh baseMesh);

		[Token(Token = "0x600140F")]
		public abstract void Reset();

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x104BB1C", Offset = "0x104BB1C", VA = "0x104BB1C")]
		protected MeshAnimationBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037D")]
	public class MeshAnimationEvent
	{
		[Token(Token = "0x200037E")]
		public enum Mode : byte
		{
			[Token(Token = "0x4001399")]
			Data,
			[Token(Token = "0x400139A")]
			String,
			[Token(Token = "0x400139B")]
			Float
		}

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string methodName;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int frame;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Mode eventType;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringValue;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float floatValue;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object data;

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x104B6D4", Offset = "0x104B6D4", VA = "0x104B6D4")]
		public void FireEvent(GameObject eventReciever)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x104BB34", Offset = "0x104BB34", VA = "0x104BB34")]
		public MeshAnimationEvent()
		{
		}
	}
	[Token(Token = "0x200037F")]
	[RequireComponent(typeof(MeshFilter))]
	public abstract class MeshAnimatorBase : MonoBehaviour, IMeshAnimator
	{
		[Serializable]
		[Token(Token = "0x2000380")]
		public struct MeshAnimatorLODLevel
		{
			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int fps;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float distance;

			[NonSerialized]
			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float distanceSquared;
		}

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh baseMesh;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool updateWhenOffscreen;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool playAutomatically;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool resetOnEnable;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject eventReciever;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int FPS;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool skipLastLoopFrame;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int currentFrame;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform LODCamera;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshAnimatorLODLevel[] LODLevels;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public float nextTick;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public MeshAnimationBase currentAnimation;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected int currentAnimIndex;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool isVisible;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float lastFrameTime;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected bool pingPong;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		protected bool isPaused;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float currentAnimTime;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Queue<string> queuedAnims;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int currentLodLevel;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform mTransform;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Dictionary<string, Transform> childMap;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool initialized;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected int previousEventFrame;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool hasExposedTransforms;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		protected bool hasLODCamera;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float nextLODCheck;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected int animationCount;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected ExposedTransformCrossfade exposedTransformCrossfade;

		[Token(Token = "0x170001EE")]
		public abstract IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x6001413")]
			get;
			[Token(Token = "0x6001414")]
			set;
		}

		[Token(Token = "0x170001EF")]
		public abstract IMeshAnimation[] animations
		{
			[Token(Token = "0x6001415")]
			get;
		}

		[Token(Token = "0x170001F0")]
		public Action<string> OnAnimationFinished
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x104BB3C", Offset = "0x104BB3C", VA = "0x104BB3C", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001417")]
			[Address(RVA = "0x104BB44", Offset = "0x104BB44", VA = "0x104BB44", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public Action OnFrameUpdated
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x104BB4C", Offset = "0x104BB4C", VA = "0x104BB4C", Slot = "10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001419")]
			[Address(RVA = "0x104BB54", Offset = "0x104BB54", VA = "0x104BB54", Slot = "11")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public Action<bool> OnVisibilityChanged
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0x104BB5C", Offset = "0x104BB5C", VA = "0x104BB5C", Slot = "12")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600141B")]
			[Address(RVA = "0x104BB64", Offset = "0x104BB64", VA = "0x104BB64", Slot = "13")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x104BB6C", Offset = "0x104BB6C", VA = "0x104BB6C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0x104BB74", Offset = "0x104BB74", VA = "0x104BB74", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		public IMeshAnimation[] Animations
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x104A9CC", Offset = "0x104A9CC", VA = "0x104A9CC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public float NextTick
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x104BB7C", Offset = "0x104BB7C", VA = "0x104BB7C", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x104BB84", Offset = "0x104BB84", VA = "0x104BB84", Slot = "25")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x104C100", Offset = "0x104C100", VA = "0x104C100")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x104C128", Offset = "0x104C128", VA = "0x104C128")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x104C14C", Offset = "0x104C14C", VA = "0x104C14C", Slot = "26")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x104C46C", Offset = "0x104C46C", VA = "0x104C46C", Slot = "27")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x104C5E0", Offset = "0x104C5E0", VA = "0x104C5E0", Slot = "28")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x104C5F4", Offset = "0x104C5F4", VA = "0x104C5F4", Slot = "29")]
		protected virtual void AddMeshCount(Dictionary<Mesh, int> counter)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x104C728", Offset = "0x104C728", VA = "0x104C728", Slot = "30")]
		protected virtual void RemoveMeshCount(Dictionary<Mesh, int> counter)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x104C904", Offset = "0x104C904", VA = "0x104C904")]
		private void FireAnimationEvents(IMeshAnimation meshAnimation, float totalSpeed, bool finished)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x104CCAC", Offset = "0x104CCAC", VA = "0x104CCAC")]
		private Matrix4x4 MatrixLerp(Matrix4x4 from, Matrix4x4 to, float time)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x104CD64", Offset = "0x104CD64", VA = "0x104CD64", Slot = "31")]
		protected virtual bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x104D1B8", Offset = "0x104D1B8", VA = "0x104D1B8", Slot = "32")]
		protected virtual void OnAnimationCompleted(bool stopUpdate)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x104D1BC", Offset = "0x104D1BC", VA = "0x104D1BC", Slot = "33")]
		protected virtual bool StartCrossfade(int index, float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x104D3D4", Offset = "0x104D3D4", VA = "0x104D3D4", Slot = "34")]
		protected virtual void ReturnCrossfadeToPool(bool destroying)
		{
		}

		[Token(Token = "0x600142E")]
		protected abstract void OnCurrentAnimationChanged(IMeshAnimation meshAnimation);

		[Token(Token = "0x600142F")]
		public abstract void SetAnimations(IMeshAnimation[] meshAnimations);

		[Token(Token = "0x6001430")]
		public abstract void StoreAdditionalMeshData(Mesh mesh);

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x104D3E0", Offset = "0x104D3E0", VA = "0x104D3E0", Slot = "14")]
		public void UpdateTick(float time)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x104DEFC", Offset = "0x104DEFC", VA = "0x104DEFC", Slot = "38")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x104AB28", Offset = "0x104AB28", VA = "0x104AB28", Slot = "16")]
		public void Play(string animationName, float normalizedTime = -1f)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x1048F70", Offset = "0x1048F70", VA = "0x1048F70", Slot = "17")]
		public void Play(int index)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x104DF20", Offset = "0x104DF20", VA = "0x104DF20")]
		public void PlayRandom(params string[] animationNames)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x104E08C", Offset = "0x104E08C", VA = "0x104E08C")]
		public void PlayQueued(string animationName)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x104E13C", Offset = "0x104E13C", VA = "0x104E13C", Slot = "39")]
		public virtual void Pause()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x104E148", Offset = "0x104E148", VA = "0x104E148", Slot = "40")]
		public virtual void RestartAnim()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x104E174", Offset = "0x104E174", VA = "0x104E174")]
		public void Crossfade(int index)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x104E18C", Offset = "0x104E18C", VA = "0x104E18C")]
		public void Crossfade(string animationName)
		{
		}

		[Token(Token = "0x600143B")]
		public abstract void Crossfade(int index, float speed);

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x104E198", Offset = "0x104E198", VA = "0x104E198")]
		public void Crossfade(string animationName, float speed)
		{
		}

		[Token(Token = "0x600143D")]
		public abstract void PrepopulateCrossfadePool(int count);

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x104E2FC", Offset = "0x104E2FC", VA = "0x104E2FC", Slot = "43")]
		public virtual void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x104E3E0", Offset = "0x104E3E0", VA = "0x104E3E0", Slot = "44")]
		public virtual void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x104E4C8", Offset = "0x104E4C8", VA = "0x104E4C8", Slot = "18")]
		public IMeshAnimation GetClip(string animationName)
		{
			return null;
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x104E634", Offset = "0x104E634", VA = "0x104E634")]
		public void DisplayFrame(int frame, MeshRenderer meshRenderer)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x104E674", Offset = "0x104E674", VA = "0x104E674", Slot = "21")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x104E684", Offset = "0x104E684", VA = "0x104E684")]
		protected MeshAnimatorBase()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class MeshAnimatorManager : MonoBehaviour
	{
		[Token(Token = "0x2000382")]
		[CompilerGenerated]
		private sealed class <UnscaledUpdate>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshAnimatorManager <>4__this;

			[Token(Token = "0x170001F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001453")]
				[Address(RVA = "0x104F270", Offset = "0x104F270", VA = "0x104F270", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001455")]
				[Address(RVA = "0x104F2B8", Offset = "0x104F2B8", VA = "0x104F2B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001450")]
			[Address(RVA = "0x104EB84", Offset = "0x104EB84", VA = "0x104EB84")]
			[DebuggerHidden]
			public <UnscaledUpdate>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001451")]
			[Address(RVA = "0x104F1B0", Offset = "0x104F1B0", VA = "0x104F1B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001452")]
			[Address(RVA = "0x104F1B4", Offset = "0x104F1B4", VA = "0x104F1B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001454")]
			[Address(RVA = "0x104F278", Offset = "0x104F278", VA = "0x104F278", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimatorUpdateMode _mode;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MeshAnimatorManager _instance;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<IMeshAnimator> _animators;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<IMeshAnimator> _addAnimators;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<IMeshAnimator> _removeAnimators;

		[Token(Token = "0x170001F7")]
		public static int AnimatorCount
		{
			[Token(Token = "0x6001444")]
			[Address(RVA = "0x104E714", Offset = "0x104E714", VA = "0x104E714")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F8")]
		public static MeshAnimatorManager Instance
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0x104E7DC", Offset = "0x104E7DC", VA = "0x104E7DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x104C338", Offset = "0x104C338", VA = "0x104C338")]
		public static void AddAnimator(IMeshAnimator animator)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x104C508", Offset = "0x104C508", VA = "0x104C508")]
		public static void RemoveAnimator(IMeshAnimator animator)
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x104E994", Offset = "0x104E994", VA = "0x104E994")]
		public static void SetUpdateMode(AnimatorUpdateMode updateMode)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x104EB00", Offset = "0x104EB00", VA = "0x104EB00")]
		private void Awake()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x104EA8C", Offset = "0x104EA8C", VA = "0x104EA8C")]
		[IteratorStateMachine(typeof(<UnscaledUpdate>d__13))]
		private IEnumerator UnscaledUpdate()
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x104EBAC", Offset = "0x104EBAC", VA = "0x104EBAC")]
		private void Update()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x104F020", Offset = "0x104F020", VA = "0x104F020")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x104EC1C", Offset = "0x104EC1C", VA = "0x104EC1C")]
		private void UpdateTick(float time)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x104F094", Offset = "0x104F094", VA = "0x104F094")]
		public MeshAnimatorManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000383")]
	public class MeshFrameDataBase
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Matrix4x4[] exposedTransforms;

		[NonSerialized]
		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rootMotionPosition;

		[NonSerialized]
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion rootMotionRotation;

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x104F2C0", Offset = "0x104F2C0", VA = "0x104F2C0")]
		public MeshFrameDataBase()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public enum MeshNormalMode
	{
		[Token(Token = "0x40013CE")]
		Baked,
		[Token(Token = "0x40013CF")]
		UseOriginal,
		[Token(Token = "0x40013D0")]
		Recalculated
	}
	[Token(Token = "0x2000385")]
	public enum RootMotionMode
	{
		[Token(Token = "0x40013D2")]
		None,
		[Token(Token = "0x40013D3")]
		Baked,
		[Token(Token = "0x40013D4")]
		AppliedToTransform
	}
	[Token(Token = "0x2000386")]
	public static class AllocatedArray<T>
	{
		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T defaultValue;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<T[]> allocatedArrays;

		[Token(Token = "0x6001457")]
		private static T[] AllocateArray(int size)
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		public static T[] Get(int size)
		{
			return null;
		}

		[Token(Token = "0x6001459")]
		public static void Return(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x2000387")]
	public static class AllocatedArray
	{
		[Token(Token = "0x600145B")]
		public static T[] Get<T>(int size)
		{
			return null;
		}

		[Token(Token = "0x600145C")]
		public static void Return<T>(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x2000388")]
	public static class Comparers
	{
		[Serializable]
		[Token(Token = "0x2000389")]
		public class StringComparer : IEqualityComparer<string>
		{
			[Token(Token = "0x600145F")]
			[Address(RVA = "0x104F474", Offset = "0x104F474", VA = "0x104F474", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.String>.Equals(string x, string y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001460")]
			[Address(RVA = "0x104F484", Offset = "0x104F484", VA = "0x104F484", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(string obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001461")]
			[Address(RVA = "0x104F44C", Offset = "0x104F44C", VA = "0x104F44C")]
			public StringComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200038A")]
		public class FloatComparer : IEqualityComparer<float>
		{
			[Token(Token = "0x6001462")]
			[Address(RVA = "0x104F4A4", Offset = "0x104F4A4", VA = "0x104F4A4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001463")]
			[Address(RVA = "0x104F4B0", Offset = "0x104F4B0", VA = "0x104F4B0", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001464")]
			[Address(RVA = "0x104F454", Offset = "0x104F454", VA = "0x104F454")]
			public FloatComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200038B")]
		public class IntComparer : IEqualityComparer<int>
		{
			[Token(Token = "0x6001465")]
			[Address(RVA = "0x104F4CC", Offset = "0x104F4CC", VA = "0x104F4CC", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Int32>.Equals(int x, int y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001466")]
			[Address(RVA = "0x104F4D8", Offset = "0x104F4D8", VA = "0x104F4D8", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Int32>.GetHashCode(int obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001467")]
			[Address(RVA = "0x104F45C", Offset = "0x104F45C", VA = "0x104F45C")]
			public IntComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200038C")]
		public class ByteComparer : IEqualityComparer<byte>
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0x104F4F4", Offset = "0x104F4F4", VA = "0x104F4F4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Byte>.Equals(byte x, byte y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001469")]
			[Address(RVA = "0x104F504", Offset = "0x104F504", VA = "0x104F504", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Byte>.GetHashCode(byte obj)
			{
				return default(int);
			}

			[Token(Token = "0x600146A")]
			[Address(RVA = "0x104F464", Offset = "0x104F464", VA = "0x104F464")]
			public ByteComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200038D")]
		public class BoolComparer : IEqualityComparer<bool>
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0x104F520", Offset = "0x104F520", VA = "0x104F520", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Boolean>.Equals(bool x, bool y)
			{
				return default(bool);
			}

			[Token(Token = "0x600146C")]
			[Address(RVA = "0x104F52C", Offset = "0x104F52C", VA = "0x104F52C", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Boolean>.GetHashCode(bool obj)
			{
				return default(int);
			}

			[Token(Token = "0x600146D")]
			[Address(RVA = "0x104F46C", Offset = "0x104F46C", VA = "0x104F46C")]
			public BoolComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200038E")]
		private class FuncEqualityComparer<T> : EqualityComparer<T>
		{
			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, T, bool> equals;

			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, int> hash;

			[Token(Token = "0x600146E")]
			public FuncEqualityComparer(Func<T, T, bool> equals, Func<T, int> hash)
			{
			}

			[Token(Token = "0x600146F")]
			public override bool Equals(T a, T b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001470")]
			public override int GetHashCode(T obj)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringComparer String;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly FloatComparer Float;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IntComparer Int;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteComparer Byte;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BoolComparer Bool;

		[Token(Token = "0x600145D")]
		public static IEqualityComparer<T> Create<T>(Func<T, T, bool> equals, [Optional] Func<T, int> hash)
		{
			return null;
		}
	}
	[Token(Token = "0x2000390")]
	public static class GenericObjectPool<T>
	{
		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<T> pool;

		[Token(Token = "0x170001FB")]
		public static int Count
		{
			[Token(Token = "0x6001474")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001475")]
		public static void InitPool(int count)
		{
		}

		[Token(Token = "0x6001476")]
		public static T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x6001477")]
		public static void Return(T obj)
		{
		}
	}
	[Token(Token = "0x2000391")]
	public static class MatrixUtils
	{
		[Token(Token = "0x6001479")]
		[Address(RVA = "0x104D118", Offset = "0x104D118", VA = "0x104D118")]
		public static void FromMatrix4x4(Transform transform, Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x104F558", Offset = "0x104F558", VA = "0x104F558")]
		public static Quaternion GetRotation(Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x104F54C", Offset = "0x104F54C", VA = "0x104F54C")]
		public static Vector3 GetPosition(Matrix4x4 matrix)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x104F67C", Offset = "0x104F67C", VA = "0x104F67C")]
		public static Vector3 GetScale(Matrix4x4 m)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000392")]
	public class PooledDictionary<T, T2> : Dictionary<T, T2>
	{
		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<PooledDictionary<T, T2>> stack;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint checkedOut;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint returned;

		[Token(Token = "0x170001FC")]
		public bool recycleable
		{
			[Token(Token = "0x600147D")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600147E")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600147F")]
		public static void Init(int initialPoolSize = 10)
		{
		}

		[Token(Token = "0x6001480")]
		public static PooledDictionary<T, T2> Get(int capacity, [Optional] IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x6001481")]
		public static PooledDictionary<T, T2> Get()
		{
			return null;
		}

		[Token(Token = "0x6001482")]
		public static PooledDictionary<T, T2> Get(IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x6001483")]
		public PooledDictionary()
		{
		}

		[Token(Token = "0x6001484")]
		public PooledDictionary(int capacity)
		{
		}

		[Token(Token = "0x6001485")]
		public PooledDictionary(int capacity, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x6001486")]
		public void ReturnToPool(bool force = false)
		{
		}
	}
}
namespace FSG.MeshAnimator.Snapshot
{
	[Serializable]
	[Token(Token = "0x2000393")]
	public class SnapshotMeshAnimation : MeshAnimationBase
	{
		[Token(Token = "0x2000394")]
		private sealed class VertexEntry
		{
			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _reserved;

			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] TriangleIndex;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] VertexIndex;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _count;

			[Token(Token = "0x17000200")]
			public int Count
			{
				[Token(Token = "0x600149B")]
				[Address(RVA = "0x10523FC", Offset = "0x10523FC", VA = "0x10523FC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600149C")]
			[Address(RVA = "0x1052404", Offset = "0x1052404", VA = "0x1052404")]
			public VertexEntry()
			{
			}

			[Token(Token = "0x600149D")]
			[Address(RVA = "0x1052028", Offset = "0x1052028", VA = "0x1052028")]
			public void Add(int vertIndex, int triIndex)
			{
			}

			[Token(Token = "0x600149E")]
			[Address(RVA = "0x1051F8C", Offset = "0x1051F8C", VA = "0x1051F8C")]
			public void PopulateArrays()
			{
			}

			[Token(Token = "0x600149F")]
			[Address(RVA = "0x1052100", Offset = "0x1052100", VA = "0x1052100")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<Mesh, Dictionary<SnapshotMeshAnimation, Mesh[]>> GeneratedFrames;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Header("Preload all animation frames")]
		public bool preGenerateFrames;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshNormalMode meshNormalMode;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Header("Only valid for Recalculated mode")]
		public bool recalculateNormalsOnRotation;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public DeltaCompressedFrameData compressedFrameData;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] frames;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int totalFrames;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool[] generatedMeshes;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool completelyGenerated;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SnapshotMeshFrameData[] decompressedFrameData;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion lastRotation;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Queue<Action> mainThreadActions;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<Mesh, KeyValuePair<int[], Vector3[]>> meshInfoCache;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static IEqualityComparer<Vector3> VectorComparer;

		[Token(Token = "0x170001FD")]
		public override MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x104F810", Offset = "0x104F810", VA = "0x104F810", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public override int TotalFrames
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x104F8DC", Offset = "0x104F8DC", VA = "0x104F8DC", Slot = "24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001FF")]
		private SnapshotMeshFrameData[] frameData
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x104F814", Offset = "0x104F814", VA = "0x104F814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x104FE34", Offset = "0x104FE34", VA = "0x104FE34")]
		private void Awake()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x104FE40", Offset = "0x104FE40", VA = "0x104FE40", Slot = "25")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x104FF04", Offset = "0x104FF04", VA = "0x104FF04", Slot = "27")]
		public override void SetFrameData(int frame, MeshFrameDataBase frameData)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x1050074", Offset = "0x1050074", VA = "0x1050074", Slot = "28")]
		public override void SetFrameData(MeshFrameDataBase[] frameData)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x10500D8", Offset = "0x10500D8", VA = "0x10500D8", Slot = "29")]
		public override void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x105029C", Offset = "0x105029C", VA = "0x105029C", Slot = "31")]
		public override void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x105049C", Offset = "0x105049C", VA = "0x105049C", Slot = "30")]
		public override void GenerateFrame(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x1050D88", Offset = "0x1050D88", VA = "0x1050D88")]
		public Vector3[] GetFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x105107C", Offset = "0x105107C", VA = "0x105107C", Slot = "32")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x10501A0", Offset = "0x10501A0", VA = "0x10501A0")]
		private void DisplayFrame(MeshFilter meshFilter, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x1050748", Offset = "0x1050748", VA = "0x1050748")]
		private void CheckFullGeneration(int newFrame)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x10507B8", Offset = "0x10507B8", VA = "0x10507B8")]
		private Mesh GenerateFrameInternal(Mesh baseMesh, int frame)
		{
			return null;
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x10511AC", Offset = "0x10511AC", VA = "0x10511AC")]
		private void RecalculateNormals(Mesh mesh)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x10511D8", Offset = "0x10511D8", VA = "0x10511D8")]
		private void RecalculateNormals(Mesh mesh, float angle, int[] triangles, Vector3[] vertices, bool instant = false)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x10521B4", Offset = "0x10521B4", VA = "0x10521B4")]
		public SnapshotMeshAnimation()
		{
		}
	}
	[Token(Token = "0x2000397")]
	[AddComponentMenu("Miscellaneous/Mesh Animator")]
	[RequireComponent(typeof(MeshFilter))]
	public class SnapshotMeshAnimator : MeshAnimatorBase
	{
		[Token(Token = "0x2000398")]
		private struct LerpVector3Job : IJobParallelFor
		{
			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Vector3> from;

			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<Vector3> to;

			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public float delta;

			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NativeArray<Vector3> output;

			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x1054554", Offset = "0x1054554", VA = "0x1054554", Slot = "4")]
			public void Execute(int i)
			{
			}
		}

		[Token(Token = "0x2000399")]
		private struct CalculateBoundsJob : IJob
		{
			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Vector3> positions;

			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds bounds;

			[Token(Token = "0x60014B6")]
			[Address(RVA = "0x10545C0", Offset = "0x10545C0", VA = "0x10545C0", Slot = "4")]
			public void Execute()
			{
			}
		}

		[Token(Token = "0x200039A")]
		private struct CrossfadeJobData
		{
			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int framesNeeded;

			[Token(Token = "0x4001410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int currentFrame;

			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isFading;

			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float endTime;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SnapshotMeshFrameData fromFrame;

			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SnapshotMeshFrameData toFrame;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpVector3Job[] positionJobs;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CalculateBoundsJob[] boundsJobs;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public JobHandle[] positionJobHandles;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public JobHandle[] boundsJobHandles;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public NativeArray<Vector3> from;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public NativeArray<Vector3> to;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public NativeArray<Vector3>[] output;

			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bool isReset;

			[Token(Token = "0x60014B7")]
			[Address(RVA = "0x10533A8", Offset = "0x10533A8", VA = "0x10533A8")]
			public void Reset(bool destroying)
			{
			}

			[Token(Token = "0x60014B8")]
			[Address(RVA = "0x1053874", Offset = "0x1053874", VA = "0x1053874")]
			public void StartCrossfade(SnapshotMeshFrameData fromFrame, SnapshotMeshFrameData toFrame)
			{
			}

			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x1054704", Offset = "0x1054704", VA = "0x1054704")]
			public void ReturnFrame(bool destroying)
			{
			}
		}

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Mesh, int> _meshCount;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Stack<Mesh>> _crossFadePool;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<Mesh, int> _crossFadeIndex;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public SnapshotMeshAnimation defaultMeshAnimation;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public SnapshotMeshAnimation[] meshAnimations;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool syncCrossfadeMeshCount;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		public bool recalculateCrossfadeNormals;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private MeshTriangleData[] meshTriangleData;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv1Data;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv2Data;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv3Data;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv4Data;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Mesh crossfadeMesh;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private CrossfadeJobData currentCrossFade;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private int crossFadePoolIndex;

		[Token(Token = "0x17000201")]
		public override IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0x10525DC", Offset = "0x10525DC", VA = "0x10525DC", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x10525E4", Offset = "0x10525E4", VA = "0x10525E4", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public override IMeshAnimation[] animations
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0x10526A4", Offset = "0x10526A4", VA = "0x10526A4", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x10526AC", Offset = "0x10526AC", VA = "0x10526AC", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1052720", Offset = "0x1052720", VA = "0x1052720", Slot = "28")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x1052DA8", Offset = "0x1052DA8", VA = "0x1052DA8")]
		private Mesh GetCrossfadeFromPool()
		{
			return null;
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x1052FBC", Offset = "0x1052FBC", VA = "0x1052FBC", Slot = "34")]
		protected override void ReturnCrossfadeToPool(bool destroying)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x10533FC", Offset = "0x10533FC", VA = "0x10533FC", Slot = "31")]
		protected override bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x10536B0", Offset = "0x10536B0", VA = "0x10536B0", Slot = "41")]
		public override void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x1053E18", Offset = "0x1053E18", VA = "0x1053E18", Slot = "42")]
		public override void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x105413C", Offset = "0x105413C", VA = "0x105413C", Slot = "35")]
		protected override void OnCurrentAnimationChanged(IMeshAnimation meshAnimation)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x1054140", Offset = "0x1054140", VA = "0x1054140", Slot = "36")]
		public override void SetAnimations(IMeshAnimation[] meshAnimations)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x1054328", Offset = "0x1054328", VA = "0x1054328", Slot = "37")]
		public override void StoreAdditionalMeshData(Mesh mesh)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x1054424", Offset = "0x1054424", VA = "0x1054424")]
		public SnapshotMeshAnimator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039B")]
	public class SnapshotMeshFrameData : MeshFrameDataBase
	{
		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] normals;

		[NonSerialized]
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] decompressed;

		[Token(Token = "0x17000203")]
		public Vector3[] verts
		{
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0x1054AD4", Offset = "0x1054AD4", VA = "0x1054AD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x1054ADC", Offset = "0x1054ADC", VA = "0x1054ADC")]
		public void SetVerts(Vector3[] v)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x1054AE4", Offset = "0x1054AE4", VA = "0x1054AE4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x1054C08", Offset = "0x1054C08", VA = "0x1054C08", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x105006C", Offset = "0x105006C", VA = "0x105006C")]
		public SnapshotMeshFrameData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039C")]
	public class MeshTriangleData
	{
		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int submesh;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x1054C10", Offset = "0x1054C10", VA = "0x1054C10")]
		public MeshTriangleData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039D")]
	public class DeltaCompressedFrameData
	{
		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float compressionAccuracy;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float accuracy;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sizeOffset;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int vertLength;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int exposedLength;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public short[] positionsUShort;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int[] positions;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int[] frameIndexes;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Matrix4x4[] exposedTransforms;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] rootMotionPositions;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Quaternion[] rootMotionRotations;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3[] normals;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector3[] rawPositions;

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x104F8E4", Offset = "0x104F8E4", VA = "0x104F8E4")]
		public static implicit operator SnapshotMeshFrameData[](DeltaCompressedFrameData s)
		{
			return null;
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x1054C18", Offset = "0x1054C18", VA = "0x1054C18")]
		public static implicit operator DeltaCompressedFrameData(SnapshotMeshFrameData[] frames)
		{
			return null;
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x105569C", Offset = "0x105569C", VA = "0x105569C")]
		public DeltaCompressedFrameData()
		{
		}
	}
}
namespace FSG.MeshAnimator.ShaderAnimated
{
	[Serializable]
	[Token(Token = "0x200039E")]
	public class ShaderMeshAnimation : MeshAnimationBase
	{
		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public MeshFrameDataBase[] frameData;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Texture2D[] textures;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 animScalar;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public Vector2Int textureSize;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public int textureCount;

		[Token(Token = "0x17000204")]
		public override MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x10556FC", Offset = "0x10556FC", VA = "0x10556FC", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		public override int TotalFrames
		{
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x1055704", Offset = "0x1055704", VA = "0x1055704", Slot = "24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x1055720", Offset = "0x1055720", VA = "0x1055720", Slot = "26")]
		public override MeshFrameDataBase GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x1055760", Offset = "0x1055760", VA = "0x1055760", Slot = "29")]
		public override void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x1055764", Offset = "0x1055764", VA = "0x1055764", Slot = "30")]
		public override void GenerateFrame(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x1055768", Offset = "0x1055768", VA = "0x1055768", Slot = "31")]
		public override void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x105576C", Offset = "0x105576C", VA = "0x105576C", Slot = "32")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1055770", Offset = "0x1055770", VA = "0x1055770", Slot = "27")]
		public override void SetFrameData(int frame, MeshFrameDataBase frameData)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x10557D8", Offset = "0x10557D8", VA = "0x10557D8", Slot = "28")]
		public override void SetFrameData(MeshFrameDataBase[] frameData)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x10557E0", Offset = "0x10557E0", VA = "0x10557E0")]
		public ShaderMeshAnimation()
		{
		}
	}
	[Token(Token = "0x200039F")]
	[AddComponentMenu("Mesh Animator/GPU Shader Animated")]
	[RequireComponent(typeof(MeshFilter))]
	[ExecuteInEditMode]
	public class ShaderMeshAnimator : MeshAnimatorBase
	{
		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _animTimeProp;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int _animInfoProp;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int _animScalarProp;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int _animTexturesProp;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int _animTextureIndexProp;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int _crossfadeAnimInfoProp;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int _crossfadeAnimScalarProp;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int _crossfadeAnimTextureIndexProp;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int _crossfadeStartTimeProp;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int _crossfadeEndTimeProp;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Mesh, int> _meshCount;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<Material> _materialCacheLookup;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static HashSet<Material> _setMaterials;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Dictionary<Mesh, Texture2DArray> _animTextures;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int pixelsPerTexture;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int textureStartIndex;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int textureSizeX;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int textureSizeY;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector4 propertyBlockData;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector4 timeBlockData;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public ShaderMeshAnimation defaultMeshAnimation;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public ShaderMeshAnimation[] meshAnimations;

		[Token(Token = "0x17000206")]
		private static Vector4 _shaderTime
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x1055850", Offset = "0x1055850", VA = "0x1055850")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x17000207")]
		public override IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x1055894", Offset = "0x1055894", VA = "0x1055894", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x105589C", Offset = "0x105589C", VA = "0x105589C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public override IMeshAnimation[] animations
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0x105595C", Offset = "0x105595C", VA = "0x105595C", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x1055964", Offset = "0x1055964", VA = "0x1055964", Slot = "26")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x105606C", Offset = "0x105606C", VA = "0x105606C", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x1056084", Offset = "0x1056084", VA = "0x1056084", Slot = "27")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x1056088", Offset = "0x1056088", VA = "0x1056088", Slot = "28")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x1056268", Offset = "0x1056268", VA = "0x1056268")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x105638C", Offset = "0x105638C", VA = "0x105638C", Slot = "31")]
		protected override bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x1056494", Offset = "0x1056494", VA = "0x1056494", Slot = "32")]
		protected override void OnAnimationCompleted(bool stopUpdate)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x10564AC", Offset = "0x10564AC", VA = "0x10564AC", Slot = "35")]
		protected override void OnCurrentAnimationChanged(IMeshAnimation meshAnimation)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x105682C", Offset = "0x105682C", VA = "0x105682C", Slot = "38")]
		public override void Play()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x1056854", Offset = "0x1056854", VA = "0x1056854", Slot = "39")]
		public override void Pause()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1056A40", Offset = "0x1056A40", VA = "0x1056A40", Slot = "40")]
		public override void RestartAnim()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1056A80", Offset = "0x1056A80", VA = "0x1056A80", Slot = "41")]
		public override void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1056DBC", Offset = "0x1056DBC", VA = "0x1056DBC", Slot = "42")]
		public override void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1056DC0", Offset = "0x1056DC0", VA = "0x1056DC0", Slot = "43")]
		public override void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1056DDC", Offset = "0x1056DDC", VA = "0x1056DDC", Slot = "44")]
		public override void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1056DF8", Offset = "0x1056DF8", VA = "0x1056DF8", Slot = "36")]
		public override void SetAnimations(IMeshAnimation[] meshAnimations)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x1056FE0", Offset = "0x1056FE0", VA = "0x1056FE0", Slot = "37")]
		public override void StoreAdditionalMeshData(Mesh mesh)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x1056284", Offset = "0x1056284", VA = "0x1056284")]
		private void RefreshTimeData()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x10559E0", Offset = "0x10559E0", VA = "0x10559E0")]
		private void SetupTextureData()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x105671C", Offset = "0x105671C", VA = "0x105671C")]
		private void CreatePropertyBlock()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1056FE4", Offset = "0x1056FE4", VA = "0x1056FE4")]
		private int CacheKey()
		{
			return default(int);
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x1057138", Offset = "0x1057138", VA = "0x1057138")]
		public ShaderMeshAnimator()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x20003A0")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x400144B")]
		NONE = 0u,
		[Token(Token = "0x400144C")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x400144D")]
		STAGE = 2u,
		[Token(Token = "0x400144E")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x400144F")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x20003A1")]
	[HelpURL("https://liv.tv/sdk-unity-docs")]
	[AddComponentMenu("LIV/LIV")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x20003A2")]
		[CompilerGenerated]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x17000218")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001513")]
				[Address(RVA = "0x1058AF8", Offset = "0x1058AF8", VA = "0x1058AF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000219")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001515")]
				[Address(RVA = "0x1058B40", Offset = "0x1058B40", VA = "0x1058B40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001510")]
			[Address(RVA = "0x1057F50", Offset = "0x1057F50", VA = "0x1057F50")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001511")]
			[Address(RVA = "0x105894C", Offset = "0x105894C", VA = "0x105894C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001512")]
			[Address(RVA = "0x1058950", Offset = "0x1058950", VA = "0x1058950", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001514")]
			[Address(RVA = "0x1058B00", Offset = "0x1058B00", VA = "0x1058B00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("This is the topmost transform of your VR rig.")]
		[FormerlySerializedAs("TrackedSpaceOrigin")]
		[SerializeField]
		private Transform _stage;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[FormerlySerializedAs("StageTransform")]
		[SerializeField]
		[Tooltip("This transform is an additional wrapper to the user’s playspace.")]
		private Transform _stageTransform;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("This is the camera responsible for rendering the user’s HMD.")]
		[FormerlySerializedAs("HMDCamera")]
		[SerializeField]
		private Camera _HMDCamera;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Camera prefab for customized rendering.")]
		[FormerlySerializedAs("MRCameraPrefab")]
		[SerializeField]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("This option disables all standard Unity assets for the Mixed Reality rendering.")]
		[FormerlySerializedAs("DisableStandardAssets")]
		[SerializeField]
		private bool _disableStandardAssets;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Tooltip("The layer mask defines exactly which object layers should be rendered in MR.")]
		[FormerlySerializedAs("SpectatorLayerMask")]
		[SerializeField]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("This is for removing unwanted scripts from the cloned MR camera.")]
		[FormerlySerializedAs("ExcludeBehaviours")]
		[SerializeField]
		private string[] _excludeBehaviours;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[Tooltip("Recovers corrupted alpha channel when using post-effects.")]
		[FormerlySerializedAs("FixPostEffectsAlpha")]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x17000209")]
		public Transform stage
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x10574A8", Offset = "0x10574A8", VA = "0x10574A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x1057538", Offset = "0x1057538", VA = "0x1057538")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		[Obsolete("Use stage instead")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x105763C", Offset = "0x105763C", VA = "0x105763C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x1057640", Offset = "0x1057640", VA = "0x1057640")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x1057644", Offset = "0x1057644", VA = "0x1057644")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700020C")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x105773C", Offset = "0x105773C", VA = "0x105773C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700020D")]
		public Transform stageTransform
		{
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x1057834", Offset = "0x1057834", VA = "0x1057834")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0x105783C", Offset = "0x105783C", VA = "0x105783C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public Camera HMDCamera
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x1057844", Offset = "0x1057844", VA = "0x1057844")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x105784C", Offset = "0x105784C", VA = "0x105784C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x1057950", Offset = "0x1057950", VA = "0x1057950")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x1057958", Offset = "0x1057958", VA = "0x1057958")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0x10579F4", Offset = "0x10579F4", VA = "0x10579F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0x10579FC", Offset = "0x10579FC", VA = "0x10579FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x1057A08", Offset = "0x1057A08", VA = "0x1057A08")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x1057A10", Offset = "0x1057A10", VA = "0x1057A10")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x1057A18", Offset = "0x1057A18", VA = "0x1057A18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x1057A20", Offset = "0x1057A20", VA = "0x1057A20")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x1057A60", Offset = "0x1057A60", VA = "0x1057A60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x1057A68", Offset = "0x1057A68", VA = "0x1057A68")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public bool isValid
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x1057A74", Offset = "0x1057A74", VA = "0x1057A74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000215")]
		public bool isActive
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x1057BD4", Offset = "0x1057BD4", VA = "0x1057BD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000216")]
		private bool _isReady
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x1057BDC", Offset = "0x1057BDC", VA = "0x1057BDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000217")]
		public SDKRender render
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0x1057CE8", Offset = "0x1057CE8", VA = "0x1057CE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x1057CF0", Offset = "0x1057CF0", VA = "0x1057CF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x1057D40", Offset = "0x1057D40", VA = "0x1057D40")]
		private void Update()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x1057ED4", Offset = "0x1057ED4", VA = "0x1057ED4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x1057EDC", Offset = "0x1057EDC", VA = "0x1057EDC")]
		[IteratorStateMachine(typeof(<WaitForUnityEndOfFrame>d__68))]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x1057CFC", Offset = "0x1057CFC", VA = "0x1057CFC")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1057F78", Offset = "0x1057F78", VA = "0x1057F78")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x1057F84", Offset = "0x1057F84", VA = "0x1057F84")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x1058030", Offset = "0x1058030", VA = "0x1058030")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x10582B4", Offset = "0x10582B4", VA = "0x10582B4")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x10583A0", Offset = "0x10583A0", VA = "0x10583A0")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x1058324", Offset = "0x1058324", VA = "0x1058324")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x105835C", Offset = "0x105835C", VA = "0x105835C")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x10580CC", Offset = "0x10580CC", VA = "0x10580CC")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x1057D58", Offset = "0x1057D58", VA = "0x1057D58")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x10586F4", Offset = "0x10586F4", VA = "0x10586F4")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public static class SDKBridge
	{
		[Token(Token = "0x20003A4")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x1700021A")]
		public static bool IsActive
		{
			[Token(Token = "0x6001528")]
			[Address(RVA = "0x1057C50", Offset = "0x1057C50", VA = "0x1057C50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1058B48", Offset = "0x1058B48", VA = "0x1058B48")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1058B50", Offset = "0x1058B50", VA = "0x1058B50")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x1058B58", Offset = "0x1058B58", VA = "0x1058B58")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x1058B60", Offset = "0x1058B60", VA = "0x1058B60")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x1058B68", Offset = "0x1058B68", VA = "0x1058B68")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1058B70", Offset = "0x1058B70", VA = "0x1058B70")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x1058BB8", Offset = "0x1058BB8", VA = "0x1058BB8")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x1058C00", Offset = "0x1058C00", VA = "0x1058C00")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1058C08", Offset = "0x1058C08", VA = "0x1058C08")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x1058C10", Offset = "0x1058C10", VA = "0x1058C10")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x1058C58", Offset = "0x1058C58", VA = "0x1058C58")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x1058CA0", Offset = "0x1058CA0", VA = "0x1058CA0")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1058CE8", Offset = "0x1058CE8", VA = "0x1058CE8")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x1058CF0", Offset = "0x1058CF0", VA = "0x1058CF0")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1058D74", Offset = "0x1058D74", VA = "0x1058D74")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1058E70", Offset = "0x1058E70", VA = "0x1058E70")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1058F30", Offset = "0x1058F30", VA = "0x1058F30")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1058F8C", Offset = "0x1058F8C", VA = "0x1058F8C")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1058FE8", Offset = "0x1058FE8", VA = "0x1058FE8")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1058504", Offset = "0x1058504", VA = "0x1058504")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x600152B")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600152C")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600152D")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600152E")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600152F")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1059098", Offset = "0x1059098", VA = "0x1059098")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x105936C", Offset = "0x105936C", VA = "0x105936C")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1059534", Offset = "0x1059534", VA = "0x1059534")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1059664", Offset = "0x1059664", VA = "0x1059664")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x10597CC", Offset = "0x10597CC", VA = "0x10597CC")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x105986C", Offset = "0x105986C", VA = "0x105986C")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A5")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CommandBuffer _clipPlaneCommandBuffer;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _combineAlphaCommandBuffer;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer _captureTextureCommandBuffer;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer _applyTextureCommandBuffer;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer _optimizedRenderingCommandBuffer;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraEvent _clipPlaneCameraEvent;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraEvent _clipPlaneCombineAlphaCameraEvent;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraEvent _captureTextureEvent;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraEvent _applyTextureEvent;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraEvent _optimizedRenderingCameraEvent;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _writeMaterial;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LIV _liv;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKResolution _resolution;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Camera _cameraInstance;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x1700021B")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0x1059CE0", Offset = "0x1059CE0", VA = "0x1059CE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021C")]
		private bool interlacedRendering
		{
			[Token(Token = "0x600153A")]
			[Address(RVA = "0x1059D2C", Offset = "0x1059D2C", VA = "0x1059D2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021D")]
		private bool canRenderBackground
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0x1059D3C", Offset = "0x1059D3C", VA = "0x1059D3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021E")]
		private bool canRenderForeground
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0x1059DE0", Offset = "0x1059DE0", VA = "0x1059DE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021F")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x600153D")]
			[Address(RVA = "0x1059E98", Offset = "0x1059E98", VA = "0x1059E98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000220")]
		public LIV liv
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x105C3EC", Offset = "0x105C3EC", VA = "0x105C3EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0x105C3F4", Offset = "0x105C3F4", VA = "0x105C3F4")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x17000222")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x105C404", Offset = "0x105C404", VA = "0x105C404")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x17000223")]
		public SDKResolution resolution
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0x105C414", Offset = "0x105C414", VA = "0x105C414")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x17000224")]
		public Camera cameraInstance
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x105C41C", Offset = "0x105C41C", VA = "0x105C41C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		public Camera cameraReference
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x105C168", Offset = "0x105C168", VA = "0x105C168")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		public Camera hmdCamera
		{
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x105C424", Offset = "0x105C424", VA = "0x105C424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public Transform stage
		{
			[Token(Token = "0x600154D")]
			[Address(RVA = "0x105C440", Offset = "0x105C440", VA = "0x105C440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public Transform stageTransform
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x105C458", Offset = "0x105C458", VA = "0x105C458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0x105C474", Offset = "0x105C474", VA = "0x105C474")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700022A")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x105BE64", Offset = "0x105BE64", VA = "0x105BE64")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700022B")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x105BF28", Offset = "0x105BF28", VA = "0x105BF28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022C")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x105C0DC", Offset = "0x105C0DC", VA = "0x105C0DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022D")]
		public bool canSetPose
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x105C56C", Offset = "0x105C56C", VA = "0x105C56C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1059B40", Offset = "0x1059B40", VA = "0x1059B40")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1059C44", Offset = "0x1059C44", VA = "0x1059C44")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x10583D0", Offset = "0x10583D0", VA = "0x10583D0")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x1058A2C", Offset = "0x1058A2C", VA = "0x1058A2C")]
		public void Render()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x105AB80", Offset = "0x105AB80", VA = "0x105AB80")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x105AEC0", Offset = "0x105AEC0", VA = "0x105AEC0")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x105B8E0", Offset = "0x105B8E0", VA = "0x105B8E0")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1059F1C", Offset = "0x1059F1C", VA = "0x1059F1C")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x105C1F4", Offset = "0x105C1F4", VA = "0x105C1F4")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x10584BC", Offset = "0x10584BC", VA = "0x10584BC", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x105C58C", Offset = "0x105C58C", VA = "0x105C58C")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x105C8B8", Offset = "0x105C8B8", VA = "0x105C8B8")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x105CA6C", Offset = "0x105CA6C", VA = "0x105CA6C")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x105CAE4", Offset = "0x105CAE4", VA = "0x105CAE4")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x105C388", Offset = "0x105C388", VA = "0x105C388")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x105A6F4", Offset = "0x105A6F4", VA = "0x105A6F4")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x105A74C", Offset = "0x105A74C", VA = "0x105A74C")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x105AB48", Offset = "0x105AB48", VA = "0x105AB48")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x105BE2C", Offset = "0x105BE2C", VA = "0x105BE2C")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x105BF48", Offset = "0x105BF48", VA = "0x105BF48")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x105C0A4", Offset = "0x105C0A4", VA = "0x105C0A4")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x105C0F8", Offset = "0x105C0F8", VA = "0x105C0F8")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x105C130", Offset = "0x105C130", VA = "0x105C130")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x105CC84", Offset = "0x105CC84", VA = "0x105CC84")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x105CD1C", Offset = "0x105CD1C", VA = "0x105CD1C")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x105CDB4", Offset = "0x105CDB4", VA = "0x105CDB4")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x105CE4C", Offset = "0x105CE4C", VA = "0x105CE4C")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x105A888", Offset = "0x105A888", VA = "0x105A888")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x105BF80", Offset = "0x105BF80", VA = "0x105BF80")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}
	}
	[Token(Token = "0x20003A6")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4001498")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4001499")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x400149A")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x400149B")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x400149C")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x400149D")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x400149E")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x400149F")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x40014A0")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x40014A1")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x40014A2")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x105CEE4", Offset = "0x105CEE4", VA = "0x105CEE4")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x105CF28", Offset = "0x105CF28", VA = "0x105CF28")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x105CF6C", Offset = "0x105CF6C", VA = "0x105CF6C")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x105CFB0", Offset = "0x105CFB0", VA = "0x105CFB0")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x105CFF4", Offset = "0x105CFF4", VA = "0x105CFF4")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x105D038", Offset = "0x105D038", VA = "0x105D038")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public struct SDKConstants
	{
		[Token(Token = "0x40014A3")]
		public const string SDK_ID = "AZYLIH5WQGPAZXCBKFYPP3CCBF3N7VPH";

		[Token(Token = "0x40014A4")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x40014A5")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x20003A8")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x40014A7")]
		NONE = 0,
		[Token(Token = "0x40014A8")]
		GAME = 63
	}
	[Token(Token = "0x20003A9")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x40014AA")]
		NONE = 0uL,
		[Token(Token = "0x40014AB")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x40014AC")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x40014AD")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x40014AE")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x40014AF")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x40014B0")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x40014B1")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x40014B2")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x40014B3")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x40014B4")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x40014B5")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x20003AA")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x40014B7")]
		UNDEFINED = 0u,
		[Token(Token = "0x40014B8")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x40014B9")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x40014BA")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x20003AB")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x40014BC")]
		UNDEFINED,
		[Token(Token = "0x40014BD")]
		COLOR_BUFFER
	}
	[Token(Token = "0x20003AC")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x40014BF")]
		UNDEFINED = 0u,
		[Token(Token = "0x40014C0")]
		ARGB32 = 10u
	}
	[Token(Token = "0x20003AD")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x40014C2")]
		UNDEFINED,
		[Token(Token = "0x40014C3")]
		RAW,
		[Token(Token = "0x40014C4")]
		DIRECTX,
		[Token(Token = "0x40014C5")]
		OPENGL,
		[Token(Token = "0x40014C6")]
		VULKAN,
		[Token(Token = "0x40014C7")]
		METAL
	}
	[Token(Token = "0x20003AE")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x40014C9")]
		UNDEFINED,
		[Token(Token = "0x40014CA")]
		LINEAR,
		[Token(Token = "0x40014CB")]
		SRGB
	}
	[Token(Token = "0x20003AF")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x40014CD")]
		UNDEFINED,
		[Token(Token = "0x40014CE")]
		FORWARD,
		[Token(Token = "0x40014CF")]
		DEFERRED,
		[Token(Token = "0x40014D0")]
		VERTEX_LIT,
		[Token(Token = "0x40014D1")]
		UNIVERSAL,
		[Token(Token = "0x40014D2")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x20003B0")]
	public struct SDKResolution
	{
		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x1700022E")]
		public static SDKResolution zero
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0x105D144", Offset = "0x105D144", VA = "0x105D144")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x105D14C", Offset = "0x105D14C", VA = "0x105D14C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B1")]
	public struct SDKVector3
	{
		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x1700022F")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0x105D1EC", Offset = "0x105D1EC", VA = "0x105D1EC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000230")]
		public static SDKVector3 one
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x105D1FC", Offset = "0x105D1FC", VA = "0x105D1FC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000231")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x105D20C", Offset = "0x105D20C", VA = "0x105D20C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000232")]
		public static SDKVector3 up
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x105D21C", Offset = "0x105D21C", VA = "0x105D21C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000233")]
		public static SDKVector3 right
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x105D22C", Offset = "0x105D22C", VA = "0x105D22C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x105D23C", Offset = "0x105D23C", VA = "0x105D23C")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x105D240", Offset = "0x105D240", VA = "0x105D240")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x105D244", Offset = "0x105D244", VA = "0x105D244")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x105D254", Offset = "0x105D254", VA = "0x105D254")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x105D264", Offset = "0x105D264", VA = "0x105D264")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x105D274", Offset = "0x105D274", VA = "0x105D274")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x105D284", Offset = "0x105D284", VA = "0x105D284", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B2")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x17000234")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x600157C")]
			[Address(RVA = "0x105D348", Offset = "0x105D348", VA = "0x105D348")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x105D35C", Offset = "0x105D35C", VA = "0x105D35C")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x105D360", Offset = "0x105D360", VA = "0x105D360")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x105D364", Offset = "0x105D364", VA = "0x105D364")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x105D418", Offset = "0x105D418", VA = "0x105D418")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x105D48C", Offset = "0x105D48C", VA = "0x105D48C")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x105D530", Offset = "0x105D530", VA = "0x105D530", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B3")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x17000235")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x105D70C", Offset = "0x105D70C", VA = "0x105D70C")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x105D738", Offset = "0x105D738", VA = "0x105D738")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x105D77C", Offset = "0x105D77C", VA = "0x105D77C")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x105D7C0", Offset = "0x105D7C0", VA = "0x105D7C0")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x105D86C", Offset = "0x105D86C", VA = "0x105D86C")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x105D978", Offset = "0x105D978", VA = "0x105D978")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x105D9D0", Offset = "0x105D9D0", VA = "0x105D9D0")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x105DA0C", Offset = "0x105DA0C", VA = "0x105DA0C")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x105DAA0", Offset = "0x105DAA0", VA = "0x105DAA0")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x105DACC", Offset = "0x105DACC", VA = "0x105DACC")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x105DBB0", Offset = "0x105DBB0", VA = "0x105DBB0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B4")]
	public struct SDKPlane
	{
		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x17000236")]
		public static SDKPlane empty
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x105E178", Offset = "0x105E178", VA = "0x105E178")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x105E11C", Offset = "0x105E11C", VA = "0x105E11C")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x105E18C", Offset = "0x105E18C", VA = "0x105E18C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B5")]
	public struct SDKPriority
	{
		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x17000237")]
		public static SDKPriority empty
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x105E250", Offset = "0x105E250", VA = "0x105E250")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x105E25C", Offset = "0x105E25C", VA = "0x105E25C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B6")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x17000238")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x105E51C", Offset = "0x105E51C", VA = "0x105E51C")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x105E67C", Offset = "0x105E67C", VA = "0x105E67C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B7")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x17000239")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x105E92C", Offset = "0x105E92C", VA = "0x105E92C")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x105EB28", Offset = "0x105EB28", VA = "0x105EB28")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x105EB38", Offset = "0x105EB38", VA = "0x105EB38")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x105EB4C", Offset = "0x105EB4C", VA = "0x105EB4C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B8")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x1700023A")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0x105EEE8", Offset = "0x105EEE8", VA = "0x105EEE8")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x105EFAC", Offset = "0x105EFAC", VA = "0x105EFAC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B9")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x1700023B")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x105EF48", Offset = "0x105EF48", VA = "0x105EF48")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x105F070", Offset = "0x105F070", VA = "0x105F070", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BA")]
	public struct SDKTexture
	{
		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x1700023C")]
		public static SDKTexture empty
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0x105F2F0", Offset = "0x105F2F0", VA = "0x105F2F0")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x105F34C", Offset = "0x105F34C", VA = "0x105F34C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BB")]
	public struct SDKTransform
	{
		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x1700023D")]
		public static SDKTransform empty
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x105EB14", Offset = "0x105EB14", VA = "0x105EB14")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x105F768", Offset = "0x105F768", VA = "0x105F768", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BC")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x1700023E")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x105EAE0", Offset = "0x105EAE0", VA = "0x105EAE0")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x105F850", Offset = "0x105F850", VA = "0x105F850", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BD")]
	public struct SDKControllerState
	{
		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x1700023F")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x105FA5C", Offset = "0x105FA5C", VA = "0x105FA5C")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x105FAA8", Offset = "0x105FAA8", VA = "0x105FAA8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BE")]
	public struct SDKPose
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x17000240")]
		public static SDKPose empty
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x105EA70", Offset = "0x105EA70", VA = "0x105EA70")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x105FE88", Offset = "0x105FE88", VA = "0x105FE88", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BF")]
	public static class SDKUtils
	{
		[Token(Token = "0x17000241")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x106061C", Offset = "0x106061C", VA = "0x106061C")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x1060148", Offset = "0x1060148", VA = "0x1060148")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x1060604", Offset = "0x1060604", VA = "0x1060604")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x1060648", Offset = "0x1060648", VA = "0x1060648")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x10606D4", Offset = "0x10606D4", VA = "0x10606D4")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x10606F4", Offset = "0x10606F4", VA = "0x10606F4")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x1060758", Offset = "0x1060758", VA = "0x1060758")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x1060764", Offset = "0x1060764", VA = "0x1060764")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x1060778", Offset = "0x1060778", VA = "0x1060778")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x1060954", Offset = "0x1060954", VA = "0x1060954")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x1060CD8", Offset = "0x1060CD8", VA = "0x1060CD8")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x10607F0", Offset = "0x10607F0", VA = "0x10607F0")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x1060F24", Offset = "0x1060F24", VA = "0x1060F24")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x60015B4")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x60015B5")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x10611A0", Offset = "0x10611A0", VA = "0x10611A0")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x1061320", Offset = "0x1061320", VA = "0x1061320")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x10613C8", Offset = "0x10613C8", VA = "0x10613C8")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x10614C0", Offset = "0x10614C0", VA = "0x10614C0")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x1061654", Offset = "0x1061654", VA = "0x1061654")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x1061660", Offset = "0x1061660", VA = "0x1061660")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1061800", Offset = "0x1061800", VA = "0x1061800")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x1061888", Offset = "0x1061888", VA = "0x1061888")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace Klak.Timeline
{
	[Serializable]
	[Token(Token = "0x20003C0")]
	public class AudioPreview : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioPreviewPlayable template;

		[Token(Token = "0x17000242")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x1061B14", Offset = "0x1061B14", VA = "0x1061B14", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1061B1C", Offset = "0x1061B1C", VA = "0x1061B1C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1061BC4", Offset = "0x1061BC4", VA = "0x1061BC4")]
		public AudioPreview()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C1")]
	internal class AudioPreviewMixer : PlayableBehaviour
	{
		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x1061C40", Offset = "0x1061C40", VA = "0x1061C40")]
		public AudioPreviewMixer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C2")]
	public class AudioPreviewPlayable : PlayableBehaviour
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip clip;

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x1061C38", Offset = "0x1061C38", VA = "0x1061C38")]
		public AudioPreviewPlayable()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	[TrackColor(0.8f, 0.3f, 0.4f)]
	[TrackClipType(typeof(AudioPreview))]
	public class AudioPreviewTrack : TrackAsset
	{
		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x1061C48", Offset = "0x1061C48", VA = "0x1061C48", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x1061CE8", Offset = "0x1061CE8", VA = "0x1061CE8")]
		public AudioPreviewTrack()
		{
		}
	}
}
namespace FlexFramework.Excel
{
	[Token(Token = "0x20003C4")]
	public abstract class CustomConverter<T> : IConverter
	{
		[Token(Token = "0x20003C5")]
		[CompilerGenerated]
		private sealed class <SplitGroup>d__5 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private string <>2__current;

			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private char start;

			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public char <>3__start;

			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private char end;

			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public char <>3__end;

			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private string input;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string <>3__input;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator <>7__wrap1;

			[Token(Token = "0x17000244")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x60015D0")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000245")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015D2")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015CC")]
			[DebuggerHidden]
			public <SplitGroup>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60015CD")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015CE")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015CF")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60015D1")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60015D3")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60015D4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private Type FlexFramework.Excel.IConverter.Type
		{
			[Token(Token = "0x60015C5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C6")]
		public abstract T Convert(string input);

		[Token(Token = "0x60015C7")]
		public bool TryConvert(string input, out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C8")]
		protected string[] Split(string input, params char[] separators)
		{
			return null;
		}

		[Token(Token = "0x60015C9")]
		[IteratorStateMachine(typeof(CustomConverter<>.<SplitGroup>d__5))]
		protected IEnumerable<string> SplitGroup(string input, char start, char end)
		{
			return null;
		}

		[Token(Token = "0x60015CA")]
		private object FlexFramework.Excel.IConverter.Convert(string input)
		{
			return null;
		}

		[Token(Token = "0x60015CB")]
		protected CustomConverter()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public sealed class ArrayConverter<T> : CustomConverter<T[]>
	{
		[Token(Token = "0x60015D5")]
		public override T[] Convert(string input)
		{
			return null;
		}

		[Token(Token = "0x60015D6")]
		public ArrayConverter()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class Color32Converter : CustomConverter<Color32>
	{
		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x1061D40", Offset = "0x1061D40", VA = "0x1061D40", Slot = "6")]
		public override Color32 Convert(string input)
		{
			return default(Color32);
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x1062594", Offset = "0x1062594", VA = "0x1062594")]
		public Color32Converter()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public sealed class ColorConverter : CustomConverter<Color>
	{
		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x10625DC", Offset = "0x10625DC", VA = "0x10625DC", Slot = "6")]
		public override Color Convert(string input)
		{
			return default(Color);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x1062A78", Offset = "0x1062A78", VA = "0x1062A78")]
		public static string ColorToHex(Color color)
		{
			return null;
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x10629CC", Offset = "0x10629CC", VA = "0x10629CC")]
		public static Color HexToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1062B24", Offset = "0x1062B24", VA = "0x1062B24")]
		public ColorConverter()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public sealed class DictionaryConverter<TKey, TValue> : CustomConverter<Dictionary<TKey, TValue>>
	{
		[Token(Token = "0x60015E0")]
		public override Dictionary<TKey, TValue> Convert(string input)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		public DictionaryConverter()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public sealed class ListConverter<T> : CustomConverter<List<T>>
	{
		[Token(Token = "0x60015E2")]
		public override List<T> Convert(string input)
		{
			return null;
		}

		[Token(Token = "0x60015E3")]
		public ListConverter()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class ObjectConverter : CustomConverter<object>
	{
		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x1062B6C", Offset = "0x1062B6C", VA = "0x1062B6C", Slot = "6")]
		public override object Convert(string input)
		{
			return null;
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x1062EBC", Offset = "0x1062EBC", VA = "0x1062EBC")]
		public ObjectConverter()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public sealed class RectConverter : CustomConverter<Rect>
	{
		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x1062F04", Offset = "0x1062F04", VA = "0x1062F04", Slot = "6")]
		public override Rect Convert(string input)
		{
			return default(Rect);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x1063180", Offset = "0x1063180", VA = "0x1063180")]
		public RectConverter()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public sealed class Vector2Converter : CustomConverter<Vector2>
	{
		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x10631C8", Offset = "0x10631C8", VA = "0x10631C8", Slot = "6")]
		public override Vector2 Convert(string input)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x10633DC", Offset = "0x10633DC", VA = "0x10633DC")]
		public Vector2Converter()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public sealed class Vector3Converter : CustomConverter<Vector3>
	{
		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x1063424", Offset = "0x1063424", VA = "0x1063424", Slot = "6")]
		public override Vector3 Convert(string input)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x1063658", Offset = "0x1063658", VA = "0x1063658")]
		public Vector3Converter()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public sealed class Vector4Converter : CustomConverter<Vector4>
	{
		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x10636A0", Offset = "0x10636A0", VA = "0x10636A0", Slot = "6")]
		public override Vector4 Convert(string input)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x10638FC", Offset = "0x10638FC", VA = "0x10638FC")]
		public Vector4Converter()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public static class Extensions
	{
		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x1063944", Offset = "0x1063944", VA = "0x1063944")]
		public static object Convert(this Cell cell, Type type)
		{
			return null;
		}

		[Token(Token = "0x60015F2")]
		public static T Convert<T>(this Cell cell)
		{
			return (T)null;
		}

		[Token(Token = "0x60015F3")]
		public static T Convert<T>(this Row row, IGenerator<T> generator) where T : new()
		{
			return (T)null;
		}

		[Token(Token = "0x60015F4")]
		public static T Convert<T>(this Row row, string expression) where T : new()
		{
			return (T)null;
		}

		[Token(Token = "0x60015F5")]
		public static T Convert<T>(this Row row, IEnumerable<Cell> cols) where T : new()
		{
			return (T)null;
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x1063D5C", Offset = "0x1063D5C", VA = "0x1063D5C")]
		public static object Convert(this Row row, Type type, string expression)
		{
			return null;
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x1063EF0", Offset = "0x1063EF0", VA = "0x1063EF0")]
		public static object Convert(this Row row, Type type, IEnumerable<Cell> cols)
		{
			return null;
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x1063E4C", Offset = "0x1063E4C", VA = "0x1063E4C")]
		public static object Convert(this Row row, IGenerator generator)
		{
			return null;
		}

		[Token(Token = "0x60015F9")]
		public static IEnumerable<T> Convert<T>(this Table table) where T : new()
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x1063F88", Offset = "0x1063F88", VA = "0x1063F88")]
		public static IEnumerable<object> Convert(this Table table, Type type)
		{
			return null;
		}

		[Token(Token = "0x60015FB")]
		public static IEnumerable<T> Convert<T>(this Table table, ITableGenerator<T> generator) where T : new()
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		public static IEnumerable<T> Convert<T>(this Table table, int row) where T : new()
		{
			return null;
		}

		[Token(Token = "0x60015FD")]
		public static IEnumerable<T> Convert<T>(this Table table, string expression, params int[] exclude) where T : new()
		{
			return null;
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x1064104", Offset = "0x1064104", VA = "0x1064104")]
		public static IEnumerable<object> Convert(this Table table, Type type, string expression, params int[] exclude)
		{
			return null;
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x1064060", Offset = "0x1064060", VA = "0x1064060")]
		public static IEnumerable<object> Convert(this Table table, ITableGenerator generator)
		{
			return null;
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x10641E0", Offset = "0x10641E0", VA = "0x10641E0")]
		public static IEnumerable<object> Convert(this Table table, Type type, int row)
		{
			return null;
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x10643C4", Offset = "0x10643C4", VA = "0x10643C4")]
		public static string Dump(this Row row, char delimiter, char enclose)
		{
			return null;
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x10645AC", Offset = "0x10645AC", VA = "0x10645AC")]
		public static string Dump(this Row row)
		{
			return null;
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x1064610", Offset = "0x1064610", VA = "0x1064610")]
		public static string Dump(this Cell cell, char delimiter, char enclose)
		{
			return null;
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x1064754", Offset = "0x1064754", VA = "0x1064754")]
		public static string Dump(this Cell cell)
		{
			return null;
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x10647B8", Offset = "0x10647B8", VA = "0x10647B8")]
		public static string Dump(this Table table, char delimiter, char enclose)
		{
			return null;
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x10649A0", Offset = "0x10649A0", VA = "0x10649A0")]
		public static string Dump(this Table table)
		{
			return null;
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x1064A04", Offset = "0x1064A04", VA = "0x1064A04")]
		public static Cell Select(this Row row, string address)
		{
			return null;
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x1064D0C", Offset = "0x1064D0C", VA = "0x1064D0C")]
		public static IEnumerable<Cell> SelectRange(this Row row, string range)
		{
			return null;
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x106504C", Offset = "0x106504C", VA = "0x106504C")]
		public static Cell Select(this Table table, string address)
		{
			return null;
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x1065260", Offset = "0x1065260", VA = "0x1065260")]
		public static IEnumerable<Cell> SelectRange(this Table table, string range)
		{
			return null;
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x1065498", Offset = "0x1065498", VA = "0x1065498")]
		public static Cell Select(this WorkBook book, string path)
		{
			return null;
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x1065654", Offset = "0x1065654", VA = "0x1065654")]
		public static IEnumerable<Cell> SelectRange(this WorkBook book, string path)
		{
			return null;
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x1065810", Offset = "0x1065810", VA = "0x1065810")]
		public static void Recalculate(this Table table)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x106595C", Offset = "0x106595C", VA = "0x106595C")]
		public static Table Expand(this Table table)
		{
			return null;
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x1065C4C", Offset = "0x1065C4C", VA = "0x1065C4C")]
		public static Table Collapse(this Table table)
		{
			return null;
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x1066084", Offset = "0x1066084", VA = "0x1066084")]
		public static Table Rotate(this Table table)
		{
			return null;
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x1066494", Offset = "0x1066494", VA = "0x1066494")]
		public static bool IsEmpty(this Row row)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003DA")]
	public interface IConverter
	{
		[Token(Token = "0x17000246")]
		Type Type
		{
			[Token(Token = "0x6001626")]
			get;
		}

		[Token(Token = "0x6001625")]
		object Convert(string input);
	}
	[Token(Token = "0x20003DB")]
	public static class Validator
	{
		[Token(Token = "0x6001627")]
		[Address(RVA = "0x1066888", Offset = "0x1066888", VA = "0x1066888")]
		public static bool CanCast(Type from, Type to)
		{
			return default(bool);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x1066B10", Offset = "0x1066B10", VA = "0x1066B10")]
		private static bool HasImplicitConversion(Type definedOn, Type baseType, Type targetType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x10669DC", Offset = "0x10669DC", VA = "0x10669DC")]
		public static bool HasImplicitConversion(Type source, Type target)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003DD")]
	public static class ValueConverter
	{
		[Token(Token = "0x20003DE")]
		private class Converter<T> : IConverter
		{
			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Converter<string, T> _converter;

			[Token(Token = "0x17000247")]
			private Type FlexFramework.Excel.IConverter.Type
			{
				[Token(Token = "0x6001639")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001638")]
			public Converter(Converter<string, T> converter)
			{
			}

			[Token(Token = "0x600163A")]
			private object FlexFramework.Excel.IConverter.Convert(string input)
			{
				return null;
			}
		}

		[Token(Token = "0x20003DF")]
		private class Converter : IConverter
		{
			[Token(Token = "0x4001552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Converter<string, object> _converter;

			[Token(Token = "0x4001553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Type _type;

			[Token(Token = "0x17000248")]
			private Type FlexFramework.Excel.IConverter.Type
			{
				[Token(Token = "0x600163C")]
				[Address(RVA = "0x1067DF0", Offset = "0x1067DF0", VA = "0x1067DF0", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600163B")]
			[Address(RVA = "0x1067BF0", Offset = "0x1067BF0", VA = "0x1067BF0")]
			public Converter(Converter<string, object> converter, Type type)
			{
			}

			[Token(Token = "0x600163D")]
			[Address(RVA = "0x1067DF8", Offset = "0x1067DF8", VA = "0x1067DF8", Slot = "4")]
			private object FlexFramework.Excel.IConverter.Convert(string input)
			{
				return null;
			}
		}

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<IConverter> converters;

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x1066E1C", Offset = "0x1066E1C", VA = "0x1066E1C")]
		static ValueConverter()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x1066EB8", Offset = "0x1066EB8", VA = "0x1066EB8")]
		public static void Reset()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x1067AB4", Offset = "0x1067AB4", VA = "0x1067AB4")]
		public static void Empty()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x10639C0", Offset = "0x10639C0", VA = "0x10639C0")]
		public static object Convert(Type type, string value)
		{
			return null;
		}

		[Token(Token = "0x6001631")]
		public static T Convert<T>(string value)
		{
			return (T)null;
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x1067908", Offset = "0x1067908", VA = "0x1067908")]
		public static bool Register(IConverter converter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001633")]
		public static bool Register<T>() where T : IConverter, new()
		{
			return default(bool);
		}

		[Token(Token = "0x6001634")]
		public static bool Register<T>(Converter<string, T> converter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1067B5C", Offset = "0x1067B5C", VA = "0x1067B5C")]
		public static bool Register(Converter<string, object> converter, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x1067CCC", Offset = "0x1067CCC", VA = "0x1067CCC")]
		public static bool Unregister(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001637")]
		public static bool Unregister<T>()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E3")]
	public struct Address : IEquatable<Address>
	{
		[Token(Token = "0x17000249")]
		public int Column
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0x10681F4", Offset = "0x10681F4", VA = "0x10681F4")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6001648")]
			[Address(RVA = "0x10681FC", Offset = "0x10681FC", VA = "0x10681FC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public int Row
		{
			[Token(Token = "0x6001649")]
			[Address(RVA = "0x1068204", Offset = "0x1068204", VA = "0x1068204")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x600164A")]
			[Address(RVA = "0x106820C", Offset = "0x106820C", VA = "0x106820C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public string ColumnName
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0x10683F4", Offset = "0x10683F4", VA = "0x10683F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x106812C", Offset = "0x106812C", VA = "0x106812C", Slot = "4")]
		private bool System.IEquatable<FlexFramework.Excel.Address>.Equals(Address other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x1068154", Offset = "0x1068154", VA = "0x1068154", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x10681E0", Offset = "0x10681E0", VA = "0x10681E0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x1064BAC", Offset = "0x1064BAC", VA = "0x1064BAC")]
		public Address(string address)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x1065954", Offset = "0x1065954", VA = "0x1065954")]
		public Address(int column, int row)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x1068528", Offset = "0x1068528", VA = "0x1068528", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x10667D0", Offset = "0x10667D0", VA = "0x10667D0")]
		public static bool operator ==(Address address, Address other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x10685BC", Offset = "0x10685BC", VA = "0x10685BC")]
		public static bool operator !=(Address address, Address other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x10685DC", Offset = "0x10685DC", VA = "0x10685DC")]
		public static bool operator >=(Address address, Address other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x10685FC", Offset = "0x10685FC", VA = "0x10685FC")]
		public static bool operator <=(Address address, Address other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x106861C", Offset = "0x106861C", VA = "0x106861C")]
		public static bool operator >(Address address, Address other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x106863C", Offset = "0x106863C", VA = "0x106863C")]
		public static bool operator <(Address address, Address other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x106865C", Offset = "0x106865C", VA = "0x106865C")]
		public static Range operator +(Address from, Address to)
		{
			return default(Range);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x10686FC", Offset = "0x10686FC", VA = "0x10686FC")]
		public static Address operator >>(Address address, int column)
		{
			return default(Address);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x106870C", Offset = "0x106870C", VA = "0x106870C")]
		public static Address operator <<(Address address, int column)
		{
			return default(Address);
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x106871C", Offset = "0x106871C", VA = "0x106871C")]
		public static Address operator +(Address address, int row)
		{
			return default(Address);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x106872C", Offset = "0x106872C", VA = "0x106872C")]
		public static Address operator -(Address address, int row)
		{
			return default(Address);
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x10683FC", Offset = "0x10683FC", VA = "0x10683FC")]
		public static string ParseColumn(int column)
		{
			return null;
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x1068214", Offset = "0x1068214", VA = "0x1068214")]
		public static int ParseColumn(string column)
		{
			return default(int);
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x1064B3C", Offset = "0x1064B3C", VA = "0x1064B3C")]
		public static bool IsValid(string address)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E4")]
	public class Cell : ICloneable<Cell>
	{
		[Token(Token = "0x1700024C")]
		public Address Address
		{
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x106873C", Offset = "0x106873C", VA = "0x106873C")]
			[CompilerGenerated]
			get
			{
				return default(Address);
			}
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x1068744", Offset = "0x1068744", VA = "0x1068744")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public object Value
		{
			[Token(Token = "0x600165F")]
			[Address(RVA = "0x106874C", Offset = "0x106874C", VA = "0x106874C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001660")]
			[Address(RVA = "0x1068754", Offset = "0x1068754", VA = "0x1068754")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public bool IsSpan
		{
			[Token(Token = "0x6001661")]
			[Address(RVA = "0x106875C", Offset = "0x106875C", VA = "0x106875C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001662")]
			[Address(RVA = "0x1068764", Offset = "0x1068764", VA = "0x1068764")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public virtual string Text
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0x1068A88", Offset = "0x1068A88", VA = "0x1068A88", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		public string String
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x1068B0C", Offset = "0x1068B0C", VA = "0x1068B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		public int Integer
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x1068C20", Offset = "0x1068C20", VA = "0x1068C20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000252")]
		public bool Boolean
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0x1068D3C", Offset = "0x1068D3C", VA = "0x1068D3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000253")]
		public float Single
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0x1068E58", Offset = "0x1068E58", VA = "0x1068E58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000254")]
		public double Double
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0x1068F74", Offset = "0x1068F74", VA = "0x1068F74")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000255")]
		public bool IsInteger
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x1068CDC", Offset = "0x1068CDC", VA = "0x1068CDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000256")]
		public bool IsSingle
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x1068F14", Offset = "0x1068F14", VA = "0x1068F14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000257")]
		public bool IsDouble
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x1069030", Offset = "0x1069030", VA = "0x1069030")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000258")]
		public bool IsBoolean
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x1068DF8", Offset = "0x1068DF8", VA = "0x1068DF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000259")]
		public bool IsString
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x1068BC0", Offset = "0x1068BC0", VA = "0x1068BC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x1065C44", Offset = "0x1065C44", VA = "0x1065C44")]
		public Cell()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x1068770", Offset = "0x1068770", VA = "0x1068770")]
		public Cell(Address address)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x1068798", Offset = "0x1068798", VA = "0x1068798")]
		public Cell(string value, Address address)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x10687D0", Offset = "0x10687D0", VA = "0x10687D0")]
		public Cell(bool value, Address address)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x1068858", Offset = "0x1068858", VA = "0x1068858")]
		public Cell(int value, Address address)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x10688E0", Offset = "0x10688E0", VA = "0x10688E0")]
		public Cell(long value, Address address)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x1068968", Offset = "0x1068968", VA = "0x1068968")]
		public Cell(float value, Address address)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x10689F8", Offset = "0x10689F8", VA = "0x10689F8")]
		public Cell(double value, Address address)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x1069090", Offset = "0x1069090", VA = "0x1069090", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x106909C", Offset = "0x106909C", VA = "0x106909C", Slot = "4")]
		public Cell DeepClone()
		{
			return null;
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x106911C", Offset = "0x106911C", VA = "0x106911C", Slot = "5")]
		public Cell ShallowClone()
		{
			return null;
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x106919C", Offset = "0x106919C", VA = "0x106919C")]
		public static implicit operator string(Cell cell)
		{
			return null;
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x10691AC", Offset = "0x10691AC", VA = "0x10691AC")]
		public static implicit operator int(Cell cell)
		{
			return default(int);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x10691BC", Offset = "0x10691BC", VA = "0x10691BC")]
		public static implicit operator bool(Cell cell)
		{
			return default(bool);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x10691CC", Offset = "0x10691CC", VA = "0x10691CC")]
		public static implicit operator float(Cell cell)
		{
			return default(float);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x10691DC", Offset = "0x10691DC", VA = "0x10691DC")]
		public static implicit operator double(Cell cell)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20003E5")]
	public interface ICloneable<T> where T : class
	{
		[Token(Token = "0x600167E")]
		T DeepClone();

		[Token(Token = "0x600167F")]
		T ShallowClone();
	}
	[Token(Token = "0x20003E6")]
	public struct Range : IEquatable<Range>
	{
		[Token(Token = "0x1700025A")]
		public Address From
		{
			[Token(Token = "0x6001683")]
			[Address(RVA = "0x10692EC", Offset = "0x10692EC", VA = "0x10692EC")]
			[CompilerGenerated]
			readonly get
			{
				return default(Address);
			}
			[Token(Token = "0x6001684")]
			[Address(RVA = "0x10692F4", Offset = "0x10692F4", VA = "0x10692F4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public Address To
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0x10692FC", Offset = "0x10692FC", VA = "0x10692FC")]
			[CompilerGenerated]
			readonly get
			{
				return default(Address);
			}
			[Token(Token = "0x6001686")]
			[Address(RVA = "0x1069304", Offset = "0x1069304", VA = "0x1069304")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x10691EC", Offset = "0x10691EC", VA = "0x10691EC", Slot = "4")]
		public bool Equals(Range other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x1069254", Offset = "0x1069254", VA = "0x1069254", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x10692C4", Offset = "0x10692C4", VA = "0x10692C4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x1068688", Offset = "0x1068688", VA = "0x1068688")]
		public Range(Address from, Address to)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x1064E08", Offset = "0x1064E08", VA = "0x1064E08")]
		public Range(string range)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x106930C", Offset = "0x106930C", VA = "0x106930C")]
		public bool Contains(Address address)
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x106934C", Offset = "0x106934C", VA = "0x106934C")]
		public bool Contains(Range range)
		{
			return default(bool);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x1069390", Offset = "0x1069390", VA = "0x1069390", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x1069438", Offset = "0x1069438", VA = "0x1069438")]
		public static bool operator ==(Range range, Range other)
		{
			return default(bool);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x1069478", Offset = "0x1069478", VA = "0x1069478")]
		public static bool operator !=(Range range, Range other)
		{
			return default(bool);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x1064D98", Offset = "0x1064D98", VA = "0x1064D98")]
		public static bool IsValid(string range)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E7")]
	public class Row : ReadOnlyCollection<Cell>, ICloneable<Row>
	{
		[Token(Token = "0x1700025C")]
		public IList<Cell> Cells
		{
			[Token(Token = "0x600168F")]
			[Address(RVA = "0x1064570", Offset = "0x1064570", VA = "0x1064570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public Cell this[string address]
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x10694B8", Offset = "0x10694B8", VA = "0x10694B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		public Cell this[Address address]
		{
			[Token(Token = "0x6001691")]
			[Address(RVA = "0x1069534", Offset = "0x1069534", VA = "0x1069534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public IEnumerable<Cell> this[Range range]
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0x1064F74", Offset = "0x1064F74", VA = "0x1064F74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x1069618", Offset = "0x1069618", VA = "0x1069618")]
		public Row(IList<Cell> list)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x1066404", Offset = "0x1066404", VA = "0x1066404")]
		public Row()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x1069670", Offset = "0x1069670", VA = "0x1069670", Slot = "35")]
		public Row DeepClone()
		{
			return null;
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x10697D8", Offset = "0x10697D8", VA = "0x10697D8", Slot = "36")]
		public Row ShallowClone()
		{
			return null;
		}
	}
	[Token(Token = "0x20003EB")]
	public abstract class Table : ReadOnlyCollection<Row>, ICloneable<Table>
	{
		[Token(Token = "0x17000260")]
		public IList<Row> Rows
		{
			[Token(Token = "0x600169F")]
			[Address(RVA = "0x1066048", Offset = "0x1066048", VA = "0x1066048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public Cell this[string address]
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0x10699C0", Offset = "0x10699C0", VA = "0x10699C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		public Cell this[Address address]
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x1069A3C", Offset = "0x1069A3C", VA = "0x1069A3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		public IEnumerable<Cell> this[Range range]
		{
			[Token(Token = "0x60016A2")]
			[Address(RVA = "0x10652EC", Offset = "0x10652EC", VA = "0x10652EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x1069968", Offset = "0x1069968", VA = "0x1069968")]
		public Table(IList<Row> list)
		{
		}

		[Token(Token = "0x60016A3")]
		public abstract Table DeepClone();

		[Token(Token = "0x60016A4")]
		public abstract Table ShallowClone();
	}
	[Token(Token = "0x20003EF")]
	public sealed class Document : Table
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char Delimiter;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static char Enclose;

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1069D00", Offset = "0x1069D00", VA = "0x1069D00")]
		public Document(IList<Row> list)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x1069D04", Offset = "0x1069D04", VA = "0x1069D04")]
		public Document()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x1069D7C", Offset = "0x1069D7C", VA = "0x1069D7C")]
		public static Document LoadAt(string path)
		{
			return null;
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x1069DE4", Offset = "0x1069DE4", VA = "0x1069DE4")]
		public static Document Load(string content)
		{
			return null;
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x106A684", Offset = "0x106A684", VA = "0x106A684")]
		public static Document Load(Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x106A70C", Offset = "0x106A70C", VA = "0x106A70C")]
		public static Document Load(byte[] buffer)
		{
			return null;
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x1069FA0", Offset = "0x1069FA0", VA = "0x1069FA0")]
		public static Document Load(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x106A8C8", Offset = "0x106A8C8", VA = "0x106A8C8")]
		public static void Reset()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x106A928", Offset = "0x106A928", VA = "0x106A928", Slot = "37")]
		public override Table DeepClone()
		{
			return null;
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x106AA90", Offset = "0x106AA90", VA = "0x106AA90", Slot = "38")]
		public override Table ShallowClone()
		{
			return null;
		}
	}
	[Token(Token = "0x20003F1")]
	public sealed class SharedStringCollection : ReadOnlyCollection<string>
	{
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x106ABEC", Offset = "0x106ABEC", VA = "0x106ABEC")]
		public SharedStringCollection(IList<string> list)
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public sealed class WorkBook : KeyedCollection<string, WorkSheet>
	{
		[Token(Token = "0x17000264")]
		public SharedStringCollection SharedStrings
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x106AC44", Offset = "0x106AC44", VA = "0x106AC44")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x106AC4C", Offset = "0x106AC4C", VA = "0x106AC4C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x106AC54", Offset = "0x106AC54", VA = "0x106AC54")]
		public WorkBook(byte[] buffer)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x106C83C", Offset = "0x106C83C", VA = "0x106C83C")]
		public WorkBook(Stream stream)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x106C8D0", Offset = "0x106C8D0", VA = "0x106C8D0")]
		public WorkBook(string fileName)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x106AE34", Offset = "0x106AE34", VA = "0x106AE34")]
		private void Read(ZipFile zip)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x106CB54", Offset = "0x106CB54", VA = "0x106CB54", Slot = "39")]
		protected override string GetKeyForItem(WorkSheet item)
		{
			return null;
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x106CB6C", Offset = "0x106CB6C", VA = "0x106CB6C")]
		public void Merge()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public sealed class WorkSheet : Table
	{
		[Token(Token = "0x17000265")]
		public string ID
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x106D89C", Offset = "0x106D89C", VA = "0x106D89C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x106D8A4", Offset = "0x106D8A4", VA = "0x106D8A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public string Name
		{
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x106D8AC", Offset = "0x106D8AC", VA = "0x106D8AC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x106D8B4", Offset = "0x106D8B4", VA = "0x106D8B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public ReadOnlyCollection<Range> Spans
		{
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x106D8BC", Offset = "0x106D8BC", VA = "0x106D8BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x106D8C4", Offset = "0x106D8C4", VA = "0x106D8C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x106D8CC", Offset = "0x106D8CC", VA = "0x106D8CC")]
		public WorkSheet(string id, string name, IList<Row> rows)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x106CA88", Offset = "0x106CA88", VA = "0x106CA88")]
		public WorkSheet(string id, string name, IList<Row> rows, IList<Range> spans)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x106CDE4", Offset = "0x106CDE4", VA = "0x106CDE4")]
		public void Merge()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x106D910", Offset = "0x106D910", VA = "0x106D910", Slot = "37")]
		public override Table DeepClone()
		{
			return null;
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x106DAC0", Offset = "0x106DAC0", VA = "0x106DAC0", Slot = "38")]
		public override Table ShallowClone()
		{
			return null;
		}
	}
	[Token(Token = "0x20003F6")]
	[AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, Inherited = false)]
	public sealed class ColumnAttribute : Attribute
	{
		[Token(Token = "0x17000268")]
		public int Column
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x106DBE4", Offset = "0x106DBE4", VA = "0x106DBE4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x106DBEC", Offset = "0x106DBEC", VA = "0x106DBEC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public object Default
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x106DBF4", Offset = "0x106DBF4", VA = "0x106DBF4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x106DBFC", Offset = "0x106DBFC", VA = "0x106DBFC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public bool Fallback
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x106DC04", Offset = "0x106DC04", VA = "0x106DC04")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x106DC0C", Offset = "0x106DC0C", VA = "0x106DC0C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x106DC18", Offset = "0x106DC18", VA = "0x106DC18")]
		public ColumnAttribute(int column)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x106DC40", Offset = "0x106DC40", VA = "0x106DC40")]
		public ColumnAttribute(int column, object @default)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x106DC84", Offset = "0x106DC84", VA = "0x106DC84")]
		public ColumnAttribute(string column)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x106DCB8", Offset = "0x106DCB8", VA = "0x106DCB8")]
		public ColumnAttribute(string column, object @default)
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public interface IGenerator
	{
		[Token(Token = "0x60016E0")]
		object Instantiate(Row row);
	}
	[Token(Token = "0x20003F8")]
	public interface IGenerator<T>
	{
		[Token(Token = "0x60016E1")]
		T Instantiate(Row row);
	}
	[Token(Token = "0x20003F9")]
	public interface ITableGenerator
	{
		[Token(Token = "0x60016E2")]
		IEnumerable<object> Instantiate(Table table);
	}
	[Token(Token = "0x20003FA")]
	public interface ITableGenerator<T>
	{
		[Token(Token = "0x60016E3")]
		IEnumerable<T> Instantiate(Table table);
	}
	[Token(Token = "0x20003FB")]
	public sealed class Mapper<T> : MapperBase<Mapper<T>>, IGenerator<T> where T : new()
	{
		[Token(Token = "0x60016E4")]
		public Mapper()
		{
		}

		[Token(Token = "0x60016E5")]
		protected override object CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60016E6")]
		private T FlexFramework.Excel.IGenerator<T>.Instantiate(Row row)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20003FC")]
	public sealed class Mapper : MapperBase<Mapper>, IGenerator
	{
		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x1063DF4", Offset = "0x1063DF4", VA = "0x1063DF4")]
		public Mapper(Type type)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x106DD08", Offset = "0x106DD08", VA = "0x106DD08", Slot = "8")]
		private object FlexFramework.Excel.IGenerator.Instantiate(Row row)
		{
			return null;
		}
	}
	[Token(Token = "0x20003FD")]
	public abstract class MapperBase<T> where T : MapperBase<T>
	{
		[Token(Token = "0x20003FF")]
		[CompilerGenerated]
		private sealed class <Cast>d__11 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MapperBase<T> <>4__this;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Row row;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Row <>3__row;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<Mapping> <>7__wrap1;

			[Token(Token = "0x1700026C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001708")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600170A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001704")]
			[DebuggerHidden]
			public <Cast>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001705")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001706")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001707")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001709")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600170B")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600170C")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly Mapping[] mappings;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly Type type;

		[Token(Token = "0x1700026B")]
		public bool SafeMode
		{
			[Token(Token = "0x60016E9")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016EA")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60016EB")]
		protected MapperBase(Type type)
		{
		}

		[Token(Token = "0x60016EC")]
		protected virtual MemberInfo[] GetMembers()
		{
			return null;
		}

		[Token(Token = "0x60016ED")]
		protected virtual object CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60016EE")]
		protected virtual void Assign(object obj, MemberInfo[] members, object[] data)
		{
		}

		[Token(Token = "0x60016EF")]
		public virtual void Extract()
		{
		}

		[Token(Token = "0x60016F0")]
		[IteratorStateMachine(typeof(MapperBase<>.<Cast>d__11))]
		protected IEnumerable<object> Cast(Row row)
		{
			return null;
		}

		[Token(Token = "0x60016F1")]
		public T Map(string member, int column)
		{
			return null;
		}

		[Token(Token = "0x60016F2")]
		public T Map(string member, int column, object @default)
		{
			return null;
		}

		[Token(Token = "0x60016F3")]
		public T Map(string member, string column)
		{
			return null;
		}

		[Token(Token = "0x60016F4")]
		public T Map(string member, string column, object @default)
		{
			return null;
		}

		[Token(Token = "0x60016F5")]
		public T Map(string expression)
		{
			return null;
		}

		[Token(Token = "0x60016F6")]
		public T Map(IEnumerable<Cell> row)
		{
			return null;
		}

		[Token(Token = "0x60016F7")]
		public T Remove(string member)
		{
			return null;
		}

		[Token(Token = "0x60016F8")]
		public T Clear()
		{
			return null;
		}

		[Token(Token = "0x60016F9")]
		public T Copy(T mapping)
		{
			return null;
		}

		[Token(Token = "0x60016FA")]
		protected object Instantiate(Row row)
		{
			return null;
		}
	}
	[Token(Token = "0x2000404")]
	public class Mapping
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object _default;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _column;

		[Token(Token = "0x1700026E")]
		public MemberInfo Member
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x106DD60", Offset = "0x106DD60", VA = "0x106DD60")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001716")]
			[Address(RVA = "0x106DD68", Offset = "0x106DD68", VA = "0x106DD68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public Type Type
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0x106DD70", Offset = "0x106DD70", VA = "0x106DD70")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001718")]
			[Address(RVA = "0x106DD78", Offset = "0x106DD78", VA = "0x106DD78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public int Column
		{
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x106DD80", Offset = "0x106DD80", VA = "0x106DD80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x106DD88", Offset = "0x106DD88", VA = "0x106DD88")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public object Default
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x106DDF8", Offset = "0x106DDF8", VA = "0x106DDF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600171C")]
			[Address(RVA = "0x106DE00", Offset = "0x106DE00", VA = "0x106DE00")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public bool Fallback
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x106DED8", Offset = "0x106DED8", VA = "0x106DED8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600171E")]
			[Address(RVA = "0x106DEE0", Offset = "0x106DEE0", VA = "0x106DEE0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public bool Failed
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0x106DEEC", Offset = "0x106DEEC", VA = "0x106DEEC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001720")]
			[Address(RVA = "0x106DEF4", Offset = "0x106DEF4", VA = "0x106DEF4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x106DF00", Offset = "0x106DF00", VA = "0x106DF00")]
		public Mapping(MemberInfo member)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x106E060", Offset = "0x106E060", VA = "0x106E060")]
		public Mapping(MemberInfo member, int column)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x106E088", Offset = "0x106E088", VA = "0x106E088")]
		public Mapping(MemberInfo member, int column, object @default)
		{
		}
	}
	[Token(Token = "0x2000405")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false)]
	public sealed class TableAttribute : Attribute
	{
		[Token(Token = "0x17000274")]
		public int[] Ignore
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0x106E178", Offset = "0x106E178", VA = "0x106E178")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x106E180", Offset = "0x106E180", VA = "0x106E180")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public bool SafeMode
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0x106E188", Offset = "0x106E188", VA = "0x106E188")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001727")]
			[Address(RVA = "0x106E190", Offset = "0x106E190", VA = "0x106E190")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x106E19C", Offset = "0x106E19C", VA = "0x106E19C")]
		public TableAttribute(params int[] ignore)
		{
		}
	}
	[Token(Token = "0x2000406")]
	public sealed class TableMapper<T> : TableMapperBase<TableMapper<T>>, IGenerator<T>, ITableGenerator<T> where T : new()
	{
		[Token(Token = "0x6001729")]
		public TableMapper()
		{
		}

		[Token(Token = "0x600172A")]
		protected override object CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x600172B")]
		private T FlexFramework.Excel.IGenerator<T>.Instantiate(Row row)
		{
			return (T)null;
		}

		[Token(Token = "0x600172C")]
		private IEnumerable<T> FlexFramework.Excel.ITableGenerator<T>.Instantiate(Table table)
		{
			return null;
		}
	}
	[Token(Token = "0x2000407")]
	public sealed class TableMapper : TableMapperBase<TableMapper>, IGenerator, ITableGenerator
	{
		[Token(Token = "0x600172F")]
		[Address(RVA = "0x1064008", Offset = "0x1064008", VA = "0x1064008")]
		public TableMapper(Type type)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x106E1CC", Offset = "0x106E1CC", VA = "0x106E1CC", Slot = "8")]
		private object FlexFramework.Excel.IGenerator.Instantiate(Row row)
		{
			return null;
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x106E224", Offset = "0x106E224", VA = "0x106E224", Slot = "9")]
		private IEnumerable<object> FlexFramework.Excel.ITableGenerator.Instantiate(Table table)
		{
			return null;
		}
	}
	[Token(Token = "0x2000408")]
	public abstract class TableMapperBase<T> : MapperBase<T> where T : TableMapperBase<T>
	{
		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly List<int> excludes;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int index;

		[Token(Token = "0x6001734")]
		protected TableMapperBase(Type type)
		{
		}

		[Token(Token = "0x6001735")]
		public override void Extract()
		{
		}

		[Token(Token = "0x6001736")]
		public T Exclude(params int[] rows)
		{
			return null;
		}

		[Token(Token = "0x6001737")]
		public T Include(params int[] rows)
		{
			return null;
		}

		[Token(Token = "0x6001738")]
		public T IncludeAll()
		{
			return null;
		}
	}
}
namespace GameCore
{
	[Token(Token = "0x200040A")]
	public class BaseGameEvent : IGameEvent
	{
		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GameObject mSender;

		[Token(Token = "0x17000276")]
		public GameObject Sender
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x106E430", Offset = "0x106E430", VA = "0x106E430", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x106E3F8", Offset = "0x106E3F8", VA = "0x106E3F8")]
		public BaseGameEvent()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x106E400", Offset = "0x106E400", VA = "0x106E400")]
		public BaseGameEvent(GameObject sender)
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class EventAggregator
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<Action<IGameEvent>>> _eventDictionary;

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x106E438", Offset = "0x106E438", VA = "0x106E438")]
		public static void AddListener(string eventId, Action<IGameEvent> callback)
		{
		}

		[Token(Token = "0x600173F")]
		public static void AddListener<T>(Action<IGameEvent> callback) where T : IGameEvent
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x106E5D8", Offset = "0x106E5D8", VA = "0x106E5D8")]
		public static void RemoveListener(string eventId, Action<IGameEvent> callback)
		{
		}

		[Token(Token = "0x6001741")]
		public static void RemoveListener<T>(Action<IGameEvent> callback) where T : IGameEvent
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x106E69C", Offset = "0x106E69C", VA = "0x106E69C")]
		public static void Publish(string eventId, IGameEvent ev)
		{
		}

		[Token(Token = "0x6001743")]
		public static void Publish<T>(T ev) where T : IGameEvent
		{
		}

		[Token(Token = "0x6001744")]
		public static void Publish<T>() where T : IGameEvent
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x106E964", Offset = "0x106E964", VA = "0x106E964")]
		public EventAggregator()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public interface IGameEvent
	{
		[Token(Token = "0x17000277")]
		GameObject Sender
		{
			[Token(Token = "0x6001747")]
			get;
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x200040D")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool playedOnce;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool preparing;

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x106EA04", Offset = "0x106EA04", VA = "0x106EA04")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x106EDA8", Offset = "0x106EDA8", VA = "0x106EDA8")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x106EDB8", Offset = "0x106EDB8", VA = "0x106EDB8", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x106F070", Offset = "0x106F070", VA = "0x106F070", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x106F1B0", Offset = "0x106F1B0", VA = "0x106F1B0", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x106F2C4", Offset = "0x106F2C4", VA = "0x106F2C4", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x106F490", Offset = "0x106F490", VA = "0x106F490", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x106F498", Offset = "0x106F498", VA = "0x106F498", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x106F4C0", Offset = "0x106F4C0", VA = "0x106F4C0", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x106F114", Offset = "0x106F114", VA = "0x106F114")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x106F244", Offset = "0x106F244", VA = "0x106F244")]
		public void PauseVideo()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x106ED24", Offset = "0x106ED24", VA = "0x106ED24")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x106EF10", Offset = "0x106EF10", VA = "0x106EF10")]
		private void SyncVideoToPlayable(Playable playable)
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x106F4C4", Offset = "0x106F4C4", VA = "0x106F4C4")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> m_Clips;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_Director;

		[Token(Token = "0x17000278")]
		internal PlayableDirector director
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0x106F4E0", Offset = "0x106F4E0", VA = "0x106F4E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001757")]
			[Address(RVA = "0x106F4E8", Offset = "0x106F4E8", VA = "0x106F4E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		internal IEnumerable<TimelineClip> clips
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0x106F4F0", Offset = "0x106F4F0", VA = "0x106F4F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001759")]
			[Address(RVA = "0x106F4F8", Offset = "0x106F4F8", VA = "0x106F4F8")]
			set
			{
			}
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x106F500", Offset = "0x106F500", VA = "0x106F500", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x106F9B4", Offset = "0x106F9B4", VA = "0x106F9B4")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040F")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[NotKeyable]
		public VideoClip videoClip;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[NotKeyable]
		public bool mute;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[NotKeyable]
		public bool loop;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[NotKeyable]
		public double preloadTime;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[NotKeyable]
		public double clipInTime;

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x106F9BC", Offset = "0x106F9BC", VA = "0x106F9BC", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x106FB1C", Offset = "0x106FB1C", VA = "0x106FB1C")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000410")]
	[TrackClipType(typeof(VideoScriptPlayableAsset))]
	[TrackColor(0.008f, 0.698f, 0.655f)]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x600175E")]
		[Address(RVA = "0x106FB38", Offset = "0x106FB38", VA = "0x106FB38", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x106FCA4", Offset = "0x106FCA4", VA = "0x106FCA4")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
namespace Conf
{
	[Token(Token = "0x2000411")]
	public class ConfCycler : MonoBehaviour
	{
		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> listOfEffects;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Loop length in seconds")]
		[SerializeField]
		private float loopTimeLength;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeOfLastInstantiate;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject instantiatedEffect;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int effectIndex;

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x106FCFC", Offset = "0x106FCFC", VA = "0x106FCFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x106FE54", Offset = "0x106FE54", VA = "0x106FE54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x106FFE8", Offset = "0x106FFE8", VA = "0x106FFE8")]
		public ConfCycler()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class ConfSceneSelect : MonoBehaviour
	{
		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool GUIHide;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool GUIHide2;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GUIHide3;

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x106FFF8", Offset = "0x106FFF8", VA = "0x106FFF8")]
		public void LoadSceneDemo01()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1070060", Offset = "0x1070060", VA = "0x1070060")]
		public void LoadSceneDemo02()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x10700C8", Offset = "0x10700C8", VA = "0x10700C8")]
		public void LoadSceneDemo03()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x1070130", Offset = "0x1070130", VA = "0x1070130")]
		public void LoadSceneDemo04()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1070198", Offset = "0x1070198", VA = "0x1070198")]
		public void LoadSceneDemo05()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1070200", Offset = "0x1070200", VA = "0x1070200")]
		public void LoadSceneDemo06()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x1070268", Offset = "0x1070268", VA = "0x1070268")]
		public void LoadSceneDemo07()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x10702D0", Offset = "0x10702D0", VA = "0x10702D0")]
		public void LoadSceneDemo08()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x1070338", Offset = "0x1070338", VA = "0x1070338")]
		public void LoadSceneDemo09()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x10703A0", Offset = "0x10703A0", VA = "0x10703A0")]
		public void LoadSceneDemo10()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x1070408", Offset = "0x1070408", VA = "0x1070408")]
		public void LoadSceneDemo11()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x1070470", Offset = "0x1070470", VA = "0x1070470")]
		public void LoadSceneDemo12()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x10704D8", Offset = "0x10704D8", VA = "0x10704D8")]
		public void LoadSceneDemo13()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x1070540", Offset = "0x1070540", VA = "0x1070540")]
		public void LoadSceneDemo14()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x10705A8", Offset = "0x10705A8", VA = "0x10705A8")]
		public void LoadSceneDemo15()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x1070610", Offset = "0x1070610", VA = "0x1070610")]
		public void LoadSceneDemo16()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1070678", Offset = "0x1070678", VA = "0x1070678")]
		public void LoadSceneDemo17()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x10706E0", Offset = "0x10706E0", VA = "0x10706E0")]
		public void LoadSceneDemo18()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x1070748", Offset = "0x1070748", VA = "0x1070748")]
		public void LoadSceneDemo19()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x10707B0", Offset = "0x10707B0", VA = "0x10707B0")]
		public void LoadSceneDemo20()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x1070818", Offset = "0x1070818", VA = "0x1070818")]
		public void LoadSceneDemo21()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x1070880", Offset = "0x1070880", VA = "0x1070880")]
		private void Update()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x10709E0", Offset = "0x10709E0", VA = "0x10709E0")]
		public ConfSceneSelect()
		{
		}
	}
}
[Token(Token = "0x2000413")]
public abstract class ª¬\u00a8®¬\u00af¢««±¢
{
	[StructLayout(3)]
	[Token(Token = "0x2000414")]
	[CompilerGenerated]
	private struct £¥«©£©©¦¢§¥ : IAsyncStateMachine
	{
		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x1071B20", Offset = "0x1071B20", VA = "0x1071B20", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1071C30", Offset = "0x1071C30", VA = "0x1071C30", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000415")]
	[CompilerGenerated]
	private struct «°¤\u00a8¥¤§ª¬¢® : IAsyncStateMachine
	{
		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<UnpluggedSavedData> <>t__builder;

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x1071C3C", Offset = "0x1071C3C", VA = "0x1071C3C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x1071D70", Offset = "0x1071D70", VA = "0x1071D70", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static string \u00a8\u00ad¤©¤ª¢\u00af§©¢;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static string ¦±«©©¤§°±¥±;

	[Token(Token = "0x1700027A")]
	protected virtual string °ª©¢\u00ad©«¦\u00ad±\u00ad
	{
		[Token(Token = "0x600177A")]
		[Address(RVA = "0x10709E8", Offset = "0x10709E8", VA = "0x10709E8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027B")]
	public virtual string ¤ª®¦¥«\u00ad«\u00af\u00afª
	{
		[Token(Token = "0x600177B")]
		[Address(RVA = "0x1070AB4", Offset = "0x1070AB4", VA = "0x1070AB4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027C")]
	public virtual bool ¢£\u00a8©¢©§¥¬\u00ad£
	{
		[Token(Token = "0x600177C")]
		[Address(RVA = "0x1070BC4", Offset = "0x1070BC4", VA = "0x1070BC4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700027D")]
	public virtual bool ¥«¢°±\u00ad«ª®£ª
	{
		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1070BE0", Offset = "0x1070BE0", VA = "0x1070BE0", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600177E")]
	[Address(RVA = "0x1070BE8", Offset = "0x1070BE8", VA = "0x1070BE8", Slot = "8")]
	public virtual void ¤±±¥¦§¬¢ª¤¬(UnpluggedSavedData §ª\u00af\u00a8°©¤°\u00ad«±, Action ¤ª©\u00a8\u00a8®©°«±±, Action<string> \u00af\u00af¬¦\u00af\u00a8®\u00ad\u00a8\u00a8¦)
	{
	}

	[Token(Token = "0x600177F")]
	[Address(RVA = "0x10710EC", Offset = "0x10710EC", VA = "0x10710EC", Slot = "9")]
	public virtual UnpluggedSavedData ¬\u00ad\u00ad¦¬¢¢¦¬¬©()
	{
		return null;
	}

	[Token(Token = "0x6001780")]
	[Address(RVA = "0x10716FC", Offset = "0x10716FC", VA = "0x10716FC", Slot = "10")]
	public virtual bool ±¤ª¬£\u00ad§£\u00af®¥()
	{
		return default(bool);
	}

	[Token(Token = "0x6001781")]
	[Address(RVA = "0x10717F0", Offset = "0x10717F0", VA = "0x10717F0", Slot = "11")]
	[AsyncStateMachine(typeof(£¥«©£©©¦¢§¥))]
	public virtual Task ¢¢±«±£\u00ad°°°¢(UnpluggedSavedData §ª\u00af\u00a8°©¤°\u00ad«±)
	{
		return null;
	}

	[Token(Token = "0x6001782")]
	[Address(RVA = "0x10718BC", Offset = "0x10718BC", VA = "0x10718BC", Slot = "12")]
	[AsyncStateMachine(typeof(«°¤\u00a8¥¤§ª¬¢®))]
	public virtual Task<UnpluggedSavedData> ®¤¢\u00af\u00af¤±§¢\u00a8¥()
	{
		return null;
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0x10719A8", Offset = "0x10719A8", VA = "0x10719A8")]
	protected ª¬\u00a8®¬\u00af¢««±¢()
	{
	}
}
[Token(Token = "0x2000416")]
public class §\u00a8ª\u00a8¢«¢\u00af¬®\u00af
{
	[Token(Token = "0x2000417")]
	[CompilerGenerated]
	private sealed class ©«¬\u00af¢©¦\u00a8±©¢
	{
		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AlbumID;

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1090E9C", Offset = "0x1090E9C", VA = "0x1090E9C")]
		public ©«¬\u00af¢©¦\u00a8±©¢()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x1090EA4", Offset = "0x1090EA4", VA = "0x1090EA4")]
		internal bool <GetAlbumStreamingAssetsAsync>b__0(AlbumData songListAsset)
		{
			return default(bool);
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000418")]
	[CompilerGenerated]
	private struct ¬©«§¦¢°ª¬§° : IAsyncStateMachine
	{
		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<List<SongMappingMetaData>> <>t__builder;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string AlbumID;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool replaceCurrenAlbumData;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AlbumData <sla>5__2;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SongMappingMetaData> <auxSongs>5__3;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SongAsset>.Enumerator <>7__wrap3;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SongAsset <file>5__5;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string <path>5__6;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityWebRequest <www>5__7;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UnityWebRequest <>7__wrap7;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private object <>u__1;

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x1090EC8", Offset = "0x1090EC8", VA = "0x1090EC8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x1091A14", Offset = "0x1091A14", VA = "0x1091A14", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000419")]
	[CompilerGenerated]
	private sealed class °°ª¢¥©©\u00a8§¤±
	{
		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AlbumID;

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x1091A6C", Offset = "0x1091A6C", VA = "0x1091A6C")]
		public °°ª¢¥©©\u00a8§¤±()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x1091A74", Offset = "0x1091A74", VA = "0x1091A74")]
		internal bool <GetAlbumStreamingAssets>b__0(AlbumData songListAsset)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200041A")]
	[CompilerGenerated]
	private sealed class £«ª\u00af±¢££\u00a8°±
	{
		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AlbumID;

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x1091A98", Offset = "0x1091A98", VA = "0x1091A98")]
		public £«ª\u00af±¢££\u00a8°±()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x1091AA0", Offset = "0x1091AA0", VA = "0x1091AA0")]
		internal bool <GetAlbumFromFolder>b__0(AlbumData songListAsset)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200041C")]
	[CompilerGenerated]
	private sealed class \u00af\u00a8ª\u00af¦\u00a8\u00af®¤\u00ad§
	{
		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StreamReader reader;

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1091B54", Offset = "0x1091B54", VA = "0x1091B54")]
		public \u00af\u00a8ª\u00af¦\u00a8\u00af®¤\u00ad§()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1091B5C", Offset = "0x1091B5C", VA = "0x1091B5C")]
		internal string <GetSongLevelFromUNPAsync>b__0()
		{
			return null;
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200041D")]
	[CompilerGenerated]
	private struct \u00af¤§°«\u00adª°\u00ad\u00af\u00ad : IAsyncStateMachine
	{
		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<SongMapping> <>t__builder;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongMappingMetaData song;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string dificulty;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private \u00af\u00a8ª\u00af¦\u00a8\u00af®¤\u00ad§ <>8__1;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DataContractSerializer <ser>5__3;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private XmlReader <xmlReader>5__4;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private object <>u__1;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskAwaiter<string> <>u__2;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TaskAwaiter<bool> <>u__3;

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1091B80", Offset = "0x1091B80", VA = "0x1091B80", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x10925C0", Offset = "0x10925C0", VA = "0x10925C0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool §°¢¬ª\u00af\u00a8\u00ad®\u00ad\u00ad;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<SongMappingMetaData> «®\u00af\u00ad°¥£¥\u00af¦©;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string °\u00af¦ª\u00ad\u00ad«®¢¬\u00af;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string §¤\u00af£\u00a8««¤°ª¥;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string «£\u00a8¢¢§¤¤\u00af\u00ad\u00ad;

	[Token(Token = "0x1400009A")]
	public static event Action<List<SongMappingMetaData>> ¢¦®©¬¥°®£\u00ad¤
	{
		[Token(Token = "0x6001803")]
		[Address(RVA = "0x108ADD0", Offset = "0x108ADD0", VA = "0x108ADD0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001805")]
		[Address(RVA = "0x108AFB8", Offset = "0x108AFB8", VA = "0x108AFB8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0x1071DC8", Offset = "0x1071DC8", VA = "0x1071DC8")]
	public static Task<List<SongMappingMetaData>> ¥\u00a8ª©\u00a8°®ª\u00af§±(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0x1071EEC", Offset = "0x1071EEC", VA = "0x1071EEC")]
	public static void °¦¢°¢ª\u00af¤¤¦¬(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0x107286C", Offset = "0x107286C", VA = "0x107286C")]
	public static void ®¤®¢°¢¥£«§\u00ad(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[SpecialName]
	[Token(Token = "0x600178C")]
	[Address(RVA = "0x10731A8", Offset = "0x10731A8", VA = "0x10731A8")]
	public static void §\u00ad\u00ad¥\u00ad£¥«\u00af¬©(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0x107329C", Offset = "0x107329C", VA = "0x107329C")]
	public static void «ª¤¤§®\u00ad¥¬¢©(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[SpecialName]
	[Token(Token = "0x600178E")]
	[Address(RVA = "0x1073C18", Offset = "0x1073C18", VA = "0x1073C18")]
	public static void °§ª£ª¤¬®¬£ª(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0x1073E94", Offset = "0x1073E94", VA = "0x1073E94")]
	public static void ¥£±£¢©¦\u00af®\u00a8£(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[SpecialName]
	[Token(Token = "0x6001791")]
	[Address(RVA = "0x10740B0", Offset = "0x10740B0", VA = "0x10740B0")]
	public static void ¥ª©¥\u00a8©¬¬ª£°(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x6001792")]
	[Address(RVA = "0x10741A4", Offset = "0x10741A4", VA = "0x10741A4")]
	public static SongMapping £ª\u00a8°°¦¢ª¥°¦(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x6001793")]
	[Address(RVA = "0x107483C", Offset = "0x107483C", VA = "0x107483C")]
	public static Task<SongMapping> °£¢\u00ad©§°£«§®(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0x107496C", Offset = "0x107496C", VA = "0x107496C")]
	public static byte[] ª\u00af¬¬ª¢°\u00a8±ª®(string \u00a8°ª±§§§©®§¤, string ¢«§®¢\u00ad§¤\u00af§©, byte[] ¤¦®°\u00a8±¦¢ª¤©)
	{
		return null;
	}

	[Token(Token = "0x6001795")]
	[Address(RVA = "0x1074AA0", Offset = "0x1074AA0", VA = "0x1074AA0")]
	public static void «ª®©¥¢\u00af¤ªª«(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0x1074C8C", Offset = "0x1074C8C", VA = "0x1074C8C")]
	public static void ©\u00ad¬©¬£§£¤±¥(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0x1074EDC", Offset = "0x1074EDC", VA = "0x1074EDC")]
	public static SongMappingMetaData «¬¥\u00af©\u00ad±«§«¦(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0x10756C8", Offset = "0x10756C8", VA = "0x10756C8")]
	public static void ¬°±§¥®¢\u00a8\u00af£¤(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[SpecialName]
	[Token(Token = "0x6001799")]
	[Address(RVA = "0x1075E64", Offset = "0x1075E64", VA = "0x1075E64")]
	public static void ¬®¤¥ª°\u00ad¢±©\u00af(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0x1075F58", Offset = "0x1075F58", VA = "0x1075F58")]
	public static Task<SongMapping> £¤¤\u00ad§°\u00af§®§¦(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0x1076088", Offset = "0x1076088", VA = "0x1076088")]
	public static List<SongMappingMetaData> ¤§©¦¦\u00ad¤±©¤¥(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600179C")]
	[Address(RVA = "0x1076F38", Offset = "0x1076F38", VA = "0x1076F38")]
	public static void ¥¦£¤§°«¦£±¢(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0x107702C", Offset = "0x107702C", VA = "0x107702C")]
	public static SongMappingMetaData ©««ª¤°¤£«¦§(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0x1077818", Offset = "0x1077818", VA = "0x1077818")]
	private static List<string> £¦ª¥£©\u00a8\u00a8\u00adª¦()
	{
		return null;
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0x1075AEC", Offset = "0x1075AEC", VA = "0x1075AEC")]
	private static List<string> ¤«°\u00ad¤§¢ª¬£©()
	{
		return null;
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0x10736C0", Offset = "0x10736C0", VA = "0x10736C0")]
	private static List<string> §°\u00a8¥©±§££±°()
	{
		return null;
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0x1073A50", Offset = "0x1073A50", VA = "0x1073A50")]
	private static SongMappingMetaData ¦®\u00a8¥®¦¢«¥ªª(string \u00a8°ª±§§§©®§¤)
	{
		return null;
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0x1073FA0", Offset = "0x1073FA0", VA = "0x1073FA0")]
	public static void \u00a8°ª®¬¥¦¦¬¤«(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0x1078188", Offset = "0x1078188", VA = "0x1078188")]
	public static Task<List<SongMappingMetaData>> £§§¦±«¢®¬±¥(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0x1072C20", Offset = "0x1072C20", VA = "0x1072C20")]
	private static List<string> ¬®®£«¤¬¬©¦¤()
	{
		return null;
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0x10782AC", Offset = "0x10782AC", VA = "0x10782AC")]
	public static void °£®ª£¤¢§¤\u00ad¤(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0x10786D0", Offset = "0x10786D0", VA = "0x10786D0")]
	public static void ª¥°§ª¥§¤¬¢\u00a8()
	{
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0x107890C", Offset = "0x107890C", VA = "0x107890C")]
	public static void ¤\u00af«§±°©§\u00a8¬°(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0x107922C", Offset = "0x107922C", VA = "0x107922C")]
	public static Task<List<SongMappingMetaData>> «\u00af©°\u00af¬±¦£¦°(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60017A9")]
	[Address(RVA = "0x1079350", Offset = "0x1079350", VA = "0x1079350")]
	public static void ¦¤¬¬¤°¥«\u00ad©§(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x60017AA")]
	[Address(RVA = "0x1079444", Offset = "0x1079444", VA = "0x1079444")]
	public static List<SongMappingMetaData> £©°\u00af®\u00af¦¢§¥¤(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0x107A380", Offset = "0x107A380", VA = "0x107A380")]
	public static SongMapping °®¤¦£¬©®§\u00ad±(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0x107A8E4", Offset = "0x107A8E4", VA = "0x107A8E4")]
	public static List<SongMappingMetaData> £¤¢¥\u00af¬¢¬©\u00a8¥(string ¤©¬«\u00af\u00af£¤¢¢¬, string ©®\u00af¬¬®«®ª¦\u00af)
	{
		return null;
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0x1072314", Offset = "0x1072314", VA = "0x1072314")]
	private static List<string> ¥\u00ad¬¥°£«©ª¤©()
	{
		return null;
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0x1072FB0", Offset = "0x1072FB0", VA = "0x1072FB0")]
	private static SongMappingMetaData °¬¤¦¢±«ª¢¤§(string \u00a8°ª±§§§©®§¤)
	{
		return null;
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0x107AEB4", Offset = "0x107AEB4", VA = "0x107AEB4")]
	public static SongMapping ¬®±§±«ª©¢¢\u00af(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x107B42C", Offset = "0x107B42C", VA = "0x107B42C")]
	public static SongMapping \u00a8±§§¢££±®\u00af¥(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x107B990", Offset = "0x107B990", VA = "0x107B990")]
	public static void ¥\u00af¢©\u00afªª®«¢«(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x1079CC8", Offset = "0x1079CC8", VA = "0x1079CC8")]
	public static SongMappingMetaData ª®®©°\u00a8¥©°¬¥(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x107BBB8", Offset = "0x107BBB8", VA = "0x107BBB8")]
	public static List<SongMappingMetaData> \u00a8ªª£¢±\u00ad¤¤\u00adª(string ¤©¬«\u00af\u00af£¤¢¢¬, string ©®\u00af¬¬®«®ª¦\u00af)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60017B4")]
	[Address(RVA = "0x107BD60", Offset = "0x107BD60", VA = "0x107BD60")]
	public static void §©¢§«¦®¢£¬ª(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x107BE54", Offset = "0x107BE54", VA = "0x107BE54")]
	public static SongMappingMetaData ®£°±§ª®ª\u00af¦¥(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x107C640", Offset = "0x107C640", VA = "0x107C640")]
	public static void \u00a8¤°±¥£§¥§©\u00ad(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0x107C750", Offset = "0x107C750", VA = "0x107C750")]
	public static List<SongMappingMetaData> ¦¬¢§±¤¤®\u00a8\u00a8\u00a8(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x107D68C", Offset = "0x107D68C", VA = "0x107D68C")]
	public static Task<List<SongMappingMetaData>> ¥®±\u00af£§§\u00ad¬®£(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0x107D7B0", Offset = "0x107D7B0", VA = "0x107D7B0")]
	public static void ®\u00a8®£§®¬«®®©(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0x107DDB0", Offset = "0x107DDB0", VA = "0x107DDB0")]
	public static SongMappingMetaData ¢©°±¦\u00af°¤\u00a8±\u00af(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0x1078D30", Offset = "0x1078D30", VA = "0x1078D30")]
	private static List<string> ¤¤¬¢¦°®\u00af§¤©()
	{
		return null;
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0x107E59C", Offset = "0x107E59C", VA = "0x107E59C")]
	public static void °©§©¤°¤\u00a8\u00ad\u00ad¥()
	{
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0x107E780", Offset = "0x107E780", VA = "0x107E780")]
	public static SongMappingMetaData ±©¦¥\u00ad\u00af\u00ad§\u00a8®£(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0x107EE38", Offset = "0x107EE38", VA = "0x107EE38")]
	public static Task<List<SongMappingMetaData>> §ª¢°¦«¦¤«¢°(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0x107E670", Offset = "0x107E670", VA = "0x107E670")]
	public static void £«¥\u00ad\u00a8®¢\u00ad¤±\u00a8(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x60017C0")]
	[Address(RVA = "0x107F088", Offset = "0x107F088", VA = "0x107F088")]
	public static void £°±®©°¤©«®\u00af(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[Token(Token = "0x60017C1")]
	[Address(RVA = "0x107FA04", Offset = "0x107FA04", VA = "0x107FA04")]
	public static List<SongMappingMetaData> £±£«¤©°\u00af©§®(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017C2")]
	[Address(RVA = "0x1080270", Offset = "0x1080270", VA = "0x1080270")]
	public static List<SongMappingMetaData> £\u00a8\u00af«§°°«¬©\u00a8(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0x1080AF4", Offset = "0x1080AF4", VA = "0x1080AF4")]
	private static List<string> \u00af®¥ª\u00ad®±©°«°()
	{
		return null;
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0x10790C0", Offset = "0x10790C0", VA = "0x10790C0")]
	private static SongMappingMetaData ª¤\u00a8¬£ª±°°¤«(string \u00a8°ª±§§§©®§¤)
	{
		return null;
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0x1080E84", Offset = "0x1080E84", VA = "0x1080E84")]
	public static Task<List<SongMappingMetaData>> ¤©¥\u00ad§\u00a8¤«ª¬¤(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0x1080FA8", Offset = "0x1080FA8", VA = "0x1080FA8")]
	public static Task<List<SongMappingMetaData>> °«¬¤ª®\u00a8°®®¦(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0x107F4B0", Offset = "0x107F4B0", VA = "0x107F4B0")]
	private static List<string> °\u00af§¥¢°¥¦«\u00ad\u00af()
	{
		return null;
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0x10810CC", Offset = "0x10810CC", VA = "0x10810CC")]
	public §\u00a8ª\u00a8¢«¢\u00af¬®\u00af()
	{
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0x10810D4", Offset = "0x10810D4", VA = "0x10810D4")]
	public static List<SongMappingMetaData> ®¥±§\u00af¦¦©¤ª¥(string ¤©¬«\u00af\u00af£¤¢¢¬, string ©®\u00af¬¬®«®ª¦\u00af)
	{
		return null;
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0x1081630", Offset = "0x1081630", VA = "0x1081630")]
	private static List<string> \u00af\u00af«\u00af¦¢®¤©£©()
	{
		return null;
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0x10726A4", Offset = "0x10726A4", VA = "0x10726A4")]
	private static SongMappingMetaData ¬\u00ad¦¤¤«ªª¤¤\u00ad(string \u00a8°ª±§§§©®§¤)
	{
		return null;
	}

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0x107F828", Offset = "0x107F828", VA = "0x107F828")]
	private static SongMappingMetaData ¦°§°£±¥\u00af¦ª£(string \u00a8°ª±§§§©®§¤)
	{
		return null;
	}

	[Token(Token = "0x60017CD")]
	[Address(RVA = "0x1082060", Offset = "0x1082060", VA = "0x1082060")]
	private static List<string> ®¬¤®°£\u00a8°¬¬®()
	{
		return null;
	}

	[Token(Token = "0x60017CE")]
	[Address(RVA = "0x10823F0", Offset = "0x10823F0", VA = "0x10823F0")]
	public static void \u00a8¬\u00ad¤¥\u00ad¬ª§§¬()
	{
	}

	[Token(Token = "0x60017CF")]
	[Address(RVA = "0x108262C", Offset = "0x108262C", VA = "0x108262C")]
	public static SongMapping \u00ad¢©\u00ad«£\u00a8\u00a8¥\u00ad¬(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017D0")]
	[Address(RVA = "0x107E468", Offset = "0x107E468", VA = "0x107E468")]
	public static byte[] ª®¢±¬\u00ad°¢±¥\u00af(string \u00a8°ª±§§§©®§¤, string ¢«§®¢\u00ad§¤\u00af§©, byte[] ¤¦®°\u00a8±¦¢ª¤©)
	{
		return null;
	}

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0x1082B90", Offset = "0x1082B90", VA = "0x1082B90")]
	public static void ±\u00a8\u00a8\u00a8©ª¬\u00ad©«ª(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0x107AA8C", Offset = "0x107AA8C", VA = "0x107AA8C")]
	public static void ¤©¥ª°¢«\u00a8¬\u00af±(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[Token(Token = "0x60017D3")]
	[Address(RVA = "0x1082FB4", Offset = "0x1082FB4", VA = "0x1082FB4")]
	public static List<SongMappingMetaData> ¤¥§§\u00a8¬\u00a8¤©§\u00af(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017D4")]
	[Address(RVA = "0x108384C", Offset = "0x108384C", VA = "0x108384C")]
	public static Task<SongMapping> £«§¦\u00af\u00ad±±±©\u00af(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0x108397C", Offset = "0x108397C", VA = "0x108397C")]
	public static void §ª¦£¦§ª°®\u00af¥()
	{
	}

	[Token(Token = "0x60017D6")]
	[Address(RVA = "0x107BA84", Offset = "0x107BA84", VA = "0x107BA84")]
	public static byte[] ±¢\u00af\u00ad§¦¬®£°¦(string \u00a8°ª±§§§©®§¤, string ¢«§®¢\u00ad§¤\u00af§©, byte[] ¤¦®°\u00a8±¦¢ª¤©)
	{
		return null;
	}

	[Token(Token = "0x60017D7")]
	[Address(RVA = "0x1083BB8", Offset = "0x1083BB8", VA = "0x1083BB8")]
	private static List<string> \u00ad\u00ad±°°©¬°©¢¤()
	{
		return null;
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0x1083F30", Offset = "0x1083F30", VA = "0x1083F30")]
	public static Task<SongMapping> §¢¥¥«¦§\u00af±±°(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017D9")]
	[Address(RVA = "0x1084060", Offset = "0x1084060", VA = "0x1084060")]
	public static Task<List<SongMappingMetaData>> °®ªª£¤®©±¬°(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0x1074DB4", Offset = "0x1074DB4", VA = "0x1074DB4")]
	public static void ©¤«¢¥¤®§®¤°(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0x10768F4", Offset = "0x10768F4", VA = "0x10768F4")]
	public static SongMappingMetaData «£¬®¦¦¬¥±£¥(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0x1084184", Offset = "0x1084184", VA = "0x1084184")]
	public static void \u00af¥¦¬°°®§ª£§()
	{
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0x1084258", Offset = "0x1084258", VA = "0x1084258")]
	public static void «¥¤\u00af±ª¦¦«\u00af\u00a8()
	{
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0x1084494", Offset = "0x1084494", VA = "0x1084494")]
	public static void ¬§±¤¤±®°¥£«(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x60017DF")]
	[Address(RVA = "0x1074708", Offset = "0x1074708", VA = "0x1074708")]
	public static byte[] ©¥±°®\u00af¥¤±\u00a8\u00ad(string \u00a8°ª±§§§©®§¤, string ¢«§®¢\u00ad§¤\u00af§©, byte[] ¤¦®°\u00a8±¦¢ª¤©)
	{
		return null;
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0x10845BC", Offset = "0x10845BC", VA = "0x10845BC")]
	public static void §\u00af¬©¬°ª£±ª\u00a8()
	{
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0x107CFD4", Offset = "0x107CFD4", VA = "0x107CFD4")]
	public static SongMappingMetaData \u00afª£ª£\u00a8±°¬£¥(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0x10847F8", Offset = "0x10847F8", VA = "0x10847F8")]
	public static void ¦¢\u00af¬¦©«§¦£®()
	{
	}

	[Token(Token = "0x60017E3")]
	[Address(RVA = "0x10848CC", Offset = "0x10848CC", VA = "0x10848CC")]
	public static SongMapping §®ª£§\u00af¬¤¥¬©(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017E4")]
	[Address(RVA = "0x10776E4", Offset = "0x10776E4", VA = "0x10776E4")]
	public static byte[] ¬¢¢¬®\u00ad¢¢¤©°(string \u00a8°ª±§§§©®§¤, string ¢«§®¢\u00ad§¤\u00af§©, byte[] ¤¦®°\u00a8±¦¢ª¤©)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60017E5")]
	[Address(RVA = "0x1084E44", Offset = "0x1084E44", VA = "0x1084E44")]
	public static void °¤¥±«\u00af\u00ad¤ª¢¢(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0x1084F38", Offset = "0x1084F38", VA = "0x1084F38")]
	public static SongMappingMetaData ¤£\u00adª«ª\u00ad¦©¢¢(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x60017E7")]
	[Address(RVA = "0x1085588", Offset = "0x1085588", VA = "0x1085588")]
	public static List<SongMappingMetaData> ®\u00af¬¢©\u00af\u00af°°\u00a8\u00ad(string ¤©¬«\u00af\u00af£¤¢¢¬, string ©®\u00af¬¬®«®ª¦\u00af)
	{
		return null;
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0x1085730", Offset = "0x1085730", VA = "0x1085730")]
	public static byte[] ¤®¤¥±\u00ad©ª\u00a8ª\u00ad(string \u00a8°ª±§§§©®§¤, string ¢«§®¢\u00ad§¤\u00af§©, byte[] ¤¦®°\u00a8±¦¢ª¤©)
	{
		return null;
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0x1085864", Offset = "0x1085864", VA = "0x1085864")]
	public static Task<List<SongMappingMetaData>> ¥°«¥¤ª\u00af¢¢\u00a8ª(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0x1085988", Offset = "0x1085988", VA = "0x1085988")]
	private static List<string> °±®§«®£ª§¬¬()
	{
		return null;
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0x10819A8", Offset = "0x10819A8", VA = "0x10819A8")]
	public static SongMappingMetaData ¦\u00af§£¢\u00a8°¤\u00a8ª®(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0x1085D00", Offset = "0x1085D00", VA = "0x1085D00")]
	public static List<SongMappingMetaData> \u00ad¬ª¤\u00af££¥¬\u00a8«(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60017ED")]
	[Address(RVA = "0x1086594", Offset = "0x1086594", VA = "0x1086594")]
	public static void ¦¤«°£«ª¥\u00af¦¦(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0x1086688", Offset = "0x1086688", VA = "0x1086688")]
	public static SongMapping ®\u00a8ª§\u00af¤¦§\u00ad±\u00af(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017EF")]
	[Address(RVA = "0x1086BEC", Offset = "0x1086BEC", VA = "0x1086BEC")]
	public static void £\u00adª±«\u00a8£©¤¢±()
	{
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0x1086CC0", Offset = "0x1086CC0", VA = "0x1086CC0")]
	public static void \u00a8¢\u00afª¥°¤¦¥«ª()
	{
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0x1086EFC", Offset = "0x1086EFC", VA = "0x1086EFC")]
	public static SongMapping ¥®£¦ªª¥«\u00adª§(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0x1087474", Offset = "0x1087474", VA = "0x1087474")]
	public static void ±¢¤\u00a8§¬\u00ad¬\u00af©®(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0x1075594", Offset = "0x1075594", VA = "0x1075594")]
	public static byte[] °¥¤¦§¤©¢§¤\u00ad(string \u00a8°ª±§§§©®§¤, string ¢«§®¢\u00ad§¤\u00af§©, byte[] ¤¦®°\u00a8±¦¢ª¤©)
	{
		return null;
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0x108789C", Offset = "0x108789C", VA = "0x108789C")]
	public static Task<List<SongMappingMetaData>> ¦\u00af®¢ª¬¥\u00af¥©£(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60017F5")]
	[Address(RVA = "0x10879C0", Offset = "0x10879C0", VA = "0x10879C0")]
	public static void ©®¢ª¥¦¤\u00afªª±(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0x1087AB4", Offset = "0x1087AB4", VA = "0x1087AB4")]
	public static SongMapping £©£¦\u00ad¤\u00a8®±\u00a8¢(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0x1088018", Offset = "0x1088018", VA = "0x1088018")]
	public static List<SongMappingMetaData> \u00af\u00a8¥¢\u00a8©\u00af¤°«¢(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0x1088880", Offset = "0x1088880", VA = "0x1088880")]
	public static SongMapping \u00af\u00ad©¢¥¬\u00af±±®±(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0x1088DF8", Offset = "0x1088DF8", VA = "0x1088DF8")]
	public static SongMapping ®¦±ª°¦ª¥§\u00af«(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0x108932C", Offset = "0x108932C", VA = "0x108932C")]
	private static List<string> §«¥±£®±¦\u00af§£()
	{
		return null;
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0x10896BC", Offset = "0x10896BC", VA = "0x10896BC")]
	public static List<SongMappingMetaData> ¥°°¬¤©¦¢®§¢(string ¤©¬«\u00af\u00af£¤¢¢¬, string ©®\u00af¬¬®«®ª¦\u00af)
	{
		return null;
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0x1089864", Offset = "0x1089864", VA = "0x1089864")]
	[AsyncStateMachine(typeof(\u00af¤§°«\u00adª°\u00ad\u00af\u00ad))]
	public static Task<SongMapping> ¦\u00ad£¥°§¤\u00a8ª®\u00a8(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0x1089994", Offset = "0x1089994", VA = "0x1089994")]
	public static List<SongMappingMetaData> ¬\u00af±¬ª\u00a8\u00ad¢®©£(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0x108A22C", Offset = "0x108A22C", VA = "0x108A22C")]
	public static Task<SongMapping> ®¤¬±§ª£¥©¢§(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0x108A35C", Offset = "0x108A35C", VA = "0x108A35C")]
	public static void ¤¥¤¬¢ª«\u00af¦¤¤()
	{
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0x108A430", Offset = "0x108A430", VA = "0x108A430")]
	private static List<string> ¢\u00a8¢§±\u00a8£®\u00adª¦()
	{
		return null;
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0x108A7A8", Offset = "0x108A7A8", VA = "0x108A7A8")]
	public static SongMapping §©\u00af\u00af§\u00af¦±£¤±(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6001802")]
	[Address(RVA = "0x108ACDC", Offset = "0x108ACDC", VA = "0x108ACDC")]
	public static void \u00ad¬\u00af°«£¤¦¥£¬(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[SpecialName]
	[Token(Token = "0x6001804")]
	[Address(RVA = "0x108AEC4", Offset = "0x108AEC4", VA = "0x108AEC4")]
	public static void °±¤¬¦¢§®\u00a8££(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0x108B0AC", Offset = "0x108B0AC", VA = "0x108B0AC")]
	public static void £¢\u00a8¢¤¢£¦°¥±()
	{
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0x108B28C", Offset = "0x108B28C", VA = "0x108B28C")]
	public static void °¦©\u00af\u00af\u00ad\u00adª¢®£()
	{
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0x108B360", Offset = "0x108B360", VA = "0x108B360")]
	public static void ª§¢¤©§©©ª©£()
	{
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0x108127C", Offset = "0x108127C", VA = "0x108127C")]
	public static void ªª«®®¤®©§©¥(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0x108B434", Offset = "0x108B434", VA = "0x108B434")]
	public static List<SongMappingMetaData> ¥©\u00a8¬\u00af®©£§\u00ad¤(string ¤©¬«\u00af\u00af£¤¢¢¬, string ©®\u00af¬¬®«®ª¦\u00af)
	{
		return null;
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0x108B5DC", Offset = "0x108B5DC", VA = "0x108B5DC")]
	public static SongMapping §°¦\u00ad§¬©±ª¢¤(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0x108BB40", Offset = "0x108BB40", VA = "0x108BB40")]
	[AsyncStateMachine(typeof(¬©«§¦¢°ª¬§°))]
	public static Task<List<SongMappingMetaData>> ª§¦ª§¤«£¤¥¦(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0x108BC64", Offset = "0x108BC64", VA = "0x108BC64")]
	public static void ¢±±\u00a8¢«°±±\u00ad£(List<SongMappingMetaData> ¥®¦«®\u00a8\u00af°°\u00a8«)
	{
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0x108B180", Offset = "0x108B180", VA = "0x108B180")]
	public static void ¤¢ª£ª¤¢¥\u00a8¤\u00a8(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0x108C018", Offset = "0x108C018", VA = "0x108C018")]
	public static Task<List<SongMappingMetaData>> ¤©§¤°¤§§¤¦¢(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6001810")]
	[Address(RVA = "0x108C13C", Offset = "0x108C13C", VA = "0x108C13C")]
	public static void ©ªª¦£°\u00af¥«°¤(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0x108C230", Offset = "0x108C230", VA = "0x108C230")]
	public static List<SongMappingMetaData> «°¬°¬°\u00a8±¦¢©(string ¤©¬«\u00af\u00af£¤¢¢¬, string ©®\u00af¬¬®«®ª¦\u00af)
	{
		return null;
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0x108C3D8", Offset = "0x108C3D8", VA = "0x108C3D8")]
	public static Task<List<SongMappingMetaData>> ¦ª¢¢¦±©©¦©¢(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0x108C4FC", Offset = "0x108C4FC", VA = "0x108C4FC")]
	public static Task<List<SongMappingMetaData>> \u00af\u00ad¥®±\u00af¤®ªª¢(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0x108C620", Offset = "0x108C620", VA = "0x108C620")]
	public static List<SongMappingMetaData> ¤±¢«¢\u00a8¥«¥«\u00af(string ¤©¬«\u00af\u00af£¤¢¢¬, string ©®\u00af¬¬®«®ª¦\u00af)
	{
		return null;
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0x108C7C8", Offset = "0x108C7C8", VA = "0x108C7C8")]
	public static SongMapping ©\u00afªªª«¥©°\u00af¬(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0x108CCFC", Offset = "0x108CCFC", VA = "0x108CCFC")]
	private static SongMappingMetaData ©¢¬\u00af§°¢\u00adª©±(string \u00a8°ª±§§§©®§¤)
	{
		return null;
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0x108CEC4", Offset = "0x108CEC4", VA = "0x108CEC4")]
	public static List<SongMappingMetaData> £§¢¤©\u00af±¬ª¬°(string ¤©¬«\u00af\u00af£¤¢¢¬, string ©®\u00af¬¬®«®ª¦\u00af)
	{
		return null;
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0x108D06C", Offset = "0x108D06C", VA = "0x108D06C")]
	public static Task<List<SongMappingMetaData>> ª\u00ad\u00ad¤©§£§ª±§(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x6001819")]
	[Address(RVA = "0x108D190", Offset = "0x108D190", VA = "0x108D190")]
	public static List<SongMappingMetaData> «ª¦\u00af§\u00a8\u00ad«±°¥(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x600181A")]
	[Address(RVA = "0x1074BA8", Offset = "0x1074BA8", VA = "0x1074BA8")]
	public static void ¢\u00af±¦©§¦®\u00ad¤¥(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0x107EF5C", Offset = "0x107EF5C", VA = "0x107EF5C")]
	public static void \u00ad\u00a8¦°°¢¥¢§\u00ad\u00af(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0x1077BA8", Offset = "0x1077BA8", VA = "0x1077BA8")]
	public static SongMappingMetaData ¤§«¢±§\u00a8¥§§\u00a8(byte[] ®¬ª£¬«°\u00af§\u00ad¥, string ¥ª©®¦®£\u00a8ª¤¦)
	{
		return null;
	}

	[Token(Token = "0x600181D")]
	[Address(RVA = "0x108DA10", Offset = "0x108DA10", VA = "0x108DA10")]
	public static void \u00afª«¥\u00a8°\u00ad£\u00af¬¥()
	{
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0x108DC4C", Offset = "0x108DC4C", VA = "0x108DC4C")]
	public static SongMapping ±«¢\u00af¦¬£°«©\u00a8(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600181F")]
	[Address(RVA = "0x108E180", Offset = "0x108E180", VA = "0x108E180")]
	public static void ¤\u00af¥¢««£§§©©(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0x108E274", Offset = "0x108E274", VA = "0x108E274")]
	public static Task<List<SongMappingMetaData>> ¬£\u00af¬±¢ª¢¢§£(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0x108E398", Offset = "0x108E398", VA = "0x108E398")]
	public static SongMapping ¤£\u00a8©\u00a8¥«¬¬«¦(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6001822")]
	[Address(RVA = "0x108E8CC", Offset = "0x108E8CC", VA = "0x108E8CC")]
	public static void °¥\u00ad°©¤©®\u00af¥¤(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0x108E9C0", Offset = "0x108E9C0", VA = "0x108E9C0")]
	public static void ©¥¥±\u00af©¤¦¢£°()
	{
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0x107C50C", Offset = "0x107C50C", VA = "0x107C50C")]
	public static byte[] \u00ad\u00a8\u00a8\u00a8¤ª«ª«¢©(string \u00a8°ª±§§§©®§¤, string ¢«§®¢\u00ad§¤\u00af§©, byte[] ¤¦®°\u00a8±¦¢ª¤©)
	{
		return null;
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0x108EBFC", Offset = "0x108EBFC", VA = "0x108EBFC")]
	public static SongMapping ¥®ª©£¥\u00a8\u00a8¥§\u00af(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0x108F130", Offset = "0x108F130", VA = "0x108F130")]
	public static SongMapping §§\u00af¢«\u00a8£\u00a8¬¢¬(SongMappingMetaData ¦¦¤¥¢©§±§°£, string ª§«±°ª¤\u00a8®®®, bool ¬±¥¤\u00af¥±¤¤¦¬ = false)
	{
		return null;
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0x108F664", Offset = "0x108F664", VA = "0x108F664")]
	public static void ¢®\u00ad£«\u00a8©¤£«§()
	{
	}

	[Token(Token = "0x6001828")]
	[Address(RVA = "0x108F738", Offset = "0x108F738", VA = "0x108F738")]
	private static SongMappingMetaData ¬£§«§£®£¤¢ª(string \u00a8°ª±§§§©®§¤)
	{
		return null;
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0x108F900", Offset = "0x108F900", VA = "0x108F900")]
	public static void §±©\u00af¬£®\u00ad\u00ad°\u00ad(string \u00adª§§§§§°©\u00a8«)
	{
	}

	[Token(Token = "0x600182A")]
	[Address(RVA = "0x107DBD4", Offset = "0x107DBD4", VA = "0x107DBD4")]
	private static SongMappingMetaData \u00af±£°\u00a8\u00a8\u00ad°¤±\u00a8(string \u00a8°ª±§§§©®§¤)
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600182B")]
	[Address(RVA = "0x108FA08", Offset = "0x108FA08", VA = "0x108FA08")]
	public static void \u00a8¥¤\u00ad\u00a8±¤°«\u00ad¬(Action<List<SongMappingMetaData>> £\u00af\u00ad°\u00af®\u00a8¬©¤°)
	{
	}

	[Token(Token = "0x600182C")]
	[Address(RVA = "0x108FAFC", Offset = "0x108FAFC", VA = "0x108FAFC")]
	public static Task<List<SongMappingMetaData>> ª°ª¥\u00a8ª¤¤¦°±(string ¤©¬«\u00af\u00af£¤¢¢¬, bool \u00ad«°¤¥\u00af§°¢¦ª = false)
	{
		return null;
	}

	[Token(Token = "0x600182D")]
	[Address(RVA = "0x108FC20", Offset = "0x108FC20", VA = "0x108FC20")]
	public static void ¢¤¢§ª¬¬°±§¦()
	{
	}

	[Token(Token = "0x600182E")]
	[Address(RVA = "0x108FCF4", Offset = "0x108FCF4", VA = "0x108FCF4")]
	public static List<SongMappingMetaData> ¢®\u00ad±«§ª©¤±\u00af(string ¤©¬«\u00af\u00af£¤¢¢¬, string ©®\u00af¬¬®«®ª¦\u00af)
	{
		return null;
	}
}
namespace Unplugged.Model
{
	[Serializable]
	[Token(Token = "0x200041E")]
	[DataContract(Namespace = "http://schemas.datacontract.org/2004/07/", Name = "SongLevelData")]
	public class SongMappingMetaData
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsBuiltIn;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FileName;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D thumbnail;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string BandName;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string SongName;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string LevelAuthorName;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string SongID;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float InitialDelay;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool IsMultiTrack;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SongAsset SongAsset;

		[Token(Token = "0x1700027E")]
		public Texture2D Thumbnail
		{
			[Token(Token = "0x600183E")]
			[Address(RVA = "0x1092618", Offset = "0x1092618", VA = "0x1092618")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183F")]
			[Address(RVA = "0x1092738", Offset = "0x1092738", VA = "0x1092738")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public string UNPPath
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0x1092550", Offset = "0x1092550", VA = "0x1092550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public bool IsLocked
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0x10929A8", Offset = "0x10929A8", VA = "0x10929A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000281")]
		[DataMember(Name = "BandName")]
		public string internalBandName
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0x1092BC4", Offset = "0x1092BC4", VA = "0x1092BC4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001846")]
			[Address(RVA = "0x1092BCC", Offset = "0x1092BCC", VA = "0x1092BCC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		[DataMember(Name = "SongName")]
		public string internalSongName
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0x1092BD4", Offset = "0x1092BD4", VA = "0x1092BD4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001848")]
			[Address(RVA = "0x1092BDC", Offset = "0x1092BDC", VA = "0x1092BDC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		[DataMember(Name = "LevelAuthorName")]
		public string internalLevelAuthorName
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0x1092BE4", Offset = "0x1092BE4", VA = "0x1092BE4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x1092BEC", Offset = "0x1092BEC", VA = "0x1092BEC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		[DataMember(Name = "LevelID")]
		public string internalSongID
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0x1092BF4", Offset = "0x1092BF4", VA = "0x1092BF4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600184C")]
			[Address(RVA = "0x1092BFC", Offset = "0x1092BFC", VA = "0x1092BFC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		[DataMember(Name = "InitialDelay")]
		public float internalInitialDelay
		{
			[Token(Token = "0x600184D")]
			[Address(RVA = "0x1092C04", Offset = "0x1092C04", VA = "0x1092C04")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600184E")]
			[Address(RVA = "0x1092C0C", Offset = "0x1092C0C", VA = "0x1092C0C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		[DataMember(Name = "IsMultiTrack")]
		public bool internalIsMultiTrack
		{
			[Token(Token = "0x600184F")]
			[Address(RVA = "0x1092C14", Offset = "0x1092C14", VA = "0x1092C14")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001850")]
			[Address(RVA = "0x1092C1C", Offset = "0x1092C1C", VA = "0x1092C1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x1092740", Offset = "0x1092740", VA = "0x1092740")]
		public void GetTexture(Action<Texture2D> onLoad)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x109294C", Offset = "0x109294C", VA = "0x109294C")]
		public SongSavedData GetSavedState()
		{
			return null;
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x1092B68", Offset = "0x1092B68", VA = "0x1092B68")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x1092C28", Offset = "0x1092C28", VA = "0x1092C28")]
		public SongMappingMetaData()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000420")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000287")]
		public bool Highlight
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0x1092CF0", Offset = "0x1092CF0", VA = "0x1092CF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001855")]
			[Address(RVA = "0x1092CF8", Offset = "0x1092CF8", VA = "0x1092CF8")]
			set
			{
			}
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x1092D04", Offset = "0x1092D04", VA = "0x1092D04")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x1092EA4", Offset = "0x1092EA4", VA = "0x1092EA4", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1092EC0", Offset = "0x1092EC0", VA = "0x1092EC0", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x1092EDC", Offset = "0x1092EDC", VA = "0x1092EDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x1092DB0", Offset = "0x1092DB0", VA = "0x1092DB0")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x1093190", Offset = "0x1093190", VA = "0x1093190")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000288")]
		public bool InRange
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0x1093208", Offset = "0x1093208", VA = "0x1093208")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600185E")]
			[Address(RVA = "0x1093210", Offset = "0x1093210", VA = "0x1093210")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public bool Targeted
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0x109337C", Offset = "0x109337C", VA = "0x109337C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001860")]
			[Address(RVA = "0x1093384", Offset = "0x1093384", VA = "0x1093384")]
			set
			{
			}
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x1093390", Offset = "0x1093390", VA = "0x1093390", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x109321C", Offset = "0x109321C", VA = "0x109321C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x1093580", Offset = "0x1093580", VA = "0x1093580")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000422")]
	[RequireComponent(typeof(Rigidbody))]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700028A")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001864")]
			[Address(RVA = "0x1093588", Offset = "0x1093588", VA = "0x1093588")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001865")]
			[Address(RVA = "0x1093590", Offset = "0x1093590", VA = "0x1093590")]
			set
			{
			}
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x10935AC", Offset = "0x10935AC", VA = "0x10935AC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x10937B8", Offset = "0x10937B8", VA = "0x10937B8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x10940A4", Offset = "0x10940A4", VA = "0x10940A4", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x109460C", Offset = "0x109460C", VA = "0x109460C", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1094A1C", Offset = "0x1094A1C", VA = "0x1094A1C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x10939E0", Offset = "0x10939E0", VA = "0x10939E0")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1094B08", Offset = "0x1094B08", VA = "0x1094B08")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1094F08", Offset = "0x1094F08", VA = "0x1094F08", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x1094F20", Offset = "0x1094F20", VA = "0x1094F20", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x1094F28", Offset = "0x1094F28", VA = "0x1094F28")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000424")]
		public enum CrosshairState
		{
			[Token(Token = "0x400160C")]
			Disabled,
			[Token(Token = "0x400160D")]
			Enabled,
			[Token(Token = "0x400160E")]
			Targeted
		}

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1094F48", Offset = "0x1094F48", VA = "0x1094F48")]
		private void Start()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x10934F4", Offset = "0x10934F4", VA = "0x10934F4")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1094FB0", Offset = "0x1094FB0", VA = "0x1094FB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x1094FE8", Offset = "0x1094FE8", VA = "0x1094FE8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x1094FF0", Offset = "0x1094FF0", VA = "0x1094FF0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x109509C", Offset = "0x109509C", VA = "0x109509C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x1095144", Offset = "0x1095144", VA = "0x1095144")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001877")]
		[Address(RVA = "0x109514C", Offset = "0x109514C", VA = "0x109514C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x1095238", Offset = "0x1095238", VA = "0x1095238")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x1095244", Offset = "0x1095244", VA = "0x1095244")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x1095250", Offset = "0x1095250", VA = "0x1095250")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x1095258", Offset = "0x1095258", VA = "0x1095258")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x10952A8", Offset = "0x10952A8", VA = "0x10952A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x1095680", Offset = "0x1095680", VA = "0x1095680")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x109576C", Offset = "0x109576C", VA = "0x109576C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x10952AC", Offset = "0x10952AC", VA = "0x10952AC")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x1095858", Offset = "0x1095858", VA = "0x1095858")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000429")]
		public enum ContactTest
		{
			[Token(Token = "0x4001625")]
			PerpenTest,
			[Token(Token = "0x4001626")]
			BackwardsPress
		}

		[Token(Token = "0x4001616")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001617")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700028B")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0x1095930", Offset = "0x1095930", VA = "0x1095930", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028C")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0x1095938", Offset = "0x1095938", VA = "0x1095938")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700028D")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6001883")]
			[Address(RVA = "0x1095944", Offset = "0x1095944", VA = "0x1095944")]
			[CompilerGenerated]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6001884")]
			[Address(RVA = "0x109594C", Offset = "0x109594C", VA = "0x109594C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1095954", Offset = "0x1095954", VA = "0x1095954", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1095AA4", Offset = "0x1095AA4", VA = "0x1095AA4")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x1095CAC", Offset = "0x1095CAC", VA = "0x1095CAC", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x1096270", Offset = "0x1096270", VA = "0x1096270")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x10963D8", Offset = "0x10963D8", VA = "0x10963D8")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x1096194", Offset = "0x1096194", VA = "0x1096194")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x10964E4", Offset = "0x10964E4", VA = "0x10964E4")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x10965F0", Offset = "0x10965F0", VA = "0x10965F0")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x1096678", Offset = "0x1096678", VA = "0x1096678")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x1700028E")]
		public Collider Collider
		{
			[Token(Token = "0x600188E")]
			[Address(RVA = "0x109679C", Offset = "0x109679C", VA = "0x109679C", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600188F")]
			[Address(RVA = "0x10967A4", Offset = "0x10967A4", VA = "0x10967A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0x10967AC", Offset = "0x10967AC", VA = "0x10967AC", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001891")]
			[Address(RVA = "0x10967B4", Offset = "0x10967B4", VA = "0x10967B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0x10967BC", Offset = "0x10967BC", VA = "0x10967BC", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x109680C", Offset = "0x109680C", VA = "0x109680C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x10968A0", Offset = "0x10968A0", VA = "0x10968A0")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000291")]
		Collider Collider
		{
			[Token(Token = "0x6001895")]
			get;
		}

		[Token(Token = "0x17000292")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001896")]
			get;
		}

		[Token(Token = "0x17000293")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001897")]
			get;
		}
	}
	[Token(Token = "0x200042C")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x1095C00", Offset = "0x1095C00", VA = "0x1095C00")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200042D")]
	public enum InteractionType
	{
		[Token(Token = "0x400162F")]
		Enter,
		[Token(Token = "0x4001630")]
		Stay,
		[Token(Token = "0x4001631")]
		Exit
	}
	[Token(Token = "0x200042E")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200042F")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001643")]
			Mesh,
			[Token(Token = "0x4001644")]
			Skeleton,
			[Token(Token = "0x4001645")]
			Both
		}

		[Token(Token = "0x2000430")]
		[CompilerGenerated]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700029F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018BA")]
				[Address(RVA = "0x1097D00", Offset = "0x1097D00", VA = "0x1097D00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018BC")]
				[Address(RVA = "0x1097D48", Offset = "0x1097D48", VA = "0x1097D48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x10972F8", Offset = "0x10972F8", VA = "0x10972F8")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60018B8")]
			[Address(RVA = "0x1097AE0", Offset = "0x1097AE0", VA = "0x1097AE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B9")]
			[Address(RVA = "0x1097AE4", Offset = "0x1097AE4", VA = "0x1097AE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x1097D08", Offset = "0x1097D08", VA = "0x1097D08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001632")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x17000294")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001899")]
			[Address(RVA = "0x10968A8", Offset = "0x10968A8", VA = "0x10968A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600189A")]
			[Address(RVA = "0x10968D4", Offset = "0x10968D4", VA = "0x10968D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600189B")]
			[Address(RVA = "0x1096938", Offset = "0x1096938", VA = "0x1096938")]
			get
			{
				return null;
			}
			[Token(Token = "0x600189C")]
			[Address(RVA = "0x1096964", Offset = "0x1096964", VA = "0x1096964")]
			private set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600189D")]
			[Address(RVA = "0x10969C8", Offset = "0x10969C8", VA = "0x10969C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600189E")]
			[Address(RVA = "0x10969F4", Offset = "0x10969F4", VA = "0x10969F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600189F")]
			[Address(RVA = "0x1096A58", Offset = "0x1096A58", VA = "0x1096A58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x1096A84", Offset = "0x1096A84", VA = "0x1096A84")]
			private set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x1096AE8", Offset = "0x1096AE8", VA = "0x1096AE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x1096B14", Offset = "0x1096B14", VA = "0x1096B14")]
			private set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x1096B78", Offset = "0x1096B78", VA = "0x1096B78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x1096BA0", Offset = "0x1096BA0", VA = "0x1096BA0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x1096C00", Offset = "0x1096C00", VA = "0x1096C00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x1096C28", Offset = "0x1096C28", VA = "0x1096C28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x1096C88", Offset = "0x1096C88", VA = "0x1096C88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x1096CB0", Offset = "0x1096CB0", VA = "0x1096CB0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0x1096D10", Offset = "0x1096D10", VA = "0x1096D10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x1096D38", Offset = "0x1096D38", VA = "0x1096D38")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x1096D98", Offset = "0x1096D98", VA = "0x1096D98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x1096DC0", Offset = "0x1096DC0", VA = "0x1096DC0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0x1096E20", Offset = "0x1096E20", VA = "0x1096E20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0x1096E68", Offset = "0x1096E68", VA = "0x1096E68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x1096EC0", Offset = "0x1096EC0", VA = "0x1096EC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x109727C", Offset = "0x109727C", VA = "0x109727C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x1097208", Offset = "0x1097208", VA = "0x1097208")]
		[IteratorStateMachine(typeof(<FindSkeletonVisualGameObjects>d__52))]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1097320", Offset = "0x1097320", VA = "0x1097320")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x10973E4", Offset = "0x10973E4", VA = "0x10973E4")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x10975B4", Offset = "0x10975B4", VA = "0x10975B4")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1097818", Offset = "0x1097818", VA = "0x1097818")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1097978", Offset = "0x1097978", VA = "0x1097978")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000432")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0x1098398", Offset = "0x1098398", VA = "0x1098398")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170002A1")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x1097D50", Offset = "0x1097D50", VA = "0x1097D50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A2")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0x1097D58", Offset = "0x1097D58", VA = "0x1097D58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60018BF")]
			[Address(RVA = "0x1097D60", Offset = "0x1097D60", VA = "0x1097D60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60018C0")]
			[Address(RVA = "0x1097D68", Offset = "0x1097D68", VA = "0x1097D68", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400009B")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0x1097D70", Offset = "0x1097D70", VA = "0x1097D70")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x1097E20", Offset = "0x1097E20", VA = "0x1097E20")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400009C")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x1097EEC", Offset = "0x1097EEC", VA = "0x1097EEC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0x1097F9C", Offset = "0x1097F9C", VA = "0x1097F9C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400009D")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0x1098068", Offset = "0x1098068", VA = "0x1098068")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x1098118", Offset = "0x1098118", VA = "0x1098118")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x1097ED0", Offset = "0x1097ED0", VA = "0x1097ED0", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x109804C", Offset = "0x109804C", VA = "0x109804C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x10981C8", Offset = "0x10981C8", VA = "0x10981C8", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60018CA")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1095A50", Offset = "0x1095A50", VA = "0x1095A50", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1098294", Offset = "0x1098294", VA = "0x1098294", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1096794", Offset = "0x1096794", VA = "0x1096794")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001651")]
		None,
		[Token(Token = "0x4001652")]
		Proximity,
		[Token(Token = "0x4001653")]
		Contact,
		[Token(Token = "0x4001654")]
		Action
	}
	[Token(Token = "0x2000434")]
	public enum InteractableState
	{
		[Token(Token = "0x4001656")]
		Default,
		[Token(Token = "0x4001657")]
		ProximityState,
		[Token(Token = "0x4001658")]
		ContactState,
		[Token(Token = "0x4001659")]
		ActionState
	}
	[Token(Token = "0x2000435")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1096320", Offset = "0x1096320", VA = "0x1096320")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170002A5")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x10983E0", Offset = "0x10983E0", VA = "0x10983E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x10981E4", Offset = "0x10981E4", VA = "0x10981E4")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x10982E8", Offset = "0x10982E8", VA = "0x10982E8")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1098438", Offset = "0x1098438", VA = "0x1098438")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000438")]
		[CompilerGenerated]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x400166A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170002A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018DD")]
				[Address(RVA = "0x1098BF8", Offset = "0x1098BF8", VA = "0x1098BF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018DF")]
				[Address(RVA = "0x1098C40", Offset = "0x1098C40", VA = "0x1098C40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x10985E0", Offset = "0x10985E0", VA = "0x10985E0")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x109871C", Offset = "0x109871C", VA = "0x109871C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018DB")]
			[Address(RVA = "0x1098738", Offset = "0x1098738", VA = "0x1098738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x1098BA8", Offset = "0x1098BA8", VA = "0x1098BA8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x1098C00", Offset = "0x1098C00", VA = "0x1098C00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x10984D8", Offset = "0x10984D8", VA = "0x10984D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x1098544", Offset = "0x1098544", VA = "0x1098544")]
		[IteratorStateMachine(typeof(<AttachToolsToHands>d__3))]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x1098608", Offset = "0x1098608", VA = "0x1098608")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x1098714", Offset = "0x1098714", VA = "0x1098714")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170002A8")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x1098C48", Offset = "0x1098C48", VA = "0x1098C48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x1098DA4", Offset = "0x1098DA4", VA = "0x1098DA4")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1098E40", Offset = "0x1098E40", VA = "0x1098E40")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x1098EDC", Offset = "0x1098EDC", VA = "0x1098EDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x1099178", Offset = "0x1099178", VA = "0x1099178")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x10991B4", Offset = "0x10991B4", VA = "0x10991B4")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x109948C", Offset = "0x109948C", VA = "0x109948C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x1099694", Offset = "0x1099694", VA = "0x1099694")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200043B")]
		[CompilerGenerated]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400167D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400167E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400167F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018F9")]
				[Address(RVA = "0x109A864", Offset = "0x109A864", VA = "0x109A864", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018FB")]
				[Address(RVA = "0x109A8AC", Offset = "0x109A8AC", VA = "0x109A8AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x1099930", Offset = "0x1099930", VA = "0x1099930")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x109A3D4", Offset = "0x109A3D4", VA = "0x109A3D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x109A3D8", Offset = "0x109A3D8", VA = "0x109A3D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x109A86C", Offset = "0x109A86C", VA = "0x109A86C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001672")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170002A9")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x109979C", Offset = "0x109979C", VA = "0x109979C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002AA")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x10997A4", Offset = "0x10997A4", VA = "0x10997A4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002AB")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x10997AC", Offset = "0x10997AC", VA = "0x10997AC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AC")]
		public override bool EnableState
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x10997B4", Offset = "0x10997B4", VA = "0x10997B4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x10997DC", Offset = "0x10997DC", VA = "0x10997DC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x109980C", Offset = "0x109980C", VA = "0x109980C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x10998BC", Offset = "0x10998BC", VA = "0x10998BC")]
		[IteratorStateMachine(typeof(<AttachTriggerLogic>d__21))]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x1099958", Offset = "0x1099958", VA = "0x1099958")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x1099BD8", Offset = "0x1099BD8", VA = "0x1099BD8")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x1099D94", Offset = "0x1099D94", VA = "0x1099D94")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x1099E7C", Offset = "0x1099E7C", VA = "0x1099E7C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x109A210", Offset = "0x109A210", VA = "0x109A210", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x109A214", Offset = "0x109A214", VA = "0x109A214", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x109A218", Offset = "0x109A218", VA = "0x109A218")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x170002AF")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x109A8B4", Offset = "0x109A8B4", VA = "0x109A8B4", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x109A8BC", Offset = "0x109A8BC", VA = "0x109A8BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public bool EnableState
		{
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x109A8C4", Offset = "0x109A8C4", VA = "0x109A8C4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x109A8E0", Offset = "0x109A8E0", VA = "0x109A8E0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001900")]
			[Address(RVA = "0x109A900", Offset = "0x109A900", VA = "0x109A900", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001901")]
			[Address(RVA = "0x109A908", Offset = "0x109A908", VA = "0x109A908", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public float SphereRadius
		{
			[Token(Token = "0x6001902")]
			[Address(RVA = "0x109A914", Offset = "0x109A914", VA = "0x109A914")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001903")]
			[Address(RVA = "0x109A91C", Offset = "0x109A91C", VA = "0x109A91C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x109A924", Offset = "0x109A924", VA = "0x109A924")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x109A960", Offset = "0x109A960", VA = "0x109A960", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x109A964", Offset = "0x109A964", VA = "0x109A964")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200043D")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001685")]
		None = 0,
		[Token(Token = "0x4001686")]
		Ray = 1,
		[Token(Token = "0x4001687")]
		Poke = 4,
		[Token(Token = "0x4001688")]
		All = -1
	}
	[Token(Token = "0x200043E")]
	public enum ToolInputState
	{
		[Token(Token = "0x400168A")]
		Inactive,
		[Token(Token = "0x400168B")]
		PrimaryInputDown,
		[Token(Token = "0x400168C")]
		PrimaryInputDownStay,
		[Token(Token = "0x400168D")]
		PrimaryInputUp
	}
	[Token(Token = "0x200043F")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x109A1BC", Offset = "0x109A1BC", VA = "0x109A1BC")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000440")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170002B3")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001908")]
			[Address(RVA = "0x1096670", Offset = "0x1096670", VA = "0x1096670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001909")]
			[Address(RVA = "0x109A96C", Offset = "0x109A96C", VA = "0x109A96C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600190A")]
			[Address(RVA = "0x109A974", Offset = "0x109A974", VA = "0x109A974")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600190B")]
			get;
		}

		[Token(Token = "0x170002B6")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600190C")]
			get;
		}

		[Token(Token = "0x170002B7")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600190D")]
			get;
		}

		[Token(Token = "0x170002B8")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0x109A980", Offset = "0x109A980", VA = "0x109A980")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600190F")]
			[Address(RVA = "0x109A98C", Offset = "0x109A98C", VA = "0x109A98C")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0x109A998", Offset = "0x109A998", VA = "0x109A998")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001911")]
			[Address(RVA = "0x109A9A4", Offset = "0x109A9A4", VA = "0x109A9A4")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001916")]
			get;
			[Token(Token = "0x6001917")]
			set;
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x109A9B0", Offset = "0x109A9B0", VA = "0x109A9B0")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001913")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001914")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001915")]
		public abstract void DeFocus();

		[Token(Token = "0x6001918")]
		public abstract void Initialize();

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x10995FC", Offset = "0x10995FC", VA = "0x10995FC")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x1099644", Offset = "0x1099644", VA = "0x1099644")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x109A9B8", Offset = "0x109A9B8", VA = "0x109A9B8", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x109AC80", Offset = "0x109AC80", VA = "0x109AC80", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x109A22C", Offset = "0x109A22C", VA = "0x109A22C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170002BB")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x600191E")]
			get;
		}

		[Token(Token = "0x170002BC")]
		bool EnableState
		{
			[Token(Token = "0x6001920")]
			get;
			[Token(Token = "0x6001921")]
			set;
		}

		[Token(Token = "0x170002BD")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001922")]
			get;
			[Token(Token = "0x6001923")]
			set;
		}

		[Token(Token = "0x600191F")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000442")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000443")]
		private enum PinchState
		{
			[Token(Token = "0x400169E")]
			None,
			[Token(Token = "0x400169F")]
			PinchDown,
			[Token(Token = "0x40016A0")]
			PinchStay,
			[Token(Token = "0x40016A1")]
			PinchUp
		}

		[Token(Token = "0x400169A")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170002BE")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001924")]
			[Address(RVA = "0x109B51C", Offset = "0x109B51C", VA = "0x109B51C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BF")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0x109B598", Offset = "0x109B598", VA = "0x109B598")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C0")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0x109B614", Offset = "0x109B614", VA = "0x109B614")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x109B690", Offset = "0x109B690", VA = "0x109B690")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x109B6B8", Offset = "0x109B6B8", VA = "0x109B6B8")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40016A2")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40016A3")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40016A4")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40016A5")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40016A6")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0f, 45f)]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170002C1")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0x109B830", Offset = "0x109B830", VA = "0x109B830", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002C2")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0x109B838", Offset = "0x109B838", VA = "0x109B838", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002C3")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x109B894", Offset = "0x109B894", VA = "0x109B894", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C4")]
		public override bool EnableState
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x109B89C", Offset = "0x109B89C", VA = "0x109B89C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x109B8DC", Offset = "0x109B8DC", VA = "0x109B8DC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x109B94C", Offset = "0x109B94C", VA = "0x109B94C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x109B9A0", Offset = "0x109B9A0", VA = "0x109B9A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x109BA2C", Offset = "0x109BA2C", VA = "0x109BA2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x109BCD0", Offset = "0x109BCD0", VA = "0x109BCD0")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x109BD4C", Offset = "0x109BD4C", VA = "0x109BD4C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x109C140", Offset = "0x109C140", VA = "0x109C140")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x109C2DC", Offset = "0x109C2DC", VA = "0x109C2DC")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x109C3F4", Offset = "0x109C3F4", VA = "0x109C3F4")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x109C718", Offset = "0x109C718", VA = "0x109C718")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x109CA94", Offset = "0x109CA94", VA = "0x109CA94", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x109CB6C", Offset = "0x109CB6C", VA = "0x109CB6C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x109CB9C", Offset = "0x109CB9C", VA = "0x109CB9C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40016B2")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40016B3")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x170002C5")]
		public bool EnableState
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0x109B8C0", Offset = "0x109B8C0", VA = "0x109B8C0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600193B")]
			[Address(RVA = "0x109B8F8", Offset = "0x109B8F8", VA = "0x109B8F8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x109CCB0", Offset = "0x109CCB0", VA = "0x109CCB0", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x109BC94", Offset = "0x109BC94", VA = "0x109BC94", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0x109CED8", Offset = "0x109CED8", VA = "0x109CED8", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001940")]
			[Address(RVA = "0x109CEE0", Offset = "0x109CEE0", VA = "0x109CEE0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x109CCB8", Offset = "0x109CCB8", VA = "0x109CCB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x109CACC", Offset = "0x109CACC", VA = "0x109CACC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x109CEE8", Offset = "0x109CEE8", VA = "0x109CEE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x109D194", Offset = "0x109D194", VA = "0x109D194")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x109D23C", Offset = "0x109D23C", VA = "0x109D23C")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170002C8")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0x109D2A0", Offset = "0x109D2A0", VA = "0x109D2A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001946")]
			[Address(RVA = "0x109D2A8", Offset = "0x109D2A8", VA = "0x109D2A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001947")]
			[Address(RVA = "0x109D324", Offset = "0x109D324", VA = "0x109D324")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001948")]
			[Address(RVA = "0x109D32C", Offset = "0x109D32C", VA = "0x109D32C")]
			set
			{
			}
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x109D388", Offset = "0x109D388", VA = "0x109D388")]
		private void Start()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x109D628", Offset = "0x109D628", VA = "0x109D628")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x109D638", Offset = "0x109D638", VA = "0x109D638")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x109D648", Offset = "0x109D648", VA = "0x109D648")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x109D650", Offset = "0x109D650", VA = "0x109D650")]
		private void Awake()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x109D654", Offset = "0x109D654", VA = "0x109D654")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x109D6E0", Offset = "0x109D6E0", VA = "0x109D6E0")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x109D770", Offset = "0x109D770", VA = "0x109D770")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x109D800", Offset = "0x109D800", VA = "0x109D800")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x109D8AC", Offset = "0x109D8AC", VA = "0x109D8AC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x109D988", Offset = "0x109D988", VA = "0x109D988")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x109D9CC", Offset = "0x109D9CC", VA = "0x109D9CC")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x109DA2C", Offset = "0x109DA2C", VA = "0x109DA2C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x109DA8C", Offset = "0x109DA8C", VA = "0x109DA8C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x109DA94", Offset = "0x109DA94", VA = "0x109DA94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x109DA98", Offset = "0x109DA98", VA = "0x109DA98")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x109DA5C", Offset = "0x109DA5C", VA = "0x109DA5C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x109DACC", Offset = "0x109DACC", VA = "0x109DACC")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200044A")]
		[CompilerGenerated]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40016D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40016D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40016D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170002CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001963")]
				[Address(RVA = "0x109E14C", Offset = "0x109E14C", VA = "0x109E14C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001965")]
				[Address(RVA = "0x109E194", Offset = "0x109E194", VA = "0x109E194", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001960")]
			[Address(RVA = "0x109DEC4", Offset = "0x109DEC4", VA = "0x109DEC4")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001961")]
			[Address(RVA = "0x109DF8C", Offset = "0x109DF8C", VA = "0x109DF8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001962")]
			[Address(RVA = "0x109DF90", Offset = "0x109DF90", VA = "0x109DF90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001964")]
			[Address(RVA = "0x109E154", Offset = "0x109E154", VA = "0x109E154", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016C3")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40016C4")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x109DAD4", Offset = "0x109DAD4", VA = "0x109DAD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x109DB74", Offset = "0x109DB74", VA = "0x109DB74")]
		private void Update()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x109DE84", Offset = "0x109DE84", VA = "0x109DE84")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x109DE10", Offset = "0x109DE10", VA = "0x109DE10")]
		[IteratorStateMachine(typeof(<LerpToHMD>d__13))]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x109DEEC", Offset = "0x109DEEC", VA = "0x109DEEC")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200044C")]
		public enum SelectionState
		{
			[Token(Token = "0x40016DA")]
			Off,
			[Token(Token = "0x40016DB")]
			Selected,
			[Token(Token = "0x40016DC")]
			Highlighted
		}

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170002CC")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0x109E19C", Offset = "0x109E19C", VA = "0x109E19C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001967")]
			[Address(RVA = "0x109E1A4", Offset = "0x109E1A4", VA = "0x109E1A4")]
			set
			{
			}
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x109E2F8", Offset = "0x109E2F8", VA = "0x109E2F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x109E4BC", Offset = "0x109E4BC", VA = "0x109E4BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x109E218", Offset = "0x109E218", VA = "0x109E218")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x109E584", Offset = "0x109E584", VA = "0x109E584")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200044E")]
		public enum SegmentType
		{
			[Token(Token = "0x40016EB")]
			Straight,
			[Token(Token = "0x40016EC")]
			LeftTurn,
			[Token(Token = "0x40016ED")]
			RightTurn,
			[Token(Token = "0x40016EE")]
			Switch
		}

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40016E3")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40016E4")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170002CD")]
		public float StartDistance
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0x109E5F4", Offset = "0x109E5F4", VA = "0x109E5F4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600196E")]
			[Address(RVA = "0x109E5FC", Offset = "0x109E5FC", VA = "0x109E5FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public float GridSize
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0x109E604", Offset = "0x109E604", VA = "0x109E604")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001970")]
			[Address(RVA = "0x109E60C", Offset = "0x109E60C", VA = "0x109E60C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public int SubDivCount
		{
			[Token(Token = "0x6001971")]
			[Address(RVA = "0x109E614", Offset = "0x109E614", VA = "0x109E614")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001972")]
			[Address(RVA = "0x109E61C", Offset = "0x109E61C", VA = "0x109E61C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public SegmentType Type
		{
			[Token(Token = "0x6001973")]
			[Address(RVA = "0x109E624", Offset = "0x109E624", VA = "0x109E624")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170002D1")]
		public Pose EndPose
		{
			[Token(Token = "0x6001974")]
			[Address(RVA = "0x109E62C", Offset = "0x109E62C", VA = "0x109E62C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		public float Radius
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0x109EA00", Offset = "0x109EA00", VA = "0x109EA00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D3")]
		public float SegmentLength
		{
			[Token(Token = "0x6001977")]
			[Address(RVA = "0x109E688", Offset = "0x109E688", VA = "0x109E688")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x109EA10", Offset = "0x109EA10", VA = "0x109EA10")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x109EA28", Offset = "0x109EA28", VA = "0x109EA28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x109E6C8", Offset = "0x109E6C8", VA = "0x109E6C8")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x109EA2C", Offset = "0x109EA2C", VA = "0x109EA2C")]
		private void Update()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x109EA30", Offset = "0x109EA30", VA = "0x109EA30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x109EA8C", Offset = "0x109EA8C", VA = "0x109EA8C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x109F3C0", Offset = "0x109F3C0", VA = "0x109F3C0")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x109F644", Offset = "0x109F644", VA = "0x109F644")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000450")]
		[CompilerGenerated]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001700")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001701")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001702")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170002D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600198D")]
				[Address(RVA = "0x10A0168", Offset = "0x10A0168", VA = "0x10A0168", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600198F")]
				[Address(RVA = "0x10A01B0", Offset = "0x10A01B0", VA = "0x10A01B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600198A")]
			[Address(RVA = "0x109FF9C", Offset = "0x109FF9C", VA = "0x109FF9C")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600198B")]
			[Address(RVA = "0x109FFEC", Offset = "0x109FFEC", VA = "0x109FFEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600198C")]
			[Address(RVA = "0x109FFF0", Offset = "0x109FFF0", VA = "0x109FFF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600198E")]
			[Address(RVA = "0x10A0170", Offset = "0x10A0170", VA = "0x10A0170", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016EF")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40016F0")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x109F7A4", Offset = "0x109F7A4", VA = "0x109F7A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x109F85C", Offset = "0x109F85C", VA = "0x109F85C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x109F8EC", Offset = "0x109F8EC", VA = "0x109F8EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x109FA34", Offset = "0x109FA34", VA = "0x109FA34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x109FBC0", Offset = "0x109FBC0", VA = "0x109FBC0")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x109FCD0", Offset = "0x109FCD0", VA = "0x109FCD0")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x109FED4", Offset = "0x109FED4", VA = "0x109FED4")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x109FDE0", Offset = "0x109FDE0", VA = "0x109FDE0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x109FDF4", Offset = "0x109FDF4", VA = "0x109FDF4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x109FF28", Offset = "0x109FF28", VA = "0x109FF28")]
		[IteratorStateMachine(typeof(<ResetPosition>d__26))]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x109FFC4", Offset = "0x109FFC4", VA = "0x109FFC4")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170002D6")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x10A01B8", Offset = "0x10A01B8", VA = "0x10A01B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x10A01C8", Offset = "0x10A01C8", VA = "0x10A01C8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x10A01D0", Offset = "0x10A01D0", VA = "0x10A01D0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x10A0500", Offset = "0x10A0500", VA = "0x10A0500")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001708")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001709")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170002D7")]
		public float Distance
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x10A05FC", Offset = "0x10A05FC", VA = "0x10A05FC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x10A0604", Offset = "0x10A0604", VA = "0x10A0604")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public float Scale
		{
			[Token(Token = "0x6001996")]
			[Address(RVA = "0x10A060C", Offset = "0x10A060C", VA = "0x10A060C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x10A0614", Offset = "0x10A0614", VA = "0x10A0614")]
			set
			{
			}
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x10A01CC", Offset = "0x10A01CC", VA = "0x10A01CC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x10A061C", Offset = "0x10A061C", VA = "0x10A061C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x10A020C", Offset = "0x10A020C", VA = "0x10A020C")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x10A041C", Offset = "0x10A041C", VA = "0x10A041C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600199C")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x10A0560", Offset = "0x10A0560", VA = "0x10A0560")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000454")]
		[CompilerGenerated]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400171C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400171D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400171E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400171F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170002D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019AB")]
				[Address(RVA = "0x10A0EEC", Offset = "0x10A0EEC", VA = "0x10A0EEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019AD")]
				[Address(RVA = "0x10A0F34", Offset = "0x10A0F34", VA = "0x10A0F34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x10A0B60", Offset = "0x10A0B60", VA = "0x10A0B60")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x10A0CD4", Offset = "0x10A0CD4", VA = "0x10A0CD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x10A0CD8", Offset = "0x10A0CD8", VA = "0x10A0CD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x10A0EF4", Offset = "0x10A0EF4", VA = "0x10A0EF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x10A078C", Offset = "0x10A078C", VA = "0x10A078C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x10A07E8", Offset = "0x10A07E8", VA = "0x10A07E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x10A08C0", Offset = "0x10A08C0", VA = "0x10A08C0")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x10A0A14", Offset = "0x10A0A14", VA = "0x10A0A14")]
		private void Update()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x10A091C", Offset = "0x10A091C", VA = "0x10A091C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x10A0ADC", Offset = "0x10A0ADC", VA = "0x10A0ADC")]
		[IteratorStateMachine(typeof(<AnimateCrossing>d__15))]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x10A0B88", Offset = "0x10A0B88", VA = "0x10A0B88")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x10A0C20", Offset = "0x10A0C20", VA = "0x10A0C20")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x10A0C7C", Offset = "0x10A0C7C", VA = "0x10A0C7C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000456")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001746")]
			Start,
			[Token(Token = "0x4001747")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001748")]
			Stop
		}

		[Token(Token = "0x2000457")]
		[CompilerGenerated]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400174A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400174B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400174C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400174D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400174E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400174F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170002DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019C0")]
				[Address(RVA = "0x10A17CC", Offset = "0x10A17CC", VA = "0x10A17CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019C2")]
				[Address(RVA = "0x10A1814", Offset = "0x10A1814", VA = "0x10A1814", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x10A11DC", Offset = "0x10A11DC", VA = "0x10A11DC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x10A15A4", Offset = "0x10A15A4", VA = "0x10A15A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x10A15A8", Offset = "0x10A15A8", VA = "0x10A15A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x10A17D4", Offset = "0x10A17D4", VA = "0x10A17D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001728")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001729")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400172A")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400172B")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Range(0.2f, 2.7f)]
		protected float _initialSpeed;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x10A0F3C", Offset = "0x10A0F3C", VA = "0x10A0F3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x10A1098", Offset = "0x10A1098", VA = "0x10A1098")]
		private void Update()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x10A10A4", Offset = "0x10A10A4", VA = "0x10A10A4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x109D684", Offset = "0x109D684", VA = "0x109D684")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x10A1010", Offset = "0x10A1010", VA = "0x10A1010")]
		[IteratorStateMachine(typeof(<StartStopTrain>d__34))]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x10A1204", Offset = "0x10A1204", VA = "0x10A1204")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x10A117C", Offset = "0x10A117C", VA = "0x10A117C")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x109D710", Offset = "0x109D710", VA = "0x109D710")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x109D7A0", Offset = "0x109D7A0", VA = "0x109D7A0")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x10A1418", Offset = "0x10A1418", VA = "0x10A1418")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x10A150C", Offset = "0x10A150C", VA = "0x10A150C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x109D830", Offset = "0x109D830", VA = "0x109D830")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x109D8DC", Offset = "0x109D8DC", VA = "0x109D8DC")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x109D9BC", Offset = "0x109D9BC", VA = "0x109D9BC")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x10A1548", Offset = "0x10A1548", VA = "0x10A1548")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170002DD")]
		public float TrackLength
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x10A181C", Offset = "0x10A181C", VA = "0x10A181C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x10A1824", Offset = "0x10A1824", VA = "0x10A1824")]
			private set
			{
			}
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x10A182C", Offset = "0x10A182C", VA = "0x10A182C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x10A0684", Offset = "0x10A0684", VA = "0x10A0684")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x10A1830", Offset = "0x10A1830", VA = "0x10A1830")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x10A1A28", Offset = "0x10A1A28", VA = "0x10A1A28")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x10A1B08", Offset = "0x10A1B08", VA = "0x10A1B08")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class Pose
	{
		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x109F70C", Offset = "0x109F70C", VA = "0x109F70C")]
		public Pose()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x10A1B24", Offset = "0x10A1B24", VA = "0x10A1B24")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200045B")]
		[CompilerGenerated]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001767")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x400176A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x400176B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019D8")]
				[Address(RVA = "0x10A2118", Offset = "0x10A2118", VA = "0x10A2118", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019DA")]
				[Address(RVA = "0x10A2160", Offset = "0x10A2160", VA = "0x10A2160", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x10A1E00", Offset = "0x10A1E00", VA = "0x10A1E00")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x10A1F74", Offset = "0x10A1F74", VA = "0x10A1F74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019D7")]
			[Address(RVA = "0x10A1F78", Offset = "0x10A1F78", VA = "0x10A1F78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x10A2120", Offset = "0x10A2120", VA = "0x10A2120", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200045C")]
		[CompilerGenerated]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400176C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400176D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400176E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400176F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170002E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019DE")]
				[Address(RVA = "0x10A223C", Offset = "0x10A223C", VA = "0x10A223C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019E0")]
				[Address(RVA = "0x10A2284", Offset = "0x10A2284", VA = "0x10A2284", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019DB")]
			[Address(RVA = "0x10A1EDC", Offset = "0x10A1EDC", VA = "0x10A1EDC")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60019DC")]
			[Address(RVA = "0x10A2168", Offset = "0x10A2168", VA = "0x10A2168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019DD")]
			[Address(RVA = "0x10A216C", Offset = "0x10A216C", VA = "0x10A216C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019DF")]
			[Address(RVA = "0x10A2244", Offset = "0x10A2244", VA = "0x10A2244", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400175B")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170002DE")]
		public bool IsMoving
		{
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0x10A1B88", Offset = "0x10A1B88", VA = "0x10A1B88")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x10A1B90", Offset = "0x10A1B90", VA = "0x10A1B90")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x10A1B9C", Offset = "0x10A1B9C", VA = "0x10A1B9C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x10A1BCC", Offset = "0x10A1BCC", VA = "0x10A1BCC")]
		private void Update()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x10A1D0C", Offset = "0x10A1D0C", VA = "0x10A1D0C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x10A1D7C", Offset = "0x10A1D7C", VA = "0x10A1D7C")]
		[IteratorStateMachine(typeof(<LerpToSpeed>d__17))]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x10A1E28", Offset = "0x10A1E28", VA = "0x10A1E28")]
		[IteratorStateMachine(typeof(<PlaySoundDelayed>d__18))]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x10A1F04", Offset = "0x10A1F04", VA = "0x10A1F04")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x10A1F6C", Offset = "0x10A1F6C", VA = "0x10A1F6C")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x10A228C", Offset = "0x10A228C", VA = "0x10A228C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x10A2300", Offset = "0x10A2300", VA = "0x10A2300")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x10A23C8", Offset = "0x10A23C8", VA = "0x10A23C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x10A24D8", Offset = "0x10A24D8", VA = "0x10A24D8")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x10A2554", Offset = "0x10A2554", VA = "0x10A2554")]
		private void Update()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x10A261C", Offset = "0x10A261C", VA = "0x10A261C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001778")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001779")]
		EUDT_OverlayQuad,
		[Token(Token = "0x400177A")]
		EUDT_None,
		[Token(Token = "0x400177B")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200045F")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000460")]
		[CompilerGenerated]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170002E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019FA")]
				[Address(RVA = "0x10A3CAC", Offset = "0x10A3CAC", VA = "0x10A3CAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019FC")]
				[Address(RVA = "0x10A3CF4", Offset = "0x10A3CF4", VA = "0x10A3CF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x10A333C", Offset = "0x10A333C", VA = "0x10A333C")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x10A3AB0", Offset = "0x10A3AB0", VA = "0x10A3AB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x10A3AB4", Offset = "0x10A3AB4", VA = "0x10A3AB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x10A3CB4", Offset = "0x10A3CB4", VA = "0x10A3CB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400177D")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400177E")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400177F")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("App vs Compositor Comparison Settings")]
		public GameObject mainCamera;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Level Loading Sim Settings")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x10A262C", Offset = "0x10A262C", VA = "0x10A262C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x10A2E6C", Offset = "0x10A2E6C", VA = "0x10A2E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x10A2F94", Offset = "0x10A2F94", VA = "0x10A2F94")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x10A30C4", Offset = "0x10A30C4", VA = "0x10A30C4")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x10A31F4", Offset = "0x10A31F4", VA = "0x10A31F4")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x10A2F74", Offset = "0x10A2F74", VA = "0x10A2F74")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x10A32C8", Offset = "0x10A32C8", VA = "0x10A32C8")]
		[IteratorStateMachine(typeof(<WaitforOVROverlay>d__30))]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x10A3364", Offset = "0x10A3364", VA = "0x10A3364")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x10A2A9C", Offset = "0x10A2A9C", VA = "0x10A2A9C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x10A34AC", Offset = "0x10A34AC", VA = "0x10A34AC")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x10A338C", Offset = "0x10A338C", VA = "0x10A338C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x10A3834", Offset = "0x10A3834", VA = "0x10A3834")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x10A3920", Offset = "0x10A3920", VA = "0x10A3920")]
		public OVROverlaySample()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000461")]
	[RequireComponent(typeof(OVRGrabber))]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x4001797")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001798")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001799")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400179A")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400179B")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400179C")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400179D")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400179E")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400179F")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40017A0")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40017A1")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x10A3CFC", Offset = "0x10A3CFC", VA = "0x10A3CFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x10A3D54", Offset = "0x10A3D54", VA = "0x10A3D54")]
		private void Start()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x10A41A4", Offset = "0x10A41A4", VA = "0x10A41A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x10A4290", Offset = "0x10A4290", VA = "0x10A4290")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x10A43F4", Offset = "0x10A43F4", VA = "0x10A43F4")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x10A46C4", Offset = "0x10A46C4", VA = "0x10A46C4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x10A47A8", Offset = "0x10A47A8", VA = "0x10A47A8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x10A4958", Offset = "0x10A4958", VA = "0x10A4958")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x10A4480", Offset = "0x10A4480", VA = "0x10A4480")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x10A44D4", Offset = "0x10A44D4", VA = "0x10A44D4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x10A4064", Offset = "0x10A4064", VA = "0x10A4064")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x10A4A7C", Offset = "0x10A4A7C", VA = "0x10A4A7C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public enum HandPoseId
	{
		[Token(Token = "0x40017B6")]
		Default,
		[Token(Token = "0x40017B7")]
		Generic,
		[Token(Token = "0x40017B8")]
		PingPongBall,
		[Token(Token = "0x40017B9")]
		Controller
	}
	[Token(Token = "0x2000464")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170002E5")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0x10A4B34", Offset = "0x10A4B34", VA = "0x10A4B34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E6")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x10A4B3C", Offset = "0x10A4B3C", VA = "0x10A4B3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E7")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x10A4B44", Offset = "0x10A4B44", VA = "0x10A4B44")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x10A4B4C", Offset = "0x10A4B4C", VA = "0x10A4B4C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x10A5B54", Offset = "0x10A5B54", VA = "0x10A5B54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x10A5E20", Offset = "0x10A5E20", VA = "0x10A5E20")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x10A5E70", Offset = "0x10A5E70", VA = "0x10A5E70")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x10A5EA8", Offset = "0x10A5EA8", VA = "0x10A5EA8")]
		public TouchController()
		{
		}
	}
}
namespace PrivateImplementationDetailsLOkWPANW
{
	[StructLayout(3, CharSet = CharSet.Auto)]
	[Token(Token = "0x2000469")]
	public class Deserialize
	{
		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x10A5EB0", Offset = "0x10A5EB0", VA = "0x10A5EB0")]
		public Deserialize()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x10A5EB8", Offset = "0x10A5EB8", VA = "0x10A5EB8")]
		public static string DeserializeLiteral(byte[] k, byte[] d)
		{
			return null;
		}
	}
}
namespace PrivateImplementationDetailsQOELAJF
{
	[StructLayout(3, CharSet = CharSet.Auto)]
	[Token(Token = "0x200046A")]
	internal class ArrayCopy128
	{
		[StructLayout(2)]
		[Token(Token = "0x200046B")]
		private struct $ArrayType$131
		{
		}

		[Token(Token = "0x40017C3")]
		[MetadataOffset(Offset = "0x775E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static $ArrayType$131 $$field-0/* Not supported: data() */;

		[Token(Token = "0x40017C4")]
		[MetadataOffset(Offset = "0x775E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		internal static $ArrayType$131 $$field-1/* Not supported: data() */;

		[Token(Token = "0x40017C5")]
		[MetadataOffset(Offset = "0x775F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		internal static $ArrayType$131 $$field-2/* Not supported: data() */;

		[Token(Token = "0x40017C6")]
		[MetadataOffset(Offset = "0x775FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		internal static $ArrayType$131 $$field-3/* Not supported: data() */;

		[Token(Token = "0x40017C7")]
		[MetadataOffset(Offset = "0x776023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		internal static $ArrayType$131 $$field-4/* Not supported: data() */;

		[Token(Token = "0x40017C8")]
		[MetadataOffset(Offset = "0x7760A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28F")]
		internal static $ArrayType$131 $$field-5/* Not supported: data() */;

		[Token(Token = "0x40017C9")]
		[MetadataOffset(Offset = "0x776129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x312")]
		internal static $ArrayType$131 $$field-6/* Not supported: data() */;

		[Token(Token = "0x40017CA")]
		[MetadataOffset(Offset = "0x7761AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x395")]
		internal static $ArrayType$131 $$field-7/* Not supported: data() */;

		[Token(Token = "0x40017CB")]
		[MetadataOffset(Offset = "0x77622F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		internal static $ArrayType$131 $$field-8/* Not supported: data() */;

		[Token(Token = "0x40017CC")]
		[MetadataOffset(Offset = "0x7762B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49B")]
		internal static $ArrayType$131 $$field-9/* Not supported: data() */;

		[Token(Token = "0x40017CD")]
		[MetadataOffset(Offset = "0x776335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51E")]
		internal static $ArrayType$131 $$field-10/* Not supported: data() */;

		[Token(Token = "0x40017CE")]
		[MetadataOffset(Offset = "0x7763B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A1")]
		internal static $ArrayType$131 $$field-11/* Not supported: data() */;

		[Token(Token = "0x40017CF")]
		[MetadataOffset(Offset = "0x77643B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x624")]
		internal static $ArrayType$131 $$field-12/* Not supported: data() */;

		[Token(Token = "0x40017D0")]
		[MetadataOffset(Offset = "0x7764BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A7")]
		internal static $ArrayType$131 $$field-13/* Not supported: data() */;

		[Token(Token = "0x40017D1")]
		[MetadataOffset(Offset = "0x776541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72A")]
		internal static $ArrayType$131 $$field-14/* Not supported: data() */;

		[Token(Token = "0x40017D2")]
		[MetadataOffset(Offset = "0x7765C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7AD")]
		internal static $ArrayType$131 $$field-15/* Not supported: data() */;

		[Token(Token = "0x40017D3")]
		[MetadataOffset(Offset = "0x776647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
		internal static $ArrayType$131 $$field-16/* Not supported: data() */;

		[Token(Token = "0x40017D4")]
		[MetadataOffset(Offset = "0x7766CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B3")]
		internal static $ArrayType$131 $$field-17/* Not supported: data() */;

		[Token(Token = "0x40017D5")]
		[MetadataOffset(Offset = "0x77674D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x936")]
		internal static $ArrayType$131 $$field-18/* Not supported: data() */;

		[Token(Token = "0x40017D6")]
		[MetadataOffset(Offset = "0x7767D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B9")]
		internal static $ArrayType$131 $$field-19/* Not supported: data() */;

		[Token(Token = "0x40017D7")]
		[MetadataOffset(Offset = "0x776853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3C")]
		internal static $ArrayType$131 $$field-20/* Not supported: data() */;

		[Token(Token = "0x40017D8")]
		[MetadataOffset(Offset = "0x7768D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xABF")]
		internal static $ArrayType$131 $$field-21/* Not supported: data() */;

		[Token(Token = "0x40017D9")]
		[MetadataOffset(Offset = "0x776959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB42")]
		internal static $ArrayType$131 $$field-22/* Not supported: data() */;

		[Token(Token = "0x40017DA")]
		[MetadataOffset(Offset = "0x7769DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC5")]
		internal static $ArrayType$131 $$field-23/* Not supported: data() */;

		[Token(Token = "0x40017DB")]
		[MetadataOffset(Offset = "0x776A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC48")]
		internal static $ArrayType$131 $$field-24/* Not supported: data() */;

		[Token(Token = "0x40017DC")]
		[MetadataOffset(Offset = "0x776AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCCB")]
		internal static $ArrayType$131 $$field-25/* Not supported: data() */;

		[Token(Token = "0x40017DD")]
		[MetadataOffset(Offset = "0x776B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4E")]
		internal static $ArrayType$131 $$field-26/* Not supported: data() */;

		[Token(Token = "0x40017DE")]
		[MetadataOffset(Offset = "0x776BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD1")]
		internal static $ArrayType$131 $$field-27/* Not supported: data() */;

		[Token(Token = "0x40017DF")]
		[MetadataOffset(Offset = "0x776C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE54")]
		internal static $ArrayType$131 $$field-28/* Not supported: data() */;

		[Token(Token = "0x40017E0")]
		[MetadataOffset(Offset = "0x776CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED7")]
		internal static $ArrayType$131 $$field-29/* Not supported: data() */;

		[Token(Token = "0x40017E1")]
		[MetadataOffset(Offset = "0x776D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5A")]
		internal static $ArrayType$131 $$field-30/* Not supported: data() */;

		[Token(Token = "0x40017E2")]
		[MetadataOffset(Offset = "0x776DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFDD")]
		internal static $ArrayType$131 $$field-31/* Not supported: data() */;

		[Token(Token = "0x40017E3")]
		[MetadataOffset(Offset = "0x776E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1060")]
		internal static $ArrayType$131 $$field-32/* Not supported: data() */;

		[Token(Token = "0x40017E4")]
		[MetadataOffset(Offset = "0x776EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E3")]
		internal static $ArrayType$131 $$field-33/* Not supported: data() */;

		[Token(Token = "0x40017E5")]
		[MetadataOffset(Offset = "0x776F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1166")]
		internal static $ArrayType$131 $$field-34/* Not supported: data() */;

		[Token(Token = "0x40017E6")]
		[MetadataOffset(Offset = "0x777000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E9")]
		internal static $ArrayType$131 $$field-35/* Not supported: data() */;

		[Token(Token = "0x40017E7")]
		[MetadataOffset(Offset = "0x777083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x126C")]
		internal static $ArrayType$131 $$field-36/* Not supported: data() */;

		[Token(Token = "0x40017E8")]
		[MetadataOffset(Offset = "0x777106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12EF")]
		internal static $ArrayType$131 $$field-37/* Not supported: data() */;

		[Token(Token = "0x40017E9")]
		[MetadataOffset(Offset = "0x777189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1372")]
		internal static $ArrayType$131 $$field-38/* Not supported: data() */;

		[Token(Token = "0x40017EA")]
		[MetadataOffset(Offset = "0x77720C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13F5")]
		internal static $ArrayType$131 $$field-39/* Not supported: data() */;

		[Token(Token = "0x40017EB")]
		[MetadataOffset(Offset = "0x77728F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1478")]
		internal static $ArrayType$131 $$field-40/* Not supported: data() */;

		[Token(Token = "0x40017EC")]
		[MetadataOffset(Offset = "0x777312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14FB")]
		internal static $ArrayType$131 $$field-41/* Not supported: data() */;

		[Token(Token = "0x40017ED")]
		[MetadataOffset(Offset = "0x777395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x157E")]
		internal static $ArrayType$131 $$field-42/* Not supported: data() */;

		[Token(Token = "0x40017EE")]
		[MetadataOffset(Offset = "0x777418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1601")]
		internal static $ArrayType$131 $$field-43/* Not supported: data() */;

		[Token(Token = "0x40017EF")]
		[MetadataOffset(Offset = "0x77749B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1684")]
		internal static $ArrayType$131 $$field-44/* Not supported: data() */;

		[Token(Token = "0x40017F0")]
		[MetadataOffset(Offset = "0x77751E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1707")]
		internal static $ArrayType$131 $$field-45/* Not supported: data() */;

		[Token(Token = "0x40017F1")]
		[MetadataOffset(Offset = "0x7775A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178A")]
		internal static $ArrayType$131 $$field-46/* Not supported: data() */;

		[Token(Token = "0x40017F2")]
		[MetadataOffset(Offset = "0x777624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180D")]
		internal static $ArrayType$131 $$field-47/* Not supported: data() */;

		[Token(Token = "0x40017F3")]
		[MetadataOffset(Offset = "0x7776A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1890")]
		internal static $ArrayType$131 $$field-48/* Not supported: data() */;

		[Token(Token = "0x40017F4")]
		[MetadataOffset(Offset = "0x77772A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1913")]
		internal static $ArrayType$131 $$field-49/* Not supported: data() */;

		[Token(Token = "0x40017F5")]
		[MetadataOffset(Offset = "0x7777AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1996")]
		internal static $ArrayType$131 $$field-50/* Not supported: data() */;

		[Token(Token = "0x40017F6")]
		[MetadataOffset(Offset = "0x777830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A19")]
		internal static $ArrayType$131 $$field-51/* Not supported: data() */;

		[Token(Token = "0x40017F7")]
		[MetadataOffset(Offset = "0x7778B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9C")]
		internal static $ArrayType$131 $$field-52/* Not supported: data() */;

		[Token(Token = "0x40017F8")]
		[MetadataOffset(Offset = "0x777936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1F")]
		internal static $ArrayType$131 $$field-53/* Not supported: data() */;

		[Token(Token = "0x40017F9")]
		[MetadataOffset(Offset = "0x7779B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BA2")]
		internal static $ArrayType$131 $$field-54/* Not supported: data() */;

		[Token(Token = "0x40017FA")]
		[MetadataOffset(Offset = "0x777A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C25")]
		internal static $ArrayType$131 $$field-55/* Not supported: data() */;

		[Token(Token = "0x40017FB")]
		[MetadataOffset(Offset = "0x777ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA8")]
		internal static $ArrayType$131 $$field-56/* Not supported: data() */;

		[Token(Token = "0x40017FC")]
		[MetadataOffset(Offset = "0x777B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D2B")]
		internal static $ArrayType$131 $$field-57/* Not supported: data() */;

		[Token(Token = "0x40017FD")]
		[MetadataOffset(Offset = "0x777BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DAE")]
		internal static $ArrayType$131 $$field-58/* Not supported: data() */;

		[Token(Token = "0x40017FE")]
		[MetadataOffset(Offset = "0x777C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E31")]
		internal static $ArrayType$131 $$field-59/* Not supported: data() */;

		[Token(Token = "0x40017FF")]
		[MetadataOffset(Offset = "0x777CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EB4")]
		internal static $ArrayType$131 $$field-60/* Not supported: data() */;

		[Token(Token = "0x4001800")]
		[MetadataOffset(Offset = "0x777D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F37")]
		internal static $ArrayType$131 $$field-61/* Not supported: data() */;

		[Token(Token = "0x4001801")]
		[MetadataOffset(Offset = "0x777DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FBA")]
		internal static $ArrayType$131 $$field-62/* Not supported: data() */;

		[Token(Token = "0x4001802")]
		[MetadataOffset(Offset = "0x777E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x203D")]
		internal static $ArrayType$131 $$field-63/* Not supported: data() */;

		[Token(Token = "0x4001803")]
		[MetadataOffset(Offset = "0x777ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C0")]
		internal static $ArrayType$131 $$field-64/* Not supported: data() */;

		[Token(Token = "0x4001804")]
		[MetadataOffset(Offset = "0x777F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2143")]
		internal static $ArrayType$131 $$field-65/* Not supported: data() */;

		[Token(Token = "0x4001805")]
		[MetadataOffset(Offset = "0x777FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C6")]
		internal static $ArrayType$131 $$field-66/* Not supported: data() */;

		[Token(Token = "0x4001806")]
		[MetadataOffset(Offset = "0x778060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2249")]
		internal static $ArrayType$131 $$field-67/* Not supported: data() */;

		[Token(Token = "0x4001807")]
		[MetadataOffset(Offset = "0x7780E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22CC")]
		internal static $ArrayType$131 $$field-68/* Not supported: data() */;

		[Token(Token = "0x4001808")]
		[MetadataOffset(Offset = "0x778166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234F")]
		internal static $ArrayType$131 $$field-69/* Not supported: data() */;

		[Token(Token = "0x4001809")]
		[MetadataOffset(Offset = "0x7781E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23D2")]
		internal static $ArrayType$131 $$field-70/* Not supported: data() */;

		[Token(Token = "0x400180A")]
		[MetadataOffset(Offset = "0x77826C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2455")]
		internal static $ArrayType$131 $$field-71/* Not supported: data() */;

		[Token(Token = "0x400180B")]
		[MetadataOffset(Offset = "0x7782EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24D8")]
		internal static $ArrayType$131 $$field-72/* Not supported: data() */;

		[Token(Token = "0x400180C")]
		[MetadataOffset(Offset = "0x778372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x255B")]
		internal static $ArrayType$131 $$field-73/* Not supported: data() */;

		[Token(Token = "0x400180D")]
		[MetadataOffset(Offset = "0x7783F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25DE")]
		internal static $ArrayType$131 $$field-74/* Not supported: data() */;

		[Token(Token = "0x400180E")]
		[MetadataOffset(Offset = "0x778478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2661")]
		internal static $ArrayType$131 $$field-75/* Not supported: data() */;

		[Token(Token = "0x400180F")]
		[MetadataOffset(Offset = "0x7784FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26E4")]
		internal static $ArrayType$131 $$field-76/* Not supported: data() */;

		[Token(Token = "0x4001810")]
		[MetadataOffset(Offset = "0x77857E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2767")]
		internal static $ArrayType$131 $$field-77/* Not supported: data() */;

		[Token(Token = "0x4001811")]
		[MetadataOffset(Offset = "0x778601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27EA")]
		internal static $ArrayType$131 $$field-78/* Not supported: data() */;

		[Token(Token = "0x4001812")]
		[MetadataOffset(Offset = "0x778684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x286D")]
		internal static $ArrayType$131 $$field-79/* Not supported: data() */;

		[Token(Token = "0x4001813")]
		[MetadataOffset(Offset = "0x778707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28F0")]
		internal static $ArrayType$131 $$field-80/* Not supported: data() */;

		[Token(Token = "0x4001814")]
		[MetadataOffset(Offset = "0x77878A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2973")]
		internal static $ArrayType$131 $$field-81/* Not supported: data() */;

		[Token(Token = "0x4001815")]
		[MetadataOffset(Offset = "0x77880D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29F6")]
		internal static $ArrayType$131 $$field-82/* Not supported: data() */;

		[Token(Token = "0x4001816")]
		[MetadataOffset(Offset = "0x778890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A79")]
		internal static $ArrayType$131 $$field-83/* Not supported: data() */;

		[Token(Token = "0x4001817")]
		[MetadataOffset(Offset = "0x778913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AFC")]
		internal static $ArrayType$131 $$field-84/* Not supported: data() */;

		[Token(Token = "0x4001818")]
		[MetadataOffset(Offset = "0x778996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B7F")]
		internal static $ArrayType$131 $$field-85/* Not supported: data() */;

		[Token(Token = "0x4001819")]
		[MetadataOffset(Offset = "0x778A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C02")]
		internal static $ArrayType$131 $$field-86/* Not supported: data() */;

		[Token(Token = "0x400181A")]
		[MetadataOffset(Offset = "0x778A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C85")]
		internal static $ArrayType$131 $$field-87/* Not supported: data() */;

		[Token(Token = "0x400181B")]
		[MetadataOffset(Offset = "0x778B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D08")]
		internal static $ArrayType$131 $$field-88/* Not supported: data() */;

		[Token(Token = "0x400181C")]
		[MetadataOffset(Offset = "0x778BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8B")]
		internal static $ArrayType$131 $$field-89/* Not supported: data() */;

		[Token(Token = "0x400181D")]
		[MetadataOffset(Offset = "0x778C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0E")]
		internal static $ArrayType$131 $$field-90/* Not supported: data() */;

		[Token(Token = "0x400181E")]
		[MetadataOffset(Offset = "0x778CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E91")]
		internal static $ArrayType$131 $$field-91/* Not supported: data() */;

		[Token(Token = "0x400181F")]
		[MetadataOffset(Offset = "0x778D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F14")]
		internal static $ArrayType$131 $$field-92/* Not supported: data() */;

		[Token(Token = "0x4001820")]
		[MetadataOffset(Offset = "0x778DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F97")]
		internal static $ArrayType$131 $$field-93/* Not supported: data() */;

		[Token(Token = "0x4001821")]
		[MetadataOffset(Offset = "0x778E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x301A")]
		internal static $ArrayType$131 $$field-94/* Not supported: data() */;

		[Token(Token = "0x4001822")]
		[MetadataOffset(Offset = "0x778EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x309D")]
		internal static $ArrayType$131 $$field-95/* Not supported: data() */;

		[Token(Token = "0x4001823")]
		[MetadataOffset(Offset = "0x778F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3120")]
		internal static $ArrayType$131 $$field-96/* Not supported: data() */;

		[Token(Token = "0x4001824")]
		[MetadataOffset(Offset = "0x778FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31A3")]
		internal static $ArrayType$131 $$field-97/* Not supported: data() */;

		[Token(Token = "0x4001825")]
		[MetadataOffset(Offset = "0x77903D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3226")]
		internal static $ArrayType$131 $$field-98/* Not supported: data() */;

		[Token(Token = "0x4001826")]
		[MetadataOffset(Offset = "0x7790C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32A9")]
		internal static $ArrayType$131 $$field-99/* Not supported: data() */;

		[Token(Token = "0x4001827")]
		[MetadataOffset(Offset = "0x779143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x332C")]
		internal static $ArrayType$131 $$field-100/* Not supported: data() */;

		[Token(Token = "0x4001828")]
		[MetadataOffset(Offset = "0x7791C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33AF")]
		internal static $ArrayType$131 $$field-101/* Not supported: data() */;

		[Token(Token = "0x4001829")]
		[MetadataOffset(Offset = "0x779249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3432")]
		internal static $ArrayType$131 $$field-102/* Not supported: data() */;

		[Token(Token = "0x400182A")]
		[MetadataOffset(Offset = "0x7792CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34B5")]
		internal static $ArrayType$131 $$field-103/* Not supported: data() */;

		[Token(Token = "0x400182B")]
		[MetadataOffset(Offset = "0x77934F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3538")]
		internal static $ArrayType$131 $$field-104/* Not supported: data() */;

		[Token(Token = "0x400182C")]
		[MetadataOffset(Offset = "0x7793D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35BB")]
		internal static $ArrayType$131 $$field-105/* Not supported: data() */;

		[Token(Token = "0x400182D")]
		[MetadataOffset(Offset = "0x779455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x363E")]
		internal static $ArrayType$131 $$field-106/* Not supported: data() */;

		[Token(Token = "0x400182E")]
		[MetadataOffset(Offset = "0x7794D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C1")]
		internal static $ArrayType$131 $$field-107/* Not supported: data() */;

		[Token(Token = "0x400182F")]
		[MetadataOffset(Offset = "0x77955B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3744")]
		internal static $ArrayType$131 $$field-108/* Not supported: data() */;

		[Token(Token = "0x4001830")]
		[MetadataOffset(Offset = "0x7795DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C7")]
		internal static $ArrayType$131 $$field-109/* Not supported: data() */;

		[Token(Token = "0x4001831")]
		[MetadataOffset(Offset = "0x779661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384A")]
		internal static $ArrayType$131 $$field-110/* Not supported: data() */;

		[Token(Token = "0x4001832")]
		[MetadataOffset(Offset = "0x7796E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38CD")]
		internal static $ArrayType$131 $$field-111/* Not supported: data() */;

		[Token(Token = "0x4001833")]
		[MetadataOffset(Offset = "0x779767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3950")]
		internal static $ArrayType$131 $$field-112/* Not supported: data() */;

		[Token(Token = "0x4001834")]
		[MetadataOffset(Offset = "0x7797EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39D3")]
		internal static $ArrayType$131 $$field-113/* Not supported: data() */;

		[Token(Token = "0x4001835")]
		[MetadataOffset(Offset = "0x77986D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A56")]
		internal static $ArrayType$131 $$field-114/* Not supported: data() */;

		[Token(Token = "0x4001836")]
		[MetadataOffset(Offset = "0x7798F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AD9")]
		internal static $ArrayType$131 $$field-115/* Not supported: data() */;

		[Token(Token = "0x4001837")]
		[MetadataOffset(Offset = "0x779973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B5C")]
		internal static $ArrayType$131 $$field-116/* Not supported: data() */;

		[Token(Token = "0x4001838")]
		[MetadataOffset(Offset = "0x7799F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BDF")]
		internal static $ArrayType$131 $$field-117/* Not supported: data() */;

		[Token(Token = "0x4001839")]
		[MetadataOffset(Offset = "0x779A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C62")]
		internal static $ArrayType$131 $$field-118/* Not supported: data() */;

		[Token(Token = "0x400183A")]
		[MetadataOffset(Offset = "0x779AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CE5")]
		internal static $ArrayType$131 $$field-119/* Not supported: data() */;

		[Token(Token = "0x400183B")]
		[MetadataOffset(Offset = "0x779B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D68")]
		internal static $ArrayType$131 $$field-120/* Not supported: data() */;

		[Token(Token = "0x400183C")]
		[MetadataOffset(Offset = "0x779C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DEB")]
		internal static $ArrayType$131 $$field-121/* Not supported: data() */;

		[Token(Token = "0x400183D")]
		[MetadataOffset(Offset = "0x779C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E6E")]
		internal static $ArrayType$131 $$field-122/* Not supported: data() */;

		[Token(Token = "0x400183E")]
		[MetadataOffset(Offset = "0x779D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EF1")]
		internal static $ArrayType$131 $$field-123/* Not supported: data() */;

		[Token(Token = "0x400183F")]
		[MetadataOffset(Offset = "0x779D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F74")]
		internal static $ArrayType$131 $$field-124/* Not supported: data() */;

		[Token(Token = "0x4001840")]
		[MetadataOffset(Offset = "0x779E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FF7")]
		internal static $ArrayType$131 $$field-125/* Not supported: data() */;

		[Token(Token = "0x4001841")]
		[MetadataOffset(Offset = "0x779E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x407A")]
		internal static $ArrayType$131 $$field-126/* Not supported: data() */;

		[Token(Token = "0x4001842")]
		[MetadataOffset(Offset = "0x779F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40FD")]
		internal static $ArrayType$131 $$field-127/* Not supported: data() */;

		[Token(Token = "0x4001843")]
		[MetadataOffset(Offset = "0x779F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4180")]
		internal static $ArrayType$131 $$field-128/* Not supported: data() */;

		[Token(Token = "0x4001844")]
		[MetadataOffset(Offset = "0x77A01A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4203")]
		internal static $ArrayType$131 $$field-129/* Not supported: data() */;

		[Token(Token = "0x4001845")]
		[MetadataOffset(Offset = "0x77A09D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4286")]
		internal static $ArrayType$131 $$field-130/* Not supported: data() */;

		[Token(Token = "0x4001846")]
		[MetadataOffset(Offset = "0x77A120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4309")]
		internal static $ArrayType$131 $$field-131/* Not supported: data() */;

		[Token(Token = "0x4001847")]
		[MetadataOffset(Offset = "0x77A1A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438C")]
		internal static $ArrayType$131 $$field-132/* Not supported: data() */;

		[Token(Token = "0x4001848")]
		[MetadataOffset(Offset = "0x77A226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440F")]
		internal static $ArrayType$131 $$field-133/* Not supported: data() */;

		[Token(Token = "0x4001849")]
		[MetadataOffset(Offset = "0x77A2A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4492")]
		internal static $ArrayType$131 $$field-134/* Not supported: data() */;

		[Token(Token = "0x400184A")]
		[MetadataOffset(Offset = "0x77A32C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4515")]
		internal static $ArrayType$131 $$field-135/* Not supported: data() */;

		[Token(Token = "0x400184B")]
		[MetadataOffset(Offset = "0x77A3AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4598")]
		internal static $ArrayType$131 $$field-136/* Not supported: data() */;

		[Token(Token = "0x400184C")]
		[MetadataOffset(Offset = "0x77A432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x461B")]
		internal static $ArrayType$131 $$field-137/* Not supported: data() */;

		[Token(Token = "0x400184D")]
		[MetadataOffset(Offset = "0x77A4B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x469E")]
		internal static $ArrayType$131 $$field-138/* Not supported: data() */;

		[Token(Token = "0x400184E")]
		[MetadataOffset(Offset = "0x77A538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4721")]
		internal static $ArrayType$131 $$field-139/* Not supported: data() */;

		[Token(Token = "0x400184F")]
		[MetadataOffset(Offset = "0x77A5BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47A4")]
		internal static $ArrayType$131 $$field-140/* Not supported: data() */;

		[Token(Token = "0x4001850")]
		[MetadataOffset(Offset = "0x77A63E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4827")]
		internal static $ArrayType$131 $$field-141/* Not supported: data() */;

		[Token(Token = "0x4001851")]
		[MetadataOffset(Offset = "0x77A6C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48AA")]
		internal static $ArrayType$131 $$field-142/* Not supported: data() */;

		[Token(Token = "0x4001852")]
		[MetadataOffset(Offset = "0x77A744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x492D")]
		internal static $ArrayType$131 $$field-143/* Not supported: data() */;

		[Token(Token = "0x4001853")]
		[MetadataOffset(Offset = "0x77A7C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49B0")]
		internal static $ArrayType$131 $$field-144/* Not supported: data() */;

		[Token(Token = "0x4001854")]
		[MetadataOffset(Offset = "0x77A84A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A33")]
		internal static $ArrayType$131 $$field-145/* Not supported: data() */;

		[Token(Token = "0x4001855")]
		[MetadataOffset(Offset = "0x77A8CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AB6")]
		internal static $ArrayType$131 $$field-146/* Not supported: data() */;

		[Token(Token = "0x4001856")]
		[MetadataOffset(Offset = "0x77A950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B39")]
		internal static $ArrayType$131 $$field-147/* Not supported: data() */;

		[Token(Token = "0x4001857")]
		[MetadataOffset(Offset = "0x77A9D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BBC")]
		internal static $ArrayType$131 $$field-148/* Not supported: data() */;

		[Token(Token = "0x4001858")]
		[MetadataOffset(Offset = "0x77AA56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C3F")]
		internal static $ArrayType$131 $$field-149/* Not supported: data() */;

		[Token(Token = "0x4001859")]
		[MetadataOffset(Offset = "0x77AAD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC2")]
		internal static $ArrayType$131 $$field-150/* Not supported: data() */;

		[Token(Token = "0x400185A")]
		[MetadataOffset(Offset = "0x77AB5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D45")]
		internal static $ArrayType$131 $$field-151/* Not supported: data() */;

		[Token(Token = "0x400185B")]
		[MetadataOffset(Offset = "0x77ABDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4DC8")]
		internal static $ArrayType$131 $$field-152/* Not supported: data() */;

		[Token(Token = "0x400185C")]
		[MetadataOffset(Offset = "0x77AC62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E4B")]
		internal static $ArrayType$131 $$field-153/* Not supported: data() */;

		[Token(Token = "0x400185D")]
		[MetadataOffset(Offset = "0x77ACE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4ECE")]
		internal static $ArrayType$131 $$field-154/* Not supported: data() */;

		[Token(Token = "0x400185E")]
		[MetadataOffset(Offset = "0x77AD68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F51")]
		internal static $ArrayType$131 $$field-155/* Not supported: data() */;

		[Token(Token = "0x400185F")]
		[MetadataOffset(Offset = "0x77ADEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4FD4")]
		internal static $ArrayType$131 $$field-156/* Not supported: data() */;

		[Token(Token = "0x4001860")]
		[MetadataOffset(Offset = "0x77AE6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5057")]
		internal static $ArrayType$131 $$field-157/* Not supported: data() */;

		[Token(Token = "0x4001861")]
		[MetadataOffset(Offset = "0x77AEF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50DA")]
		internal static $ArrayType$131 $$field-158/* Not supported: data() */;

		[Token(Token = "0x4001862")]
		[MetadataOffset(Offset = "0x77AF74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x515D")]
		internal static $ArrayType$131 $$field-159/* Not supported: data() */;

		[Token(Token = "0x4001863")]
		[MetadataOffset(Offset = "0x77AFF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51E0")]
		internal static $ArrayType$131 $$field-160/* Not supported: data() */;

		[Token(Token = "0x4001864")]
		[MetadataOffset(Offset = "0x77B07A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5263")]
		internal static $ArrayType$131 $$field-161/* Not supported: data() */;

		[Token(Token = "0x4001865")]
		[MetadataOffset(Offset = "0x77B0FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52E6")]
		internal static $ArrayType$131 $$field-162/* Not supported: data() */;

		[Token(Token = "0x4001866")]
		[MetadataOffset(Offset = "0x77B180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5369")]
		internal static $ArrayType$131 $$field-163/* Not supported: data() */;

		[Token(Token = "0x4001867")]
		[MetadataOffset(Offset = "0x77B203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53EC")]
		internal static $ArrayType$131 $$field-164/* Not supported: data() */;

		[Token(Token = "0x4001868")]
		[MetadataOffset(Offset = "0x77B286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x546F")]
		internal static $ArrayType$131 $$field-165/* Not supported: data() */;

		[Token(Token = "0x4001869")]
		[MetadataOffset(Offset = "0x77B309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54F2")]
		internal static $ArrayType$131 $$field-166/* Not supported: data() */;

		[Token(Token = "0x400186A")]
		[MetadataOffset(Offset = "0x77B38C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5575")]
		internal static $ArrayType$131 $$field-167/* Not supported: data() */;

		[Token(Token = "0x400186B")]
		[MetadataOffset(Offset = "0x77B40F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55F8")]
		internal static $ArrayType$131 $$field-168/* Not supported: data() */;

		[Token(Token = "0x400186C")]
		[MetadataOffset(Offset = "0x77B492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x567B")]
		internal static $ArrayType$131 $$field-169/* Not supported: data() */;

		[Token(Token = "0x400186D")]
		[MetadataOffset(Offset = "0x77B515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56FE")]
		internal static $ArrayType$131 $$field-170/* Not supported: data() */;

		[Token(Token = "0x400186E")]
		[MetadataOffset(Offset = "0x77B598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5781")]
		internal static $ArrayType$131 $$field-171/* Not supported: data() */;

		[Token(Token = "0x400186F")]
		[MetadataOffset(Offset = "0x77B61B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5804")]
		internal static $ArrayType$131 $$field-172/* Not supported: data() */;

		[Token(Token = "0x4001870")]
		[MetadataOffset(Offset = "0x77B69E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5887")]
		internal static $ArrayType$131 $$field-173/* Not supported: data() */;

		[Token(Token = "0x4001871")]
		[MetadataOffset(Offset = "0x77B721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x590A")]
		internal static $ArrayType$131 $$field-174/* Not supported: data() */;

		[Token(Token = "0x4001872")]
		[MetadataOffset(Offset = "0x77B7A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x598D")]
		internal static $ArrayType$131 $$field-175/* Not supported: data() */;

		[Token(Token = "0x4001873")]
		[MetadataOffset(Offset = "0x77B827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A10")]
		internal static $ArrayType$131 $$field-176/* Not supported: data() */;

		[Token(Token = "0x4001874")]
		[MetadataOffset(Offset = "0x77B8AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A93")]
		internal static $ArrayType$131 $$field-177/* Not supported: data() */;

		[Token(Token = "0x4001875")]
		[MetadataOffset(Offset = "0x77B92D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B16")]
		internal static $ArrayType$131 $$field-178/* Not supported: data() */;

		[Token(Token = "0x4001876")]
		[MetadataOffset(Offset = "0x77B9B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B99")]
		internal static $ArrayType$131 $$field-179/* Not supported: data() */;

		[Token(Token = "0x4001877")]
		[MetadataOffset(Offset = "0x77BA33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C1C")]
		internal static $ArrayType$131 $$field-180/* Not supported: data() */;

		[Token(Token = "0x4001878")]
		[MetadataOffset(Offset = "0x77BAB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C9F")]
		internal static $ArrayType$131 $$field-181/* Not supported: data() */;

		[Token(Token = "0x4001879")]
		[MetadataOffset(Offset = "0x77BB39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D22")]
		internal static $ArrayType$131 $$field-182/* Not supported: data() */;

		[Token(Token = "0x400187A")]
		[MetadataOffset(Offset = "0x77BBBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5DA5")]
		internal static $ArrayType$131 $$field-183/* Not supported: data() */;

		[Token(Token = "0x400187B")]
		[MetadataOffset(Offset = "0x77BC3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E28")]
		internal static $ArrayType$131 $$field-184/* Not supported: data() */;

		[Token(Token = "0x400187C")]
		[MetadataOffset(Offset = "0x77BCC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5EAB")]
		internal static $ArrayType$131 $$field-185/* Not supported: data() */;

		[Token(Token = "0x400187D")]
		[MetadataOffset(Offset = "0x77BD45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F2E")]
		internal static $ArrayType$131 $$field-186/* Not supported: data() */;

		[Token(Token = "0x400187E")]
		[MetadataOffset(Offset = "0x77BDC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5FB1")]
		internal static $ArrayType$131 $$field-187/* Not supported: data() */;

		[Token(Token = "0x400187F")]
		[MetadataOffset(Offset = "0x77BE4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6034")]
		internal static $ArrayType$131 $$field-188/* Not supported: data() */;

		[Token(Token = "0x4001880")]
		[MetadataOffset(Offset = "0x77BECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60B7")]
		internal static $ArrayType$131 $$field-189/* Not supported: data() */;

		[Token(Token = "0x4001881")]
		[MetadataOffset(Offset = "0x77BF51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x613A")]
		internal static $ArrayType$131 $$field-190/* Not supported: data() */;

		[Token(Token = "0x4001882")]
		[MetadataOffset(Offset = "0x77BFD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61BD")]
		internal static $ArrayType$131 $$field-191/* Not supported: data() */;

		[Token(Token = "0x4001883")]
		[MetadataOffset(Offset = "0x77C057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6240")]
		internal static $ArrayType$131 $$field-192/* Not supported: data() */;

		[Token(Token = "0x4001884")]
		[MetadataOffset(Offset = "0x77C0DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62C3")]
		internal static $ArrayType$131 $$field-193/* Not supported: data() */;

		[Token(Token = "0x4001885")]
		[MetadataOffset(Offset = "0x77C15D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6346")]
		internal static $ArrayType$131 $$field-194/* Not supported: data() */;

		[Token(Token = "0x4001886")]
		[MetadataOffset(Offset = "0x77C1E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63C9")]
		internal static $ArrayType$131 $$field-195/* Not supported: data() */;

		[Token(Token = "0x4001887")]
		[MetadataOffset(Offset = "0x77C263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x644C")]
		internal static $ArrayType$131 $$field-196/* Not supported: data() */;

		[Token(Token = "0x4001888")]
		[MetadataOffset(Offset = "0x77C2E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64CF")]
		internal static $ArrayType$131 $$field-197/* Not supported: data() */;

		[Token(Token = "0x4001889")]
		[MetadataOffset(Offset = "0x77C369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6552")]
		internal static $ArrayType$131 $$field-198/* Not supported: data() */;

		[Token(Token = "0x400188A")]
		[MetadataOffset(Offset = "0x77C3EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65D5")]
		internal static $ArrayType$131 $$field-199/* Not supported: data() */;

		[Token(Token = "0x400188B")]
		[MetadataOffset(Offset = "0x77C46F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6658")]
		internal static $ArrayType$131 $$field-200/* Not supported: data() */;

		[Token(Token = "0x400188C")]
		[MetadataOffset(Offset = "0x77C4F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66DB")]
		internal static $ArrayType$131 $$field-201/* Not supported: data() */;

		[Token(Token = "0x400188D")]
		[MetadataOffset(Offset = "0x77C575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x675E")]
		internal static $ArrayType$131 $$field-202/* Not supported: data() */;

		[Token(Token = "0x400188E")]
		[MetadataOffset(Offset = "0x77C5F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67E1")]
		internal static $ArrayType$131 $$field-203/* Not supported: data() */;

		[Token(Token = "0x400188F")]
		[MetadataOffset(Offset = "0x77C67B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6864")]
		internal static $ArrayType$131 $$field-204/* Not supported: data() */;

		[Token(Token = "0x4001890")]
		[MetadataOffset(Offset = "0x77C6FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68E7")]
		internal static $ArrayType$131 $$field-205/* Not supported: data() */;

		[Token(Token = "0x4001891")]
		[MetadataOffset(Offset = "0x77C781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x696A")]
		internal static $ArrayType$131 $$field-206/* Not supported: data() */;

		[Token(Token = "0x4001892")]
		[MetadataOffset(Offset = "0x77C804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69ED")]
		internal static $ArrayType$131 $$field-207/* Not supported: data() */;

		[Token(Token = "0x4001893")]
		[MetadataOffset(Offset = "0x77C887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A70")]
		internal static $ArrayType$131 $$field-208/* Not supported: data() */;

		[Token(Token = "0x4001894")]
		[MetadataOffset(Offset = "0x77C90A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6AF3")]
		internal static $ArrayType$131 $$field-209/* Not supported: data() */;

		[Token(Token = "0x4001895")]
		[MetadataOffset(Offset = "0x77C98D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B76")]
		internal static $ArrayType$131 $$field-210/* Not supported: data() */;

		[Token(Token = "0x4001896")]
		[MetadataOffset(Offset = "0x77CA10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6BF9")]
		internal static $ArrayType$131 $$field-211/* Not supported: data() */;

		[Token(Token = "0x4001897")]
		[MetadataOffset(Offset = "0x77CA93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C7C")]
		internal static $ArrayType$131 $$field-212/* Not supported: data() */;

		[Token(Token = "0x4001898")]
		[MetadataOffset(Offset = "0x77CB16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6CFF")]
		internal static $ArrayType$131 $$field-213/* Not supported: data() */;

		[Token(Token = "0x4001899")]
		[MetadataOffset(Offset = "0x77CB99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D82")]
		internal static $ArrayType$131 $$field-214/* Not supported: data() */;

		[Token(Token = "0x400189A")]
		[MetadataOffset(Offset = "0x77CC1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E05")]
		internal static $ArrayType$131 $$field-215/* Not supported: data() */;

		[Token(Token = "0x400189B")]
		[MetadataOffset(Offset = "0x77CC9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E88")]
		internal static $ArrayType$131 $$field-216/* Not supported: data() */;

		[Token(Token = "0x400189C")]
		[MetadataOffset(Offset = "0x77CD22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F0B")]
		internal static $ArrayType$131 $$field-217/* Not supported: data() */;

		[Token(Token = "0x400189D")]
		[MetadataOffset(Offset = "0x77CDA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F8E")]
		internal static $ArrayType$131 $$field-218/* Not supported: data() */;

		[Token(Token = "0x400189E")]
		[MetadataOffset(Offset = "0x77CE28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7011")]
		internal static $ArrayType$131 $$field-219/* Not supported: data() */;

		[Token(Token = "0x400189F")]
		[MetadataOffset(Offset = "0x77CEAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7094")]
		internal static $ArrayType$131 $$field-220/* Not supported: data() */;

		[Token(Token = "0x40018A0")]
		[MetadataOffset(Offset = "0x77CF2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7117")]
		internal static $ArrayType$131 $$field-221/* Not supported: data() */;

		[Token(Token = "0x40018A1")]
		[MetadataOffset(Offset = "0x77CFB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x719A")]
		internal static $ArrayType$131 $$field-222/* Not supported: data() */;

		[Token(Token = "0x40018A2")]
		[MetadataOffset(Offset = "0x77D034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x721D")]
		internal static $ArrayType$131 $$field-223/* Not supported: data() */;

		[Token(Token = "0x40018A3")]
		[MetadataOffset(Offset = "0x77D0B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72A0")]
		internal static $ArrayType$131 $$field-224/* Not supported: data() */;

		[Token(Token = "0x40018A4")]
		[MetadataOffset(Offset = "0x77D13A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7323")]
		internal static $ArrayType$131 $$field-225/* Not supported: data() */;

		[Token(Token = "0x40018A5")]
		[MetadataOffset(Offset = "0x77D1BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73A6")]
		internal static $ArrayType$131 $$field-226/* Not supported: data() */;

		[Token(Token = "0x40018A6")]
		[MetadataOffset(Offset = "0x77D240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7429")]
		internal static $ArrayType$131 $$field-227/* Not supported: data() */;

		[Token(Token = "0x40018A7")]
		[MetadataOffset(Offset = "0x77D2C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74AC")]
		internal static $ArrayType$131 $$field-228/* Not supported: data() */;

		[Token(Token = "0x40018A8")]
		[MetadataOffset(Offset = "0x77D346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x752F")]
		internal static $ArrayType$131 $$field-229/* Not supported: data() */;

		[Token(Token = "0x40018A9")]
		[MetadataOffset(Offset = "0x77D3C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75B2")]
		internal static $ArrayType$131 $$field-230/* Not supported: data() */;

		[Token(Token = "0x40018AA")]
		[MetadataOffset(Offset = "0x77D44C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7635")]
		internal static $ArrayType$131 $$field-231/* Not supported: data() */;

		[Token(Token = "0x40018AB")]
		[MetadataOffset(Offset = "0x77D4CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76B8")]
		internal static $ArrayType$131 $$field-232/* Not supported: data() */;

		[Token(Token = "0x40018AC")]
		[MetadataOffset(Offset = "0x77D552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x773B")]
		internal static $ArrayType$131 $$field-233/* Not supported: data() */;

		[Token(Token = "0x40018AD")]
		[MetadataOffset(Offset = "0x77D5D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77BE")]
		internal static $ArrayType$131 $$field-234/* Not supported: data() */;

		[Token(Token = "0x40018AE")]
		[MetadataOffset(Offset = "0x77D658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7841")]
		internal static $ArrayType$131 $$field-235/* Not supported: data() */;

		[Token(Token = "0x40018AF")]
		[MetadataOffset(Offset = "0x77D6DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78C4")]
		internal static $ArrayType$131 $$field-236/* Not supported: data() */;

		[Token(Token = "0x40018B0")]
		[MetadataOffset(Offset = "0x77D75E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7947")]
		internal static $ArrayType$131 $$field-237/* Not supported: data() */;

		[Token(Token = "0x40018B1")]
		[MetadataOffset(Offset = "0x77D7E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79CA")]
		internal static $ArrayType$131 $$field-238/* Not supported: data() */;

		[Token(Token = "0x40018B2")]
		[MetadataOffset(Offset = "0x77D864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A4D")]
		internal static $ArrayType$131 $$field-239/* Not supported: data() */;

		[Token(Token = "0x40018B3")]
		[MetadataOffset(Offset = "0x77D8E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7AD0")]
		internal static $ArrayType$131 $$field-240/* Not supported: data() */;

		[Token(Token = "0x40018B4")]
		[MetadataOffset(Offset = "0x77D96A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B53")]
		internal static $ArrayType$131 $$field-241/* Not supported: data() */;

		[Token(Token = "0x40018B5")]
		[MetadataOffset(Offset = "0x77D9ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7BD6")]
		internal static $ArrayType$131 $$field-242/* Not supported: data() */;

		[Token(Token = "0x40018B6")]
		[MetadataOffset(Offset = "0x77DA70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C59")]
		internal static $ArrayType$131 $$field-243/* Not supported: data() */;

		[Token(Token = "0x40018B7")]
		[MetadataOffset(Offset = "0x77DAF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7CDC")]
		internal static $ArrayType$131 $$field-244/* Not supported: data() */;

		[Token(Token = "0x40018B8")]
		[MetadataOffset(Offset = "0x77DB76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D5F")]
		internal static $ArrayType$131 $$field-245/* Not supported: data() */;

		[Token(Token = "0x40018B9")]
		[MetadataOffset(Offset = "0x77DBF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7DE2")]
		internal static $ArrayType$131 $$field-246/* Not supported: data() */;

		[Token(Token = "0x40018BA")]
		[MetadataOffset(Offset = "0x77DC7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E65")]
		internal static $ArrayType$131 $$field-247/* Not supported: data() */;

		[Token(Token = "0x40018BB")]
		[MetadataOffset(Offset = "0x77DCFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7EE8")]
		internal static $ArrayType$131 $$field-248/* Not supported: data() */;

		[Token(Token = "0x40018BC")]
		[MetadataOffset(Offset = "0x77DD82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F6B")]
		internal static $ArrayType$131 $$field-249/* Not supported: data() */;

		[Token(Token = "0x40018BD")]
		[MetadataOffset(Offset = "0x77DE05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7FEE")]
		internal static $ArrayType$131 $$field-250/* Not supported: data() */;

		[Token(Token = "0x40018BE")]
		[MetadataOffset(Offset = "0x77DE88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8071")]
		internal static $ArrayType$131 $$field-251/* Not supported: data() */;

		[Token(Token = "0x40018BF")]
		[MetadataOffset(Offset = "0x77DF0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80F4")]
		internal static $ArrayType$131 $$field-252/* Not supported: data() */;

		[Token(Token = "0x40018C0")]
		[MetadataOffset(Offset = "0x77DF8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8177")]
		internal static $ArrayType$131 $$field-253/* Not supported: data() */;

		[Token(Token = "0x40018C1")]
		[MetadataOffset(Offset = "0x77E011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81FA")]
		internal static $ArrayType$131 $$field-254/* Not supported: data() */;

		[Token(Token = "0x40018C2")]
		[MetadataOffset(Offset = "0x77E094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x827D")]
		internal static $ArrayType$131 $$field-255/* Not supported: data() */;

		[Token(Token = "0x40018C3")]
		[MetadataOffset(Offset = "0x77E117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8300")]
		internal static $ArrayType$131 $$field-256/* Not supported: data() */;

		[Token(Token = "0x40018C4")]
		[MetadataOffset(Offset = "0x77E19A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8383")]
		internal static $ArrayType$131 $$field-257/* Not supported: data() */;

		[Token(Token = "0x40018C5")]
		[MetadataOffset(Offset = "0x77E21D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8406")]
		internal static $ArrayType$131 $$field-258/* Not supported: data() */;

		[Token(Token = "0x40018C6")]
		[MetadataOffset(Offset = "0x77E2A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8489")]
		internal static $ArrayType$131 $$field-259/* Not supported: data() */;

		[Token(Token = "0x40018C7")]
		[MetadataOffset(Offset = "0x77E323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x850C")]
		internal static $ArrayType$131 $$field-260/* Not supported: data() */;

		[Token(Token = "0x40018C8")]
		[MetadataOffset(Offset = "0x77E3A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x858F")]
		internal static $ArrayType$131 $$field-261/* Not supported: data() */;

		[Token(Token = "0x40018C9")]
		[MetadataOffset(Offset = "0x77E429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8612")]
		internal static $ArrayType$131 $$field-262/* Not supported: data() */;

		[Token(Token = "0x40018CA")]
		[MetadataOffset(Offset = "0x77E4AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8695")]
		internal static $ArrayType$131 $$field-263/* Not supported: data() */;

		[Token(Token = "0x40018CB")]
		[MetadataOffset(Offset = "0x77E52F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8718")]
		internal static $ArrayType$131 $$field-264/* Not supported: data() */;

		[Token(Token = "0x40018CC")]
		[MetadataOffset(Offset = "0x77E5B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x879B")]
		internal static $ArrayType$131 $$field-265/* Not supported: data() */;

		[Token(Token = "0x40018CD")]
		[MetadataOffset(Offset = "0x77E635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x881E")]
		internal static $ArrayType$131 $$field-266/* Not supported: data() */;

		[Token(Token = "0x40018CE")]
		[MetadataOffset(Offset = "0x77E6B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88A1")]
		internal static $ArrayType$131 $$field-267/* Not supported: data() */;

		[Token(Token = "0x40018CF")]
		[MetadataOffset(Offset = "0x77E73B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8924")]
		internal static $ArrayType$131 $$field-268/* Not supported: data() */;

		[Token(Token = "0x40018D0")]
		[MetadataOffset(Offset = "0x77E7BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89A7")]
		internal static $ArrayType$131 $$field-269/* Not supported: data() */;

		[Token(Token = "0x40018D1")]
		[MetadataOffset(Offset = "0x77E841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A2A")]
		internal static $ArrayType$131 $$field-270/* Not supported: data() */;

		[Token(Token = "0x40018D2")]
		[MetadataOffset(Offset = "0x77E8C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8AAD")]
		internal static $ArrayType$131 $$field-271/* Not supported: data() */;

		[Token(Token = "0x40018D3")]
		[MetadataOffset(Offset = "0x77E947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B30")]
		internal static $ArrayType$131 $$field-272/* Not supported: data() */;

		[Token(Token = "0x40018D4")]
		[MetadataOffset(Offset = "0x77E9CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8BB3")]
		internal static $ArrayType$131 $$field-273/* Not supported: data() */;

		[Token(Token = "0x40018D5")]
		[MetadataOffset(Offset = "0x77EA4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C36")]
		internal static $ArrayType$131 $$field-274/* Not supported: data() */;

		[Token(Token = "0x40018D6")]
		[MetadataOffset(Offset = "0x77EAD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8CB9")]
		internal static $ArrayType$131 $$field-275/* Not supported: data() */;

		[Token(Token = "0x40018D7")]
		[MetadataOffset(Offset = "0x77EB53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D3C")]
		internal static $ArrayType$131 $$field-276/* Not supported: data() */;

		[Token(Token = "0x40018D8")]
		[MetadataOffset(Offset = "0x77EBD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8DBF")]
		internal static $ArrayType$131 $$field-277/* Not supported: data() */;

		[Token(Token = "0x40018D9")]
		[MetadataOffset(Offset = "0x77EC59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E42")]
		internal static $ArrayType$131 $$field-278/* Not supported: data() */;

		[Token(Token = "0x40018DA")]
		[MetadataOffset(Offset = "0x77ECDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8EC5")]
		internal static $ArrayType$131 $$field-279/* Not supported: data() */;

		[Token(Token = "0x40018DB")]
		[MetadataOffset(Offset = "0x77ED5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8F48")]
		internal static $ArrayType$131 $$field-280/* Not supported: data() */;

		[Token(Token = "0x40018DC")]
		[MetadataOffset(Offset = "0x77EDE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8FCB")]
		internal static $ArrayType$131 $$field-281/* Not supported: data() */;

		[Token(Token = "0x40018DD")]
		[MetadataOffset(Offset = "0x77EE65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x904E")]
		internal static $ArrayType$131 $$field-282/* Not supported: data() */;

		[Token(Token = "0x40018DE")]
		[MetadataOffset(Offset = "0x77EEE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90D1")]
		internal static $ArrayType$131 $$field-283/* Not supported: data() */;

		[Token(Token = "0x40018DF")]
		[MetadataOffset(Offset = "0x77EF6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9154")]
		internal static $ArrayType$131 $$field-284/* Not supported: data() */;

		[Token(Token = "0x40018E0")]
		[MetadataOffset(Offset = "0x77EFEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91D7")]
		internal static $ArrayType$131 $$field-285/* Not supported: data() */;

		[Token(Token = "0x40018E1")]
		[MetadataOffset(Offset = "0x77F071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x925A")]
		internal static $ArrayType$131 $$field-286/* Not supported: data() */;

		[Token(Token = "0x40018E2")]
		[MetadataOffset(Offset = "0x77F0F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92DD")]
		internal static $ArrayType$131 $$field-287/* Not supported: data() */;

		[Token(Token = "0x40018E3")]
		[MetadataOffset(Offset = "0x77F177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9360")]
		internal static $ArrayType$131 $$field-288/* Not supported: data() */;

		[Token(Token = "0x40018E4")]
		[MetadataOffset(Offset = "0x77F1FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93E3")]
		internal static $ArrayType$131 $$field-289/* Not supported: data() */;

		[Token(Token = "0x40018E5")]
		[MetadataOffset(Offset = "0x77F27D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9466")]
		internal static $ArrayType$131 $$field-290/* Not supported: data() */;

		[Token(Token = "0x40018E6")]
		[MetadataOffset(Offset = "0x77F300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94E9")]
		internal static $ArrayType$131 $$field-291/* Not supported: data() */;

		[Token(Token = "0x40018E7")]
		[MetadataOffset(Offset = "0x77F383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x956C")]
		internal static $ArrayType$131 $$field-292/* Not supported: data() */;

		[Token(Token = "0x40018E8")]
		[MetadataOffset(Offset = "0x77F406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95EF")]
		internal static $ArrayType$131 $$field-293/* Not supported: data() */;

		[Token(Token = "0x40018E9")]
		[MetadataOffset(Offset = "0x77F489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9672")]
		internal static $ArrayType$131 $$field-294/* Not supported: data() */;

		[Token(Token = "0x40018EA")]
		[MetadataOffset(Offset = "0x77F50C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96F5")]
		internal static $ArrayType$131 $$field-295/* Not supported: data() */;

		[Token(Token = "0x40018EB")]
		[MetadataOffset(Offset = "0x77F58F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9778")]
		internal static $ArrayType$131 $$field-296/* Not supported: data() */;

		[Token(Token = "0x40018EC")]
		[MetadataOffset(Offset = "0x77F612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x97FB")]
		internal static $ArrayType$131 $$field-297/* Not supported: data() */;

		[Token(Token = "0x40018ED")]
		[MetadataOffset(Offset = "0x77F695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987E")]
		internal static $ArrayType$131 $$field-298/* Not supported: data() */;

		[Token(Token = "0x40018EE")]
		[MetadataOffset(Offset = "0x77F718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9901")]
		internal static $ArrayType$131 $$field-299/* Not supported: data() */;

		[Token(Token = "0x40018EF")]
		[MetadataOffset(Offset = "0x77F79B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9984")]
		internal static $ArrayType$131 $$field-300/* Not supported: data() */;

		[Token(Token = "0x40018F0")]
		[MetadataOffset(Offset = "0x77F81E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A07")]
		internal static $ArrayType$131 $$field-301/* Not supported: data() */;

		[Token(Token = "0x40018F1")]
		[MetadataOffset(Offset = "0x77F8A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A8A")]
		internal static $ArrayType$131 $$field-302/* Not supported: data() */;

		[Token(Token = "0x40018F2")]
		[MetadataOffset(Offset = "0x77F924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B0D")]
		internal static $ArrayType$131 $$field-303/* Not supported: data() */;

		[Token(Token = "0x40018F3")]
		[MetadataOffset(Offset = "0x77F9A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B90")]
		internal static $ArrayType$131 $$field-304/* Not supported: data() */;

		[Token(Token = "0x40018F4")]
		[MetadataOffset(Offset = "0x77FA2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C13")]
		internal static $ArrayType$131 $$field-305/* Not supported: data() */;

		[Token(Token = "0x40018F5")]
		[MetadataOffset(Offset = "0x77FAAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C96")]
		internal static $ArrayType$131 $$field-306/* Not supported: data() */;

		[Token(Token = "0x40018F6")]
		[MetadataOffset(Offset = "0x77FB30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D19")]
		internal static $ArrayType$131 $$field-307/* Not supported: data() */;

		[Token(Token = "0x40018F7")]
		[MetadataOffset(Offset = "0x77FBB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D9C")]
		internal static $ArrayType$131 $$field-308/* Not supported: data() */;

		[Token(Token = "0x40018F8")]
		[MetadataOffset(Offset = "0x77FC36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E1F")]
		internal static $ArrayType$131 $$field-309/* Not supported: data() */;

		[Token(Token = "0x40018F9")]
		[MetadataOffset(Offset = "0x77FCB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9EA2")]
		internal static $ArrayType$131 $$field-310/* Not supported: data() */;

		[Token(Token = "0x40018FA")]
		[MetadataOffset(Offset = "0x77FD3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F25")]
		internal static $ArrayType$131 $$field-311/* Not supported: data() */;

		[Token(Token = "0x40018FB")]
		[MetadataOffset(Offset = "0x77FDBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FA8")]
		internal static $ArrayType$131 $$field-312/* Not supported: data() */;

		[Token(Token = "0x40018FC")]
		[MetadataOffset(Offset = "0x77FE42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA02B")]
		internal static $ArrayType$131 $$field-313/* Not supported: data() */;

		[Token(Token = "0x40018FD")]
		[MetadataOffset(Offset = "0x77FEC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0AE")]
		internal static $ArrayType$131 $$field-314/* Not supported: data() */;

		[Token(Token = "0x40018FE")]
		[MetadataOffset(Offset = "0x77FF48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA131")]
		internal static $ArrayType$131 $$field-315/* Not supported: data() */;

		[Token(Token = "0x40018FF")]
		[MetadataOffset(Offset = "0x77FFCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1B4")]
		internal static $ArrayType$131 $$field-316/* Not supported: data() */;

		[Token(Token = "0x4001900")]
		[MetadataOffset(Offset = "0x78004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA237")]
		internal static $ArrayType$131 $$field-317/* Not supported: data() */;

		[Token(Token = "0x4001901")]
		[MetadataOffset(Offset = "0x7800D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2BA")]
		internal static $ArrayType$131 $$field-318/* Not supported: data() */;

		[Token(Token = "0x4001902")]
		[MetadataOffset(Offset = "0x780154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA33D")]
		internal static $ArrayType$131 $$field-319/* Not supported: data() */;

		[Token(Token = "0x4001903")]
		[MetadataOffset(Offset = "0x7801D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3C0")]
		internal static $ArrayType$131 $$field-320/* Not supported: data() */;

		[Token(Token = "0x4001904")]
		[MetadataOffset(Offset = "0x78025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA443")]
		internal static $ArrayType$131 $$field-321/* Not supported: data() */;

		[Token(Token = "0x4001905")]
		[MetadataOffset(Offset = "0x7802DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4C6")]
		internal static $ArrayType$131 $$field-322/* Not supported: data() */;

		[Token(Token = "0x4001906")]
		[MetadataOffset(Offset = "0x780360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA549")]
		internal static $ArrayType$131 $$field-323/* Not supported: data() */;

		[Token(Token = "0x4001907")]
		[MetadataOffset(Offset = "0x7803E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5CC")]
		internal static $ArrayType$131 $$field-324/* Not supported: data() */;

		[Token(Token = "0x4001908")]
		[MetadataOffset(Offset = "0x780466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA64F")]
		internal static $ArrayType$131 $$field-325/* Not supported: data() */;

		[Token(Token = "0x4001909")]
		[MetadataOffset(Offset = "0x7804E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6D2")]
		internal static $ArrayType$131 $$field-326/* Not supported: data() */;

		[Token(Token = "0x400190A")]
		[MetadataOffset(Offset = "0x78056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA755")]
		internal static $ArrayType$131 $$field-327/* Not supported: data() */;

		[Token(Token = "0x400190B")]
		[MetadataOffset(Offset = "0x7805EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7D8")]
		internal static $ArrayType$131 $$field-328/* Not supported: data() */;

		[Token(Token = "0x400190C")]
		[MetadataOffset(Offset = "0x780672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA85B")]
		internal static $ArrayType$131 $$field-329/* Not supported: data() */;

		[Token(Token = "0x400190D")]
		[MetadataOffset(Offset = "0x7806F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8DE")]
		internal static $ArrayType$131 $$field-330/* Not supported: data() */;

		[Token(Token = "0x400190E")]
		[MetadataOffset(Offset = "0x780778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA961")]
		internal static $ArrayType$131 $$field-331/* Not supported: data() */;

		[Token(Token = "0x400190F")]
		[MetadataOffset(Offset = "0x7807FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9E4")]
		internal static $ArrayType$131 $$field-332/* Not supported: data() */;

		[Token(Token = "0x4001910")]
		[MetadataOffset(Offset = "0x78087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA67")]
		internal static $ArrayType$131 $$field-333/* Not supported: data() */;

		[Token(Token = "0x4001911")]
		[MetadataOffset(Offset = "0x780901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAAEA")]
		internal static $ArrayType$131 $$field-334/* Not supported: data() */;

		[Token(Token = "0x4001912")]
		[MetadataOffset(Offset = "0x780984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB6D")]
		internal static $ArrayType$131 $$field-335/* Not supported: data() */;

		[Token(Token = "0x4001913")]
		[MetadataOffset(Offset = "0x780A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xABF0")]
		internal static $ArrayType$131 $$field-336/* Not supported: data() */;

		[Token(Token = "0x4001914")]
		[MetadataOffset(Offset = "0x780A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC73")]
		internal static $ArrayType$131 $$field-337/* Not supported: data() */;

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x10A5F70", Offset = "0x10A5F70", VA = "0x10A5F70")]
		public ArrayCopy128()
		{
		}
	}
}
namespace PrivateImplementationDetailsKQPLETG
{
	[StructLayout(3, CharSet = CharSet.Auto)]
	[Token(Token = "0x200046C")]
	public class __BB_OBFUSCATOR_VERSION_3_9_0
	{
	}
}
